/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/angular-q-spread/index.d.ts:

/* TODO: ImportDeclaration in  */
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "angular"

/**
 * This method can be used as a replacement for then. Similarly, it takes two parameters, a callback when all promises are resolved and a callback for failure. The resolve callback is going to be called with the result of the list of promises passed to $q.all as separate parameters instead of one parameters which is an array.
 * @template TResult
 * @param {function(!Array<?>): (TResult|!angular.IPromise<TResult>)} successCallback Callback for resolved promise, similar to then's one, but takes multiple parameters instead of single array parameter
 * @param {function(?): ?=} errorCallback Callback for error, the same as for then
 * @return {!angular.IPromise<TResult>}
 */
tsickle_declare_module.angular.IPromise.prototype.spread = function(successCallback, errorCallback) {};
