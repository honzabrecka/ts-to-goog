/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/rx-lite-joinpatterns/index.d.ts:
/**
 * @record
 * @struct
 */
Rx.Pattern1 = function() {};

/**
 * @template T2
 * @param {?<T2>} other
 * @return {!Rx.Pattern2<T1, T2>}
 */
Rx.Pattern1.prototype.and = function(other) {};

/**
 * @template TR
 * @param {function(T1): TR} selector
 * @return {!Rx.Plan<TR>}
 */
Rx.Pattern1.prototype.thenDo = function(selector) {};
/**
 * @record
 * @struct
 */
Rx.Pattern2 = function() {};

/**
 * @template T3
 * @param {?<T3>} other
 * @return {!Rx.Pattern3<T1, T2, T3>}
 */
Rx.Pattern2.prototype.and = function(other) {};

/**
 * @template TR
 * @param {function(T1, T2): TR} selector
 * @return {!Rx.Plan<TR>}
 */
Rx.Pattern2.prototype.thenDo = function(selector) {};
/**
 * @record
 * @struct
 */
Rx.Pattern3 = function() {};

/**
 * @template T4
 * @param {?<T4>} other
 * @return {!Rx.Pattern4<T1, T2, T3, T4>}
 */
Rx.Pattern3.prototype.and = function(other) {};

/**
 * @template TR
 * @param {function(T1, T2, T3): TR} selector
 * @return {!Rx.Plan<TR>}
 */
Rx.Pattern3.prototype.thenDo = function(selector) {};
/**
 * @record
 * @struct
 */
Rx.Pattern4 = function() {};

/**
 * @template T5
 * @param {?<T5>} other
 * @return {!Rx.Pattern5<T1, T2, T3, T4, T5>}
 */
Rx.Pattern4.prototype.and = function(other) {};

/**
 * @template TR
 * @param {function(T1, T2, T3, T4): TR} selector
 * @return {!Rx.Plan<TR>}
 */
Rx.Pattern4.prototype.thenDo = function(selector) {};
/**
 * @record
 * @struct
 */
Rx.Pattern5 = function() {};

/**
 * @template T6
 * @param {?<T6>} other
 * @return {!Rx.Pattern6<T1, T2, T3, T4, T5, T6>}
 */
Rx.Pattern5.prototype.and = function(other) {};

/**
 * @template TR
 * @param {function(T1, T2, T3, T4, T5): TR} selector
 * @return {!Rx.Plan<TR>}
 */
Rx.Pattern5.prototype.thenDo = function(selector) {};
/**
 * @record
 * @struct
 */
Rx.Pattern6 = function() {};

/**
 * @template T7
 * @param {?<T7>} other
 * @return {!Rx.Pattern7<T1, T2, T3, T4, T5, T6, T7>}
 */
Rx.Pattern6.prototype.and = function(other) {};

/**
 * @template TR
 * @param {function(T1, T2, T3, T4, T5, T6): TR} selector
 * @return {!Rx.Plan<TR>}
 */
Rx.Pattern6.prototype.thenDo = function(selector) {};
/**
 * @record
 * @struct
 */
Rx.Pattern7 = function() {};

/**
 * @template T8
 * @param {?<T8>} other
 * @return {!Rx.Pattern8<T1, T2, T3, T4, T5, T6, T7, T8>}
 */
Rx.Pattern7.prototype.and = function(other) {};

/**
 * @template TR
 * @param {function(T1, T2, T3, T4, T5, T6, T7): TR} selector
 * @return {!Rx.Plan<TR>}
 */
Rx.Pattern7.prototype.thenDo = function(selector) {};
/**
 * @record
 * @struct
 */
Rx.Pattern8 = function() {};

/**
 * @template T9
 * @param {?<T9>} other
 * @return {!Rx.Pattern9<T1, T2, T3, T4, T5, T6, T7, T8, T9>}
 */
Rx.Pattern8.prototype.and = function(other) {};

/**
 * @template TR
 * @param {function(T1, T2, T3, T4, T5, T6, T7, T8): TR} selector
 * @return {!Rx.Plan<TR>}
 */
Rx.Pattern8.prototype.thenDo = function(selector) {};
/**
 * @record
 * @struct
 */
Rx.Pattern9 = function() {};

/**
 * @template TR
 * @param {function(T1, T2, T3, T4, T5, T6, T7, T8, T9): TR} selector
 * @return {!Rx.Plan<TR>}
 */
Rx.Pattern9.prototype.thenDo = function(selector) {};
/**
 * @record
 * @struct
 */
Rx.Plan = function() {};

/**
 * @template T2
 * @param {?<T2>} other
 * @return {!Rx.Pattern2<T, T2>}
 */
Rx.Observable.prototype.and = function(other) {};

/**
 * @template TR
 * @param {function(T): TR} selector
 * @return {!Rx.Plan<TR>}
 */
Rx.Observable.prototype.thenDo = function(selector) {};

/**
 * @template TR
 * @param {!Rx.Plan<TR>} plan
 * @return {?<TR>}
 */
Rx.ObservableStatic.prototype.when = function(plan) {};
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "rx-lite-joinpatterns"
/** @const */
tsickle_declare_module.rx_lite_joinpatterns = {};

/* TODO: ExportAssignment in tsickle_declare_module.rx_lite_joinpatterns */
