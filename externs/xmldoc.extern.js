/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/xmldoc/index.d.ts:

/**
 * @constructor
 * @struct
 * @param {string} xmlString
 */
function XmlDocument(xmlString) {}
 /** @type {string} */
XmlDocument.prototype.doctype;

/**
 * @constructor
 * @struct
 * @param {?} tag
 */
function XmlElement(tag) {}
 /** @type {string} */
XmlElement.prototype.name;
 /** @type {?} */
XmlElement.prototype.attr;
 /** @type {string} */
XmlElement.prototype.val;
 /** @type {!Array<?>} */
XmlElement.prototype.children;
 /** @type {?} */
XmlElement.prototype.firstChild;
 /** @type {?} */
XmlElement.prototype.lastChild;

/**
 * @param {?} func
 * @return {void}
 */
XmlElement.prototype.eachChild = function(func) {};

/**
 * @param {string} name
 * @return {?}
 */
XmlElement.prototype.childNamed = function(name) {};

/**
 * @param {string} name
 * @return {!Array<?>}
 */
XmlElement.prototype.childrenNamed = function(name) {};

/**
 * @param {string} name
 * @param {string=} value
 * @return {?}
 */
XmlElement.prototype.childWithAttribute = function(name, value) {};

/**
 * @param {string} path
 * @return {?}
 */
XmlElement.prototype.descendantWithPath = function(path) {};

/**
 * @param {string} path
 * @return {string}
 */
XmlElement.prototype.valueWithPath = function(path) {};

/**
 * @param {?=} opts
 * @return {string}
 */
XmlElement.prototype.toString = function(opts) {};

/**
 * @param {string} indent
 * @param {?=} opts
 * @return {string}
 */
XmlElement.prototype.toStringWithIndent = function(indent, opts) {};

/**
 * @constructor
 * @struct
 * @param {string} text
 */
function XmlTextNode(text) {}

/**
 * @param {?=} opts
 * @return {string}
 */
XmlTextNode.prototype.toString = function(opts) {};

/**
 * @param {string} indent
 * @param {?=} opts
 * @return {string}
 */
XmlTextNode.prototype.toStringWithIndent = function(indent, opts) {};

/**
 * @constructor
 * @struct
 * @param {string} cdata
 */
function XmlCDataNode(cdata) {}

/**
 * @param {?=} opts
 * @return {string}
 */
XmlCDataNode.prototype.toString = function(opts) {};

/**
 * @param {string} indent
 * @param {?=} opts
 * @return {string}
 */
XmlCDataNode.prototype.toStringWithIndent = function(indent, opts) {};

/**
 * @constructor
 * @struct
 * @param {string} comment
 */
function XmlCommentNode(comment) {}

/**
 * @param {?=} opts
 * @return {string}
 */
XmlCommentNode.prototype.toString = function(opts) {};

/**
 * @param {string} indent
 * @param {?=} opts
 * @return {string}
 */
XmlCommentNode.prototype.toStringWithIndent = function(indent, opts) {};
/**
 * @record
 * @struct
 */
function XmlOptions() {}
 /** @type {boolean} */
XmlOptions.prototype.compressed;
 /** @type {boolean} */
XmlOptions.prototype.html;
 /** @type {boolean} */
XmlOptions.prototype.preserveWhitespace;
 /** @type {boolean} */
XmlOptions.prototype.trimmed;
/**
 * @record
 * @struct
 */
function XmlTag() {}
 /** @type {string} */
XmlTag.prototype.name;
 /** @type {?} */
XmlTag.prototype.attributes;
/**
 * @record
 * @struct
 */
function XmlAttributes() {}

/* TODO: IndexSignature:  */
