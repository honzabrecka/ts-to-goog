/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/graphite-udp/index.d.ts:
/**
 * @record
 * @struct
 */
function ClientOptions() {}
 /** @type {string} */
ClientOptions.prototype.host;
 /** @type {number} */
ClientOptions.prototype.port;
 /** @type {string} */
ClientOptions.prototype.type;
 /** @type {number} */
ClientOptions.prototype.maxPacketSize;
 /** @type {string} */
ClientOptions.prototype.prefix;
 /** @type {string} */
ClientOptions.prototype.suffix;
 /** @type {number} */
ClientOptions.prototype.interval;
 /** @type {boolean} */
ClientOptions.prototype.verbose;

/**
 * called when metrics are sent
 * Defaults to null
 * 
 * @param {!Error} error
 * @param {?} metrics
 * @return {void} void
 */
ClientOptions.prototype.callback = function(error, metrics) {};

/**
 * @constructor
 * @struct
 * @param {?=} clientOptions
 */
function Client(clientOptions) {}

/**
 * During the interval time option, if 2 or more metrics with the same name are sent, metrics will be added (summed)
 * 
 * @param {string} name
 * @param {number} value
 * @return {void} void
 */
Client.prototype.add = function(name, value) {};

/**
 * During the interval time option, if 2 or more metrics with the same name are sent, the last one will be used
 * 
 * @param {string} name
 * @param {number} value
 * @return {void} void
 */
Client.prototype.put = function(name, value) {};

/**
 * Close the underlying UDP client socket
 * 
 * @return {void} void
 */
Client.prototype.close = function() {};

/**
 * @param {?=} clientOptions
 * @return {?}
 */
function createClient(clientOptions) {}
