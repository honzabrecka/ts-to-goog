/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/underscore-ko/index.d.ts:

/* TODO: ImportDeclaration in  */
/**
 * @record
 * @struct
 */
function KnockoutObservableArrayFunctions() {}

/**
 * @template TResult
 * @param {!_.ListIterator<?, ?>|!_.ObjectIterator<?, ?>} iterator
 * @param {?=} context
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.each = function(iterator, context) {};

/**
 * @template TResult
 * @param {!_.ObjectIterator<?, ?>|!_.ListIterator<?, ?>} iterator
 * @param {?=} context
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.forEach = function(iterator, context) {};

/**
 * @template TResult
 * @param {!_.ListIterator<?, ?>|!_.ObjectIterator<?, ?>} iterator
 * @param {?=} context
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.map = function(iterator, context) {};

/**
 * @template TResult
 * @param {!_.ListIterator<?, ?>|!_.ObjectIterator<?, ?>} iterator
 * @param {?=} context
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.collect = function(iterator, context) {};

/**
 * @template TResult
 * @param {!_.MemoIterator<?, ?>} iterator
 * @param {?} memo
 * @param {?=} context
 * @return {?}
 */
KnockoutObservableArrayFunctions.prototype.reduce = function(iterator, memo, context) {};

/**
 * @template TResult
 * @param {!_.MemoIterator<?, ?>} iterator
 * @param {?} memo
 * @param {?=} context
 * @return {?}
 */
KnockoutObservableArrayFunctions.prototype.inject = function(iterator, memo, context) {};

/**
 * @template TResult
 * @param {!_.MemoIterator<?, ?>} iterator
 * @param {?} memo
 * @param {?=} context
 * @return {?}
 */
KnockoutObservableArrayFunctions.prototype.foldl = function(iterator, memo, context) {};

/**
 * @template TResult
 * @param {!_.MemoIterator<?, ?>} iterator
 * @param {?} memo
 * @param {?=} context
 * @return {?}
 */
KnockoutObservableArrayFunctions.prototype.reduceRight = function(iterator, memo, context) {};

/**
 * @template TResult
 * @param {!_.MemoIterator<?, ?>} iterator
 * @param {?} memo
 * @param {?=} context
 * @return {?}
 */
KnockoutObservableArrayFunctions.prototype.foldr = function(iterator, memo, context) {};

/**
 * @param {!_.ListIterator<?, boolean>} iterator
 * @param {?=} context
 * @return {?}
 */
KnockoutObservableArrayFunctions.prototype.find = function(iterator, context) {};

/**
 * @param {!_.ListIterator<?, boolean>} iterator
 * @param {?=} context
 * @return {?}
 */
KnockoutObservableArrayFunctions.prototype.detect = function(iterator, context) {};

/**
 * @param {!_.ListIterator<?, boolean>} iterator
 * @param {?=} context
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.filter = function(iterator, context) {};

/**
 * @param {!_.ListIterator<?, boolean>} iterator
 * @param {?=} context
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.filter_ = function(iterator, context) {};

/**
 * @param {!_.ListIterator<?, boolean>} iterator
 * @param {?=} context
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.select = function(iterator, context) {};

/**
 * @param {!_.ListIterator<?, boolean>} iterator
 * @param {?=} context
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.select_ = function(iterator, context) {};

/**
 * @template U
 * @param {?} properties
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.where = function(properties) {};

/**
 * @param {!_.ListIterator<?, boolean>} iterator
 * @param {?=} context
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.reject = function(iterator, context) {};

/**
 * @param {!_.ListIterator<?, boolean>} iterator
 * @param {?=} context
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.reject_ = function(iterator, context) {};

/**
 * @param {!_.ListIterator<?, boolean>} iterator
 * @param {?=} context
 * @return {boolean}
 */
KnockoutObservableArrayFunctions.prototype.all = function(iterator, context) {};

/**
 * @param {!_.ListIterator<?, boolean>} iterator
 * @param {?=} context
 * @return {boolean}
 */
KnockoutObservableArrayFunctions.prototype.every = function(iterator, context) {};

/**
 * @param {!_.ListIterator<?, boolean>=} iterator
 * @param {?=} context
 * @return {boolean}
 */
KnockoutObservableArrayFunctions.prototype.any = function(iterator, context) {};

/**
 * @param {!_.ListIterator<?, boolean>=} iterator
 * @param {?=} context
 * @return {boolean}
 */
KnockoutObservableArrayFunctions.prototype.some = function(iterator, context) {};

/**
 * @param {?} value
 * @return {boolean}
 */
KnockoutObservableArrayFunctions.prototype.contains = function(value) {};

/**
 * @param {?} value
 * @return {boolean}
 */
KnockoutObservableArrayFunctions.prototype.include = function(value) {};

/**
 * @param {string} methodName
 * @param {...?} args
 * @return {?}
 */
KnockoutObservableArrayFunctions.prototype.invoke = function(methodName, args) {};

/**
 * @param {string} methodName
 * @param {...?} args
 * @return {?}
 */
KnockoutObservableArrayFunctions.prototype.invoke_ = function(methodName, args) {};

/**
 * @param {string} propertyName
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.pluck = function(propertyName) {};

/**
 * @param {!_.ListIterator<?, ?>} iterator
 * @param {?=} context
 * @return {?}
 */
KnockoutObservableArrayFunctions.prototype.max = function(iterator, context) {};

/**
 * @param {!_.ListIterator<?, ?>} iterator
 * @param {?=} context
 * @return {?}
 */
KnockoutObservableArrayFunctions.prototype.min = function(iterator, context) {};

/**
 * @template TSort
 * @param {!_.ListIterator<?, ?>|string} iterator
 * @param {?=} context
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.sortBy = function(iterator, context) {};

/**
 * @template TSort
 * @param {!_.ListIterator<?, ?>|string} iterator
 * @param {?=} context
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.sortBy_ = function(iterator, context) {};

/**
 * @template TSort
 * @param {!_.ListIterator<?, ?>|string} iterator
 * @return {!_.Dictionary<!Array<?>>}
 */
KnockoutObservableArrayFunctions.prototype.groupBy = function(iterator) {};

/**
 * @template TSort
 * @param {!_.ListIterator<?, ?>|string} iterator
 * @return {!_.Dictionary<!Array<?>>}
 */
KnockoutObservableArrayFunctions.prototype.groupBy_ = function(iterator) {};

/**
 * @param {!_.ListIterator<?, ?>|string} iterator
 * @return {!_.Dictionary<!Array<number>>}
 */
KnockoutObservableArrayFunctions.prototype.countBy = function(iterator) {};

/**
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.shuffle = function() {};

/**
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.shuffle_ = function() {};

/**
 * @return {number}
 */
KnockoutObservableArrayFunctions.prototype.size = function() {};

/**
 * @param {number=} n
 * @return {?|!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.first = function(n) {};

/**
 * @param {number=} n
 * @return {?|!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.head = function(n) {};

/**
 * @param {number=} n
 * @return {?|!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.take = function(n) {};

/**
 * @param {number=} n
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.initial = function(n) {};

/**
 * @param {number=} n
 * @return {?|!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.last = function(n) {};

/**
 * @param {number=} n
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.rest = function(n) {};

/**
 * @param {number=} n
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.rest_ = function(n) {};

/**
 * @param {number=} n
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.tail = function(n) {};

/**
 * @param {number=} n
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.tail_ = function(n) {};

/**
 * @param {number=} n
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.drop = function(n) {};

/**
 * @param {number=} n
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.drop_ = function(n) {};

/**
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.compact = function() {};

/**
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.compact_ = function() {};

/**
 * @param {boolean=} shallow
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.flatten = function(shallow) {};

/**
 * @param {boolean=} shallow
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.flatten_ = function(shallow) {};

/**
 * @param {...?} values
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.without = function(values) {};

/**
 * @param {...?} values
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.without_ = function(values) {};

/**
 * @param {...!Array<?>} arrays
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.union = function(arrays) {};

/**
 * @param {...!Array<?>} arrays
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.union_ = function(arrays) {};

/**
 * @param {...!Array<?>} arrays
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.intersection = function(arrays) {};

/**
 * @param {...!Array<?>} arrays
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.intersection_ = function(arrays) {};

/**
 * @param {...!Array<?>} others
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.difference = function(others) {};

/**
 * @param {...!Array<?>} others
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.difference_ = function(others) {};

/**
 * @template TSort
 * @param {boolean=} isSorted
 * @param {!_.ListIterator<?, ?>=} iterator
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.uniq = function(isSorted, iterator) {};

/**
 * @template TSort
 * @param {boolean=} isSorted
 * @param {!_.ListIterator<?, ?>=} iterator
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.uniq_ = function(isSorted, iterator) {};

/**
 * @template TSort
 * @param {boolean=} isSorted
 * @param {!_.ListIterator<?, ?>=} iterator
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.unique = function(isSorted, iterator) {};

/**
 * @template TSort
 * @param {boolean=} isSorted
 * @param {!_.ListIterator<?, ?>=} iterator
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.unique_ = function(isSorted, iterator) {};

/**
 * @param {...?} arrays
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.zip = function(arrays) {};

/**
 * @param {...?} arrays
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.zip_ = function(arrays) {};

/**
 * @return {?}
 */
KnockoutObservableArrayFunctions.prototype.object = function() {};

/**
 * @param {?} value
 * @param {boolean=} isSorted
 * @return {number}
 */
KnockoutObservableArrayFunctions.prototype.indexOf = function(value, isSorted) {};

/**
 * @param {?} value
 * @param {number|boolean=} fromIndex_or_isSorted
 * @return {number}
 */
KnockoutObservableArrayFunctions.prototype.lastIndexOf = function(value, fromIndex_or_isSorted) {};

/**
 * @template TSort
 * @param {?} value
 * @param {!_.ListIterator<?, ?>=} iterator
 * @return {number}
 */
KnockoutObservableArrayFunctions.prototype.sortedIndex = function(value, iterator) {};

/**
 * @param {number} stop_or_start
 * @param {number=} stop
 * @param {number=} step
 * @return {!Array<?>}
 */
KnockoutObservableArrayFunctions.prototype.range = function(stop_or_start, stop, step) {};

/**
 * @param {?} object
 * @return {?}
 */
KnockoutObservableArrayFunctions.prototype.chain = function(object) {};
