/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/jade/index.d.ts:

/** @typedef {?} */
var JadeCustomFilterFunction;
/**
 * @record
 * @struct
 */
function JadeOptions() {}
 /** @type {string} */
JadeOptions.prototype.filename;
 /** @type {string} */
JadeOptions.prototype.basedir;
 /** @type {string} */
JadeOptions.prototype.doctype;
 /** @type {(string|boolean)} */
JadeOptions.prototype.pretty;
 /** @type {?} */
JadeOptions.prototype.filters;
 /** @type {boolean} */
JadeOptions.prototype.self;
 /** @type {boolean} */
JadeOptions.prototype.debug;
 /** @type {boolean} */
JadeOptions.prototype.compileDebug;
 /** @type {!Array<string>} */
JadeOptions.prototype.globals;
 /** @type {boolean} */
JadeOptions.prototype.cache;
 /** @type {boolean} */
JadeOptions.prototype.inlineRuntimeFunctions;
 /** @type {string} */
JadeOptions.prototype.name;
/**
 * @record
 * @struct
 */
function TemplateLocals() {}

/* TODO: IndexSignature:  */

/** @typedef {?} */
var JadeGenerationFunction;

/**
 * @param {string} template
 * @param {?=} options
 * @return {?}
 */
function compile(template, options) {}

/**
 * @param {string} path
 * @param {?=} options
 * @return {?}
 */
function compileFile(path, options) {}

/**
 * @param {string} template
 * @param {?=} options
 * @return {?}
 */
function compileClient(template, options) {}

/**
 * @param {string} template
 * @param {?=} options
 * @return {{body: ?, dependencies: !Array<string>}}
 */
function compileClientWithDependenciesTracked(template, options) {}

/**
 * @param {string} template
 * @param {?=} options
 * @return {string}
 */
function render(template, options) {}

/**
 * @param {string} path
 * @param {?=} options
 * @return {string}
 */
function renderFile(path, options) {}
