/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/ngkookies/index.d.ts:
/** @const */
var angular = {};
/** @const */
angular.kookies = {};

/** @typedef {{expires: (number|!Date), path: string, domain: string, secure: boolean}} */
angular.kookies.Options;
/**
 * @record
 * @struct
 */
angular.kookies.IKookiesService = function() {};

/**
 * @param {string} name
 * @param {string} value
 * @param {{expires: (number|!Date), path: string, domain: string, secure: boolean}=} optopns
 * @return {void}
 */
angular.kookies.IKookiesService.prototype.set = function(name, value, optopns) {};

/**
 * @template T
 * @param {string=} name
 * @param {?=} converter
 * @return {?|T}
 */
angular.kookies.IKookiesService.prototype.get = function(name, converter) {};

/**
 * @param {string} name
 * @param {{expires: (number|!Date), path: string, domain: string, secure: boolean}=} options
 * @return {boolean}
 */
angular.kookies.IKookiesService.prototype.remove = function(name, options) {};

/** @typedef {{raw: boolean, json: boolean}} */
angular.kookies.Config;
/**
 * @record
 * @struct
 */
angular.kookies.IKookiesProvider = function() {};
 /** @type {{raw: boolean, json: boolean}} */
angular.kookies.IKookiesProvider.prototype.config;
 /** @type {{expires: (number|!Date), path: string, domain: string, secure: boolean}} */
angular.kookies.IKookiesProvider.prototype.defaults;

/**
 * @param {{raw: boolean, json: boolean}} config
 * @return {void}
 */
angular.kookies.IKookiesProvider.prototype.setConfig = function(config) {};

/**
 * @param {{expires: (number|!Date), path: string, domain: string, secure: boolean}} options
 * @return {void}
 */
angular.kookies.IKookiesProvider.prototype.setDefaults = function(options) {};
