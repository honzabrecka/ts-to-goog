/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/react-dropzone/index.d.ts:

/* TODO: ImportDeclaration in  */
/** @const */
var Dropzone = {};
/**
 * @record
 * @struct
 */
Dropzone.ImageFile = function() {};
 /** @type {string} */
Dropzone.ImageFile.prototype.preview;

/** @typedef {function(!Array<!Dropzone.ImageFile>, !React.DragEvent<!HTMLDivElement>): void} */
Dropzone.DropFileEventHandler;

/** @typedef {function(!Array<!Dropzone.ImageFile>, !Array<!Dropzone.ImageFile>, !React.DragEvent<!HTMLDivElement>): void} */
Dropzone.DropFilesEventHandler;

/** @typedef {string} */
Dropzone.PickedAttributes;
/**
 * @extends {Pick}
 * @record
 * @struct
 */
Dropzone.DropzoneProps = function() {};
 /** @type {boolean} */
Dropzone.DropzoneProps.prototype.disableClick;
 /** @type {boolean} */
Dropzone.DropzoneProps.prototype.disablePreview;
 /** @type {boolean} */
Dropzone.DropzoneProps.prototype.preventDropOnDocument;
 /** @type {!React.InputHTMLAttributes<!HTMLInputElement>} */
Dropzone.DropzoneProps.prototype.inputProps;
 /** @type {number} */
Dropzone.DropzoneProps.prototype.maxSize;
 /** @type {number} */
Dropzone.DropzoneProps.prototype.minSize;
 /** @type {string} */
Dropzone.DropzoneProps.prototype.activeClassName;
 /** @type {string} */
Dropzone.DropzoneProps.prototype.rejectClassName;
 /** @type {!React.CSSProperties} */
Dropzone.DropzoneProps.prototype.activeStyle;
 /** @type {!React.CSSProperties} */
Dropzone.DropzoneProps.prototype.rejectStyle;
 /** @type {function(!Array<!Dropzone.ImageFile>, !Array<!Dropzone.ImageFile>, !React.DragEvent<!HTMLDivElement>): void} */
Dropzone.DropzoneProps.prototype.onDrop;
 /** @type {function(!Array<!Dropzone.ImageFile>, !React.DragEvent<!HTMLDivElement>): void} */
Dropzone.DropzoneProps.prototype.onDropAccepted;
 /** @type {function(!Array<!Dropzone.ImageFile>, !React.DragEvent<!HTMLDivElement>): void} */
Dropzone.DropzoneProps.prototype.onDropRejected;
 /** @type {function(): void} */
Dropzone.DropzoneProps.prototype.onFileDialogCancel;

/**
 * @return {void}
 */
Dropzone.prototype.open = function() {};

/* TODO: ExportAssignment in  */
