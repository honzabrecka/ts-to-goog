/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/graphviz/index.d.ts:
/**
 * @record
 * @struct
 */
function HasAttributes() {}

/**
 * @param {string} name
 * @param {?} value
 * @return {void}
 */
HasAttributes.prototype.set = function(name, value) {};

/**
 * @param {string} name
 * @return {?}
 */
HasAttributes.prototype.get = function(name) {};
/**
 * @extends {HasAttributes}
 * @record
 * @struct
 */
function Node() {}
/**
 * @extends {HasAttributes}
 * @record
 * @struct
 */
function Edge() {}
/**
 * @record
 * @struct
 */
function OutputCallback() {}

/* TODO: CallSignature:  */
/**
 * @record
 * @struct
 */
function ErrorCallback() {}

/* TODO: CallSignature:  */
/**
 * @record
 * @struct
 */
function RenderOptions() {}
 /** @type {string} */
RenderOptions.prototype.type;
 /** @type {string} */
RenderOptions.prototype.use;
 /** @type {string} */
RenderOptions.prototype.path;
 /** @type {?} */
RenderOptions.prototype.G;
 /** @type {?} */
RenderOptions.prototype.N;
 /** @type {?} */
RenderOptions.prototype.E;
/**
 * @extends {HasAttributes}
 * @record
 * @struct
 */
function Graph() {}
 /** @type {string} */
Graph.prototype.use;

/**
 * @param {string} id
 * @param {?=} attrs
 * @return {?}
 */
Graph.prototype.addNode = function(id, attrs) {};

/**
 * @return {number}
 */
Graph.prototype.nodeCount = function() {};

/**
 * @param {string|?} nodeOne
 * @param {string|?} nodeTwo
 * @param {?=} attrs
 * @return {?}
 */
Graph.prototype.addEdge = function(nodeOne, nodeTwo, attrs) {};

/**
 * @return {number}
 */
Graph.prototype.edgeCount = function() {};

/**
 * @param {string} id
 * @return {?}
 */
Graph.prototype.addCluster = function(id) {};

/**
 * @param {string} id
 * @return {?}
 */
Graph.prototype.getCluster = function(id) {};

/**
 * @return {number}
 */
Graph.prototype.clusterCount = function() {};

/**
 * @param {string} name
 * @param {?} value
 * @return {void}
 */
Graph.prototype.setNodeAttribut = function(name, value) {};

/**
 * @param {string} name
 * @return {?}
 */
Graph.prototype.getNodeAttribut = function(name) {};

/**
 * @param {string} name
 * @param {?} value
 * @return {void}
 */
Graph.prototype.setEdgeAttribut = function(name, value) {};

/**
 * @param {string} name
 * @return {?}
 */
Graph.prototype.getEdgeAttribut = function(name) {};

/**
 * @return {string}
 */
Graph.prototype.to_dot = function() {};

/**
 * @param {string} directoryPath
 * @return {void}
 */
Graph.prototype.setGraphVizPath = function(directoryPath) {};

/**
 * @param {string|?} type_or_options
 * @param {string|?} filename_or_callback
 * @param {?=} errback
 * @return {void}
 */
Graph.prototype.render = function(type_or_options, filename_or_callback, errback) {};

/**
 * @param {string|?} type_or_options
 * @param {string|?} filename_or_callback
 * @param {?=} errback
 * @return {void}
 */
Graph.prototype.output = function(type_or_options, filename_or_callback, errback) {};

/**
 * @param {string} id
 * @return {?}
 */
function graph(id) {}

/**
 * @param {string} id
 * @return {?}
 */
function digraph(id) {}
/**
 * @record
 * @struct
 */
function ParseCallback() {}

/* TODO: CallSignature:  */

/**
 * @param {string} path
 * @param {?} callback
 * @param {?=} errback
 * @return {void}
 */
function parse(path, callback, errback) {}
