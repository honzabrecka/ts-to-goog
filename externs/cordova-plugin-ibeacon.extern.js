/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/cordova-plugin-ibeacon/index.d.ts:

/* TODO: ImportDeclaration in  */
/**
 * @record
 * @struct
 */
function CordovaPlugins() {}
 /** @type {!BeaconPlugin.LocationManager} */
CordovaPlugins.prototype.locationManager;
/** @const */
var BeaconPlugin = {};
/**
 * @record
 * @struct
 */
BeaconPlugin.LocationManager = function() {};
 /** @type {!BeaconPlugin.Delegate} */
BeaconPlugin.LocationManager.prototype.delegate;
 /** @type {!BeaconPlugin.BeaconRegion} */
BeaconPlugin.LocationManager.prototype.BeaconRegion;
 /** @type {!BeaconPlugin.Region} */
BeaconPlugin.LocationManager.prototype.Region;

/**
 * @return {?<void>}
 */
BeaconPlugin.LocationManager.prototype.onDomDelegateReady = function() {};

/**
 * @param {!BeaconPlugin.Region} region
 * @return {?<void>}
 */
BeaconPlugin.LocationManager.prototype.startMonitoringForRegion = function(region) {};

/**
 * @param {!BeaconPlugin.Region} region
 * @return {?<void>}
 */
BeaconPlugin.LocationManager.prototype.stopMonitoringForRegion = function(region) {};

/**
 * @param {!BeaconPlugin.Region} region
 * @return {?<void>}
 */
BeaconPlugin.LocationManager.prototype.requestStateForRegion = function(region) {};

/**
 * @param {!BeaconPlugin.Region} region
 * @return {?<void>}
 */
BeaconPlugin.LocationManager.prototype.startRangingBeaconsInRegion = function(region) {};

/**
 * @param {!BeaconPlugin.Region} region
 * @return {?<void>}
 */
BeaconPlugin.LocationManager.prototype.stopRangingBeaconsInRegion = function(region) {};

/**
 * @return {?<!BeaconPlugin.PluginResult>}
 */
BeaconPlugin.LocationManager.prototype.getAuthorizationStatus = function() {};

/**
 * @return {?<void>}
 */
BeaconPlugin.LocationManager.prototype.requestWhenInUseAuthorization = function() {};

/**
 * @return {?<void>}
 */
BeaconPlugin.LocationManager.prototype.requestAlwaysAuthorization = function() {};

/**
 * @return {?<!Array<!BeaconPlugin.Region>>}
 */
BeaconPlugin.LocationManager.prototype.getMonitoredRegions = function() {};

/**
 * @return {?<!Array<!BeaconPlugin.Region>>}
 */
BeaconPlugin.LocationManager.prototype.getRangedRegions = function() {};

/**
 * @return {?<boolean>}
 */
BeaconPlugin.LocationManager.prototype.isRangingAvailable = function() {};

/**
 * @param {!BeaconPlugin.Region} region
 * @return {?<boolean>}
 */
BeaconPlugin.LocationManager.prototype.isMonitoringAvailableForClass = function(region) {};

/**
 * @param {!BeaconPlugin.Region} region
 * @param {boolean} measuredPower
 * @return {?<void>}
 */
BeaconPlugin.LocationManager.prototype.startAdvertising = function(region, measuredPower) {};

/**
 * @return {?<void>}
 */
BeaconPlugin.LocationManager.prototype.stopAdvertising = function() {};

/**
 * @return {?<boolean>}
 */
BeaconPlugin.LocationManager.prototype.isAdvertisingAvailable = function() {};

/**
 * @return {?<boolean>}
 */
BeaconPlugin.LocationManager.prototype.isAdvertising = function() {};

/**
 * @return {?<void>}
 */
BeaconPlugin.LocationManager.prototype.disableDebugLogs = function() {};

/**
 * @return {?<void>}
 */
BeaconPlugin.LocationManager.prototype.enableDebugNotifications = function() {};

/**
 * @return {?<void>}
 */
BeaconPlugin.LocationManager.prototype.disableDebugNotifications = function() {};

/**
 * @return {?<void>}
 */
BeaconPlugin.LocationManager.prototype.enableDebugLogs = function() {};

/**
 * @return {?<boolean>}
 */
BeaconPlugin.LocationManager.prototype.isBluetoothEnabled = function() {};

/**
 * @return {?<void>}
 */
BeaconPlugin.LocationManager.prototype.enableBluetooth = function() {};

/**
 * @return {?<void>}
 */
BeaconPlugin.LocationManager.prototype.disableBluetooth = function() {};

/**
 * @param {string} message
 * @return {?<string>}
 */
BeaconPlugin.LocationManager.prototype.appendToDeviceLog = function(message) {};
/**
 * @record
 * @struct
 */
BeaconPlugin.PluginResult = function() {};
 /** @type {string} */
BeaconPlugin.PluginResult.prototype.eventType;
 /** @type {!BeaconPlugin.Region} */
BeaconPlugin.PluginResult.prototype.region;
 /** @type {!Array<!BeaconPlugin.Beacon>} */
BeaconPlugin.PluginResult.prototype.beacons;
 /** @type {string} */
BeaconPlugin.PluginResult.prototype.authorizationStatus;
 /** @type {string} */
BeaconPlugin.PluginResult.prototype.state;
 /** @type {string} */
BeaconPlugin.PluginResult.prototype.error;
/**
 * @record
 * @struct
 */
BeaconPlugin.Delegate = function() {};

/**
 * @param {!BeaconPlugin.PluginResult} pluginResult
 * @return {void}
 */
BeaconPlugin.Delegate.prototype.didDetermineStateForRegion = function(pluginResult) {};

/**
 * @param {!BeaconPlugin.PluginResult} pluginResult
 * @return {void}
 */
BeaconPlugin.Delegate.prototype.didStartMonitoringForRegion = function(pluginResult) {};

/**
 * @param {!BeaconPlugin.PluginResult} pluginResult
 * @return {void}
 */
BeaconPlugin.Delegate.prototype.didExitRegion = function(pluginResult) {};

/**
 * @param {!BeaconPlugin.PluginResult} pluginResult
 * @return {void}
 */
BeaconPlugin.Delegate.prototype.didEnterRegion = function(pluginResult) {};

/**
 * @param {!BeaconPlugin.PluginResult} pluginResult
 * @return {void}
 */
BeaconPlugin.Delegate.prototype.didRangeBeaconsInRegion = function(pluginResult) {};

/**
 * @param {!BeaconPlugin.PluginResult} pluginResult
 * @return {void}
 */
BeaconPlugin.Delegate.prototype.peripheralManagerDidStartAdvertising = function(pluginResult) {};

/**
 * @param {!BeaconPlugin.PluginResult} pluginResult
 * @return {void}
 */
BeaconPlugin.Delegate.prototype.peripheralManagerDidUpdateState = function(pluginResult) {};

/**
 * @param {string} authorizationStatus
 * @return {void}
 */
BeaconPlugin.Delegate.prototype.didChangeAuthorizationStatus = function(authorizationStatus) {};

/**
 * @param {!BeaconPlugin.PluginResult} pluginResult
 * @return {void}
 */
BeaconPlugin.Delegate.prototype.monitoringDidFailForRegionWithError = function(pluginResult) {};
/**
 * @record
 * @struct
 */
BeaconPlugin.Region = function() {};
 /** @type {string} */
BeaconPlugin.Region.prototype.identifier;

/* TODO: ConstructSignature: BeaconPlugin */
/**
 * @extends {BeaconPlugin.Region}
 * @record
 * @struct
 */
BeaconPlugin.BeaconRegion = function() {};
 /** @type {string} */
BeaconPlugin.BeaconRegion.prototype.uuid;
 /** @type {string} */
BeaconPlugin.BeaconRegion.prototype.major;
 /** @type {string} */
BeaconPlugin.BeaconRegion.prototype.minor;
 /** @type {boolean} */
BeaconPlugin.BeaconRegion.prototype.notifyEntryStateOnDisplay;

/* TODO: ConstructSignature: BeaconPlugin */
/**
 * @extends {BeaconPlugin.Region}
 * @record
 * @struct
 */
BeaconPlugin.CircularRegion = function() {};
 /** @type {number} */
BeaconPlugin.CircularRegion.prototype.latitude;
 /** @type {number} */
BeaconPlugin.CircularRegion.prototype.longitude;
 /** @type {number} */
BeaconPlugin.CircularRegion.prototype.radius;

/* TODO: ConstructSignature: BeaconPlugin */
/**
 * @record
 * @struct
 */
BeaconPlugin.Beacon = function() {};
 /** @type {string} */
BeaconPlugin.Beacon.prototype.uuid;
 /** @type {string} */
BeaconPlugin.Beacon.prototype.major;
 /** @type {string} */
BeaconPlugin.Beacon.prototype.minor;
 /** @type {string} */
BeaconPlugin.Beacon.prototype.proximity;
 /** @type {number} */
BeaconPlugin.Beacon.prototype.tx;
 /** @type {number} */
BeaconPlugin.Beacon.prototype.rssi;
 /** @type {number} */
BeaconPlugin.Beacon.prototype.accuracy;
