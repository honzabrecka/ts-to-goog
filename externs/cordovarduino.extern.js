/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/cordovarduino/index.d.ts:
/** @const */
var Cordovardunio = {};
/**
 * @record
 * @struct
 */
Cordovardunio.Serial = function() {};

/**
 * Request permission to interact with the serial port.
 * 
 * @param {!Function} successCallback Function to call on success
 * @param {!Function} errorCallback   Function to call on error
 * @return {void}
 */
Cordovardunio.Serial.prototype.requestPermission = function(successCallback, errorCallback) {};

/**
 * Open a connection.
 * 
 * @param {!Cordovardunio.SerialOptions} opts            SerialOptions object
 * @param {!Function} successCallback Function to call on success
 * @param {!Function} errorCallback   Function to call on error
 * @return {void}
 */
Cordovardunio.Serial.prototype.open = function(opts, successCallback, errorCallback) {};

/**
 * Write to the serial port.
 * 
 * @param {string} data            String data to write to serial port
 * @param {!Function} successCallback Function to call on success
 * @param {!Function} errorCallback   Function to call on error
 * @return {void}
 */
Cordovardunio.Serial.prototype.write = function(data, successCallback, errorCallback) {};

/**
 * Read from the serial port.
 * 
 * @param {!Function} successCallback Function to call on success
 * @param {!Function} errorCallback   Function to call on error
 * @return {void}
 */
Cordovardunio.Serial.prototype.read = function(successCallback, errorCallback) {};

/**
 * Close connection.
 * 
 * @param {!Function} successCallback Function to call on success
 * @param {!Function} errorCallback   Function to call on error
 * @return {void}
 */
Cordovardunio.Serial.prototype.close = function(successCallback, errorCallback) {};

/**
 * Register a callback for the driver reading incoming data from the serial device
 * 
 * @param {!Function} successCallback Function to call on success
 * @param {!Function} errorCallback   Function to call on error
 * @return {void}
 */
Cordovardunio.Serial.prototype.registerReadCallback = function(successCallback, errorCallback) {};
/**
 * @record
 * @struct
 */
Cordovardunio.SerialOptions = function() {};
 /** @type {number} */
Cordovardunio.SerialOptions.prototype.baudRate;
 /** @type {number} */
Cordovardunio.SerialOptions.prototype.dataBits;
 /** @type {number} */
Cordovardunio.SerialOptions.prototype.stopBits;
 /** @type {number} */
Cordovardunio.SerialOptions.prototype.parity;
 /** @type {!Cordovardunio.Serial} */
var serial;
