/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/ronomon__crypto-async/index.d.ts:
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "@ronomon/crypto-async"
/** @const */
tsickle_declare_module._ronomon_crypto_async = {};

/**
 * @param {string} algorithm
 * @param {CipherDirection} cipherDirection
 * @param {?} key
 * @param {?|number} iv_or_keyOffset
 * @param {?|number} plaintext_or_keySize
 * @param {function(!Error, ?): void|?} cb_or_iv
 * @param {number=} ivOffset
 * @param {number=} ivSize
 * @param {?=} source
 * @param {number=} sourceOffset
 * @param {number=} sourceSize
 * @param {?=} target
 * @param {number=} targetOffset
 * @param {function(!Error, number): void=} cb
 * @return {void}
 */
tsickle_declare_module._ronomon_crypto_async.cipher = function(algorithm, cipherDirection, key, iv_or_keyOffset, plaintext_or_keySize, cb_or_iv, ivOffset, ivSize, source, sourceOffset, sourceSize, target, targetOffset, cb) {};

/**
 * @param {string} algorithm
 * @param {?} source
 * @param {function(!Error, ?): void|number} cb_or_sourceOffset
 * @param {number=} sourceSize
 * @param {?=} target
 * @param {number=} targetOffset
 * @param {function(!Error, number): void=} cb
 * @return {void}
 */
tsickle_declare_module._ronomon_crypto_async.hash = function(algorithm, source, cb_or_sourceOffset, sourceSize, target, targetOffset, cb) {};

/**
 * @param {string} algorithm
 * @param {?} key
 * @param {?|number} source_or_keyOffset
 * @param {function(!Error, ?): void|number} cb_or_keySize
 * @param {?=} source
 * @param {number=} sourceOffset
 * @param {number=} sourceSize
 * @param {?=} target
 * @param {number=} targetOffset
 * @param {function(!Error, number): void=} cb
 * @return {void}
 */
tsickle_declare_module._ronomon_crypto_async.hmac = function(algorithm, key, source_or_keyOffset, cb_or_keySize, source, sourceOffset, sourceSize, target, targetOffset, cb) {};

/** @const */
tsickle_declare_module._ronomon_crypto_async.CipherDirection = {};
/** @const {number} */
tsickle_declare_module._ronomon_crypto_async.CipherDirection.Decrypt;
/** @const {number} */
tsickle_declare_module._ronomon_crypto_async.CipherDirection.Encrypt;
