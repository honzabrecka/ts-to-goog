/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/saywhen/index.d.ts:

/** @typedef {?} */
var Func;

/**
 * @template T
 * @param {?} spy
 * @return {?}
 */
function when(spy) {}

/**
 * @template T
 * @param {T=} val
 * @return {?}
 */
when.captor = function(val) {};

/**
 * @return {void}
 */
when.noConflict = function() {};

/**
 * @template T
 * @param {T} val
 * @return {boolean}
 */
when.is = function(val) {};
/**
 * @record
 * @struct
 */
function CallHandler() {}
 /** @type {?} */
CallHandler.prototype.isCalled;

/**
 * @param {...?} args
 * @return {?}
 */
CallHandler.prototype.isCalledWith = function(args) {};
/**
 * @record
 * @struct
 */
function Proxy() {}

/**
 * @param {?} fn
 * @return {?}
 */
Proxy.prototype.then = function(fn) {};

/**
 * @param {?} val
 * @return {?}
 */
Proxy.prototype.thenReturn = function(val) {};

/**
 * @param {!Error} err
 * @return {?}
 */
Proxy.prototype.thenThrow = function(err) {};
/**
 * @record
 * @struct
 */
function MatcherProxy() {}

/* TODO: CallSignature:  */
 /** @type {?} */
MatcherProxy.prototype.latest;

/**
 * @return {!Array<?>}
 */
MatcherProxy.prototype.values = function() {};

/* TODO: ExportAssignment in  */
