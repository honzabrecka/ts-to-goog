/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/pouchdb-find/index.d.ts:
/** @const */
PouchDB.Find = {};
/**
 * @record
 * @struct
 */
PouchDB.Find.ConditionOperators = function() {};
 /** @type {?} */
PouchDB.Find.ConditionOperators.prototype.$lt;
 /** @type {?} */
PouchDB.Find.ConditionOperators.prototype.$gt;
 /** @type {?} */
PouchDB.Find.ConditionOperators.prototype.$lte;
 /** @type {?} */
PouchDB.Find.ConditionOperators.prototype.$gte;
 /** @type {?} */
PouchDB.Find.ConditionOperators.prototype.$eq;
 /** @type {?} */
PouchDB.Find.ConditionOperators.prototype.$ne;
 /** @type {boolean} */
PouchDB.Find.ConditionOperators.prototype.$exists;
 /** @type {string} */
PouchDB.Find.ConditionOperators.prototype.$type;
 /** @type {!Array<?>} */
PouchDB.Find.ConditionOperators.prototype.$in;
 /** @type {!Array<?>} */
PouchDB.Find.ConditionOperators.prototype.$nin;
 /** @type {number} */
PouchDB.Find.ConditionOperators.prototype.$size;
 /** @type {!Array<?>} */
PouchDB.Find.ConditionOperators.prototype.$mod;
 /** @type {string} */
PouchDB.Find.ConditionOperators.prototype.$regex;
 /** @type {!Array<?>} */
PouchDB.Find.ConditionOperators.prototype.$all;
 /** @type {!PouchDB.Find.ConditionOperators} */
PouchDB.Find.ConditionOperators.prototype.$elemMatch;
/**
 * @record
 * @struct
 */
PouchDB.Find.CombinationOperators = function() {};
 /** @type {!Array<!PouchDB.Find.Selector>} */
PouchDB.Find.CombinationOperators.prototype.$and;
 /** @type {!Array<!PouchDB.Find.Selector>} */
PouchDB.Find.CombinationOperators.prototype.$or;
 /** @type {!PouchDB.Find.Selector} */
PouchDB.Find.CombinationOperators.prototype.$not;
 /** @type {!Array<!PouchDB.Find.Selector>} */
PouchDB.Find.CombinationOperators.prototype.$nor;
/**
 * @extends {PouchDB.Find.CombinationOperators}
 * @record
 * @struct
 */
PouchDB.Find.Selector = function() {};

/* TODO: IndexSignature: PouchDB.Find */
 /** @type {!PouchDB.Find.ConditionOperators} */
PouchDB.Find.Selector.prototype._id;
/**
 * @record
 * @struct
 */
PouchDB.Find.FindRequest = function() {};
 /** @type {!PouchDB.Find.Selector} */
PouchDB.Find.FindRequest.prototype.selector;
 /** @type {!Array<string>} */
PouchDB.Find.FindRequest.prototype.fields;
 /** @type {!Array<(string|!Object<string,string>)>} */
PouchDB.Find.FindRequest.prototype.sort;
 /** @type {number} */
PouchDB.Find.FindRequest.prototype.limit;
 /** @type {number} */
PouchDB.Find.FindRequest.prototype.skip;
 /** @type {(string|!Array<?>)} */
PouchDB.Find.FindRequest.prototype.use_index;
/**
 * @record
 * @struct
 */
PouchDB.Find.FindResponse = function() {};
 /** @type {!Array<?>} */
PouchDB.Find.FindResponse.prototype.docs;
/**
 * @record
 * @struct
 */
PouchDB.Find.CreateIndexOptions = function() {};
 /** @type {{fields: !Array<string>, name: string, ddoc: string, type: string}} */
PouchDB.Find.CreateIndexOptions.prototype.index;
/**
 * @record
 * @struct
 */
PouchDB.Find.CreateIndexResponse = function() {};
 /** @type {string} */
PouchDB.Find.CreateIndexResponse.prototype.result;
/**
 * @record
 * @struct
 */
PouchDB.Find.Index = function() {};
 /** @type {string} */
PouchDB.Find.Index.prototype.name;
 /** @type {string} */
PouchDB.Find.Index.prototype.ddoc;
 /** @type {string} */
PouchDB.Find.Index.prototype.type;
 /** @type {{fields: !Array<!Object<string,string>>}} */
PouchDB.Find.Index.prototype.def;
/**
 * @record
 * @struct
 */
PouchDB.Find.GetIndexesResponse = function() {};
 /** @type {!Array<!PouchDB.Find.Index>} */
PouchDB.Find.GetIndexesResponse.prototype.indexes;
/**
 * @record
 * @struct
 */
PouchDB.Find.DeleteIndexOptions = function() {};
 /** @type {string} */
PouchDB.Find.DeleteIndexOptions.prototype.name;
 /** @type {string} */
PouchDB.Find.DeleteIndexOptions.prototype.ddoc;
 /** @type {string} */
PouchDB.Find.DeleteIndexOptions.prototype.type;
/**
 * @record
 * @struct
 */
PouchDB.Find.DeleteIndexResponse = function() {};

/* TODO: IndexSignature: PouchDB.Find */

/**
 * Query the API to find some documents.
 * @param {!PouchDB.Find.FindRequest<Content>=} request
 * @param {function(!PouchDB.Core.Error, !PouchDB.Find.FindResponse<Content>): void=} callback
 * @return {void|!Promise<!PouchDB.Find.FindResponse<Content>>}
 */
PouchDB.Database.prototype.find = function(request, callback) {};

/**
 * Create an index if it doesn't exist, or do nothing if it already exists.
 * @param {!PouchDB.Find.CreateIndexOptions=} index
 * @param {function(!PouchDB.Core.Error, !PouchDB.Find.CreateIndexResponse<Content>): void=} callback
 * @return {void|!Promise<!PouchDB.Find.CreateIndexResponse<Content>>}
 */
PouchDB.Database.prototype.createIndex = function(index, callback) {};

/**
 * Get a list of all the indexes you've created. Also tells you about the special _all_docs index, i.e. the default index on the _id field.
 * @param {function(!PouchDB.Core.Error, !PouchDB.Find.GetIndexesResponse<Content>): void=} callback
 * @return {void|!Promise<!PouchDB.Find.GetIndexesResponse<Content>>}
 */
PouchDB.Database.prototype.getIndexes = function(callback) {};

/**
 * Delete an index and clean up any leftover data on the disk.
 * @param {!PouchDB.Find.DeleteIndexOptions=} index
 * @param {function(!PouchDB.Core.Error, !PouchDB.Find.DeleteIndexResponse<Content>): void=} callback
 * @return {void|!Promise<!PouchDB.Find.DeleteIndexResponse<Content>>}
 */
PouchDB.Database.prototype.deleteIndex = function(index, callback) {};
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "pouchdb-find"
/** @const */
tsickle_declare_module.pouchdb_find = {};
 /** @type {string} */
tsickle_declare_module.pouchdb_find.plugin;

/* TODO: ExportAssignment in tsickle_declare_module.pouchdb_find */
