/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/bem-cn/index.d.ts:

/** @typedef {?} */
var StateFn;

/**
 * @param {string} name
 * @return {!BemCn.Inner}
 */
function BemCn(name) {}

/**
 * @return {void}
 */
BemCn.reset = function() {};

/**
 * @param {!BemCn.Settings=} settings
 * @return {void}
 */
BemCn.setup = function(settings) {};
/**
 * @record
 * @struct
 */
BemCn.Modifications = function() {};

/* TODO: IndexSignature: BemCn */
/**
 * @record
 * @struct
 */
BemCn.Inner = function() {};

/* TODO: CallSignature: BemCn */

/* TODO: CallSignature: BemCn */

/* TODO: CallSignature: BemCn */
 /** @type {?} */
BemCn.Inner.prototype.has;
 /** @type {?} */
BemCn.Inner.prototype.state;
 /** @type {?} */
BemCn.Inner.prototype.is;

/**
 * @param {(string|!Array<string>)} mixes
 * @return {!BemCn.Inner}
 */
BemCn.Inner.prototype.mix = function(mixes) {};

/**
 * @return {string}
 */
BemCn.Inner.prototype.toString = function() {};

/**
 * @return {string}
 */
BemCn.Inner.prototype.valueOf = function() {};

/**
 * @param {string} separator
 * @param {number=} limit
 * @return {!Array<string>}
 */
BemCn.Inner.prototype.split = function(separator, limit) {};
/**
 * @record
 * @struct
 */
BemCn.Settings = function() {};
 /** @type {string} */
BemCn.Settings.prototype.ns;
 /** @type {string} */
BemCn.Settings.prototype.el;
 /** @type {string} */
BemCn.Settings.prototype.mod;
 /** @type {string} */
BemCn.Settings.prototype.modValue;
 /** @type {!Object<string,string>} */
BemCn.Settings.prototype.classMap;

/* TODO: NamespaceExportDeclaration in  */

/* TODO: ExportAssignment in  */
