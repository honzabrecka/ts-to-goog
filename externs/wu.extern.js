/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/wu/index.d.ts:
/** @const */
var Wu = {};

/** @typedef {function(T): void} */
Wu.Consumer;

/** @typedef {function(T): boolean} */
Wu.Filter;
/**
 * @record
 * @struct
 */
Wu.WuStatic = function() {};

/* TODO: CallSignature: Wu */
 /** @type {?} */
Wu.WuStatic.prototype.invoke;
 /** @type {?} */
Wu.WuStatic.prototype.zipWith;
 /** @type {?} */
Wu.WuStatic.prototype.unzip;

/**
 * @template T
 * @param {...!Iterable<T>} iters
 * @return {!Wu.WuIterable<T>}
 */
Wu.WuStatic.prototype.chain = function(iters) {};

/**
 * @param {number=} start
 * @param {number=} step
 * @return {!Wu.WuIterable<number>}
 */
Wu.WuStatic.prototype.count = function(start, step) {};

/**
 * @template T
 * @param {function(!Array<?>): T} fun
 * @param {number=} expected
 * @return {?}
 */
Wu.WuStatic.prototype.curryable = function(fun, expected) {};

/**
 * @template T
 * @param {!Object<string,T>} obj
 * @return {!Wu.WuIterable<!Array<?>>}
 */
Wu.WuStatic.prototype.entries = function(obj) {};

/**
 * @template T
 * @param {!Object<string,T>} obj
 * @return {!Wu.WuIterable<string>}
 */
Wu.WuStatic.prototype.keys = function(obj) {};

/**
 * @template T
 * @param {!Object<string,T>} obj
 * @return {!Wu.WuIterable<T>}
 */
Wu.WuStatic.prototype.values = function(obj) {};

/**
 * @template T
 * @param {T} obj
 * @param {number=} times
 * @return {!Wu.WuIterable<T>}
 */
Wu.WuStatic.prototype.repeat = function(obj, times) {};

/**
 * @template T
 * @param {function(T): void} fn
 * @param {number=} maxBlock
 * @param {number=} timeout
 * @return {void}
 */
Wu.WuStatic.prototype.asyncEach = function(fn, maxBlock, timeout) {};

/**
 * @template T
 * @param {number} n
 * @param {!Iterable<T>} iter
 * @return {!Wu.WuIterable<T>}
 */
Wu.WuStatic.prototype.drop = function(n, iter) {};

/**
 * @template T
 * @param {function(T): boolean} fn
 * @param {!Iterable<T>} iter
 * @return {!Wu.WuIterable<T>}
 */
Wu.WuStatic.prototype.dropWhile = function(fn, iter) {};

/**
 * @template T
 * @param {!Iterable<T>} iter
 * @return {!Iterable<T>}
 */
Wu.WuStatic.prototype.cycle = function(iter) {};

/**
 * @template T
 * @param {number} n
 * @param {!Iterable<T>} iter
 * @return {!Wu.WuIterable<!Array<T>>}
 */
Wu.WuStatic.prototype.chunk = function(n, iter) {};

/**
 * @template T, U
 * @param {function(T): !Iterable<U>} fn
 * @param {!Iterable<T>} iter
 * @return {!Wu.WuIterable<U>}
 */
Wu.WuStatic.prototype.concatMap = function(fn, iter) {};

/**
 * @template T
 * @param {!Iterable<T>} iter
 * @return {!Iterable<!Array<?>>}
 */
Wu.WuStatic.prototype.enumerate = function(iter) {};

/**
 * @template T
 * @param {function(T): boolean} fn
 * @param {!Iterable<T>} iter
 * @return {boolean}
 */
Wu.WuStatic.prototype.every = function(fn, iter) {};

/**
 * @template T
 * @param {function(T): boolean} fn
 * @param {!Iterable<T>} iter
 * @return {!Wu.WuIterable<T>}
 */
Wu.WuStatic.prototype.filter = function(fn, iter) {};

/**
 * @template T
 * @param {function(T): boolean} fn
 * @param {!Iterable<T>} iter
 * @return {T}
 */
Wu.WuStatic.prototype.find = function(fn, iter) {};

/**
 * @param {!Iterable<?>|boolean} iter_or_shallow
 * @param {!Iterable<?>=} iter
 * @return {!Wu.WuIterable<?>}
 */
Wu.WuStatic.prototype.flatten = function(iter_or_shallow, iter) {};

/**
 * @template T
 * @param {function(T): void} fn
 * @param {!Iterable<T>} iter
 * @return {void}
 */
Wu.WuStatic.prototype.forEach = function(fn, iter) {};

/**
 * @template T
 * @param {T} t
 * @param {!Iterable<T>} iter
 * @return {boolean}
 */
Wu.WuStatic.prototype.has = function(t, iter) {};

/**
 * @template T, U
 * @param {function(T): U} fn
 * @param {!Iterable<T>} iter
 * @return {!Wu.WuIterable<U>}
 */
Wu.WuStatic.prototype.map = function(fn, iter) {};

/**
 * @param {string} attribute
 * @param {!Iterable<?>} iter
 * @return {!Wu.WuIterable<?>}
 */
Wu.WuStatic.prototype.pluck = function(attribute, iter) {};

/**
 * @template T, U
 * @param {function(T, T): T|function(U, T): U} fn
 * @param {!Iterable<T>|T|U} iter_or_initial
 * @param {!Iterable<T>=} iter
 * @return {T|U}
 */
Wu.WuStatic.prototype.reduce = function(fn, iter_or_initial, iter) {};

/**
 * @template T, U
 * @param {function(T, T): T|function(U, T): U} fn
 * @param {!Iterable<T>|T|U} iter_or_initial
 * @param {!Iterable<T>=} iter
 * @return {!Wu.WuIterable<T>|!Wu.WuIterable<U>}
 */
Wu.WuStatic.prototype.reductions = function(fn, iter_or_initial, iter) {};

/**
 * @template T
 * @param {function(T): boolean} fn
 * @param {!Iterable<T>} iter
 * @return {!Wu.WuIterable<T>}
 */
Wu.WuStatic.prototype.reject = function(fn, iter) {};

/**
 * @template T
 * @param {!Iterable<T>|number} iter_or_start
 * @param {!Iterable<T>|number=} iter_or_stop
 * @param {!Iterable<T>=} iter
 * @return {!Wu.WuIterable<T>}
 */
Wu.WuStatic.prototype.slice = function(iter_or_start, iter_or_stop, iter) {};

/**
 * @template T
 * @param {function(T): boolean} fn
 * @param {!Iterable<T>} iter
 * @return {boolean}
 */
Wu.WuStatic.prototype.some = function(fn, iter) {};

/**
 * @template T
 * @param {function(!Array<?>): T} fn
 * @param {!Iterable<!Array<?>>} iter
 * @return {!Wu.WuIterable<T>}
 */
Wu.WuStatic.prototype.spreadMap = function(fn, iter) {};

/**
 * @template T
 * @param {number} n
 * @param {!Iterable<T>} iter
 * @return {!Wu.WuIterable<T>}
 */
Wu.WuStatic.prototype.take = function(n, iter) {};

/**
 * @template T
 * @param {function(T): boolean} fn
 * @param {!Iterable<T>} iter
 * @return {!Wu.WuIterable<T>}
 */
Wu.WuStatic.prototype.takeWhile = function(fn, iter) {};

/**
 * @template T
 * @param {function(T): void} fn
 * @param {!Iterable<T>} iter
 * @return {!Wu.WuIterable<T>}
 */
Wu.WuStatic.prototype.tap = function(fn, iter) {};

/**
 * @template T
 * @param {!Iterable<T>} iter
 * @return {!Wu.WuIterable<T>}
 */
Wu.WuStatic.prototype.unique = function(iter) {};

/**
 * @template T, U
 * @param {!Iterable<T>} iter2
 * @param {!Iterable<U>} iter
 * @return {!Wu.WuIterable<!Array<?>>}
 */
Wu.WuStatic.prototype.zip = function(iter2, iter) {};

/**
 * @template T, U
 * @param {!Iterable<T>} iter2
 * @param {!Iterable<U>} iter
 * @return {!Wu.WuIterable<!Array<?>>}
 */
Wu.WuStatic.prototype.zipLongest = function(iter2, iter) {};

/**
 * @template T
 * @param {!Iterable<T>|number} iter_or_n
 * @param {!Iterable<T>=} iter
 * @return {!Array<!Wu.WuIterable<T>>}
 */
Wu.WuStatic.prototype.tee = function(iter_or_n, iter) {};
/**
 * @extends {IterableIterator}
 * @record
 * @struct
 */
Wu.WuIterable = function() {};
 /** @type {?} */
Wu.WuIterable.prototype.invoke;
 /** @type {?} */
Wu.WuIterable.prototype.zipWith;
 /** @type {?} */
Wu.WuIterable.prototype.unzip;

/**
 * @template T
 * @param {function(T): void} fn
 * @param {number=} maxBlock
 * @param {number=} timeout
 * @return {?}
 */
Wu.WuIterable.prototype.asyncEach = function(fn, maxBlock, timeout) {};

/**
 * @param {number} n
 * @return {!Wu.WuIterable}
 */
Wu.WuIterable.prototype.drop = function(n) {};

/**
 * @param {function(T): boolean} fn
 * @return {!Wu.WuIterable}
 */
Wu.WuIterable.prototype.dropWhile = function(fn) {};

/**
 * @return {!Iterable<T>}
 */
Wu.WuIterable.prototype.cycle = function() {};

/**
 * @param {number} n
 * @return {!Wu.WuIterable<!Array<T>>}
 */
Wu.WuIterable.prototype.chunk = function(n) {};

/**
 * @template U
 * @param {function(T): !Iterable<U>} fn
 * @return {!Wu.WuIterable<U>}
 */
Wu.WuIterable.prototype.concatMap = function(fn) {};

/**
 * @return {!Iterable<!Array<?>>}
 */
Wu.WuIterable.prototype.enumerate = function() {};

/**
 * @param {function(T): boolean} fn
 * @return {boolean}
 */
Wu.WuIterable.prototype.every = function(fn) {};

/**
 * @param {function(T): boolean} fn
 * @return {!Wu.WuIterable}
 */
Wu.WuIterable.prototype.filter = function(fn) {};

/**
 * @param {function(T): boolean} fn
 * @return {T}
 */
Wu.WuIterable.prototype.find = function(fn) {};

/**
 * @param {boolean=} shallow
 * @return {!Wu.WuIterable<?>}
 */
Wu.WuIterable.prototype.flatten = function(shallow) {};

/**
 * @param {function(T): void} fn
 * @return {void}
 */
Wu.WuIterable.prototype.forEach = function(fn) {};

/**
 * @param {T} t
 * @return {boolean}
 */
Wu.WuIterable.prototype.has = function(t) {};

/**
 * @template U
 * @param {function(T): U} fn
 * @return {!Wu.WuIterable<U>}
 */
Wu.WuIterable.prototype.map = function(fn) {};

/**
 * @param {string} attribute
 * @return {!Wu.WuIterable<?>}
 */
Wu.WuIterable.prototype.pluck = function(attribute) {};

/**
 * @template U
 * @param {function(T, T): T|function(U, T): U} fn
 * @param {T|U=} initial
 * @return {T|U}
 */
Wu.WuIterable.prototype.reduce = function(fn, initial) {};

/**
 * @template U
 * @param {function(T, T): T|function(U, T): U} fn
 * @param {T|U=} initial
 * @return {!Wu.WuIterable|!Wu.WuIterable<U>}
 */
Wu.WuIterable.prototype.reductions = function(fn, initial) {};

/**
 * @param {function(T): boolean} fn
 * @return {!Wu.WuIterable}
 */
Wu.WuIterable.prototype.reject = function(fn) {};

/**
 * @param {number=} start
 * @param {number=} stop
 * @return {!Wu.WuIterable}
 */
Wu.WuIterable.prototype.slice = function(start, stop) {};

/**
 * @param {function(T): boolean} fn
 * @return {boolean}
 */
Wu.WuIterable.prototype.some = function(fn) {};

/**
 * @param {function(!Array<?>): T} fn
 * @param {!Iterable<!Array<?>>} iter
 * @return {!Wu.WuIterable}
 */
Wu.WuIterable.prototype.spreadMap = function(fn, iter) {};

/**
 * @param {number} n
 * @return {!Wu.WuIterable}
 */
Wu.WuIterable.prototype.take = function(n) {};

/**
 * @param {function(T): boolean} fn
 * @return {!Wu.WuIterable}
 */
Wu.WuIterable.prototype.takeWhile = function(fn) {};

/**
 * @param {function(T): void} fn
 * @return {!Wu.WuIterable}
 */
Wu.WuIterable.prototype.tap = function(fn) {};

/**
 * @return {!Wu.WuIterable}
 */
Wu.WuIterable.prototype.unique = function() {};

/**
 * @template U
 * @param {!Iterable<T>} iter2
 * @return {!Wu.WuIterable<!Array<?>>}
 */
Wu.WuIterable.prototype.zip = function(iter2) {};

/**
 * @template U
 * @param {!Iterable<T>} iter2
 * @return {!Wu.WuIterable<!Array<?>>}
 */
Wu.WuIterable.prototype.zipLongest = function(iter2) {};

/**
 * @param {number=} n
 * @return {!Array<!Wu.WuIterable>}
 */
Wu.WuIterable.prototype.tee = function(n) {};
 /** @type {!Wu.WuStatic} */
var wu;
