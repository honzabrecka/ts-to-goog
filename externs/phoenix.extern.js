/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/phoenix/index.d.ts:
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "phoenix"
/** @const */
tsickle_declare_module.phoenix = {};

/**
 * @constructor
 * @struct
 * @param {!Channel} channel
 * @param {string} event
 * @param {?} payload
 * @param {number} timeout
 */
tsickle_declare_module.phoenix.Push = function(channel, event, payload, timeout) {};

/**
 * @param {number} timeout
 * @return {void}
 */
tsickle_declare_module.phoenix.Push.prototype.resend = function(timeout) {};

/**
 * @return {void}
 */
tsickle_declare_module.phoenix.Push.prototype.send = function() {};

/**
 * @param {string} status
 * @param {function(?): void} callback
 * @return {!Push}
 */
tsickle_declare_module.phoenix.Push.prototype.receive = function(status, callback) {};

/**
 * @constructor
 * @struct
 * @param {string} topic
 * @param {!Object=} params
 * @param {!Socket=} socket
 */
tsickle_declare_module.phoenix.Channel = function(topic, params, socket) {};

/**
 * @return {void}
 */
tsickle_declare_module.phoenix.Channel.prototype.rejoinUntilConnected = function() {};

/**
 * @param {number=} timeout
 * @return {!Push}
 */
tsickle_declare_module.phoenix.Channel.prototype.join = function(timeout) {};

/**
 * @param {number=} timeout
 * @return {!Push}
 */
tsickle_declare_module.phoenix.Channel.prototype.leave = function(timeout) {};

/**
 * @param {!Function} callback
 * @return {void}
 */
tsickle_declare_module.phoenix.Channel.prototype.onClose = function(callback) {};

/**
 * @param {function(?): void} callback
 * @return {void}
 */
tsickle_declare_module.phoenix.Channel.prototype.onError = function(callback) {};

/**
 * @param {string} event
 * @param {?} payload
 * @param {?} ref
 * @return {?}
 */
tsickle_declare_module.phoenix.Channel.prototype.onMessage = function(event, payload, ref) {};

/**
 * @param {string} event
 * @param {function(?): void} callback
 * @return {void}
 */
tsickle_declare_module.phoenix.Channel.prototype.on = function(event, callback) {};

/**
 * @param {string} event
 * @return {void}
 */
tsickle_declare_module.phoenix.Channel.prototype.off = function(event) {};

/**
 * @return {boolean}
 */
tsickle_declare_module.phoenix.Channel.prototype.canPush = function() {};

/**
 * @param {string} event
 * @param {!Object} payload
 * @param {number=} timeout
 * @return {!Push}
 */
tsickle_declare_module.phoenix.Channel.prototype.push = function(event, payload, timeout) {};

/**
 * @constructor
 * @struct
 * @param {string} endPoint
 * @param {!Object=} opts
 */
tsickle_declare_module.phoenix.Socket = function(endPoint, opts) {};

/**
 * @return {string}
 */
tsickle_declare_module.phoenix.Socket.prototype.protocol = function() {};

/**
 * @return {string}
 */
tsickle_declare_module.phoenix.Socket.prototype.endPointURL = function() {};

/**
 * @param {!Function=} callback
 * @param {string=} code
 * @param {?=} reason
 * @return {void}
 */
tsickle_declare_module.phoenix.Socket.prototype.disconnect = function(callback, code, reason) {};

/**
 * @param {?=} params
 * @return {void}
 */
tsickle_declare_module.phoenix.Socket.prototype.connect = function(params) {};

/**
 * @param {string} kind
 * @param {string} msg
 * @param {?} data
 * @return {void}
 */
tsickle_declare_module.phoenix.Socket.prototype.log = function(kind, msg, data) {};

/**
 * @param {!Function} callback
 * @return {void}
 */
tsickle_declare_module.phoenix.Socket.prototype.onOpen = function(callback) {};

/**
 * @param {!Function} callback
 * @return {void}
 */
tsickle_declare_module.phoenix.Socket.prototype.onClose = function(callback) {};

/**
 * @param {!Function} callback
 * @return {void}
 */
tsickle_declare_module.phoenix.Socket.prototype.onError = function(callback) {};

/**
 * @param {!Function} callback
 * @return {void}
 */
tsickle_declare_module.phoenix.Socket.prototype.onMessage = function(callback) {};

/**
 * @return {void}
 */
tsickle_declare_module.phoenix.Socket.prototype.onConnOpen = function() {};

/**
 * @param {?} event
 * @return {void}
 */
tsickle_declare_module.phoenix.Socket.prototype.onConnClose = function(event) {};

/**
 * @param {?} error
 * @return {void}
 */
tsickle_declare_module.phoenix.Socket.prototype.onConnError = function(error) {};

/**
 * @return {void}
 */
tsickle_declare_module.phoenix.Socket.prototype.triggerChanError = function() {};

/**
 * @return {string}
 */
tsickle_declare_module.phoenix.Socket.prototype.connectionState = function() {};

/**
 * @return {boolean}
 */
tsickle_declare_module.phoenix.Socket.prototype.isConnected = function() {};

/**
 * @param {!Channel} channel
 * @return {void}
 */
tsickle_declare_module.phoenix.Socket.prototype.remove = function(channel) {};

/**
 * @param {string} topic
 * @param {!Object=} chanParams
 * @return {!Channel}
 */
tsickle_declare_module.phoenix.Socket.prototype.channel = function(topic, chanParams) {};

/**
 * @param {?} data
 * @return {void}
 */
tsickle_declare_module.phoenix.Socket.prototype.push = function(data) {};

/**
 * @return {string}
 */
tsickle_declare_module.phoenix.Socket.prototype.makeRef = function() {};

/**
 * @return {void}
 */
tsickle_declare_module.phoenix.Socket.prototype.sendHeartbeat = function() {};

/**
 * @return {void}
 */
tsickle_declare_module.phoenix.Socket.prototype.flushSendBuffer = function() {};

/**
 * @param {?} rawMessage
 * @return {void}
 */
tsickle_declare_module.phoenix.Socket.prototype.onConnMessage = function(rawMessage) {};

/**
 * @constructor
 * @struct
 * @param {string} endPoint
 */
tsickle_declare_module.phoenix.LongPoll = function(endPoint) {};

/**
 * @param {string} endPoint
 * @return {string}
 */
tsickle_declare_module.phoenix.LongPoll.prototype.normalizeEndpoint = function(endPoint) {};

/**
 * @return {string}
 */
tsickle_declare_module.phoenix.LongPoll.prototype.endpointURL = function() {};

/**
 * @return {void}
 */
tsickle_declare_module.phoenix.LongPoll.prototype.closeAndRetry = function() {};

/**
 * @return {void}
 */
tsickle_declare_module.phoenix.LongPoll.prototype.ontimeout = function() {};

/**
 * @return {void}
 */
tsickle_declare_module.phoenix.LongPoll.prototype.poll = function() {};

/**
 * @param {?} body
 * @return {void}
 */
tsickle_declare_module.phoenix.LongPoll.prototype.send = function(body) {};

/**
 * @param {?=} code
 * @param {?=} reason
 * @return {void}
 */
tsickle_declare_module.phoenix.LongPoll.prototype.close = function(code, reason) {};
/**
 * @constructor
 * @struct
 */
tsickle_declare_module.phoenix.Ajax = function() {};

/**
 * @param {string} method
 * @param {string} endPoint
 * @param {string} accept
 * @param {?} body
 * @param {number=} timeout
 * @param {?=} ontimeout
 * @param {function(?): void=} callback
 * @return {void}
 */
tsickle_declare_module.phoenix.Ajax.prototype.request = function(method, endPoint, accept, body, timeout, ontimeout, callback) {};

/**
 * @param {?} req
 * @param {string} method
 * @param {string} endPoint
 * @param {?} body
 * @param {number=} timeout
 * @param {?=} ontimeout
 * @param {function(?): void=} callback
 * @return {void}
 */
tsickle_declare_module.phoenix.Ajax.prototype.xdomainRequest = function(req, method, endPoint, body, timeout, ontimeout, callback) {};

/**
 * @param {?} req
 * @param {string} method
 * @param {string} endPoint
 * @param {string} accept
 * @param {?} body
 * @param {number=} timeout
 * @param {?=} ontimeout
 * @param {function(?): void=} callback
 * @return {void}
 */
tsickle_declare_module.phoenix.Ajax.prototype.xhrRequest = function(req, method, endPoint, accept, body, timeout, ontimeout, callback) {};

/**
 * @param {string} resp
 * @return {!JSON}
 */
tsickle_declare_module.phoenix.Ajax.prototype.parseJSON = function(resp) {};

/**
 * @param {?} obj
 * @param {string} parentKey
 * @return {string}
 */
tsickle_declare_module.phoenix.Ajax.prototype.serialize = function(obj, parentKey) {};

/**
 * @param {string} url
 * @param {?} params
 * @return {string}
 */
tsickle_declare_module.phoenix.Ajax.prototype.appendParams = function(url, params) {};
 /** @type {{syncState: function(?, ?, function(string, ?, ?): void, function(string, ?, ?): void): ?, syncDiff: function(?, ?, function(string, ?, ?): void, function(string, ?, ?): void): ?, list: function(?, !Function): ?}} */
tsickle_declare_module.phoenix.Presence;
