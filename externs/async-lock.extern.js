/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/async-lock/index.d.ts:
/**
 * @record
 * @struct
 */
function AsyncLockDoneCallback() {}

/* TODO: CallSignature:  */
/**
 * @record
 * @struct
 */
function AsyncLockOptions() {}
 /** @type {number} */
AsyncLockOptions.prototype.timeout;
 /** @type {number} */
AsyncLockOptions.prototype.maxPending;
 /** @type {boolean} */
AsyncLockOptions.prototype.domainReentrant;
 /** @type {?} */
AsyncLockOptions.prototype.Promise;

/**
 * @constructor
 * @struct
 * @param {?=} options
 */
function AsyncLock(options) {}

/**
 * @param {(string|!Array<string>)} key
 * @param {function(?): ?} fn
 * @param {?=} cb_or_opts
 * @param {?=} opts
 * @return {void|!PromiseLike<?>}
 */
AsyncLock.prototype.acquire = function(key, fn, cb_or_opts, opts) {};

/**
 * @return {boolean}
 */
AsyncLock.prototype.isBusy = function() {};

/* TODO: ExportAssignment in  */
