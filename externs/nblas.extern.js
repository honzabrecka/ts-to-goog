/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/nblas/index.d.ts:

/** @const */
var TRANS = {};
/** @const {number} */
TRANS.NoTrans;
/** @const {number} */
TRANS.Trans;
/** @const {number} */
TRANS.ConjTrans;

/** @const */
var UPLO = {};
/** @const {number} */
UPLO.Upper;
/** @const {number} */
UPLO.Lower;

/** @const */
var DIAG = {};
/** @const {number} */
DIAG.NonUnit;
/** @const {number} */
DIAG.Unit;

/** @const */
var SIDE = {};
/** @const {number} */
SIDE.Left;
/** @const {number} */
SIDE.Right;
 /** @type {?} */
var NoTrans;
 /** @type {?} */
var Trans;
 /** @type {?} */
var ConjTrans;
 /** @type {?} */
var Upper;
 /** @type {?} */
var Lower;
 /** @type {?} */
var NonUnit;
 /** @type {?} */
var Unit;
 /** @type {?} */
var Left;
 /** @type {?} */
var Right;

/**
 * @param {(!Float32Array|!Float64Array)} x
 * @return {number}
 */
function asum(x) {}

/**
 * @param {!Float32Array|!Float64Array} x
 * @param {!Float32Array|!Float64Array} y
 * @param {number=} alpha
 * @return {void}
 */
function axpy(x, y, alpha) {}

/**
 * @param {!Float32Array|!Float64Array} x
 * @param {!Float32Array|!Float64Array} y
 * @return {void}
 */
function copy(x, y) {}

/**
 * @param {!Float32Array|!Float64Array} x
 * @param {!Float32Array|!Float64Array} y
 * @return {number}
 */
function dot(x, y) {}

/**
 * @param {(!Float32Array|!Float64Array)} x
 * @return {number}
 */
function nrm2(x) {}

/**
 * @param {!Float32Array|!Float64Array} x
 * @param {!Float32Array|!Float64Array} y
 * @param {number} c
 * @param {number} s
 * @return {void}
 */
function rot(x, y, c, s) {}

/**
 * @param {!Float32Array|!Float64Array} x
 * @param {!Float32Array|!Float64Array} y
 * @param {!Float32Array|!Float64Array} c
 * @param {!Float32Array|!Float64Array} s
 * @return {void}
 */
function rotg(x, y, c, s) {}

/**
 * @param {!Float32Array|!Float64Array} x
 * @param {!Float32Array|!Float64Array} y
 * @param {!Float32Array|!Float64Array} param
 * @return {void}
 */
function rotm(x, y, param) {}

/**
 * @param {!Float32Array|!Float64Array} d1
 * @param {!Float32Array|!Float64Array} d2
 * @param {!Float32Array|!Float64Array} x1
 * @param {number} y1
 * @param {!Float32Array|!Float64Array} param
 * @return {void}
 */
function rotmg(d1, d2, x1, y1, param) {}

/**
 * @param {(!Float32Array|!Float64Array)} x
 * @param {number} alpha
 * @return {void}
 */
function scal(x, alpha) {}

/**
 * @param {!Float32Array|!Float64Array} x
 * @param {!Float32Array|!Float64Array} y
 * @return {void}
 */
function swap(x, y) {}

/**
 * @param {(!Float32Array|!Float64Array)} x
 * @return {number}
 */
function iamax(x) {}

/**
 * @param {!Float32Array|!Float64Array} a
 * @param {!Float32Array|!Float64Array} x
 * @param {!Float32Array|!Float64Array} y
 * @param {number=} kl
 * @param {number=} ku
 * @param {number=} alpha
 * @param {number=} beta
 * @param {?=} trans
 * @return {void}
 */
function gbmv(a, x, y, kl, ku, alpha, beta, trans) {}

/**
 * @param {!Float32Array|!Float64Array} a
 * @param {!Float32Array|!Float64Array} x
 * @param {!Float32Array|!Float64Array} y
 * @param {number=} alpha
 * @param {number=} beta
 * @param {?=} trans
 * @return {void}
 */
function gemv(a, x, y, alpha, beta, trans) {}

/**
 * @param {!Float32Array|!Float64Array} a
 * @param {!Float32Array|!Float64Array} x
 * @param {!Float32Array|!Float64Array} y
 * @param {number=} alpha
 * @return {void}
 */
function ger(a, x, y, alpha) {}

/**
 * @param {!Float32Array|!Float64Array} a
 * @param {!Float32Array|!Float64Array} x
 * @param {!Float32Array|!Float64Array} y
 * @param {number=} k
 * @param {?=} uplo
 * @param {number=} alpha
 * @param {number=} beta
 * @return {void}
 */
function sbmv(a, x, y, k, uplo, alpha, beta) {}

/**
 * @param {!Float32Array|!Float64Array} ap
 * @param {!Float32Array|!Float64Array} x
 * @param {!Float32Array|!Float64Array} y
 * @param {?=} uplo
 * @param {number=} alpha
 * @param {number=} beta
 * @return {void}
 */
function spmv(ap, x, y, uplo, alpha, beta) {}

/**
 * @param {!Float32Array|!Float64Array} ap
 * @param {!Float32Array|!Float64Array} x
 * @param {?=} uplo
 * @param {number=} alpha
 * @return {void}
 */
function spr(ap, x, uplo, alpha) {}

/**
 * @param {!Float32Array|!Float64Array} ap
 * @param {!Float32Array|!Float64Array} x
 * @param {!Float32Array|!Float64Array} y
 * @param {?=} uplo
 * @param {number=} alpha
 * @return {void}
 */
function spr2(ap, x, y, uplo, alpha) {}

/**
 * @param {!Float32Array|!Float64Array} a
 * @param {!Float32Array|!Float64Array} x
 * @param {!Float32Array|!Float64Array} y
 * @param {?=} uplo
 * @param {number=} alpha
 * @param {number=} beta
 * @return {void}
 */
function symv(a, x, y, uplo, alpha, beta) {}

/**
 * @param {!Float32Array|!Float64Array} a
 * @param {!Float32Array|!Float64Array} x
 * @param {?=} uplo
 * @param {number=} alpha
 * @return {void}
 */
function syr(a, x, uplo, alpha) {}

/**
 * @param {!Float32Array|!Float64Array} a
 * @param {!Float32Array|!Float64Array} x
 * @param {!Float32Array|!Float64Array} y
 * @param {?=} uplo
 * @param {number=} alpha
 * @return {void}
 */
function syr2(a, x, y, uplo, alpha) {}

/**
 * @param {!Float32Array|!Float64Array} a
 * @param {!Float32Array|!Float64Array} x
 * @param {!Float32Array|!Float64Array} y
 * @param {?=} uplo
 * @param {?=} trans
 * @param {?=} diag
 * @return {void}
 */
function tbmv(a, x, y, uplo, trans, diag) {}

/**
 * @param {!Float32Array|!Float64Array} a
 * @param {!Float32Array|!Float64Array} x
 * @param {?=} uplo
 * @param {?=} trans
 * @param {?=} diag
 * @return {void}
 */
function tbsv(a, x, uplo, trans, diag) {}

/**
 * @param {!Float32Array|!Float64Array} ap
 * @param {!Float32Array|!Float64Array} x
 * @param {?=} uplo
 * @param {?=} trans
 * @param {?=} diag
 * @return {void}
 */
function tpmv(ap, x, uplo, trans, diag) {}

/**
 * @param {!Float32Array|!Float64Array} ap
 * @param {!Float32Array|!Float64Array} x
 * @param {?=} uplo
 * @param {?=} trans
 * @param {?=} diag
 * @return {void}
 */
function tpsv(ap, x, uplo, trans, diag) {}

/**
 * @param {!Float32Array|!Float64Array} a
 * @param {!Float32Array|!Float64Array} x
 * @param {?=} uplo
 * @param {?=} trans
 * @param {?=} diag
 * @return {void}
 */
function trmv(a, x, uplo, trans, diag) {}

/**
 * @param {!Float32Array|!Float64Array} a
 * @param {!Float32Array|!Float64Array} x
 * @param {?=} uplo
 * @param {?=} trans
 * @param {?=} diag
 * @return {void}
 */
function trsv(a, x, uplo, trans, diag) {}

/**
 * @param {!Float32Array|!Float64Array} a
 * @param {!Float32Array|!Float64Array} b
 * @param {!Float32Array|!Float64Array} c
 * @param {number} m
 * @param {number} n
 * @param {number} k
 * @param {?=} transa
 * @param {?=} transb
 * @param {number=} alpha
 * @param {number=} beta
 * @return {void}
 */
function gemm(a, b, c, m, n, k, transa, transb, alpha, beta) {}

/**
 * @param {!Float32Array|!Float64Array} a
 * @param {!Float32Array|!Float64Array} b
 * @param {!Float32Array|!Float64Array} c
 * @param {number} m
 * @param {number} n
 * @param {?} side
 * @param {?=} uplo
 * @param {number=} alpha
 * @param {number=} beta
 * @return {void}
 */
function symm(a, b, c, m, n, side, uplo, alpha, beta) {}

/**
 * @param {!Float32Array|!Float64Array} a
 * @param {!Float32Array|!Float64Array} c
 * @param {number} n
 * @param {number} k
 * @param {?=} uplo
 * @param {?=} trans
 * @param {number=} alpha
 * @param {number=} beta
 * @return {void}
 */
function syrk(a, c, n, k, uplo, trans, alpha, beta) {}

/**
 * @param {!Float32Array|!Float64Array} a
 * @param {!Float32Array|!Float64Array} b
 * @param {!Float32Array|!Float64Array} c
 * @param {number} n
 * @param {number} k
 * @param {?=} uplo
 * @param {?=} trans
 * @param {number=} alpha
 * @param {number=} beta
 * @return {void}
 */
function syr2k(a, b, c, n, k, uplo, trans, alpha, beta) {}

/**
 * @param {!Float32Array|!Float64Array} a
 * @param {!Float32Array|!Float64Array} b
 * @param {number} m
 * @param {number} n
 * @param {?} side
 * @param {?=} uplo
 * @param {?=} transa
 * @param {?=} diag
 * @param {number=} alpha
 * @return {void}
 */
function trmm(a, b, m, n, side, uplo, transa, diag, alpha) {}

/**
 * @param {!Float32Array|!Float64Array} a
 * @param {!Float32Array|!Float64Array} b
 * @param {number} m
 * @param {number} n
 * @param {?} side
 * @param {?=} uplo
 * @param {?=} transa
 * @param {?=} diag
 * @param {number=} alpha
 * @return {void}
 */
function trsm(a, b, m, n, side, uplo, transa, diag, alpha) {}
