/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/swagger-schema-official/index.d.ts:
/**
 * @record
 * @struct
 */
function Info() {}
 /** @type {string} */
Info.prototype.title;
 /** @type {string} */
Info.prototype.version;
 /** @type {string} */
Info.prototype.description;
 /** @type {string} */
Info.prototype.termsOfService;
 /** @type {?} */
Info.prototype.contact;
 /** @type {?} */
Info.prototype.license;
/**
 * @record
 * @struct
 */
function Contact() {}
 /** @type {string} */
Contact.prototype.name;
 /** @type {string} */
Contact.prototype.email;
 /** @type {string} */
Contact.prototype.url;
/**
 * @record
 * @struct
 */
function License() {}
 /** @type {string} */
License.prototype.name;
 /** @type {string} */
License.prototype.url;
/**
 * @record
 * @struct
 */
function ExternalDocs() {}
 /** @type {string} */
ExternalDocs.prototype.url;
 /** @type {string} */
ExternalDocs.prototype.description;
/**
 * @record
 * @struct
 */
function Tag() {}
 /** @type {string} */
Tag.prototype.name;
 /** @type {string} */
Tag.prototype.description;
 /** @type {?} */
Tag.prototype.externalDocs;
/**
 * @extends {BaseSchema}
 * @record
 * @struct
 */
function Header() {}
 /** @type {string} */
Header.prototype.type;
/**
 * @record
 * @struct
 */
function BaseParameter() {}
 /** @type {string} */
BaseParameter.prototype.name;
 /** @type {string} */
BaseParameter.prototype.in;
 /** @type {boolean} */
BaseParameter.prototype.required;
 /** @type {string} */
BaseParameter.prototype.description;
/**
 * @extends {BaseParameter}
 * @record
 * @struct
 */
function BodyParameter() {}
 /** @type {?} */
BodyParameter.prototype.schema;
/**
 * @extends {BaseParameter}
 * @extends {BaseSchema}
 * @record
 * @struct
 */
function QueryParameter() {}
 /** @type {string} */
QueryParameter.prototype.type;
 /** @type {boolean} */
QueryParameter.prototype.allowEmptyValue;
/**
 * @extends {BaseParameter}
 * @record
 * @struct
 */
function PathParameter() {}
 /** @type {string} */
PathParameter.prototype.type;
 /** @type {boolean} */
PathParameter.prototype.required;
/**
 * @extends {BaseParameter}
 * @record
 * @struct
 */
function HeaderParameter() {}
 /** @type {string} */
HeaderParameter.prototype.type;
/**
 * @extends {BaseParameter}
 * @extends {BaseSchema}
 * @record
 * @struct
 */
function FormDataParameter() {}
 /** @type {string} */
FormDataParameter.prototype.type;
 /** @type {string} */
FormDataParameter.prototype.collectionFormat;

/** @typedef {?} */
var Parameter;
/**
 * @record
 * @struct
 */
function Path() {}
 /** @type {string} */
Path.prototype.$ref;
 /** @type {?} */
Path.prototype.get;
 /** @type {?} */
Path.prototype.put;
 /** @type {?} */
Path.prototype.post;
 /** @type {?} */
Path.prototype.delete;
 /** @type {?} */
Path.prototype.options;
 /** @type {?} */
Path.prototype.head;
 /** @type {?} */
Path.prototype.patch;
 /** @type {!Array<?>} */
Path.prototype.parameters;
/**
 * @record
 * @struct
 */
function Operation() {}
 /** @type {?} */
Operation.prototype.responses;
 /** @type {string} */
Operation.prototype.summary;
 /** @type {string} */
Operation.prototype.description;
 /** @type {?} */
Operation.prototype.externalDocs;
 /** @type {string} */
Operation.prototype.operationId;
 /** @type {!Array<string>} */
Operation.prototype.produces;
 /** @type {!Array<string>} */
Operation.prototype.consumes;
 /** @type {!Array<?>} */
Operation.prototype.parameters;
 /** @type {!Array<string>} */
Operation.prototype.schemes;
 /** @type {boolean} */
Operation.prototype.deprecated;
 /** @type {!Array<?>} */
Operation.prototype.security;
 /** @type {!Array<string>} */
Operation.prototype.tags;
/**
 * @record
 * @struct
 */
function Response() {}
 /** @type {string} */
Response.prototype.description;
 /** @type {?} */
Response.prototype.schema;
 /** @type {?} */
Response.prototype.headers;
 /** @type {?} */
Response.prototype.examples;
/**
 * @record
 * @struct
 */
function BaseSchema() {}
 /** @type {string} */
BaseSchema.prototype.format;
 /** @type {string} */
BaseSchema.prototype.title;
 /** @type {string} */
BaseSchema.prototype.description;
 /** @type {(string|number|boolean|!Object)} */
BaseSchema.prototype.default;
 /** @type {number} */
BaseSchema.prototype.multipleOf;
 /** @type {number} */
BaseSchema.prototype.maximum;
 /** @type {number} */
BaseSchema.prototype.exclusiveMaximum;
 /** @type {number} */
BaseSchema.prototype.minimum;
 /** @type {number} */
BaseSchema.prototype.exclusiveMinimum;
 /** @type {number} */
BaseSchema.prototype.maxLength;
 /** @type {number} */
BaseSchema.prototype.minLength;
 /** @type {string} */
BaseSchema.prototype.pattern;
 /** @type {number} */
BaseSchema.prototype.maxItems;
 /** @type {number} */
BaseSchema.prototype.minItems;
 /** @type {boolean} */
BaseSchema.prototype.uniqueItems;
 /** @type {number} */
BaseSchema.prototype.maxProperties;
 /** @type {number} */
BaseSchema.prototype.minProperties;
 /** @type {!Array<(string|number|boolean|!Object)>} */
BaseSchema.prototype.enum;
 /** @type {string} */
BaseSchema.prototype.type;
 /** @type {(?|!Array<?>)} */
BaseSchema.prototype.items;
/**
 * @extends {BaseSchema}
 * @record
 * @struct
 */
function Schema() {}
 /** @type {string} */
Schema.prototype.$ref;
 /** @type {!Array<?>} */
Schema.prototype.allOf;
 /** @type {?} */
Schema.prototype.additionalProperties;
 /** @type {?} */
Schema.prototype.properties;
 /** @type {string} */
Schema.prototype.discriminator;
 /** @type {boolean} */
Schema.prototype.readOnly;
 /** @type {?} */
Schema.prototype.xml;
 /** @type {?} */
Schema.prototype.externalDocs;
 /** @type {?} */
Schema.prototype.example;
 /** @type {!Array<string>} */
Schema.prototype.required;
/**
 * @record
 * @struct
 */
function XML() {}
 /** @type {string} */
XML.prototype.type;
 /** @type {string} */
XML.prototype.namespace;
 /** @type {string} */
XML.prototype.prefix;
 /** @type {string} */
XML.prototype.attribute;
 /** @type {boolean} */
XML.prototype.wrapped;
/**
 * @record
 * @struct
 */
function BaseSecurity() {}
 /** @type {string} */
BaseSecurity.prototype.type;
 /** @type {string} */
BaseSecurity.prototype.description;
/**
 * @extends {BaseSecurity}
 * @record
 * @struct
 */
function BasicAuthenticationSecurity() {}
/**
 * @extends {BaseSecurity}
 * @record
 * @struct
 */
function ApiKeySecurity() {}
 /** @type {string} */
ApiKeySecurity.prototype.name;
 /** @type {string} */
ApiKeySecurity.prototype.in;
/**
 * @extends {BaseSecurity}
 * @record
 * @struct
 */
function BaseOAuthSecuirty() {}
 /** @type {string} */
BaseOAuthSecuirty.prototype.flow;
/**
 * @extends {BaseOAuthSecuirty}
 * @record
 * @struct
 */
function OAuth2ImplicitSecurity() {}
 /** @type {string} */
OAuth2ImplicitSecurity.prototype.authorizationUrl;
/**
 * @extends {BaseOAuthSecuirty}
 * @record
 * @struct
 */
function OAuth2PasswordSecurity() {}
 /** @type {string} */
OAuth2PasswordSecurity.prototype.tokenUrl;
 /** @type {!Array<?>} */
OAuth2PasswordSecurity.prototype.scopes;
/**
 * @extends {BaseOAuthSecuirty}
 * @record
 * @struct
 */
function OAuth2ApplicationSecurity() {}
 /** @type {string} */
OAuth2ApplicationSecurity.prototype.tokenUrl;
 /** @type {!Array<?>} */
OAuth2ApplicationSecurity.prototype.scopes;
/**
 * @extends {BaseOAuthSecuirty}
 * @record
 * @struct
 */
function OAuth2AccessCodeSecurity() {}
 /** @type {string} */
OAuth2AccessCodeSecurity.prototype.tokenUrl;
 /** @type {string} */
OAuth2AccessCodeSecurity.prototype.authorizationUrl;
 /** @type {!Array<?>} */
OAuth2AccessCodeSecurity.prototype.scopes;
/**
 * @record
 * @struct
 */
function OAuthScope() {}

/* TODO: IndexSignature:  */

/** @typedef {?} */
var Security;
/**
 * @record
 * @struct
 */
function Spec() {}
 /** @type {string} */
Spec.prototype.swagger;
 /** @type {?} */
Spec.prototype.info;
 /** @type {?} */
Spec.prototype.externalDocs;
 /** @type {string} */
Spec.prototype.host;
 /** @type {string} */
Spec.prototype.basePath;
 /** @type {!Array<string>} */
Spec.prototype.schemes;
 /** @type {!Array<string>} */
Spec.prototype.consumes;
 /** @type {!Array<string>} */
Spec.prototype.produces;
 /** @type {?} */
Spec.prototype.paths;
 /** @type {?} */
Spec.prototype.definitions;
 /** @type {?} */
Spec.prototype.parameters;
 /** @type {?} */
Spec.prototype.responses;
 /** @type {!Array<?>} */
Spec.prototype.security;
 /** @type {?} */
Spec.prototype.securityDefinitions;
 /** @type {!Array<?>} */
Spec.prototype.tags;
