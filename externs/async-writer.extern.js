/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/async-writer/index.d.ts:

/* TODO: ImportEqualsDeclaration in  */

/* TODO: ImportEqualsDeclaration in  */
/** @const */
var async_writer = {};
/**
 * @record
 * @struct
 */
async_writer.EventFunction = function() {};

/* TODO: CallSignature: async_writer */

/**
 * @constructor
 * @struct
 * @param {!internal.EventEmitter} events
 */
async_writer.StringWriter = function(events) {};

/**
 * @return {void}
 */
async_writer.StringWriter.prototype.end = function() {};

/**
 * @param {string} what
 * @return {!async_writer.StringWriter}
 */
async_writer.StringWriter.prototype.write = function(what) {};

/**
 * @return {string}
 */
async_writer.StringWriter.prototype.toString = function() {};

/**
 * @constructor
 * @struct
 * @param {!internal.Stream} wrappedStream
 */
async_writer.BufferedWriter = function(wrappedStream) {};

/**
 * @return {void}
 */
async_writer.BufferedWriter.prototype.flush = function() {};

/**
 * @param {string} event
 * @param {!Function} callback
 * @return {!async_writer.BufferedWriter}
 */
async_writer.BufferedWriter.prototype.on = function(event, callback) {};

/**
 * @param {string} event
 * @param {!Function} callback
 * @return {!async_writer.BufferedWriter}
 */
async_writer.BufferedWriter.prototype.once = function(event, callback) {};

/**
 * @return {void}
 */
async_writer.BufferedWriter.prototype.clear = function() {};

/**
 * @return {void}
 */
async_writer.BufferedWriter.prototype.end = function() {};

/**
 * @param {string} what
 * @return {!async_writer.BufferedWriter}
 */
async_writer.BufferedWriter.prototype.write = function(what) {};
/**
 * @record
 * @struct
 */
async_writer.BeginAsyncOptions = function() {};
 /** @type {boolean} */
async_writer.BeginAsyncOptions.prototype.last;
 /** @type {number} */
async_writer.BeginAsyncOptions.prototype.timeout;
 /** @type {string} */
async_writer.BeginAsyncOptions.prototype.name;

/**
 * @constructor
 * @struct
 * @param {?=} writer
 * @param {!Object<string,?>=} global
 * @param {boolean=} async
 * @param {boolean=} buffer
 */
async_writer.AsyncWriter = function(writer, global, async, buffer) {};
 /** @type {!async_writer.AsyncWriter} */
async_writer.AsyncWriter.prototype.isAsyncWriter;

/**
 * @return {void}
 */
async_writer.AsyncWriter.enableAsyncStackTrace = function() {};

/**
 * @return {void}
 */
async_writer.AsyncWriter.prototype.sync = function() {};

/**
 * @return {!Object<string,?>}
 */
async_writer.AsyncWriter.prototype.getAttributes = function() {};

/**
 * @return {?}
 */
async_writer.AsyncWriter.prototype.getAttribute = function() {};

/**
 * @param {string} str
 * @return {!async_writer.AsyncWriter}
 */
async_writer.AsyncWriter.prototype.write = function(str) {};

/**
 * @return {string}
 */
async_writer.AsyncWriter.prototype.getOutput = function() {};

/**
 * @param {!Function} func
 * @param {!Object} thisObj
 * @return {string}
 */
async_writer.AsyncWriter.prototype.captureString = function(func, thisObj) {};

/**
 * @param {(!async_writer.StringWriter|!async_writer.BufferedWriter)} newWriter
 * @param {!Function} func
 * @param {!Object} thisObj
 * @return {void}
 */
async_writer.AsyncWriter.prototype.swapWriter = function(newWriter, func, thisObj) {};

/**
 * @param {(!async_writer.StringWriter|!async_writer.BufferedWriter)} writer
 * @return {!async_writer.AsyncWriter}
 */
async_writer.AsyncWriter.prototype.createNestedWriter = function(writer) {};

/**
 * @param {(number|!async_writer.BeginAsyncOptions)=} options
 * @return {!async_writer.AsyncWriter}
 */
async_writer.AsyncWriter.prototype.beginAsync = function(options) {};

/**
 * @param {(number|!async_writer.BeginAsyncOptions)} options
 * @param {!async_writer.AsyncWriter} parent
 * @return {void}
 */
async_writer.AsyncWriter.prototype.handleBeginAsync = function(options, parent) {};

/**
 * @param {string} event
 * @param {!Function} callback
 * @return {!async_writer.AsyncWriter}
 */
async_writer.AsyncWriter.prototype.on = function(event, callback) {};

/**
 * @param {string} event
 * @param {!Function} callback
 * @return {!async_writer.AsyncWriter}
 */
async_writer.AsyncWriter.prototype.once = function(event, callback) {};

/**
 * @param {!Function} callback
 * @return {!async_writer.AsyncWriter}
 */
async_writer.AsyncWriter.prototype.onLast = function(callback) {};

/**
 * @param {?} arg
 * @return {!async_writer.AsyncWriter}
 */
async_writer.AsyncWriter.prototype.emit = function(arg) {};

/**
 * @return {!async_writer.AsyncWriter}
 */
async_writer.AsyncWriter.prototype.removeListener = function() {};

/**
 * @param {!internal.Stream} stream
 * @return {!async_writer.AsyncWriter}
 */
async_writer.AsyncWriter.prototype.pipe = function(stream) {};

/**
 * @param {!Error} e
 * @return {void}
 */
async_writer.AsyncWriter.prototype.error = function(e) {};

/**
 * @param {?=} data
 * @return {!async_writer.AsyncWriter}
 */
async_writer.AsyncWriter.prototype.end = function(data) {};

/**
 * @param {boolean} isAsync
 * @return {void}
 */
async_writer.AsyncWriter.prototype.handleEnd = function(isAsync) {};

/**
 * @return {void}
 */
async_writer.AsyncWriter.prototype._finish = function() {};

/**
 * @return {void}
 */
async_writer.AsyncWriter.prototype.flush = function() {};
/**
 * @record
 * @struct
 */
async_writer.AsyncWriterOptions = function() {};
 /** @type {!Object<string,?>} */
async_writer.AsyncWriterOptions.prototype.global;
 /** @type {boolean} */
async_writer.AsyncWriterOptions.prototype.buffer;

/**
 * @param {?=} writer
 * @param {!async_writer.AsyncWriterOptions=} options
 * @return {!async_writer.AsyncWriter}
 */
async_writer.create = function(writer, options) {};

/**
 * @return {void}
 */
async_writer.enableAsyncStackTrace = function() {};

/* TODO: ExportAssignment in  */
