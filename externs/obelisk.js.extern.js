/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/obelisk.js/index.d.ts:
/** @const */
var obelisk = {};
 /** @type {string} */
obelisk.version;
 /** @type {string} */
obelisk.author;

/**
 * @constructor
 * @struct
 * @param {number=} a
 * @param {number=} b
 * @param {number=} c
 * @param {number=} d
 * @param {number=} tx
 * @param {number=} ty
 */
obelisk.Matrix = function(a, b, c, d, tx, ty) {};
 /** @type {number} */
obelisk.Matrix.prototype.a;
 /** @type {number} */
obelisk.Matrix.prototype.b;
 /** @type {number} */
obelisk.Matrix.prototype.c;
 /** @type {number} */
obelisk.Matrix.prototype.d;
 /** @type {number} */
obelisk.Matrix.prototype.tx;
 /** @type {number} */
obelisk.Matrix.prototype.ty;

/**
 * @constructor
 * @struct
 * @param {number=} x
 * @param {number=} y
 */
obelisk.Point = function(x, y) {};
 /** @type {number} */
obelisk.Point.prototype.x;
 /** @type {number} */
obelisk.Point.prototype.y;

/**
 * @constructor
 * @struct
 * @param {number=} x
 * @param {number=} y
 * @param {number=} z
 */
obelisk.Point3D = function(x, y, z) {};
 /** @type {number} */
obelisk.Point3D.prototype.x;
 /** @type {number} */
obelisk.Point3D.prototype.y;
 /** @type {number} */
obelisk.Point3D.prototype.z;

/**
 * @param {!obelisk.Point=} offset
 * @return {!obelisk.Point}
 */
obelisk.Point3D.prototype.toGlobalCoordinates = function(offset) {};
/**
 * @constructor
 * @struct
 */
obelisk.ColorGeom = function() {};

/**
 * @param {number} color
 * @return {number}
 */
obelisk.ColorGeom.get32 = function(color) {};

/**
 * @param {number} color
 * @param {number} brightness
 * @param {boolean=} highlight
 * @return {number}
 */
obelisk.ColorGeom.applyBrightness = function(color, brightness, highlight) {};
/**
 * @constructor
 * @struct
 */
obelisk.ColorPattern = function() {};
 /** @type {number} */
obelisk.ColorPattern.GRASS_GREEN;
 /** @type {number} */
obelisk.ColorPattern.YELLOW;
 /** @type {number} */
obelisk.ColorPattern.WINE_RED;
 /** @type {number} */
obelisk.ColorPattern.PINK;
 /** @type {number} */
obelisk.ColorPattern.PURPLE;
 /** @type {number} */
obelisk.ColorPattern.BLUE;
 /** @type {number} */
obelisk.ColorPattern.GRAY;
 /** @type {number} */
obelisk.ColorPattern.BLACK;
 /** @type {!Array<number>} */
obelisk.ColorPattern.FINE_COLORS;

/**
 * @return {number}
 */
obelisk.ColorPattern.getRandomComfortableColor = function() {};
/**
 * @constructor
 * @struct
 */
obelisk.CanvasTool = function() {};

/**
 * @param {!ImageData} imageData
 * @param {number} x
 * @param {number} y
 * @return {number}
 */
obelisk.CanvasTool.getPixel = function(imageData, x, y) {};
/**
 * @constructor
 * @struct
 */
obelisk.CanvasManager = function() {};
 /** @type {!HTMLCanvasElement} */
obelisk.CanvasManager.defaultCanvas;

/**
 * @return {!HTMLCanvasElement}
 */
obelisk.CanvasManager.getDefaultCanvas = function() {};

/**
 * @return {!HTMLCanvasElement}
 */
obelisk.CanvasManager.getNewCanvas = function() {};

/**
 * @constructor
 * @struct
 */
obelisk.AbstractColor = function() {};
 /** @type {number} */
obelisk.AbstractColor.prototype.inner;
 /** @type {number} */
obelisk.AbstractColor.prototype.border;
 /** @type {number} */
obelisk.AbstractColor.prototype.borderHighlight;
 /** @type {number} */
obelisk.AbstractColor.prototype.left;
 /** @type {number} */
obelisk.AbstractColor.prototype.right;
 /** @type {number} */
obelisk.AbstractColor.prototype.horizontal;
 /** @type {number} */
obelisk.AbstractColor.prototype.leftSlope;
 /** @type {number} */
obelisk.AbstractColor.prototype.rightSlope;

/**
 * @constructor
 * @struct
 * @param {number=} border
 * @param {number=} borderHighlight
 * @param {number=} left
 * @param {number=} right
 * @param {number=} horizontal
 */
obelisk.CubeColor = function(border, borderHighlight, left, right, horizontal) {};
 /** @type {number} */
obelisk.CubeColor.prototype.BRIGHTNESS_GAIN;

/**
 * @param {number} horizontal
 * @return {!obelisk.CubeColor}
 */
obelisk.CubeColor.prototype.getByHorizontalColor = function(horizontal) {};

/**
 * @constructor
 * @struct
 * @param {number=} border
 * @param {number=} borderHighlight
 * @param {number=} left
 * @param {number=} right
 */
obelisk.PyramidColor = function(border, borderHighlight, left, right) {};
 /** @type {number} */
obelisk.PyramidColor.prototype.BRIGHTNESS_GAIN;

/**
 * @param {number} horizontal
 * @return {!obelisk.PyramidColor}
 */
obelisk.PyramidColor.prototype.getByRightColor = function(horizontal) {};

/**
 * @constructor
 * @struct
 * @param {number=} border
 * @param {number=} inner
 */
obelisk.SideColor = function(border, inner) {};
 /** @type {number} */
obelisk.SideColor.prototype.BRIGHTNESS_GAIN;

/**
 * @param {number} inner
 * @return {!obelisk.SideColor}
 */
obelisk.SideColor.prototype.getByInnerColor = function(inner) {};

/**
 * @constructor
 * @struct
 * @param {number=} border
 * @param {number=} borderHighlight
 * @param {number=} left
 * @param {number=} right
 * @param {number=} leftSlope
 * @param {number=} rightSlope
 */
obelisk.SlopeColor = function(border, borderHighlight, left, right, leftSlope, rightSlope) {};
 /** @type {number} */
obelisk.SlopeColor.prototype.BRIGHTNESS_GAIN;

/**
 * @param {number} horizontal
 * @return {!obelisk.SlopeColor}
 */
obelisk.SlopeColor.prototype.getByHorizontalColor = function(horizontal) {};

/**
 * @constructor
 * @struct
 */
obelisk.AbstractDimension = function() {};
 /** @type {number} */
obelisk.AbstractDimension.prototype.xAxis;
 /** @type {number} */
obelisk.AbstractDimension.prototype.yAxis;
 /** @type {number} */
obelisk.AbstractDimension.prototype.zAxis;
 /** @type {boolean} */
obelisk.AbstractDimension.prototype.tall;

/**
 * @constructor
 * @struct
 * @param {number=} xAxis
 * @param {number=} yAxis
 */
obelisk.BrickDimension = function(xAxis, yAxis) {};

/**
 * @constructor
 * @struct
 * @param {number=} xAxis
 * @param {number=} yAxis
 * @param {number=} zAxis
 */
obelisk.CubeDimension = function(xAxis, yAxis, zAxis) {};

/**
 * @constructor
 * @struct
 * @param {number=} axis
 * @param {boolean=} tall
 */
obelisk.PyramidDimension = function(axis, tall) {};

/**
 * @constructor
 * @struct
 * @param {number=} xAxis
 * @param {number=} zAxis
 */
obelisk.SideXDimension = function(xAxis, zAxis) {};

/**
 * @constructor
 * @struct
 * @param {number=} yAxis
 * @param {number=} zAxis
 */
obelisk.SideYDimension = function(yAxis, zAxis) {};

/**
 * @constructor
 * @struct
 * @param {number=} xAxis
 * @param {number=} yAxis
 */
obelisk.SlopeDimension = function(xAxis, yAxis) {};

/**
 * @constructor
 * @struct
 * @param {number} w
 * @param {number} h
 * @param {boolean=} useDefaultCanvas
 */
obelisk.BitmapData = function(w, h, useDefaultCanvas) {};
 /** @type {!ImageData} */
obelisk.BitmapData.prototype.imageData;
 /** @type {!HTMLCanvasElement} */
obelisk.BitmapData.prototype.canvas;
 /** @type {!CanvasRenderingContext2D} */
obelisk.BitmapData.prototype.context;

/**
 * @param {number} posX
 * @param {number} posY
 * @param {number} color
 * @return {void}
 */
obelisk.BitmapData.prototype.setPixel = function(posX, posY, color) {};

/**
 * @param {number} index
 * @param {number} color
 * @return {void}
 */
obelisk.BitmapData.prototype.setPixelByIndex = function(index, color) {};

/**
 * @param {number} x
 * @param {number} y
 * @return {boolean}
 */
obelisk.BitmapData.prototype.checkPixelAvailable = function(x, y) {};

/**
 * @param {number} posX
 * @param {number} posY
 * @param {number} color
 * @return {void}
 */
obelisk.BitmapData.prototype.floodFill = function(posX, posY, color) {};

/**
 * @constructor
 * @struct
 * @param {!obelisk.AbstractPrimitive} primitive
 * @param {!obelisk.Point3D=} point3D
 */
obelisk.PixelObject = function(primitive, point3D) {};
 /** @type {number} */
obelisk.PixelObject.prototype.x;
 /** @type {number} */
obelisk.PixelObject.prototype.y;
 /** @type {!HTMLCanvasElement} */
obelisk.PixelObject.prototype.canvas;

/**
 * @constructor
 * @struct
 * @param {!HTMLCanvasElement} canvas
 * @param {!obelisk.Point=} point
 */
obelisk.PixelView = function(canvas, point) {};
 /** @type {!HTMLCanvasElement} */
obelisk.PixelView.prototype.canvas;
 /** @type {!CanvasRenderingContext2D} */
obelisk.PixelView.prototype.context;
 /** @type {!obelisk.Point} */
obelisk.PixelView.prototype.point;

/**
 * @param {!obelisk.AbstractPrimitive} primitive
 * @param {!obelisk.Point3D=} point3D
 * @return {void}
 */
obelisk.PixelView.prototype.renderObject = function(primitive, point3D) {};

/**
 * @return {void}
 */
obelisk.PixelView.prototype.clear = function() {};

/**
 * @constructor
 * @struct
 */
obelisk.AbstractPrimitive = function() {};
 /** @type {!HTMLCanvasElement} */
obelisk.AbstractPrimitive.prototype.canvas;
 /** @type {number} */
obelisk.AbstractPrimitive.prototype.w;
 /** @type {number} */
obelisk.AbstractPrimitive.prototype.h;
 /** @type {!obelisk.AbstractDimension} */
obelisk.AbstractPrimitive.prototype.dimension;
 /** @type {!obelisk.AbstractColor} */
obelisk.AbstractPrimitive.prototype.color;
 /** @type {boolean} */
obelisk.AbstractPrimitive.prototype.border;
 /** @type {!obelisk.BitmapData} */
obelisk.AbstractPrimitive.prototype.bitmapData;
 /** @type {boolean} */
obelisk.AbstractPrimitive.prototype.useDefaultCanvas;
 /** @type {!obelisk.Matrix} */
obelisk.AbstractPrimitive.prototype.matrix;

/**
 * @constructor
 * @struct
 * @param {!obelisk.BrickDimension=} dimension
 * @param {!obelisk.SideColor=} color
 * @param {boolean=} border
 * @param {boolean=} useDefaultCanvas
 */
obelisk.Brick = function(dimension, color, border, useDefaultCanvas) {};

/**
 * @constructor
 * @struct
 * @param {!obelisk.CubeDimension=} dimension
 * @param {!obelisk.CubeColor=} color
 * @param {boolean=} border
 * @param {boolean=} useDefaultCanvas
 */
obelisk.Cube = function(dimension, color, border, useDefaultCanvas) {};

/**
 * @constructor
 * @struct
 * @param {!obelisk.PyramidDimension=} dimension
 * @param {!obelisk.PyramidColor=} color
 * @param {boolean=} border
 * @param {boolean=} useDefaultCanvas
 */
obelisk.Pyramid = function(dimension, color, border, useDefaultCanvas) {};

/**
 * @constructor
 * @struct
 * @param {!obelisk.SideXDimension=} dimension
 * @param {!obelisk.SideColor=} color
 * @param {boolean=} border
 * @param {boolean=} useDefaultCanvas
 */
obelisk.SideX = function(dimension, color, border, useDefaultCanvas) {};

/**
 * @constructor
 * @struct
 * @param {!obelisk.SideYDimension=} dimension
 * @param {!obelisk.SideColor=} color
 * @param {boolean=} border
 * @param {boolean=} useDefaultCanvas
 */
obelisk.SideY = function(dimension, color, border, useDefaultCanvas) {};

/**
 * @constructor
 * @struct
 * @param {!obelisk.SlopeDimension=} dimension
 * @param {!obelisk.SlopeColor=} color
 * @param {boolean=} border
 * @param {boolean=} useDefaultCanvas
 */
obelisk.SlopeEast = function(dimension, color, border, useDefaultCanvas) {};

/**
 * @constructor
 * @struct
 * @param {!obelisk.SlopeDimension=} dimension
 * @param {!obelisk.SlopeColor=} color
 * @param {boolean=} border
 * @param {boolean=} useDefaultCanvas
 */
obelisk.SlopeNorth = function(dimension, color, border, useDefaultCanvas) {};

/**
 * @constructor
 * @struct
 * @param {!obelisk.SlopeDimension=} dimension
 * @param {!obelisk.SlopeColor=} color
 * @param {boolean=} border
 * @param {boolean=} useDefaultCanvas
 */
obelisk.SlopeSouth = function(dimension, color, border, useDefaultCanvas) {};

/**
 * @constructor
 * @struct
 * @param {!obelisk.SlopeDimension=} dimension
 * @param {!obelisk.SlopeColor=} color
 * @param {boolean=} border
 * @param {boolean=} useDefaultCanvas
 */
obelisk.SlopeWest = function(dimension, color, border, useDefaultCanvas) {};
