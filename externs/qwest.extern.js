/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/qwest/index.d.ts:
/** @const */
var Qwest = {};
/**
 * @record
 * @struct
 */
Qwest.Static = function() {};
 /** @type {string} */
Qwest.Static.prototype.base;
 /** @type {boolean} */
Qwest.Static.prototype.xhr2;

/**
 * Sets the request limit
 * @param {number} by
 * @return {void}
 */
Qwest.Static.prototype.limit = function(by) {};

/**
 * Set default cross-domain response type for IE8/9 (defaults to 'json')
 * @param {string} type
 * @return {void}
 */
Qwest.Static.prototype.setDefaultXdrResponseType = function(type) {};

/**
 * Set XHR options before request
 * @param {function(): ?} callback
 * @return {!Qwest.Static}
 */
Qwest.Static.prototype.before = function(callback) {};

/**
 * Perfoms an AJAX GET request
 * @param {string} url URL that the request is sent to
 * @param {?=} data Data to send to the server
 * @param {!Qwest.Options=} options Configuration options for the AJAX request
 * 
 * @return {!Qwest.Promise}
 */
Qwest.Static.prototype.get = function(url, data, options) {};

/**
 * Perfoms an AJAX POST request
 * @param {string} url URL that the request is sent to
 * @param {?=} data Data to send to the server
 * @param {!Qwest.Options=} options Configuration options for the AJAX request
 * 
 * @return {!Qwest.Promise}
 */
Qwest.Static.prototype.post = function(url, data, options) {};

/**
 * Perfoms an AJAX PUT request
 * @param {string} url URL that the request is sent to
 * @param {?=} data Data to send to the server
 * @param {!Qwest.Options=} options Configuration options for the AJAX request
 * 
 * @return {!Qwest.Promise}
 */
Qwest.Static.prototype.put = function(url, data, options) {};

/**
 * Perfoms an AJAX DELETE request
 * @param {string} url URL that the request is sent to
 * @param {?=} data Data to send to the server
 * @param {!Qwest.Options=} options Configuration options for the AJAX request
 * 
 * @return {!Qwest.Promise}
 */
Qwest.Static.prototype.delete = function(url, data, options) {};
/**
 * @record
 * @struct
 */
Qwest.Promise = function() {};

/**
 * Request is successful
 * @param {function(?, ?): ?} callback
 * @return {!Qwest.Promise}
 */
Qwest.Promise.prototype.then = function(callback) {};

/**
 * Request has failed
 * @param {function(?, ?, ?): ?} callback
 * @return {!Qwest.Promise}
 */
Qwest.Promise.prototype.catch = function(callback) {};

/**
 * Always run
 * @param {function(): ?} callback
 * @return {!Qwest.Promise}
 */
Qwest.Promise.prototype.complete = function(callback) {};
/**
 * @record
 * @struct
 */
Qwest.Options = function() {};
 /** @type {string} */
Qwest.Options.prototype.dataType;
 /** @type {string} */
Qwest.Options.prototype.responseType;
 /** @type {boolean} */
Qwest.Options.prototype.cache;
 /** @type {boolean} */
Qwest.Options.prototype.async;
 /** @type {string} */
Qwest.Options.prototype.user;
 /** @type {string} */
Qwest.Options.prototype.password;
 /** @type {!Object<string,?>} */
Qwest.Options.prototype.headers;
 /** @type {boolean} */
Qwest.Options.prototype.withCredentials;
 /** @type {number} */
Qwest.Options.prototype.timeout;
 /** @type {number} */
Qwest.Options.prototype.attempts;
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "qwest"
/** @const */
tsickle_declare_module.qwest = {};

/* TODO: ExportAssignment in tsickle_declare_module.qwest */
 /** @type {!Qwest.Static} */
var qwest;
