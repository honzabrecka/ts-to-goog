/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/tv4/index.d.ts:
/** @const */
var tv4 = {};
/**
 * @record
 * @struct
 */
tv4.JsonSchema = function() {};

/* TODO: IndexSignature: tv4 */
 /** @type {string} */
tv4.JsonSchema.prototype.title;
 /** @type {string} */
tv4.JsonSchema.prototype.description;
 /** @type {string} */
tv4.JsonSchema.prototype.id;
 /** @type {string} */
tv4.JsonSchema.prototype.$schema;
 /** @type {string} */
tv4.JsonSchema.prototype.type;
 /** @type {?} */
tv4.JsonSchema.prototype.items;
 /** @type {?} */
tv4.JsonSchema.prototype.properties;
 /** @type {?} */
tv4.JsonSchema.prototype.patternProperties;
 /** @type {boolean} */
tv4.JsonSchema.prototype.additionalProperties;
 /** @type {!Array<string>} */
tv4.JsonSchema.prototype.required;
 /** @type {?} */
tv4.JsonSchema.prototype.definitions;
 /** @type {?} */
tv4.JsonSchema.prototype.default;

/** @typedef {!Object<string,!tv4.JsonSchema>} */
tv4.SchemaMap;

/** @typedef {!Object<string,string>} */
tv4.ErrorMap;
/**
 * @record
 * @struct
 */
tv4.ErrorCodes = function() {};

/* TODO: IndexSignature: tv4 */
/**
 * @record
 * @struct
 */
tv4.ValidationError = function() {};
 /** @type {number} */
tv4.ValidationError.prototype.code;
 /** @type {?} */
tv4.ValidationError.prototype.message;
 /** @type {string} */
tv4.ValidationError.prototype.dataPath;
 /** @type {string} */
tv4.ValidationError.prototype.schemaPath;
 /** @type {!Array<!tv4.ValidationError>} */
tv4.ValidationError.prototype.subErrors;
/**
 * @extends {tv4.ValidationError}
 * @record
 * @struct
 */
tv4.ErrorVar = function() {};
 /** @type {?} */
tv4.ErrorVar.prototype.params;
 /** @type {?} */
tv4.ErrorVar.prototype.subErrors;
 /** @type {string} */
tv4.ErrorVar.prototype.stack;
/**
 * @record
 * @struct
 */
tv4.BaseResult = function() {};
 /** @type {!Array<string>} */
tv4.BaseResult.prototype.missing;
 /** @type {boolean} */
tv4.BaseResult.prototype.valid;
/**
 * @extends {tv4.BaseResult}
 * @record
 * @struct
 */
tv4.SingleResult = function() {};
 /** @type {!tv4.ValidationError} */
tv4.SingleResult.prototype.error;
/**
 * @extends {tv4.BaseResult}
 * @record
 * @struct
 */
tv4.MultiResult = function() {};
 /** @type {!Array<!tv4.ValidationError>} */
tv4.MultiResult.prototype.errors;

/** @typedef {function(?, !tv4.JsonSchema): string} */
tv4.FormatValidationFunction;

/** @typedef {function(?, ?, !tv4.JsonSchema, string): (string|!tv4.ValidationError)} */
tv4.KeywordValidationFunction;

/** @typedef {function(boolean, !tv4.ValidationError): void} */
tv4.AsyncValidationCallback;
/**
 * @record
 * @struct
 */
tv4.TV4 = function() {};
 /** @type {!tv4.ErrorVar} */
tv4.TV4.prototype.error;
 /** @type {!Array<string>} */
tv4.TV4.prototype.missing;
 /** @type {!tv4.ErrorCodes} */
tv4.TV4.prototype.errorCodes;

/**
 * @param {?} data
 * @param {!tv4.JsonSchema} schema
 * @param {boolean|function(boolean, !tv4.ValidationError): void=} checkRecursive_or_callback
 * @param {boolean=} banUnknownProperties_or_checkRecursive
 * @param {boolean=} banUnknownProperties
 * @return {boolean|void}
 */
tv4.TV4.prototype.validate = function(data, schema, checkRecursive_or_callback, banUnknownProperties_or_checkRecursive, banUnknownProperties) {};

/**
 * @param {?} data
 * @param {!tv4.JsonSchema} schema
 * @param {boolean=} checkRecursive
 * @param {boolean=} banUnknownProperties
 * @return {!tv4.SingleResult}
 */
tv4.TV4.prototype.validateResult = function(data, schema, checkRecursive, banUnknownProperties) {};

/**
 * @param {?} data
 * @param {!tv4.JsonSchema} schema
 * @param {boolean=} checkRecursive
 * @param {boolean=} banUnknownProperties
 * @return {!tv4.MultiResult}
 */
tv4.TV4.prototype.validateMultiple = function(data, schema, checkRecursive, banUnknownProperties) {};

/**
 * @param {!tv4.JsonSchema|string} schema_or_uri
 * @param {!tv4.JsonSchema=} schema
 * @return {void}
 */
tv4.TV4.prototype.addSchema = function(schema_or_uri, schema) {};

/**
 * @param {string} uri
 * @return {!tv4.JsonSchema}
 */
tv4.TV4.prototype.getSchema = function(uri) {};

/**
 * @return {!Object<string,!tv4.JsonSchema>}
 */
tv4.TV4.prototype.getSchemaMap = function() {};

/**
 * @param {!RegExp=} filter
 * @return {!Array<string>}
 */
tv4.TV4.prototype.getSchemaUris = function(filter) {};

/**
 * @param {!RegExp=} filter
 * @return {!Array<string>}
 */
tv4.TV4.prototype.getMissingUris = function(filter) {};

/**
 * @return {void}
 */
tv4.TV4.prototype.dropSchemas = function() {};

/**
 * @return {!tv4.TV4}
 */
tv4.TV4.prototype.freshApi = function() {};

/**
 * @return {void}
 */
tv4.TV4.prototype.reset = function() {};

/**
 * @param {string|function(!tv4.ValidationError, ?, !tv4.JsonSchema): string} lang_or_reporter
 * @return {void}
 */
tv4.TV4.prototype.setErrorReporter = function(lang_or_reporter) {};

/**
 * @param {string} code
 * @return {void}
 */
tv4.TV4.prototype.language = function(code) {};

/**
 * @param {string} code
 * @param {!Object<string,string>} map
 * @return {void}
 */
tv4.TV4.prototype.addLanguage = function(code, map) {};

/**
 * @param {string|!Object<string,function(?, !tv4.JsonSchema): string>} format_or_formats
 * @param {function(?, !tv4.JsonSchema): string=} validationFunction
 * @return {void}
 */
tv4.TV4.prototype.addFormat = function(format_or_formats, validationFunction) {};

/**
 * @param {string} keyword
 * @param {function(?, ?, !tv4.JsonSchema, string): (string|!tv4.ValidationError)} validationFunction
 * @return {void}
 */
tv4.TV4.prototype.defineKeyword = function(keyword, validationFunction) {};

/**
 * @param {string} codeName
 * @param {number} codeNumber
 * @param {string} defaultMessage
 * @return {void}
 */
tv4.TV4.prototype.defineError = function(codeName, codeNumber, defaultMessage) {};

/**
 * @param {!tv4.JsonSchema} schema
 * @param {string} baseUri
 * @return {?}
 */
tv4.TV4.prototype.normSchema = function(schema, baseUri) {};

/**
 * @param {string} base
 * @param {string} href
 * @return {string}
 */
tv4.TV4.prototype.resolveUrl = function(base, href) {};
 /** @type {!tv4.TV4} */
var tv4;

/* TODO: ExportAssignment in  */

/* TODO: NamespaceExportDeclaration in  */
