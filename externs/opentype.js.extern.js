/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/opentype.js/index.d.ts:

/* TODO: NamespaceExportDeclaration in  */
/**
 * @record
 * @struct
 */
function Contour() {}
/**
 * @constructor
 * @struct
 */
function Encoding() {}
 /** @type {string} */
Encoding.prototype.charset;
 /** @type {?} */
Encoding.prototype.font;

/**
 * @param {string} c
 * @return {number}
 */
Encoding.prototype.charToGlyphIndex = function(c) {};
/**
 * @record
 * @struct
 */
function Field() {}
 /** @type {string} */
Field.prototype.name;
 /** @type {string} */
Field.prototype.type;
 /** @type {?} */
Field.prototype.value;

/**
 * @constructor
 * @struct
 * @param {?} options
 */
function Font(options) {}
 /** @type {?} */
Font.prototype.nametoGlyphIndex;
 /** @type {?} */
Font.prototype.supported;
 /** @type {number} */
Font.prototype.ascender;
 /** @type {?} */
Font.prototype.cffEncoding;
 /** @type {number} */
Font.prototype.descender;
 /** @type {?} */
Font.prototype.encoding;
 /** @type {?} */
Font.prototype.getGposKerningValue;
 /** @type {?} */
Font.prototype.glyphs;
 /** @type {?} */
Font.prototype.glyphNames;
 /** @type {?} */
Font.prototype.kerningPairs;
 /** @type {?} */
Font.prototype.names;
 /** @type {number} */
Font.prototype.numberOfHMetrics;
 /** @type {number} */
Font.prototype.numGlyphs;
 /** @type {string} */
Font.prototype.outlinesFormat;
 /** @type {?} */
Font.prototype.tables;
 /** @type {number} */
Font.prototype.unitsPerEm;

/**
 * @param {string} c
 * @return {?}
 */
Font.prototype.charToGlyph = function(c) {};

/**
 * @param {string} s
 * @return {number}
 */
Font.prototype.charToGlyphIndex = function(s) {};

/**
 * @return {void}
 */
Font.prototype.download = function() {};

/**
 * @param {!CanvasRenderingContext2D} ctx
 * @param {string} text
 * @param {number} x
 * @param {number} y
 * @param {number} fontSize
 * @param {?=} options
 * @return {void}
 */
Font.prototype.draw = function(ctx, text, x, y, fontSize, options) {};

/**
 * @param {!CanvasRenderingContext2D} ctx
 * @param {string} text
 * @param {number} x
 * @param {number} y
 * @param {number} fontSize
 * @param {?=} options
 * @return {void}
 */
Font.prototype.drawMetrics = function(ctx, text, x, y, fontSize, options) {};

/**
 * @param {!CanvasRenderingContext2D} ctx
 * @param {string} text
 * @param {number} x
 * @param {number} y
 * @param {number} fontSize
 * @param {?=} options
 * @return {void}
 */
Font.prototype.drawPoints = function(ctx, text, x, y, fontSize, options) {};

/**
 * @param {string} text
 * @param {number} x
 * @param {number} y
 * @param {number} fontSize
 * @param {?} options
 * @param {?} callback
 * @return {void}
 */
Font.prototype.forEachGlyph = function(text, x, y, fontSize, options, callback) {};

/**
 * @param {string} name
 * @return {string}
 */
Font.prototype.getEnglishName = function(name) {};

/**
 * @param {(number|?)} leftGlyph
 * @param {(number|?)} rightGlyph
 * @return {number}
 */
Font.prototype.getKerningValue = function(leftGlyph, rightGlyph) {};

/**
 * @param {string} text
 * @param {number} x
 * @param {number} y
 * @param {number} fontSize
 * @param {?=} options
 * @return {?}
 */
Font.prototype.getPath = function(text, x, y, fontSize, options) {};

/**
 * @param {string} text
 * @param {number} x
 * @param {number} y
 * @param {number} fontSize
 * @param {?=} options
 * @return {!Array<?>}
 */
Font.prototype.getPaths = function(text, x, y, fontSize, options) {};

/**
 * @param {number} gid
 * @return {string}
 */
Font.prototype.glyphIndexToName = function(gid) {};

/**
 * @param {string} c
 * @return {boolean}
 */
Font.prototype.hasChar = function(c) {};

/**
 * @param {string} name
 * @return {?}
 */
Font.prototype.nameToGlyph = function(name) {};

/**
 * @param {string} name
 * @return {number}
 */
Font.prototype.nameToGlyphIndex = function(name) {};

/**
 * @param {string} s
 * @return {!Array<?>}
 */
Font.prototype.stringToGlyphs = function(s) {};

/**
 * @return {!ArrayBuffer}
 */
Font.prototype.toArrayBuffer = function() {};

/**
 * @return {!ArrayBuffer}
 */
Font.prototype.toBuffer = function() {};

/**
 * @return {?}
 */
Font.prototype.toTables = function() {};

/**
 * @return {void}
 */
Font.prototype.validate = function() {};
/**
 * @record
 * @struct
 */
function FontNames() {}
 /** @type {?} */
FontNames.prototype.copyright;
 /** @type {?} */
FontNames.prototype.description;
 /** @type {?} */
FontNames.prototype.designer;
 /** @type {?} */
FontNames.prototype.designerURL;
 /** @type {?} */
FontNames.prototype.fontFamily;
 /** @type {?} */
FontNames.prototype.fontSubfamily;
 /** @type {?} */
FontNames.prototype.fullName;
 /** @type {?} */
FontNames.prototype.license;
 /** @type {?} */
FontNames.prototype.licenseURL;
 /** @type {?} */
FontNames.prototype.manufacturer;
 /** @type {?} */
FontNames.prototype.manufacturerURL;
 /** @type {?} */
FontNames.prototype.postScriptName;
 /** @type {?} */
FontNames.prototype.trademark;
 /** @type {?} */
FontNames.prototype.version;
/**
 * @record
 * @struct
 */
function FontOptions() {}
 /** @type {string} */
FontOptions.prototype.copyright;
 /** @type {number} */
FontOptions.prototype.ascender;
 /** @type {number} */
FontOptions.prototype.descender;
 /** @type {string} */
FontOptions.prototype.description;
 /** @type {string} */
FontOptions.prototype.designer;
 /** @type {string} */
FontOptions.prototype.designerURL;
 /** @type {boolean} */
FontOptions.prototype.empty;
 /** @type {string} */
FontOptions.prototype.familyName;
 /** @type {string} */
FontOptions.prototype.fullName;
 /** @type {(?|!Array<?>)} */
FontOptions.prototype.glyphs;
 /** @type {string} */
FontOptions.prototype.license;
 /** @type {string} */
FontOptions.prototype.licenseURL;
 /** @type {string} */
FontOptions.prototype.manufacturer;
 /** @type {string} */
FontOptions.prototype.manufacturerURL;
 /** @type {string} */
FontOptions.prototype.postScriptName;
 /** @type {string} */
FontOptions.prototype.styleName;
 /** @type {number} */
FontOptions.prototype.unitsPerEm;
 /** @type {string} */
FontOptions.prototype.trademark;
 /** @type {string} */
FontOptions.prototype.version;

/**
 * @constructor
 * @struct
 * @param {?} options
 */
function Glyph(options) {}
 /** @type {?} */
Glyph.prototype.index;
 /** @type {?} */
Glyph.prototype.xMin;
 /** @type {?} */
Glyph.prototype.xMax;
 /** @type {?} */
Glyph.prototype.yMin;
 /** @type {?} */
Glyph.prototype.yMax;
 /** @type {?} */
Glyph.prototype.points;
 /** @type {number} */
Glyph.prototype.advanceWidth;
 /** @type {string} */
Glyph.prototype.name;
 /** @type {?} */
Glyph.prototype.path;
 /** @type {number} */
Glyph.prototype.unicode;
 /** @type {!Array<number>} */
Glyph.prototype.unicodes;

/**
 * @param {number} unicode
 * @return {void}
 */
Glyph.prototype.addUnicode = function(unicode) {};

/**
 * @param {?} options
 * @return {void}
 */
Glyph.prototype.bindConstructorValues = function(options) {};

/**
 * @param {!CanvasRenderingContext2D} ctx
 * @param {number} x
 * @param {number} y
 * @param {number} fontSize
 * @return {void}
 */
Glyph.prototype.draw = function(ctx, x, y, fontSize) {};

/**
 * @param {!CanvasRenderingContext2D} ctx
 * @param {number} x
 * @param {number} y
 * @param {number} fontSize
 * @return {void}
 */
Glyph.prototype.drawMetrics = function(ctx, x, y, fontSize) {};

/**
 * @param {!CanvasRenderingContext2D} ctx
 * @param {number} x
 * @param {number} y
 * @param {number} fontSize
 * @return {void}
 */
Glyph.prototype.drawPoints = function(ctx, x, y, fontSize) {};

/**
 * @return {!Array<?>}
 */
Glyph.prototype.getContours = function() {};

/**
 * @return {?}
 */
Glyph.prototype.getMetrics = function() {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} fontSize
 * @return {?}
 */
Glyph.prototype.getPath = function(x, y, fontSize) {};
/**
 * @record
 * @struct
 */
function GlyphOptions() {}
 /** @type {number} */
GlyphOptions.prototype.advanceWidth;
 /** @type {number} */
GlyphOptions.prototype.index;
 /** @type {?} */
GlyphOptions.prototype.font;
 /** @type {string} */
GlyphOptions.prototype.name;
 /** @type {?} */
GlyphOptions.prototype.path;
 /** @type {number} */
GlyphOptions.prototype.unicode;
 /** @type {!Array<number>} */
GlyphOptions.prototype.unicodes;
 /** @type {number} */
GlyphOptions.prototype.xMax;
 /** @type {number} */
GlyphOptions.prototype.xMin;
 /** @type {number} */
GlyphOptions.prototype.yMax;
 /** @type {number} */
GlyphOptions.prototype.yMin;

/**
 * @constructor
 * @struct
 * @param {?} post
 */
function GlyphNames(post) {}
 /** @type {?} */
GlyphNames.prototype.names;

/**
 * @param {number} gid
 * @return {string}
 */
GlyphNames.prototype.glyphIndexToName = function(gid) {};

/**
 * @param {string} name
 * @return {number}
 */
GlyphNames.prototype.nameToGlyphIndex = function(name) {};

/**
 * @constructor
 * @struct
 * @param {?} font
 * @param {!Array<?>} glyphs
 */
function GlyphSet(font, glyphs) {}
 /** @type {?} */
GlyphSet.prototype.font;
 /** @type {?} */
GlyphSet.prototype.glyphs;
 /** @type {number} */
GlyphSet.prototype.length;

/**
 * @param {number} index
 * @return {?}
 */
GlyphSet.prototype.get = function(index) {};

/**
 * @param {number} index
 * @param {?} loader
 * @return {void}
 */
GlyphSet.prototype.push = function(index, loader) {};
/**
 * @record
 * @struct
 */
function KerningPairs() {}

/* TODO: IndexSignature:  */

/**
 * @param {string} url
 * @param {?} callback
 * @return {void}
 */
function load(url, callback) {}

/**
 * @param {string} url
 * @return {?}
 */
function loadSync(url) {}
/**
 * @record
 * @struct
 */
function LocalizedName() {}

/* TODO: IndexSignature:  */
/**
 * @record
 * @struct
 */
function Metrics() {}
 /** @type {number} */
Metrics.prototype.leftSideBearing;
 /** @type {number} */
Metrics.prototype.rightSideBearing;
 /** @type {number} */
Metrics.prototype.xMax;
 /** @type {number} */
Metrics.prototype.xMin;
 /** @type {number} */
Metrics.prototype.yMax;
 /** @type {number} */
Metrics.prototype.yMin;

/**
 * @param {?} buffer
 * @return {?}
 */
function parse(buffer) {}

/**
 * @constructor
 * @struct
 */
function Path() {}
 /** @type {?} */
Path.prototype.fill;
 /** @type {?} */
Path.prototype.stroke;
 /** @type {?} */
Path.prototype.strokeWidth;
 /** @type {?} */
Path.prototype.close;
 /** @type {!Array<?>} */
Path.prototype.commands;
 /** @type {?} */
Path.prototype.curveTo;
 /** @type {?} */
Path.prototype.quadTo;
 /** @type {number} */
Path.prototype.unitsPerEm;

/**
 * @param {number} x1
 * @param {number} y1
 * @param {number} x2
 * @param {number} y2
 * @param {number} x
 * @param {number} y
 * @return {void}
 */
Path.prototype.bezierCurveTo = function(x1, y1, x2, y2, x, y) {};

/**
 * @return {void}
 */
Path.prototype.closePath = function() {};

/**
 * @param {!CanvasRenderingContext2D} ctx
 * @return {void}
 */
Path.prototype.draw = function(ctx) {};

/**
 * @param {(?|!Array<?>)} pathOrCommands
 * @return {void}
 */
Path.prototype.extend = function(pathOrCommands) {};

/**
 * @param {number} x
 * @param {number} y
 * @return {void}
 */
Path.prototype.lineTo = function(x, y) {};

/**
 * @param {number} x
 * @param {number} y
 * @return {void}
 */
Path.prototype.moveTo = function(x, y) {};

/**
 * @param {number} x1
 * @param {number} y1
 * @param {number} x
 * @param {number} y
 * @return {void}
 */
Path.prototype.quadraticCurveTo = function(x1, y1, x, y) {};

/**
 * @param {number} decimalPlaces
 * @return {string}
 */
Path.prototype.toPathData = function(decimalPlaces) {};

/**
 * @param {number} decimalPlaces
 * @return {string}
 */
Path.prototype.toSVG = function(decimalPlaces) {};
/**
 * @record
 * @struct
 */
function PathCommand() {}
 /** @type {string} */
PathCommand.prototype.type;
 /** @type {number} */
PathCommand.prototype.x;
 /** @type {number} */
PathCommand.prototype.y;
 /** @type {number} */
PathCommand.prototype.x1;
 /** @type {number} */
PathCommand.prototype.y1;
 /** @type {number} */
PathCommand.prototype.x2;
 /** @type {number} */
PathCommand.prototype.y2;
/**
 * @record
 * @struct
 */
function Point() {}
 /** @type {boolean} */
Point.prototype.lastPointOfContour;
/**
 * @record
 * @struct
 */
function Post() {}
 /** @type {!Array<number>} */
Post.prototype.glyphNameIndex;
 /** @type {number} */
Post.prototype.isFixedPitch;
 /** @type {number} */
Post.prototype.italicAngle;
 /** @type {number} */
Post.prototype.maxMemType1;
 /** @type {number} */
Post.prototype.minMemType1;
 /** @type {number} */
Post.prototype.maxMemType42;
 /** @type {number} */
Post.prototype.minMemType42;
 /** @type {!Array<string>} */
Post.prototype.names;
 /** @type {number} */
Post.prototype.numberOfGlyphs;
 /** @type {!Array<number>} */
Post.prototype.offset;
 /** @type {number} */
Post.prototype.underlinePosition;
 /** @type {number} */
Post.prototype.underlineThickness;
 /** @type {number} */
Post.prototype.version;
/**
 * @record
 * @struct
 */
function RenderOptions() {}
 /** @type {boolean} */
RenderOptions.prototype.kerning;
/**
 * @record
 * @struct
 */
function Table() {}

/* TODO: IndexSignature:  */
 /** @type {!Array<?>} */
Table.prototype.fields;
 /** @type {!Array<?>} */
Table.prototype.tables;
 /** @type {string} */
Table.prototype.tableName;

/**
 * @return {!Array<number>}
 */
Table.prototype.encode = function() {};

/**
 * @return {number}
 */
Table.prototype.sizeOf = function() {};
