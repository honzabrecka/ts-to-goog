/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/loggly/index.d.ts:
/**
 * @record
 * @struct
 */
function LogglyOptions() {}
 /** @type {string} */
LogglyOptions.prototype.token;
 /** @type {string} */
LogglyOptions.prototype.subdomain;
 /** @type {!Array<string>} */
LogglyOptions.prototype.tags;
 /** @type {boolean} */
LogglyOptions.prototype.json;
 /** @type {string} */
LogglyOptions.prototype.host;
 /** @type {{username: string, password: string}} */
LogglyOptions.prototype.auth;
/**
 * @record
 * @struct
 */
function SharedSearchOptions() {}
 /** @type {string} */
SharedSearchOptions.prototype.from;
 /** @type {string} */
SharedSearchOptions.prototype.until;
 /** @type {number} */
SharedSearchOptions.prototype.size;
 /** @type {number} */
SharedSearchOptions.prototype.rows;
/**
 * @extends {SharedSearchOptions}
 * @record
 * @struct
 */
function SearchOptionsWithQ() {}
 /** @type {string} */
SearchOptionsWithQ.prototype.q;
/**
 * @extends {SharedSearchOptions}
 * @record
 * @struct
 */
function SearchOptionsWithQuery() {}
 /** @type {string} */
SearchOptionsWithQuery.prototype.query;

/** @typedef {(!SearchOptionsWithQ|!SearchOptionsWithQuery)} */
var SearchOptions;
/**
 * @record
 * @struct
 */
function SearchResults() {}
 /** @type {!Array<!SearchResultsEvent>} */
SearchResults.prototype.events;
 /** @type {number} */
SearchResults.prototype.total_events;
 /** @type {number} */
SearchResults.prototype.page;
/**
 * @record
 * @struct
 */
function SearchResultsEvent() {}
 /** @type {string} */
SearchResultsEvent.prototype.id;
 /** @type {!Array<string>} */
SearchResultsEvent.prototype.logtypes;
 /** @type {?} */
SearchResultsEvent.prototype.event;
 /** @type {string} */
SearchResultsEvent.prototype.logmsg;
 /** @type {string} */
SearchResultsEvent.prototype.raw;
 /** @type {number} */
SearchResultsEvent.prototype.timestamp;
 /** @type {!Array<string>} */
SearchResultsEvent.prototype.tags;

/**
 * @param {!LogglyOptions} options
 * @return {!LogglyInstance}
 */
function createClient(options) {}
 /** @type {number} */
var version;
/**
 * @record
 * @struct
 */
function LogglyInstance() {}

/**
 * @param {?} message
 * @param {!Array<string>|function(?, ?): void=} tags_or_callback
 * @param {function(?, ?): void=} callback
 * @return {LogglyInstance}
 */
LogglyInstance.prototype.log = function(message, tags_or_callback, callback) {};

/**
 * @param {string|(!SearchOptionsWithQ|!SearchOptionsWithQuery)} query_or_options
 * @param {function(?, !SearchResults): void=} callback
 * @return {!Search}
 */
LogglyInstance.prototype.search = function(query_or_options, callback) {};
/**
 * @record
 * @struct
 */
function Search() {}

/**
 * @param {function(?, !SearchResults): void} callback
 * @return {Search}
 */
Search.prototype.run = function(callback) {};
