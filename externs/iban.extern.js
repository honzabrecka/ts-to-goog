/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/iban/index.d.ts:
/**
 * @record
 * @struct
 */
function IBANStatic() {}

/**
 * \@summary Returns the IBAN in a electronic format.
 * @param {string} iban
 * @return {string}
 */
IBANStatic.prototype.electronicFormat = function(iban) {};

/**
 * \@summary Convert the passed BBAN to an IBAN for this country specification.
 * @param {string} countryCode
 * @param {string} bban
 * @return {string}
 */
IBANStatic.prototype.fromBBAN = function(countryCode, bban) {};

/**
 * \@summary Check if the passed iban is valid according to this specification.
 * @param {string} iban
 * @return {boolean}
 */
IBANStatic.prototype.isValid = function(iban) {};

/**
 * \@summary Check of the passed BBAN is valid.
 * @param {string} countryCode
 * @param {string} bban
 * @return {boolean}
 */
IBANStatic.prototype.isValidBBAN = function(countryCode, bban) {};

/**
 * \@summary Returns the IBAN in a print format.
 * @param {string} iban
 * @param {!Array<string>} separator
 * @return {string}
 */
IBANStatic.prototype.printFormat = function(iban, separator) {};

/**
 * \@summary Convert the passed IBAN to a country-specific BBAN.
 * @param {string} iban
 * @param {!Array<string>} separator
 * @return {string}
 */
IBANStatic.prototype.toBBAN = function(iban, separator) {};
 /** @type {!IBANStatic} */
var IBAN;
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "iban"
/** @const */
tsickle_declare_module.iban = {};

/* TODO: ExportAssignment in tsickle_declare_module.iban */
