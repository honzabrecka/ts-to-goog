/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/deep-diff/index.d.ts:
/** @const */
var deepDiff = {};
/**
 * @record
 * @struct
 */
deepDiff.IDiff = function() {};
 /** @type {string} */
deepDiff.IDiff.prototype.kind;
 /** @type {!Array<string>} */
deepDiff.IDiff.prototype.path;
 /** @type {?} */
deepDiff.IDiff.prototype.lhs;
 /** @type {?} */
deepDiff.IDiff.prototype.rhs;
 /** @type {number} */
deepDiff.IDiff.prototype.index;
 /** @type {!deepDiff.IDiff} */
deepDiff.IDiff.prototype.item;
/**
 * @record
 * @struct
 */
deepDiff.IAccumulator = function() {};
 /** @type {number} */
deepDiff.IAccumulator.prototype.length;

/**
 * @param {!deepDiff.IDiff} diff
 * @return {void}
 */
deepDiff.IAccumulator.prototype.push = function(diff) {};
/**
 * @record
 * @struct
 */
deepDiff.IPrefilter = function() {};

/* TODO: CallSignature: deepDiff */
/**
 * @record
 * @struct
 */
deepDiff.IDeepDiff = function() {};

/**
 * @param {!Object=} lhs
 * @param {!Object=} rhs
 * @param {!deepDiff.IPrefilter=} prefilter
 * @param {!deepDiff.IAccumulator=} acc
 * @return {!Array<!deepDiff.IDiff>|!deepDiff.IDiff}
 */
deepDiff.IDeepDiff.prototype.diff = function(lhs, rhs, prefilter, acc) {};

/**
 * @param {!Object} lhs
 * @param {!Object} rhs
 * @param {!Function} changes
 * @param {!deepDiff.IPrefilter=} prefilter
 * @param {!Array<string>=} path
 * @param {string=} key
 * @param {!Array<!Object>=} stack
 * @return {void}
 */
deepDiff.IDeepDiff.prototype.observableDiff = function(lhs, rhs, changes, prefilter, path, key, stack) {};

/**
 * @param {!Object} target
 * @param {!Object} source
 * @param {!Function} filter
 * @return {void}
 */
deepDiff.IDeepDiff.prototype.applyDiff = function(target, source, filter) {};

/**
 * @param {!Object} target
 * @param {!Object} source
 * @param {!deepDiff.IDiff} change
 * @return {void}
 */
deepDiff.IDeepDiff.prototype.applyChange = function(target, source, change) {};

/**
 * @param {!Object} target
 * @param {!Object} source
 * @param {!deepDiff.IDiff} change
 * @return {void}
 */
deepDiff.IDeepDiff.prototype.revertChange = function(target, source, change) {};

/**
 * @return {boolean}
 */
deepDiff.IDeepDiff.prototype.isConflict = function() {};

/**
 * @return {!deepDiff.IDeepDiff}
 */
deepDiff.IDeepDiff.prototype.noConflict = function() {};
 /** @type {!deepDiff.IDeepDiff} */
var DeepDiff;
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "deep-diff"
/** @const */
tsickle_declare_module.deep_diff = {};
 /** @type {!deepDiff.IDeepDiff} */
tsickle_declare_module.deep_diff.diff;

/* TODO: ExportAssignment in tsickle_declare_module.deep_diff */
