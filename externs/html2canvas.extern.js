/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/html2canvas/index.d.ts:
/** @const */
var Html2Canvas = {};
/**
 * @record
 * @struct
 */
Html2Canvas.Html2CanvasOptions = function() {};
 /** @type {boolean} */
Html2Canvas.Html2CanvasOptions.prototype.allowTaint;
 /** @type {string} */
Html2Canvas.Html2CanvasOptions.prototype.background;
 /** @type {number} */
Html2Canvas.Html2CanvasOptions.prototype.height;
 /** @type {boolean} */
Html2Canvas.Html2CanvasOptions.prototype.letterRendering;
 /** @type {boolean} */
Html2Canvas.Html2CanvasOptions.prototype.logging;
 /** @type {string} */
Html2Canvas.Html2CanvasOptions.prototype.proxy;
 /** @type {boolean} */
Html2Canvas.Html2CanvasOptions.prototype.taintTest;
 /** @type {number} */
Html2Canvas.Html2CanvasOptions.prototype.timeout;
 /** @type {number} */
Html2Canvas.Html2CanvasOptions.prototype.width;
 /** @type {boolean} */
Html2Canvas.Html2CanvasOptions.prototype.useCORS;
 /** @type {boolean} */
Html2Canvas.Html2CanvasOptions.prototype.svgRendering;
/**
 * @record
 * @struct
 */
function Html2CanvasStatic() {}

/* TODO: CallSignature:  */
/**
 * @record
 * @struct
 */
function Html2CanvasThenable() {}

/**
 * @template U
 * @param {function(R): (U|!Html2CanvasThenable<U>)=} onFulfilled
 * @param {function(?): (U|!Html2CanvasThenable<U>)|function(?): void=} onRejected
 * @return {!Html2CanvasThenable<U>}
 */
Html2CanvasThenable.prototype.then = function(onFulfilled, onRejected) {};
/**
 * @extends {Html2CanvasThenable}
 * @record
 * @struct
 */
function Html2CanvasPromise() {}

/**
 * @template U
 * @param {function(R): (U|!Html2CanvasThenable<U>)=} onFulfilled
 * @param {function(?): (U|!Html2CanvasThenable<U>)|function(?): void=} onRejected
 * @return {!Html2CanvasPromise<U>}
 */
Html2CanvasPromise.prototype.then = function(onFulfilled, onRejected) {};

/**
 * @template U
 * @param {function(?): (U|!Html2CanvasThenable<U>)=} onRejected
 * @return {!Html2CanvasPromise<U>}
 */
Html2CanvasPromise.prototype.catch = function(onRejected) {};
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "html2canvas"
/** @const */
tsickle_declare_module.html_canvas = {};

/* TODO: ExportAssignment in tsickle_declare_module.html_canvas */
 /** @type {!Html2CanvasStatic} */
var html2canvas;
