/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/bigi/index.d.ts:

/* TODO: ExportAssignment in  */

/**
 * @constructor
 * @struct
 * @param {?} a
 * @param {?} b
 * @param {?} c
 */
function bigi(a, b, c) {}

/**
 * @return {?}
 */
bigi.prototype.abs = function() {};

/**
 * @param {!bigi} a
 * @return {!bigi}
 */
bigi.prototype.add = function(a) {};

/**
 * @param {!bigi} a
 * @param {number} r
 * @return {void}
 */
bigi.prototype.addTo = function(a, r) {};

/**
 * @param {?} i
 * @param {?} x
 * @param {?} w
 * @param {?} j
 * @param {?} c
 * @param {?} n
 * @return {?}
 */
bigi.prototype.am = function(i, x, w, j, c, n) {};

/**
 * @param {!bigi} a
 * @return {!bigi}
 */
bigi.prototype.and = function(a) {};

/**
 * @param {?} a
 * @return {?}
 */
bigi.prototype.andNot = function(a) {};

/**
 * @return {?}
 */
bigi.prototype.bitCount = function() {};

/**
 * @return {?}
 */
bigi.prototype.bitLength = function() {};

/**
 * @param {?} a
 * @param {?} op
 * @param {?} r
 * @return {void}
 */
bigi.prototype.bitwiseTo = function(a, op, r) {};

/**
 * @return {?}
 */
bigi.prototype.byteLength = function() {};

/**
 * @return {?}
 */
bigi.prototype.byteValue = function() {};

/**
 * @param {?} n
 * @param {?} op
 * @return {?}
 */
bigi.prototype.changeBit = function(n, op) {};

/**
 * @param {?} r
 * @return {?}
 */
bigi.prototype.chunkSize = function(r) {};

/**
 * @return {void}
 */
bigi.prototype.clamp = function() {};

/**
 * @param {number} n
 * @return {!bigi}
 */
bigi.prototype.clearBit = function(n) {};

/**
 * @return {!bigi}
 */
bigi.prototype.clone = function() {};

/**
 * @param {!bigi} a
 * @return {!bigi}
 */
bigi.prototype.compareTo = function(a) {};

/**
 * @param {?} r
 * @return {void}
 */
bigi.prototype.copyTo = function(r) {};

/**
 * @param {?} n
 * @param {?} w
 * @return {void}
 */
bigi.prototype.dAddOffset = function(n, w) {};

/**
 * @param {number} n
 * @return {void}
 */
bigi.prototype.dMultiply = function(n) {};

/**
 * @param {?} m
 * @param {?} q
 * @param {?} r
 * @return {void}
 */
bigi.prototype.divRemTo = function(m, q, r) {};

/**
 * @param {?} a
 * @return {?}
 */
bigi.prototype.divide = function(a) {};

/**
 * @param {!bigi} a
 * @return {!bigi}
 */
bigi.prototype.divideAndRemainder = function(a) {};

/**
 * @param {!bigi} n
 * @param {number} r
 * @return {void}
 */
bigi.prototype.dlShiftTo = function(n, r) {};

/**
 * @param {!bigi} n
 * @param {number} r
 * @return {void}
 */
bigi.prototype.drShiftTo = function(n, r) {};

/**
 * @param {!bigi} a
 * @return {boolean}
 */
bigi.prototype.equals = function(a) {};

/**
 * @param {?} e
 * @param {?} z
 * @return {?}
 */
bigi.prototype.exp = function(e, z) {};

/**
 * @param {number} n
 * @return {!bigi}
 */
bigi.prototype.flipBit = function(n) {};

/**
 * @param {?} x
 * @return {void}
 */
bigi.prototype.fromInt = function(x) {};

/**
 * @param {?} a
 * @param {?} b
 * @param {?} c
 * @return {void}
 */
bigi.prototype.fromNumber = function(a, b, c) {};

/**
 * @param {?} s
 * @param {?} b
 * @return {void}
 */
bigi.prototype.fromRadix = function(s, b) {};

/**
 * @param {?} s
 * @param {?} b
 * @return {void}
 */
bigi.prototype.fromString = function(s, b) {};

/**
 * @param {?} a
 * @return {?}
 */
bigi.prototype.gcd = function(a) {};

/**
 * @return {?}
 */
bigi.prototype.getLowestSetBit = function() {};

/**
 * @return {number}
 */
bigi.prototype.intValue = function() {};

/**
 * @return {?}
 */
bigi.prototype.invDigit = function() {};

/**
 * @return {boolean}
 */
bigi.prototype.isEven = function() {};

/**
 * @param {?} t
 * @return {boolean}
 */
bigi.prototype.isProbablePrime = function(t) {};

/**
 * @param {?} n
 * @param {?} r
 * @return {void}
 */
bigi.prototype.lShiftTo = function(n, r) {};

/**
 * @param {?} a
 * @return {?}
 */
bigi.prototype.max = function(a) {};

/**
 * @param {!bigi} t
 * @return {!bigi}
 */
bigi.prototype.millerRabin = function(t) {};

/**
 * @param {!bigi} a
 * @return {!bigi}
 */
bigi.prototype.min = function(a) {};

/**
 * @param {!bigi} a
 * @return {!bigi}
 */
bigi.prototype.mod = function(a) {};

/**
 * @param {number} n
 * @return {!bigi}
 */
bigi.prototype.modInt = function(n) {};

/**
 * @param {number} m
 * @return {!bigi}
 */
bigi.prototype.modInverse = function(m) {};

/**
 * @param {?} e
 * @param {?} m
 * @return {?}
 */
bigi.prototype.modPow = function(e, m) {};

/**
 * @param {?} e
 * @param {?} m
 * @return {?}
 */
bigi.prototype.modPowInt = function(e, m) {};

/**
 * @param {!bigi} a
 * @return {!bigi}
 */
bigi.prototype.multiply = function(a) {};

/**
 * @param {!bigi} a
 * @param {?} n
 * @param {?} r
 * @return {void}
 */
bigi.prototype.multiplyLowerTo = function(a, n, r) {};

/**
 * @param {!bigi} a
 * @param {?} r
 * @return {void}
 */
bigi.prototype.multiplyTo = function(a, r) {};

/**
 * @param {!bigi} a
 * @param {?} n
 * @param {?} r
 * @return {void}
 */
bigi.prototype.multiplyUpperTo = function(a, n, r) {};

/**
 * @return {!bigi}
 */
bigi.prototype.negate = function() {};

/**
 * @return {!bigi}
 */
bigi.prototype.not = function() {};

/**
 * @param {!bigi} a
 * @return {!bigi}
 */
bigi.prototype.or = function(a) {};

/**
 * @param {!bigi} e
 * @return {!bigi}
 */
bigi.prototype.pow = function(e) {};

/**
 * @param {!bigi} n
 * @param {?} r
 * @return {void}
 */
bigi.prototype.rShiftTo = function(n, r) {};

/**
 * @param {!bigi} a
 * @return {!bigi}
 */
bigi.prototype.remainder = function(a) {};

/**
 * @param {number} n
 * @return {!bigi}
 */
bigi.prototype.setBit = function(n) {};

/**
 * @param {number} n
 * @return {!bigi}
 */
bigi.prototype.shiftLeft = function(n) {};

/**
 * @param {number} n
 * @return {!bigi}
 */
bigi.prototype.shiftRight = function(n) {};

/**
 * @return {!bigi}
 */
bigi.prototype.shortValue = function() {};

/**
 * @return {!bigi}
 */
bigi.prototype.signum = function() {};

/**
 * @return {!bigi}
 */
bigi.prototype.square = function() {};

/**
 * @param {?} r
 * @return {void}
 */
bigi.prototype.squareTo = function(r) {};

/**
 * @param {?} a
 * @param {?} r
 * @return {void}
 */
bigi.prototype.subTo = function(a, r) {};

/**
 * @param {!bigi} a
 * @return {!bigi}
 */
bigi.prototype.subtract = function(a) {};

/**
 * @param {?} n
 * @return {?}
 */
bigi.prototype.testBit = function(n) {};

/**
 * @param {number} size
 * @return {?}
 */
bigi.prototype.toBuffer = function(size) {};

/**
 * @return {?}
 */
bigi.prototype.toByteArray = function() {};

/**
 * @return {?}
 */
bigi.prototype.toByteArrayUnsigned = function() {};

/**
 * @return {?}
 */
bigi.prototype.toDERInteger = function() {};

/**
 * @param {number=} size
 * @return {string}
 */
bigi.prototype.toHex = function(size) {};

/**
 * @param {number} b
 * @return {string}
 */
bigi.prototype.toRadix = function(b) {};

/**
 * @param {?=} b
 * @return {string}
 */
bigi.prototype.toString = function(b) {};

/**
 * @param {?} a
 * @return {?}
 */
bigi.prototype.xor = function(a) {};

/**
 * @param {?} buffer
 * @return {!bigi}
 */
bigi.fromBuffer = function(buffer) {};

/**
 * @param {?=} byteArray
 * @return {!Array<number>}
 */
bigi.fromByteArrayUnsigned = function(byteArray) {};

/**
 * @param {?=} byteArray
 * @return {number}
 */
bigi.fromDERInteger = function(byteArray) {};

/**
 * @param {string} hex
 * @return {!bigi}
 */
bigi.fromHex = function(hex) {};

/**
 * @param {?} obj
 * @param {?} check_ver
 * @return {boolean}
 */
bigi.isBigInteger = function(obj, check_ver) {};

/**
 * @param {?} i
 * @return {number}
 */
bigi.valueOf = function(i) {};
/**
 * @record
 * @struct
 */
bigi.Constants = function() {};
 /** @type {number} */
bigi.Constants.prototype.DB;
 /** @type {number} */
bigi.Constants.prototype.DM;
 /** @type {number} */
bigi.Constants.prototype.DV;
 /** @type {number} */
bigi.Constants.prototype.F1;
 /** @type {number} */
bigi.Constants.prototype.F2;
 /** @type {number} */
bigi.Constants.prototype.FV;
 /** @type {number} */
bigi.Constants.prototype.s;
 /** @type {number} */
bigi.Constants.prototype.t;
 /** @type {?} */
bigi.ONE;
 /** @type {?} */
bigi.ZERO;
