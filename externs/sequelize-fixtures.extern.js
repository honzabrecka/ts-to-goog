/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/sequelize-fixtures/index.d.ts:

/* TODO: ImportDeclaration in  */
/** @const */
var SequelizeFixtures = {};
/**
 * @record
 * @struct
 */
SequelizeFixtures.Options = function() {};
 /** @type {string} */
SequelizeFixtures.Options.prototype.encoding;
 /** @type {function(string): void} */
SequelizeFixtures.Options.prototype.log;
 /** @type {!sequelize.Transaction} */
SequelizeFixtures.Options.prototype.transaction;
 /** @type {function(?): ?} */
SequelizeFixtures.Options.prototype.transformFixtureDataFn;
/**
 * @record
 * @struct
 */
SequelizeFixtures.SequelizeFixturesStatic = function() {};

/**
 * @param {string} file
 * @param {?} models
 * @param {!SequelizeFixtures.Options=} options
 * @return {!Promise<?>}
 */
SequelizeFixtures.SequelizeFixturesStatic.prototype.loadFile = function(file, models, options) {};

/**
 * @param {!Array<string>} files
 * @param {?} models
 * @param {!SequelizeFixtures.Options=} options
 * @return {!Promise<?>}
 */
SequelizeFixtures.SequelizeFixturesStatic.prototype.loadFiles = function(files, models, options) {};

/**
 * @param {?} fixture
 * @param {?} models
 * @param {!SequelizeFixtures.Options=} options
 * @return {!Promise<?>}
 */
SequelizeFixtures.SequelizeFixturesStatic.prototype.loadFixture = function(fixture, models, options) {};

/**
 * @param {!Array<?>} fixtures
 * @param {?} models
 * @param {!SequelizeFixtures.Options=} options
 * @return {!Promise<?>}
 */
SequelizeFixtures.SequelizeFixturesStatic.prototype.loadFixtures = function(fixtures, models, options) {};
 /** @type {!SequelizeFixtures.SequelizeFixturesStatic} */
var sequelizeFixtures;

/* TODO: ExportAssignment in  */
