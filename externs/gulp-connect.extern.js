/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/gulp-connect/index.d.ts:

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */
/**
 * @record
 * @struct
 */
function LiveReloadOptions() {}
 /** @type {number} */
LiveReloadOptions.prototype.port;
 /** @type {string} */
LiveReloadOptions.prototype.hostname;

/** @typedef {!Array<?>} */
var ConnectRouteHandler;

/** @typedef {?} */
var MiddlewareFactory;
/**
 * @record
 * @struct
 */
function ConnectAppOptions() {}
 /** @type {string} */
ConnectAppOptions.prototype.name;
 /** @type {(string|!Array<string>)} */
ConnectAppOptions.prototype.root;
 /** @type {number} */
ConnectAppOptions.prototype.port;
 /** @type {string} */
ConnectAppOptions.prototype.host;
 /** @type {boolean} */
ConnectAppOptions.prototype.slient;
 /** @type {(boolean|!ServerOptions)} */
ConnectAppOptions.prototype.https;
 /** @type {(boolean|?)} */
ConnectAppOptions.prototype.livereload;
 /** @type {string} */
ConnectAppOptions.prototype.fallback;
 /** @type {?} */
ConnectAppOptions.prototype.middleware;
 /** @type {boolean} */
ConnectAppOptions.prototype.debug;
 /** @type {(string|boolean|!Array<string>)} */
ConnectAppOptions.prototype.index;

/**
 * A function to run custom initialization on the underlying http or https server
 * @param {!Server} server
 * @return {void}
 */
ConnectAppOptions.prototype.serverInit = function(server) {};

/**
 * Create a gulp-connect server with the given options
 * @param {?=} options
 * @return {?}
 */
function server(options) {}

/**
 * Reload all gulp-connect servers that have livereload enabled
 * @return {?}
 */
function reload() {}

/**
 * Close all gulp-connect servers
 * @return {void}
 */
function serverClose() {}
