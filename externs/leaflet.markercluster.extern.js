/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/leaflet.markercluster/index.d.ts:

/* TODO: ImportDeclaration in  */

/* TODO: ExportAssignment in  */
/**
 * @record
 * @struct
 */
L.MarkerCluster = function() {};

/**
 * @return {!Array<!L.Marker>}
 */
L.MarkerCluster.prototype.getAllChildMarkers = function() {};

/**
 * @return {number}
 */
L.MarkerCluster.prototype.getChildCount = function() {};

/**
 * @return {void}
 */
L.MarkerCluster.prototype.zoomToBounds = function() {};

/**
 * @return {!L.LatLngBounds}
 */
L.MarkerCluster.prototype.getBounds = function() {};
/**
 * @record
 * @struct
 */
L.MarkerClusterGroupOptions = function() {};
 /** @type {boolean} */
L.MarkerClusterGroupOptions.prototype.showCoverageOnHover;
 /** @type {boolean} */
L.MarkerClusterGroupOptions.prototype.zoomToBoundsOnClick;
 /** @type {boolean} */
L.MarkerClusterGroupOptions.prototype.spiderfyOnMaxZoom;
 /** @type {boolean} */
L.MarkerClusterGroupOptions.prototype.removeOutsideVisibleBounds;
 /** @type {boolean} */
L.MarkerClusterGroupOptions.prototype.animate;
 /** @type {boolean} */
L.MarkerClusterGroupOptions.prototype.animateAddingMarkers;
 /** @type {number} */
L.MarkerClusterGroupOptions.prototype.disableClusteringAtZoom;
 /** @type {(number|function(number): number)} */
L.MarkerClusterGroupOptions.prototype.maxClusterRadius;
 /** @type {!L.PolylineOptions} */
L.MarkerClusterGroupOptions.prototype.polygonOptions;
 /** @type {boolean} */
L.MarkerClusterGroupOptions.prototype.singleMarkerMode;
 /** @type {!L.PolylineOptions} */
L.MarkerClusterGroupOptions.prototype.spiderLegPolylineOptions;
 /** @type {number} */
L.MarkerClusterGroupOptions.prototype.spiderfyDistanceMultiplier;
 /** @type {function(!L.MarkerCluster): (!L.Icon|!L.DivIcon)} */
L.MarkerClusterGroupOptions.prototype.iconCreateFunction;
 /** @type {boolean} */
L.MarkerClusterGroupOptions.prototype.chunkedLoading;
 /** @type {number} */
L.MarkerClusterGroupOptions.prototype.chunkDelay;
/**
 * @record
 * @struct
 */
L.MarkerClusterGroup = function() {};

/**
 * @param {!Array<!L.Layer>} layers
 * @return {MarkerClusterGroup}
 */
L.MarkerClusterGroup.prototype.addLayers = function(layers) {};

/**
 * @param {!Array<!L.Layer>} layers
 * @return {MarkerClusterGroup}
 */
L.MarkerClusterGroup.prototype.removeLayers = function(layers) {};

/**
 * @return {MarkerClusterGroup}
 */
L.MarkerClusterGroup.prototype.clearLayers = function() {};

/**
 * @param {!L.Marker} marker
 * @return {!L.Marker}
 */
L.MarkerClusterGroup.prototype.getVisibleParent = function(marker) {};

/**
 * @param {(!L.Marker|!Array<!L.Marker>|!L.LayerGroup|!Object<string,!L.Layer>)=} clusters
 * @return {MarkerClusterGroup}
 */
L.MarkerClusterGroup.prototype.refreshClusters = function(clusters) {};

/**
 * @return {number}
 */
L.MarkerClusterGroup.prototype.getChildCount = function() {};

/**
 * @return {!Array<!L.Marker>}
 */
L.MarkerClusterGroup.prototype.getAllChildMarkers = function() {};

/**
 * @param {!L.Layer} layer
 * @return {boolean}
 */
L.MarkerClusterGroup.prototype.hasLayer = function(layer) {};

/**
 * @param {!L.Layer} layer
 * @param {function(): void=} callback
 * @return {void}
 */
L.MarkerClusterGroup.prototype.zoomToShowLayer = function(layer, callback) {};

/**
 * @param {!L.MarkerClusterGroupOptions=} options
 * @return {!L.MarkerClusterGroup}
 */
L.markerClusterGroup = function(options) {};
