/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/filesize/index.d.ts:
 /** @type {!Filesize.IFilesize} */
var fileSize;

/* TODO: ExportAssignment in  */

/* TODO: NamespaceExportDeclaration in  */
/** @const */
var Filesize = {};
/**
 * @record
 * @struct
 */
Filesize.SiJedecBits = function() {};
 /** @type {string} */
Filesize.SiJedecBits.prototype.b;
 /** @type {string} */
Filesize.SiJedecBits.prototype.Kb;
 /** @type {string} */
Filesize.SiJedecBits.prototype.Mb;
 /** @type {string} */
Filesize.SiJedecBits.prototype.Gb;
 /** @type {string} */
Filesize.SiJedecBits.prototype.Tb;
 /** @type {string} */
Filesize.SiJedecBits.prototype.Pb;
 /** @type {string} */
Filesize.SiJedecBits.prototype.Eb;
 /** @type {string} */
Filesize.SiJedecBits.prototype.Zb;
 /** @type {string} */
Filesize.SiJedecBits.prototype.Yb;
/**
 * @record
 * @struct
 */
Filesize.SiJedecBytes = function() {};
 /** @type {string} */
Filesize.SiJedecBytes.prototype.B;
 /** @type {string} */
Filesize.SiJedecBytes.prototype.KB;
 /** @type {string} */
Filesize.SiJedecBytes.prototype.MB;
 /** @type {string} */
Filesize.SiJedecBytes.prototype.GB;
 /** @type {string} */
Filesize.SiJedecBytes.prototype.TB;
 /** @type {string} */
Filesize.SiJedecBytes.prototype.PB;
 /** @type {string} */
Filesize.SiJedecBytes.prototype.EB;
 /** @type {string} */
Filesize.SiJedecBytes.prototype.ZB;
 /** @type {string} */
Filesize.SiJedecBytes.prototype.YB;

/** @typedef {?} */
Filesize.SiJedec;
/**
 * @record
 * @struct
 */
Filesize.Options = function() {};
 /** @type {boolean} */
Filesize.Options.prototype.bits;
 /** @type {number} */
Filesize.Options.prototype.base;
 /** @type {number} */
Filesize.Options.prototype.round;
 /** @type {string} */
Filesize.Options.prototype.output;
 /** @type {?} */
Filesize.Options.prototype.suffixes;
 /** @type {?} */
Filesize.Options.prototype.symbols;
 /** @type {number} */
Filesize.Options.prototype.exponent;
 /** @type {boolean} */
Filesize.Options.prototype.unix;
 /** @type {string} */
Filesize.Options.prototype.spacer;
/**
 * @record
 * @struct
 */
Filesize.IFilesize = function() {};

/* TODO: CallSignature: Filesize */

/* TODO: CallSignature: Filesize */
