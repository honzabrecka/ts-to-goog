/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/bonjour/index.d.ts:

/**
 * @param {!bonjour.BonjourOptions=} opts
 * @return {!bonjour.Bonjour}
 */
function bonjour(opts) {}

/* TODO: ExportAssignment in  */
/**
 * @record
 * @struct
 */
bonjour.Browser = function() {};
 /** @type {!Array<!bonjour.Service>} */
bonjour.Browser.prototype.services;

/**
 * @return {void}
 */
bonjour.Browser.prototype.start = function() {};

/**
 * @return {void}
 */
bonjour.Browser.prototype.update = function() {};

/**
 * @return {void}
 */
bonjour.Browser.prototype.stop = function() {};

/**
 * @param {string} event
 * @param {function(!bonjour.Service): void} listener
 * @return {Browser}
 */
bonjour.Browser.prototype.on = function(event, listener) {};

/**
 * @param {string} event
 * @param {function(!bonjour.Service): void} listener
 * @return {Browser}
 */
bonjour.Browser.prototype.once = function(event, listener) {};

/**
 * @param {string} event
 * @param {function(!bonjour.Service): void} listener
 * @return {Browser}
 */
bonjour.Browser.prototype.removeListener = function(event, listener) {};

/**
 * @param {string} event
 * @return {Browser}
 */
bonjour.Browser.prototype.removeAllListeners = function(event) {};
/**
 * @record
 * @struct
 */
bonjour.BrowserOptions = function() {};
 /** @type {string} */
bonjour.BrowserOptions.prototype.type;
 /** @type {!Array<string>} */
bonjour.BrowserOptions.prototype.subtypes;
 /** @type {string} */
bonjour.BrowserOptions.prototype.protocol;
 /** @type {!Object} */
bonjour.BrowserOptions.prototype.txt;
/**
 * @record
 * @struct
 */
bonjour.ServiceOptions = function() {};
 /** @type {string} */
bonjour.ServiceOptions.prototype.name;
 /** @type {string} */
bonjour.ServiceOptions.prototype.host;
 /** @type {number} */
bonjour.ServiceOptions.prototype.port;
 /** @type {string} */
bonjour.ServiceOptions.prototype.type;
 /** @type {!Array<string>} */
bonjour.ServiceOptions.prototype.subtypes;
 /** @type {string} */
bonjour.ServiceOptions.prototype.protocol;
 /** @type {!Object} */
bonjour.ServiceOptions.prototype.txt;
/**
 * @record
 * @struct
 */
bonjour.Service = function() {};
 /** @type {string} */
bonjour.Service.prototype.name;
 /** @type {string} */
bonjour.Service.prototype.type;
 /** @type {!Array<string>} */
bonjour.Service.prototype.subtypes;
 /** @type {string} */
bonjour.Service.prototype.protocol;
 /** @type {string} */
bonjour.Service.prototype.host;
 /** @type {number} */
bonjour.Service.prototype.port;
 /** @type {string} */
bonjour.Service.prototype.fqdn;
 /** @type {!Object} */
bonjour.Service.prototype.txt;
 /** @type {boolean} */
bonjour.Service.prototype.published;

/**
 * @param {function(): ?} cb
 * @return {void}
 */
bonjour.Service.prototype.stop = function(cb) {};

/**
 * @return {void}
 */
bonjour.Service.prototype.start = function() {};
/**
 * @record
 * @struct
 */
bonjour.BonjourOptions = function() {};
 /** @type {boolean} */
bonjour.BonjourOptions.prototype.multicast;
 /** @type {string} */
bonjour.BonjourOptions.prototype.interface;
 /** @type {number} */
bonjour.BonjourOptions.prototype.port;
 /** @type {string} */
bonjour.BonjourOptions.prototype.ip;
 /** @type {number} */
bonjour.BonjourOptions.prototype.ttl;
 /** @type {boolean} */
bonjour.BonjourOptions.prototype.loopback;
 /** @type {boolean} */
bonjour.BonjourOptions.prototype.reuseAddr;
/**
 * @record
 * @struct
 */
bonjour.Bonjour = function() {};

/* TODO: CallSignature: bonjour */

/**
 * @param {!bonjour.ServiceOptions} options
 * @return {!bonjour.Service}
 */
bonjour.Bonjour.prototype.publish = function(options) {};

/**
 * @param {function(): void=} cb
 * @return {void}
 */
bonjour.Bonjour.prototype.unpublishAll = function(cb) {};

/**
 * @param {!bonjour.BrowserOptions} options
 * @param {function(!bonjour.Service): void=} onUp
 * @return {!bonjour.Browser}
 */
bonjour.Bonjour.prototype.find = function(options, onUp) {};

/**
 * @param {!bonjour.BrowserOptions} options
 * @param {function(!bonjour.Service): void=} cb
 * @return {!bonjour.Browser}
 */
bonjour.Bonjour.prototype.findOne = function(options, cb) {};

/**
 * @return {void}
 */
bonjour.Bonjour.prototype.destroy = function() {};
