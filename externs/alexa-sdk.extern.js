/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/alexa-sdk/index.d.ts:

/**
 * @template T
 * @param {?} event
 * @param {?} context
 * @param {?=} callback
 * @return {?}
 */
function handler(event, context, callback) {}

/**
 * @param {string} state
 * @param {?} obj
 * @return {?}
 */
function CreateStateHandler(state, obj) {}
 /** @type {string} */
var StateString;

/** @typedef {string} */
var ConfirmationStatuses;

/** @typedef {string} */
var DialogStates;
/**
 * @extends {Handler}
 * @record
 * @struct
 */
function AlexaObject() {}
 /** @type {?} */
AlexaObject.prototype._event;
 /** @type {?} */
AlexaObject.prototype._context;
 /** @type {?} */
AlexaObject.prototype._callback;
 /** @type {?} */
AlexaObject.prototype.state;
 /** @type {?} */
AlexaObject.prototype.appId;
 /** @type {?} */
AlexaObject.prototype.response;
 /** @type {?} */
AlexaObject.prototype.resources;
 /** @type {?} */
AlexaObject.prototype.dynamoDBTableName;
 /** @type {boolean} */
AlexaObject.prototype.saveBeforeResponse;
 /** @type {?} */
AlexaObject.prototype.registerHandlers;
 /** @type {?} */
AlexaObject.prototype.execute;
/**
 * @record
 * @struct
 */
function Handlers() {}

/* TODO: IndexSignature:  */
/**
 * @record
 * @struct
 */
function Handler() {}
 /** @type {?} */
Handler.prototype.on;
 /** @type {?} */
Handler.prototype.emitWithState;
 /** @type {?} */
Handler.prototype.state;
 /** @type {?} */
Handler.prototype.handler;
 /** @type {?} */
Handler.prototype.event;
 /** @type {?} */
Handler.prototype.attributes;
 /** @type {?} */
Handler.prototype.context;
 /** @type {?} */
Handler.prototype.name;
 /** @type {?} */
Handler.prototype.isOverriden;
 /** @type {?} */
Handler.prototype.t;

/**
 * @param {string} event
 * @param {...?} args
 * @return {boolean}
 */
Handler.prototype.emit = function(event, args) {};
/**
 * @record
 * @struct
 */
function Context() {}
 /** @type {boolean} */
Context.prototype.callbackWaitsForEmptyEventLoop;
 /** @type {string} */
Context.prototype.logGroupName;
 /** @type {string} */
Context.prototype.logStreamName;
 /** @type {string} */
Context.prototype.functionName;
 /** @type {string} */
Context.prototype.memoryLimitInMB;
 /** @type {string} */
Context.prototype.functionVersion;
 /** @type {string} */
Context.prototype.invokeid;
 /** @type {string} */
Context.prototype.awsRequestId;
/**
 * @record
 * @struct
 */
function RequestBody() {}
 /** @type {string} */
RequestBody.prototype.version;
 /** @type {?} */
RequestBody.prototype.session;
 /** @type {?} */
RequestBody.prototype.request;
/**
 * @record
 * @struct
 */
function Session() {}
 /** @type {boolean} */
Session.prototype.new;
 /** @type {string} */
Session.prototype.sessionId;
 /** @type {?} */
Session.prototype.attributes;
 /** @type {?} */
Session.prototype.application;
 /** @type {?} */
Session.prototype.user;
/**
 * @record
 * @struct
 */
function SessionApplication() {}
 /** @type {string} */
SessionApplication.prototype.applicationId;
/**
 * @record
 * @struct
 */
function SessionUser() {}
 /** @type {string} */
SessionUser.prototype.userId;
 /** @type {string} */
SessionUser.prototype.accessToken;
/**
 * @extends {Request}
 * @record
 * @struct
 */
function LaunchRequest() {}
/**
 * @extends {Request}
 * @record
 * @struct
 */
function IntentRequest() {}
 /** @type {string} */
IntentRequest.prototype.dialogState;
 /** @type {?} */
IntentRequest.prototype.intent;
/**
 * @extends {Request}
 * @record
 * @struct
 */
function SessionEndedRequest() {}
 /** @type {string} */
SessionEndedRequest.prototype.reason;
/**
 * @record
 * @struct
 */
function Request() {}
 /** @type {string} */
Request.prototype.type;
 /** @type {string} */
Request.prototype.requestId;
 /** @type {string} */
Request.prototype.timestamp;
 /** @type {string} */
Request.prototype.locale;
/**
 * @record
 * @struct
 */
function SlotValue() {}
 /** @type {string} */
SlotValue.prototype.confirmationStatus;
 /** @type {string} */
SlotValue.prototype.name;
 /** @type {?} */
SlotValue.prototype.value;
/**
 * @record
 * @struct
 */
function Intent() {}
 /** @type {string} */
Intent.prototype.confirmationStatus;
 /** @type {string} */
Intent.prototype.name;
 /** @type {?} */
Intent.prototype.slots;
/**
 * @record
 * @struct
 */
function ResponseBody() {}
 /** @type {string} */
ResponseBody.prototype.version;
 /** @type {?} */
ResponseBody.prototype.sessionAttributes;
 /** @type {?} */
ResponseBody.prototype.response;
/**
 * @record
 * @struct
 */
function Response() {}
 /** @type {?} */
Response.prototype.outputSpeech;
 /** @type {?} */
Response.prototype.card;
 /** @type {?} */
Response.prototype.reprompt;
 /** @type {boolean} */
Response.prototype.shouldEndSession;
/**
 * @record
 * @struct
 */
function OutputSpeech() {}
 /** @type {string} */
OutputSpeech.prototype.type;
 /** @type {string} */
OutputSpeech.prototype.text;
 /** @type {string} */
OutputSpeech.prototype.ssml;
/**
 * @record
 * @struct
 */
function Card() {}
 /** @type {string} */
Card.prototype.type;
 /** @type {string} */
Card.prototype.title;
 /** @type {string} */
Card.prototype.content;
 /** @type {string} */
Card.prototype.text;
 /** @type {?} */
Card.prototype.image;
/**
 * @record
 * @struct
 */
function Image() {}
 /** @type {string} */
Image.prototype.smallImageUrl;
 /** @type {string} */
Image.prototype.largeImageUrl;
/**
 * @record
 * @struct
 */
function Reprompt() {}
 /** @type {?} */
Reprompt.prototype.outputSpeech;
