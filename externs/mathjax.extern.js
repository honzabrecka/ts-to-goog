/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/mathjax/index.d.ts:
 /** @type {!jax.IMathJax} */
var MathJax;
/** @const */
var jax = {};
/**
 * @record
 * @struct
 */
jax.IMathJax = function() {};
 /** @type {!jax.IMathJaxHub} */
jax.IMathJax.prototype.Hub;
 /** @type {!jax.IAjax} */
jax.IMathJax.prototype.Ajax;
 /** @type {!jax.IMessage} */
jax.IMathJax.prototype.Message;
 /** @type {!jax.IHTML} */
jax.IMathJax.prototype.HTML;
 /** @type {!jax.ICallback} */
jax.IMathJax.prototype.Callback;
 /** @type {!jax.ILocalization} */
jax.IMathJax.prototype.Localization;
 /** @type {!jax.IInputJax} */
jax.IMathJax.prototype.InputJax;
 /** @type {!jax.IOutputJax} */
jax.IMathJax.prototype.OutputJax;
/**
 * @record
 * @struct
 */
jax.ICallback = function() {};

/* TODO: CallSignature: jax */

/* TODO: CallSignature: jax */

/* TODO: CallSignature: jax */

/* TODO: CallSignature: jax */

/* TODO: CallSignature: jax */

/**
 * @param {number} time
 * @param {?} callback
 * @return {!jax.ICallbackObject}
 */
jax.ICallback.prototype.Delay = function(time, callback) {};

/**
 * @param {...?} args
 * @return {!jax.IQueue}
 */
jax.ICallback.prototype.Queue = function(args) {};

/**
 * @param {string} name
 * @return {!jax.ISignal}
 */
jax.ICallback.prototype.Signal = function(name) {};

/**
 * @param {!Array<?>} hooks
 * @param {!Array<?>} data
 * @param {boolean} reset
 * @return {!jax.ICallbackObject}
 */
jax.ICallback.prototype.ExecuteHooks = function(hooks, data, reset) {};

/**
 * @param {boolean} reset
 * @return {!jax.IHooks}
 */
jax.ICallback.prototype.Hooks = function(reset) {};
/**
 * @record
 * @struct
 */
jax.IHooks = function() {};

/**
 * @param {?} hook
 * @param {number} priority
 * @return {!jax.ICallbackObject}
 */
jax.IHooks.prototype.Add = function(hook, priority) {};

/**
 * @param {!jax.ICallbackObject} hook
 * @return {void}
 */
jax.IHooks.prototype.Remove = function(hook) {};

/**
 * @return {!jax.ICallbackObject}
 */
jax.IHooks.prototype.Execute = function() {};
/**
 * @record
 * @struct
 */
jax.IQueue = function() {};
 /** @type {number} */
jax.IQueue.prototype.pending;
 /** @type {number} */
jax.IQueue.prototype.running;
 /** @type {!Array<?>} */
jax.IQueue.prototype.queue;

/**
 * @param {!Array<?>} specs
 * @return {!jax.ICallbackObject}
 */
jax.IQueue.prototype.Push = function(specs) {};

/**
 * @return {void}
 */
jax.IQueue.prototype.Process = function() {};

/**
 * @return {void}
 */
jax.IQueue.prototype.Suspend = function() {};

/**
 * @return {void}
 */
jax.IQueue.prototype.Resume = function() {};

/**
 * @param {!Function} callback
 * @return {!Function}
 */
jax.IQueue.prototype.wait = function(callback) {};

/**
 * @return {void}
 */
jax.IQueue.prototype.call = function() {};
/**
 * @record
 * @struct
 */
jax.ISignal = function() {};
 /** @type {string} */
jax.ISignal.prototype.name;
 /** @type {!Array<?>} */
jax.ISignal.prototype.posted;
 /** @type {!Array<!jax.ICallbackObject>} */
jax.ISignal.prototype.listeners;

/**
 * @param {string} message
 * @param {!jax.ICallbackObject=} callback
 * @return {!jax.ICallbackObject}
 */
jax.ISignal.prototype.Post = function(message, callback) {};

/**
 * @param {!jax.ICallbackObject=} callback
 * @return {!jax.ICallbackObject}
 */
jax.ISignal.prototype.Clear = function(callback) {};

/**
 * @param {!jax.ICallbackObject} callback
 * @param {boolean=} ignorePast
 * @return {!jax.ICallbackObject}
 */
jax.ISignal.prototype.Interest = function(callback, ignorePast) {};

/**
 * @param {!jax.ICallbackObject} callback
 * @return {void}
 */
jax.ISignal.prototype.NoInterest = function(callback) {};

/**
 * @param {string} message
 * @param {!jax.ICallbackObject} callback
 * @return {!jax.ICallbackObject}
 */
jax.ISignal.prototype.MessageHook = function(message, callback) {};

/**
 * @param {string} message
 * @return {void}
 */
jax.ISignal.prototype.ExecuteHook = function(message) {};
/**
 * @record
 * @struct
 */
jax.ICallbackObject = function() {};
 /** @type {number} */
jax.ICallbackObject.prototype.hook;
 /** @type {!Array<?>} */
jax.ICallbackObject.prototype.data;
 /** @type {?} */
jax.ICallbackObject.prototype.object;
 /** @type {boolean} */
jax.ICallbackObject.prototype.called;
 /** @type {boolean} */
jax.ICallbackObject.prototype.autoReset;

/**
 * @return {void}
 */
jax.ICallbackObject.prototype.reset = function() {};
/**
 * @record
 * @struct
 */
jax.IMathJaxHub = function() {};
 /** @type {!jax.IMathJaxConfig} */
jax.IMathJaxHub.prototype.config;
 /** @type {number} */
jax.IMathJaxHub.prototype.processUpdateTime;
 /** @type {number} */
jax.IMathJaxHub.prototype.processUpdateDelay;
 /** @type {!jax.ISignal} */
jax.IMathJaxHub.prototype.signal;
 /** @type {?} */
jax.IMathJaxHub.prototype.queue;
 /** @type {!jax.IBrowserInfo} */
jax.IMathJaxHub.prototype.Browser;
 /** @type {?} */
jax.IMathJaxHub.prototype.inputJax;
 /** @type {?} */
jax.IMathJaxHub.prototype.outputJax;
 /** @type {!jax.IRegister} */
jax.IMathJaxHub.prototype.Register;

/**
 * @param {!jax.IMathJaxConfig} config
 * @return {void}
 */
jax.IMathJaxHub.prototype.Config = function(config) {};

/**
 * @return {void}
 */
jax.IMathJaxHub.prototype.Configured = function() {};

/**
 * @param {?} callBack
 * @return {?}
 */
jax.IMathJaxHub.prototype.Queue = function(callBack) {};

/**
 * @param {?} element
 * @param {?} callBack
 * @return {?}
 */
jax.IMathJaxHub.prototype.Typeset = function(element, callBack) {};

/**
 * @param {?} element
 * @param {?} callBack
 * @return {?}
 */
jax.IMathJaxHub.prototype.PreProcess = function(element, callBack) {};

/**
 * @param {?} element
 * @param {?} callBack
 * @return {?}
 */
jax.IMathJaxHub.prototype.Process = function(element, callBack) {};

/**
 * @param {?} element
 * @param {?} callBack
 * @return {?}
 */
jax.IMathJaxHub.prototype.Update = function(element, callBack) {};

/**
 * @param {?} element
 * @param {?} callBack
 * @return {?}
 */
jax.IMathJaxHub.prototype.Reprocess = function(element, callBack) {};

/**
 * @param {?} element
 * @param {?} callBack
 * @return {?}
 */
jax.IMathJaxHub.prototype.Rerender = function(element, callBack) {};

/**
 * @param {?} element
 * @return {!Array<?>}
 */
jax.IMathJaxHub.prototype.getAllJax = function(element) {};

/**
 * @param {string} type
 * @param {?} element
 * @return {void}
 */
jax.IMathJaxHub.prototype.getJaxByType = function(type, element) {};

/**
 * @param {string} type
 * @param {?} element
 * @return {void}
 */
jax.IMathJaxHub.prototype.getJaxByInputType = function(type, element) {};

/**
 * @param {?} element
 * @return {?}
 */
jax.IMathJaxHub.prototype.getJaxFor = function(element) {};

/**
 * @param {?} element
 * @return {number}
 */
jax.IMathJaxHub.prototype.isJax = function(element) {};

/**
 * @param {string} renderer
 * @param {string} type
 * @return {void}
 */
jax.IMathJaxHub.prototype.setRenderer = function(renderer, type) {};

/**
 * @param {?} dst
 * @param {?} src
 * @return {?}
 */
jax.IMathJaxHub.prototype.Insert = function(dst, src) {};

/**
 * @param {?} script
 * @param {?} error
 * @return {void}
 */
jax.IMathJaxHub.prototype.formatError = function(script, error) {};
/**
 * @record
 * @struct
 */
jax.IRegister = function() {};

/**
 * @param {?} callBack
 * @return {void}
 */
jax.IRegister.prototype.PreProcessor = function(callBack) {};

/**
 * @param {string} type
 * @param {?} callBack
 * @return {void}
 */
jax.IRegister.prototype.MessageHook = function(type, callBack) {};

/**
 * @param {string} type
 * @param {?} callBack
 * @return {void}
 */
jax.IRegister.prototype.StartupHook = function(type, callBack) {};

/**
 * @param {string} file
 * @param {!Function} callBack
 * @return {void}
 */
jax.IRegister.prototype.LoadHook = function(file, callBack) {};
/**
 * @record
 * @struct
 */
jax.IBrowserInfo = function() {};
 /** @type {string} */
jax.IBrowserInfo.prototype.version;
 /** @type {boolean} */
jax.IBrowserInfo.prototype.isMac;
 /** @type {boolean} */
jax.IBrowserInfo.prototype.isPC;
 /** @type {boolean} */
jax.IBrowserInfo.prototype.isMobile;
 /** @type {boolean} */
jax.IBrowserInfo.prototype.isFirefox;
 /** @type {boolean} */
jax.IBrowserInfo.prototype.isSafari;
 /** @type {boolean} */
jax.IBrowserInfo.prototype.isChrome;
 /** @type {boolean} */
jax.IBrowserInfo.prototype.isOpera;
 /** @type {boolean} */
jax.IBrowserInfo.prototype.isMSIE;
 /** @type {boolean} */
jax.IBrowserInfo.prototype.isKonqueror;

/**
 * @param {string} version
 * @return {void}
 */
jax.IBrowserInfo.prototype.versionAtLeast = function(version) {};

/**
 * @param {?} choices
 * @return {void}
 */
jax.IBrowserInfo.prototype.Select = function(choices) {};
/**
 * @record
 * @struct
 */
jax.IAjax = function() {};
 /** @type {number} */
jax.IAjax.prototype.timeout;
 /** @type {!jax.ISTATUS} */
jax.IAjax.prototype.STATUS;
 /** @type {?} */
jax.IAjax.prototype.loaded;
 /** @type {boolean} */
jax.IAjax.prototype.loading;
 /** @type {?} */
jax.IAjax.prototype.loadHooks;

/**
 * @param {string} file
 * @param {?} callBack
 * @return {?}
 */
jax.IAjax.prototype.Require = function(file, callBack) {};

/**
 * @param {string} file
 * @param {?} callBack
 * @return {?}
 */
jax.IAjax.prototype.Load = function(file, callBack) {};

/**
 * @param {string} file
 * @return {void}
 */
jax.IAjax.prototype.loadComplete = function(file) {};

/**
 * @param {string} file
 * @return {void}
 */
jax.IAjax.prototype.loadTimeout = function(file) {};

/**
 * @param {string} file
 * @return {void}
 */
jax.IAjax.prototype.loadError = function(file) {};

/**
 * @param {string} file
 * @param {?} callBack
 * @return {?}
 */
jax.IAjax.prototype.LoadHook = function(file, callBack) {};

/**
 * @param {...?} args
 * @return {void}
 */
jax.IAjax.prototype.Preloading = function(args) {};

/**
 * @param {?} styles
 * @param {?} callback
 * @return {?}
 */
jax.IAjax.prototype.Styles = function(styles, callback) {};

/**
 * @param {string} file
 * @return {string}
 */
jax.IAjax.prototype.fileURL = function(file) {};
/**
 * @record
 * @struct
 */
jax.ISTATUS = function() {};
 /** @type {string} */
jax.ISTATUS.prototype.OK;
 /** @type {string} */
jax.ISTATUS.prototype.ERROR;
/**
 * @record
 * @struct
 */
jax.IMessage = function() {};

/**
 * @param {string} message
 * @param {number} n
 * @param {number} delay
 * @return {number}
 */
jax.IMessage.prototype.Set = function(message, n, delay) {};

/**
 * @param {number} n
 * @param {number} delay
 * @return {void}
 */
jax.IMessage.prototype.Clear = function(n, delay) {};

/**
 * @return {void}
 */
jax.IMessage.prototype.Remove = function() {};

/**
 * @param {string} file
 * @return {number}
 */
jax.IMessage.prototype.File = function(file) {};

/**
 * @param {string} text
 * @param {number} n
 * @return {string}
 */
jax.IMessage.prototype.filterText = function(text, n) {};

/**
 * @return {string}
 */
jax.IMessage.prototype.Log = function() {};
/**
 * @record
 * @struct
 */
jax.IHTML = function() {};
 /** @type {!jax.ICookie} */
jax.IHTML.prototype.Cookie;

/**
 * @param {string} type
 * @param {?} attributes
 * @param {?} contents
 * @return {?}
 */
jax.IHTML.prototype.Element = function(type, attributes, contents) {};

/**
 * @param {?} parent
 * @param {string} type
 * @param {?} attributes
 * @param {?} content
 * @return {?}
 */
jax.IHTML.prototype.addElement = function(parent, type, attributes, content) {};

/**
 * @param {string} text
 * @return {?}
 */
jax.IHTML.prototype.TextNode = function(text) {};

/**
 * @param {?} parent
 * @param {string} text
 * @return {?}
 */
jax.IHTML.prototype.addText = function(parent, text) {};

/**
 * @param {string} script
 * @param {string} text
 * @return {void}
 */
jax.IHTML.prototype.setScript = function(script, text) {};

/**
 * @param {string} script
 * @return {string}
 */
jax.IHTML.prototype.getScript = function(script) {};
/**
 * @record
 * @struct
 */
jax.ICookie = function() {};
 /** @type {string} */
jax.ICookie.prototype.prefix;
 /** @type {number} */
jax.ICookie.prototype.expires;

/**
 * @param {string} name
 * @param {?} data
 * @return {void}
 */
jax.ICookie.prototype.Set = function(name, data) {};

/**
 * @param {string} name
 * @param {?=} obj
 * @return {?}
 */
jax.ICookie.prototype.Get = function(name, obj) {};
/**
 * @record
 * @struct
 */
jax.IMenuSettings = function() {};
 /** @type {string} */
jax.IMenuSettings.prototype.zoom;
 /** @type {boolean} */
jax.IMenuSettings.prototype.CTRL;
 /** @type {boolean} */
jax.IMenuSettings.prototype.ALT;
 /** @type {boolean} */
jax.IMenuSettings.prototype.CMD;
 /** @type {boolean} */
jax.IMenuSettings.prototype.Shift;
 /** @type {string} */
jax.IMenuSettings.prototype.zscale;
 /** @type {string} */
jax.IMenuSettings.prototype.context;
 /** @type {boolean} */
jax.IMenuSettings.prototype.texHints;
 /** @type {boolean} */
jax.IMenuSettings.prototype.mpContext;
 /** @type {boolean} */
jax.IMenuSettings.prototype.mpMouse;
/**
 * @record
 * @struct
 */
jax.IErrorSettings = function() {};
 /** @type {!Array<string>} */
jax.IErrorSettings.prototype.message;
 /** @type {?} */
jax.IErrorSettings.prototype.style;
/**
 * @record
 * @struct
 */
jax.IMathJaxConfig = function() {};
 /** @type {!jax.IMathZoom} */
jax.IMathJaxConfig.prototype.MathZoom;
 /** @type {!jax.IMathMenu} */
jax.IMathJaxConfig.prototype.MathMenu;
 /** @type {!jax.IMathEvents} */
jax.IMathJaxConfig.prototype.MathEvents;
 /** @type {!jax.IFontWarnings} */
jax.IMathJaxConfig.prototype.FontWarnings;
 /** @type {!jax.ISafe} */
jax.IMathJaxConfig.prototype.Safe;
 /** @type {!jax.IMatchWebFonts} */
jax.IMathJaxConfig.prototype.MatchWebFonts;
 /** @type {!jax.ISVGOutputProcessor} */
jax.IMathJaxConfig.prototype.SVG;
 /** @type {!jax.IMMLorHTMLConfiguration} */
jax.IMathJaxConfig.prototype.MMLorHTML;
 /** @type {!jax.INativeMMLOutputProcessor} */
jax.IMathJaxConfig.prototype.NativeMML;

/* TODO: PropertySignature: jax."HTML-CSS" */
 /** @type {!jax.ICommonHTMLOutputProcessor} */
jax.IMathJaxConfig.prototype.CommonHTML;
 /** @type {!jax.IAsciiMathInputProcessor} */
jax.IMathJaxConfig.prototype.AsciiMath;
 /** @type {!jax.IMathMLInputProcessor} */
jax.IMathJaxConfig.prototype.MathML;
 /** @type {!jax.ITeXInputProcessor} */
jax.IMathJaxConfig.prototype.TeX;
 /** @type {!jax.IJSMath2jaxPreprocessor} */
jax.IMathJaxConfig.prototype.jsMath2jax;
 /** @type {!jax.IAsciimath2jaxPreprocessor} */
jax.IMathJaxConfig.prototype.asciimath2jax;
 /** @type {!jax.IMML2jaxPreprocessor} */
jax.IMathJaxConfig.prototype.mml2jax;
 /** @type {!jax.ITEX2jaxPreprocessor} */
jax.IMathJaxConfig.prototype.tex2jax;
 /** @type {!Array<string>} */
jax.IMathJaxConfig.prototype.jax;
 /** @type {!Array<string>} */
jax.IMathJaxConfig.prototype.extensions;
 /** @type {!Array<string>} */
jax.IMathJaxConfig.prototype.config;
 /** @type {!Array<string>} */
jax.IMathJaxConfig.prototype.styleSheets;
 /** @type {?} */
jax.IMathJaxConfig.prototype.styles;
 /** @type {?} */
jax.IMathJaxConfig.prototype.preJax;
 /** @type {?} */
jax.IMathJaxConfig.prototype.postJax;
 /** @type {string} */
jax.IMathJaxConfig.prototype.preRemoveClass;
 /** @type {boolean} */
jax.IMathJaxConfig.prototype.showProcessingMessages;
 /** @type {string} */
jax.IMathJaxConfig.prototype.messageStyle;
 /** @type {string} */
jax.IMathJaxConfig.prototype.displayAlign;
 /** @type {string} */
jax.IMathJaxConfig.prototype.displayIndent;
 /** @type {string} */
jax.IMathJaxConfig.prototype.delayStartupUntil;
 /** @type {boolean} */
jax.IMathJaxConfig.prototype.skipStartupTypeset;
 /** @type {!Array<string>} */
jax.IMathJaxConfig.prototype.elements;
 /** @type {boolean} */
jax.IMathJaxConfig.prototype.positionToHash;
 /** @type {boolean} */
jax.IMathJaxConfig.prototype.showMathMenu;
 /** @type {boolean} */
jax.IMathJaxConfig.prototype.showMathMenuMSIE;
 /** @type {!jax.IMenuSettings} */
jax.IMathJaxConfig.prototype.menuSettings;
 /** @type {!jax.IErrorSettings} */
jax.IMathJaxConfig.prototype.errorSettings;

/* TODO: PropertySignature: jax."v1.0-compatible" */
/**
 * @record
 * @struct
 */
jax.IMathZoom = function() {};
 /** @type {?} */
jax.IMathZoom.prototype.styles;
/**
 * @record
 * @struct
 */
jax.IMathMenu = function() {};
 /** @type {number} */
jax.IMathMenu.prototype.delay;
 /** @type {string} */
jax.IMathMenu.prototype.helpURL;
 /** @type {boolean} */
jax.IMathMenu.prototype.showRenderer;
 /** @type {boolean} */
jax.IMathMenu.prototype.showFontMenu;
 /** @type {boolean} */
jax.IMathMenu.prototype.showLocale;
 /** @type {boolean} */
jax.IMathMenu.prototype.showMathPlayer;
 /** @type {boolean} */
jax.IMathMenu.prototype.showContext;
 /** @type {?} */
jax.IMathMenu.prototype.semanticsAnnotations;
 /** @type {?} */
jax.IMathMenu.prototype.windowSettings;
 /** @type {?} */
jax.IMathMenu.prototype.styles;
/**
 * @record
 * @struct
 */
jax.IMathEvents = function() {};
 /** @type {number} */
jax.IMathEvents.prototype.hover;
 /** @type {?} */
jax.IMathEvents.prototype.styles;
/**
 * @record
 * @struct
 */
jax.IFontWarnings = function() {};
 /** @type {?} */
jax.IFontWarnings.prototype.messageStyle;
 /** @type {!jax.IHTMLMessages} */
jax.IFontWarnings.prototype.Message;
 /** @type {!jax.IHTMLSnippets} */
jax.IFontWarnings.prototype.HTML;
 /** @type {number} */
jax.IFontWarnings.prototype.removeAfter;
 /** @type {number} */
jax.IFontWarnings.prototype.fadeoutSteps;
 /** @type {number} */
jax.IFontWarnings.prototype.fadeoutTime;
/**
 * @record
 * @struct
 */
jax.IHTMLMessages = function() {};
 /** @type {!Array<?>} */
jax.IHTMLMessages.prototype.webFont;
 /** @type {!Array<?>} */
jax.IHTMLMessages.prototype.imageFonts;
 /** @type {!Array<?>} */
jax.IHTMLMessages.prototype.noFonts;
/**
 * @record
 * @struct
 */
jax.IHTMLSnippets = function() {};
 /** @type {string} */
jax.IHTMLSnippets.prototype.closeBox;
 /** @type {string} */
jax.IHTMLSnippets.prototype.webfonts;
 /** @type {string} */
jax.IHTMLSnippets.prototype.fonts;
 /** @type {string} */
jax.IHTMLSnippets.prototype.STIXfonts;
 /** @type {string} */
jax.IHTMLSnippets.prototype.TeXfonts;
/**
 * @record
 * @struct
 */
jax.ISafe = function() {};
 /** @type {!jax.ISafeAllow} */
jax.ISafe.prototype.allow;
 /** @type {number} */
jax.ISafe.prototype.sizeMin;
 /** @type {number} */
jax.ISafe.prototype.sizeMax;
 /** @type {!jax.ISafeProtocols} */
jax.ISafe.prototype.safeProtocols;
 /** @type {!jax.ISafeStyles} */
jax.ISafe.prototype.safeStyles;
 /** @type {!jax.ISafeRequire} */
jax.ISafe.prototype.safeRequire;
/**
 * @record
 * @struct
 */
jax.ISafeAllow = function() {};
 /** @type {string} */
jax.ISafeAllow.prototype.URLs;
 /** @type {string} */
jax.ISafeAllow.prototype.classes;
 /** @type {string} */
jax.ISafeAllow.prototype.cssIDs;
 /** @type {string} */
jax.ISafeAllow.prototype.styles;
 /** @type {string} */
jax.ISafeAllow.prototype.require;
 /** @type {string} */
jax.ISafeAllow.prototype.fontsize;
/**
 * @record
 * @struct
 */
jax.ISafeProtocols = function() {};
 /** @type {boolean} */
jax.ISafeProtocols.prototype.http;
 /** @type {boolean} */
jax.ISafeProtocols.prototype.https;
 /** @type {boolean} */
jax.ISafeProtocols.prototype.file;
 /** @type {boolean} */
jax.ISafeProtocols.prototype.javascript;
/**
 * @record
 * @struct
 */
jax.ISafeStyles = function() {};
 /** @type {boolean} */
jax.ISafeStyles.prototype.color;
 /** @type {boolean} */
jax.ISafeStyles.prototype.backgroundColor;
 /** @type {boolean} */
jax.ISafeStyles.prototype.border;
 /** @type {boolean} */
jax.ISafeStyles.prototype.cursor;
 /** @type {boolean} */
jax.ISafeStyles.prototype.margin;
 /** @type {boolean} */
jax.ISafeStyles.prototype.padding;
 /** @type {boolean} */
jax.ISafeStyles.prototype.textShadow;
 /** @type {boolean} */
jax.ISafeStyles.prototype.fontFamily;
 /** @type {boolean} */
jax.ISafeStyles.prototype.fontSize;
 /** @type {boolean} */
jax.ISafeStyles.prototype.fontStyle;
 /** @type {boolean} */
jax.ISafeStyles.prototype.fontWeight;
 /** @type {boolean} */
jax.ISafeStyles.prototype.opacity;
 /** @type {boolean} */
jax.ISafeStyles.prototype.outline;
/**
 * @record
 * @struct
 */
jax.ISafeRequire = function() {};
 /** @type {boolean} */
jax.ISafeRequire.prototype.action;
 /** @type {boolean} */
jax.ISafeRequire.prototype.amscd;
 /** @type {boolean} */
jax.ISafeRequire.prototype.amsmath;
 /** @type {boolean} */
jax.ISafeRequire.prototype.amssymbols;
 /** @type {boolean} */
jax.ISafeRequire.prototype.autobold;

/* TODO: PropertySignature: jax."autoload-all" */
 /** @type {boolean} */
jax.ISafeRequire.prototype.bbox;
 /** @type {boolean} */
jax.ISafeRequire.prototype.begingroup;
 /** @type {boolean} */
jax.ISafeRequire.prototype.boldsymbol;
 /** @type {boolean} */
jax.ISafeRequire.prototype.cancel;
 /** @type {boolean} */
jax.ISafeRequire.prototype.color;
 /** @type {boolean} */
jax.ISafeRequire.prototype.enclose;
 /** @type {boolean} */
jax.ISafeRequire.prototype.extpfeil;
 /** @type {boolean} */
jax.ISafeRequire.prototype.HTML;
 /** @type {boolean} */
jax.ISafeRequire.prototype.mathchoice;
 /** @type {boolean} */
jax.ISafeRequire.prototype.mhchem;
 /** @type {boolean} */
jax.ISafeRequire.prototype.newcommand;
 /** @type {boolean} */
jax.ISafeRequire.prototype.noErrors;
 /** @type {boolean} */
jax.ISafeRequire.prototype.noUndefined;
 /** @type {boolean} */
jax.ISafeRequire.prototype.unicode;
 /** @type {boolean} */
jax.ISafeRequire.prototype.verb;
/**
 * @record
 * @struct
 */
jax.IMatchWebFonts = function() {};
 /** @type {!jax.IMatchFor} */
jax.IMatchWebFonts.prototype.matchFor;
 /** @type {number} */
jax.IMatchWebFonts.prototype.fontCheckDelay;
 /** @type {number} */
jax.IMatchWebFonts.prototype.fontCheckTimeout;
/**
 * @record
 * @struct
 */
jax.IMatchFor = function() {};

/* TODO: PropertySignature: jax."HTML-CSS" */
 /** @type {boolean} */
jax.IMatchFor.prototype.NativeMML;
 /** @type {boolean} */
jax.IMatchFor.prototype.SVG;
/**
 * @record
 * @struct
 */
jax.ISVGOutputProcessor = function() {};
 /** @type {number} */
jax.ISVGOutputProcessor.prototype.scale;
 /** @type {number} */
jax.ISVGOutputProcessor.prototype.minScaleAdjust;
 /** @type {string} */
jax.ISVGOutputProcessor.prototype.font;
 /** @type {number} */
jax.ISVGOutputProcessor.prototype.blacker;
 /** @type {!Array<string>} */
jax.ISVGOutputProcessor.prototype.undefinedFamily;
 /** @type {boolean} */
jax.ISVGOutputProcessor.prototype.mtextFontInherit;
 /** @type {boolean} */
jax.ISVGOutputProcessor.prototype.addMMLclasses;
 /** @type {number} */
jax.ISVGOutputProcessor.prototype.EqnChunk;
 /** @type {number} */
jax.ISVGOutputProcessor.prototype.EqnChunkFactor;
 /** @type {number} */
jax.ISVGOutputProcessor.prototype.EqnChunkDelay;
 /** @type {boolean} */
jax.ISVGOutputProcessor.prototype.matchFontHeight;
 /** @type {!jax.ILineBreaks} */
jax.ISVGOutputProcessor.prototype.linebreaks;
 /** @type {?} */
jax.ISVGOutputProcessor.prototype.styles;
 /** @type {!jax.IToolTip} */
jax.ISVGOutputProcessor.prototype.tooltip;
/**
 * @record
 * @struct
 */
jax.ILineBreaks = function() {};
 /** @type {boolean} */
jax.ILineBreaks.prototype.automatic;
 /** @type {string} */
jax.ILineBreaks.prototype.width;
/**
 * @record
 * @struct
 */
jax.IToolTip = function() {};
 /** @type {number} */
jax.IToolTip.prototype.delayPost;
 /** @type {number} */
jax.IToolTip.prototype.delayClear;
 /** @type {number} */
jax.IToolTip.prototype.offsetX;
 /** @type {number} */
jax.IToolTip.prototype.offsetY;
/**
 * @record
 * @struct
 */
jax.IMMLorHTMLConfiguration = function() {};
 /** @type {!jax.IBrowserPreference} */
jax.IMMLorHTMLConfiguration.prototype.prefer;
/**
 * @record
 * @struct
 */
jax.IBrowserPreference = function() {};
 /** @type {string} */
jax.IBrowserPreference.prototype.MSIE;
 /** @type {string} */
jax.IBrowserPreference.prototype.Firefox;
 /** @type {string} */
jax.IBrowserPreference.prototype.Safari;
 /** @type {string} */
jax.IBrowserPreference.prototype.Chrome;
 /** @type {string} */
jax.IBrowserPreference.prototype.Opera;
 /** @type {string} */
jax.IBrowserPreference.prototype.other;
/**
 * @record
 * @struct
 */
jax.INativeMMLOutputProcessor = function() {};
 /** @type {number} */
jax.INativeMMLOutputProcessor.prototype.scale;
 /** @type {number} */
jax.INativeMMLOutputProcessor.prototype.minScaleAdjust;
 /** @type {boolean} */
jax.INativeMMLOutputProcessor.prototype.matchFontHeight;
 /** @type {?} */
jax.INativeMMLOutputProcessor.prototype.styles;
/**
 * @record
 * @struct
 */
jax.IHTMLCSSOutputProcessor = function() {};
 /** @type {number} */
jax.IHTMLCSSOutputProcessor.prototype.scale;
 /** @type {number} */
jax.IHTMLCSSOutputProcessor.prototype.minScaleAdjust;
 /** @type {!Array<string>} */
jax.IHTMLCSSOutputProcessor.prototype.availableFonts;
 /** @type {string} */
jax.IHTMLCSSOutputProcessor.prototype.preferredFont;
 /** @type {string} */
jax.IHTMLCSSOutputProcessor.prototype.webFont;
 /** @type {string} */
jax.IHTMLCSSOutputProcessor.prototype.imageFont;
 /** @type {!Array<string>} */
jax.IHTMLCSSOutputProcessor.prototype.undefinedFamily;
 /** @type {boolean} */
jax.IHTMLCSSOutputProcessor.prototype.mtextFontInherit;
 /** @type {number} */
jax.IHTMLCSSOutputProcessor.prototype.EqnChunk;
 /** @type {number} */
jax.IHTMLCSSOutputProcessor.prototype.EqnChunkFactor;
 /** @type {number} */
jax.IHTMLCSSOutputProcessor.prototype.EqnChunkDelay;
 /** @type {boolean} */
jax.IHTMLCSSOutputProcessor.prototype.matchFontHeight;
 /** @type {!jax.ILineBreaks} */
jax.IHTMLCSSOutputProcessor.prototype.linebreaks;
 /** @type {?} */
jax.IHTMLCSSOutputProcessor.prototype.styles;
 /** @type {boolean} */
jax.IHTMLCSSOutputProcessor.prototype.showMathMenu;
 /** @type {!jax.IToolTip} */
jax.IHTMLCSSOutputProcessor.prototype.tooltip;
/**
 * @record
 * @struct
 */
jax.ICommonHTMLOutputProcessor = function() {};
 /** @type {number} */
jax.ICommonHTMLOutputProcessor.prototype.scale;
 /** @type {number} */
jax.ICommonHTMLOutputProcessor.prototype.minScaleAdjust;
 /** @type {boolean} */
jax.ICommonHTMLOutputProcessor.prototype.mtextFontInherit;
 /** @type {!jax.ILineBreaks} */
jax.ICommonHTMLOutputProcessor.prototype.linebreaks;
/**
 * @record
 * @struct
 */
jax.IAsciiMathInputProcessor = function() {};
 /** @type {boolean} */
jax.IAsciiMathInputProcessor.prototype.displaystyle;
 /** @type {string} */
jax.IAsciiMathInputProcessor.prototype.decimal;
/**
 * @record
 * @struct
 */
jax.IMathMLInputProcessor = function() {};
 /** @type {boolean} */
jax.IMathMLInputProcessor.prototype.useMathMLspacing;
/**
 * @record
 * @struct
 */
jax.ITeXInputProcessor = function() {};
 /** @type {string} */
jax.ITeXInputProcessor.prototype.TagSide;
 /** @type {string} */
jax.ITeXInputProcessor.prototype.TagIndent;
 /** @type {string} */
jax.ITeXInputProcessor.prototype.MultLineWidth;
 /** @type {!jax.IEquationNumbers} */
jax.ITeXInputProcessor.prototype.equationNumbers;
 /** @type {?} */
jax.ITeXInputProcessor.prototype.Macros;
 /** @type {number} */
jax.ITeXInputProcessor.prototype.MAXMACROS;
 /** @type {number} */
jax.ITeXInputProcessor.prototype.MAXBUFFER;
 /** @type {!Array<string>} */
jax.ITeXInputProcessor.prototype.extensions;
/**
 * @record
 * @struct
 */
jax.IEquationNumbers = function() {};
 /** @type {string} */
jax.IEquationNumbers.prototype.autoNumber;
 /** @type {function(number): string} */
jax.IEquationNumbers.prototype.formatNumber;
 /** @type {function(number): string} */
jax.IEquationNumbers.prototype.formatTag;
 /** @type {function(): string} */
jax.IEquationNumbers.prototype.formatID;
 /** @type {function(string): string} */
jax.IEquationNumbers.prototype.formatURL;
 /** @type {boolean} */
jax.IEquationNumbers.prototype.useLabelIds;
/**
 * @record
 * @struct
 */
jax.IJSMath2jaxPreprocessor = function() {};
 /** @type {?} */
jax.IJSMath2jaxPreprocessor.prototype.preview;
/**
 * @record
 * @struct
 */
jax.IAsciimath2jaxPreprocessor = function() {};
 /** @type {?} */
jax.IAsciimath2jaxPreprocessor.prototype.delimiters;
 /** @type {?} */
jax.IAsciimath2jaxPreprocessor.prototype.preview;
 /** @type {!Array<string>} */
jax.IAsciimath2jaxPreprocessor.prototype.skipTags;
 /** @type {string} */
jax.IAsciimath2jaxPreprocessor.prototype.ignoreClass;
 /** @type {string} */
jax.IAsciimath2jaxPreprocessor.prototype.processClass;
/**
 * @record
 * @struct
 */
jax.IMML2jaxPreprocessor = function() {};
 /** @type {?} */
jax.IMML2jaxPreprocessor.prototype.preview;
/**
 * @record
 * @struct
 */
jax.ITEX2jaxPreprocessor = function() {};
 /** @type {?} */
jax.ITEX2jaxPreprocessor.prototype.inlineMath;
 /** @type {?} */
jax.ITEX2jaxPreprocessor.prototype.displayMath;
 /** @type {boolean} */
jax.ITEX2jaxPreprocessor.prototype.balanceBraces;
 /** @type {boolean} */
jax.ITEX2jaxPreprocessor.prototype.processEscapes;
 /** @type {boolean} */
jax.ITEX2jaxPreprocessor.prototype.processEnvironments;
 /** @type {?} */
jax.ITEX2jaxPreprocessor.prototype.preview;
 /** @type {!Array<string>} */
jax.ITEX2jaxPreprocessor.prototype.skipTags;
 /** @type {string} */
jax.ITEX2jaxPreprocessor.prototype.ignoreClass;
 /** @type {string} */
jax.ITEX2jaxPreprocessor.prototype.processClass;
/**
 * @record
 * @struct
 */
jax.ILocalization = function() {};
 /** @type {string} */
jax.ILocalization.prototype.locale;
 /** @type {string} */
jax.ILocalization.prototype.directory;
 /** @type {?} */
jax.ILocalization.prototype.strings;

/**
 * @param {number} id
 * @param {string} message
 * @param {...?} args
 * @return {void}
 */
jax.ILocalization.prototype._ = function(id, message, args) {};

/**
 * @param {string} locale
 * @return {void}
 */
jax.ILocalization.prototype.setLocale = function(locale) {};

/**
 * @param {string} locale
 * @param {string} domain
 * @param {?} def
 * @return {void}
 */
jax.ILocalization.prototype.addTranslation = function(locale, domain, def) {};

/**
 * @param {?} div
 * @return {?}
 */
jax.ILocalization.prototype.setCSS = function(div) {};

/**
 * @return {string}
 */
jax.ILocalization.prototype.fontFamily = function() {};

/**
 * @return {string}
 */
jax.ILocalization.prototype.fontDirection = function() {};

/**
 * @param {?} value
 * @return {number}
 */
jax.ILocalization.prototype.plural = function(value) {};

/**
 * @param {number} value
 * @return {string}
 */
jax.ILocalization.prototype.number = function(value) {};

/**
 * @param {string} domain
 * @param {!jax.ICallbackObject=} callback
 * @return {!jax.ICallbackObject}
 */
jax.ILocalization.prototype.loadDomain = function(domain, callback) {};

/**
 * @param {?} spec
 * @return {void}
 */
jax.ILocalization.prototype.Try = function(spec) {};
/**
 * @record
 * @struct
 */
jax.IInputJax = function() {};
 /** @type {string} */
jax.IInputJax.prototype.id;
 /** @type {string} */
jax.IInputJax.prototype.version;
 /** @type {string} */
jax.IInputJax.prototype.directory;
 /** @type {string} */
jax.IInputJax.prototype.elementJax;

/**
 * @param {?} script
 * @param {?} state
 * @return {?}
 */
jax.IInputJax.prototype.Process = function(script, state) {};

/**
 * @param {?} script
 * @param {?} state
 * @return {!jax.IElementJax}
 */
jax.IInputJax.prototype.Translate = function(script, state) {};

/**
 * @param {string} mimetype
 * @return {void}
 */
jax.IInputJax.prototype.Register = function(mimetype) {};

/**
 * @param {?} element
 * @return {boolean}
 */
jax.IInputJax.prototype.needsUpdate = function(element) {};
/**
 * @record
 * @struct
 */
jax.IOutputJax = function() {};
 /** @type {string} */
jax.IOutputJax.prototype.id;
 /** @type {string} */
jax.IOutputJax.prototype.version;
 /** @type {string} */
jax.IOutputJax.prototype.directory;
 /** @type {string} */
jax.IOutputJax.prototype.fontDir;
 /** @type {string} */
jax.IOutputJax.prototype.imageDir;

/**
 * @param {?} state
 * @return {void}
 */
jax.IOutputJax.prototype.preProcess = function(state) {};

/**
 * @param {?} state
 * @return {void}
 */
jax.IOutputJax.prototype.preTranslate = function(state) {};

/**
 * @param {?} script
 * @param {?} state
 * @return {!jax.IElementJax}
 */
jax.IOutputJax.prototype.Translate = function(script, state) {};

/**
 * @param {?} state
 * @return {void}
 */
jax.IOutputJax.prototype.postTranslate = function(state) {};

/**
 * @param {string} mimetype
 * @return {void}
 */
jax.IOutputJax.prototype.Register = function(mimetype) {};

/**
 * @param {?} jax
 * @return {void}
 */
jax.IOutputJax.prototype.Remove = function(jax) {};

/**
 * @param {?} math
 * @return {!jax.IElementJax}
 */
jax.IOutputJax.prototype.getJaxFromMath = function(math) {};

/**
 * @param {?} jax
 * @param {?} span
 * @param {?} math
 * @param {number} Mw
 * @param {number} Mh
 * @return {!jax.IZoomStruct}
 */
jax.IOutputJax.prototype.Zoom = function(jax, span, math, Mw, Mh) {};
/**
 * @record
 * @struct
 */
jax.IZoomStruct = function() {};
 /** @type {number} */
jax.IZoomStruct.prototype.Y;
 /** @type {number} */
jax.IZoomStruct.prototype.mW;
 /** @type {number} */
jax.IZoomStruct.prototype.mH;
 /** @type {number} */
jax.IZoomStruct.prototype.zW;
 /** @type {number} */
jax.IZoomStruct.prototype.zH;
/**
 * @record
 * @struct
 */
jax.IElementJax = function() {};
 /** @type {string} */
jax.IElementJax.prototype.id;
 /** @type {string} */
jax.IElementJax.prototype.version;
 /** @type {string} */
jax.IElementJax.prototype.directory;
 /** @type {string} */
jax.IElementJax.prototype.inputJax;
 /** @type {string} */
jax.IElementJax.prototype.outputJax;
 /** @type {string} */
jax.IElementJax.prototype.inputID;
 /** @type {string} */
jax.IElementJax.prototype.originalText;
 /** @type {string} */
jax.IElementJax.prototype.mimeType;

/**
 * @param {string} text
 * @param {?=} callback
 * @return {!jax.ICallbackObject}
 */
jax.IElementJax.prototype.Text = function(text, callback) {};

/**
 * @param {?} callback
 * @return {!jax.ICallbackObject}
 */
jax.IElementJax.prototype.Rerender = function(callback) {};

/**
 * @param {?} callback
 * @return {!jax.ICallbackObject}
 */
jax.IElementJax.prototype.Reprocess = function(callback) {};

/**
 * @return {void}
 */
jax.IElementJax.prototype.Remove = function() {};

/**
 * @return {?}
 */
jax.IElementJax.prototype.SourceElement = function() {};

/**
 * @return {boolean}
 */
jax.IElementJax.prototype.needsUpdate = function() {};
