/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/chai-arrays/index.d.ts:

/**
 * @return {!Chai.Assertion}
 */
Chai.Assertion.prototype.array = function() {};

/**
 * @param {number} size
 * @return {!Chai.Assertion}
 */
Chai.Assertion.prototype.ofSize = function(size) {};

/**
 * @param {!Array<?>} arr
 * @return {!Chai.Assertion}
 */
Chai.Assertion.prototype.equalTo = function(arr) {};

/**
 * @param {?} value
 * @return {!Chai.Assertion}
 */
Chai.Assertion.prototype.containing = function(value) {};

/**
 * @param {!Array<?>} values
 * @return {!Chai.Assertion}
 */
Chai.Assertion.prototype.containingAllOf = function(values) {};

/**
 * @param {!Array<?>} values
 * @return {!Chai.Assertion}
 */
Chai.Assertion.prototype.containingAnyOf = function(values) {};

/**
 * @return {!Chai.Assertion}
 */
Chai.Assertion.prototype.sorted = function() {};

/**
 * @param {!Array<?>} val
 * @param {string=} msg
 * @return {void}
 */
Chai.Assert.prototype.array = function(val, msg) {};

/**
 * @param {!Array<?>} val
 * @param {number} size
 * @param {string=} msg
 * @return {void}
 */
Chai.Assert.prototype.ofSize = function(val, size, msg) {};

/**
 * @param {!Array<?>} val
 * @param {!Array<?>} array
 * @param {string=} msg
 * @return {void}
 */
Chai.Assert.prototype.equalTo = function(val, array, msg) {};

/**
 * @param {!Array<?>} val
 * @param {?} value
 * @param {string=} msg
 * @return {void}
 */
Chai.Assert.prototype.containing = function(val, value, msg) {};

/**
 * @param {!Array<?>} val
 * @param {!Array<?>} values
 * @param {string=} msg
 * @return {void}
 */
Chai.Assert.prototype.containingAllOf = function(val, values, msg) {};

/**
 * @param {!Array<?>} val
 * @param {!Array<?>} values
 * @param {string=} msg
 * @return {void}
 */
Chai.Assert.prototype.containingAnyOf = function(val, values, msg) {};

/**
 * @param {!Array<?>} val
 * @param {string=} msg
 * @return {void}
 */
Chai.Assert.prototype.sorted = function(val, msg) {};
 /** @type {!Chai.Assertion} */
Array.prototype.should;

/**
 * @param {?} chai
 * @param {?} utils
 * @return {void}
 */
function chaiArrays(chai, utils) {}

/* TODO: ExportAssignment in  */
