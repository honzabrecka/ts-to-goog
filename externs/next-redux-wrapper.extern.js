/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/next-redux-wrapper/index.d.ts:

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: ExportAssignment in  */
/**
 * @record
 * @struct
 */
function NextPageComponentMethods() {}

/**
 * @param {?} props
 * @return {!Promise<?>}
 */
NextPageComponentMethods.prototype.getInitialProps = function(props) {};

/** @typedef {?} */
var NextReduxWrappedComponent;

/** @typedef {?} */
var NextStoreCreator;

/**
 * @template TInitialState, TStateProps, TDispatchProps, TOwnProps, TMergedProps
 * @param {!nextReduxWrapper.Options<TInitialState, TStateProps, TDispatchProps, TOwnProps, TMergedProps>|?} options_or_createStore
 * @param {?=} mapStateToProps
 * @param {?=} mapDispatchToProps
 * @param {?=} mergeProps
 * @param {?=} options
 * @return {function((!React.ComponentClass<?>|!React.StatelessComponent<?>)): ?}
 */
function nextReduxWrapper(options_or_createStore, mapStateToProps, mapDispatchToProps, mergeProps, options) {}
/**
 * @record
 * @struct
 */
nextReduxWrapper.Options = function() {};
 /** @type {?} */
nextReduxWrapper.Options.prototype.createStore;
 /** @type {boolean} */
nextReduxWrapper.Options.prototype.debug;
 /** @type {string} */
nextReduxWrapper.Options.prototype.storeKey;
 /** @type {?} */
nextReduxWrapper.Options.prototype.mapStateToProps;
 /** @type {?} */
nextReduxWrapper.Options.prototype.mapDispatchToProps;
 /** @type {?} */
nextReduxWrapper.Options.prototype.mergeProps;
 /** @type {?} */
nextReduxWrapper.Options.prototype.connectOptions;
/**
 * @extends {nextReduxWrapper.Options}
 * @record
 * @struct
 */
nextReduxWrapper.StoreCreatorOptions = function() {};
 /** @type {boolean} */
nextReduxWrapper.StoreCreatorOptions.prototype.isServer;
 /** @type {!IncomingMessage} */
nextReduxWrapper.StoreCreatorOptions.prototype.req;
 /** @type {?} */
nextReduxWrapper.StoreCreatorOptions.prototype.query;

/**
 * @param {?} Promise
 * @return {void}
 */
nextReduxWrapper.setPromise = function(Promise) {};

/**
 * @param {boolean} debug
 * @return {void}
 */
nextReduxWrapper.setDebug = function(debug) {};
