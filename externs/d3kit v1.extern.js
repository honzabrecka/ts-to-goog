/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/d3kit v1/index.d.ts:

/* TODO: ImportDeclaration in  */
/** @const */
var d3kit = {};
/**
 * @record
 * @struct
 */
d3kit.ChartMargin = function() {};
 /** @type {number} */
d3kit.ChartMargin.prototype.top;
 /** @type {number} */
d3kit.ChartMargin.prototype.right;
 /** @type {number} */
d3kit.ChartMargin.prototype.bottom;
 /** @type {number} */
d3kit.ChartMargin.prototype.left;
/**
 * @record
 * @struct
 */
d3kit.ChartOptions = function() {};
 /** @type {!d3kit.ChartMargin} */
d3kit.ChartOptions.prototype.margin;
 /** @type {!Array<?>} */
d3kit.ChartOptions.prototype.offset;
 /** @type {number} */
d3kit.ChartOptions.prototype.initialWidth;
 /** @type {number} */
d3kit.ChartOptions.prototype.initialHeight;

/* TODO: IndexSignature: d3kit */
/**
 * @record
 * @struct
 */
d3kit.ChartMixin = function() {};

/* TODO: IndexSignature: d3kit */

/**
 * @constructor
 * @struct
 * @param {(string|!Element)} selector
 * @param {!d3kit.ChartOptions=} options
 * @param {!Array<string>=} customEvents
 */
d3kit.Skeleton = function(selector, options, customEvents) {};

/**
 * @return {!Array<string>}
 */
d3kit.Skeleton.prototype.getCustomEventNames = function() {};

/**
 * @return {?}
 */
d3kit.Skeleton.prototype.getDispatcher = function() {};

/**
 * @return {number}
 */
d3kit.Skeleton.prototype.getInnerWidth = function() {};

/**
 * @return {number}
 */
d3kit.Skeleton.prototype.getInnerHeight = function() {};

/**
 * @return {!d3kit.LayerOrganizer}
 */
d3kit.Skeleton.prototype.getLayerOrganizer = function() {};

/**
 * @return {!d3.Selection<?>}
 */
d3kit.Skeleton.prototype.getRootG = function() {};

/**
 * @return {!d3.Selection<?>}
 */
d3kit.Skeleton.prototype.getSvg = function() {};

/**
 * @param {?=} data
 * @param {boolean=} doNotDispatch
 * @return {?|!d3kit.Skeleton}
 */
d3kit.Skeleton.prototype.data = function(data, doNotDispatch) {};

/**
 * @param {!d3kit.ChartOptions=} options
 * @param {boolean=} doNotDispatch
 * @return {?|!d3kit.Skeleton}
 */
d3kit.Skeleton.prototype.options = function(options, doNotDispatch) {};

/**
 * @param {!d3kit.ChartMargin=} margin
 * @param {boolean=} doNotDispatch
 * @return {!d3kit.ChartMargin|!d3kit.Skeleton}
 */
d3kit.Skeleton.prototype.margin = function(margin, doNotDispatch) {};

/**
 * @param {!Array<number>=} offset
 * @param {boolean=} doNotDispatch
 * @return {!Array<?>|!d3kit.Skeleton}
 */
d3kit.Skeleton.prototype.offset = function(offset, doNotDispatch) {};

/**
 * @param {(string|number)=} value
 * @param {boolean=} doNotDispatch
 * @return {number|!d3kit.Skeleton}
 */
d3kit.Skeleton.prototype.width = function(value, doNotDispatch) {};

/**
 * @param {(string|number)=} value
 * @param {boolean=} doNotDispatch
 * @return {number|!d3kit.Skeleton}
 */
d3kit.Skeleton.prototype.height = function(value, doNotDispatch) {};

/**
 * @param {!Array<?>=} dimension
 * @param {boolean=} doNotDispatch
 * @return {!Array<?>|!d3kit.Skeleton}
 */
d3kit.Skeleton.prototype.dimension = function(dimension, doNotDispatch) {};

/**
 * @param {(string|boolean)=} mode
 * @return {(string|boolean|void)}
 */
d3kit.Skeleton.prototype.autoResize = function(mode) {};

/**
 * @param {string=} method
 * @return {(string|void)}
 */
d3kit.Skeleton.prototype.autoResizeDetection = function(method) {};

/**
 * @param {(number|boolean)=} ratio
 * @return {(number|boolean|void)}
 */
d3kit.Skeleton.prototype.autoResizeToAspectRatio = function(ratio) {};

/**
 * @param {string} eventName
 * @param {function(!Array<?>): void} listener
 * @return {void}
 */
d3kit.Skeleton.prototype.on = function(eventName, listener) {};

/**
 * @return {boolean}
 */
d3kit.Skeleton.prototype.hasData = function() {};

/**
 * @return {boolean}
 */
d3kit.Skeleton.prototype.hasNonZeroArea = function() {};

/**
 * @param {!d3kit.ChartMixin} fn
 * @return {void}
 */
d3kit.Skeleton.prototype.mixin = function(fn) {};

/**
 * @param {(string|boolean)} mode
 * @param {boolean=} doNotDispatch
 * @return {void}
 */
d3kit.Skeleton.prototype.resizeToFitContainer = function(mode, doNotDispatch) {};

/**
 * @param {number} ratio
 * @param {boolean=} doNotDispatch
 * @return {void}
 */
d3kit.Skeleton.prototype.resizeToAspectRatio = function(ratio, doNotDispatch) {};
/**
 * @record
 * @struct
 */
d3kit.ChartletPropertyCallback = function() {};

/* TODO: CallSignature: d3kit */
/**
 * @record
 * @struct
 */
d3kit.ChartletEventFunction = function() {};

/* TODO: CallSignature: d3kit */

/**
 * @constructor
 * @struct
 * @param {!d3kit.ChartletEventFunction=} enterFunction
 * @param {!d3kit.ChartletEventFunction=} updateFunction
 * @param {!d3kit.ChartletEventFunction=} exitFunction
 * @param {!Array<string>=} customEventName
 */
d3kit.Chartlet = function(enterFunction, updateFunction, exitFunction, customEventName) {};

/**
 * @return {!d3.Dispatch}
 */
d3kit.Chartlet.prototype.getDispatcher = function() {};

/**
 * @return {!Array<string>}
 */
d3kit.Chartlet.prototype.getCustomEventNames = function() {};

/**
 * @param {string} name
 * @param {?} datum
 * @param {number} datum_index
 * @return {?}
 */
d3kit.Chartlet.prototype.getPropertyValue = function(name, datum, datum_index) {};

/**
 * @param {string} name
 * @param {?=} value
 * @return {!d3kit.ChartletPropertyCallback|!d3kit.Chartlet}
 */
d3kit.Chartlet.prototype.property = function(name, value) {};

/**
 * @param {!d3.Selection<?>=} sel
 * @param {string=} done
 * @return {function(!d3.Selection<?>): void}
 */
d3kit.Chartlet.prototype.enter = function(sel, done) {};

/**
 * @param {!d3.Selection<?>=} sel
 * @param {string=} done
 * @return {function(!d3.Selection<?>): void}
 */
d3kit.Chartlet.prototype.update = function(sel, done) {};

/**
 * @param {!d3.Selection<?>=} sel
 * @param {string=} done
 * @return {function(!d3.Selection<?>): void}
 */
d3kit.Chartlet.prototype.exit = function(sel, done) {};

/**
 * @param {!d3kit.Chartlet} parent_chartlet
 * @param {string} parent_property_name
 * @param {string=} child_property_name
 * @return {void}
 */
d3kit.Chartlet.prototype.inheritPropertyFrom = function(parent_chartlet, parent_property_name, child_property_name) {};

/**
 * @param {!d3kit.Chartlet} parent_chartlet
 * @param {!Array<string>} parent_property_names
 * @param {!Array<string>=} child_property_names
 * @return {void}
 */
d3kit.Chartlet.prototype.inheritPropertiesFrom = function(parent_chartlet, parent_property_names, child_property_names) {};

/**
 * @param {!d3.Dispatch} dispatcher
 * @return {!d3kit.Chartlet}
 */
d3kit.Chartlet.prototype.publishEventsTo = function(dispatcher) {};

/**
 * @param {string} eventName
 * @param {!d3kit.ChartletEventFunction} handlerFunction
 * @return {void}
 */
d3kit.Chartlet.prototype.on = function(eventName, handlerFunction) {};
/**
 * @record
 * @struct
 */
d3kit.LayerConfig = function() {};
 /** @type {string} */
d3kit.LayerConfig.prototype.name;
 /** @type {!Array<string>} */
d3kit.LayerConfig.prototype.names;
 /** @type {!d3kit.LayerConfig} */
d3kit.LayerConfig.prototype.sublayers;

/**
 * @constructor
 * @struct
 * @param {!d3.Selection<?>} container
 * @param {string=} tag
 */
d3kit.LayerOrganizer = function(container, tag) {};

/**
 * @param {?} config
 * @return {(!d3.Selection<?>|!Array<!d3.Selection<?>>)}
 */
d3kit.LayerOrganizer.prototype.create = function(config) {};

/**
 * @param {string} name
 * @return {!d3.Selection<?>}
 */
d3kit.LayerOrganizer.prototype.get = function(name) {};

/**
 * @param {string} name
 * @return {boolean}
 */
d3kit.LayerOrganizer.prototype.has = function(name) {};
/** @const */
d3kit.factory = {};

/**
 * @param {!d3kit.ChartOptions} defaultOptions
 * @param {!Array<string>} customEvents
 * @param {function(!d3kit.Skeleton): void} constructor
 * @return {function((string|!Element), !d3kit.ChartOptions, !Array<string>): !d3kit.Skeleton}
 */
d3kit.factory.createChart = function(defaultOptions, customEvents, constructor) {};
/** @const */
d3kit.helper = {};

/**
 * @param {function(!Array<?>): void} fn
 * @param {number} wait
 * @param {boolean} immediate
 * @return {function(!Array<?>): void}
 */
d3kit.helper.debounce = function(fn, wait, immediate) {};

/**
 * @param {!Object} target
 * @param {...!Object} args
 * @return {!Object}
 */
d3kit.helper.extend = function(target, args) {};

/**
 * @param {!Object} target
 * @param {...!Object} args
 * @return {!Object}
 */
d3kit.helper.deepExtend = function(target, args) {};

/**
 * @param {!d3.Selection<?>} selection
 * @param {!d3.Dispatch} dispatch
 * @param {string} prefix
 * @return {void}
 */
d3kit.helper.bindMouseEventsToDispatcher = function(selection, dispatch, prefix) {};

/**
 * @param {!d3.Selection<?>} selection
 * @param {boolean} noTransition
 * @return {!d3.Selection<?>}
 */
d3kit.helper.removeAllChildren = function(selection, noTransition) {};

/**
 * @param {!Element} element
 * @param {string} type
 * @param {function(!Array<?>): void} listener
 * @return {void}
 */
d3kit.helper.on = function(element, type, listener) {};

/**
 * @param {!Element} element
 * @param {string} type
 * @param {function(!Array<?>): void} listener
 * @return {void}
 */
d3kit.helper.off = function(element, type, listener) {};

/**
 * @param {string} str
 * @param {string} characters
 * @return {string}
 */
d3kit.helper.trim = function(str, characters) {};

/**
 * @param {string} str
 * @return {string}
 */
d3kit.helper.dasherize = function(str) {};

/**
 * @param {(string|!Element)} s
 * @return {!Element}
 */
d3kit.helper.$ = function(s) {};

/**
 * @param {(!Array<!Node>|!NodeList)} s
 * @return {!Array<!Element>}
 */
d3kit.helper.$$ = function(s) {};

/**
 * @param {?} value
 * @return {boolean}
 */
d3kit.helper.isArray = function(value) {};

/**
 * @param {?} value
 * @return {boolean}
 */
d3kit.helper.isNumber = function(value) {};

/**
 * @param {?} value
 * @return {boolean}
 */
d3kit.helper.isObject = function(value) {};

/**
 * @param {?} o
 * @return {boolean}
 */
d3kit.helper.isElement = function(o) {};

/**
 * @param {?} functionToCheck
 * @return {boolean}
 */
d3kit.helper.isFunction = function(functionToCheck) {};

/* TODO: ExportAssignment in  */

/* TODO: NamespaceExportDeclaration in  */
