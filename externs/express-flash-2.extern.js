/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/express-flash-2/index.d.ts:
/** @const */
var Express = {};
/**
 * @record
 * @struct
 */
Express.Request = function() {};
 /** @type {!Express.Session} */
Express.Request.prototype.session;
/**
 * @record
 * @struct
 */
Express.Session = function() {};
 /** @type {!Express.Flash} */
Express.Session.prototype.flash;
/**
 * @record
 * @struct
 */
Express.Flash = function() {};

/* TODO: IndexSignature: Express */
/**
 * @record
 * @struct
 */
Express.Response = function() {};
 /** @type {{flash: !Express.Flash}} */
Express.Response.prototype.locals;

/**
 * Queue flash `msg` of the given `type`.
 * 
 * Examples:
 * 
 *      req.flash('info', 'email sent');
 *      req.flash('error', 'email delivery failed');
 *      req.flash('info', 'email re-sent');
 * 
 * 
 * Formatting:
 * 
 * Flash notifications also support arbitrary formatting support.
 * For example you may pass variable arguments to `req.flash()`
 * and use the %s specifier to be replaced by the associated argument:
 * 
 *     req.flash('info', 'email has been sent to %s.', userName);
 * 
 * Formatting uses `util.format()`, which is available on Node 0.6+.
 * @param {string} type
 * @param {(string|!Array<?>)} msg
 * @return {void}
 */
Express.Response.prototype.flash = function(type, msg) {};
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "express-flash-2"
/** @const */
tsickle_declare_module.express_flash__ = {};

/* TODO: ImportEqualsDeclaration in tsickle_declare_module.express_flash__ */

/**
 * Expose `flash()` function on responses.
 * @return {!e.RequestHandler}
 */
tsickle_declare_module.express_flash__.flash = function() {};

/* TODO: ExportAssignment in tsickle_declare_module.express_flash__ */
