/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/analytics-node/index.d.ts:

/* TODO: ExportAssignment in  */
/** @const */
var AnalyticsNode = {};
/**
 * @record
 * @struct
 */
AnalyticsNode.Integrations = function() {};

/* TODO: IndexSignature: AnalyticsNode */

/**
 * @constructor
 * @struct
 * @param {string} writeKey
 * @param {{flushAt: number, flushAfter: number}=} opts
 */
AnalyticsNode.Analytics = function(writeKey, opts) {};

/**
 * @param {{userId: (string|number), traits: !Object, timestamp: !Date, context: !Object, integrations: !AnalyticsNode.Integrations}} message
 * @return {!AnalyticsNode.Analytics}
 */
AnalyticsNode.Analytics.prototype.identify = function(message) {};

/**
 * @param {{userId: (string|number), event: string, properties: !Object, timestamp: !Date, context: !Object, integrations: !AnalyticsNode.Integrations}} message
 * @return {!AnalyticsNode.Analytics}
 */
AnalyticsNode.Analytics.prototype.track = function(message) {};

/**
 * @param {{userId: (string|number), category: string, name: string, properties: !Object, timestamp: !Date, context: !Object, integrations: !AnalyticsNode.Integrations}} message
 * @return {!AnalyticsNode.Analytics}
 */
AnalyticsNode.Analytics.prototype.page = function(message) {};

/**
 * @param {{previousId: (string|number), userId: (string|number), integrations: !AnalyticsNode.Integrations}} message
 * @return {!AnalyticsNode.Analytics}
 */
AnalyticsNode.Analytics.prototype.alias = function(message) {};

/**
 * @param {{userId: (string|number), groupId: (string|number), traits: !Object, context: !Object, timestamp: !Date, anonymous_id: (string|number), integrations: !AnalyticsNode.Integrations}} message
 * @return {!AnalyticsNode.Analytics}
 */
AnalyticsNode.Analytics.prototype.group = function(message) {};

/**
 * @param {function(!Error, {batch: !Array<{type: string}>, messageId: string, sentAt: !Date, timestamp: !Date}): void=} fn
 * @return {!AnalyticsNode.Analytics}
 */
AnalyticsNode.Analytics.prototype.flush = function(fn) {};
