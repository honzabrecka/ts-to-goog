/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/x-editable/index.d.ts:
/**
 * @record
 * @struct
 */
function XEditableOptions() {}
 /** @type {?} */
XEditableOptions.prototype.ajaxOptions;
 /** @type {string} */
XEditableOptions.prototype.anim;
 /** @type {string} */
XEditableOptions.prototype.autotext;
 /** @type {?} */
XEditableOptions.prototype.defaultValue;
 /** @type {boolean} */
XEditableOptions.prototype.disabled;
 /** @type {?} */
XEditableOptions.prototype.display;
 /** @type {string} */
XEditableOptions.prototype.emptyclass;
 /** @type {string} */
XEditableOptions.prototype.emptytext;
 /** @type {?} */
XEditableOptions.prototype.error;
 /** @type {?} */
XEditableOptions.prototype.highlight;
 /** @type {string} */
XEditableOptions.prototype.mode;
 /** @type {string} */
XEditableOptions.prototype.name;
 /** @type {string} */
XEditableOptions.prototype.onblur;
 /** @type {?} */
XEditableOptions.prototype.params;
 /** @type {?} */
XEditableOptions.prototype.pk;
 /** @type {string} */
XEditableOptions.prototype.placement;
 /** @type {boolean} */
XEditableOptions.prototype.savenochange;
 /** @type {string} */
XEditableOptions.prototype.selector;
 /** @type {string} */
XEditableOptions.prototype.send;
 /** @type {?} */
XEditableOptions.prototype.showbuttons;
 /** @type {?} */
XEditableOptions.prototype.success;
 /** @type {string} */
XEditableOptions.prototype.toggle;
 /** @type {string} */
XEditableOptions.prototype.type;
 /** @type {string} */
XEditableOptions.prototype.unsavedclass;
 /** @type {?} */
XEditableOptions.prototype.url;
 /** @type {?} */
XEditableOptions.prototype.validate;
 /** @type {?} */
XEditableOptions.prototype.value;
/**
 * @record
 * @struct
 */
function XEditableSubmitOptions() {}
 /** @type {?} */
XEditableSubmitOptions.prototype.url;
 /** @type {?} */
XEditableSubmitOptions.prototype.data;
 /** @type {?} */
XEditableSubmitOptions.prototype.ajaxOptions;

/**
 * @param {?} obj
 * @return {void}
 */
XEditableSubmitOptions.prototype.error = function(obj) {};

/**
 * @param {?} obj
 * @param {?} config
 * @return {void}
 */
XEditableSubmitOptions.prototype.success = function(obj, config) {};
/**
 * @record
 * @struct
 */
function XEditable() {}
 /** @type {!XEditableOptions} */
XEditable.prototype.options;

/**
 * @return {void}
 */
XEditable.prototype.activate = function() {};

/**
 * @return {void}
 */
XEditable.prototype.destroy = function() {};

/**
 * @return {void}
 */
XEditable.prototype.disable = function() {};

/**
 * @return {void}
 */
XEditable.prototype.enable = function() {};

/**
 * @param {boolean} isSingle
 * @return {?}
 */
XEditable.prototype.getValue = function(isSingle) {};

/**
 * @return {void}
 */
XEditable.prototype.hide = function() {};

/**
 * @param {?} key
 * @param {?} value
 * @return {void}
 */
XEditable.prototype.option = function(key, value) {};

/**
 * @param {?} value
 * @param {boolean} convertStr
 * @return {void}
 */
XEditable.prototype.setValue = function(value, convertStr) {};

/**
 * @param {boolean} closeAll
 * @return {void}
 */
XEditable.prototype.show = function(closeAll) {};

/**
 * @param {!XEditableSubmitOptions} options
 * @return {void}
 */
XEditable.prototype.submit = function(options) {};

/**
 * @param {boolean} closeAll
 * @return {void}
 */
XEditable.prototype.toggle = function(closeAll) {};

/**
 * @return {void}
 */
XEditable.prototype.toggleDisabled = function() {};

/**
 * @return {void}
 */
XEditable.prototype.validate = function() {};

/**
 * Initializes editable with the specified options
 * Initializes editable calling the specific method with is parameters
 * @param {?|string=} options_or_method an object with options specific to the editable instance / the method to call
 * @param {?=} params the parameters expected by the method
 * @return {!XEditable}
 */
JQuery.prototype.editable = function(options_or_method, params) {};
