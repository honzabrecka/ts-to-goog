/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/raven/index.d.ts:

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */
 /** @type {string} */
var version;

/**
 * @param {(string|boolean)} dsn
 * @param {?=} options
 * @return {?}
 */
function config(dsn, options) {}

/**
 * @template T
 * @param {?} func_or_options
 * @param {?=} func
 * @return {?}
 */
function wrap(func_or_options, func) {}

/**
 * @param {?} ctx
 * @return {?}
 */
function interceptErr(ctx) {}

/**
 * @param {?} ctx
 * @return {?}
 */
function setContext(ctx) {}

/**
 * @param {!Error} e
 * @param {?=} cb_or_options
 * @param {?=} cb
 * @return {string}
 */
function captureException(e, cb_or_options, cb) {}

/**
 * @param {string} message
 * @param {?=} cb_or_options
 * @param {?=} cb
 * @return {string}
 */
function captureMessage(message, cb_or_options, cb) {}

/**
 * @param {?} ctx
 * @return {?}
 */
function mergeContext(ctx) {}

/**
 * @return {?}
 */
function getContext() {}

/**
 * @return {?}
 */
function requestHandler() {}

/**
 * @return {?}
 */
function errorHandler() {}

/**
 * @template T
 * @param {?} ctx_or_func
 * @param {?=} func
 * @return {?}
 */
function context(ctx_or_func, func) {}

/**
 * @param {?} breadcrumb
 * @return {void}
 */
function captureBreadcrumb(breadcrumb) {}

/**
 * @return {void}
 */
function disableConsoleAlerts() {}

/**
 * @param {string} msg
 * @return {void}
 */
function consoleAlert(msg) {}

/**
 * @param {(string|boolean)} dsn
 * @return {?}
 */
function parseDSN(dsn) {}

/**
 * @constructor
 * @struct
 * @param {?|string} options_or_dsn
 * @param {?=} options
 */
function Client(options_or_dsn, options) {}

/**
 * @param {string} dsn
 * @param {?=} options
 * @return {?}
 */
Client.prototype.config = function(dsn, options) {};

/**
 * @param {?=} options
 * @param {?=} cb
 * @return {?}
 */
Client.prototype.install = function(options, cb) {};

/**
 * @param {?} ctx
 * @return {?}
 */
Client.prototype.setContext = function(ctx) {};

/**
 * @return {?}
 */
Client.prototype.requestHandler = function() {};

/**
 * @return {?}
 */
Client.prototype.errorHandler = function() {};

/**
 * @param {!Error} error
 * @param {?=} cb_or_options
 * @param {?=} cb
 * @return {string}
 */
Client.prototype.captureException = function(error, cb_or_options, cb) {};

/**
 * @param {string} message
 * @param {?=} cb_or_options
 * @param {?=} cb
 * @return {string}
 */
Client.prototype.captureMessage = function(message, cb_or_options, cb) {};

/**
 * @param {?} breadcrumb
 * @return {void}
 */
Client.prototype.captureBreadcrumb = function(breadcrumb) {};

/**
 * @param {?} data
 * @return {void}
 */
Client.prototype.setUserContext = function(data) {};

/**
 * @param {?} fn
 * @return {void}
 */
Client.prototype.setDataCallback = function(fn) {};

/**
 * @param {?} fn
 * @return {?}
 */
Client.prototype.setShouldSendCallback = function(fn) {};

/**
 * @template T
 * @param {?} ctx_or_func
 * @param {?=} func
 * @return {?}
 */
Client.prototype.context = function(ctx_or_func, func) {};

/**
 * @param {?|string} kwargs_or_eventId
 * @param {?=} cb_or_kwargs
 * @param {?=} cb
 * @return {void}
 */
Client.prototype.process = function(kwargs_or_eventId, cb_or_kwargs, cb) {};
/**
 * @record
 * @struct
 */
function ConstructorOptions() {}
 /** @type {string} */
ConstructorOptions.prototype.name;
 /** @type {string} */
ConstructorOptions.prototype.logger;
 /** @type {string} */
ConstructorOptions.prototype.release;
 /** @type {string} */
ConstructorOptions.prototype.environment;
 /** @type {?} */
ConstructorOptions.prototype.tags;
 /** @type {?} */
ConstructorOptions.prototype.extra;
 /** @type {?} */
ConstructorOptions.prototype.dataCallback;
 /** @type {?} */
ConstructorOptions.prototype.shouldSendCallback;
 /** @type {boolean} */
ConstructorOptions.prototype.captureUnhandledRejections;
 /** @type {?} */
ConstructorOptions.prototype.autoBreadcrumbs;
 /** @type {(boolean|!Array<string>|?)} */
ConstructorOptions.prototype.parseUser;

/**
 * @return {void}
 */
ConstructorOptions.prototype.transport = function() {};

/** @typedef {?} */
var parseUserCallback;
/**
 * @record
 * @struct
 */
function UserData() {}
 /** @type {string} */
UserData.prototype.id;
 /** @type {string} */
UserData.prototype.handle;
/**
 * @record
 * @struct
 */
function parsedDSN() {}
 /** @type {string} */
parsedDSN.prototype.protocol;
 /** @type {string} */
parsedDSN.prototype.public_key;
 /** @type {string} */
parsedDSN.prototype.private_key;
 /** @type {string} */
parsedDSN.prototype.host;
 /** @type {string} */
parsedDSN.prototype.path;
 /** @type {string} */
parsedDSN.prototype.project_id;
 /** @type {number} */
parsedDSN.prototype.port;

/** @typedef {?} */
var CaptureCallback;

/** @typedef {?} */
var DataCallback;

/** @typedef {?} */
var ShouldSendCallback;

/** @typedef {?} */
var TransportCallback;
/**
 * @record
 * @struct
 */
function CaptureOptions() {}
 /** @type {?} */
CaptureOptions.prototype.tags;
 /** @type {?} */
CaptureOptions.prototype.extra;
 /** @type {!Array<string>} */
CaptureOptions.prototype.fingerprint;
 /** @type {string} */
CaptureOptions.prototype.level;
 /** @type {!IncomingMessage} */
CaptureOptions.prototype.req;
 /** @type {?} */
CaptureOptions.prototype.user;
