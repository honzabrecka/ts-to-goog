/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/p-cancelable/index.d.ts:

/* TODO: ExportAssignment in  */
 /** @type {?} */
var PCancelable;
/**
 * @extends {PromiseConstructor}
 * @record
 * @struct
 */
function PCancelableConstructor() {}
 /** @type {!PCancelable.PCancelable<?>} */
PCancelableConstructor.prototype.prototype;
 /** @type {!PCancelable.CancelErrorConstructor} */
PCancelableConstructor.prototype.CancelError;

/* TODO: ConstructSignature:  */

/**
 * @template T, R
 * @param {?} wrapper
 * @return {?}
 */
PCancelableConstructor.prototype.fn = function(wrapper) {};
/**
 * @record
 * @struct
 */
PCancelable.PCancelable = function() {};
 /** @type {boolean} */
PCancelable.PCancelable.prototype.canceled;

/**
 * @return {void}
 */
PCancelable.PCancelable.prototype.cancel = function() {};
/**
 * @extends {ErrorConstructor}
 * @record
 * @struct
 */
PCancelable.CancelErrorConstructor = function() {};

/* TODO: ConstructSignature: PCancelable */
/**
 * @record
 * @struct
 */
PCancelable.CancelError = function() {};
 /** @type {string} */
PCancelable.CancelError.prototype.name;
