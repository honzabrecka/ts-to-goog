/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/knockstrap/index.d.ts:

/**
 * @param {string} prefix
 * @return {string}
 */
KnockoutUtils.prototype.uniqueId = function(prefix) {};

/**
 * @param {?} wrappedProperies
 * @return {?}
 */
KnockoutUtils.prototype.unwrapProperties = function(wrappedProperies) {};
 /** @type {function(new: (!KnockstrapStringTemplate), string): ?} */
KnockoutTemplateSources.prototype.stringTemplate;
/**
 * @extends {KnockoutTemplateSourcesDomElement}
 * @record
 * @struct
 */
function KnockstrapStringTemplate() {}
 /** @type {string} */
KnockstrapStringTemplate.prototype.templateName;
 /** @type {function(new: (!KnockstrapStringTemplateEngine)): ?} */
KnockoutStatic.prototype.stringTemplateEngine;
/**
 * @extends {KnockoutNativeTemplateEngine}
 * @record
 * @struct
 */
function KnockstrapStringTemplateEngine() {}
 /** @type {boolean} */
KnockstrapStringTemplateEngine.prototype.allowTemplateRewriting;

/**
 * @param {string} template
 * @return {!KnockstrapStringTemplate}
 */
KnockstrapStringTemplateEngine.prototype.makeTemplateSource = function(template) {};

/**
 * @param {string} name
 * @param {?} template
 * @return {void}
 */
KnockstrapStringTemplateEngine.prototype.addTemplate = function(name, template) {};

/**
 * @param {string} name
 * @return {void}
 */
KnockstrapStringTemplateEngine.prototype.removeTemplate = function(name) {};

/**
 * @param {string} name
 * @return {boolean}
 */
KnockstrapStringTemplateEngine.prototype.isTemplateExist = function(name) {};

/**
 * @param {string} name
 * @return {?}
 */
KnockstrapStringTemplateEngine.prototype.getTemplate = function(name) {};
 /** @type {!AlertKnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.alert;
 /** @type {!CarouselKnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.carousel;
 /** @type {!KnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.checkbox;
 /** @type {!ModalKnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.modal;
 /** @type {!PopoverKnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.popover;
 /** @type {!ProgressKnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.progress;
 /** @type {!KnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.radio;
 /** @type {!KnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.toggle;
 /** @type {!KnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.tooltip;
/**
 * @record
 * @struct
 */
function KnockoutControlsDescendantBindings() {}
 /** @type {boolean} */
KnockoutControlsDescendantBindings.prototype.controlsDescendantBindings;
/**
 * @extends {KnockoutBindingHandler}
 * @record
 * @struct
 */
function AlertKnockoutBindingHandler() {}

/**
 * @param {?} element
 * @param {function(): ?} valueAccessor
 * @param {!KnockoutAllBindingsAccessor} allBindingsAccessor
 * @param {?} viewModel
 * @param {!KnockoutBindingContext} bindingContext
 * @return {!KnockoutControlsDescendantBindings}
 */
AlertKnockoutBindingHandler.prototype.init = function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {};
/**
 * @extends {KnockoutBindingHandler}
 * @record
 * @struct
 */
function CarouselKnockoutBindingHandler() {}
 /** @type {!KnockstrapCarouselDefaults} */
CarouselKnockoutBindingHandler.prototype.defaults;

/**
 * @param {?} element
 * @param {function(): ?} valueAccessor
 * @param {!KnockoutAllBindingsAccessor} allBindingsAccessor
 * @param {?} viewModel
 * @param {!KnockoutBindingContext} bindingContext
 * @return {!KnockoutControlsDescendantBindings}
 */
CarouselKnockoutBindingHandler.prototype.init = function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {};
/**
 * @record
 * @struct
 */
function KnockstrapCarouselDefaults() {}
 /** @type {string} */
KnockstrapCarouselDefaults.prototype.css;
 /** @type {!KnockstrapCarouselDefaultsControlsTemplate} */
KnockstrapCarouselDefaults.prototype.controlsTemplate;
 /** @type {!KnockstrapCarouselDefaultsIndicatorsTemplate} */
KnockstrapCarouselDefaults.prototype.indicatorsTemplate;
 /** @type {!KnockstrapCarouselDefaultsItemTemplate} */
KnockstrapCarouselDefaults.prototype.itemTemplate;
/**
 * @record
 * @struct
 */
function KnockstrapDefaultsTemplateBase() {}
 /** @type {string} */
KnockstrapDefaultsTemplateBase.prototype.name;
 /** @type {!KnockstrapStringTemplateEngine} */
KnockstrapDefaultsTemplateBase.prototype.templateEngine;
/**
 * @extends {KnockstrapDefaultsTemplateBase}
 * @record
 * @struct
 */
function KnockstrapCarouselDefaultsControlsTemplate() {}

/**
 * @param {?} value
 * @return {!KnockstrapCarouselDefaultsIdDataConverted}
 */
KnockstrapCarouselDefaultsControlsTemplate.prototype.dataConverter = function(value) {};
/**
 * @record
 * @struct
 */
function KnockstrapCarouselDefaultsIdDataConverted() {}
 /** @type {!KnockoutComputed<string>} */
KnockstrapCarouselDefaultsIdDataConverted.prototype.id;
/**
 * @extends {KnockstrapDefaultsTemplateBase}
 * @record
 * @struct
 */
function KnockstrapCarouselDefaultsIndicatorsTemplate() {}

/**
 * @param {?} value
 * @return {!KnockstrapCarouselDefaultsIdItemsDataConverted}
 */
KnockstrapCarouselDefaultsIndicatorsTemplate.prototype.dataConverter = function(value) {};
/**
 * @extends {KnockstrapCarouselDefaultsIdDataConverted}
 * @record
 * @struct
 */
function KnockstrapCarouselDefaultsIdItemsDataConverted() {}
 /** @type {?} */
KnockstrapCarouselDefaultsIdItemsDataConverted.prototype.items;
/**
 * @extends {KnockstrapDefaultsTemplateBase}
 * @record
 * @struct
 */
function KnockstrapCarouselDefaultsItemTemplate() {}

/**
 * @param {?} value
 * @return {?}
 */
KnockstrapCarouselDefaultsItemTemplate.prototype.converter = function(value) {};
/**
 * @extends {KnockoutBindingHandler}
 * @record
 * @struct
 */
function ModalKnockoutBindingHandler() {}
 /** @type {!KnockstrapModalDefaults} */
ModalKnockoutBindingHandler.prototype.defaults;

/**
 * @param {?} element
 * @param {function(): ?} valueAccessor
 * @param {!KnockoutAllBindingsAccessor} allBindingsAccessor
 * @param {?} viewModel
 * @param {!KnockoutBindingContext} bindingContext
 * @return {!KnockoutControlsDescendantBindings}
 */
ModalKnockoutBindingHandler.prototype.init = function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {};
/**
 * @record
 * @struct
 */
function KnockstrapModalDefaults() {}
 /** @type {string} */
KnockstrapModalDefaults.prototype.css;
 /** @type {!KnockstrapModalDefaultsAttributes} */
KnockstrapModalDefaults.prototype.attributes;
 /** @type {!KnockstrapDefaultsTemplateBase} */
KnockstrapModalDefaults.prototype.headerTemplate;
 /** @type {!KnockstrapDefaultsTemplateBase} */
KnockstrapModalDefaults.prototype.bodyTemplate;
 /** @type {!KnockstrapModalDefaultsFooterTemplate} */
KnockstrapModalDefaults.prototype.footerTemplate;
/**
 * @record
 * @struct
 */
function KnockstrapModalDefaultsAttributes() {}
 /** @type {string} */
KnockstrapModalDefaultsAttributes.prototype.role;
/**
 * @extends {KnockstrapDefaultsTemplateBase}
 * @record
 * @struct
 */
function KnockstrapModalDefaultsFooterTemplate() {}
 /** @type {!KnockstrapModalDefaultsFooterData} */
KnockstrapModalDefaultsFooterTemplate.prototype.data;
/**
 * @record
 * @struct
 */
function KnockstrapModalDefaultsFooterData() {}
 /** @type {string} */
KnockstrapModalDefaultsFooterData.prototype.closeLabel;
 /** @type {string} */
KnockstrapModalDefaultsFooterData.prototype.primaryLabel;
/**
 * @extends {KnockoutBindingHandler}
 * @record
 * @struct
 */
function PopoverKnockoutBindingHandler() {}

/**
 * @param {?} element
 * @param {function(): ?} valueAccessor
 * @param {!KnockoutAllBindingsAccessor} allBindingsAccessor
 * @param {?} viewModel
 * @param {!KnockoutBindingContext} bindingContext
 * @return {!KnockoutControlsDescendantBindings}
 */
PopoverKnockoutBindingHandler.prototype.init = function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {};
/**
 * @extends {KnockoutBindingHandler}
 * @record
 * @struct
 */
function ProgressKnockoutBindingHandler() {}
 /** @type {!KnockstrapProgressDefaults} */
ProgressKnockoutBindingHandler.prototype.defaults;

/**
 * @param {?} element
 * @param {function(): ?} valueAccessor
 * @param {!KnockoutAllBindingsAccessor} allBindingsAccessor
 * @param {?} viewModel
 * @param {!KnockoutBindingContext} bindingContext
 * @return {!KnockoutControlsDescendantBindings}
 */
ProgressKnockoutBindingHandler.prototype.init = function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {};
/**
 * @record
 * @struct
 */
function KnockstrapProgressDefaults() {}
 /** @type {string} */
KnockstrapProgressDefaults.prototype.css;
 /** @type {string} */
KnockstrapProgressDefaults.prototype.text;
 /** @type {boolean} */
KnockstrapProgressDefaults.prototype.textHidden;
 /** @type {boolean} */
KnockstrapProgressDefaults.prototype.striped;
 /** @type {string} */
KnockstrapProgressDefaults.prototype.type;
 /** @type {boolean} */
KnockstrapProgressDefaults.prototype.animated;
