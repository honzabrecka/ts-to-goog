/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/notify/index.d.ts:
/** @const */
var Notify = {};
/**
 * @record
 * @struct
 */
Notify.Options = function() {};
 /** @type {boolean} */
Notify.Options.prototype.clickToHide;
 /** @type {boolean} */
Notify.Options.prototype.autoHide;
 /** @type {number} */
Notify.Options.prototype.autoHideDelay;
 /** @type {boolean} */
Notify.Options.prototype.arrowShow;
 /** @type {number} */
Notify.Options.prototype.arrowSize;
 /** @type {string} */
Notify.Options.prototype.elementPosition;
 /** @type {string} */
Notify.Options.prototype.globalPosition;
 /** @type {string} */
Notify.Options.prototype.style;
 /** @type {string} */
Notify.Options.prototype.className;
 /** @type {string} */
Notify.Options.prototype.showAnimation;
 /** @type {number} */
Notify.Options.prototype.showDuration;
 /** @type {string} */
Notify.Options.prototype.hideAnimation;
 /** @type {number} */
Notify.Options.prototype.hideDuration;
 /** @type {number} */
Notify.Options.prototype.gap;
/**
 * @record
 * @struct
 */
Notify.ClassCSS = function() {};

/* TODO: IndexSignature: Notify */
/**
 * @record
 * @struct
 */
Notify.StyleDefinition = function() {};
 /** @type {string} */
Notify.StyleDefinition.prototype.html;
 /** @type {?} */
Notify.StyleDefinition.prototype.classes;
 /** @type {string} */
Notify.StyleDefinition.prototype.css;
/**
 * @record
 * @struct
 */
Notify.JQueryStatic = function() {};

/* TODO: CallSignature: Notify */

/* TODO: CallSignature: Notify */

/* TODO: CallSignature: Notify */

/* TODO: CallSignature: Notify */

/* TODO: CallSignature: Notify */

/* TODO: CallSignature: Notify */

/* TODO: CallSignature: Notify */

/* TODO: CallSignature: Notify */

/**
 * Define a style for Notify to use.
 * @param {string} styleName
 * @param {!Notify.StyleDefinition} styleDefinition
 * @return {void}
 */
Notify.JQueryStatic.prototype.addStyle = function(styleName, styleDefinition) {};

/**
 * Specify the default options for all notifications.
 * @param {!Notify.Options} options
 * @return {void}
 */
Notify.JQueryStatic.prototype.defaults = function(options) {};
 /** @type {!Notify.JQueryStatic} */
JQueryStatic.prototype.notify;

/**
 * Create a notification positioned relative to the currently selected element.
 * @param {string|?} text_or_data
 * @param {string|!Notify.Options=} className_or_options
 * @return {void}
 */
JQuery.prototype.notify = function(text_or_data, className_or_options) {};
