/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/passport-google-oauth/index.d.ts:

/* TODO: ImportEqualsDeclaration in  */

/* TODO: ImportEqualsDeclaration in  */
/**
 * @extends {passport.Profile}
 * @record
 * @struct
 */
function Profile() {}
 /** @type {string} */
Profile.prototype.gender;
 /** @type {string} */
Profile.prototype._raw;
 /** @type {?} */
Profile.prototype._json;
/**
 * @record
 * @struct
 */
function IOAuthStrategyOption() {}
 /** @type {string} */
IOAuthStrategyOption.prototype.consumerKey;
 /** @type {string} */
IOAuthStrategyOption.prototype.consumerSecret;
 /** @type {string} */
IOAuthStrategyOption.prototype.callbackURL;
 /** @type {string} */
IOAuthStrategyOption.prototype.requestTokenURL;
 /** @type {string} */
IOAuthStrategyOption.prototype.accessTokenURL;
 /** @type {string} */
IOAuthStrategyOption.prototype.userAuthorizationURL;
 /** @type {string} */
IOAuthStrategyOption.prototype.sessionKey;
/**
 * @record
 * @struct
 */
function VerifyOptions() {}
 /** @type {string} */
VerifyOptions.prototype.message;
/**
 * @record
 * @struct
 */
function VerifyFunction() {}

/* TODO: CallSignature:  */

/**
 * @constructor
 * @struct
 * @param {?} options
 * @param {function(string, string, ?, ?): void} verify
 */
function OAuthStrategy(options, verify) {}
 /** @type {string} */
OAuthStrategy.prototype.name;
 /** @type {function(!e.Request, !Object): void} */
OAuthStrategy.prototype.authenticate;
/**
 * @record
 * @struct
 */
function IOAuth2StrategyOption() {}
 /** @type {string} */
IOAuth2StrategyOption.prototype.clientID;
 /** @type {string} */
IOAuth2StrategyOption.prototype.clientSecret;
 /** @type {string} */
IOAuth2StrategyOption.prototype.callbackURL;
 /** @type {string} */
IOAuth2StrategyOption.prototype.authorizationURL;
 /** @type {string} */
IOAuth2StrategyOption.prototype.tokenURL;
 /** @type {string} */
IOAuth2StrategyOption.prototype.accessType;
 /** @type {string} */
IOAuth2StrategyOption.prototype.approval_prompt;
 /** @type {string} */
IOAuth2StrategyOption.prototype.prompt;
 /** @type {string} */
IOAuth2StrategyOption.prototype.loginHint;
 /** @type {string} */
IOAuth2StrategyOption.prototype.userID;
 /** @type {string} */
IOAuth2StrategyOption.prototype.hostedDomain;
 /** @type {string} */
IOAuth2StrategyOption.prototype.display;
 /** @type {string} */
IOAuth2StrategyOption.prototype.requestVisibleActions;
 /** @type {string} */
IOAuth2StrategyOption.prototype.openIDRealm;
/**
 * @extends {IOAuth2StrategyOption}
 * @record
 * @struct
 */
function IOAuth2StrategyOptionWithRequest() {}
 /** @type {boolean} */
IOAuth2StrategyOptionWithRequest.prototype.passReqToCallback;

/**
 * @constructor
 * @struct
 * @param {?} options
 * @param {function(string, string, ?, function(?, ?): void): void|function(!e.Request, string, string, ?, function(?, ?): void): void} verify
 */
function OAuth2Strategy(options, verify) {}
 /** @type {string} */
OAuth2Strategy.prototype.name;
 /** @type {function(!e.Request, !Object): void} */
OAuth2Strategy.prototype.authenticate;
