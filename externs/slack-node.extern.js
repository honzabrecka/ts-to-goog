/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/slack-node/index.d.ts:

/* TODO: ImportDeclaration in  */

/**
 * @constructor
 * @struct
 * @param {string=} token
 * @param {string=} domain
 */
function Slack(token, domain) {}
 /** @type {string} */
Slack.prototype.token;
 /** @type {string} */
Slack.prototype.domain;
 /** @type {boolean} */
Slack.prototype.apiMode;
 /** @type {string} */
Slack.prototype.url;
 /** @type {number} */
Slack.prototype.timeout;
 /** @type {number} */
Slack.prototype.maxAttempts;

/**
 * @return {string}
 */
Slack.prototype.composeUrl = function() {};

/**
 * @param {string} url
 * @return {Slack}
 */
Slack.prototype.setWebhook = function(url) {};

/**
 * @param {string} emoji
 * @return {{key: string, val: string}}
 */
Slack.prototype.detectEmoji = function(emoji) {};

/**
 * @param {!Slack.WebhookOptions} options
 * @param {function(?, !Slack.WebhookResponse): void} callback
 * @return {void}
 */
Slack.prototype.webhook = function(options, callback) {};

/**
 * @param {string} method
 * @param {function(?, ?): void|?} callback_or_options
 * @param {function(?, ?): void=} callback
 * @return {Slack}
 */
Slack.prototype.api = function(method, callback_or_options, callback) {};
/**
 * @record
 * @struct
 */
Slack.WebhookOptions = function() {};
 /** @type {string} */
Slack.WebhookOptions.prototype.icon_emoji;
 /** @type {string} */
Slack.WebhookOptions.prototype.response_type;
 /** @type {string} */
Slack.WebhookOptions.prototype.channel;
 /** @type {string} */
Slack.WebhookOptions.prototype.text;
 /** @type {string} */
Slack.WebhookOptions.prototype.username;
 /** @type {!Array<?>} */
Slack.WebhookOptions.prototype.attachments;
 /** @type {?} */
Slack.WebhookOptions.prototype.link_names;
/**
 * @record
 * @struct
 */
Slack.WebhookResponse = function() {};
 /** @type {string} */
Slack.WebhookResponse.prototype.status;
 /** @type {number} */
Slack.WebhookResponse.prototype.statusCode;
 /** @type {?} */
Slack.WebhookResponse.prototype.headers;
 /** @type {?} */
Slack.WebhookResponse.prototype.response;

/* TODO: ExportAssignment in  */
