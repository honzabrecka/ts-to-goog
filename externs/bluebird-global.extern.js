/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/bluebird-global/index.d.ts:

/* TODO: ImportDeclaration in  */
 /** @type {function(): !Bluebird<!Array<U>>} */
Promise.prototype.all;
 /** @type {function(): !Bluebird<U>} */
Promise.prototype.any;
 /** @type {?} */
Promise.prototype.asCallback;
 /** @type {function(?): !Bluebird<?>} */
Promise.prototype.bind;
 /** @type {function(string, !Array<?>): !Bluebird<?>} */
Promise.prototype.call;
 /** @type {function(): void} */
Promise.prototype.cancel;
 /** @type {?} */
Promise.prototype.caught;
 /** @type {function(number): !Bluebird<?>} */
Promise.prototype.delay;
 /** @type {function(function(?, !Bluebird<?>): (void|!PromiseLike<void>)): !Bluebird.Disposer<?>} */
Promise.prototype.disposer;
 /** @type {function(function(?): (U|!PromiseLike<U>), function(?): (U|!PromiseLike<U>)): void} */
Promise.prototype.done;
 /** @type {function(function(R, number, number): (U|!PromiseLike<U>)): !Bluebird<!Array<R>>} */
Promise.prototype.each;
 /** @type {function(function(?): (U|!PromiseLike<U>)): !Bluebird<U>} */
Promise.prototype.error;
 /** @type {function(function(U, number, number): (boolean|!PromiseLike<boolean>), !Bluebird.ConcurrencyOption): !Bluebird<!Array<U>>} */
Promise.prototype.filter;
 /** @type {function(function(): (U|!PromiseLike<U>)): !Bluebird<?>} */
Promise.prototype.finally;
 /** @type {function((string|number)): !Bluebird<U>} */
Promise.prototype.get;
 /** @type {function(): boolean} */
Promise.prototype.isCancelled;
 /** @type {function(): boolean} */
Promise.prototype.isFulfilled;
 /** @type {function(): boolean} */
Promise.prototype.isPending;
 /** @type {function(): boolean} */
Promise.prototype.isRejected;
 /** @type {function(): boolean} */
Promise.prototype.isResolved;
 /** @type {function(function(): (U|!PromiseLike<U>)): !Bluebird<?>} */
Promise.prototype.lastly;
 /** @type {function(function(Q, number, number): (U|!PromiseLike<U>), !Bluebird.ConcurrencyOption): !Bluebird<!Array<U>>} */
Promise.prototype.map;
 /** @type {function(function(R, number, number): (U|!PromiseLike<U>)): !Bluebird<!Array<U>>} */
Promise.prototype.mapSeries;
 /** @type {?} */
Promise.prototype.nodeify;
 /** @type {?} */
Promise.prototype.props;
 /** @type {function(): !Bluebird<U>} */
Promise.prototype.race;
 /** @type {function(): ?} */
Promise.prototype.reason;
 /** @type {function(function(U, Q, number, number): (U|!PromiseLike<U>), U): !Bluebird<U>} */
Promise.prototype.reduce;
 /** @type {?} */
Promise.prototype.reflect;
 /** @type {?} */
Promise.prototype.return;
 /** @type {function(number): !Bluebird<!Array<U>>} */
Promise.prototype.some;
 /** @type {?} */
Promise.prototype.spread;
 /** @type {function(): void} */
Promise.prototype.suppressUnhandledRejections;
 /** @type {?} */
Promise.prototype.tap;
 /** @type {?} */
Promise.prototype.tapCatch;
 /** @type {?} */
Promise.prototype.thenReturn;
 /** @type {function(!Error): !Bluebird<?>} */
Promise.prototype.thenThrow;
 /** @type {?} */
Promise.prototype.catchReturn;
 /** @type {?} */
Promise.prototype.catchThrow;
 /** @type {function(!Error): !Bluebird<?>} */
Promise.prototype.throw;
 /** @type {function(number, (string|!Error)): !Bluebird<?>} */
Promise.prototype.timeout;
 /** @type {function(): !Object} */
Promise.prototype.toJSON;
 /** @type {function(): string} */
Promise.prototype.toString;
 /** @type {function(): ?} */
Promise.prototype.value;

/**
 * @template TResult, TResult1, TResult2
 * @param {function(T): (T|!PromiseLike<T>)|function(T): (TResult|!PromiseLike<TResult>)|function(T): (TResult1|!PromiseLike<TResult1>)=} onfulfilled
 * @param {function(?): (T|!PromiseLike<T>)|function(?): (TResult|!PromiseLike<TResult>)|function(?): (TResult2|!PromiseLike<TResult2>)=} onrejected
 * @return {!Promise|!Promise<(T|TResult)>|!Promise<TResult>|!Promise<(TResult1|TResult2)>}
 */
Promise.prototype.then = function(onfulfilled, onrejected) {};

/**
 * @template TResult, U, E
 * @param {function(?): (T|!PromiseLike<T>)|function(?): (TResult|!PromiseLike<TResult>)|function(?): boolean|function(new: (E), !Array<?>): ?|!Object=} onrejected_or_predicate_or_ErrorClass
 * @param {function(?): (void|!PromiseLike<void>|T|!PromiseLike<T>)|function(?): (U|!PromiseLike<U>)|function(E): (void|!PromiseLike<void>|T|!PromiseLike<T>)|function(E): (U|!PromiseLike<U>)=} onReject
 * @return {!Promise|!Promise<(T|TResult)>|!Bluebird<T>|!Bluebird<(T|U)>}
 */
Promise.prototype.catch = function(onrejected_or_predicate_or_ErrorClass, onReject) {};

/* TODO: ConstructSignature:  */
 /** @type {function((!Array<(R|!PromiseLike<R>)>|!PromiseLike<!Array<(R|!PromiseLike<R>)>>)): !Bluebird<R>} */
PromiseConstructor.prototype.any;
 /** @type {function(function(): (R|!PromiseLike<R>)): !Bluebird<R>} */
PromiseConstructor.prototype.attempt;
 /** @type {function(?): !Bluebird<void>} */
PromiseConstructor.prototype.bind;
 /** @type {function((R|!PromiseLike<R>)): !Bluebird<R>} */
PromiseConstructor.prototype.cast;
 /** @type {function({warnings: (boolean|{wForgottenReturn: boolean}), longStackTraces: boolean, cancellation: boolean, monitoring: boolean}): void} */
PromiseConstructor.prototype.config;
 /** @type {function(!Function): !Function} */
PromiseConstructor.prototype.coroutine;
 /** @type {function(): !Bluebird.Resolver<R>} */
PromiseConstructor.prototype.defer;
 /** @type {?} */
PromiseConstructor.prototype.delay;
 /** @type {?} */
PromiseConstructor.prototype.each;
 /** @type {?} */
PromiseConstructor.prototype.filter;
 /** @type {?} */
PromiseConstructor.prototype.fromCallback;
 /** @type {?} */
PromiseConstructor.prototype.fromNode;
 /** @type {function(?): boolean} */
PromiseConstructor.prototype.is;
 /** @type {?} */
PromiseConstructor.prototype.join;
 /** @type {function(): void} */
PromiseConstructor.prototype.longStackTraces;
 /** @type {?} */
PromiseConstructor.prototype.map;
 /** @type {function((!Array<(R|!PromiseLike<R>)>|!PromiseLike<!Array<(R|!PromiseLike<R>)>>), function(R, number, number): (U|!PromiseLike<U>)): !Bluebird<!Array<U>>} */
PromiseConstructor.prototype.mapSeries;
 /** @type {function(!Function): !Function} */
PromiseConstructor.prototype.method;
 /** @type {?} */
PromiseConstructor.prototype.onPossiblyUnhandledRejection;
 /** @type {?} */
PromiseConstructor.prototype.promisify;
 /** @type {function(!Object, !Bluebird.PromisifyAllOptions): !Object} */
PromiseConstructor.prototype.promisifyAll;
 /** @type {?} */
PromiseConstructor.prototype.props;
 /** @type {?} */
PromiseConstructor.prototype.reduce;
 /** @type {?} */
PromiseConstructor.prototype.some;
 /** @type {function(function(): (R|!PromiseLike<R>)): !Bluebird<R>} */
PromiseConstructor.prototype.try;
 /** @type {?} */
PromiseConstructor.prototype.using;

/**
 * @template T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T
 * @param {!Array<?>|!Array<(T|!PromiseLike<T>)>} values
 * @return {!Promise<!Array<?>>|!Promise<!Array<T>>}
 */
PromiseConstructor.prototype.all = function(values) {};

/**
 * @template T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T
 * @param {!Array<?>|!Array<(T|!PromiseLike<T>)>} values
 * @return {!Promise<(T1|T2|T3|T4|T5|T6|T7|T8|T9|T10)>|!Promise<(T1|T2|T3|T4|T5|T6|T7|T8|T9)>|!Promise<(T1|T2|T3|T4|T5|T6|T7|T8)>|!Promise<(T1|T2|T3|T4|T5|T6|T7)>|!Promise<(T1|T2|T3|T4|T5|T6)>|!Promise<(T1|T2|T3|T4|T5)>|!Promise<(T1|T2|T3|T4)>|!Promise<(T1|T2|T3)>|!Promise<(T1|T2)>|!Promise<T>}
 */
PromiseConstructor.prototype.race = function(values) {};

/**
 * @template T
 * @param {?} reason
 * @return {!Promise<?>|!Promise<T>}
 */
PromiseConstructor.prototype.reject = function(reason) {};

/**
 * @template T
 * @param {(T|!PromiseLike<T>)=} value
 * @return {!Promise<T>|!Promise<void>}
 */
PromiseConstructor.prototype.resolve = function(value) {};
 /** @type {!PromiseConstructor} */
var Promise;
