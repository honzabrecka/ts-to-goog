/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/images/index.d.ts:
/** @const */
var images = {};
/**
 * @record
 * @struct
 */
images.ImagesConfig = function() {};

/* TODO: IndexSignature: images */

/** @typedef {string} */
images.SupportType;
/**
 * @constructor
 * @struct
 */
images.ImagesStatic = function() {};

/**
 * @param {number} red
 * @param {number} green
 * @param {number} blue
 * @param {number=} alpha
 * @return {!images.ImagesStatic}
 */
images.ImagesStatic.prototype.fill = function(red, green, blue, alpha) {};

/**
 * @param {!images.ImagesStatic} image
 * @param {number} x
 * @param {number} y
 * @return {!images.ImagesStatic}
 */
images.ImagesStatic.prototype.draw = function(image, x, y) {};

/**
 * @param {?} buffer
 * @return {!images.ImagesStatic}
 */
images.ImagesStatic.prototype.loadFromBuffer = function(buffer) {};

/**
 * @param {string} type
 * @param {!images.ImagesConfig=} config
 * @return {void}
 */
images.ImagesStatic.prototype.encode = function(type, config) {};

/**
 * @param {string} file
 * @param {string|!images.ImagesConfig=} type_or_config
 * @param {!images.ImagesConfig=} config
 * @return {void}
 */
images.ImagesStatic.prototype.save = function(file, type_or_config, config) {};

/**
 * @param {number=} width
 * @param {number=} height
 * @return {{width: number, height: number}|!images.ImagesStatic}
 */
images.ImagesStatic.prototype.size = function(width, height) {};

/**
 * @param {number} width
 * @param {number=} height
 * @param {string=} filter
 * @return {!images.ImagesStatic}
 */
images.ImagesStatic.prototype.resize = function(width, height, filter) {};

/**
 * @param {number=} width
 * @return {number|!images.ImagesStatic}
 */
images.ImagesStatic.prototype.width = function(width) {};

/**
 * @param {number=} height
 * @return {number|!images.ImagesStatic}
 */
images.ImagesStatic.prototype.height = function(height) {};

/**
 * @param {number} width
 * @param {number} height
 * @return {void}
 */
images.ImagesStatic.prototype.setLimit = function(width, height) {};

/**
 * @param {number} value
 * @return {void}
 */
images.ImagesStatic.prototype.setGCThreshold = function(value) {};

/**
 * @return {void}
 */
images.ImagesStatic.prototype.getUsedMemory = function() {};

/**
 * @return {void}
 */
images.ImagesStatic.prototype.gc = function() {};

/**
 * @param {string|number|?|!images.ImagesStatic} file_or_width_or_buffer_or_image
 * @param {number=} height_or_start_or_x
 * @param {number=} end_or_y
 * @param {number=} width
 * @param {number=} height
 * @return {!images.ImagesStatic}
 */
function images(file_or_width_or_buffer_or_image, height_or_start_or_x, end_or_y, width, height) {}

/* TODO: ExportAssignment in  */
