/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/google.visualization/index.d.ts:
/** @const */
var google = {};

/**
 * @param {string} visualization
 * @param {string} version
 * @param {?} packages
 * @return {void}
 */
google.load = function(visualization, version, packages) {};

/**
 * @param {!Function|function(): void} handler
 * @return {void}
 */
google.setOnLoadCallback = function(handler) {};
/** @const */
google.charts = {};

/**
 * @param {string} version
 * @param {!Object} packages
 * @return {void}
 */
google.charts.load = function(version, packages) {};

/**
 * @param {!Function} handler
 * @return {void}
 */
google.charts.setOnLoadCallback = function(handler) {};
/** @const */
google.visualization = {};
/**
 * @record
 * @struct
 */
google.visualization.ChartSpecs = function() {};
 /** @type {string} */
google.visualization.ChartSpecs.prototype.chartType;
 /** @type {string} */
google.visualization.ChartSpecs.prototype.containerId;
 /** @type {!Object} */
google.visualization.ChartSpecs.prototype.options;
 /** @type {!Object} */
google.visualization.ChartSpecs.prototype.dataTable;
 /** @type {string} */
google.visualization.ChartSpecs.prototype.dataSourceUrl;
 /** @type {string} */
google.visualization.ChartSpecs.prototype.query;
 /** @type {number} */
google.visualization.ChartSpecs.prototype.refreshInterval;
 /** @type {?} */
google.visualization.ChartSpecs.prototype.view;
/**
 * @record
 * @struct
 */
google.visualization.ErrorEventObject = function() {};
 /** @type {string} */
google.visualization.ErrorEventObject.prototype.id;
 /** @type {string} */
google.visualization.ErrorEventObject.prototype.message;
 /** @type {string} */
google.visualization.ErrorEventObject.prototype.detailedMessage;
 /** @type {?} */
google.visualization.ErrorEventObject.prototype.options;

/**
 * @constructor
 * @struct
 * @param {!google.visualization.ChartSpecs=} spec
 */
google.visualization.ChartWrapper = function(spec) {};

/**
 * @param {!HTMLElement=} container_ref
 * @return {void}
 */
google.visualization.ChartWrapper.prototype.draw = function(container_ref) {};

/**
 * @return {string}
 */
google.visualization.ChartWrapper.prototype.toJSON = function() {};

/**
 * @return {!google.visualization.ChartWrapper}
 */
google.visualization.ChartWrapper.prototype.clone = function() {};

/**
 * @return {string}
 */
google.visualization.ChartWrapper.prototype.getDataSourceUrl = function() {};

/**
 * @return {!google.visualization.DataTable}
 */
google.visualization.ChartWrapper.prototype.getDataTable = function() {};

/**
 * @return {string}
 */
google.visualization.ChartWrapper.prototype.getChartType = function() {};

/**
 * @return {string}
 */
google.visualization.ChartWrapper.prototype.getChartName = function() {};

/**
 * @return {?}
 */
google.visualization.ChartWrapper.prototype.getChart = function() {};

/**
 * @return {string}
 */
google.visualization.ChartWrapper.prototype.getContainerId = function() {};

/**
 * @return {string}
 */
google.visualization.ChartWrapper.prototype.getQuery = function() {};

/**
 * @return {number}
 */
google.visualization.ChartWrapper.prototype.getRefreshInterval = function() {};

/**
 * @param {string} key
 * @param {string=} default_val
 * @return {?}
 */
google.visualization.ChartWrapper.prototype.getOption = function(key, default_val) {};

/**
 * @return {!Object}
 */
google.visualization.ChartWrapper.prototype.getOptions = function() {};

/**
 * @return {?}
 */
google.visualization.ChartWrapper.prototype.getView = function() {};

/**
 * @param {string} url
 * @return {void}
 */
google.visualization.ChartWrapper.prototype.setDataSourceUrl = function(url) {};

/**
 * @param {!google.visualization.DataTable} table
 * @return {void}
 */
google.visualization.ChartWrapper.prototype.setDataTable = function(table) {};

/**
 * @param {string} type
 * @return {void}
 */
google.visualization.ChartWrapper.prototype.setChartType = function(type) {};

/**
 * @param {string} name
 * @return {void}
 */
google.visualization.ChartWrapper.prototype.setChartName = function(name) {};

/**
 * @param {string} id
 * @return {void}
 */
google.visualization.ChartWrapper.prototype.setContainerId = function(id) {};

/**
 * @param {string} query
 * @return {void}
 */
google.visualization.ChartWrapper.prototype.setQuery = function(query) {};

/**
 * @param {number} interval
 * @return {void}
 */
google.visualization.ChartWrapper.prototype.setRefreshInterval = function(interval) {};

/**
 * @param {string} key
 * @param {?} value
 * @return {void}
 */
google.visualization.ChartWrapper.prototype.setOption = function(key, value) {};

/**
 * @param {!Object} options
 * @return {void}
 */
google.visualization.ChartWrapper.prototype.setOptions = function(options) {};

/**
 * @param {string} view_spec
 * @return {void}
 */
google.visualization.ChartWrapper.prototype.setView = function(view_spec) {};

/**
 * @constructor
 * @struct
 * @param {?=} data
 * @param {?=} version
 */
google.visualization.DataTable = function(data, version) {};

/**
 * @param {string|!google.visualization.DataTableColumnDescription} type_or_descriptionObject
 * @param {string=} label
 * @param {string=} id
 * @return {number}
 */
google.visualization.DataTable.prototype.addColumn = function(type_or_descriptionObject, label, id) {};

/**
 * @param {!google.visualization.DataObjectCell|!Array<?>=} cellObject_or_cellArray
 * @return {number}
 */
google.visualization.DataTable.prototype.addRow = function(cellObject_or_cellArray) {};

/**
 * @param {number|!Array<!Array<!google.visualization.DataObjectCell>>|!Array<!Array<?>>} numberOfEmptyRows_or_rows
 * @return {number}
 */
google.visualization.DataTable.prototype.addRows = function(numberOfEmptyRows_or_rows) {};

/**
 * @return {!google.visualization.DataTable}
 */
google.visualization.DataTable.prototype.clone = function() {};

/**
 * @param {number} columnIndex
 * @return {string}
 */
google.visualization.DataTable.prototype.getColumnId = function(columnIndex) {};

/**
 * @param {number} columnIndex
 * @return {string}
 */
google.visualization.DataTable.prototype.getColumnLabel = function(columnIndex) {};

/**
 * @param {number} columnIndex
 * @return {string}
 */
google.visualization.DataTable.prototype.getColumnPattern = function(columnIndex) {};

/**
 * @param {number} columnIndex
 * @return {!google.visualization.Properties}
 */
google.visualization.DataTable.prototype.getColumnProperties = function(columnIndex) {};

/**
 * @param {number} columnIndex
 * @param {string} name
 * @return {?}
 */
google.visualization.DataTable.prototype.getColumnProperty = function(columnIndex, name) {};

/**
 * @param {number} columnIndex
 * @return {{min: ?, max: ?}}
 */
google.visualization.DataTable.prototype.getColumnRange = function(columnIndex) {};

/**
 * @param {string} columnIndex
 * @return {string}
 */
google.visualization.DataTable.prototype.getColumnRole = function(columnIndex) {};

/**
 * @param {number} columnIndex
 * @return {string}
 */
google.visualization.DataTable.prototype.getColumnType = function(columnIndex) {};

/**
 * @param {number} columnIndex
 * @return {!Array<?>}
 */
google.visualization.DataTable.prototype.getDistinctValues = function(columnIndex) {};

/**
 * @param {!Array<!google.visualization.DataTableCellFilter>} filters
 * @return {!Array<number>}
 */
google.visualization.DataTable.prototype.getFilteredRows = function(filters) {};

/**
 * @param {number} rowIndex
 * @param {number} columnIndex
 * @return {string}
 */
google.visualization.DataTable.prototype.getFormattedValue = function(rowIndex, columnIndex) {};

/**
 * @return {number}
 */
google.visualization.DataTable.prototype.getNumberOfColumns = function() {};

/**
 * @return {number}
 */
google.visualization.DataTable.prototype.getNumberOfRows = function() {};

/**
 * @param {number} rowIndex
 * @param {number} columnIndex
 * @param {string} name
 * @return {?}
 */
google.visualization.DataTable.prototype.getProperty = function(rowIndex, columnIndex, name) {};

/**
 * @param {number} rowIndex
 * @param {number} columnIndex
 * @return {!google.visualization.Properties}
 */
google.visualization.DataTable.prototype.getProperties = function(rowIndex, columnIndex) {};

/**
 * @param {number} rowIndex
 * @return {!google.visualization.Properties}
 */
google.visualization.DataTable.prototype.getRowProperties = function(rowIndex) {};

/**
 * @param {number} rowIndex
 * @param {string} name
 * @return {!google.visualization.Properties}
 */
google.visualization.DataTable.prototype.getRowProperty = function(rowIndex, name) {};

/**
 * @param {number|!google.visualization.SortByColumn|!Array<number>|!Array<!google.visualization.SortByColumn>} sortColumn_or_sortColumns
 * @return {!Array<number>}
 */
google.visualization.DataTable.prototype.getSortedRows = function(sortColumn_or_sortColumns) {};

/**
 * @return {!google.visualization.Properties}
 */
google.visualization.DataTable.prototype.getTableProperties = function() {};

/**
 * @param {string} name
 * @return {?}
 */
google.visualization.DataTable.prototype.getTableProperty = function(name) {};

/**
 * @param {number} rowIndex
 * @param {number} columnIndex
 * @return {?}
 */
google.visualization.DataTable.prototype.getValue = function(rowIndex, columnIndex) {};

/**
 * @param {number} columnIndex
 * @param {string} type
 * @param {string=} label
 * @param {string=} id
 * @return {void}
 */
google.visualization.DataTable.prototype.insertColumn = function(columnIndex, type, label, id) {};

/**
 * @param {number} rowIndex
 * @param {number|!Array<!Array<!google.visualization.DataObjectCell>>|!Array<!Array<?>>} numberOfEmptyRows_or_rows
 * @return {void}
 */
google.visualization.DataTable.prototype.insertRows = function(rowIndex, numberOfEmptyRows_or_rows) {};

/**
 * @param {number} columnIndex
 * @return {void}
 */
google.visualization.DataTable.prototype.removeColumn = function(columnIndex) {};

/**
 * @param {number} columnIndex
 * @param {number} numberOfColumns
 * @return {void}
 */
google.visualization.DataTable.prototype.removeColumns = function(columnIndex, numberOfColumns) {};

/**
 * @param {number} rowIndex
 * @return {void}
 */
google.visualization.DataTable.prototype.removeRow = function(rowIndex) {};

/**
 * @param {number} rowIndex
 * @param {number} numberOfRows
 * @return {void}
 */
google.visualization.DataTable.prototype.removeRows = function(rowIndex, numberOfRows) {};

/**
 * @param {number} rowIndex
 * @param {number} columnIndex
 * @param {?=} value
 * @param {string=} formattedValue
 * @param {!google.visualization.Properties=} properties
 * @return {void}
 */
google.visualization.DataTable.prototype.setCell = function(rowIndex, columnIndex, value, formattedValue, properties) {};

/**
 * @param {number} columnIndex
 * @param {string} label
 * @return {void}
 */
google.visualization.DataTable.prototype.setColumnLabel = function(columnIndex, label) {};

/**
 * @param {number} columnIndex
 * @param {string} name
 * @param {?} value
 * @return {void}
 */
google.visualization.DataTable.prototype.setColumnProperty = function(columnIndex, name, value) {};

/**
 * @param {number} columnIndex
 * @param {!google.visualization.Properties} properties
 * @return {void}
 */
google.visualization.DataTable.prototype.setColumnProperties = function(columnIndex, properties) {};

/**
 * @param {number} rowIndex
 * @param {number} columnIndex
 * @param {string} formattedValue
 * @return {void}
 */
google.visualization.DataTable.prototype.setFormattedValue = function(rowIndex, columnIndex, formattedValue) {};

/**
 * @param {number} rowIndex
 * @param {number} columnIndex
 * @param {string} name
 * @param {?} value
 * @return {void}
 */
google.visualization.DataTable.prototype.setProperty = function(rowIndex, columnIndex, name, value) {};

/**
 * @param {number} rowIndex
 * @param {number} columnIndex
 * @param {!google.visualization.Properties} properties
 * @return {void}
 */
google.visualization.DataTable.prototype.setProperties = function(rowIndex, columnIndex, properties) {};

/**
 * @param {number} rowIndex
 * @param {string} name
 * @param {?} value
 * @return {void}
 */
google.visualization.DataTable.prototype.setRowProperty = function(rowIndex, name, value) {};

/**
 * @param {number} rowIndex
 * @param {!google.visualization.Properties} properties
 * @return {void}
 */
google.visualization.DataTable.prototype.setRowProperties = function(rowIndex, properties) {};

/**
 * @param {string} name
 * @param {?} value
 * @return {void}
 */
google.visualization.DataTable.prototype.setTableProperty = function(name, value) {};

/**
 * @param {!google.visualization.Properties} properties
 * @return {void}
 */
google.visualization.DataTable.prototype.setTableProperties = function(properties) {};

/**
 * @param {number} rowIndex
 * @param {number} columnIndex
 * @param {?} value
 * @return {void}
 */
google.visualization.DataTable.prototype.setValue = function(rowIndex, columnIndex, value) {};

/**
 * @param {number|!google.visualization.SortByColumn|!Array<number>|!Array<!google.visualization.SortByColumn>} sortColumn_or_sortColumns
 * @return {!Array<number>}
 */
google.visualization.DataTable.prototype.sort = function(sortColumn_or_sortColumns) {};

/**
 * @return {string}
 */
google.visualization.DataTable.prototype.toJSON = function() {};
/**
 * @record
 * @struct
 */
google.visualization.Properties = function() {};

/* TODO: IndexSignature: google.visualization */
/**
 * @record
 * @struct
 */
google.visualization.SortByColumn = function() {};
 /** @type {number} */
google.visualization.SortByColumn.prototype.column;
 /** @type {boolean} */
google.visualization.SortByColumn.prototype.desc;
/**
 * @record
 * @struct
 */
google.visualization.DataTableColumnDescription = function() {};
 /** @type {string} */
google.visualization.DataTableColumnDescription.prototype.type;
 /** @type {string} */
google.visualization.DataTableColumnDescription.prototype.label;
 /** @type {string} */
google.visualization.DataTableColumnDescription.prototype.id;
 /** @type {string} */
google.visualization.DataTableColumnDescription.prototype.role;
 /** @type {string} */
google.visualization.DataTableColumnDescription.prototype.pattern;
 /** @type {?} */
google.visualization.DataTableColumnDescription.prototype.p;
/**
 * @record
 * @struct
 */
google.visualization.DataObject = function() {};
 /** @type {!Array<!google.visualization.DataObjectColumn>} */
google.visualization.DataObject.prototype.cols;
 /** @type {!Array<!google.visualization.DataObjectRow>} */
google.visualization.DataObject.prototype.rows;
 /** @type {?} */
google.visualization.DataObject.prototype.p;
/**
 * @record
 * @struct
 */
google.visualization.DataObjectColumn = function() {};
 /** @type {string} */
google.visualization.DataObjectColumn.prototype.type;
 /** @type {string} */
google.visualization.DataObjectColumn.prototype.id;
 /** @type {string} */
google.visualization.DataObjectColumn.prototype.label;
 /** @type {string} */
google.visualization.DataObjectColumn.prototype.pattern;
 /** @type {?} */
google.visualization.DataObjectColumn.prototype.p;
/**
 * @record
 * @struct
 */
google.visualization.DataObjectRow = function() {};
 /** @type {!Array<!google.visualization.DataObjectCell>} */
google.visualization.DataObjectRow.prototype.c;
 /** @type {?} */
google.visualization.DataObjectRow.prototype.p;
/**
 * @record
 * @struct
 */
google.visualization.DataTableCellFilter = function() {};
 /** @type {number} */
google.visualization.DataTableCellFilter.prototype.column;
 /** @type {?} */
google.visualization.DataTableCellFilter.prototype.value;
 /** @type {?} */
google.visualization.DataTableCellFilter.prototype.minValue;
 /** @type {?} */
google.visualization.DataTableCellFilter.prototype.maxValue;
/**
 * @record
 * @struct
 */
google.visualization.DataObjectCell = function() {};
 /** @type {?} */
google.visualization.DataObjectCell.prototype.v;
 /** @type {string} */
google.visualization.DataObjectCell.prototype.f;
 /** @type {?} */
google.visualization.DataObjectCell.prototype.p;
/**
 * @extends {google.visualization.DataTableCellFilter}
 * @record
 * @struct
 */
google.visualization.DataTableCellValueFilter = function() {};
 /** @type {?} */
google.visualization.DataTableCellValueFilter.prototype.value;
/**
 * @extends {google.visualization.DataTableCellFilter}
 * @record
 * @struct
 */
google.visualization.DataTableCellRangeFilter = function() {};
 /** @type {?} */
google.visualization.DataTableCellRangeFilter.prototype.minValue;
 /** @type {?} */
google.visualization.DataTableCellRangeFilter.prototype.maxValue;

/**
 * @param {!Array<?>} data
 * @param {boolean=} firstRowIsData
 * @return {!google.visualization.DataTable}
 */
google.visualization.arrayToDataTable = function(data, firstRowIsData) {};

/**
 * @constructor
 * @struct
 * @param {string} dataSourceUrl
 * @param {!google.visualization.QueryOptions=} options
 */
google.visualization.Query = function(dataSourceUrl, options) {};

/**
 * @return {void}
 */
google.visualization.Query.prototype.abort = function() {};

/**
 * @param {number} intervalSeconds
 * @return {void}
 */
google.visualization.Query.prototype.setRefreshInterval = function(intervalSeconds) {};

/**
 * @param {number} timeoutSeconds
 * @return {void}
 */
google.visualization.Query.prototype.setTimeout = function(timeoutSeconds) {};

/**
 * @param {string} queryString
 * @return {void}
 */
google.visualization.Query.prototype.setQuery = function(queryString) {};

/**
 * @param {function(!google.visualization.QueryResponse): void} callback
 * @return {void}
 */
google.visualization.Query.prototype.send = function(callback) {};
/**
 * @record
 * @struct
 */
google.visualization.QueryOptions = function() {};
 /** @type {string} */
google.visualization.QueryOptions.prototype.sendMethod;
 /** @type {!Object} */
google.visualization.QueryOptions.prototype.makeRequestParams;

/**
 * @constructor
 * @struct
 * @param {!Object} responseObject
 */
google.visualization.QueryResponse = function(responseObject) {};

/**
 * @return {!google.visualization.DataTable}
 */
google.visualization.QueryResponse.prototype.getDataTable = function() {};

/**
 * @return {string}
 */
google.visualization.QueryResponse.prototype.getDetailedMessage = function() {};

/**
 * @return {string}
 */
google.visualization.QueryResponse.prototype.getMessage = function() {};

/**
 * @return {!Array<string>}
 */
google.visualization.QueryResponse.prototype.getReasons = function() {};

/**
 * @return {boolean}
 */
google.visualization.QueryResponse.prototype.hasWarning = function() {};

/**
 * @return {boolean}
 */
google.visualization.QueryResponse.prototype.isError = function() {};

/**
 * @constructor
 * @struct
 * @param {!google.visualization.DataTable|!google.visualization.DataView} data
 */
google.visualization.DataView = function(data) {};

/**
 * @param {number} columnIndex
 * @return {!String}
 */
google.visualization.DataView.prototype.getColumnId = function(columnIndex) {};

/**
 * @param {number} columnIndex
 * @return {string}
 */
google.visualization.DataView.prototype.getColumnLabel = function(columnIndex) {};

/**
 * @param {number} columnIndex
 * @return {string}
 */
google.visualization.DataView.prototype.getColumnPattern = function(columnIndex) {};

/**
 * @param {number} columnIndex
 * @param {string} name
 * @return {?}
 */
google.visualization.DataView.prototype.getColumnProperty = function(columnIndex, name) {};

/**
 * @param {number} columnIndex
 * @return {{min: ?, max: ?}}
 */
google.visualization.DataView.prototype.getColumnRange = function(columnIndex) {};

/**
 * @param {number} columnIndex
 * @return {string}
 */
google.visualization.DataView.prototype.getColumnType = function(columnIndex) {};

/**
 * @param {number} columnIndex
 * @return {!Array<?>}
 */
google.visualization.DataView.prototype.getDistinctValues = function(columnIndex) {};

/**
 * @param {!Array<!google.visualization.DataTableCellFilter>} filters
 * @return {!Array<number>}
 */
google.visualization.DataView.prototype.getFilteredRows = function(filters) {};

/**
 * @param {number} rowIndex
 * @param {number} columnIndex
 * @return {string}
 */
google.visualization.DataView.prototype.getFormattedValue = function(rowIndex, columnIndex) {};

/**
 * @return {number}
 */
google.visualization.DataView.prototype.getNumberOfColumns = function() {};

/**
 * @return {number}
 */
google.visualization.DataView.prototype.getNumberOfRows = function() {};

/**
 * @param {number} rowIndex
 * @param {number} columnIndex
 * @param {string} name
 * @return {?}
 */
google.visualization.DataView.prototype.getProperty = function(rowIndex, columnIndex, name) {};

/**
 * @param {number} rowIndex
 * @param {number} columnIndex
 * @return {!google.visualization.Properties}
 */
google.visualization.DataView.prototype.getProperties = function(rowIndex, columnIndex) {};

/**
 * @param {number} rowIndex
 * @param {string} name
 * @return {!google.visualization.Properties}
 */
google.visualization.DataView.prototype.getRowProperty = function(rowIndex, name) {};

/**
 * @param {number|!google.visualization.SortByColumn|!Array<number>|!Array<!google.visualization.SortByColumn>} sortColumn_or_sortColumns
 * @return {!Array<number>}
 */
google.visualization.DataView.prototype.getSortedRows = function(sortColumn_or_sortColumns) {};

/**
 * @param {string} name
 * @return {?}
 */
google.visualization.DataView.prototype.getTableProperty = function(name) {};

/**
 * @param {number} rowIndex
 * @param {number} columnIndex
 * @return {?}
 */
google.visualization.DataView.prototype.getValue = function(rowIndex, columnIndex) {};

/**
 * @param {number} viewColumnIndex
 * @return {number}
 */
google.visualization.DataView.prototype.getTableColumnIndex = function(viewColumnIndex) {};

/**
 * @param {number} viewRowIndex
 * @return {number}
 */
google.visualization.DataView.prototype.getTableRowIndex = function(viewRowIndex) {};

/**
 * @param {number} tableColumnIndex
 * @return {number}
 */
google.visualization.DataView.prototype.getViewColumnIndex = function(tableColumnIndex) {};

/**
 * @return {!Array<number>}
 */
google.visualization.DataView.prototype.getViewColumns = function() {};

/**
 * @param {number} tableRowIndex
 * @return {number}
 */
google.visualization.DataView.prototype.getViewRowIndex = function(tableRowIndex) {};

/**
 * @return {!Array<number>}
 */
google.visualization.DataView.prototype.getViewRows = function() {};

/**
 * @param {!Array<number>} columnIndexes
 * @return {void}
 */
google.visualization.DataView.prototype.hideColumns = function(columnIndexes) {};

/**
 * @param {number|!Array<number>} min_or_rowIndexes
 * @param {number=} max
 * @return {void}
 */
google.visualization.DataView.prototype.hideRows = function(min_or_rowIndexes, max) {};

/**
 * @param {!Array<number>|!Array<!google.visualization.ColumnSpec>|!Array<?>} columnIndexes
 * @return {void}
 */
google.visualization.DataView.prototype.setColumns = function(columnIndexes) {};

/**
 * @param {number|!Array<number>} min_or_rowIndexes
 * @param {number=} max
 * @return {void}
 */
google.visualization.DataView.prototype.setRows = function(min_or_rowIndexes, max) {};

/**
 * @return {!google.visualization.DataTable}
 */
google.visualization.DataView.prototype.toDataTable = function() {};

/**
 * @return {string}
 */
google.visualization.DataView.prototype.toJSON = function() {};
/**
 * @record
 * @struct
 */
google.visualization.ColumnSpec = function() {};
 /** @type {function(!google.visualization.DataTable, number): ?} */
google.visualization.ColumnSpec.prototype.calc;
 /** @type {string} */
google.visualization.ColumnSpec.prototype.type;
 /** @type {string} */
google.visualization.ColumnSpec.prototype.label;
 /** @type {string} */
google.visualization.ColumnSpec.prototype.id;
 /** @type {number} */
google.visualization.ColumnSpec.prototype.sourceColumn;
 /** @type {!google.visualization.Properties} */
google.visualization.ColumnSpec.prototype.properties;
 /** @type {string} */
google.visualization.ColumnSpec.prototype.role;
/**
 * @extends {google.visualization.ChartBase}
 * @constructor
 * @struct
 */
google.visualization.GeoChart = function() {};

/**
 * @param {!google.visualization.DataTable} data
 * @param {!google.visualization.GeoChartOptions} options
 * @return {void}
 */
google.visualization.GeoChart.prototype.draw = function(data, options) {};
/**
 * @record
 * @struct
 */
google.visualization.GeoChartOptions = function() {};
 /** @type {?} */
google.visualization.GeoChartOptions.prototype.backgroundColor;
 /** @type {!google.visualization.ChartColorAxis} */
google.visualization.GeoChartOptions.prototype.colorAxis;
 /** @type {string} */
google.visualization.GeoChartOptions.prototype.datalessRegionColor;
 /** @type {string} */
google.visualization.GeoChartOptions.prototype.defaultColor;
 /** @type {string} */
google.visualization.GeoChartOptions.prototype.displayMode;
 /** @type {boolean} */
google.visualization.GeoChartOptions.prototype.enableRegionInteractivity;
 /** @type {number} */
google.visualization.GeoChartOptions.prototype.height;
 /** @type {boolean} */
google.visualization.GeoChartOptions.prototype.keepAspectRatio;
 /** @type {!google.visualization.ChartLegend} */
google.visualization.GeoChartOptions.prototype.legend;
 /** @type {string} */
google.visualization.GeoChartOptions.prototype.region;
 /** @type {!google.visualization.GeoChartMagnifyingGlass} */
google.visualization.GeoChartOptions.prototype.magnifyingGlass;
 /** @type {number} */
google.visualization.GeoChartOptions.prototype.markerOpacity;
 /** @type {string} */
google.visualization.GeoChartOptions.prototype.resolution;
 /** @type {!google.visualization.ChartSizeAxis} */
google.visualization.GeoChartOptions.prototype.sizeAxis;
 /** @type {!google.visualization.ChartTooltip} */
google.visualization.GeoChartOptions.prototype.tooltip;
 /** @type {number} */
google.visualization.GeoChartOptions.prototype.width;
/**
 * @record
 * @struct
 */
google.visualization.GeoChartMagnifyingGlass = function() {};
 /** @type {boolean} */
google.visualization.GeoChartMagnifyingGlass.prototype.enable;
 /** @type {number} */
google.visualization.GeoChartMagnifyingGlass.prototype.zoomFactor;
/**
 * @record
 * @struct
 */
google.visualization.GeoChartRegionClickEvent = function() {};
 /** @type {string} */
google.visualization.GeoChartRegionClickEvent.prototype.region;
/**
 * @record
 * @struct
 */
google.visualization.GeoChartSelection = function() {};
 /** @type {number} */
google.visualization.GeoChartSelection.prototype.row;
/**
 * @record
 * @struct
 */
google.visualization.ChartAnnotations = function() {};
 /** @type {!google.visualization.ChartBoxStyle} */
google.visualization.ChartAnnotations.prototype.boxStyle;
 /** @type {!google.visualization.ChartTextStyle} */
google.visualization.ChartAnnotations.prototype.textStyle;
 /** @type {!google.visualization.ChartStemAndStyle} */
google.visualization.ChartAnnotations.prototype.datum;
 /** @type {!google.visualization.ChartStemAndStyle} */
google.visualization.ChartAnnotations.prototype.domain;
 /** @type {boolean} */
google.visualization.ChartAnnotations.prototype.highContrast;
 /** @type {!google.visualization.ChartStem} */
google.visualization.ChartAnnotations.prototype.stem;
 /** @type {string} */
google.visualization.ChartAnnotations.prototype.style;
/**
 * @extends {google.visualization.ChartAnnotations}
 * @record
 * @struct
 */
google.visualization.ChartBarColumnAnnotations = function() {};
 /** @type {boolean} */
google.visualization.ChartBarColumnAnnotations.prototype.alwaysOutside;
/**
 * @record
 * @struct
 */
google.visualization.ChartStemAndStyle = function() {};
 /** @type {!google.visualization.ChartStem} */
google.visualization.ChartStemAndStyle.prototype.stem;
 /** @type {string} */
google.visualization.ChartStemAndStyle.prototype.style;
/**
 * @record
 * @struct
 */
google.visualization.ChartStem = function() {};
 /** @type {string} */
google.visualization.ChartStem.prototype.color;
 /** @type {number} */
google.visualization.ChartStem.prototype.length;
/**
 * @record
 * @struct
 */
google.visualization.ChartBoxStyle = function() {};
 /** @type {string} */
google.visualization.ChartBoxStyle.prototype.stroke;
 /** @type {number} */
google.visualization.ChartBoxStyle.prototype.strokeWidth;
 /** @type {number} */
google.visualization.ChartBoxStyle.prototype.rx;
 /** @type {number} */
google.visualization.ChartBoxStyle.prototype.ry;
 /** @type {{color1: string, color2: string, x1: string, y1: string, x2: string, y2: string, useObjectBoundingBoxUnits: boolean}} */
google.visualization.ChartBoxStyle.prototype.gradient;
/**
 * @record
 * @struct
 */
google.visualization.ChartTextStyle = function() {};
 /** @type {string} */
google.visualization.ChartTextStyle.prototype.fontName;
 /** @type {number} */
google.visualization.ChartTextStyle.prototype.fontSize;
 /** @type {boolean} */
google.visualization.ChartTextStyle.prototype.bold;
 /** @type {boolean} */
google.visualization.ChartTextStyle.prototype.italic;
 /** @type {string} */
google.visualization.ChartTextStyle.prototype.color;
 /** @type {string} */
google.visualization.ChartTextStyle.prototype.auraColor;
 /** @type {number} */
google.visualization.ChartTextStyle.prototype.opacity;
/**
 * @record
 * @struct
 */
google.visualization.ChartCrosshair = function() {};
 /** @type {string} */
google.visualization.ChartCrosshair.prototype.color;
 /** @type {{color: string, opacity: number}} */
google.visualization.ChartCrosshair.prototype.focused;
 /** @type {number} */
google.visualization.ChartCrosshair.prototype.opacity;
 /** @type {string} */
google.visualization.ChartCrosshair.prototype.orientation;
 /** @type {{color: string, opacity: number}} */
google.visualization.ChartCrosshair.prototype.selected;
 /** @type {string} */
google.visualization.ChartCrosshair.prototype.trigger;
/**
 * @record
 * @struct
 */
google.visualization.ChartExplorer = function() {};
 /** @type {!Array<string>} */
google.visualization.ChartExplorer.prototype.actions;
 /** @type {string} */
google.visualization.ChartExplorer.prototype.axis;
 /** @type {boolean} */
google.visualization.ChartExplorer.prototype.keepInBounds;
 /** @type {number} */
google.visualization.ChartExplorer.prototype.maxZoomIn;
 /** @type {number} */
google.visualization.ChartExplorer.prototype.maxZoomOut;
 /** @type {number} */
google.visualization.ChartExplorer.prototype.zoomDelta;
/**
 * @record
 * @struct
 */
google.visualization.ChartStroke = function() {};
 /** @type {string} */
google.visualization.ChartStroke.prototype.stroke;
 /** @type {number} */
google.visualization.ChartStroke.prototype.strokeWidth;
 /** @type {string} */
google.visualization.ChartStroke.prototype.fill;
/**
 * @record
 * @struct
 */
google.visualization.ChartArea = function() {};
 /** @type {?} */
google.visualization.ChartArea.prototype.top;
 /** @type {?} */
google.visualization.ChartArea.prototype.left;
 /** @type {?} */
google.visualization.ChartArea.prototype.right;
 /** @type {?} */
google.visualization.ChartArea.prototype.bottom;
 /** @type {?} */
google.visualization.ChartArea.prototype.width;
 /** @type {?} */
google.visualization.ChartArea.prototype.height;
/**
 * @record
 * @struct
 */
google.visualization.ChartLegend = function() {};
 /** @type {string} */
google.visualization.ChartLegend.prototype.alignment;
 /** @type {number} */
google.visualization.ChartLegend.prototype.maxLines;
 /** @type {string} */
google.visualization.ChartLegend.prototype.position;
 /** @type {!google.visualization.ChartTextStyle} */
google.visualization.ChartLegend.prototype.textStyle;
 /** @type {string} */
google.visualization.ChartLegend.prototype.numberFormat;
/**
 * @record
 * @struct
 */
google.visualization.TransitionAnimation = function() {};
 /** @type {number} */
google.visualization.TransitionAnimation.prototype.duration;
 /** @type {string} */
google.visualization.TransitionAnimation.prototype.easing;
 /** @type {boolean} */
google.visualization.TransitionAnimation.prototype.startup;
/**
 * @record
 * @struct
 */
google.visualization.ChartAxis = function() {};
 /** @type {number} */
google.visualization.ChartAxis.prototype.baseline;
 /** @type {string} */
google.visualization.ChartAxis.prototype.baselineColor;
 /** @type {number} */
google.visualization.ChartAxis.prototype.direction;
 /** @type {string} */
google.visualization.ChartAxis.prototype.format;
 /** @type {!google.visualization.ChartGridlines} */
google.visualization.ChartAxis.prototype.gridlines;
 /** @type {!google.visualization.ChartGridlines} */
google.visualization.ChartAxis.prototype.minorGridlines;
 /** @type {boolean} */
google.visualization.ChartAxis.prototype.logScale;
 /** @type {string} */
google.visualization.ChartAxis.prototype.textPosition;
 /** @type {!google.visualization.ChartTextStyle} */
google.visualization.ChartAxis.prototype.textStyle;
 /** @type {!Array<?>} */
google.visualization.ChartAxis.prototype.ticks;
 /** @type {string} */
google.visualization.ChartAxis.prototype.title;
 /** @type {!google.visualization.ChartTextStyle} */
google.visualization.ChartAxis.prototype.titleTextStyle;
 /** @type {boolean} */
google.visualization.ChartAxis.prototype.allowContainerBoundaryTextCufoff;
 /** @type {boolean} */
google.visualization.ChartAxis.prototype.slantedText;
 /** @type {number} */
google.visualization.ChartAxis.prototype.slantedTextAngle;
 /** @type {number} */
google.visualization.ChartAxis.prototype.maxAlternation;
 /** @type {number} */
google.visualization.ChartAxis.prototype.maxTextLines;
 /** @type {number} */
google.visualization.ChartAxis.prototype.minTextSpacing;
 /** @type {number} */
google.visualization.ChartAxis.prototype.showTextEvery;
 /** @type {number} */
google.visualization.ChartAxis.prototype.maxValue;
 /** @type {number} */
google.visualization.ChartAxis.prototype.minValue;
 /** @type {string} */
google.visualization.ChartAxis.prototype.viewWindowMode;
 /** @type {!google.visualization.ChartViewWindow} */
google.visualization.ChartAxis.prototype.viewWindow;
/**
 * @record
 * @struct
 */
google.visualization.ChartGridlines = function() {};
 /** @type {string} */
google.visualization.ChartGridlines.prototype.color;
 /** @type {number} */
google.visualization.ChartGridlines.prototype.count;
/**
 * @record
 * @struct
 */
google.visualization.ChartViewWindow = function() {};
 /** @type {number} */
google.visualization.ChartViewWindow.prototype.max;
 /** @type {number} */
google.visualization.ChartViewWindow.prototype.min;
/**
 * @record
 * @struct
 */
google.visualization.ChartTooltip = function() {};
 /** @type {boolean} */
google.visualization.ChartTooltip.prototype.isHtml;
 /** @type {boolean} */
google.visualization.ChartTooltip.prototype.showColorCode;
 /** @type {!google.visualization.ChartTextStyle} */
google.visualization.ChartTooltip.prototype.textStyle;
 /** @type {string} */
google.visualization.ChartTooltip.prototype.trigger;
/**
 * @record
 * @struct
 */
google.visualization.ChartBoundingBox = function() {};
 /** @type {number} */
google.visualization.ChartBoundingBox.prototype.left;
 /** @type {number} */
google.visualization.ChartBoundingBox.prototype.top;
 /** @type {number} */
google.visualization.ChartBoundingBox.prototype.width;
 /** @type {number} */
google.visualization.ChartBoundingBox.prototype.height;
/**
 * @record
 * @struct
 */
google.visualization.ChartColorAxis = function() {};
 /** @type {number} */
google.visualization.ChartColorAxis.prototype.minValue;
 /** @type {number} */
google.visualization.ChartColorAxis.prototype.maxValue;
 /** @type {!Array<number>} */
google.visualization.ChartColorAxis.prototype.values;
 /** @type {!Array<string>} */
google.visualization.ChartColorAxis.prototype.colors;
 /** @type {!google.visualization.ChartLegend} */
google.visualization.ChartColorAxis.prototype.legend;
/**
 * @record
 * @struct
 */
google.visualization.ChartLayoutInterface = function() {};

/**
 * @param {string} id
 * @return {!google.visualization.ChartBoundingBox}
 */
google.visualization.ChartLayoutInterface.prototype.getBoundingBox = function(id) {};

/**
 * @return {!google.visualization.ChartBoundingBox}
 */
google.visualization.ChartLayoutInterface.prototype.getChartAreaBoundingBox = function() {};

/**
 * @param {number} position
 * @param {number=} axisIndex
 * @return {number}
 */
google.visualization.ChartLayoutInterface.prototype.getHAxisValue = function(position, axisIndex) {};

/**
 * @param {number} position
 * @param {number=} axisIndex
 * @return {number}
 */
google.visualization.ChartLayoutInterface.prototype.getVAxisValue = function(position, axisIndex) {};

/**
 * @param {number} position
 * @param {number=} axisIndex
 * @return {number}
 */
google.visualization.ChartLayoutInterface.prototype.getXLocation = function(position, axisIndex) {};

/**
 * @param {number} position
 * @param {number=} axisIndex
 * @return {number}
 */
google.visualization.ChartLayoutInterface.prototype.getYLocation = function(position, axisIndex) {};
/**
 * @record
 * @struct
 */
google.visualization.GroupWidth = function() {};
 /** @type {?} */
google.visualization.GroupWidth.prototype.groupWidth;
/**
 * @record
 * @struct
 */
google.visualization.VisualizationSelectionArray = function() {};
 /** @type {number} */
google.visualization.VisualizationSelectionArray.prototype.column;
 /** @type {number} */
google.visualization.VisualizationSelectionArray.prototype.row;
/**
 * @record
 * @struct
 */
google.visualization.Candlestick = function() {};
 /** @type {boolean} */
google.visualization.Candlestick.prototype.hollowIsRising;
 /** @type {!google.visualization.ChartStroke} */
google.visualization.Candlestick.prototype.fallingColor;
 /** @type {!google.visualization.ChartStroke} */
google.visualization.Candlestick.prototype.risingColor;

/**
 * @constructor
 * @struct
 * @param {!Element} element
 */
google.visualization.ChartBase = function(element) {};

/**
 * @return {!Array<!google.visualization.VisualizationSelectionArray>}
 */
google.visualization.ChartBase.prototype.getSelection = function() {};

/**
 * @param {!Array<!google.visualization.VisualizationSelectionArray>} selection
 * @return {void}
 */
google.visualization.ChartBase.prototype.setSelection = function(selection) {};

/**
 * @return {void}
 */
google.visualization.ChartBase.prototype.clearChart = function() {};

/**
 * @return {string}
 */
google.visualization.ChartBase.prototype.getImageURI = function() {};
/**
 * @extends {google.visualization.ChartBase}
 * @constructor
 * @struct
 */
google.visualization.CoreChartBase = function() {};

/**
 * @param {string} id
 * @return {!google.visualization.ChartBoundingBox}
 */
google.visualization.CoreChartBase.prototype.getBoundingBox = function(id) {};

/**
 * @return {!google.visualization.ChartBoundingBox}
 */
google.visualization.CoreChartBase.prototype.getChartAreaBoundingBox = function() {};

/**
 * @return {!google.visualization.ChartLayoutInterface}
 */
google.visualization.CoreChartBase.prototype.getChartLayoutInterface = function() {};

/**
 * @param {number} position
 * @param {number=} axisIndex
 * @return {number}
 */
google.visualization.CoreChartBase.prototype.getHAxisValue = function(position, axisIndex) {};

/**
 * @param {number} position
 * @param {number=} axisIndex
 * @return {number}
 */
google.visualization.CoreChartBase.prototype.getVAxisValue = function(position, axisIndex) {};

/**
 * @param {number} position
 * @param {number=} axisIndex
 * @return {number}
 */
google.visualization.CoreChartBase.prototype.getXLocation = function(position, axisIndex) {};

/**
 * @param {number} position
 * @param {number=} axisIndex
 * @return {number}
 */
google.visualization.CoreChartBase.prototype.getYLocation = function(position, axisIndex) {};
/**
 * @extends {google.visualization.CoreChartBase}
 * @constructor
 * @struct
 */
google.visualization.ScatterChart = function() {};

/**
 * @param {!google.visualization.DataTable|!google.visualization.DataView} data
 * @param {!google.visualization.ScatterChartOptions=} options
 * @return {void}
 */
google.visualization.ScatterChart.prototype.draw = function(data, options) {};
/**
 * @record
 * @struct
 */
google.visualization.ScatterChartOptions = function() {};
 /** @type {string} */
google.visualization.ScatterChartOptions.prototype.aggregationTarget;
 /** @type {!google.visualization.TransitionAnimation} */
google.visualization.ScatterChartOptions.prototype.animation;
 /** @type {!google.visualization.ChartAnnotations} */
google.visualization.ScatterChartOptions.prototype.annotations;
 /** @type {string} */
google.visualization.ScatterChartOptions.prototype.axisTitlesPosition;
 /** @type {?} */
google.visualization.ScatterChartOptions.prototype.backgroundColor;
 /** @type {!google.visualization.ChartArea} */
google.visualization.ScatterChartOptions.prototype.chartArea;
 /** @type {!Array<string>} */
google.visualization.ScatterChartOptions.prototype.colors;
 /** @type {!google.visualization.ChartCrosshair} */
google.visualization.ScatterChartOptions.prototype.crosshair;
 /** @type {string} */
google.visualization.ScatterChartOptions.prototype.curveType;
 /** @type {number} */
google.visualization.ScatterChartOptions.prototype.dataOpacity;
 /** @type {boolean} */
google.visualization.ScatterChartOptions.prototype.enableInteractivity;
 /** @type {!google.visualization.ChartExplorer} */
google.visualization.ScatterChartOptions.prototype.explorer;
 /** @type {number} */
google.visualization.ScatterChartOptions.prototype.fontSize;
 /** @type {string} */
google.visualization.ScatterChartOptions.prototype.fontName;
 /** @type {boolean} */
google.visualization.ScatterChartOptions.prototype.forceIFrame;
 /** @type {!google.visualization.ChartAxis} */
google.visualization.ScatterChartOptions.prototype.hAxis;
 /** @type {number} */
google.visualization.ScatterChartOptions.prototype.height;
 /** @type {!google.visualization.ChartLegend} */
google.visualization.ScatterChartOptions.prototype.legend;
 /** @type {number} */
google.visualization.ScatterChartOptions.prototype.lineWidth;
 /** @type {number} */
google.visualization.ScatterChartOptions.prototype.pointSize;
 /** @type {string} */
google.visualization.ScatterChartOptions.prototype.selectionMode;
 /** @type {?} */
google.visualization.ScatterChartOptions.prototype.series;
 /** @type {string} */
google.visualization.ScatterChartOptions.prototype.theme;
 /** @type {string} */
google.visualization.ScatterChartOptions.prototype.title;
 /** @type {string} */
google.visualization.ScatterChartOptions.prototype.titlePosition;
 /** @type {!google.visualization.ChartTextStyle} */
google.visualization.ScatterChartOptions.prototype.titleTextStyle;
 /** @type {!google.visualization.ChartTooltip} */
google.visualization.ScatterChartOptions.prototype.tooltip;
 /** @type {!google.visualization.ChartAxis} */
google.visualization.ScatterChartOptions.prototype.vAxis;
 /** @type {number} */
google.visualization.ScatterChartOptions.prototype.width;
/**
 * @extends {google.visualization.CoreChartBase}
 * @constructor
 * @struct
 */
google.visualization.ColumnChart = function() {};

/**
 * @param {!google.visualization.DataTable|!google.visualization.DataView} data
 * @param {!google.visualization.ColumnChartOptions} options
 * @return {void}
 */
google.visualization.ColumnChart.prototype.draw = function(data, options) {};
/**
 * @record
 * @struct
 */
google.visualization.ColumnChartOptions = function() {};
 /** @type {string} */
google.visualization.ColumnChartOptions.prototype.aggregationTarget;
 /** @type {!google.visualization.TransitionAnimation} */
google.visualization.ColumnChartOptions.prototype.animation;
 /** @type {!google.visualization.ChartBarColumnAnnotations} */
google.visualization.ColumnChartOptions.prototype.annotations;
 /** @type {string} */
google.visualization.ColumnChartOptions.prototype.axisTitlesPosition;
 /** @type {?} */
google.visualization.ColumnChartOptions.prototype.backgroundColor;
 /** @type {!google.visualization.GroupWidth} */
google.visualization.ColumnChartOptions.prototype.bar;
 /** @type {!google.visualization.ChartArea} */
google.visualization.ColumnChartOptions.prototype.chartArea;
 /** @type {!Array<string>} */
google.visualization.ColumnChartOptions.prototype.colors;
 /** @type {boolean} */
google.visualization.ColumnChartOptions.prototype.enableInteractivity;
 /** @type {string} */
google.visualization.ColumnChartOptions.prototype.focusTarget;
 /** @type {number} */
google.visualization.ColumnChartOptions.prototype.fontSize;
 /** @type {string} */
google.visualization.ColumnChartOptions.prototype.fontName;
 /** @type {!google.visualization.ChartAxis} */
google.visualization.ColumnChartOptions.prototype.hAxis;
 /** @type {number} */
google.visualization.ColumnChartOptions.prototype.height;
 /** @type {boolean} */
google.visualization.ColumnChartOptions.prototype.isStacked;
 /** @type {!google.visualization.ChartLegend} */
google.visualization.ColumnChartOptions.prototype.legend;
 /** @type {boolean} */
google.visualization.ColumnChartOptions.prototype.reverseCategories;
 /** @type {string} */
google.visualization.ColumnChartOptions.prototype.selectionMode;
 /** @type {?} */
google.visualization.ColumnChartOptions.prototype.series;
 /** @type {string} */
google.visualization.ColumnChartOptions.prototype.theme;
 /** @type {string} */
google.visualization.ColumnChartOptions.prototype.title;
 /** @type {string} */
google.visualization.ColumnChartOptions.prototype.titlePosition;
 /** @type {!google.visualization.ChartTextStyle} */
google.visualization.ColumnChartOptions.prototype.titleTextStyle;
 /** @type {!google.visualization.ChartTooltip} */
google.visualization.ColumnChartOptions.prototype.tooltip;
 /** @type {?} */
google.visualization.ColumnChartOptions.prototype.vAxes;
 /** @type {!google.visualization.ChartAxis} */
google.visualization.ColumnChartOptions.prototype.vAxis;
 /** @type {number} */
google.visualization.ColumnChartOptions.prototype.width;
/**
 * @extends {google.visualization.CoreChartBase}
 * @constructor
 * @struct
 */
google.visualization.LineChart = function() {};

/**
 * @param {!google.visualization.DataTable|!google.visualization.DataView} data
 * @param {!google.visualization.LineChartOptions} options
 * @return {void}
 */
google.visualization.LineChart.prototype.draw = function(data, options) {};
/**
 * @record
 * @struct
 */
google.visualization.LineChartOptions = function() {};
 /** @type {string} */
google.visualization.LineChartOptions.prototype.aggregationTarget;
 /** @type {!google.visualization.TransitionAnimation} */
google.visualization.LineChartOptions.prototype.animation;
 /** @type {!google.visualization.ChartAnnotations} */
google.visualization.LineChartOptions.prototype.annotations;
 /** @type {string} */
google.visualization.LineChartOptions.prototype.axisTitlesPosition;
 /** @type {?} */
google.visualization.LineChartOptions.prototype.backgroundColor;
 /** @type {!google.visualization.ChartArea} */
google.visualization.LineChartOptions.prototype.chartArea;
 /** @type {!Array<string>} */
google.visualization.LineChartOptions.prototype.colors;
 /** @type {!google.visualization.ChartCrosshair} */
google.visualization.LineChartOptions.prototype.crosshair;
 /** @type {string} */
google.visualization.LineChartOptions.prototype.curveType;
 /** @type {number} */
google.visualization.LineChartOptions.prototype.dataOpacity;
 /** @type {boolean} */
google.visualization.LineChartOptions.prototype.enableInteractivity;
 /** @type {!google.visualization.ChartExplorer} */
google.visualization.LineChartOptions.prototype.explorer;
 /** @type {string} */
google.visualization.LineChartOptions.prototype.focusTarget;
 /** @type {number} */
google.visualization.LineChartOptions.prototype.fontSize;
 /** @type {string} */
google.visualization.LineChartOptions.prototype.fontName;
 /** @type {!google.visualization.ChartAxis} */
google.visualization.LineChartOptions.prototype.hAxis;
 /** @type {number} */
google.visualization.LineChartOptions.prototype.height;
 /** @type {boolean} */
google.visualization.LineChartOptions.prototype.interpolateNulls;
 /** @type {!google.visualization.ChartLegend} */
google.visualization.LineChartOptions.prototype.legend;
 /** @type {number} */
google.visualization.LineChartOptions.prototype.lineWidth;
 /** @type {string} */
google.visualization.LineChartOptions.prototype.orientation;
 /** @type {number} */
google.visualization.LineChartOptions.prototype.pointSize;
 /** @type {boolean} */
google.visualization.LineChartOptions.prototype.reverseCategories;
 /** @type {string} */
google.visualization.LineChartOptions.prototype.selectionMode;
 /** @type {?} */
google.visualization.LineChartOptions.prototype.series;
 /** @type {string} */
google.visualization.LineChartOptions.prototype.theme;
 /** @type {string} */
google.visualization.LineChartOptions.prototype.title;
 /** @type {string} */
google.visualization.LineChartOptions.prototype.titlePosition;
 /** @type {!google.visualization.ChartTextStyle} */
google.visualization.LineChartOptions.prototype.titleTextStyle;
 /** @type {!google.visualization.ChartTooltip} */
google.visualization.LineChartOptions.prototype.tooltip;
 /** @type {?} */
google.visualization.LineChartOptions.prototype.vAxes;
 /** @type {!google.visualization.ChartAxis} */
google.visualization.LineChartOptions.prototype.vAxis;
 /** @type {number} */
google.visualization.LineChartOptions.prototype.width;
/**
 * @record
 * @struct
 */
google.visualization.BarChartOptions = function() {};
 /** @type {string} */
google.visualization.BarChartOptions.prototype.aggregationTarget;
 /** @type {!google.visualization.TransitionAnimation} */
google.visualization.BarChartOptions.prototype.animation;
 /** @type {!google.visualization.ChartBarColumnAnnotations} */
google.visualization.BarChartOptions.prototype.annotations;
 /** @type {string} */
google.visualization.BarChartOptions.prototype.axisTitlesPosition;
 /** @type {?} */
google.visualization.BarChartOptions.prototype.backgroundColor;
 /** @type {!google.visualization.GroupWidth} */
google.visualization.BarChartOptions.prototype.bar;
 /** @type {!google.visualization.ChartArea} */
google.visualization.BarChartOptions.prototype.chartArea;
 /** @type {!Array<string>} */
google.visualization.BarChartOptions.prototype.colors;
 /** @type {number} */
google.visualization.BarChartOptions.prototype.dataOpacity;
 /** @type {boolean} */
google.visualization.BarChartOptions.prototype.enableInteractivity;
 /** @type {string} */
google.visualization.BarChartOptions.prototype.focusTarget;
 /** @type {number} */
google.visualization.BarChartOptions.prototype.fontSize;
 /** @type {string} */
google.visualization.BarChartOptions.prototype.fontName;
 /** @type {?} */
google.visualization.BarChartOptions.prototype.hAxes;
 /** @type {!google.visualization.ChartAxis} */
google.visualization.BarChartOptions.prototype.hAxis;
 /** @type {number} */
google.visualization.BarChartOptions.prototype.height;
 /** @type {boolean} */
google.visualization.BarChartOptions.prototype.isStacked;
 /** @type {!google.visualization.ChartLegend} */
google.visualization.BarChartOptions.prototype.legend;
 /** @type {boolean} */
google.visualization.BarChartOptions.prototype.reverseCategories;
 /** @type {?} */
google.visualization.BarChartOptions.prototype.series;
 /** @type {string} */
google.visualization.BarChartOptions.prototype.theme;
 /** @type {string} */
google.visualization.BarChartOptions.prototype.title;
 /** @type {string} */
google.visualization.BarChartOptions.prototype.titlePosition;
 /** @type {!google.visualization.ChartTextStyle} */
google.visualization.BarChartOptions.prototype.titleTextStyle;
 /** @type {!google.visualization.ChartTooltip} */
google.visualization.BarChartOptions.prototype.tooltip;
 /** @type {?} */
google.visualization.BarChartOptions.prototype.vAxes;
 /** @type {!google.visualization.ChartAxis} */
google.visualization.BarChartOptions.prototype.vAxis;
 /** @type {number} */
google.visualization.BarChartOptions.prototype.width;
/**
 * @extends {google.visualization.CoreChartBase}
 * @constructor
 * @struct
 */
google.visualization.BarChart = function() {};

/**
 * @param {!google.visualization.DataTable|!google.visualization.DataView} data
 * @param {!google.visualization.BarChartOptions} options
 * @return {void}
 */
google.visualization.BarChart.prototype.draw = function(data, options) {};
/**
 * @extends {google.visualization.CoreChartBase}
 * @constructor
 * @struct
 */
google.visualization.Histogram = function() {};

/**
 * @param {!google.visualization.DataTable|!google.visualization.DataView} data
 * @param {!google.visualization.HistogramOptions} options
 * @return {void}
 */
google.visualization.Histogram.prototype.draw = function(data, options) {};
/**
 * @record
 * @struct
 */
google.visualization.HistogramOptions = function() {};
 /** @type {!google.visualization.TransitionAnimation} */
google.visualization.HistogramOptions.prototype.animation;
 /** @type {string} */
google.visualization.HistogramOptions.prototype.axisTitlesPosition;
 /** @type {?} */
google.visualization.HistogramOptions.prototype.backgroundColor;
 /** @type {!google.visualization.GroupWidth} */
google.visualization.HistogramOptions.prototype.bar;
 /** @type {!google.visualization.ChartArea} */
google.visualization.HistogramOptions.prototype.chartArea;
 /** @type {!Array<string>} */
google.visualization.HistogramOptions.prototype.colors;
 /** @type {number} */
google.visualization.HistogramOptions.prototype.dataOpacity;
 /** @type {boolean} */
google.visualization.HistogramOptions.prototype.enableInteractivity;
 /** @type {string} */
google.visualization.HistogramOptions.prototype.focusTarget;
 /** @type {number} */
google.visualization.HistogramOptions.prototype.fontSize;
 /** @type {string} */
google.visualization.HistogramOptions.prototype.fontName;
 /** @type {!google.visualization.ChartAxis} */
google.visualization.HistogramOptions.prototype.hAxis;
 /** @type {!google.visualization.HistogramHistogramOptions} */
google.visualization.HistogramOptions.prototype.histogram;
 /** @type {number} */
google.visualization.HistogramOptions.prototype.height;
 /** @type {boolean} */
google.visualization.HistogramOptions.prototype.interpolateNulls;
 /** @type {boolean} */
google.visualization.HistogramOptions.prototype.isStacked;
 /** @type {!google.visualization.ChartLegend} */
google.visualization.HistogramOptions.prototype.legend;
 /** @type {string} */
google.visualization.HistogramOptions.prototype.orientation;
 /** @type {boolean} */
google.visualization.HistogramOptions.prototype.reverseCategories;
 /** @type {?} */
google.visualization.HistogramOptions.prototype.series;
 /** @type {string} */
google.visualization.HistogramOptions.prototype.theme;
 /** @type {string} */
google.visualization.HistogramOptions.prototype.title;
 /** @type {string} */
google.visualization.HistogramOptions.prototype.titlePosition;
 /** @type {!google.visualization.ChartTextStyle} */
google.visualization.HistogramOptions.prototype.titleTextStyle;
 /** @type {!google.visualization.ChartTooltip} */
google.visualization.HistogramOptions.prototype.tooltip;
 /** @type {?} */
google.visualization.HistogramOptions.prototype.vAxes;
 /** @type {!google.visualization.ChartAxis} */
google.visualization.HistogramOptions.prototype.vAxis;
 /** @type {number} */
google.visualization.HistogramOptions.prototype.width;
/**
 * @record
 * @struct
 */
google.visualization.HistogramHistogramOptions = function() {};
 /** @type {number} */
google.visualization.HistogramHistogramOptions.prototype.bucketSize;
 /** @type {boolean} */
google.visualization.HistogramHistogramOptions.prototype.hideBucketItems;
 /** @type {number} */
google.visualization.HistogramHistogramOptions.prototype.lastBucketPercentile;
/**
 * @extends {google.visualization.CoreChartBase}
 * @constructor
 * @struct
 */
google.visualization.AreaChart = function() {};

/**
 * @param {!google.visualization.DataTable|!google.visualization.DataView} data
 * @param {!google.visualization.AreaChartOptions} options
 * @return {void}
 */
google.visualization.AreaChart.prototype.draw = function(data, options) {};
/**
 * @record
 * @struct
 */
google.visualization.AreaChartOptions = function() {};
 /** @type {string} */
google.visualization.AreaChartOptions.prototype.aggregationTarget;
 /** @type {!google.visualization.TransitionAnimation} */
google.visualization.AreaChartOptions.prototype.animation;
 /** @type {!google.visualization.ChartAnnotations} */
google.visualization.AreaChartOptions.prototype.annotations;
 /** @type {number} */
google.visualization.AreaChartOptions.prototype.areaOpacity;
 /** @type {string} */
google.visualization.AreaChartOptions.prototype.axisTitlesPosition;
 /** @type {?} */
google.visualization.AreaChartOptions.prototype.backgroundColor;
 /** @type {!google.visualization.ChartArea} */
google.visualization.AreaChartOptions.prototype.chartArea;
 /** @type {!Array<string>} */
google.visualization.AreaChartOptions.prototype.colors;
 /** @type {!google.visualization.ChartCrosshair} */
google.visualization.AreaChartOptions.prototype.crosshair;
 /** @type {number} */
google.visualization.AreaChartOptions.prototype.dataOpacity;
 /** @type {boolean} */
google.visualization.AreaChartOptions.prototype.enableInteractivity;
 /** @type {!google.visualization.ChartExplorer} */
google.visualization.AreaChartOptions.prototype.explorer;
 /** @type {string} */
google.visualization.AreaChartOptions.prototype.focusTarget;
 /** @type {number} */
google.visualization.AreaChartOptions.prototype.fontSize;
 /** @type {string} */
google.visualization.AreaChartOptions.prototype.fontName;
 /** @type {!google.visualization.ChartAxis} */
google.visualization.AreaChartOptions.prototype.hAxis;
 /** @type {number} */
google.visualization.AreaChartOptions.prototype.height;
 /** @type {boolean} */
google.visualization.AreaChartOptions.prototype.interpolateNulls;
 /** @type {boolean} */
google.visualization.AreaChartOptions.prototype.isStacked;
 /** @type {!google.visualization.ChartLegend} */
google.visualization.AreaChartOptions.prototype.legend;
 /** @type {number} */
google.visualization.AreaChartOptions.prototype.lineWidth;
 /** @type {string} */
google.visualization.AreaChartOptions.prototype.orientation;
 /** @type {number} */
google.visualization.AreaChartOptions.prototype.pointSize;
 /** @type {boolean} */
google.visualization.AreaChartOptions.prototype.reverseCategories;
 /** @type {string} */
google.visualization.AreaChartOptions.prototype.selectionMode;
 /** @type {?} */
google.visualization.AreaChartOptions.prototype.series;
 /** @type {string} */
google.visualization.AreaChartOptions.prototype.theme;
 /** @type {string} */
google.visualization.AreaChartOptions.prototype.title;
 /** @type {string} */
google.visualization.AreaChartOptions.prototype.titlePosition;
 /** @type {!google.visualization.ChartTextStyle} */
google.visualization.AreaChartOptions.prototype.titleTextStyle;
 /** @type {!google.visualization.ChartTooltip} */
google.visualization.AreaChartOptions.prototype.tooltip;
 /** @type {?} */
google.visualization.AreaChartOptions.prototype.vAxes;
 /** @type {!google.visualization.ChartAxis} */
google.visualization.AreaChartOptions.prototype.vAxis;
 /** @type {number} */
google.visualization.AreaChartOptions.prototype.width;
/**
 * @extends {google.visualization.CoreChartBase}
 * @constructor
 * @struct
 */
google.visualization.AnnotationChart = function() {};

/**
 * @param {!google.visualization.DataTable|!google.visualization.DataView} data
 * @param {!google.visualization.AnnotationChartOptions} options
 * @return {void}
 */
google.visualization.AnnotationChart.prototype.draw = function(data, options) {};

/**
 * @param {!Date} start
 * @param {!Date} end
 * @return {void}
 */
google.visualization.AnnotationChart.prototype.setVisibleChartRange = function(start, end) {};

/**
 * @return {{start: !Date, end: !Date}}
 */
google.visualization.AnnotationChart.prototype.getVisibleChartRange = function() {};

/**
 * @param {(number|!Array<number>)} columnIndexes
 * @return {void}
 */
google.visualization.AnnotationChart.prototype.hideDataColumns = function(columnIndexes) {};

/**
 * @param {(number|!Array<number>)} columnIndexes
 * @return {void}
 */
google.visualization.AnnotationChart.prototype.showDataColumns = function(columnIndexes) {};
/**
 * @record
 * @struct
 */
google.visualization.AnnotationChartOptions = function() {};
 /** @type {boolean} */
google.visualization.AnnotationChartOptions.prototype.allowHtml;
 /** @type {string} */
google.visualization.AnnotationChartOptions.prototype.allValuesSuffix;
 /** @type {number} */
google.visualization.AnnotationChartOptions.prototype.annotationsWidth;
 /** @type {!Array<string>} */
google.visualization.AnnotationChartOptions.prototype.colors;
 /** @type {string} */
google.visualization.AnnotationChartOptions.prototype.dateFormat;
 /** @type {boolean} */
google.visualization.AnnotationChartOptions.prototype.displayAnnotations;
 /** @type {boolean} */
google.visualization.AnnotationChartOptions.prototype.displayAnnotationsFilter;
 /** @type {boolean} */
google.visualization.AnnotationChartOptions.prototype.displayDateBarSeparator;
 /** @type {boolean} */
google.visualization.AnnotationChartOptions.prototype.displayExactValues;
 /** @type {boolean} */
google.visualization.AnnotationChartOptions.prototype.displayLegendDots;
 /** @type {boolean} */
google.visualization.AnnotationChartOptions.prototype.displayLegendValues;
 /** @type {boolean} */
google.visualization.AnnotationChartOptions.prototype.displayRangeSelector;
 /** @type {boolean} */
google.visualization.AnnotationChartOptions.prototype.displayZoomButtons;
 /** @type {number} */
google.visualization.AnnotationChartOptions.prototype.fill;
 /** @type {string} */
google.visualization.AnnotationChartOptions.prototype.legendPosition;
 /** @type {number} */
google.visualization.AnnotationChartOptions.prototype.max;
 /** @type {number} */
google.visualization.AnnotationChartOptions.prototype.min;
 /** @type {?} */
google.visualization.AnnotationChartOptions.prototype.numberFormats;
 /** @type {!Array<number>} */
google.visualization.AnnotationChartOptions.prototype.scaleColumns;
 /** @type {string} */
google.visualization.AnnotationChartOptions.prototype.scaleFormat;
 /** @type {string} */
google.visualization.AnnotationChartOptions.prototype.scaleType;
 /** @type {number} */
google.visualization.AnnotationChartOptions.prototype.thickness;
 /** @type {!Date} */
google.visualization.AnnotationChartOptions.prototype.zoomEndTime;
 /** @type {!Date} */
google.visualization.AnnotationChartOptions.prototype.zoomStartTime;
/**
 * @extends {google.visualization.CoreChartBase}
 * @constructor
 * @struct
 */
google.visualization.SteppedAreaChart = function() {};

/**
 * @param {!google.visualization.DataTable|!google.visualization.DataView} data
 * @param {!google.visualization.SteppedAreaChartOptions} options
 * @return {void}
 */
google.visualization.SteppedAreaChart.prototype.draw = function(data, options) {};
/**
 * @record
 * @struct
 */
google.visualization.SteppedAreaChartOptions = function() {};
 /** @type {string} */
google.visualization.SteppedAreaChartOptions.prototype.aggregationTarget;
 /** @type {!google.visualization.TransitionAnimation} */
google.visualization.SteppedAreaChartOptions.prototype.animation;
 /** @type {number} */
google.visualization.SteppedAreaChartOptions.prototype.areaOpacity;
 /** @type {string} */
google.visualization.SteppedAreaChartOptions.prototype.axisTitlesPosition;
 /** @type {?} */
google.visualization.SteppedAreaChartOptions.prototype.backgroundColor;
 /** @type {!google.visualization.ChartArea} */
google.visualization.SteppedAreaChartOptions.prototype.chartArea;
 /** @type {!Array<string>} */
google.visualization.SteppedAreaChartOptions.prototype.colors;
 /** @type {boolean} */
google.visualization.SteppedAreaChartOptions.prototype.connectSteps;
 /** @type {boolean} */
google.visualization.SteppedAreaChartOptions.prototype.enableInteractivity;
 /** @type {string} */
google.visualization.SteppedAreaChartOptions.prototype.focusTarget;
 /** @type {number} */
google.visualization.SteppedAreaChartOptions.prototype.fontSize;
 /** @type {string} */
google.visualization.SteppedAreaChartOptions.prototype.fontName;
 /** @type {!google.visualization.ChartAxis} */
google.visualization.SteppedAreaChartOptions.prototype.hAxis;
 /** @type {number} */
google.visualization.SteppedAreaChartOptions.prototype.height;
 /** @type {boolean} */
google.visualization.SteppedAreaChartOptions.prototype.interpolateNulls;
 /** @type {boolean} */
google.visualization.SteppedAreaChartOptions.prototype.isStacked;
 /** @type {!google.visualization.ChartLegend} */
google.visualization.SteppedAreaChartOptions.prototype.legend;
 /** @type {boolean} */
google.visualization.SteppedAreaChartOptions.prototype.reverseCategories;
 /** @type {string} */
google.visualization.SteppedAreaChartOptions.prototype.selectionMode;
 /** @type {?} */
google.visualization.SteppedAreaChartOptions.prototype.series;
 /** @type {string} */
google.visualization.SteppedAreaChartOptions.prototype.theme;
 /** @type {string} */
google.visualization.SteppedAreaChartOptions.prototype.title;
 /** @type {string} */
google.visualization.SteppedAreaChartOptions.prototype.titlePosition;
 /** @type {!google.visualization.ChartTextStyle} */
google.visualization.SteppedAreaChartOptions.prototype.titleTextStyle;
 /** @type {!google.visualization.ChartTooltip} */
google.visualization.SteppedAreaChartOptions.prototype.tooltip;
 /** @type {?} */
google.visualization.SteppedAreaChartOptions.prototype.vAxes;
 /** @type {!google.visualization.ChartAxis} */
google.visualization.SteppedAreaChartOptions.prototype.vAxis;
 /** @type {number} */
google.visualization.SteppedAreaChartOptions.prototype.width;
/**
 * @extends {google.visualization.CoreChartBase}
 * @constructor
 * @struct
 */
google.visualization.PieChart = function() {};

/**
 * @param {!google.visualization.DataTable|!google.visualization.DataView} data
 * @param {!google.visualization.PieChartOptions} options
 * @return {void}
 */
google.visualization.PieChart.prototype.draw = function(data, options) {};
/**
 * @record
 * @struct
 */
google.visualization.PieChartOptions = function() {};
 /** @type {?} */
google.visualization.PieChartOptions.prototype.backgroundColor;
 /** @type {!google.visualization.ChartArea} */
google.visualization.PieChartOptions.prototype.chartArea;
 /** @type {!Array<string>} */
google.visualization.PieChartOptions.prototype.colors;
 /** @type {boolean} */
google.visualization.PieChartOptions.prototype.enableInteractivity;
 /** @type {number} */
google.visualization.PieChartOptions.prototype.fontSize;
 /** @type {string} */
google.visualization.PieChartOptions.prototype.fontName;
 /** @type {number} */
google.visualization.PieChartOptions.prototype.height;
 /** @type {boolean} */
google.visualization.PieChartOptions.prototype.is3D;
 /** @type {!google.visualization.ChartLegend} */
google.visualization.PieChartOptions.prototype.legend;
 /** @type {number} */
google.visualization.PieChartOptions.prototype.pieHole;
 /** @type {string} */
google.visualization.PieChartOptions.prototype.pieSliceBorderColor;
 /** @type {string} */
google.visualization.PieChartOptions.prototype.pieSliceText;
 /** @type {!google.visualization.ChartTextStyle} */
google.visualization.PieChartOptions.prototype.pieSliceTextStyle;
 /** @type {number} */
google.visualization.PieChartOptions.prototype.pieStartAngle;
 /** @type {boolean} */
google.visualization.PieChartOptions.prototype.reverseCategories;
 /** @type {string} */
google.visualization.PieChartOptions.prototype.pieResidueSliceColor;
 /** @type {string} */
google.visualization.PieChartOptions.prototype.pieResidueSliceLabel;
 /** @type {?} */
google.visualization.PieChartOptions.prototype.slices;
 /** @type {number} */
google.visualization.PieChartOptions.prototype.sliceVisibilityThreshold;
 /** @type {string} */
google.visualization.PieChartOptions.prototype.title;
 /** @type {!google.visualization.ChartTextStyle} */
google.visualization.PieChartOptions.prototype.titleTextStyle;
 /** @type {!google.visualization.ChartTooltip} */
google.visualization.PieChartOptions.prototype.tooltip;
 /** @type {number} */
google.visualization.PieChartOptions.prototype.width;
/**
 * @extends {google.visualization.CoreChartBase}
 * @constructor
 * @struct
 */
google.visualization.BubbleChart = function() {};

/**
 * @param {!google.visualization.DataTable|!google.visualization.DataView} data
 * @param {!google.visualization.BubbleChartOptions=} options
 * @return {void}
 */
google.visualization.BubbleChart.prototype.draw = function(data, options) {};
/**
 * @record
 * @struct
 */
google.visualization.BubbleChartOptions = function() {};
 /** @type {!google.visualization.TransitionAnimation} */
google.visualization.BubbleChartOptions.prototype.animation;
 /** @type {string} */
google.visualization.BubbleChartOptions.prototype.axisTitlesPosition;
 /** @type {?} */
google.visualization.BubbleChartOptions.prototype.backgroundColor;
 /** @type {!google.visualization.ChartBubble} */
google.visualization.BubbleChartOptions.prototype.bubble;
 /** @type {!google.visualization.ChartArea} */
google.visualization.BubbleChartOptions.prototype.chartArea;
 /** @type {!Array<string>} */
google.visualization.BubbleChartOptions.prototype.colors;
 /** @type {!google.visualization.ChartColorAxis} */
google.visualization.BubbleChartOptions.prototype.colorAxis;
 /** @type {boolean} */
google.visualization.BubbleChartOptions.prototype.enableInteractivity;
 /** @type {!google.visualization.ChartExplorer} */
google.visualization.BubbleChartOptions.prototype.explorer;
 /** @type {number} */
google.visualization.BubbleChartOptions.prototype.fontSize;
 /** @type {string} */
google.visualization.BubbleChartOptions.prototype.fontName;
 /** @type {boolean} */
google.visualization.BubbleChartOptions.prototype.forceIFrame;
 /** @type {!google.visualization.ChartAxis} */
google.visualization.BubbleChartOptions.prototype.hAxis;
 /** @type {number} */
google.visualization.BubbleChartOptions.prototype.height;
 /** @type {!google.visualization.ChartLegend} */
google.visualization.BubbleChartOptions.prototype.legend;
 /** @type {string} */
google.visualization.BubbleChartOptions.prototype.selectionMode;
 /** @type {?} */
google.visualization.BubbleChartOptions.prototype.series;
 /** @type {!google.visualization.ChartSizeAxis} */
google.visualization.BubbleChartOptions.prototype.sizeAxis;
 /** @type {boolean} */
google.visualization.BubbleChartOptions.prototype.sortBubblesBySize;
 /** @type {string} */
google.visualization.BubbleChartOptions.prototype.theme;
 /** @type {string} */
google.visualization.BubbleChartOptions.prototype.title;
 /** @type {string} */
google.visualization.BubbleChartOptions.prototype.titlePosition;
 /** @type {!google.visualization.ChartTextStyle} */
google.visualization.BubbleChartOptions.prototype.titleTextStyle;
 /** @type {!google.visualization.ChartTooltip} */
google.visualization.BubbleChartOptions.prototype.tooltip;
 /** @type {!google.visualization.ChartAxis} */
google.visualization.BubbleChartOptions.prototype.vAxis;
 /** @type {number} */
google.visualization.BubbleChartOptions.prototype.width;
/**
 * @record
 * @struct
 */
google.visualization.ChartBubble = function() {};
 /** @type {number} */
google.visualization.ChartBubble.prototype.opacity;
 /** @type {string} */
google.visualization.ChartBubble.prototype.stroke;
 /** @type {!google.visualization.ChartTextStyle} */
google.visualization.ChartBubble.prototype.textStyle;
/**
 * @record
 * @struct
 */
google.visualization.ChartSizeAxis = function() {};
 /** @type {number} */
google.visualization.ChartSizeAxis.prototype.maxSize;
 /** @type {number} */
google.visualization.ChartSizeAxis.prototype.maxValue;
 /** @type {number} */
google.visualization.ChartSizeAxis.prototype.minSize;
 /** @type {number} */
google.visualization.ChartSizeAxis.prototype.minValue;
/**
 * @extends {google.visualization.ChartBase}
 * @constructor
 * @struct
 */
google.visualization.TreeMap = function() {};

/**
 * @param {!google.visualization.DataTable|!google.visualization.DataView} data
 * @param {!google.visualization.TreeMapOptions=} options
 * @return {void}
 */
google.visualization.TreeMap.prototype.draw = function(data, options) {};

/**
 * @return {void}
 */
google.visualization.TreeMap.prototype.goUpAndDraw = function() {};

/**
 * @return {number}
 */
google.visualization.TreeMap.prototype.getMaxPossibleDepth = function() {};
/**
 * @record
 * @struct
 */
google.visualization.TreeMapOptions = function() {};
 /** @type {string} */
google.visualization.TreeMapOptions.prototype.fontColor;
 /** @type {string} */
google.visualization.TreeMapOptions.prototype.fontFamily;
 /** @type {number} */
google.visualization.TreeMapOptions.prototype.fontSize;
 /** @type {boolean} */
google.visualization.TreeMapOptions.prototype.forceIFrame;
 /** @type {string} */
google.visualization.TreeMapOptions.prototype.headerColor;
 /** @type {number} */
google.visualization.TreeMapOptions.prototype.headerHeight;
 /** @type {string} */
google.visualization.TreeMapOptions.prototype.headerHighlightColor;
 /** @type {number} */
google.visualization.TreeMapOptions.prototype.hintOpacity;
 /** @type {string} */
google.visualization.TreeMapOptions.prototype.maxColor;
 /** @type {number} */
google.visualization.TreeMapOptions.prototype.maxDepth;
 /** @type {string} */
google.visualization.TreeMapOptions.prototype.maxHighlightColor;
 /** @type {number} */
google.visualization.TreeMapOptions.prototype.maxPostDepth;
 /** @type {number} */
google.visualization.TreeMapOptions.prototype.maxColorValue;
 /** @type {string} */
google.visualization.TreeMapOptions.prototype.midColor;
 /** @type {string} */
google.visualization.TreeMapOptions.prototype.midHighlightColor;
 /** @type {string} */
google.visualization.TreeMapOptions.prototype.minColor;
 /** @type {string} */
google.visualization.TreeMapOptions.prototype.minHighlightColor;
 /** @type {number} */
google.visualization.TreeMapOptions.prototype.minColorValue;
 /** @type {boolean} */
google.visualization.TreeMapOptions.prototype.showScale;
 /** @type {boolean} */
google.visualization.TreeMapOptions.prototype.showTooltips;
 /** @type {!google.visualization.ChartTextStyle} */
google.visualization.TreeMapOptions.prototype.textStyle;
 /** @type {string} */
google.visualization.TreeMapOptions.prototype.title;
 /** @type {!google.visualization.ChartTextStyle} */
google.visualization.TreeMapOptions.prototype.titleTextStyle;
 /** @type {boolean} */
google.visualization.TreeMapOptions.prototype.useWeightedAverageForAggregation;
/**
 * @extends {google.visualization.ChartBase}
 * @constructor
 * @struct
 */
google.visualization.Table = function() {};

/**
 * @param {!google.visualization.DataTable|!google.visualization.DataView} data
 * @param {!google.visualization.TableOptions=} options
 * @return {void}
 */
google.visualization.Table.prototype.draw = function(data, options) {};
/**
 * @record
 * @struct
 */
google.visualization.TableOptions = function() {};
 /** @type {boolean} */
google.visualization.TableOptions.prototype.allowHtml;
 /** @type {boolean} */
google.visualization.TableOptions.prototype.alternatingRowStyle;
 /** @type {!google.visualization.CssClassNames} */
google.visualization.TableOptions.prototype.cssClassName;
 /** @type {number} */
google.visualization.TableOptions.prototype.firstRowNumber;
 /** @type {string} */
google.visualization.TableOptions.prototype.height;
 /** @type {string} */
google.visualization.TableOptions.prototype.page;
 /** @type {number} */
google.visualization.TableOptions.prototype.pageSize;
 /** @type {boolean} */
google.visualization.TableOptions.prototype.rtlTable;
 /** @type {number} */
google.visualization.TableOptions.prototype.scrollLeftStartPosition;
 /** @type {boolean} */
google.visualization.TableOptions.prototype.showRowNumber;
 /** @type {string} */
google.visualization.TableOptions.prototype.sort;
 /** @type {boolean} */
google.visualization.TableOptions.prototype.sortAscending;
 /** @type {number} */
google.visualization.TableOptions.prototype.sortColumn;
 /** @type {number} */
google.visualization.TableOptions.prototype.startPage;
 /** @type {string} */
google.visualization.TableOptions.prototype.width;
/**
 * @record
 * @struct
 */
google.visualization.CssClassNames = function() {};
 /** @type {string} */
google.visualization.CssClassNames.prototype.headerRow;
 /** @type {string} */
google.visualization.CssClassNames.prototype.tableRow;
 /** @type {string} */
google.visualization.CssClassNames.prototype.oddTableRow;
 /** @type {string} */
google.visualization.CssClassNames.prototype.selectedTableRow;
 /** @type {string} */
google.visualization.CssClassNames.prototype.hoverTableRow;
 /** @type {string} */
google.visualization.CssClassNames.prototype.headerCell;
 /** @type {string} */
google.visualization.CssClassNames.prototype.tableCell;
 /** @type {string} */
google.visualization.CssClassNames.prototype.rowNumberCell;

/**
 * @constructor
 * @struct
 * @param {!Element} element
 */
google.visualization.Timeline = function(element) {};

/**
 * @param {!google.visualization.DataTable|!google.visualization.DataView} data
 * @param {!google.visualization.TimelineOptions=} options
 * @return {void}
 */
google.visualization.Timeline.prototype.draw = function(data, options) {};

/**
 * @return {void}
 */
google.visualization.Timeline.prototype.clearChart = function() {};
/**
 * @record
 * @struct
 */
google.visualization.TimelineOptions = function() {};
 /** @type {boolean} */
google.visualization.TimelineOptions.prototype.avoidOverlappingGridLines;
 /** @type {?} */
google.visualization.TimelineOptions.prototype.backgroundColor;
 /** @type {!Array<string>} */
google.visualization.TimelineOptions.prototype.colors;
 /** @type {boolean} */
google.visualization.TimelineOptions.prototype.enableInteractivity;
 /** @type {boolean} */
google.visualization.TimelineOptions.prototype.forceIFrame;
 /** @type {number} */
google.visualization.TimelineOptions.prototype.height;
 /** @type {{barLabelStyle: !google.visualization.LabelStyle, colorByRowLabel: boolean, groupByRowLabel: boolean, rowLabelStyle: !google.visualization.LabelStyle, showRowLabels: boolean, singleColor: string}} */
google.visualization.TimelineOptions.prototype.timeline;
 /** @type {number} */
google.visualization.TimelineOptions.prototype.width;
/**
 * @record
 * @struct
 */
google.visualization.LabelStyle = function() {};
 /** @type {string} */
google.visualization.LabelStyle.prototype.color;
 /** @type {string} */
google.visualization.LabelStyle.prototype.fontName;
 /** @type {string} */
google.visualization.LabelStyle.prototype.fontSize;
/**
 * @extends {google.visualization.CoreChartBase}
 * @constructor
 * @struct
 */
google.visualization.CandlestickChart = function() {};

/**
 * @param {!google.visualization.DataTable|!google.visualization.DataView} data
 * @param {!google.visualization.CandlestickChartOptions} options
 * @return {void}
 */
google.visualization.CandlestickChart.prototype.draw = function(data, options) {};
/**
 * @record
 * @struct
 */
google.visualization.CandlestickChartOptions = function() {};
 /** @type {string} */
google.visualization.CandlestickChartOptions.prototype.aggregationTarget;
 /** @type {!google.visualization.TransitionAnimation} */
google.visualization.CandlestickChartOptions.prototype.animation;
 /** @type {string} */
google.visualization.CandlestickChartOptions.prototype.axisTitlesPosition;
 /** @type {?} */
google.visualization.CandlestickChartOptions.prototype.backgroundColor;
 /** @type {!google.visualization.GroupWidth} */
google.visualization.CandlestickChartOptions.prototype.bar;
 /** @type {!google.visualization.Candlestick} */
google.visualization.CandlestickChartOptions.prototype.candlestick;
 /** @type {!google.visualization.ChartArea} */
google.visualization.CandlestickChartOptions.prototype.chartArea;
 /** @type {!Array<string>} */
google.visualization.CandlestickChartOptions.prototype.colors;
 /** @type {boolean} */
google.visualization.CandlestickChartOptions.prototype.enableInteractivity;
 /** @type {string} */
google.visualization.CandlestickChartOptions.prototype.focusTarget;
 /** @type {number} */
google.visualization.CandlestickChartOptions.prototype.fontSize;
 /** @type {string} */
google.visualization.CandlestickChartOptions.prototype.fontName;
 /** @type {!google.visualization.ChartAxis} */
google.visualization.CandlestickChartOptions.prototype.hAxis;
 /** @type {number} */
google.visualization.CandlestickChartOptions.prototype.height;
 /** @type {!google.visualization.ChartLegend} */
google.visualization.CandlestickChartOptions.prototype.legend;
 /** @type {string} */
google.visualization.CandlestickChartOptions.prototype.orientation;
 /** @type {boolean} */
google.visualization.CandlestickChartOptions.prototype.reverseCategories;
 /** @type {string} */
google.visualization.CandlestickChartOptions.prototype.selectionMode;
 /** @type {?} */
google.visualization.CandlestickChartOptions.prototype.series;
 /** @type {string} */
google.visualization.CandlestickChartOptions.prototype.theme;
 /** @type {string} */
google.visualization.CandlestickChartOptions.prototype.title;
 /** @type {string} */
google.visualization.CandlestickChartOptions.prototype.titlePosition;
 /** @type {!google.visualization.ChartTextStyle} */
google.visualization.CandlestickChartOptions.prototype.titleTextStyle;
 /** @type {!google.visualization.ChartTooltip} */
google.visualization.CandlestickChartOptions.prototype.tooltip;
 /** @type {?} */
google.visualization.CandlestickChartOptions.prototype.vAxes;
 /** @type {!google.visualization.ChartAxis} */
google.visualization.CandlestickChartOptions.prototype.vAxis;
 /** @type {number} */
google.visualization.CandlestickChartOptions.prototype.width;
/**
 * @extends {google.visualization.CoreChartBase}
 * @constructor
 * @struct
 */
google.visualization.ComboChart = function() {};

/**
 * @param {!google.visualization.DataTable|!google.visualization.DataView} data
 * @param {!google.visualization.ComboChartOptions} options
 * @return {void}
 */
google.visualization.ComboChart.prototype.draw = function(data, options) {};
/**
 * @record
 * @struct
 */
google.visualization.ComboChartOptions = function() {};
 /** @type {string} */
google.visualization.ComboChartOptions.prototype.aggregationTarget;
 /** @type {!google.visualization.TransitionAnimation} */
google.visualization.ComboChartOptions.prototype.animation;
 /** @type {!google.visualization.ChartAnnotations} */
google.visualization.ComboChartOptions.prototype.annotations;
 /** @type {number} */
google.visualization.ComboChartOptions.prototype.areaOpacity;
 /** @type {string} */
google.visualization.ComboChartOptions.prototype.axisTitlesPosition;
 /** @type {?} */
google.visualization.ComboChartOptions.prototype.backgroundColor;
 /** @type {!google.visualization.GroupWidth} */
google.visualization.ComboChartOptions.prototype.bar;
 /** @type {!google.visualization.Candlestick} */
google.visualization.ComboChartOptions.prototype.candlestick;
 /** @type {!google.visualization.ChartArea} */
google.visualization.ComboChartOptions.prototype.chartArea;
 /** @type {!Array<string>} */
google.visualization.ComboChartOptions.prototype.colors;
 /** @type {!google.visualization.ChartCrosshair} */
google.visualization.ComboChartOptions.prototype.crosshair;
 /** @type {string} */
google.visualization.ComboChartOptions.prototype.curveType;
 /** @type {number} */
google.visualization.ComboChartOptions.prototype.dataOpacity;
 /** @type {boolean} */
google.visualization.ComboChartOptions.prototype.enableInteractivity;
 /** @type {string} */
google.visualization.ComboChartOptions.prototype.focusTarget;
 /** @type {number} */
google.visualization.ComboChartOptions.prototype.fontSize;
 /** @type {string} */
google.visualization.ComboChartOptions.prototype.fontName;
 /** @type {boolean} */
google.visualization.ComboChartOptions.prototype.forceIFrame;
 /** @type {!google.visualization.ChartAxis} */
google.visualization.ComboChartOptions.prototype.hAxis;
 /** @type {number} */
google.visualization.ComboChartOptions.prototype.height;
 /** @type {boolean} */
google.visualization.ComboChartOptions.prototype.interpolateNulls;
 /** @type {boolean} */
google.visualization.ComboChartOptions.prototype.isStacked;
 /** @type {!google.visualization.ChartLegend} */
google.visualization.ComboChartOptions.prototype.legend;
 /** @type {!Array<number>} */
google.visualization.ComboChartOptions.prototype.lineDashStyle;
 /** @type {number} */
google.visualization.ComboChartOptions.prototype.lineWidth;
 /** @type {string} */
google.visualization.ComboChartOptions.prototype.orientation;
 /** @type {string} */
google.visualization.ComboChartOptions.prototype.pointShape;
 /** @type {number} */
google.visualization.ComboChartOptions.prototype.pointSize;
 /** @type {boolean} */
google.visualization.ComboChartOptions.prototype.pointsVisible;
 /** @type {boolean} */
google.visualization.ComboChartOptions.prototype.reverseCategories;
 /** @type {string} */
google.visualization.ComboChartOptions.prototype.selectionMode;
 /** @type {?} */
google.visualization.ComboChartOptions.prototype.series;
 /** @type {string} */
google.visualization.ComboChartOptions.prototype.seriesType;
 /** @type {string} */
google.visualization.ComboChartOptions.prototype.theme;
 /** @type {string} */
google.visualization.ComboChartOptions.prototype.title;
 /** @type {string} */
google.visualization.ComboChartOptions.prototype.titlePosition;
 /** @type {!google.visualization.ChartTextStyle} */
google.visualization.ComboChartOptions.prototype.titleTextStyle;
 /** @type {!google.visualization.ChartTooltip} */
google.visualization.ComboChartOptions.prototype.tooltip;
 /** @type {?} */
google.visualization.ComboChartOptions.prototype.vAxes;
 /** @type {!google.visualization.ChartAxis} */
google.visualization.ComboChartOptions.prototype.vAxis;
 /** @type {number} */
google.visualization.ComboChartOptions.prototype.width;
/** @const */
google.visualization.events = {};

/**
 * @param {?} visualization
 * @param {string} eventName
 * @param {!Function|function(!Array<?>): void} callback
 * @return {?}
 */
google.visualization.events.addListener = function(visualization, eventName, callback) {};

/**
 * @param {?} listener
 * @return {void}
 */
google.visualization.events.removeListener = function(listener) {};

/**
 * @param {?} visualization
 * @return {void}
 */
google.visualization.events.removeAllListeners = function(visualization) {};

/**
 * @param {?} visualization
 * @param {string} eventName
 * @param {?=} args
 * @return {void}
 */
google.visualization.events.trigger = function(visualization, eventName, args) {};
/**
 * @constructor
 * @struct
 */
google.visualization.DefaultFormatter = function() {};

/**
 * Reformats the data in the specified column.
 * 
 * @param {!google.visualization.DataTable} data - A DataTable containing the data to reformat. You cannot use a DataView here.
 * @param {number} columnIndex - The zero-based index of the column to format. To format multiple columns, you must call this method multiple times, with different colIndex values.
 * @return {void}
 */
google.visualization.DefaultFormatter.prototype.format = function(data, columnIndex) {};
/**
 * @record
 * @struct
 */
google.visualization.ArrowFormatOptions = function() {};
 /** @type {number} */
google.visualization.ArrowFormatOptions.prototype.base;

/**
 * @constructor
 * @struct
 * @param {!google.visualization.ArrowFormatOptions=} options
 */
google.visualization.ArrowFormat = function(options) {};
/**
 * @record
 * @struct
 */
google.visualization.BarFormatOptions = function() {};
 /** @type {number} */
google.visualization.BarFormatOptions.prototype.base;
 /** @type {string} */
google.visualization.BarFormatOptions.prototype.colorNegative;
 /** @type {string} */
google.visualization.BarFormatOptions.prototype.colorPositive;
 /** @type {boolean} */
google.visualization.BarFormatOptions.prototype.drawZeroLine;
 /** @type {number} */
google.visualization.BarFormatOptions.prototype.max;
 /** @type {number} */
google.visualization.BarFormatOptions.prototype.min;
 /** @type {boolean} */
google.visualization.BarFormatOptions.prototype.showValue;
 /** @type {number} */
google.visualization.BarFormatOptions.prototype.width;

/**
 * @constructor
 * @struct
 * @param {!google.visualization.BarFormatOptions=} options
 */
google.visualization.BarFormat = function(options) {};

/**
 * @constructor
 * @struct
 */
google.visualization.ColorFormat = function() {};

/**
 * Specifies a foreground color and/or background color to a cell, depending on the cell value. Any cell with a value in the specified from—to range will be assigned color and bgcolor. It is important to realize that the range is non-inclusive, because creating a range from 1—1,000 and a second from 1,000— 2,000 will not cover the value 1,000!
 * 
 * @param {?} from - [String, Number, Date, DateTime, or TimeOfDay] The lower boundary (inclusive) of the range, or null. If null, it will match -∞. String boundaries are compared alphabetically against string values.
 * @param {?} to - [String, Number, Date, DateTime, or TimeOfDay] The high boundary (non-inclusive) of the range, or null. If null, it will match +∞. String boundaries are compared alphabetically against string values.
 * @param {string} color - The color to apply to text in matching cells. Values can be either '#RRGGBB' values or defined color constants, (example: '#FF0000' or 'red').
 * @param {string} bgcolor - The color to apply to the background of matching cells. Values can be either '#RRGGBB' values or defined color constants, (example: '#FF0000' or 'red').
 * @return {void}
 */
google.visualization.ColorFormat.prototype.addRange = function(from, to, color, bgcolor) {};

/**
 * Assigns a background color from a range, according to the cell value. The color is scaled to match the cell's value within a range from a lower boundary color to an upper boundary color. Note that this method cannot compare string values, as addRange() can. Tip: Color ranges are often hard for viewers to gauge accurately; the simplest and easiest to read range is from a fully saturated color to white (e.g., #FF0000—FFFFFF).
 * 
 * @param {?} from - [Number, Date, DateTime, or TimeOfDay] The lower boundary (inclusive) of the range, or null. If null, it will match -∞.
 * @param {?} to - [Number, Date, DateTime, or TimeOfDay] The higher boundary (non-inclusive) of the range, or null. If null, it will match +∞.
 * @param {string} color - The color to apply to text in matching cells. This color is the same for all cells, no matter what their value.
 * @param {string} fromBgColor - The background color for cells holding values at the low end of the gradient. Values can be either '#RRGGBB' values or defined color constants, (example: '#FF0000' or 'red').
 * @param {string} toBgColor - The background color for cells holding values at the high end of the gradient. Values can be either '#RRGGBB' values or defined color constants, (example: '#FF0000' or 'red').
 * @return {void}
 */
google.visualization.ColorFormat.prototype.addGradientRange = function(from, to, color, fromBgColor, toBgColor) {};
/**
 * @record
 * @struct
 */
google.visualization.DateFormatOptions = function() {};
 /** @type {string} */
google.visualization.DateFormatOptions.prototype.formatType;
 /** @type {string} */
google.visualization.DateFormatOptions.prototype.pattern;
 /** @type {number} */
google.visualization.DateFormatOptions.prototype.timeZone;

/**
 * @constructor
 * @struct
 * @param {!google.visualization.DateFormatOptions} options
 */
google.visualization.DateFormat = function(options) {};

/**
 * Returns the formatted value of a given value. This method does not require a DataTable.
 * @param {!Date} value
 * @return {string}
 */
google.visualization.DateFormat.prototype.formatValue = function(value) {};
/**
 * @record
 * @struct
 */
google.visualization.NumberFormatOptions = function() {};
 /** @type {string} */
google.visualization.NumberFormatOptions.prototype.decimalSymbol;
 /** @type {number} */
google.visualization.NumberFormatOptions.prototype.fractionDigits;
 /** @type {string} */
google.visualization.NumberFormatOptions.prototype.groupingSymbol;
 /** @type {string} */
google.visualization.NumberFormatOptions.prototype.negativeColor;
 /** @type {boolean} */
google.visualization.NumberFormatOptions.prototype.negativeParens;
 /** @type {string} */
google.visualization.NumberFormatOptions.prototype.pattern;
 /** @type {string} */
google.visualization.NumberFormatOptions.prototype.prefix;
 /** @type {string} */
google.visualization.NumberFormatOptions.prototype.suffix;

/**
 * @constructor
 * @struct
 * @param {!google.visualization.NumberFormatOptions=} options
 */
google.visualization.NumberFormat = function(options) {};

/**
 * Returns the formatted value of a given value. This method does not require a DataTable.
 * @param {number} value
 * @return {string}
 */
google.visualization.NumberFormat.prototype.formatValue = function(value) {};

/**
 * @constructor
 * @struct
 * Constructor.
 * Does not take an options object. Instead, it takes a string pattern parameter.
 * This is a string that describes which column values to put into the destination column, along with any arbitrary text. Embed placeholders in your string to indicate a value from another column to embed. The placeholders are {#}, where # is a the index of a source column to use. The index is an index in the srcColumnIndices array from the format() method below. To include a literal { or } character, escape it like this: \{ or \}. To include a literal \ mark, escape it as \\.
 * @param {string} pattern
 */
google.visualization.PatternFormat = function(pattern) {};

/**
 * The standard formatting call, with a few additional parameters
 * 
 * @param {!google.visualization.DataTable} dataTable - The DataTable on which to operate.
 * @param {!Array<number>} srcColumnIndices - An array of one or more (zero-based) column indices to pull as the sources from the underlying DataTable. This will be used as a data source for the pattern parameter in the constructor. The column numbers do not have to be in sorted order.
 * @param {number=} opt_dstColumnIndex - The destination column to place the output of the pattern manipulation. If not specified, the first element in srcColumIndices will be used as the destination.
 * @return {void}
 */
google.visualization.PatternFormat.prototype.format = function(dataTable, srcColumnIndices, opt_dstColumnIndex) {};
/**
 * @extends {google.visualization.CoreChartBase}
 * @constructor
 * @struct
 */
google.visualization.OrgChart = function() {};

/**
 * @param {!google.visualization.DataTable|!google.visualization.DataView} data
 * @param {!google.visualization.OrgChartOptions} options
 * @return {void}
 */
google.visualization.OrgChart.prototype.draw = function(data, options) {};

/**
 * @param {number} row
 * @param {boolean} collapsed
 * @return {void}
 */
google.visualization.OrgChart.prototype.collapse = function(row, collapsed) {};

/**
 * @param {number} row
 * @return {!Array<number>}
 */
google.visualization.OrgChart.prototype.getChildrenIndexes = function(row) {};

/**
 * @return {!Array<number>}
 */
google.visualization.OrgChart.prototype.getCollapsedNodes = function() {};
/**
 * @record
 * @struct
 */
google.visualization.OrgChartOptions = function() {};
 /** @type {boolean} */
google.visualization.OrgChartOptions.prototype.allowCollapse;
 /** @type {boolean} */
google.visualization.OrgChartOptions.prototype.allowHtml;
 /** @type {string} */
google.visualization.OrgChartOptions.prototype.color;
 /** @type {string} */
google.visualization.OrgChartOptions.prototype.nodeClass;
 /** @type {string} */
google.visualization.OrgChartOptions.prototype.selectedNodeClass;
 /** @type {string} */
google.visualization.OrgChartOptions.prototype.selectionColor;
 /** @type {string} */
google.visualization.OrgChartOptions.prototype.size;
