/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/he/index.d.ts:

/* TODO: NamespaceExportDeclaration in  */
 /** @type {string} */
var version;
/**
 * @record
 * @struct
 */
function EncodeOptions() {}
 /** @type {boolean} */
EncodeOptions.prototype.useNamedReferences;
 /** @type {boolean} */
EncodeOptions.prototype.encodeEverything;
 /** @type {boolean} */
EncodeOptions.prototype.strict;
 /** @type {boolean} */
EncodeOptions.prototype.allowUnsafeSymbols;
/**
 * @record
 * @struct
 */
function Encode() {}

/* TODO: CallSignature:  */
 /** @type {?} */
Encode.prototype.options;
 /** @type {?} */
var encode;
/**
 * @record
 * @struct
 */
function DecodeOptions() {}
 /** @type {boolean} */
DecodeOptions.prototype.isAttributeValue;
 /** @type {boolean} */
DecodeOptions.prototype.strict;
/**
 * @record
 * @struct
 */
function Decode() {}

/* TODO: CallSignature:  */
 /** @type {?} */
Decode.prototype.options;
 /** @type {?} */
var decode;

/**
 * Escape XML entities
 * 
 * This function takes a string of text and escapes it for use in text
 * contexts in XML or HTML documents. Only the following characters are
 * escaped: &, <, >, ", ', and `.
 * @param {string} text
 * @return {string}
 */
function escape(text) {}
 /** @type {?} */
var unescape;
