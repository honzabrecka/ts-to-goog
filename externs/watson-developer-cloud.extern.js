/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/watson-developer-cloud/index.d.ts:

/**
 * @constructor
 * @struct
 * @param {?} options
 */
function AlchemyDataNewsV1(options) {}
 /** @type {string} */
AlchemyDataNewsV1.URL;

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
AlchemyDataNewsV1.prototype.getNews = function(params, callback) {};

/**
 * @constructor
 * @struct
 * @param {?} options
 */
function AlchemyLanguageV1(options) {}
 /** @type {string} */
AlchemyLanguageV1.URL;

/**
 * @param {?} _params
 * @param {?} callback
 * @return {?}
 */
AlchemyLanguageV1.prototype.authors = function(_params, callback) {};

/**
 * @param {?} _params
 * @param {?} callback
 * @return {?}
 */
AlchemyLanguageV1.prototype.category = function(_params, callback) {};

/**
 * @param {?} _params
 * @param {?} callback
 * @return {?}
 */
AlchemyLanguageV1.prototype.combined = function(_params, callback) {};

/**
 * @param {?} _params
 * @param {?} callback
 * @return {?}
 */
AlchemyLanguageV1.prototype.concepts = function(_params, callback) {};

/**
 * @param {?} _params
 * @param {?} callback
 * @return {?}
 */
AlchemyLanguageV1.prototype.dates = function(_params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
AlchemyLanguageV1.prototype.emotion = function(params, callback) {};

/**
 * @param {?} _params
 * @param {?} callback
 * @return {?}
 */
AlchemyLanguageV1.prototype.entities = function(_params, callback) {};

/**
 * @param {?} _params
 * @param {?} callback
 * @return {?}
 */
AlchemyLanguageV1.prototype.feeds = function(_params, callback) {};

/**
 * @param {?} _params
 * @param {?} callback
 * @return {?}
 */
AlchemyLanguageV1.prototype.keywords = function(_params, callback) {};

/**
 * @param {?} _params
 * @param {?} callback
 * @return {?}
 */
AlchemyLanguageV1.prototype.language = function(_params, callback) {};

/**
 * @param {?} _params
 * @param {?} callback
 * @return {?}
 */
AlchemyLanguageV1.prototype.microformats = function(_params, callback) {};

/**
 * @param {?} _params
 * @param {?} callback
 * @return {?}
 */
AlchemyLanguageV1.prototype.publicationDate = function(_params, callback) {};

/**
 * @param {?} _params
 * @param {?} callback
 * @return {?}
 */
AlchemyLanguageV1.prototype.relations = function(_params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
AlchemyLanguageV1.prototype.sentiment = function(params, callback) {};

/**
 * @param {?} _params
 * @param {?} callback
 * @return {?}
 */
AlchemyLanguageV1.prototype.taxonomy = function(_params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
AlchemyLanguageV1.prototype.text = function(params, callback) {};

/**
 * @param {?} _params
 * @param {?} callback
 * @return {?}
 */
AlchemyLanguageV1.prototype.title = function(_params, callback) {};

/**
 * @param {?} _params
 * @param {?} callback
 * @return {?}
 */
AlchemyLanguageV1.prototype.typedRelations = function(_params, callback) {};

/**
 * @constructor
 * @struct
 * @param {?} options
 */
function AlchemyVisionV1(options) {}
 /** @type {string} */
AlchemyVisionV1.URL;

/**
 * @param {?} _params
 * @param {?} callback
 * @return {?}
 */
AlchemyVisionV1.prototype.getImageKeywords = function(_params, callback) {};

/**
 * @param {?} _params
 * @param {?} callback
 * @return {?}
 */
AlchemyVisionV1.prototype.getImageLinks = function(_params, callback) {};

/**
 * @param {?} _params
 * @param {?} callback
 * @return {?}
 */
AlchemyVisionV1.prototype.getImageSceneText = function(_params, callback) {};

/**
 * @param {?} _params
 * @param {?} callback
 * @return {?}
 */
AlchemyVisionV1.prototype.recognizeFaces = function(_params, callback) {};

/**
 * @constructor
 * @struct
 * @param {?} options
 */
function AuthorizationV1(options) {}
 /** @type {string} */
AuthorizationV1.URL;

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
AuthorizationV1.prototype.getToken = function(params, callback) {};

/**
 * @constructor
 * @struct
 * @param {?} options
 */
function ConversationV1(options) {}
 /** @type {string} */
ConversationV1.URL;
 /** @type {string} */
ConversationV1.VERSION_DATE_2016_07_11;
 /** @type {string} */
ConversationV1.VERSION_DATE_2016_09_20;
 /** @type {string} */
ConversationV1.VERSION_DATE_2017_02_03;
 /** @type {string} */
ConversationV1.VERSION_DATE_2017_04_21;

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.createCounterExample = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.createEntity = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.createExample = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.createIntent = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.createSynonym = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.createValue = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.createWorkspace = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.deleteCounterExample = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.deleteEntity = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.deleteExample = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.deleteIntent = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.deleteSynonym = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.deleteValue = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.deleteWorkspace = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.getCounterExample = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.getCounterExamples = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.getEntities = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.getEntity = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.getExample = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.getExamples = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.getIntent = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.getIntents = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.getLogs = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.getSynonym = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.getSynonyms = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.getValue = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.getValues = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.getWorkspace = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.listWorkspaces = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.message = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.updateCounterExample = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.updateEntity = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.updateExample = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.updateIntent = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.updateSynonym = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.updateValue = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.updateWorkspace = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1.prototype.workspaceStatus = function(params, callback) {};

/**
 * @constructor
 * @struct
 * @param {?} options
 */
function ConversationV1Experimental(options) {}
 /** @type {string} */
ConversationV1Experimental.URL;

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ConversationV1Experimental.prototype.message = function(params, callback) {};

/**
 * @constructor
 * @struct
 * @param {?} options
 */
function DialogV1(options) {}
 /** @type {string} */
DialogV1.URL;

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
DialogV1.prototype.conversation = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
DialogV1.prototype.createDialog = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
DialogV1.prototype.deleteDialog = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
DialogV1.prototype.getContent = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
DialogV1.prototype.getConversation = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
DialogV1.prototype.getDialogs = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
DialogV1.prototype.getProfile = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
DialogV1.prototype.updateContent = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
DialogV1.prototype.updateDialog = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
DialogV1.prototype.updateProfile = function(params, callback) {};

/**
 * @constructor
 * @struct
 * @param {?} options
 */
function DiscoveryV1(options) {}
 /** @type {string} */
DiscoveryV1.URL;
 /** @type {string} */
DiscoveryV1.VERSION_DATE_2016_12_15;
 /** @type {string} */
DiscoveryV1.VERSION_DATE_2017_04_27;

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
DiscoveryV1.prototype.addDocument = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
DiscoveryV1.prototype.createCollection = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
DiscoveryV1.prototype.createEnvironment = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
DiscoveryV1.prototype.deleteCollection = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
DiscoveryV1.prototype.deleteDocument = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
DiscoveryV1.prototype.deleteEnvironment = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
DiscoveryV1.prototype.getCollection = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
DiscoveryV1.prototype.getCollections = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
DiscoveryV1.prototype.getConfiguration = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
DiscoveryV1.prototype.getConfigurations = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
DiscoveryV1.prototype.getEnvironment = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
DiscoveryV1.prototype.getEnvironments = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
DiscoveryV1.prototype.query = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
DiscoveryV1.prototype.updateDocument = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
DiscoveryV1.prototype.updateEnvironment = function(params, callback) {};

/**
 * @constructor
 * @struct
 * @param {?} options
 */
function DiscoveryV1Experimental(options) {}
 /** @type {string} */
DiscoveryV1Experimental.URL;
 /** @type {string} */
DiscoveryV1Experimental.VERSION_DATE_2016_07_11;

/**
 * @param {?} params
 * @param {?} collectionId
 * @param {?} callback
 * @return {?}
 */
DiscoveryV1Experimental.prototype.getCollection = function(params, collectionId, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
DiscoveryV1Experimental.prototype.getCollections = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
DiscoveryV1Experimental.prototype.getEnvironment = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
DiscoveryV1Experimental.prototype.getEnvironments = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
DiscoveryV1Experimental.prototype.query = function(params, callback) {};

/**
 * @constructor
 * @struct
 * @param {?} options
 */
function DocumentConversionV1(options) {}
 /** @type {string} */
DocumentConversionV1.URL;

/**
 * @return {void}
 */
DocumentConversionV1.prototype.addDocumentToBatch = function() {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
DocumentConversionV1.prototype.convert = function(params, callback) {};

/**
 * @return {void}
 */
DocumentConversionV1.prototype.createBatch = function() {};

/**
 * @return {void}
 */
DocumentConversionV1.prototype.createJob = function() {};

/**
 * @return {void}
 */
DocumentConversionV1.prototype.getBatch = function() {};

/**
 * @return {void}
 */
DocumentConversionV1.prototype.getBatchDocument = function() {};

/**
 * @return {void}
 */
DocumentConversionV1.prototype.getBatchDocuments = function() {};

/**
 * @return {void}
 */
DocumentConversionV1.prototype.getBatches = function() {};

/**
 * @return {void}
 */
DocumentConversionV1.prototype.getDocument = function() {};

/**
 * @return {void}
 */
DocumentConversionV1.prototype.getDocuments = function() {};

/**
 * @return {void}
 */
DocumentConversionV1.prototype.getJob = function() {};

/**
 * @return {void}
 */
DocumentConversionV1.prototype.getJobLog = function() {};

/**
 * @return {void}
 */
DocumentConversionV1.prototype.getJobs = function() {};

/**
 * @return {void}
 */
DocumentConversionV1.prototype.getOutput = function() {};

/**
 * @return {void}
 */
DocumentConversionV1.prototype.getOutputs = function() {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
DocumentConversionV1.prototype.index = function(params, callback) {};

/**
 * @return {void}
 */
DocumentConversionV1.prototype.updateBatch = function() {};

/**
 * @return {void}
 */
DocumentConversionV1.prototype.uploadDocument = function() {};

/**
 * @constructor
 * @struct
 * @param {?} options
 */
function LanguageTranslationV2(options) {}
 /** @type {string} */
LanguageTranslationV2.URL;

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
LanguageTranslationV2.prototype.createModel = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
LanguageTranslationV2.prototype.deleteModel = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
LanguageTranslationV2.prototype.getIdentifiableLanguages = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
LanguageTranslationV2.prototype.getModel = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
LanguageTranslationV2.prototype.getModels = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
LanguageTranslationV2.prototype.identify = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
LanguageTranslationV2.prototype.translate = function(params, callback) {};

/**
 * @constructor
 * @struct
 * @param {?} options
 */
function LanguageTranslatorV2(options) {}
 /** @type {string} */
LanguageTranslatorV2.URL;

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
LanguageTranslatorV2.prototype.createModel = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
LanguageTranslatorV2.prototype.deleteModel = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
LanguageTranslatorV2.prototype.getIdentifiableLanguages = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
LanguageTranslatorV2.prototype.getModel = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
LanguageTranslatorV2.prototype.getModels = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
LanguageTranslatorV2.prototype.identify = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
LanguageTranslatorV2.prototype.translate = function(params, callback) {};

/**
 * @constructor
 * @struct
 * @param {?} options
 */
function NaturalLanguageClassifierV1(options) {}
 /** @type {string} */
NaturalLanguageClassifierV1.URL;

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
NaturalLanguageClassifierV1.prototype.classify = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
NaturalLanguageClassifierV1.prototype.create = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
NaturalLanguageClassifierV1.prototype.list = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
NaturalLanguageClassifierV1.prototype.remove = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
NaturalLanguageClassifierV1.prototype.status = function(params, callback) {};

/**
 * @constructor
 * @struct
 * @param {?} options
 */
function NaturalLanguageUnderstandingV1(options) {}
 /** @type {string} */
NaturalLanguageUnderstandingV1.URL;
 /** @type {string} */
NaturalLanguageUnderstandingV1.VERSION_DATE_2016_01_23;
 /** @type {string} */
NaturalLanguageUnderstandingV1.VERSION_DATE_2017_02_27;

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
NaturalLanguageUnderstandingV1.prototype.analyze = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
NaturalLanguageUnderstandingV1.prototype.deleteModel = function(params, callback) {};

/**
 * @param {?} name
 * @return {?}
 */
NaturalLanguageUnderstandingV1.prototype.getCredentialsFromBluemix = function(name) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
NaturalLanguageUnderstandingV1.prototype.listModels = function(params, callback) {};

/**
 * @constructor
 * @struct
 * @param {?} options
 */
function PersonalityInsightsV2(options) {}
 /** @type {string} */
PersonalityInsightsV2.URL;

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
PersonalityInsightsV2.prototype.profile = function(params, callback) {};

/**
 * @constructor
 * @struct
 * @param {?} options
 */
function PersonalityInsightsV3(options) {}
 /** @type {string} */
PersonalityInsightsV3.URL;

/**
 * @param {?} _params
 * @param {?} callback
 * @return {?}
 */
PersonalityInsightsV3.prototype.profile = function(_params, callback) {};

/**
 * @constructor
 * @struct
 * @param {?} options
 */
function RetrieveAndRankV1(options) {}
 /** @type {string} */
RetrieveAndRankV1.URL;

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
RetrieveAndRankV1.prototype.createCluster = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
RetrieveAndRankV1.prototype.createCollection = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
RetrieveAndRankV1.prototype.createRanker = function(params, callback) {};

/**
 * @param {?} params
 * @return {?}
 */
RetrieveAndRankV1.prototype.createSolrClient = function(params) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
RetrieveAndRankV1.prototype.deleteCluster = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
RetrieveAndRankV1.prototype.deleteCollection = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
RetrieveAndRankV1.prototype.deleteConfig = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
RetrieveAndRankV1.prototype.deleteRanker = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
RetrieveAndRankV1.prototype.getClusterStats = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
RetrieveAndRankV1.prototype.getConfig = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
RetrieveAndRankV1.prototype.getResizeStatus = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
RetrieveAndRankV1.prototype.listClusters = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
RetrieveAndRankV1.prototype.listCollections = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
RetrieveAndRankV1.prototype.listConfigs = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
RetrieveAndRankV1.prototype.listRankers = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
RetrieveAndRankV1.prototype.pollCluster = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
RetrieveAndRankV1.prototype.rank = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
RetrieveAndRankV1.prototype.rankerStatus = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
RetrieveAndRankV1.prototype.resizeCluster = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
RetrieveAndRankV1.prototype.uploadConfig = function(params, callback) {};

/**
 * @constructor
 * @struct
 * @param {?} options
 */
function SpeechToTextV1(options) {}
 /** @type {string} */
SpeechToTextV1.ERR_NO_CORPORA;
 /** @type {string} */
SpeechToTextV1.ERR_TIMEOUT;
 /** @type {string} */
SpeechToTextV1.URL;

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
SpeechToTextV1.prototype.addCorpus = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
SpeechToTextV1.prototype.addWord = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
SpeechToTextV1.prototype.addWords = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
SpeechToTextV1.prototype.createCustomization = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
SpeechToTextV1.prototype.createRecognitionJob = function(params, callback) {};

/**
 * @param {?} params
 * @return {?}
 */
SpeechToTextV1.prototype.createRecognizeStream = function(params) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
SpeechToTextV1.prototype.createSession = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
SpeechToTextV1.prototype.deleteCorpus = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
SpeechToTextV1.prototype.deleteCustomization = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
SpeechToTextV1.prototype.deleteRecognitionJob = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
SpeechToTextV1.prototype.deleteSession = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
SpeechToTextV1.prototype.deleteWord = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
SpeechToTextV1.prototype.getCorpora = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
SpeechToTextV1.prototype.getCorpus = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
SpeechToTextV1.prototype.getCustomization = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
SpeechToTextV1.prototype.getCustomizations = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
SpeechToTextV1.prototype.getModel = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
SpeechToTextV1.prototype.getModels = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
SpeechToTextV1.prototype.getRecognitionJob = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
SpeechToTextV1.prototype.getRecognitionJobs = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
SpeechToTextV1.prototype.getRecognizeStatus = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
SpeechToTextV1.prototype.getWord = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
SpeechToTextV1.prototype.getWords = function(params, callback) {};

/**
 * @param {?} params
 * @param {...?} args
 * @return {?}
 */
SpeechToTextV1.prototype.observeResult = function(params, args) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
SpeechToTextV1.prototype.recognize = function(params, callback) {};

/**
 * @param {?} params
 * @param {...?} args
 * @return {?}
 */
SpeechToTextV1.prototype.recognizeLive = function(params, args) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
SpeechToTextV1.prototype.registerCallback = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
SpeechToTextV1.prototype.resetCustomization = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
SpeechToTextV1.prototype.trainCustomization = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
SpeechToTextV1.prototype.whenCorporaAnalyzed = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
SpeechToTextV1.prototype.whenCustomizationReady = function(params, callback) {};

/**
 * @constructor
 * @struct
 * @param {?} options
 */
function TextToSpeechV1(options) {}
 /** @type {string} */
TextToSpeechV1.URL;

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
TextToSpeechV1.prototype.addWord = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
TextToSpeechV1.prototype.addWords = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
TextToSpeechV1.prototype.createCustomization = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
TextToSpeechV1.prototype.deleteCustomization = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
TextToSpeechV1.prototype.deleteWord = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
TextToSpeechV1.prototype.getCustomization = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
TextToSpeechV1.prototype.getCustomizations = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
TextToSpeechV1.prototype.getWord = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
TextToSpeechV1.prototype.getWords = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
TextToSpeechV1.prototype.pronunciation = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
TextToSpeechV1.prototype.synthesize = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
TextToSpeechV1.prototype.updateCustomization = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
TextToSpeechV1.prototype.voice = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
TextToSpeechV1.prototype.voices = function(params, callback) {};

/**
 * @constructor
 * @struct
 * @param {?} options
 */
function ToneAnalyzerV3(options) {}
 /** @type {string} */
ToneAnalyzerV3.URL;

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ToneAnalyzerV3.prototype.tone = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
ToneAnalyzerV3.prototype.tone_chat = function(params, callback) {};

/**
 * @constructor
 * @struct
 * @param {?} options
 */
function TradeoffAnalyticsV1(options) {}
 /** @type {string} */
TradeoffAnalyticsV1.URL;

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
TradeoffAnalyticsV1.prototype.dilemmas = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
TradeoffAnalyticsV1.prototype.events = function(params, callback) {};

/**
 * @constructor
 * @struct
 * @param {?} options
 */
function VisualRecognitionV3(options) {}
 /** @type {string} */
VisualRecognitionV3.URL;

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
VisualRecognitionV3.prototype.addImage = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
VisualRecognitionV3.prototype.classify = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
VisualRecognitionV3.prototype.createClassifier = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
VisualRecognitionV3.prototype.createCollection = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
VisualRecognitionV3.prototype.deleteClassifier = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
VisualRecognitionV3.prototype.deleteCollection = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
VisualRecognitionV3.prototype.deleteImage = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
VisualRecognitionV3.prototype.deleteImageMetadata = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
VisualRecognitionV3.prototype.detectFaces = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
VisualRecognitionV3.prototype.findSimilar = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
VisualRecognitionV3.prototype.getClassifier = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
VisualRecognitionV3.prototype.getCollection = function(params, callback) {};

/**
 * @return {?}
 */
VisualRecognitionV3.prototype.getCredentialsFromBluemix = function() {};

/**
 * @param {?} name
 * @return {?}
 */
VisualRecognitionV3.prototype.getCredentialsFromEnvironment = function(name) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
VisualRecognitionV3.prototype.getImage = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
VisualRecognitionV3.prototype.getImageMetadata = function(params, callback) {};

/**
 * @param {?} options
 * @return {?}
 */
VisualRecognitionV3.prototype.initCredentials = function(options) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
VisualRecognitionV3.prototype.listClassifiers = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
VisualRecognitionV3.prototype.listCollections = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
VisualRecognitionV3.prototype.listImages = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
VisualRecognitionV3.prototype.recognizeText = function(params, callback) {};

/**
 * @param {?} parameters
 * @param {?} cb
 * @return {?}
 */
VisualRecognitionV3.prototype.request = function(parameters, cb) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
VisualRecognitionV3.prototype.retrainClassifier = function(params, callback) {};

/**
 * @param {?} params
 * @param {?} callback
 * @return {?}
 */
VisualRecognitionV3.prototype.setImageMetadata = function(params, callback) {};
