/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/swagger-parser/index.d.ts:

/* TODO: ImportDeclaration in  */
/** @const */
var SwaggerParser = {};
 /** @type {?} */
SwaggerParser.api;
 /** @type {?} */
SwaggerParser.$ref;
/**
 * @record
 * @struct
 */
function Options() {}
 /** @type {?} */
Options.prototype.allow;
 /** @type {?} */
Options.prototype.$ref;
 /** @type {?} */
Options.prototype.validate;
 /** @type {?} */
Options.prototype.cache;

/**
 * @param {(string|?)} api
 * @param {?=} options_or_callback
 * @param {?=} callback
 * @return {!Promise<?>|void}
 */
function parse(api, options_or_callback, callback) {}

/**
 * @param {(string|?)} api
 * @param {?=} options_or_callback
 * @param {?=} callback
 * @return {!Promise<?>|void}
 */
function validate(api, options_or_callback, callback) {}

/**
 * @param {(string|?)} api
 * @param {?=} options_or_callback
 * @param {?=} callback
 * @return {!Promise<?>|void}
 */
function dereference(api, options_or_callback, callback) {}

/**
 * @param {(string|?)} api
 * @param {?=} options_or_callback
 * @param {?=} callback
 * @return {!Promise<?>|void}
 */
function bundle(api, options_or_callback, callback) {}

/**
 * @param {(string|?)} api
 * @param {?=} options_or_callback
 * @param {?=} callback
 * @return {!Promise<?>|void}
 */
function resolve(api, options_or_callback, callback) {}
