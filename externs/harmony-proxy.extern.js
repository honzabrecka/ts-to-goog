/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/harmony-proxy/index.d.ts:
/** @const */
var harmonyProxy = {};

/** @typedef {(string|number|symbol)} */
harmonyProxy.PropertyKey;
/**
 * @record
 * @struct
 */
harmonyProxy.ProxyHandler = function() {};

/**
 * @param {T} target
 * @return {?}
 */
harmonyProxy.ProxyHandler.prototype.getPrototypeOf = function(target) {};

/**
 * @param {T} target
 * @param {?} v
 * @return {boolean}
 */
harmonyProxy.ProxyHandler.prototype.setPrototypeOf = function(target, v) {};

/**
 * @param {T} target
 * @return {boolean}
 */
harmonyProxy.ProxyHandler.prototype.isExtensible = function(target) {};

/**
 * @param {T} target
 * @return {boolean}
 */
harmonyProxy.ProxyHandler.prototype.preventExtensions = function(target) {};

/**
 * @param {T} target
 * @param {(string|number|symbol)} p
 * @return {!PropertyDescriptor}
 */
harmonyProxy.ProxyHandler.prototype.getOwnPropertyDescriptor = function(target, p) {};

/**
 * @param {T} target
 * @param {(string|number|symbol)} p
 * @return {boolean}
 */
harmonyProxy.ProxyHandler.prototype.has = function(target, p) {};

/**
 * @param {T} target
 * @param {(string|number|symbol)} p
 * @param {?} receiver
 * @return {?}
 */
harmonyProxy.ProxyHandler.prototype.get = function(target, p, receiver) {};

/**
 * @param {T} target
 * @param {(string|number|symbol)} p
 * @param {?} value
 * @param {?} receiver
 * @return {boolean}
 */
harmonyProxy.ProxyHandler.prototype.set = function(target, p, value, receiver) {};

/**
 * @param {T} target
 * @param {(string|number|symbol)} p
 * @return {boolean}
 */
harmonyProxy.ProxyHandler.prototype.deleteProperty = function(target, p) {};

/**
 * @param {T} target
 * @param {(string|number|symbol)} p
 * @param {!PropertyDescriptor} attributes
 * @return {boolean}
 */
harmonyProxy.ProxyHandler.prototype.defineProperty = function(target, p, attributes) {};

/**
 * @param {T} target
 * @return {!Array<(string|number|symbol)>}
 */
harmonyProxy.ProxyHandler.prototype.enumerate = function(target) {};

/**
 * @param {T} target
 * @return {!Array<(string|number|symbol)>}
 */
harmonyProxy.ProxyHandler.prototype.ownKeys = function(target) {};

/**
 * @param {T} target
 * @param {?} thisArg
 * @param {?=} argArray
 * @return {?}
 */
harmonyProxy.ProxyHandler.prototype.apply = function(target, thisArg, argArray) {};

/**
 * @param {T} target
 * @param {?} thisArg
 * @param {?=} argArray
 * @return {?}
 */
harmonyProxy.ProxyHandler.prototype.construct = function(target, thisArg, argArray) {};
/**
 * @record
 * @struct
 */
harmonyProxy.ProxyConstructor = function() {};

/* TODO: ConstructSignature: harmonyProxy */

/**
 * @template T
 * @param {T} target
 * @param {!harmonyProxy.ProxyHandler<T>} handler
 * @return {{proxy: T, revoke: function(): void}}
 */
harmonyProxy.ProxyConstructor.prototype.revocable = function(target, handler) {};
 /** @type {!harmonyProxy.ProxyConstructor} */
var _Proxy;

/* TODO: ExportAssignment in  */
