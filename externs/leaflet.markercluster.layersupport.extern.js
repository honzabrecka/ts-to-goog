/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/leaflet.markercluster.layersupport/index.d.ts:

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: ExportAssignment in  */
/**
 * @extends {L.MarkerClusterGroup}
 * @record
 * @struct
 */
L.MarkerClusterGroup.LayerSupport = function() {};

/**
 * Stamps the passed layers as being part of this group, but without adding
 * them to the map right now.
 * @param {(!L.Layer|!Array<!L.Layer>)} layers
 * @return {LayerSupport}
 */
L.MarkerClusterGroup.LayerSupport.prototype.checkIn = function(layers) {};

/**
 * Un-stamps the passed layers from being part of this group. It has to
 * remove them from map (if they are) since they will no longer cluster.
 * @param {(!L.Layer|!Array<!L.Layer>)} layers
 * @return {LayerSupport}
 */
L.MarkerClusterGroup.LayerSupport.prototype.checkOut = function(layers) {};

/**
 * Create a layer support marker cluster group, optionally given marker cluster group options.
 * @param {!L.MarkerClusterGroupOptions=} options
 * @return {!L.MarkerClusterGroup.LayerSupport}
 */
L.markerClusterGroup.layerSupport = function(options) {};
