/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/aframe/index.d.ts:
 /** @type {!AFrame.AFrameGlobal} */
var AFRAME;
 /** @type {boolean} */
var hasNativeWebVRImplementation;

/**
 * @template T
 * @param {string} selectors
 * @return {!AFrame.Scene|T}
 */
NodeSelector.prototype.querySelector = function(selectors) {};

/**
 * @param {string} selectors
 * @return {!NodeListOf<(!AFrame.Entity<?>|!Element)>}
 */
NodeSelector.prototype.querySelectorAll = function(selectors) {};

/**
 * @param {string} tagName
 * @return {!AFrame.Entity<!AFrame.ObjectMap<!AFrame.Component>>}
 */
Document.prototype.createElement = function(tagName) {};
/** @const */
var AFrame = {};
/**
 * @record
 * @struct
 */
AFrame.ObjectMap = function() {};

/* TODO: IndexSignature: AFrame */
/**
 * @record
 * @struct
 */
AFrame.AFrameGlobal = function() {};
 /** @type {!AFrame.Entity<!AFrame.ObjectMap<!AFrame.Component>>} */
AFrame.AFrameGlobal.prototype.AEntity;
 /** @type {!AFrame.ANode} */
AFrame.AFrameGlobal.prototype.ANode;
 /** @type {!AFrame.Scene} */
AFrame.AFrameGlobal.prototype.AScene;
 /** @type {!Object<string,!AFrame.ComponentDescriptor>} */
AFrame.AFrameGlobal.prototype.components;
 /** @type {!Object<string,!AFrame.GeometryDescriptor>} */
AFrame.AFrameGlobal.prototype.geometries;
 /** @type {!Object<string,!AFrame.Entity<!AFrame.ObjectMap<!AFrame.Component>>>} */
AFrame.AFrameGlobal.prototype.primitives;
 /** @type {!AFrame.SchemaUtils} */
AFrame.AFrameGlobal.prototype.schema;
 /** @type {!Object<string,!AFrame.ShaderDescriptor>} */
AFrame.AFrameGlobal.prototype.shaders;
 /** @type {!Object<string,!AFrame.System>} */
AFrame.AFrameGlobal.prototype.systems;
 /** @type {?} */
AFrame.AFrameGlobal.prototype.THREE;
 /** @type {?} */
AFrame.AFrameGlobal.prototype.TWEEN;
 /** @type {!AFrame.Utils} */
AFrame.AFrameGlobal.prototype.utils;
 /** @type {string} */
AFrame.AFrameGlobal.prototype.version;

/**
 * @param {string} name
 * @param {!AFrame.ComponentDefinition} component
 * @return {!AFrame.ComponentConstructor}
 */
AFrame.AFrameGlobal.prototype.registerComponent = function(name, component) {};

/**
 * @param {string} name
 * @param {!AFrame.ANode} element
 * @return {void}
 */
AFrame.AFrameGlobal.prototype.registerElement = function(name, element) {};

/**
 * @param {string} name
 * @param {?} geometery
 * @return {!AFrame.Geometry}
 */
AFrame.AFrameGlobal.prototype.registerGeometry = function(name, geometery) {};

/**
 * @param {string} name
 * @param {!AFrame.PrimitiveDefinition} primitive
 * @return {void}
 */
AFrame.AFrameGlobal.prototype.registerPrimitive = function(name, primitive) {};

/**
 * @param {string} name
 * @param {?} shader
 * @return {void}
 */
AFrame.AFrameGlobal.prototype.registerShader = function(name, shader) {};

/**
 * @param {string} name
 * @param {!AFrame.SystemDefinition} definition
 * @return {void}
 */
AFrame.AFrameGlobal.prototype.registerSystem = function(name, definition) {};
/**
 * @record
 * @struct
 */
AFrame.Animation = function() {};
 /** @type {string} */
AFrame.Animation.prototype.attribute;
 /** @type {(string|number)} */
AFrame.Animation.prototype.begin;
 /** @type {number} */
AFrame.Animation.prototype.delay;
 /** @type {string} */
AFrame.Animation.prototype.direction;
 /** @type {number} */
AFrame.Animation.prototype.dur;
 /** @type {string} */
AFrame.Animation.prototype.end;
 /** @type {string} */
AFrame.Animation.prototype.fill;
 /** @type {?} */
AFrame.Animation.prototype.from;
 /** @type {(number|string)} */
AFrame.Animation.prototype.repeat;
 /** @type {number} */
AFrame.Animation.prototype.to;

/**
 * @return {void}
 */
AFrame.Animation.prototype.easing = function() {};
/**
 * @record
 * @struct
 */
AFrame.ANode = function() {};
 /** @type {boolean} */
AFrame.ANode.prototype.hasLoaded;

/**
 * @return {!AFrame.Scene}
 */
AFrame.ANode.prototype.closestScene = function() {};

/**
 * @param {string} selector
 * @return {!AFrame.ANode}
 */
AFrame.ANode.prototype.closest = function(selector) {};

/**
 * @param {function(): void=} cb
 * @param {function(!Element): boolean=} childFilter
 * @return {void}
 */
AFrame.ANode.prototype.load = function(cb, childFilter) {};

/**
 * @param {string} id
 * @return {void}
 */
AFrame.ANode.prototype.registerMixin = function(id) {};

/**
 * @param {string} type
 * @param {?} newValue
 * @return {void}
 */
AFrame.ANode.prototype.setAttribute = function(type, newValue) {};

/**
 * @param {string} id
 * @return {void}
 */
AFrame.ANode.prototype.unregisterMixin = function(id) {};

/**
 * @param {string} id
 * @return {void}
 */
AFrame.ANode.prototype.removeMixinListener = function(id) {};

/**
 * @param {!HTMLElement} mixin
 * @return {void}
 */
AFrame.ANode.prototype.attachMixinListener = function(mixin) {};

/**
 * @param {string} name
 * @param {?=} detail
 * @param {boolean=} bubbles
 * @return {void}
 */
AFrame.ANode.prototype.emit = function(name, detail, bubbles) {};

/**
 * @param {string} name
 * @param {?=} detail
 * @param {boolean=} bubbles
 * @return {function(): void}
 */
AFrame.ANode.prototype.emitter = function(name, detail, bubbles) {};
/**
 * @record
 * @struct
 */
AFrame.Behavior = function() {};

/**
 * @return {void}
 */
AFrame.Behavior.prototype.tick = function() {};
/**
 * @record
 * @struct
 */
AFrame.Component = function() {};
 /** @type {string} */
AFrame.Component.prototype.attrName;
 /** @type {?} */
AFrame.Component.prototype.data;
 /** @type {!Array<string>} */
AFrame.Component.prototype.dependencies;
 /** @type {!AFrame.Entity<!AFrame.ObjectMap<!AFrame.Component>>} */
AFrame.Component.prototype.el;
 /** @type {string} */
AFrame.Component.prototype.id;
 /** @type {boolean} */
AFrame.Component.prototype.multiple;
 /** @type {string} */
AFrame.Component.prototype.name;
 /** @type {(!AFrame.SinglePropertySchema<?>|!AFrame.MultiPropertySchema)} */
AFrame.Component.prototype.schema;

/**
 * @return {void}
 */
AFrame.Component.prototype.init = function() {};

/**
 * @return {void}
 */
AFrame.Component.prototype.pause = function() {};

/**
 * @return {void}
 */
AFrame.Component.prototype.play = function() {};

/**
 * @return {void}
 */
AFrame.Component.prototype.remove = function() {};

/**
 * @param {number} time
 * @param {number} timeDelta
 * @return {void}
 */
AFrame.Component.prototype.tick = function(time, timeDelta) {};

/**
 * @param {?} oldData
 * @return {void}
 */
AFrame.Component.prototype.update = function(oldData) {};

/**
 * @return {void}
 */
AFrame.Component.prototype.updateSchema = function() {};

/**
 * @param {(!AFrame.SinglePropertySchema<?>|!AFrame.MultiPropertySchema)} update
 * @return {void}
 */
AFrame.Component.prototype.extendSchema = function(update) {};

/**
 * @return {void}
 */
AFrame.Component.prototype.flushToDOM = function() {};
/**
 * @record
 * @struct
 */
AFrame.ComponentConstructor = function() {};

/* TODO: ConstructSignature: AFrame */
/**
 * @record
 * @struct
 */
AFrame.ComponentDefinition = function() {};
 /** @type {!Array<string>} */
AFrame.ComponentDefinition.prototype.dependencies;
 /** @type {!AFrame.Entity<!AFrame.ObjectMap<!AFrame.Component>>} */
AFrame.ComponentDefinition.prototype.el;
 /** @type {string} */
AFrame.ComponentDefinition.prototype.id;
 /** @type {boolean} */
AFrame.ComponentDefinition.prototype.multiple;
 /** @type {(!AFrame.SinglePropertySchema<?>|!AFrame.MultiPropertySchema)} */
AFrame.ComponentDefinition.prototype.schema;

/* TODO: IndexSignature: AFrame */

/**
 * @return {void}
 */
AFrame.ComponentDefinition.prototype.init = function() {};

/**
 * @return {void}
 */
AFrame.ComponentDefinition.prototype.pause = function() {};

/**
 * @return {void}
 */
AFrame.ComponentDefinition.prototype.play = function() {};

/**
 * @return {void}
 */
AFrame.ComponentDefinition.prototype.remove = function() {};

/**
 * @param {number} time
 * @param {number} timeDelta
 * @return {void}
 */
AFrame.ComponentDefinition.prototype.tick = function(time, timeDelta) {};

/**
 * @param {?} oldData
 * @return {void}
 */
AFrame.ComponentDefinition.prototype.update = function(oldData) {};

/**
 * @return {void}
 */
AFrame.ComponentDefinition.prototype.updateSchema = function() {};
/**
 * @record
 * @struct
 */
AFrame.ComponentDescriptor = function() {};
 /** @type {!AFrame.Component} */
AFrame.ComponentDescriptor.prototype.Component;
 /** @type {!Array<string>} */
AFrame.ComponentDescriptor.prototype.dependencies;
 /** @type {boolean} */
AFrame.ComponentDescriptor.prototype.multiple;

/* TODO: IndexSignature: AFrame */
/**
 * @record
 * @struct
 */
AFrame.Coordinate = function() {};
 /** @type {number} */
AFrame.Coordinate.prototype.x;
 /** @type {number} */
AFrame.Coordinate.prototype.y;
 /** @type {number} */
AFrame.Coordinate.prototype.z;
/**
 * @extends {AFrame.ANode}
 * @record
 * @struct
 */
AFrame.Entity = function() {};
 /** @type {C} */
AFrame.Entity.prototype.components;
 /** @type {boolean} */
AFrame.Entity.prototype.isPlaying;
 /** @type {?} */
AFrame.Entity.prototype.object3D;
 /** @type {!AFrame.ObjectMap<?>} */
AFrame.Entity.prototype.object3DMap;
 /** @type {!AFrame.Scene} */
AFrame.Entity.prototype.sceneEl;

/**
 * @param {string} name
 * @return {void}
 */
AFrame.Entity.prototype.addState = function(name) {};

/**
 * @param {boolean=} recursive
 * @return {void}
 */
AFrame.Entity.prototype.flushToDOM = function(recursive) {};

/**
 * @deprecated since 0.4.0
 * @template T
 * @param {string} attr
 * @return {T}
 */
AFrame.Entity.prototype.getComputedAttribute = function(attr) {};

/**
 * @template T
 * @param {string} attr
 * @return {T}
 */
AFrame.Entity.prototype.getDOMAttribute = function(attr) {};

/**
 * @param {string} type
 * @return {?}
 */
AFrame.Entity.prototype.getObject3D = function(type) {};

/**
 * @param {string} type
 * @param {?} construct
 * @return {?}
 */
AFrame.Entity.prototype.getOrCreateObject3D = function(type, construct) {};

/**
 * @param {string} stateName
 * @return {boolean}
 */
AFrame.Entity.prototype.is = function(stateName) {};

/**
 * @return {void}
 */
AFrame.Entity.prototype.pause = function() {};

/**
 * @return {void}
 */
AFrame.Entity.prototype.play = function() {};

/**
 * @param {string} type
 * @param {?} obj
 * @return {void}
 */
AFrame.Entity.prototype.setObject3D = function(type, obj) {};

/**
 * @param {string} attr
 * @param {string=} property
 * @return {void}
 */
AFrame.Entity.prototype.removeAttribute = function(attr, property) {};

/**
 * @param {string} type
 * @return {void}
 */
AFrame.Entity.prototype.removeObject3D = function(type) {};

/**
 * @param {string} stateName
 * @return {void}
 */
AFrame.Entity.prototype.removeState = function(stateName) {};

/**
 * @template T
 * @param {string} type_or_attr
 * @return {?|T|!AFrame.Coordinate}
 */
AFrame.Entity.prototype.getAttribute = function(type_or_attr) {};

/**
 * @param {string} attr_or_type
 * @param {?|string|!AFrame.Coordinate} value_or_property
 * @param {?=} componentAttrValue
 * @return {void}
 */
AFrame.Entity.prototype.setAttribute = function(attr_or_type, value_or_property, componentAttrValue) {};

/**
 * @template K
 * @param {K|string} type
 * @param {function(?): void|(!EventListener|!EventListenerObject)} listener
 * @param {boolean=} useCapture
 * @return {void}
 */
AFrame.Entity.prototype.addEventListener = function(type, listener, useCapture) {};

/** @typedef {?} */
AFrame.DetailEvent;
/**
 * @record
 * @struct
 */
AFrame.EntityEventMap = function() {};

/* TODO: PropertySignature: AFrame.'child-attached' */

/* TODO: PropertySignature: AFrame.'child-detached' */

/* TODO: PropertySignature: AFrame.'componentchanged' */

/* TODO: PropertySignature: AFrame.'componentremoved' */

/* TODO: PropertySignature: AFrame.'loaded' */

/* TODO: PropertySignature: AFrame.'pause' */

/* TODO: PropertySignature: AFrame.'play' */

/* TODO: PropertySignature: AFrame.'stateadded' */

/* TODO: PropertySignature: AFrame.'stateremoved' */

/* TODO: PropertySignature: AFrame.'schemachanged' */
/**
 * @record
 * @struct
 */
AFrame.Geometry = function() {};
 /** @type {string} */
AFrame.Geometry.prototype.name;
 /** @type {?} */
AFrame.Geometry.prototype.geometry;
 /** @type {(!AFrame.SinglePropertySchema<?>|!AFrame.MultiPropertySchema)} */
AFrame.Geometry.prototype.schema;

/* TODO: IndexSignature: AFrame */

/**
 * @param {!Object} data
 * @return {void}
 */
AFrame.Geometry.prototype.update = function(data) {};
/**
 * @record
 * @struct
 */
AFrame.GeometryDescriptor = function() {};
 /** @type {!AFrame.Geometry} */
AFrame.GeometryDescriptor.prototype.Geometry;
 /** @type {(!AFrame.SinglePropertySchema<?>|!AFrame.MultiPropertySchema)} */
AFrame.GeometryDescriptor.prototype.schema;
/**
 * @record
 * @struct
 */
AFrame.MultiPropertySchema = function() {};

/* TODO: IndexSignature: AFrame */
/**
 * @record
 * @struct
 */
AFrame.PrimitiveDefinition = function() {};
 /** @type {?} */
AFrame.PrimitiveDefinition.prototype.defaultComponents;
 /** @type {boolean} */
AFrame.PrimitiveDefinition.prototype.deprecated;
 /** @type {?} */
AFrame.PrimitiveDefinition.prototype.mappings;
 /** @type {?} */
AFrame.PrimitiveDefinition.prototype.transforms;

/** @typedef {string} */
AFrame.PropertyTypes;

/** @typedef {string} */
AFrame.SceneEvents;
/**
 * @extends {AFrame.Entity}
 * @record
 * @struct
 */
AFrame.Scene = function() {};
 /** @type {!Array<!AFrame.Behavior>} */
AFrame.Scene.prototype.behaviors;
 /** @type {?} */
AFrame.Scene.prototype.camera;
 /** @type {!HTMLCanvasElement} */
AFrame.Scene.prototype.canvas;
 /** @type {?} */
AFrame.Scene.prototype.effect;
 /** @type {boolean} */
AFrame.Scene.prototype.isMobile;
 /** @type {?} */
AFrame.Scene.prototype.object3D;
 /** @type {?} */
AFrame.Scene.prototype.renderer;
 /** @type {boolean} */
AFrame.Scene.prototype.renderStarted;
 /** @type {!AFrame.ObjectMap<!AFrame.System>} */
AFrame.Scene.prototype.systems;
 /** @type {number} */
AFrame.Scene.prototype.time;

/**
 * @return {(void|!Promise<void>)}
 */
AFrame.Scene.prototype.enterVR = function() {};

/**
 * @return {(void|!Promise<void>)}
 */
AFrame.Scene.prototype.exitVR = function() {};

/**
 * @return {void}
 */
AFrame.Scene.prototype.reload = function() {};

/**
 * @param {string} type
 * @param {(!EventListener|!EventListenerObject)|!EventListener} listener
 * @param {boolean=} useCapture
 * @return {void}
 */
AFrame.Scene.prototype.addEventListener = function(type, listener, useCapture) {};

/** @typedef {(!AFrame.SinglePropertySchema<?>|!AFrame.MultiPropertySchema)} */
AFrame.Schema;
/**
 * @record
 * @struct
 */
AFrame.SchemaUtils = function() {};

/**
 * @param {(!AFrame.SinglePropertySchema<?>|!AFrame.MultiPropertySchema)} schema
 * @return {boolean}
 */
AFrame.SchemaUtils.prototype.isSingleProperty = function(schema) {};

/**
 * @param {(!AFrame.SinglePropertySchema<?>|!AFrame.MultiPropertySchema)} schema
 * @return {boolean}
 */
AFrame.SchemaUtils.prototype.process = function(schema) {};
/**
 * @record
 * @struct
 */
AFrame.Shader = function() {};
 /** @type {string} */
AFrame.Shader.prototype.name;
 /** @type {(!AFrame.SinglePropertySchema<?>|!AFrame.MultiPropertySchema)} */
AFrame.Shader.prototype.schema;
/**
 * @record
 * @struct
 */
AFrame.ShaderDescriptor = function() {};
 /** @type {!AFrame.Shader} */
AFrame.ShaderDescriptor.prototype.Shader;
 /** @type {(!AFrame.SinglePropertySchema<?>|!AFrame.MultiPropertySchema)} */
AFrame.ShaderDescriptor.prototype.schema;
/**
 * @record
 * @struct
 */
AFrame.SinglePropertySchema = function() {};
 /** @type {string} */
AFrame.SinglePropertySchema.prototype.type;

/* TODO: PropertySignature: AFrame.'default' */

/* TODO: IndexSignature: AFrame */

/**
 * @param {string} value
 * @return {T}
 */
AFrame.SinglePropertySchema.prototype.parse = function(value) {};

/**
 * @param {T} value
 * @return {string}
 */
AFrame.SinglePropertySchema.prototype.stringify = function(value) {};
/**
 * @record
 * @struct
 */
AFrame.System = function() {};
 /** @type {?} */
AFrame.System.prototype.data;
 /** @type {(!AFrame.SinglePropertySchema<?>|!AFrame.MultiPropertySchema)} */
AFrame.System.prototype.schema;

/**
 * @return {void}
 */
AFrame.System.prototype.init = function() {};

/**
 * @return {void}
 */
AFrame.System.prototype.pause = function() {};

/**
 * @return {void}
 */
AFrame.System.prototype.play = function() {};

/**
 * @return {void}
 */
AFrame.System.prototype.tick = function() {};
/**
 * @record
 * @struct
 */
AFrame.SystemDefinition = function() {};
 /** @type {(!AFrame.SinglePropertySchema<?>|!AFrame.MultiPropertySchema)} */
AFrame.SystemDefinition.prototype.schema;

/* TODO: IndexSignature: AFrame */

/**
 * @return {void}
 */
AFrame.SystemDefinition.prototype.init = function() {};

/**
 * @return {void}
 */
AFrame.SystemDefinition.prototype.pause = function() {};

/**
 * @return {void}
 */
AFrame.SystemDefinition.prototype.play = function() {};

/**
 * @return {void}
 */
AFrame.SystemDefinition.prototype.tick = function() {};
/**
 * @record
 * @struct
 */
AFrame.Utils = function() {};
 /** @type {{isCoordinate: function(string): boolean, parse: function(string): !AFrame.Coordinate, stringify: function(!AFrame.Coordinate): string}} */
AFrame.Utils.prototype.coordinates;
 /** @type {{getComponentProperty: function(!AFrame.Entity<!AFrame.ObjectMap<!AFrame.Component>>, string, string): ?, setComponentProperty: function(!AFrame.Entity<!AFrame.ObjectMap<!AFrame.Component>>, string, ?, string): void}} */
AFrame.Utils.prototype.entity;
 /** @type {{parse: function(string): !Object, stringify: function(!Object): string}} */
AFrame.Utils.prototype.styleParser;

/**
 * @param {?} a
 * @param {?} b
 * @return {boolean}
 */
AFrame.Utils.prototype.deepEqual = function(a, b) {};

/**
 * @param {!Object} a
 * @param {!Object} b
 * @return {!Object}
 */
AFrame.Utils.prototype.diff = function(a, b) {};

/**
 * @param {!Object} target
 * @param {...!Object} source
 * @return {!Object}
 */
AFrame.Utils.prototype.extend = function(target, source) {};

/**
 * @param {!Object} target
 * @param {...!Object} source
 * @return {!Object}
 */
AFrame.Utils.prototype.extendDeep = function(target, source) {};
