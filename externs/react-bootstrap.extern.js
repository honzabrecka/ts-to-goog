/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/react-bootstrap/index.d.ts:

/* TODO: ImportDeclaration in  */

/* TODO: ExportAssignment in  */

/* TODO: NamespaceExportDeclaration in  */
/** @const */
var ReactBootstrap = {};

/** @typedef {string} */
ReactBootstrap.Sizes;
/**
 * @extends {React.EventHandler}
 * @record
 * @struct
 */
ReactBootstrap.SelectCallback = function() {};

/* TODO: CallSignature: ReactBootstrap */

/* TODO: CallSignature: ReactBootstrap */
/**
 * @record
 * @struct
 */
ReactBootstrap.TransitionCallbacks = function() {};
 /** @type {!Function} */
ReactBootstrap.TransitionCallbacks.prototype.onEnter;
 /** @type {!Function} */
ReactBootstrap.TransitionCallbacks.prototype.onEntered;
 /** @type {!Function} */
ReactBootstrap.TransitionCallbacks.prototype.onEntering;
 /** @type {!Function} */
ReactBootstrap.TransitionCallbacks.prototype.onExit;
 /** @type {!Function} */
ReactBootstrap.TransitionCallbacks.prototype.onExited;
 /** @type {!Function} */
ReactBootstrap.TransitionCallbacks.prototype.onExiting;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.AccordionProps = function() {};
 /** @type {string} */
ReactBootstrap.AccordionProps.prototype.bsSize;
 /** @type {string} */
ReactBootstrap.AccordionProps.prototype.bsStyle;
 /** @type {boolean} */
ReactBootstrap.AccordionProps.prototype.collapsible;
 /** @type {boolean} */
ReactBootstrap.AccordionProps.prototype.defaultExpanded;
 /** @type {?} */
ReactBootstrap.AccordionProps.prototype.eventKey;
 /** @type {boolean} */
ReactBootstrap.AccordionProps.prototype.expanded;
 /** @type {?} */
ReactBootstrap.AccordionProps.prototype.footer;
 /** @type {?} */
ReactBootstrap.AccordionProps.prototype.header;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.AccordionProps, !Object>} */
ReactBootstrap.Accordion;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.AccordionProps>} */
ReactBootstrap.Accordion;
/**
 * @extends {React.Props}
 * @record
 * @struct
 */
ReactBootstrap.BreadcrumbProps = function() {};
 /** @type {string} */
ReactBootstrap.BreadcrumbProps.prototype.bsClass;
/**
 * @extends {React.ClassicComponentClass}
 * @record
 * @struct
 */
ReactBootstrap.BreadcrumbClass = function() {};
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.BreadcrumbItemProps>} */
ReactBootstrap.BreadcrumbClass.prototype.Item;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.BreadcrumbProps, !Object>} */
ReactBootstrap.Breadcrumb;
 /** @type {!ReactBootstrap.BreadcrumbClass} */
ReactBootstrap.Breadcrumb;
/**
 * @extends {React.Props}
 * @record
 * @struct
 */
ReactBootstrap.BreadcrumbItemProps = function() {};
 /** @type {boolean} */
ReactBootstrap.BreadcrumbItemProps.prototype.active;
 /** @type {(string|number)} */
ReactBootstrap.BreadcrumbItemProps.prototype.id;
 /** @type {string} */
ReactBootstrap.BreadcrumbItemProps.prototype.href;
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)} */
ReactBootstrap.BreadcrumbItemProps.prototype.title;
 /** @type {string} */
ReactBootstrap.BreadcrumbItemProps.prototype.target;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.BreadcrumbItemProps, !Object>} */
ReactBootstrap.BreadcrumbItem;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.BreadcrumbItemProps>} */
ReactBootstrap.BreadcrumbItem;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.ButtonProps = function() {};
 /** @type {string} */
ReactBootstrap.ButtonProps.prototype.bsClass;
 /** @type {boolean} */
ReactBootstrap.ButtonProps.prototype.active;
 /** @type {boolean} */
ReactBootstrap.ButtonProps.prototype.block;
 /** @type {string} */
ReactBootstrap.ButtonProps.prototype.bsStyle;
 /** @type {string} */
ReactBootstrap.ButtonProps.prototype.bsSize;
 /** @type {(string|!React.ComponentClass<?>|!React.StatelessComponent<?>)} */
ReactBootstrap.ButtonProps.prototype.componentClass;
 /** @type {boolean} */
ReactBootstrap.ButtonProps.prototype.disabled;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.ButtonProps, !Object>} */
ReactBootstrap.Button;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.ButtonProps>} */
ReactBootstrap.Button;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.ButtonToolbarProps = function() {};
 /** @type {boolean} */
ReactBootstrap.ButtonToolbarProps.prototype.block;
 /** @type {string} */
ReactBootstrap.ButtonToolbarProps.prototype.bsSize;
 /** @type {string} */
ReactBootstrap.ButtonToolbarProps.prototype.bsStyle;
 /** @type {boolean} */
ReactBootstrap.ButtonToolbarProps.prototype.justified;
 /** @type {boolean} */
ReactBootstrap.ButtonToolbarProps.prototype.vertical;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.ButtonToolbarProps, !Object>} */
ReactBootstrap.ButtonToolbar;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.ButtonToolbarProps>} */
ReactBootstrap.ButtonToolbar;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.ButtonGroupProps = function() {};
 /** @type {boolean} */
ReactBootstrap.ButtonGroupProps.prototype.block;
 /** @type {string} */
ReactBootstrap.ButtonGroupProps.prototype.bsSize;
 /** @type {string} */
ReactBootstrap.ButtonGroupProps.prototype.bsStyle;
 /** @type {boolean} */
ReactBootstrap.ButtonGroupProps.prototype.justified;
 /** @type {boolean} */
ReactBootstrap.ButtonGroupProps.prototype.vertical;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.ButtonGroupProps, !Object>} */
ReactBootstrap.ButtonGroup;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.ButtonGroupProps>} */
ReactBootstrap.ButtonGroup;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.SafeAnchorProps = function() {};
 /** @type {string} */
ReactBootstrap.SafeAnchorProps.prototype.href;
 /** @type {function(!React.MouseEvent<!Object>): void} */
ReactBootstrap.SafeAnchorProps.prototype.onClick;
 /** @type {boolean} */
ReactBootstrap.SafeAnchorProps.prototype.disabled;
 /** @type {string} */
ReactBootstrap.SafeAnchorProps.prototype.role;
 /** @type {(string|!React.ComponentClass<?>|!React.StatelessComponent<?>)} */
ReactBootstrap.SafeAnchorProps.prototype.componentClass;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.SafeAnchorProps, !Object>} */
ReactBootstrap.SafeAnchor;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.SafeAnchorProps>} */
ReactBootstrap.SafeAnchor;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.CheckboxProps = function() {};
 /** @type {string} */
ReactBootstrap.CheckboxProps.prototype.bsClass;
 /** @type {boolean} */
ReactBootstrap.CheckboxProps.prototype.disabled;
 /** @type {boolean} */
ReactBootstrap.CheckboxProps.prototype.inline;
 /** @type {function(!HTMLInputElement): void} */
ReactBootstrap.CheckboxProps.prototype.inputRef;
 /** @type {string} */
ReactBootstrap.CheckboxProps.prototype.validationState;
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.Checkbox = function() {};
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.ClearfixProps = function() {};
 /** @type {(string|!React.ComponentClass<?>|!React.StatelessComponent<?>)} */
ReactBootstrap.ClearfixProps.prototype.componentClass;
 /** @type {boolean} */
ReactBootstrap.ClearfixProps.prototype.visibleXsBlock;
 /** @type {boolean} */
ReactBootstrap.ClearfixProps.prototype.visibleSmBlock;
 /** @type {boolean} */
ReactBootstrap.ClearfixProps.prototype.visibleMdBlock;
 /** @type {boolean} */
ReactBootstrap.ClearfixProps.prototype.visibleLgBlock;
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.Clearfix = function() {};
/**
 * @extends {ReactBootstrap.TransitionCallbacks}
 * @extends {React.Props}
 * @record
 * @struct
 */
ReactBootstrap.CollapseProps = function() {};
 /** @type {(string|function(): string)} */
ReactBootstrap.CollapseProps.prototype.dimension;
 /** @type {function(number, !React.ReactElement<?>): number} */
ReactBootstrap.CollapseProps.prototype.getDimensionValue;
 /** @type {boolean} */
ReactBootstrap.CollapseProps.prototype.in;
 /** @type {number} */
ReactBootstrap.CollapseProps.prototype.timeout;
 /** @type {boolean} */
ReactBootstrap.CollapseProps.prototype.transitionAppear;
 /** @type {boolean} */
ReactBootstrap.CollapseProps.prototype.unmountOnExit;
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.Collapse = function() {};
/**
 * @record
 * @struct
 */
ReactBootstrap.DropdownBaseProps = function() {};
 /** @type {string} */
ReactBootstrap.DropdownBaseProps.prototype.bsClass;
 /** @type {(string|!React.ComponentClass<?>|!React.StatelessComponent<?>)} */
ReactBootstrap.DropdownBaseProps.prototype.componentClass;
 /** @type {boolean} */
ReactBootstrap.DropdownBaseProps.prototype.disabled;
 /** @type {boolean} */
ReactBootstrap.DropdownBaseProps.prototype.dropup;
 /** @type {string} */
ReactBootstrap.DropdownBaseProps.prototype.id;
 /** @type {!Function} */
ReactBootstrap.DropdownBaseProps.prototype.onClose;
 /** @type {!ReactBootstrap.SelectCallback} */
ReactBootstrap.DropdownBaseProps.prototype.onSelect;
 /** @type {function(boolean): void} */
ReactBootstrap.DropdownBaseProps.prototype.onToggle;
 /** @type {boolean} */
ReactBootstrap.DropdownBaseProps.prototype.open;
 /** @type {boolean} */
ReactBootstrap.DropdownBaseProps.prototype.pullRight;
 /** @type {string} */
ReactBootstrap.DropdownBaseProps.prototype.role;

/** @typedef {?} */
ReactBootstrap.DropdownProps;
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.Dropdown = function() {};
 /** @type {?} */
ReactBootstrap.Dropdown.Menu;
 /** @type {?} */
ReactBootstrap.Dropdown.Toggle;
/**
 * @extends {ReactBootstrap.DropdownBaseProps}
 * @record
 * @struct
 */
ReactBootstrap.DropdownButtonBaseProps = function() {};
 /** @type {boolean} */
ReactBootstrap.DropdownButtonBaseProps.prototype.block;
 /** @type {string} */
ReactBootstrap.DropdownButtonBaseProps.prototype.bsSize;
 /** @type {string} */
ReactBootstrap.DropdownButtonBaseProps.prototype.bsStyle;
 /** @type {boolean} */
ReactBootstrap.DropdownButtonBaseProps.prototype.navItem;
 /** @type {boolean} */
ReactBootstrap.DropdownButtonBaseProps.prototype.noCaret;
 /** @type {boolean} */
ReactBootstrap.DropdownButtonBaseProps.prototype.pullRight;

/** @typedef {?} */
ReactBootstrap.DropdownButtonProps;
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.DropdownButton = function() {};
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.DropdownMenuProps = function() {};
 /** @type {(string|number)} */
ReactBootstrap.DropdownMenuProps.prototype.labelledBy;
 /** @type {!Function} */
ReactBootstrap.DropdownMenuProps.prototype.onClose;
 /** @type {!ReactBootstrap.SelectCallback} */
ReactBootstrap.DropdownMenuProps.prototype.onSelect;
 /** @type {boolean} */
ReactBootstrap.DropdownMenuProps.prototype.open;
 /** @type {boolean} */
ReactBootstrap.DropdownMenuProps.prototype.pullRight;
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.DropdownMenu = function() {};
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.DropdownToggleProps = function() {};
 /** @type {string} */
ReactBootstrap.DropdownToggleProps.prototype.bsRole;
 /** @type {boolean} */
ReactBootstrap.DropdownToggleProps.prototype.noCaret;
 /** @type {boolean} */
ReactBootstrap.DropdownToggleProps.prototype.open;
 /** @type {string} */
ReactBootstrap.DropdownToggleProps.prototype.title;
 /** @type {boolean} */
ReactBootstrap.DropdownToggleProps.prototype.useAnchor;
 /** @type {string} */
ReactBootstrap.DropdownToggleProps.prototype.bsClass;
 /** @type {string} */
ReactBootstrap.DropdownToggleProps.prototype.bsStyle;
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.DropdownToggle = function() {};
/**
 * @extends {ReactBootstrap.TransitionCallbacks}
 * @extends {React.Props}
 * @record
 * @struct
 */
ReactBootstrap.FadeProps = function() {};
 /** @type {boolean} */
ReactBootstrap.FadeProps.prototype.in;
 /** @type {number} */
ReactBootstrap.FadeProps.prototype.timeout;
 /** @type {boolean} */
ReactBootstrap.FadeProps.prototype.transitionAppear;
 /** @type {boolean} */
ReactBootstrap.FadeProps.prototype.unmountOnExit;
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.Fade = function() {};
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.MenuItemProps = function() {};
 /** @type {boolean} */
ReactBootstrap.MenuItemProps.prototype.active;
 /** @type {string} */
ReactBootstrap.MenuItemProps.prototype.bsClass;
 /** @type {boolean} */
ReactBootstrap.MenuItemProps.prototype.disabled;
 /** @type {boolean} */
ReactBootstrap.MenuItemProps.prototype.divider;
 /** @type {?} */
ReactBootstrap.MenuItemProps.prototype.eventKey;
 /** @type {boolean} */
ReactBootstrap.MenuItemProps.prototype.header;
 /** @type {function(!React.MouseEvent<!Object>): void} */
ReactBootstrap.MenuItemProps.prototype.onClick;
 /** @type {!ReactBootstrap.SelectCallback} */
ReactBootstrap.MenuItemProps.prototype.onSelect;
 /** @type {string} */
ReactBootstrap.MenuItemProps.prototype.target;
 /** @type {string} */
ReactBootstrap.MenuItemProps.prototype.title;
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.MenuItem = function() {};
/**
 * @extends {ReactBootstrap.TransitionCallbacks}
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.PanelProps = function() {};
 /** @type {string} */
ReactBootstrap.PanelProps.prototype.bsClass;
 /** @type {string} */
ReactBootstrap.PanelProps.prototype.bsSize;
 /** @type {string} */
ReactBootstrap.PanelProps.prototype.bsStyle;
 /** @type {boolean} */
ReactBootstrap.PanelProps.prototype.collapsible;
 /** @type {boolean} */
ReactBootstrap.PanelProps.prototype.defaultExpanded;
 /** @type {?} */
ReactBootstrap.PanelProps.prototype.eventKey;
 /** @type {boolean} */
ReactBootstrap.PanelProps.prototype.expanded;
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)} */
ReactBootstrap.PanelProps.prototype.footer;
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)} */
ReactBootstrap.PanelProps.prototype.header;
 /** @type {!ReactBootstrap.SelectCallback} */
ReactBootstrap.PanelProps.prototype.onSelect;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.PanelProps, !Object>} */
ReactBootstrap.Panel;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.PanelProps>} */
ReactBootstrap.Panel;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.PanelGroupProps = function() {};
 /** @type {boolean} */
ReactBootstrap.PanelGroupProps.prototype.accordion;
 /** @type {?} */
ReactBootstrap.PanelGroupProps.prototype.activeKey;
 /** @type {string} */
ReactBootstrap.PanelGroupProps.prototype.bsSize;
 /** @type {string} */
ReactBootstrap.PanelGroupProps.prototype.bsStyle;
 /** @type {?} */
ReactBootstrap.PanelGroupProps.prototype.defaultActiveKey;
 /** @type {!ReactBootstrap.SelectCallback} */
ReactBootstrap.PanelGroupProps.prototype.onSelect;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.PanelGroupProps, !Object>} */
ReactBootstrap.PanelGroup;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.PanelGroupProps>} */
ReactBootstrap.PanelGroup;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.SplitButtonProps = function() {};
 /** @type {string} */
ReactBootstrap.SplitButtonProps.prototype.bsStyle;
 /** @type {string} */
ReactBootstrap.SplitButtonProps.prototype.bsSize;
 /** @type {?} */
ReactBootstrap.SplitButtonProps.prototype.dropdownTitle;
 /** @type {boolean} */
ReactBootstrap.SplitButtonProps.prototype.dropup;
 /** @type {boolean} */
ReactBootstrap.SplitButtonProps.prototype.pullRight;
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.SplitButton = function() {};
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.ModalDialogProps = function() {};
 /** @type {!Function} */
ReactBootstrap.ModalDialogProps.prototype.onHide;
 /** @type {!Function} */
ReactBootstrap.ModalDialogProps.prototype.onEnter;
 /** @type {!Function} */
ReactBootstrap.ModalDialogProps.prototype.onEntered;
 /** @type {!Function} */
ReactBootstrap.ModalDialogProps.prototype.onEntering;
 /** @type {!Function} */
ReactBootstrap.ModalDialogProps.prototype.onExit;
 /** @type {!Function} */
ReactBootstrap.ModalDialogProps.prototype.onExited;
 /** @type {!Function} */
ReactBootstrap.ModalDialogProps.prototype.onExiting;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.ModalDialogProps, !Object>} */
ReactBootstrap.ModalDialog;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.ModalDialogProps>} */
ReactBootstrap.ModalDialog;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.ModalHeaderProps = function() {};
 /** @type {boolean} */
ReactBootstrap.ModalHeaderProps.prototype.closeButton;
 /** @type {string} */
ReactBootstrap.ModalHeaderProps.prototype.modalClassName;
 /** @type {!Function} */
ReactBootstrap.ModalHeaderProps.prototype.onHide;
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.ModalHeader = function() {};
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.ModalTitleProps = function() {};
 /** @type {string} */
ReactBootstrap.ModalTitleProps.prototype.modalClassName;
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.ModalTitle = function() {};
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.ModalBodyProps = function() {};
 /** @type {string} */
ReactBootstrap.ModalBodyProps.prototype.modalClassName;
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.ModalBody = function() {};
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.ModalFooterProps = function() {};
 /** @type {string} */
ReactBootstrap.ModalFooterProps.prototype.modalClassName;
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.ModalFooter = function() {};
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.ModalProps = function() {};
 /** @type {!Function} */
ReactBootstrap.ModalProps.prototype.onHide;
 /** @type {boolean} */
ReactBootstrap.ModalProps.prototype.animation;
 /** @type {boolean} */
ReactBootstrap.ModalProps.prototype.autoFocus;
 /** @type {(string|boolean)} */
ReactBootstrap.ModalProps.prototype.backdrop;
 /** @type {string} */
ReactBootstrap.ModalProps.prototype.backdropClassName;
 /** @type {?} */
ReactBootstrap.ModalProps.prototype.backdropStyle;
 /** @type {number} */
ReactBootstrap.ModalProps.prototype.backdropTransitionTimeout;
 /** @type {string} */
ReactBootstrap.ModalProps.prototype.bsSize;
 /** @type {?} */
ReactBootstrap.ModalProps.prototype.container;
 /** @type {string} */
ReactBootstrap.ModalProps.prototype.containerClassName;
 /** @type {string} */
ReactBootstrap.ModalProps.prototype.dialogClassName;
 /** @type {?} */
ReactBootstrap.ModalProps.prototype.dialogComponent;
 /** @type {number} */
ReactBootstrap.ModalProps.prototype.dialogTransitionTimeout;
 /** @type {boolean} */
ReactBootstrap.ModalProps.prototype.enforceFocus;
 /** @type {boolean} */
ReactBootstrap.ModalProps.prototype.keyboard;
 /** @type {function(!HTMLElement): ?} */
ReactBootstrap.ModalProps.prototype.onBackdropClick;
 /** @type {function(!HTMLElement): ?} */
ReactBootstrap.ModalProps.prototype.onEnter;
 /** @type {function(!HTMLElement): ?} */
ReactBootstrap.ModalProps.prototype.onEntered;
 /** @type {function(!HTMLElement): ?} */
ReactBootstrap.ModalProps.prototype.onEntering;
 /** @type {function(!HTMLElement): ?} */
ReactBootstrap.ModalProps.prototype.onEscapeKeyUp;
 /** @type {function(!HTMLElement): ?} */
ReactBootstrap.ModalProps.prototype.onExit;
 /** @type {function(!HTMLElement): ?} */
ReactBootstrap.ModalProps.prototype.onExited;
 /** @type {function(!HTMLElement): ?} */
ReactBootstrap.ModalProps.prototype.onExiting;
 /** @type {function(!HTMLElement): ?} */
ReactBootstrap.ModalProps.prototype.onShow;
 /** @type {boolean} */
ReactBootstrap.ModalProps.prototype.show;
 /** @type {!React.ReactElement<?>} */
ReactBootstrap.ModalProps.prototype.transition;
/**
 * @extends {React.ClassicComponentClass}
 * @record
 * @struct
 */
ReactBootstrap.ModalClass = function() {};
 /** @type {?} */
ReactBootstrap.ModalClass.prototype.Body;
 /** @type {?} */
ReactBootstrap.ModalClass.prototype.Header;
 /** @type {?} */
ReactBootstrap.ModalClass.prototype.Title;
 /** @type {?} */
ReactBootstrap.ModalClass.prototype.Footer;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.ModalDialogProps>} */
ReactBootstrap.ModalClass.prototype.Dialog;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.ModalProps, !Object>} */
ReactBootstrap.Modal;
 /** @type {!ReactBootstrap.ModalClass} */
ReactBootstrap.Modal;
/**
 * @record
 * @struct
 */
ReactBootstrap.OverlayTriggerProps = function() {};
 /** @type {?} */
ReactBootstrap.OverlayTriggerProps.prototype.overlay;
 /** @type {?} */
ReactBootstrap.OverlayTriggerProps.prototype.animation;
 /** @type {?} */
ReactBootstrap.OverlayTriggerProps.prototype.container;
 /** @type {number} */
ReactBootstrap.OverlayTriggerProps.prototype.containerPadding;
 /** @type {boolean} */
ReactBootstrap.OverlayTriggerProps.prototype.defaultOverlayShown;
 /** @type {number} */
ReactBootstrap.OverlayTriggerProps.prototype.delay;
 /** @type {number} */
ReactBootstrap.OverlayTriggerProps.prototype.delayHide;
 /** @type {number} */
ReactBootstrap.OverlayTriggerProps.prototype.delayShow;
 /** @type {!Function} */
ReactBootstrap.OverlayTriggerProps.prototype.onEnter;
 /** @type {!Function} */
ReactBootstrap.OverlayTriggerProps.prototype.onEntered;
 /** @type {!Function} */
ReactBootstrap.OverlayTriggerProps.prototype.onEntering;
 /** @type {!Function} */
ReactBootstrap.OverlayTriggerProps.prototype.onExit;
 /** @type {!Function} */
ReactBootstrap.OverlayTriggerProps.prototype.onExited;
 /** @type {!Function} */
ReactBootstrap.OverlayTriggerProps.prototype.onExiting;
 /** @type {string} */
ReactBootstrap.OverlayTriggerProps.prototype.placement;
 /** @type {boolean} */
ReactBootstrap.OverlayTriggerProps.prototype.rootClose;
 /** @type {(string|!Array<string>)} */
ReactBootstrap.OverlayTriggerProps.prototype.trigger;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.OverlayTriggerProps, !Object>} */
ReactBootstrap.OverlayTrigger;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.OverlayTriggerProps>} */
ReactBootstrap.OverlayTrigger;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.TooltipProps = function() {};
 /** @type {(string|number)} */
ReactBootstrap.TooltipProps.prototype.arrowOffsetLeft;
 /** @type {(string|number)} */
ReactBootstrap.TooltipProps.prototype.arrowOffsetTop;
 /** @type {string} */
ReactBootstrap.TooltipProps.prototype.bsSize;
 /** @type {string} */
ReactBootstrap.TooltipProps.prototype.bsStyle;
 /** @type {string} */
ReactBootstrap.TooltipProps.prototype.placement;
 /** @type {number} */
ReactBootstrap.TooltipProps.prototype.positionLeft;
 /** @type {number} */
ReactBootstrap.TooltipProps.prototype.positionTop;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.TooltipProps, !Object>} */
ReactBootstrap.Tooltip;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.TooltipProps>} */
ReactBootstrap.Tooltip;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.PopoverProps = function() {};
 /** @type {(string|number)} */
ReactBootstrap.PopoverProps.prototype.arrowOffsetLeft;
 /** @type {(string|number)} */
ReactBootstrap.PopoverProps.prototype.arrowOffsetTop;
 /** @type {string} */
ReactBootstrap.PopoverProps.prototype.bsSize;
 /** @type {string} */
ReactBootstrap.PopoverProps.prototype.bsStyle;
 /** @type {string} */
ReactBootstrap.PopoverProps.prototype.placement;
 /** @type {(string|number)} */
ReactBootstrap.PopoverProps.prototype.positionLeft;
 /** @type {(string|number)} */
ReactBootstrap.PopoverProps.prototype.positionTop;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.PopoverProps, !Object>} */
ReactBootstrap.Popover;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.PopoverProps>} */
ReactBootstrap.Popover;
/**
 * @record
 * @struct
 */
ReactBootstrap.OverlayProps = function() {};
 /** @type {?} */
ReactBootstrap.OverlayProps.prototype.animation;
 /** @type {?} */
ReactBootstrap.OverlayProps.prototype.container;
 /** @type {number} */
ReactBootstrap.OverlayProps.prototype.containerPadding;
 /** @type {!Function} */
ReactBootstrap.OverlayProps.prototype.onEnter;
 /** @type {!Function} */
ReactBootstrap.OverlayProps.prototype.onEntered;
 /** @type {!Function} */
ReactBootstrap.OverlayProps.prototype.onEntering;
 /** @type {!Function} */
ReactBootstrap.OverlayProps.prototype.onExit;
 /** @type {!Function} */
ReactBootstrap.OverlayProps.prototype.onExited;
 /** @type {!Function} */
ReactBootstrap.OverlayProps.prototype.onExiting;
 /** @type {!Function} */
ReactBootstrap.OverlayProps.prototype.onHide;
 /** @type {string} */
ReactBootstrap.OverlayProps.prototype.placement;
 /** @type {boolean} */
ReactBootstrap.OverlayProps.prototype.rootClose;
 /** @type {boolean} */
ReactBootstrap.OverlayProps.prototype.show;
 /** @type {(!Function|!Element|!React.Component<?, !Object>)} */
ReactBootstrap.OverlayProps.prototype.target;
 /** @type {boolean} */
ReactBootstrap.OverlayProps.prototype.shouldUpdatePosition;
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.Overlay = function() {};
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.ProgressBarProps = function() {};
 /** @type {boolean} */
ReactBootstrap.ProgressBarProps.prototype.active;
 /** @type {string} */
ReactBootstrap.ProgressBarProps.prototype.bsSize;
 /** @type {string} */
ReactBootstrap.ProgressBarProps.prototype.bsStyle;
 /** @type {?} */
ReactBootstrap.ProgressBarProps.prototype.interpolatedClass;
 /** @type {number} */
ReactBootstrap.ProgressBarProps.prototype.max;
 /** @type {number} */
ReactBootstrap.ProgressBarProps.prototype.min;
 /** @type {number} */
ReactBootstrap.ProgressBarProps.prototype.now;
 /** @type {boolean} */
ReactBootstrap.ProgressBarProps.prototype.srOnly;
 /** @type {boolean} */
ReactBootstrap.ProgressBarProps.prototype.striped;
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.ProgressBar = function() {};
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.NavProps = function() {};
 /** @type {string} */
ReactBootstrap.NavProps.prototype.activeHref;
 /** @type {?} */
ReactBootstrap.NavProps.prototype.activeKey;
 /** @type {string} */
ReactBootstrap.NavProps.prototype.bsSize;
 /** @type {string} */
ReactBootstrap.NavProps.prototype.bsStyle;
 /** @type {boolean} */
ReactBootstrap.NavProps.prototype.collapsible;
 /** @type {?} */
ReactBootstrap.NavProps.prototype.eventKey;
 /** @type {boolean} */
ReactBootstrap.NavProps.prototype.expanded;
 /** @type {boolean} */
ReactBootstrap.NavProps.prototype.justified;
 /** @type {boolean} */
ReactBootstrap.NavProps.prototype.navbar;
 /** @type {boolean} */
ReactBootstrap.NavProps.prototype.pullRight;
 /** @type {boolean} */
ReactBootstrap.NavProps.prototype.right;
 /** @type {boolean} */
ReactBootstrap.NavProps.prototype.stacked;
 /** @type {string} */
ReactBootstrap.NavProps.prototype.ulClassName;
 /** @type {string} */
ReactBootstrap.NavProps.prototype.ulId;
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.Nav = function() {};
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.NavItemProps = function() {};
 /** @type {boolean} */
ReactBootstrap.NavItemProps.prototype.active;
 /** @type {?} */
ReactBootstrap.NavItemProps.prototype.brand;
 /** @type {string} */
ReactBootstrap.NavItemProps.prototype.bsSize;
 /** @type {string} */
ReactBootstrap.NavItemProps.prototype.bsStyle;
 /** @type {(string|!React.ComponentClass<?>|!React.StatelessComponent<?>)} */
ReactBootstrap.NavItemProps.prototype.componentClass;
 /** @type {boolean} */
ReactBootstrap.NavItemProps.prototype.defaultNavExpanded;
 /** @type {?} */
ReactBootstrap.NavItemProps.prototype.eventKey;
 /** @type {boolean} */
ReactBootstrap.NavItemProps.prototype.fixedBottom;
 /** @type {boolean} */
ReactBootstrap.NavItemProps.prototype.fixedTop;
 /** @type {boolean} */
ReactBootstrap.NavItemProps.prototype.fluid;
 /** @type {boolean} */
ReactBootstrap.NavItemProps.prototype.inverse;
 /** @type {string} */
ReactBootstrap.NavItemProps.prototype.linkId;
 /** @type {boolean} */
ReactBootstrap.NavItemProps.prototype.navExpanded;
 /** @type {!ReactBootstrap.SelectCallback} */
ReactBootstrap.NavItemProps.prototype.onSelect;
 /** @type {!Function} */
ReactBootstrap.NavItemProps.prototype.onToggle;
 /** @type {boolean} */
ReactBootstrap.NavItemProps.prototype.staticTop;
 /** @type {?} */
ReactBootstrap.NavItemProps.prototype.toggleButton;
 /** @type {(string|number)} */
ReactBootstrap.NavItemProps.prototype.toggleNavKey;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.NavItemProps, !Object>} */
ReactBootstrap.NavItem;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.NavItemProps>} */
ReactBootstrap.NavItem;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.NavbarBrandProps = function() {};
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.NavbarBrand = function() {};
/**
 * @record
 * @struct
 */
ReactBootstrap.NavbarCollapseProps = function() {};

/** @typedef {!React.ClassicComponent<!ReactBootstrap.NavbarCollapseProps, !Object>} */
ReactBootstrap.NavbarCollapse;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.NavbarCollapseProps>} */
ReactBootstrap.NavbarCollapse;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.NavbarHeaderProps = function() {};

/** @typedef {!React.ClassicComponent<!ReactBootstrap.NavbarHeaderProps, !Object>} */
ReactBootstrap.NavbarHeader;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.NavbarHeaderProps>} */
ReactBootstrap.NavbarHeader;
/**
 * @record
 * @struct
 */
ReactBootstrap.NavbarToggleProps = function() {};
 /** @type {function(!React.MouseEvent<!HTMLButtonElement>): void} */
ReactBootstrap.NavbarToggleProps.prototype.onClick;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.NavbarToggleProps, !Object>} */
ReactBootstrap.NavbarToggle;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.NavbarToggleProps>} */
ReactBootstrap.NavbarToggle;
/**
 * @record
 * @struct
 */
ReactBootstrap.NavbarLinkProps = function() {};
 /** @type {string} */
ReactBootstrap.NavbarLinkProps.prototype.href;
 /** @type {function(!React.MouseEvent<!HTMLAnchorElement>): void} */
ReactBootstrap.NavbarLinkProps.prototype.onClick;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.NavbarLinkProps, !Object>} */
ReactBootstrap.NavbarLink;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.NavbarLinkProps>} */
ReactBootstrap.NavbarLink;
/**
 * @record
 * @struct
 */
ReactBootstrap.NavbarTextProps = function() {};
 /** @type {boolean} */
ReactBootstrap.NavbarTextProps.prototype.pullRight;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.NavbarTextProps, !Object>} */
ReactBootstrap.NavbarText;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.NavbarTextProps>} */
ReactBootstrap.NavbarText;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.NavbarFormProps = function() {};
 /** @type {(string|!React.ComponentClass<?>|!React.StatelessComponent<?>)} */
ReactBootstrap.NavbarFormProps.prototype.componentClass;
 /** @type {boolean} */
ReactBootstrap.NavbarFormProps.prototype.pullRight;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.NavbarFormProps, !Object>} */
ReactBootstrap.NavbarForm;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.NavbarFormProps>} */
ReactBootstrap.NavbarForm;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.NavbarProps = function() {};
 /** @type {?} */
ReactBootstrap.NavbarProps.prototype.brand;
 /** @type {string} */
ReactBootstrap.NavbarProps.prototype.bsSize;
 /** @type {string} */
ReactBootstrap.NavbarProps.prototype.bsStyle;
 /** @type {boolean} */
ReactBootstrap.NavbarProps.prototype.collapseOnSelect;
 /** @type {(string|!React.ComponentClass<?>|!React.StatelessComponent<?>)} */
ReactBootstrap.NavbarProps.prototype.componentClass;
 /** @type {boolean} */
ReactBootstrap.NavbarProps.prototype.defaultNavExpanded;
 /** @type {boolean} */
ReactBootstrap.NavbarProps.prototype.fixedBottom;
 /** @type {boolean} */
ReactBootstrap.NavbarProps.prototype.fixedTop;
 /** @type {boolean} */
ReactBootstrap.NavbarProps.prototype.fluid;
 /** @type {boolean} */
ReactBootstrap.NavbarProps.prototype.inverse;
 /** @type {boolean} */
ReactBootstrap.NavbarProps.prototype.navExpanded;
 /** @type {!Function} */
ReactBootstrap.NavbarProps.prototype.onToggle;
 /** @type {boolean} */
ReactBootstrap.NavbarProps.prototype.staticTop;
 /** @type {?} */
ReactBootstrap.NavbarProps.prototype.toggleButton;
 /** @type {(string|number)} */
ReactBootstrap.NavbarProps.prototype.toggleNavKey;
/**
 * @extends {React.ClassicComponentClass}
 * @record
 * @struct
 */
ReactBootstrap.NavbarClass = function() {};
 /** @type {?} */
ReactBootstrap.NavbarClass.prototype.Brand;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.NavbarCollapseProps>} */
ReactBootstrap.NavbarClass.prototype.Collapse;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.NavbarHeaderProps>} */
ReactBootstrap.NavbarClass.prototype.Header;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.NavbarToggleProps>} */
ReactBootstrap.NavbarClass.prototype.Toggle;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.NavbarLinkProps>} */
ReactBootstrap.NavbarClass.prototype.Link;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.NavbarTextProps>} */
ReactBootstrap.NavbarClass.prototype.Text;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.NavbarFormProps>} */
ReactBootstrap.NavbarClass.prototype.Form;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.NavbarProps, !Object>} */
ReactBootstrap.Navbar;
 /** @type {!ReactBootstrap.NavbarClass} */
ReactBootstrap.Navbar;
/**
 * @extends {ReactBootstrap.DropdownBaseProps}
 * @record
 * @struct
 */
ReactBootstrap.NavDropdownBaseProps = function() {};
 /** @type {boolean} */
ReactBootstrap.NavDropdownBaseProps.prototype.active;
 /** @type {boolean} */
ReactBootstrap.NavDropdownBaseProps.prototype.noCaret;
 /** @type {?} */
ReactBootstrap.NavDropdownBaseProps.prototype.eventKey;

/** @typedef {?} */
ReactBootstrap.NavDropdownProps;
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.NavDropdown = function() {};
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.TabsProps = function() {};
 /** @type {?} */
ReactBootstrap.TabsProps.prototype.activeKey;
 /** @type {boolean} */
ReactBootstrap.TabsProps.prototype.animation;
 /** @type {string} */
ReactBootstrap.TabsProps.prototype.bsStyle;
 /** @type {?} */
ReactBootstrap.TabsProps.prototype.defaultActiveKey;
 /** @type {!ReactBootstrap.SelectCallback} */
ReactBootstrap.TabsProps.prototype.onSelect;
 /** @type {?} */
ReactBootstrap.TabsProps.prototype.paneWidth;
 /** @type {string} */
ReactBootstrap.TabsProps.prototype.position;
 /** @type {?} */
ReactBootstrap.TabsProps.prototype.tabWidth;
 /** @type {boolean} */
ReactBootstrap.TabsProps.prototype.unmountOnExit;
 /** @type {boolean} */
ReactBootstrap.TabsProps.prototype.justified;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.TabsProps, !Object>} */
ReactBootstrap.Tabs;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.TabsProps>} */
ReactBootstrap.Tabs;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.TabProps = function() {};
 /** @type {boolean} */
ReactBootstrap.TabProps.prototype.animation;

/* TODO: PropertySignature: ReactBootstrap.'aria-labelledby' */
 /** @type {string} */
ReactBootstrap.TabProps.prototype.bsClass;
 /** @type {?} */
ReactBootstrap.TabProps.prototype.eventKey;
 /** @type {!Function} */
ReactBootstrap.TabProps.prototype.onEnter;
 /** @type {!Function} */
ReactBootstrap.TabProps.prototype.onEntered;
 /** @type {!Function} */
ReactBootstrap.TabProps.prototype.onEntering;
 /** @type {!Function} */
ReactBootstrap.TabProps.prototype.onExit;
 /** @type {!Function} */
ReactBootstrap.TabProps.prototype.onExited;
 /** @type {!Function} */
ReactBootstrap.TabProps.prototype.onExiting;
 /** @type {boolean} */
ReactBootstrap.TabProps.prototype.unmountOnExit;
 /** @type {string} */
ReactBootstrap.TabProps.prototype.tabClassName;
/**
 * @extends {React.ClassicComponentClass}
 * @record
 * @struct
 */
ReactBootstrap.TabClass = function() {};
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.TabContainerProps>} */
ReactBootstrap.TabClass.prototype.Container;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.TabPaneProps>} */
ReactBootstrap.TabClass.prototype.Pane;
 /** @type {!ReactBootstrap.TabClass} */
ReactBootstrap.TabClass.prototype.Content;

/** @typedef {!ReactBootstrap.TabClass} */
ReactBootstrap.Tab;
 /** @type {!ReactBootstrap.TabClass} */
ReactBootstrap.Tab;
/**
 * @extends {React.HTMLAttributes}
 * @record
 * @struct
 */
ReactBootstrap.TabContainerProps = function() {};
 /** @type {?} */
ReactBootstrap.TabContainerProps.prototype.activeKey;
 /** @type {?} */
ReactBootstrap.TabContainerProps.prototype.defaultActiveKey;
 /** @type {function(?, ?): string} */
ReactBootstrap.TabContainerProps.prototype.generateChildId;

/** @typedef {!React.ClassicComponentClass<!ReactBootstrap.TabContainerProps>} */
ReactBootstrap.TabContainer;
/**
 * @extends {React.HTMLAttributes}
 * @record
 * @struct
 */
ReactBootstrap.TabPaneProps = function() {};
 /** @type {(boolean|!React.ComponentClass<?>)} */
ReactBootstrap.TabPaneProps.prototype.animation;

/* TODO: PropertySignature: ReactBootstrap.'aria-labelledby' */
 /** @type {string} */
ReactBootstrap.TabPaneProps.prototype.bsClass;
 /** @type {?} */
ReactBootstrap.TabPaneProps.prototype.eventKey;
 /** @type {!Function} */
ReactBootstrap.TabPaneProps.prototype.onEnter;
 /** @type {!Function} */
ReactBootstrap.TabPaneProps.prototype.onEntered;
 /** @type {!Function} */
ReactBootstrap.TabPaneProps.prototype.onEntering;
 /** @type {!Function} */
ReactBootstrap.TabPaneProps.prototype.onExit;
 /** @type {!Function} */
ReactBootstrap.TabPaneProps.prototype.onExited;
 /** @type {!Function} */
ReactBootstrap.TabPaneProps.prototype.onExiting;
 /** @type {boolean} */
ReactBootstrap.TabPaneProps.prototype.unmountOnExit;

/** @typedef {!React.ClassicComponentClass<!ReactBootstrap.TabPaneProps>} */
ReactBootstrap.TabPane;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.PagerProps = function() {};
 /** @type {!ReactBootstrap.SelectCallback} */
ReactBootstrap.PagerProps.prototype.onSelect;
/**
 * @extends {React.ClassicComponentClass}
 * @record
 * @struct
 */
ReactBootstrap.PagerClass = function() {};
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.PageItemProps>} */
ReactBootstrap.PagerClass.prototype.Item;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.PagerProps, !Object>} */
ReactBootstrap.Pager;
 /** @type {!ReactBootstrap.PagerClass} */
ReactBootstrap.Pager;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.PageItemProps = function() {};
 /** @type {boolean} */
ReactBootstrap.PageItemProps.prototype.disabled;
 /** @type {?} */
ReactBootstrap.PageItemProps.prototype.eventKey;
 /** @type {boolean} */
ReactBootstrap.PageItemProps.prototype.next;
 /** @type {!ReactBootstrap.SelectCallback} */
ReactBootstrap.PageItemProps.prototype.onSelect;
 /** @type {boolean} */
ReactBootstrap.PageItemProps.prototype.previous;
 /** @type {string} */
ReactBootstrap.PageItemProps.prototype.target;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.PageItemProps, !Object>} */
ReactBootstrap.PageItem;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.PageItemProps>} */
ReactBootstrap.PageItem;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.PaginationProps = function() {};
 /** @type {number} */
ReactBootstrap.PaginationProps.prototype.activePage;
 /** @type {string} */
ReactBootstrap.PaginationProps.prototype.bsSize;
 /** @type {string} */
ReactBootstrap.PaginationProps.prototype.bsStyle;
 /** @type {boolean} */
ReactBootstrap.PaginationProps.prototype.boundaryLinks;
 /** @type {(string|!React.ComponentClass<?>|!React.StatelessComponent<?>)} */
ReactBootstrap.PaginationProps.prototype.buttonComponentClass;
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)} */
ReactBootstrap.PaginationProps.prototype.ellipsis;
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)} */
ReactBootstrap.PaginationProps.prototype.first;
 /** @type {number} */
ReactBootstrap.PaginationProps.prototype.items;
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)} */
ReactBootstrap.PaginationProps.prototype.last;
 /** @type {number} */
ReactBootstrap.PaginationProps.prototype.maxButtons;
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)} */
ReactBootstrap.PaginationProps.prototype.next;
 /** @type {!ReactBootstrap.SelectCallback} */
ReactBootstrap.PaginationProps.prototype.onSelect;
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)} */
ReactBootstrap.PaginationProps.prototype.prev;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.PaginationProps, !Object>} */
ReactBootstrap.Pagination;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.PaginationProps>} */
ReactBootstrap.Pagination;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.AlertProps = function() {};
 /** @type {string} */
ReactBootstrap.AlertProps.prototype.bsSize;
 /** @type {string} */
ReactBootstrap.AlertProps.prototype.bsStyle;
 /** @type {string} */
ReactBootstrap.AlertProps.prototype.closeLabel;
 /** @type {number} */
ReactBootstrap.AlertProps.prototype.dismissAfter;
 /** @type {!Function} */
ReactBootstrap.AlertProps.prototype.onDismiss;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.AlertProps, !Object>} */
ReactBootstrap.Alert;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.AlertProps>} */
ReactBootstrap.Alert;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.CarouselProps = function() {};
 /** @type {number} */
ReactBootstrap.CarouselProps.prototype.activeIndex;
 /** @type {string} */
ReactBootstrap.CarouselProps.prototype.bsSize;
 /** @type {string} */
ReactBootstrap.CarouselProps.prototype.bsStyle;
 /** @type {boolean} */
ReactBootstrap.CarouselProps.prototype.controls;
 /** @type {number} */
ReactBootstrap.CarouselProps.prototype.defaultActiveIndex;
 /** @type {string} */
ReactBootstrap.CarouselProps.prototype.direction;
 /** @type {boolean} */
ReactBootstrap.CarouselProps.prototype.indicators;
 /** @type {number} */
ReactBootstrap.CarouselProps.prototype.interval;
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)} */
ReactBootstrap.CarouselProps.prototype.nextIcon;
 /** @type {!ReactBootstrap.SelectCallback} */
ReactBootstrap.CarouselProps.prototype.onSelect;
 /** @type {!Function} */
ReactBootstrap.CarouselProps.prototype.onSlideEnd;
 /** @type {boolean} */
ReactBootstrap.CarouselProps.prototype.pauseOnHover;
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)} */
ReactBootstrap.CarouselProps.prototype.prevIcon;
 /** @type {boolean} */
ReactBootstrap.CarouselProps.prototype.slide;
/**
 * @extends {React.ClassicComponentClass}
 * @record
 * @struct
 */
ReactBootstrap.CarouselClass = function() {};
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.CarouselCaptionProps>} */
ReactBootstrap.CarouselClass.prototype.Caption;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.CarouselItemProps>} */
ReactBootstrap.CarouselClass.prototype.Item;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.CarouselProps, !Object>} */
ReactBootstrap.Carousel;
 /** @type {!ReactBootstrap.CarouselClass} */
ReactBootstrap.Carousel;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.CarouselItemProps = function() {};
 /** @type {boolean} */
ReactBootstrap.CarouselItemProps.prototype.active;
 /** @type {boolean} */
ReactBootstrap.CarouselItemProps.prototype.animtateIn;
 /** @type {boolean} */
ReactBootstrap.CarouselItemProps.prototype.animateOut;
 /** @type {string} */
ReactBootstrap.CarouselItemProps.prototype.direction;
 /** @type {number} */
ReactBootstrap.CarouselItemProps.prototype.index;
 /** @type {!Function} */
ReactBootstrap.CarouselItemProps.prototype.onAnimateOutEnd;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.CarouselItemProps, !Object>} */
ReactBootstrap.CarouselItem;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.CarouselItemProps>} */
ReactBootstrap.CarouselItem;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.CarouselCaptionProps = function() {};
 /** @type {(string|!React.ComponentClass<?>|!React.StatelessComponent<?>)} */
ReactBootstrap.CarouselCaptionProps.prototype.componentClass;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.CarouselCaptionProps, !Object>} */
ReactBootstrap.CarouselCaption;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.CarouselCaptionProps>} */
ReactBootstrap.CarouselCaption;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.GridProps = function() {};
 /** @type {(string|!React.ComponentClass<?>|!React.StatelessComponent<?>)} */
ReactBootstrap.GridProps.prototype.componentClass;
 /** @type {boolean} */
ReactBootstrap.GridProps.prototype.fluid;
 /** @type {string} */
ReactBootstrap.GridProps.prototype.bsClass;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.GridProps, !Object>} */
ReactBootstrap.Grid;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.GridProps>} */
ReactBootstrap.Grid;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.RowProps = function() {};
 /** @type {(string|!React.ComponentClass<?>|!React.StatelessComponent<?>)} */
ReactBootstrap.RowProps.prototype.componentClass;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.RowProps, !Object>} */
ReactBootstrap.Row;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.RowProps>} */
ReactBootstrap.Row;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.ColProps = function() {};
 /** @type {(string|!React.ComponentClass<?>|!React.StatelessComponent<?>)} */
ReactBootstrap.ColProps.prototype.componentClass;
 /** @type {number} */
ReactBootstrap.ColProps.prototype.lg;
 /** @type {boolean} */
ReactBootstrap.ColProps.prototype.lgHidden;
 /** @type {number} */
ReactBootstrap.ColProps.prototype.lgOffset;
 /** @type {number} */
ReactBootstrap.ColProps.prototype.lgPull;
 /** @type {number} */
ReactBootstrap.ColProps.prototype.lgPush;
 /** @type {number} */
ReactBootstrap.ColProps.prototype.md;
 /** @type {boolean} */
ReactBootstrap.ColProps.prototype.mdHidden;
 /** @type {number} */
ReactBootstrap.ColProps.prototype.mdOffset;
 /** @type {number} */
ReactBootstrap.ColProps.prototype.mdPull;
 /** @type {number} */
ReactBootstrap.ColProps.prototype.mdPush;
 /** @type {number} */
ReactBootstrap.ColProps.prototype.sm;
 /** @type {boolean} */
ReactBootstrap.ColProps.prototype.smHidden;
 /** @type {number} */
ReactBootstrap.ColProps.prototype.smOffset;
 /** @type {number} */
ReactBootstrap.ColProps.prototype.smPull;
 /** @type {number} */
ReactBootstrap.ColProps.prototype.smPush;
 /** @type {number} */
ReactBootstrap.ColProps.prototype.xs;
 /** @type {boolean} */
ReactBootstrap.ColProps.prototype.xsHidden;
 /** @type {number} */
ReactBootstrap.ColProps.prototype.xsOffset;
 /** @type {number} */
ReactBootstrap.ColProps.prototype.xsPull;
 /** @type {number} */
ReactBootstrap.ColProps.prototype.xsPush;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.ColProps, !Object>} */
ReactBootstrap.Col;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.ColProps>} */
ReactBootstrap.Col;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.ThumbnailProps = function() {};
 /** @type {string} */
ReactBootstrap.ThumbnailProps.prototype.bsSize;
 /** @type {string} */
ReactBootstrap.ThumbnailProps.prototype.bsStyle;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.ThumbnailProps, !Object>} */
ReactBootstrap.Thumbnail;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.ThumbnailProps>} */
ReactBootstrap.Thumbnail;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.ListGroupProps = function() {};
 /** @type {(string|!React.ComponentClass<?>|!React.StatelessComponent<?>)} */
ReactBootstrap.ListGroupProps.prototype.componentClass;
 /** @type {boolean} */
ReactBootstrap.ListGroupProps.prototype.fill;
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.ListGroup = function() {};
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.ListGroupItemProps = function() {};
 /** @type {?} */
ReactBootstrap.ListGroupItemProps.prototype.active;
 /** @type {string} */
ReactBootstrap.ListGroupItemProps.prototype.bsSize;
 /** @type {string} */
ReactBootstrap.ListGroupItemProps.prototype.bsStyle;
 /** @type {?} */
ReactBootstrap.ListGroupItemProps.prototype.eventKey;
 /** @type {?} */
ReactBootstrap.ListGroupItemProps.prototype.header;
 /** @type {?} */
ReactBootstrap.ListGroupItemProps.prototype.key;
 /** @type {boolean} */
ReactBootstrap.ListGroupItemProps.prototype.listItem;
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.ListGroupItem = function() {};
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.LabelProps = function() {};
 /** @type {string} */
ReactBootstrap.LabelProps.prototype.bsSize;
 /** @type {string} */
ReactBootstrap.LabelProps.prototype.bsStyle;
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.Label = function() {};
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.BadgeProps = function() {};
 /** @type {string} */
ReactBootstrap.BadgeProps.prototype.bsClass;
 /** @type {boolean} */
ReactBootstrap.BadgeProps.prototype.pullRight;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.BadgeProps, !Object>} */
ReactBootstrap.Badge;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.BadgeProps>} */
ReactBootstrap.Badge;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.JumbotronProps = function() {};
 /** @type {(string|!React.ComponentClass<?>|!React.StatelessComponent<?>)} */
ReactBootstrap.JumbotronProps.prototype.componentClass;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.JumbotronProps, !Object>} */
ReactBootstrap.Jumbotron;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.JumbotronProps>} */
ReactBootstrap.Jumbotron;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.ImageProps = function() {};
 /** @type {boolean} */
ReactBootstrap.ImageProps.prototype.circle;
 /** @type {boolean} */
ReactBootstrap.ImageProps.prototype.responsive;
 /** @type {boolean} */
ReactBootstrap.ImageProps.prototype.rounded;
 /** @type {boolean} */
ReactBootstrap.ImageProps.prototype.thumbnail;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.ImageProps, !Object>} */
ReactBootstrap.Image;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.ImageProps>} */
ReactBootstrap.Image;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.ResponsiveEmbedProps = function() {};
 /** @type {boolean} */
ReactBootstrap.ResponsiveEmbedProps.prototype.a16by9;
 /** @type {boolean} */
ReactBootstrap.ResponsiveEmbedProps.prototype.a4by3;
 /** @type {string} */
ReactBootstrap.ResponsiveEmbedProps.prototype.bsClass;
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.ResponsiveEmbed = function() {};
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.PageHeaderProps = function() {};
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.PageHeader = function() {};
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.WellProps = function() {};
 /** @type {string} */
ReactBootstrap.WellProps.prototype.bsSize;
 /** @type {string} */
ReactBootstrap.WellProps.prototype.bsStyle;
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.Well = function() {};
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.GlyphiconProps = function() {};
 /** @type {string} */
ReactBootstrap.GlyphiconProps.prototype.glyph;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.GlyphiconProps, !Object>} */
ReactBootstrap.Glyphicon;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.GlyphiconProps>} */
ReactBootstrap.Glyphicon;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.TableProps = function() {};
 /** @type {boolean} */
ReactBootstrap.TableProps.prototype.bordered;
 /** @type {boolean} */
ReactBootstrap.TableProps.prototype.condensed;
 /** @type {boolean} */
ReactBootstrap.TableProps.prototype.hover;
 /** @type {boolean} */
ReactBootstrap.TableProps.prototype.responsive;
 /** @type {boolean} */
ReactBootstrap.TableProps.prototype.striped;
 /** @type {boolean} */
ReactBootstrap.TableProps.prototype.fill;
 /** @type {string} */
ReactBootstrap.TableProps.prototype.bsClass;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.TableProps, !Object>} */
ReactBootstrap.Table;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.TableProps>} */
ReactBootstrap.Table;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.InputGroupProps = function() {};
 /** @type {string} */
ReactBootstrap.InputGroupProps.prototype.bsClass;
 /** @type {string} */
ReactBootstrap.InputGroupProps.prototype.bsSize;
/**
 * @extends {React.ClassicComponentClass}
 * @record
 * @struct
 */
ReactBootstrap.InputGroupClass = function() {};
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.InputGroupAddonProps>} */
ReactBootstrap.InputGroupClass.prototype.Addon;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.InputGroupButtonProps>} */
ReactBootstrap.InputGroupClass.prototype.Button;

/** @typedef {!React.Component<!ReactBootstrap.InputGroupProps, !Object>} */
ReactBootstrap.InputGroup;
 /** @type {!ReactBootstrap.InputGroupClass} */
ReactBootstrap.InputGroup;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.InputGroupAddonProps = function() {};

/** @typedef {!React.ClassicComponent<!ReactBootstrap.InputGroupAddonProps, !Object>} */
ReactBootstrap.InputGroupAddon;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.InputGroupAddonProps>} */
ReactBootstrap.InputGroupAddon;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.InputGroupButtonProps = function() {};

/** @typedef {!React.ClassicComponent<!ReactBootstrap.InputGroupButtonProps, !Object>} */
ReactBootstrap.InputGroupButton;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.InputGroupButtonProps>} */
ReactBootstrap.InputGroupButton;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.FormProps = function() {};
 /** @type {string} */
ReactBootstrap.FormProps.prototype.bsClass;
 /** @type {(string|!React.ComponentClass<?>|!React.StatelessComponent<?>)} */
ReactBootstrap.FormProps.prototype.componentClass;
 /** @type {boolean} */
ReactBootstrap.FormProps.prototype.horizontal;
 /** @type {boolean} */
ReactBootstrap.FormProps.prototype.inline;
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.Form = function() {};
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.FormGroupProps = function() {};
 /** @type {string} */
ReactBootstrap.FormGroupProps.prototype.bsClass;
 /** @type {string} */
ReactBootstrap.FormGroupProps.prototype.bsSize;
 /** @type {string} */
ReactBootstrap.FormGroupProps.prototype.controlId;
 /** @type {string} */
ReactBootstrap.FormGroupProps.prototype.validationState;
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.FormGroup = function() {};
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.ControlLabelProps = function() {};
 /** @type {string} */
ReactBootstrap.ControlLabelProps.prototype.bsClass;
 /** @type {string} */
ReactBootstrap.ControlLabelProps.prototype.htmlFor;
 /** @type {boolean} */
ReactBootstrap.ControlLabelProps.prototype.srOnly;
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.ControlLabel = function() {};
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.FormControlProps = function() {};
 /** @type {string} */
ReactBootstrap.FormControlProps.prototype.bsClass;
 /** @type {string} */
ReactBootstrap.FormControlProps.prototype.bsSize;
 /** @type {(string|!React.ComponentClass<?>|!React.StatelessComponent<?>)} */
ReactBootstrap.FormControlProps.prototype.componentClass;
 /** @type {string} */
ReactBootstrap.FormControlProps.prototype.id;
 /** @type {function(!HTMLInputElement): void} */
ReactBootstrap.FormControlProps.prototype.inputRef;
 /** @type {string} */
ReactBootstrap.FormControlProps.prototype.type;
/**
 * @extends {React.ClassicComponentClass}
 * @record
 * @struct
 */
ReactBootstrap.FormControlClass = function() {};
 /** @type {?} */
ReactBootstrap.FormControlClass.prototype.Feedback;
 /** @type {?} */
ReactBootstrap.FormControlClass.prototype.Static;

/** @typedef {!React.Component<!ReactBootstrap.FormControlProps, !Object>} */
ReactBootstrap.FormControl;
 /** @type {!ReactBootstrap.FormControlClass} */
ReactBootstrap.FormControl;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.FormControlFeedbackProps = function() {};
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.FormControlFeedback = function() {};
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.FormControlStaticProps = function() {};
 /** @type {string} */
ReactBootstrap.FormControlStaticProps.prototype.bsClass;
 /** @type {(string|!React.ComponentClass<?>|!React.StatelessComponent<?>)} */
ReactBootstrap.FormControlStaticProps.prototype.componentClass;
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.FormControlStatic = function() {};
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.HelpBlockProps = function() {};
 /** @type {string} */
ReactBootstrap.HelpBlockProps.prototype.bsClass;
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.HelpBlock = function() {};
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.RadioProps = function() {};
 /** @type {string} */
ReactBootstrap.RadioProps.prototype.bsClass;
 /** @type {boolean} */
ReactBootstrap.RadioProps.prototype.disabled;
 /** @type {boolean} */
ReactBootstrap.RadioProps.prototype.inline;
 /** @type {function(!HTMLInputElement): void} */
ReactBootstrap.RadioProps.prototype.inputRef;
 /** @type {string} */
ReactBootstrap.RadioProps.prototype.validationState;
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.Radio = function() {};
/**
 * @extends {React.Props}
 * @record
 * @struct
 */
ReactBootstrap.PortalProps = function() {};
 /** @type {(string|!Function)} */
ReactBootstrap.PortalProps.prototype.dimension;
 /** @type {!Function} */
ReactBootstrap.PortalProps.prototype.getDimensionValue;
 /** @type {boolean} */
ReactBootstrap.PortalProps.prototype.in;
 /** @type {!Function} */
ReactBootstrap.PortalProps.prototype.onEnter;
 /** @type {!Function} */
ReactBootstrap.PortalProps.prototype.onEntered;
 /** @type {!Function} */
ReactBootstrap.PortalProps.prototype.onEntering;
 /** @type {!Function} */
ReactBootstrap.PortalProps.prototype.onExit;
 /** @type {!Function} */
ReactBootstrap.PortalProps.prototype.onExited;
 /** @type {!Function} */
ReactBootstrap.PortalProps.prototype.onExiting;
 /** @type {string} */
ReactBootstrap.PortalProps.prototype.role;
 /** @type {number} */
ReactBootstrap.PortalProps.prototype.timeout;
 /** @type {boolean} */
ReactBootstrap.PortalProps.prototype.transitionAppear;
 /** @type {boolean} */
ReactBootstrap.PortalProps.prototype.unmountOnExit;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.PortalProps, !Object>} */
ReactBootstrap.Portal;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.PortalProps>} */
ReactBootstrap.Portal;
/**
 * @extends {ReactBootstrap.TransitionCallbacks}
 * @extends {React.Props}
 * @record
 * @struct
 */
ReactBootstrap.PositionProps = function() {};
 /** @type {(string|!Function)} */
ReactBootstrap.PositionProps.prototype.dimension;
 /** @type {!Function} */
ReactBootstrap.PositionProps.prototype.getDimensionValue;
 /** @type {boolean} */
ReactBootstrap.PositionProps.prototype.in;
 /** @type {string} */
ReactBootstrap.PositionProps.prototype.role;
 /** @type {number} */
ReactBootstrap.PositionProps.prototype.timeout;
 /** @type {boolean} */
ReactBootstrap.PositionProps.prototype.transitionAppear;
 /** @type {boolean} */
ReactBootstrap.PositionProps.prototype.unmountOnExit;
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactBootstrap.Position = function() {};
/**
 * @record
 * @struct
 */
ReactBootstrap.MediaLeftProps = function() {};
 /** @type {string} */
ReactBootstrap.MediaLeftProps.prototype.align;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.MediaLeftProps, !Object>} */
ReactBootstrap.MediaLeft;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.MediaLeftProps>} */
ReactBootstrap.MediaLeft;
/**
 * @record
 * @struct
 */
ReactBootstrap.MediaRightProps = function() {};
 /** @type {string} */
ReactBootstrap.MediaRightProps.prototype.align;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.MediaRightProps, !Object>} */
ReactBootstrap.MediaRight;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.MediaRightProps>} */
ReactBootstrap.MediaRight;
/**
 * @record
 * @struct
 */
ReactBootstrap.MediaHeadingProps = function() {};
 /** @type {(string|!React.ComponentClass<?>|!React.StatelessComponent<?>)} */
ReactBootstrap.MediaHeadingProps.prototype.componentClass;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.MediaHeadingProps, !Object>} */
ReactBootstrap.MediaHeading;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.MediaHeadingProps>} */
ReactBootstrap.MediaHeading;
/**
 * @record
 * @struct
 */
ReactBootstrap.MediaBodyProps = function() {};
 /** @type {(string|!React.ComponentClass<?>|!React.StatelessComponent<?>)} */
ReactBootstrap.MediaBodyProps.prototype.componentClass;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.MediaBodyProps, !Object>} */
ReactBootstrap.MediaBody;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.MediaBodyProps>} */
ReactBootstrap.MediaBody;
/**
 * @record
 * @struct
 */
ReactBootstrap.MediaListProps = function() {};

/** @typedef {!React.ClassicComponent<!ReactBootstrap.MediaListProps, !Object>} */
ReactBootstrap.MediaList;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.MediaListProps>} */
ReactBootstrap.MediaList;
/**
 * @record
 * @struct
 */
ReactBootstrap.MediaListItemProps = function() {};
 /** @type {(string|!React.ComponentClass<?>|!React.StatelessComponent<?>)} */
ReactBootstrap.MediaListItemProps.prototype.componentClass;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.MediaListItemProps, !Object>} */
ReactBootstrap.MediaListItem;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.MediaListItemProps>} */
ReactBootstrap.MediaListItem;
/**
 * @extends {React.HTMLProps}
 * @record
 * @struct
 */
ReactBootstrap.MediaProps = function() {};
 /** @type {(string|!React.ComponentClass<?>|!React.StatelessComponent<?>)} */
ReactBootstrap.MediaProps.prototype.componentClass;
/**
 * @extends {React.ClassicComponentClass}
 * @record
 * @struct
 */
ReactBootstrap.MediaClass = function() {};
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.MediaLeftProps>} */
ReactBootstrap.MediaClass.prototype.Left;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.MediaRightProps>} */
ReactBootstrap.MediaClass.prototype.Right;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.MediaHeadingProps>} */
ReactBootstrap.MediaClass.prototype.Heading;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.MediaBodyProps>} */
ReactBootstrap.MediaClass.prototype.Body;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.MediaListProps>} */
ReactBootstrap.MediaClass.prototype.List;
 /** @type {!React.ClassicComponentClass<!ReactBootstrap.MediaListItemProps>} */
ReactBootstrap.MediaClass.prototype.ListItem;

/** @typedef {!React.ClassicComponent<!ReactBootstrap.MediaProps, !Object>} */
ReactBootstrap.Media;
 /** @type {!ReactBootstrap.MediaClass} */
ReactBootstrap.Media;
/**
 * @record
 * @struct
 */
ReactBootstrap.bootstrapUtilsType = function() {};

/**
 * @param {...!Function} funcs
 * @return {!Function}
 */
ReactBootstrap.createChainedFunctionType = function(funcs) {};
/**
 * @record
 * @struct
 */
ReactBootstrap.ValidComponentChildrenType = function() {};
 /** @type {function(?, ?, ?): ?} */
ReactBootstrap.ValidComponentChildrenType.prototype.map;
 /** @type {function(?, ?, ?): ?} */
ReactBootstrap.ValidComponentChildrenType.prototype.forEach;
 /** @type {function(?): number} */
ReactBootstrap.ValidComponentChildrenType.prototype.count;
 /** @type {function(?, ?, ?): ?} */
ReactBootstrap.ValidComponentChildrenType.prototype.filter;
 /** @type {function(?, ?, ?): ?} */
ReactBootstrap.ValidComponentChildrenType.prototype.find;
 /** @type {function(?, ?, ?): ?} */
ReactBootstrap.ValidComponentChildrenType.prototype.every;
 /** @type {function(?, ?, ?): ?} */
ReactBootstrap.ValidComponentChildrenType.prototype.some;
 /** @type {function(?): ?} */
ReactBootstrap.ValidComponentChildrenType.prototype.toArray;
/**
 * @constructor
 * @struct
 */
ReactBootstrap.utils = function() {};
 /** @type {!ReactBootstrap.bootstrapUtilsType} */
ReactBootstrap.utils.bootstrapUtils;
 /** @type {function(!Array<!Function>): !Function} */
ReactBootstrap.utils.createChainedFunction;
 /** @type {!ReactBootstrap.ValidComponentChildrenType} */
ReactBootstrap.utils.ValidComponentChildren;
