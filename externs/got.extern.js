/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/got/index.d.ts:

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: ExportAssignment in  */
 /** @type {?} */
var got;
/**
 * @record
 * @struct
 */
got.GotFn = function() {};

/* TODO: CallSignature: got */

/* TODO: CallSignature: got */

/* TODO: CallSignature: got */

/* TODO: CallSignature: got */

/* TODO: CallSignature: got */

/* TODO: CallSignature: got */

/** @typedef {function((string|!RequestOptions|!URL), ?): ?} */
got.GotStreamFn;

/** @typedef {(string|!RequestOptions|!URL)} */
got.GotUrl;
/**
 * @record
 * @struct
 */
got.GotBodyOptions = function() {};
 /** @type {(string|?|!internal.Readable)} */
got.GotBodyOptions.prototype.body;
/**
 * @record
 * @struct
 */
got.GotJSONOptions = function() {};
 /** @type {!Object} */
got.GotJSONOptions.prototype.body;
 /** @type {boolean} */
got.GotJSONOptions.prototype.form;
 /** @type {boolean} */
got.GotJSONOptions.prototype.json;
/**
 * @record
 * @struct
 */
got.GotFormOptions = function() {};
 /** @type {!Object<string,?>} */
got.GotFormOptions.prototype.body;
 /** @type {boolean} */
got.GotFormOptions.prototype.form;
 /** @type {boolean} */
got.GotFormOptions.prototype.json;

/** @typedef {?} */
got.GotOptions;
/**
 * @record
 * @struct
 */
got.TimeoutOptions = function() {};
 /** @type {number} */
got.TimeoutOptions.prototype.connect;
 /** @type {number} */
got.TimeoutOptions.prototype.socket;
 /** @type {number} */
got.TimeoutOptions.prototype.request;

/** @typedef {function(number, ?): number} */
got.RetryFunction;
/**
 * @record
 * @struct
 */
got.Response = function() {};
 /** @type {B} */
got.Response.prototype.body;
 /** @type {string} */
got.Response.prototype.url;
 /** @type {string} */
got.Response.prototype.requestUrl;
 /** @type {!Array<string>} */
got.Response.prototype.redirectUrls;

/** @typedef {?} */
got.GotPromise;
/**
 * @record
 * @struct
 */
got.GotEmitter = function() {};

/**
 * @param {string} event
 * @param {function(!ClientRequest): void|function(!IncomingMessage): void|function(!IncomingMessage, ?): void|function((!got.RequestError|!got.ReadError|!got.ParseError|!got.HTTPError|!got.MaxRedirectsError|!got.UnsupportedProtocolError), ?, !IncomingMessage): void} listener
 * @return {GotEmitter}
 */
got.GotEmitter.prototype.addListener = function(event, listener) {};

/**
 * @param {string} event
 * @param {function(!ClientRequest): void|function(!IncomingMessage): void|function(!IncomingMessage, ?): void|function((!got.RequestError|!got.ReadError|!got.ParseError|!got.HTTPError|!got.MaxRedirectsError|!got.UnsupportedProtocolError), ?, !IncomingMessage): void} listener
 * @return {GotEmitter}
 */
got.GotEmitter.prototype.on = function(event, listener) {};

/**
 * @param {string} event
 * @param {function(!ClientRequest): void|function(!IncomingMessage): void|function(!IncomingMessage, ?): void|function((!got.RequestError|!got.ReadError|!got.ParseError|!got.HTTPError|!got.MaxRedirectsError|!got.UnsupportedProtocolError), ?, !IncomingMessage): void} listener
 * @return {GotEmitter}
 */
got.GotEmitter.prototype.once = function(event, listener) {};

/**
 * @param {string} event
 * @param {function(!ClientRequest): void|function(!IncomingMessage): void|function(!IncomingMessage, ?): void|function((!got.RequestError|!got.ReadError|!got.ParseError|!got.HTTPError|!got.MaxRedirectsError|!got.UnsupportedProtocolError), ?, !IncomingMessage): void} listener
 * @return {GotEmitter}
 */
got.GotEmitter.prototype.prependListener = function(event, listener) {};

/**
 * @param {string} event
 * @param {function(!ClientRequest): void|function(!IncomingMessage): void|function(!IncomingMessage, ?): void|function((!got.RequestError|!got.ReadError|!got.ParseError|!got.HTTPError|!got.MaxRedirectsError|!got.UnsupportedProtocolError), ?, !IncomingMessage): void} listener
 * @return {GotEmitter}
 */
got.GotEmitter.prototype.prependOnceListener = function(event, listener) {};

/**
 * @param {string} event
 * @param {function(!ClientRequest): void|function(!IncomingMessage): void|function(!IncomingMessage, ?): void|function((!got.RequestError|!got.ReadError|!got.ParseError|!got.HTTPError|!got.MaxRedirectsError|!got.UnsupportedProtocolError), ?, !IncomingMessage): void} listener
 * @return {GotEmitter}
 */
got.GotEmitter.prototype.removeListener = function(event, listener) {};

/** @typedef {(!got.RequestError|!got.ReadError|!got.ParseError|!got.HTTPError|!got.MaxRedirectsError|!got.UnsupportedProtocolError)} */
got.GotError;
/**
 * @extends {got.StdError}
 * @record
 * @struct
 */
got.RequestError = function() {};
 /** @type {string} */
got.RequestError.prototype.name;
/**
 * @extends {got.StdError}
 * @record
 * @struct
 */
got.ReadError = function() {};
 /** @type {string} */
got.ReadError.prototype.name;
/**
 * @extends {got.StdError}
 * @record
 * @struct
 */
got.ParseError = function() {};
 /** @type {string} */
got.ParseError.prototype.name;
 /** @type {number} */
got.ParseError.prototype.statusCode;
 /** @type {string} */
got.ParseError.prototype.statusMessage;
/**
 * @extends {got.StdError}
 * @record
 * @struct
 */
got.HTTPError = function() {};
 /** @type {string} */
got.HTTPError.prototype.name;
 /** @type {number} */
got.HTTPError.prototype.statusCode;
 /** @type {string} */
got.HTTPError.prototype.statusMessage;
 /** @type {!IncomingHttpHeaders} */
got.HTTPError.prototype.headers;
/**
 * @extends {got.StdError}
 * @record
 * @struct
 */
got.MaxRedirectsError = function() {};
 /** @type {string} */
got.MaxRedirectsError.prototype.name;
 /** @type {number} */
got.MaxRedirectsError.prototype.statusCode;
 /** @type {string} */
got.MaxRedirectsError.prototype.statusMessage;
 /** @type {!Array<string>} */
got.MaxRedirectsError.prototype.redirectUrls;
/**
 * @extends {got.StdError}
 * @record
 * @struct
 */
got.UnsupportedProtocolError = function() {};
 /** @type {string} */
got.UnsupportedProtocolError.prototype.name;
/**
 * @record
 * @struct
 */
got.StdError = function() {};
 /** @type {string} */
got.StdError.prototype.code;
 /** @type {string} */
got.StdError.prototype.host;
 /** @type {string} */
got.StdError.prototype.hostname;
 /** @type {string} */
got.StdError.prototype.method;
 /** @type {string} */
got.StdError.prototype.path;
 /** @type {string} */
got.StdError.prototype.protocol;
 /** @type {string} */
got.StdError.prototype.url;
 /** @type {?} */
got.StdError.prototype.response;
