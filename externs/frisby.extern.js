/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/frisby/index.d.ts:
/**
 * @record
 * @struct
 */
function Frisby() {}

/**
 * @param {?} opts
 * @return {?}
 */
Frisby.prototype.globalSetup = function(opts) {};

/**
 * @param {number=} seconds
 * @return {!Frisby}
 */
Frisby.prototype.timeout = function(seconds) {};

/**
 * @return {!Frisby}
 */
Frisby.prototype.reset = function() {};

/**
 * @return {!Frisby}
 */
Frisby.prototype.not = function() {};

/**
 * @param {string} key
 * @param {string} content
 * @return {!Frisby}
 */
Frisby.prototype.addHeader = function(key, content) {};

/**
 * @param {!Object} headers
 * @return {!Frisby}
 */
Frisby.prototype.addHeaders = function(headers) {};

/**
 * @param {string} key
 * @return {!Frisby}
 */
Frisby.prototype.removeHeader = function(key) {};

/**
 * @param {?} type
 * @return {!Frisby}
 */
Frisby.prototype.responseType = function(type) {};

/**
 * @param {string} username
 * @param {string} password
 * @param {boolean} digest
 * @return {!Frisby}
 */
Frisby.prototype.auth = function(username, password, digest) {};

/**
 * @param {string} uri
 * @param {?=} params
 * @return {!Frisby}
 */
Frisby.prototype.get = function(uri, params) {};

/**
 * @param {string} uri
 * @param {?=} data
 * @param {?=} params
 * @return {!Frisby}
 */
Frisby.prototype.patch = function(uri, data, params) {};

/**
 * @param {string} uri
 * @param {?=} data
 * @param {?=} params
 * @return {!Frisby}
 */
Frisby.prototype.post = function(uri, data, params) {};

/**
 * @param {string} uri
 * @param {?=} data
 * @param {?=} params
 * @return {!Frisby}
 */
Frisby.prototype.put = function(uri, data, params) {};

/**
 * @param {string} uri
 * @param {?=} data
 * @param {?=} params
 * @return {!Frisby}
 */
Frisby.prototype.delete = function(uri, data, params) {};

/**
 * @param {string} uri
 * @param {?=} params
 * @return {!Frisby}
 */
Frisby.prototype.head = function(uri, params) {};

/**
 * @param {string} uri
 * @param {?=} params
 * @return {!Frisby}
 */
Frisby.prototype.options = function(uri, params) {};

/**
 * @param {number} milliseconds
 * @return {!Frisby}
 */
Frisby.prototype.expectMaxResponseTime = function(milliseconds) {};

/**
 * @param {number} statusCode
 * @return {!Frisby}
 */
Frisby.prototype.expectStatus = function(statusCode) {};

/**
 * @param {string} header
 * @param {string} content
 * @return {!Frisby}
 */
Frisby.prototype.expectHeader = function(header, content) {};

/**
 * @param {string} header
 * @param {string} content
 * @return {!Frisby}
 */
Frisby.prototype.expectHeaderContains = function(header, content) {};

/**
 * @param {string} header
 * @param {!RegExp} pattern
 * @return {!Frisby}
 */
Frisby.prototype.expectHeaderToMatch = function(header, pattern) {};

/**
 * @param {string} content
 * @return {!Frisby}
 */
Frisby.prototype.expectBodyContains = function(content) {};

/**
 * @param {?|string} json_or_path
 * @param {?=} json
 * @return {!Frisby}
 */
Frisby.prototype.expectJSONTypes = function(json_or_path, json) {};

/**
 * @param {?|string} json_or_path
 * @param {?=} json
 * @return {!Frisby}
 */
Frisby.prototype.expectJSON = function(json_or_path, json) {};

/**
 * @param {string} path
 * @param {?} jsonSchema
 * @return {!Frisby}
 */
Frisby.prototype.expectJSONSchema = function(path, jsonSchema) {};

/**
 * @param {number|string} length_or_path
 * @param {number=} length
 * @return {!Frisby}
 */
Frisby.prototype.expectJSONLength = function(length_or_path, length) {};

/**
 * @return {!Frisby}
 */
Frisby.prototype.inspectRequest = function() {};

/**
 * @return {!Frisby}
 */
Frisby.prototype.inspectResponse = function() {};

/**
 * @return {!Frisby}
 */
Frisby.prototype.inspectHeaders = function() {};

/**
 * @return {!Frisby}
 */
Frisby.prototype.inspectBody = function() {};

/**
 * @return {!Frisby}
 */
Frisby.prototype.inspectJSON = function() {};

/**
 * @return {!Frisby}
 */
Frisby.prototype.inspectStatus = function() {};

/**
 * @param {number} count
 * @param {number=} delayInMilliseconds
 * @return {!Frisby}
 */
Frisby.prototype.retry = function(count, delayInMilliseconds) {};

/**
 * @param {number} delayInMilliseconds
 * @return {!Frisby}
 */
Frisby.prototype.waits = function(delayInMilliseconds) {};

/**
 * @param {function(!Array<?>): void} callback
 * @return {!Frisby}
 */
Frisby.prototype.after = function(callback) {};

/**
 * @param {function(!Array<?>): void} callback
 * @return {!Frisby}
 */
Frisby.prototype.afterJSON = function(callback) {};

/**
 * @param {function(!Array<?>): void} fn
 * @return {!Frisby}
 */
Frisby.prototype.exceptionHandler = function(fn) {};

/**
 * @return {void}
 */
Frisby.prototype.toss = function() {};

/**
 * @param {string} msg
 * @return {!Frisby}
 */
Frisby.prototype.create = function(msg) {};

/**
 * @param {?} expected
 * @return {boolean}
 */
jasmine.Matchers.prototype.toMatchOrBeNull = function(expected) {};

/**
 * @param {?} expected
 * @return {boolean}
 */
jasmine.Matchers.prototype.toMatchOrBeEmpty = function(expected) {};

/**
 * @param {?} expected
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeType = function(expected) {};

/**
 * @param {?} expected
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeTypeOrNull = function(expected) {};

/**
 * @param {?} expected
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeTypeOrUndefined = function(expected) {};

/**
 * @param {?} expected
 * @param {boolean=} isNot
 * @return {boolean}
 */
jasmine.Matchers.prototype.toContainJson = function(expected, isNot) {};

/**
 * @param {?} expected
 * @param {boolean=} isNot
 * @return {boolean}
 */
jasmine.Matchers.prototype.toContainJsonTypes = function(expected, isNot) {};
 /** @type {!Frisby} */
var frisby;

/* TODO: ExportAssignment in  */
