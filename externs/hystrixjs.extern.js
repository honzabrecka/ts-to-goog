/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/hystrixjs/index.d.ts:

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: NamespaceExportDeclaration in  */

/* TODO: NamespaceExportDeclaration in  */
/**
 * @record
 * @struct
 */
function HystrixProperties() {}

/* TODO: PropertySignature: "hystrix.force.circuit.open" */

/* TODO: PropertySignature: "hystrix.force.circuit.closed" */

/* TODO: PropertySignature: "hystrix.circuit.sleepWindowInMilliseconds" */

/* TODO: PropertySignature: "hystrix.circuit.errorThresholdPercentage" */

/* TODO: PropertySignature: "hystrix.circuit.volumeThreshold" */

/* TODO: PropertySignature: "hystrix.circuit.volumeThreshold.forceOverride" */

/* TODO: PropertySignature: "hystrix.circuit.volumeThreshold.override" */

/* TODO: PropertySignature: "hystrix.execution.timeoutInMilliseconds" */

/* TODO: PropertySignature: "hystrix.metrics.statistical.window.timeInMilliseconds" */

/* TODO: PropertySignature: "hystrix.metrics.statistical.window.bucketsNumber" */

/* TODO: PropertySignature: "hystrix.metrics.percentile.window.timeInMilliseconds" */

/* TODO: PropertySignature: "hystrix.metrics.percentile.window.bucketsNumber" */

/* TODO: PropertySignature: "hystrix.request.volume.rejectionThreshold" */
/**
 * @record
 * @struct
 */
function HystrixConfig() {}

/**
 * @return {number}
 */
HystrixConfig.prototype.metricsPercentileWindowBuckets = function() {};

/**
 * @return {boolean}
 */
HystrixConfig.prototype.circuitBreakerForceClosed = function() {};

/**
 * @return {boolean}
 */
HystrixConfig.prototype.circuitBreakerForceOpened = function() {};

/**
 * @return {number}
 */
HystrixConfig.prototype.circuitBreakerSleepWindowInMilliseconds = function() {};

/**
 * @return {number}
 */
HystrixConfig.prototype.circuitBreakerErrorThresholdPercentage = function() {};

/**
 * @return {number}
 */
HystrixConfig.prototype.circuitBreakerRequestVolumeThreshold = function() {};

/**
 * @return {boolean}
 */
HystrixConfig.prototype.circuitBreakerRequestVolumeThresholdForceOverride = function() {};

/**
 * @return {number}
 */
HystrixConfig.prototype.circuitBreakerRequestVolumeThresholdOverride = function() {};

/**
 * @return {number}
 */
HystrixConfig.prototype.executionTimeoutInMilliseconds = function() {};

/**
 * @return {number}
 */
HystrixConfig.prototype.metricsStatisticalWindowBuckets = function() {};

/**
 * @return {number}
 */
HystrixConfig.prototype.metricsStatisticalWindowInMilliseconds = function() {};

/**
 * @return {number}
 */
HystrixConfig.prototype.metricsPercentileWindowInMilliseconds = function() {};

/**
 * @return {number}
 */
HystrixConfig.prototype.requestVolumeRejectionThreshold = function() {};

/**
 * @return {void}
 */
HystrixConfig.prototype.resetProperties = function() {};

/**
 * @param {?} properties
 * @return {void}
 */
HystrixConfig.prototype.init = function(properties) {};
/**
 * @record
 * @struct
 */
function Command() {}

/**
 * @param {...?} args
 * @return {?<?>}
 */
Command.prototype.execute = function(args) {};
/**
 * @record
 * @struct
 */
function CommandBuilder() {}

/**
 * @param {number} value
 * @return {?}
 */
CommandBuilder.prototype.circuitBreakerSleepWindowInMilliseconds = function(value) {};

/**
 * @param {?} value
 * @return {?}
 */
CommandBuilder.prototype.errorHandler = function(value) {};

/**
 * @param {number} value
 * @return {?}
 */
CommandBuilder.prototype.timeout = function(value) {};

/**
 * @param {number} value
 * @return {?}
 */
CommandBuilder.prototype.circuitBreakerRequestVolumeThreshold = function(value) {};

/**
 * @param {number} value
 * @return {?}
 */
CommandBuilder.prototype.requestVolumeRejectionThreshold = function(value) {};

/**
 * @param {boolean} value
 * @return {?}
 */
CommandBuilder.prototype.circuitBreakerForceOpened = function(value) {};

/**
 * @param {boolean} value
 * @return {?}
 */
CommandBuilder.prototype.circuitBreakerForceClosed = function(value) {};

/**
 * @param {number} value
 * @return {?}
 */
CommandBuilder.prototype.statisticalWindowNumberOfBuckets = function(value) {};

/**
 * @param {number} value
 * @return {?}
 */
CommandBuilder.prototype.statisticalWindowLength = function(value) {};

/**
 * @param {number} value
 * @return {?}
 */
CommandBuilder.prototype.percentileWindowNumberOfBuckets = function(value) {};

/**
 * @param {number} value
 * @return {?}
 */
CommandBuilder.prototype.percentileWindowLength = function(value) {};

/**
 * @param {number} value
 * @return {?}
 */
CommandBuilder.prototype.circuitBreakerErrorThresholdPercentage = function(value) {};

/**
 * @param {?} value
 * @return {?}
 */
CommandBuilder.prototype.run = function(value) {};

/**
 * @param {?} value
 * @return {?}
 */
CommandBuilder.prototype.fallbackTo = function(value) {};

/**
 * @param {?} value
 * @return {?}
 */
CommandBuilder.prototype.context = function(value) {};

/**
 * @return {?}
 */
CommandBuilder.prototype.build = function() {};
/**
 * @record
 * @struct
 */
function CommandFactory() {}

/**
 * @param {string} commandKey
 * @param {string=} commandGroup
 * @return {?}
 */
CommandFactory.prototype.getOrCreate = function(commandKey, commandGroup) {};

/**
 * @return {void}
 */
CommandFactory.prototype.resetCache = function() {};
/**
 * @record
 * @struct
 */
function HealthCounts() {}
 /** @type {number} */
HealthCounts.prototype.totalCount;
 /** @type {number} */
HealthCounts.prototype.errorCount;
 /** @type {number} */
HealthCounts.prototype.errorPercentage;
/**
 * @record
 * @struct
 */
function CommandMetrics() {}

/**
 * @return {void}
 */
CommandMetrics.prototype.markSuccess = function() {};

/**
 * @return {void}
 */
CommandMetrics.prototype.markRejected = function() {};

/**
 * @return {void}
 */
CommandMetrics.prototype.markFailure = function() {};

/**
 * @return {void}
 */
CommandMetrics.prototype.markTimeout = function() {};

/**
 * @return {void}
 */
CommandMetrics.prototype.markShortCircuited = function() {};

/**
 * @return {void}
 */
CommandMetrics.prototype.incrementExecutionCount = function() {};

/**
 * @return {void}
 */
CommandMetrics.prototype.decrementExecutionCount = function() {};

/**
 * @return {number}
 */
CommandMetrics.prototype.getCurrentExecutionCount = function() {};

/**
 * @param {number} value
 * @return {void}
 */
CommandMetrics.prototype.addExecutionTime = function(value) {};

/**
 * @param {?} type
 * @return {number}
 */
CommandMetrics.prototype.getRollingCount = function(type) {};

/**
 * @param {?} percentile
 * @return {number}
 */
CommandMetrics.prototype.getExecutionTime = function(percentile) {};

/**
 * @return {?}
 */
CommandMetrics.prototype.getHealthCounts = function() {};

/**
 * @return {void}
 */
CommandMetrics.prototype.reset = function() {};
/**
 * @record
 * @struct
 */
function MetricsProperties() {}
 /** @type {string} */
MetricsProperties.prototype.commandKey;
 /** @type {string} */
MetricsProperties.prototype.commandGroup;
 /** @type {number} */
MetricsProperties.prototype.statisticalWindowTimeInMilliSeconds;
 /** @type {number} */
MetricsProperties.prototype.statisticalWindowNumberOfBuckets;
 /** @type {number} */
MetricsProperties.prototype.percentileWindowTimeInMilliSeconds;
 /** @type {number} */
MetricsProperties.prototype.percentileWindowNumberOfBuckets;
/**
 * @record
 * @struct
 */
function MetricsFactory() {}

/**
 * @param {?} config
 * @return {?}
 */
MetricsFactory.prototype.getOrCreate = function(config) {};

/**
 * @return {void}
 */
MetricsFactory.prototype.resetCache = function() {};

/**
 * @return {!Array<?>}
 */
MetricsFactory.prototype.getAllMetrics = function() {};
/**
 * @record
 * @struct
 */
function CirctuiBreakerConfig() {}
 /** @type {number} */
CirctuiBreakerConfig.prototype.circuitBreakerSleepWindowInMilliseconds;
 /** @type {string} */
CirctuiBreakerConfig.prototype.commandKey;
 /** @type {number} */
CirctuiBreakerConfig.prototype.circuitBreakerErrorThresholdPercentage;
 /** @type {number} */
CirctuiBreakerConfig.prototype.circuitBreakerRequestVolumeThreshold;
 /** @type {string} */
CirctuiBreakerConfig.prototype.commandGroup;
 /** @type {boolean} */
CirctuiBreakerConfig.prototype.circuitBreakerForceClosed;
 /** @type {boolean} */
CirctuiBreakerConfig.prototype.circuitBreakerForceOpened;
/**
 * @record
 * @struct
 */
function CircuitBreaker() {}

/**
 * @return {boolean}
 */
CircuitBreaker.prototype.allowRequest = function() {};

/**
 * @return {boolean}
 */
CircuitBreaker.prototype.allowSingleTest = function() {};

/**
 * @return {boolean}
 */
CircuitBreaker.prototype.isOpen = function() {};

/**
 * @return {void}
 */
CircuitBreaker.prototype.markSuccess = function() {};
/**
 * @record
 * @struct
 */
function CircuitFactory() {}

/**
 * @param {?} config
 * @return {?}
 */
CircuitFactory.prototype.getOrCreate = function(config) {};

/**
 * @return {!Array<?>}
 */
CircuitFactory.prototype.getCache = function() {};

/**
 * @return {void}
 */
CircuitFactory.prototype.resetCache = function() {};
/**
 * @record
 * @struct
 */
function HystrixSSEStream() {}

/**
 * @return {?<?>}
 */
HystrixSSEStream.prototype.toObservable = function() {};
 /** @type {?} */
var commandFactory;
 /** @type {?} */
var metricsFactory;
 /** @type {?} */
var circuitFactory;
 /** @type {?} */
var hystrixSSEStream;
 /** @type {?} */
var hystrixConfig;
