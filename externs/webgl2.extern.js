/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/webgl2/index.d.ts:

/**
 * @param {string} contextId
 * @param {!WebGLContextAttributes=} contextAttributes
 * @return {?}
 */
HTMLCanvasElement.prototype.getContext = function(contextId, contextAttributes) {};
 /** @type {number} */
ImageBitmap.prototype.width;
 /** @type {number} */
ImageBitmap.prototype.height;

/**
 * @return {void}
 */
ImageBitmap.prototype.close = function() {};
/**
 * @record
 * @struct
 */
function WebGL2RenderingContext() {}
 /** @type {number} */
WebGL2RenderingContext.prototype.READ_BUFFER;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNPACK_ROW_LENGTH;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNPACK_SKIP_ROWS;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNPACK_SKIP_PIXELS;
 /** @type {number} */
WebGL2RenderingContext.prototype.PACK_ROW_LENGTH;
 /** @type {number} */
WebGL2RenderingContext.prototype.PACK_SKIP_ROWS;
 /** @type {number} */
WebGL2RenderingContext.prototype.PACK_SKIP_PIXELS;
 /** @type {number} */
WebGL2RenderingContext.prototype.COLOR;
 /** @type {number} */
WebGL2RenderingContext.prototype.DEPTH;
 /** @type {number} */
WebGL2RenderingContext.prototype.STENCIL;
 /** @type {number} */
WebGL2RenderingContext.prototype.RED;
 /** @type {number} */
WebGL2RenderingContext.prototype.RGB8;
 /** @type {number} */
WebGL2RenderingContext.prototype.RGBA8;
 /** @type {number} */
WebGL2RenderingContext.prototype.RGB10_A2;
 /** @type {number} */
WebGL2RenderingContext.prototype.TEXTURE_BINDING_3D;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNPACK_SKIP_IMAGES;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNPACK_IMAGE_HEIGHT;
 /** @type {number} */
WebGL2RenderingContext.prototype.TEXTURE_3D;
 /** @type {number} */
WebGL2RenderingContext.prototype.TEXTURE_WRAP_R;
 /** @type {number} */
WebGL2RenderingContext.prototype.MAX_3D_TEXTURE_SIZE;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNSIGNED_INT_2_10_10_10_REV;
 /** @type {number} */
WebGL2RenderingContext.prototype.MAX_ELEMENTS_VERTICES;
 /** @type {number} */
WebGL2RenderingContext.prototype.MAX_ELEMENTS_INDICES;
 /** @type {number} */
WebGL2RenderingContext.prototype.TEXTURE_MIN_LOD;
 /** @type {number} */
WebGL2RenderingContext.prototype.TEXTURE_MAX_LOD;
 /** @type {number} */
WebGL2RenderingContext.prototype.TEXTURE_BASE_LEVEL;
 /** @type {number} */
WebGL2RenderingContext.prototype.TEXTURE_MAX_LEVEL;
 /** @type {number} */
WebGL2RenderingContext.prototype.MIN;
 /** @type {number} */
WebGL2RenderingContext.prototype.MAX;
 /** @type {number} */
WebGL2RenderingContext.prototype.DEPTH_COMPONENT24;
 /** @type {number} */
WebGL2RenderingContext.prototype.MAX_TEXTURE_LOD_BIAS;
 /** @type {number} */
WebGL2RenderingContext.prototype.TEXTURE_COMPARE_MODE;
 /** @type {number} */
WebGL2RenderingContext.prototype.TEXTURE_COMPARE_FUNC;
 /** @type {number} */
WebGL2RenderingContext.prototype.CURRENT_QUERY;
 /** @type {number} */
WebGL2RenderingContext.prototype.QUERY_RESULT;
 /** @type {number} */
WebGL2RenderingContext.prototype.QUERY_RESULT_AVAILABLE;
 /** @type {number} */
WebGL2RenderingContext.prototype.STREAM_READ;
 /** @type {number} */
WebGL2RenderingContext.prototype.STREAM_COPY;
 /** @type {number} */
WebGL2RenderingContext.prototype.STATIC_READ;
 /** @type {number} */
WebGL2RenderingContext.prototype.STATIC_COPY;
 /** @type {number} */
WebGL2RenderingContext.prototype.DYNAMIC_READ;
 /** @type {number} */
WebGL2RenderingContext.prototype.DYNAMIC_COPY;
 /** @type {number} */
WebGL2RenderingContext.prototype.MAX_DRAW_BUFFERS;
 /** @type {number} */
WebGL2RenderingContext.prototype.DRAW_BUFFER0;
 /** @type {number} */
WebGL2RenderingContext.prototype.DRAW_BUFFER1;
 /** @type {number} */
WebGL2RenderingContext.prototype.DRAW_BUFFER2;
 /** @type {number} */
WebGL2RenderingContext.prototype.DRAW_BUFFER3;
 /** @type {number} */
WebGL2RenderingContext.prototype.DRAW_BUFFER4;
 /** @type {number} */
WebGL2RenderingContext.prototype.DRAW_BUFFER5;
 /** @type {number} */
WebGL2RenderingContext.prototype.DRAW_BUFFER6;
 /** @type {number} */
WebGL2RenderingContext.prototype.DRAW_BUFFER7;
 /** @type {number} */
WebGL2RenderingContext.prototype.DRAW_BUFFER8;
 /** @type {number} */
WebGL2RenderingContext.prototype.DRAW_BUFFER9;
 /** @type {number} */
WebGL2RenderingContext.prototype.DRAW_BUFFER10;
 /** @type {number} */
WebGL2RenderingContext.prototype.DRAW_BUFFER11;
 /** @type {number} */
WebGL2RenderingContext.prototype.DRAW_BUFFER12;
 /** @type {number} */
WebGL2RenderingContext.prototype.DRAW_BUFFER13;
 /** @type {number} */
WebGL2RenderingContext.prototype.DRAW_BUFFER14;
 /** @type {number} */
WebGL2RenderingContext.prototype.DRAW_BUFFER15;
 /** @type {number} */
WebGL2RenderingContext.prototype.MAX_FRAGMENT_UNIFORM_COMPONENTS;
 /** @type {number} */
WebGL2RenderingContext.prototype.MAX_VERTEX_UNIFORM_COMPONENTS;
 /** @type {number} */
WebGL2RenderingContext.prototype.SAMPLER_3D;
 /** @type {number} */
WebGL2RenderingContext.prototype.SAMPLER_2D_SHADOW;
 /** @type {number} */
WebGL2RenderingContext.prototype.FRAGMENT_SHADER_DERIVATIVE_HINT;
 /** @type {number} */
WebGL2RenderingContext.prototype.PIXEL_PACK_BUFFER;
 /** @type {number} */
WebGL2RenderingContext.prototype.PIXEL_UNPACK_BUFFER;
 /** @type {number} */
WebGL2RenderingContext.prototype.PIXEL_PACK_BUFFER_BINDING;
 /** @type {number} */
WebGL2RenderingContext.prototype.PIXEL_UNPACK_BUFFER_BINDING;
 /** @type {number} */
WebGL2RenderingContext.prototype.FLOAT_MAT2x3;
 /** @type {number} */
WebGL2RenderingContext.prototype.FLOAT_MAT2x4;
 /** @type {number} */
WebGL2RenderingContext.prototype.FLOAT_MAT3x2;
 /** @type {number} */
WebGL2RenderingContext.prototype.FLOAT_MAT3x4;
 /** @type {number} */
WebGL2RenderingContext.prototype.FLOAT_MAT4x2;
 /** @type {number} */
WebGL2RenderingContext.prototype.FLOAT_MAT4x3;
 /** @type {number} */
WebGL2RenderingContext.prototype.SRGB;
 /** @type {number} */
WebGL2RenderingContext.prototype.SRGB8;
 /** @type {number} */
WebGL2RenderingContext.prototype.SRGB8_ALPHA8;
 /** @type {number} */
WebGL2RenderingContext.prototype.COMPARE_REF_TO_TEXTURE;
 /** @type {number} */
WebGL2RenderingContext.prototype.RGBA32F;
 /** @type {number} */
WebGL2RenderingContext.prototype.RGB32F;
 /** @type {number} */
WebGL2RenderingContext.prototype.RGBA16F;
 /** @type {number} */
WebGL2RenderingContext.prototype.RGB16F;
 /** @type {number} */
WebGL2RenderingContext.prototype.VERTEX_ATTRIB_ARRAY_INTEGER;
 /** @type {number} */
WebGL2RenderingContext.prototype.MAX_ARRAY_TEXTURE_LAYERS;
 /** @type {number} */
WebGL2RenderingContext.prototype.MIN_PROGRAM_TEXEL_OFFSET;
 /** @type {number} */
WebGL2RenderingContext.prototype.MAX_PROGRAM_TEXEL_OFFSET;
 /** @type {number} */
WebGL2RenderingContext.prototype.MAX_VARYING_COMPONENTS;
 /** @type {number} */
WebGL2RenderingContext.prototype.TEXTURE_2D_ARRAY;
 /** @type {number} */
WebGL2RenderingContext.prototype.TEXTURE_BINDING_2D_ARRAY;
 /** @type {number} */
WebGL2RenderingContext.prototype.R11F_G11F_B10F;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNSIGNED_INT_10F_11F_11F_REV;
 /** @type {number} */
WebGL2RenderingContext.prototype.RGB9_E5;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNSIGNED_INT_5_9_9_9_REV;
 /** @type {number} */
WebGL2RenderingContext.prototype.TRANSFORM_FEEDBACK_BUFFER_MODE;
 /** @type {number} */
WebGL2RenderingContext.prototype.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS;
 /** @type {number} */
WebGL2RenderingContext.prototype.TRANSFORM_FEEDBACK_VARYINGS;
 /** @type {number} */
WebGL2RenderingContext.prototype.TRANSFORM_FEEDBACK_BUFFER_START;
 /** @type {number} */
WebGL2RenderingContext.prototype.TRANSFORM_FEEDBACK_BUFFER_SIZE;
 /** @type {number} */
WebGL2RenderingContext.prototype.TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN;
 /** @type {number} */
WebGL2RenderingContext.prototype.RASTERIZER_DISCARD;
 /** @type {number} */
WebGL2RenderingContext.prototype.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS;
 /** @type {number} */
WebGL2RenderingContext.prototype.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS;
 /** @type {number} */
WebGL2RenderingContext.prototype.INTERLEAVED_ATTRIBS;
 /** @type {number} */
WebGL2RenderingContext.prototype.SEPARATE_ATTRIBS;
 /** @type {number} */
WebGL2RenderingContext.prototype.TRANSFORM_FEEDBACK_BUFFER;
 /** @type {number} */
WebGL2RenderingContext.prototype.TRANSFORM_FEEDBACK_BUFFER_BINDING;
 /** @type {number} */
WebGL2RenderingContext.prototype.RGBA32UI;
 /** @type {number} */
WebGL2RenderingContext.prototype.RGB32UI;
 /** @type {number} */
WebGL2RenderingContext.prototype.RGBA16UI;
 /** @type {number} */
WebGL2RenderingContext.prototype.RGB16UI;
 /** @type {number} */
WebGL2RenderingContext.prototype.RGBA8UI;
 /** @type {number} */
WebGL2RenderingContext.prototype.RGB8UI;
 /** @type {number} */
WebGL2RenderingContext.prototype.RGBA32I;
 /** @type {number} */
WebGL2RenderingContext.prototype.RGB32I;
 /** @type {number} */
WebGL2RenderingContext.prototype.RGBA16I;
 /** @type {number} */
WebGL2RenderingContext.prototype.RGB16I;
 /** @type {number} */
WebGL2RenderingContext.prototype.RGBA8I;
 /** @type {number} */
WebGL2RenderingContext.prototype.RGB8I;
 /** @type {number} */
WebGL2RenderingContext.prototype.RED_INTEGER;
 /** @type {number} */
WebGL2RenderingContext.prototype.RGB_INTEGER;
 /** @type {number} */
WebGL2RenderingContext.prototype.RGBA_INTEGER;
 /** @type {number} */
WebGL2RenderingContext.prototype.SAMPLER_2D_ARRAY;
 /** @type {number} */
WebGL2RenderingContext.prototype.SAMPLER_2D_ARRAY_SHADOW;
 /** @type {number} */
WebGL2RenderingContext.prototype.SAMPLER_CUBE_SHADOW;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNSIGNED_INT_VEC2;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNSIGNED_INT_VEC3;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNSIGNED_INT_VEC4;
 /** @type {number} */
WebGL2RenderingContext.prototype.INT_SAMPLER_2D;
 /** @type {number} */
WebGL2RenderingContext.prototype.INT_SAMPLER_3D;
 /** @type {number} */
WebGL2RenderingContext.prototype.INT_SAMPLER_CUBE;
 /** @type {number} */
WebGL2RenderingContext.prototype.INT_SAMPLER_2D_ARRAY;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNSIGNED_INT_SAMPLER_2D;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNSIGNED_INT_SAMPLER_3D;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNSIGNED_INT_SAMPLER_CUBE;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNSIGNED_INT_SAMPLER_2D_ARRAY;
 /** @type {number} */
WebGL2RenderingContext.prototype.DEPTH_COMPONENT32F;
 /** @type {number} */
WebGL2RenderingContext.prototype.DEPTH32F_STENCIL8;
 /** @type {number} */
WebGL2RenderingContext.prototype.FLOAT_32_UNSIGNED_INT_24_8_REV;
 /** @type {number} */
WebGL2RenderingContext.prototype.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING;
 /** @type {number} */
WebGL2RenderingContext.prototype.FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE;
 /** @type {number} */
WebGL2RenderingContext.prototype.FRAMEBUFFER_ATTACHMENT_RED_SIZE;
 /** @type {number} */
WebGL2RenderingContext.prototype.FRAMEBUFFER_ATTACHMENT_GREEN_SIZE;
 /** @type {number} */
WebGL2RenderingContext.prototype.FRAMEBUFFER_ATTACHMENT_BLUE_SIZE;
 /** @type {number} */
WebGL2RenderingContext.prototype.FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE;
 /** @type {number} */
WebGL2RenderingContext.prototype.FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE;
 /** @type {number} */
WebGL2RenderingContext.prototype.FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE;
 /** @type {number} */
WebGL2RenderingContext.prototype.FRAMEBUFFER_DEFAULT;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNSIGNED_INT_24_8;
 /** @type {number} */
WebGL2RenderingContext.prototype.DEPTH24_STENCIL8;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNSIGNED_NORMALIZED;
 /** @type {number} */
WebGL2RenderingContext.prototype.DRAW_FRAMEBUFFER_BINDING;
 /** @type {number} */
WebGL2RenderingContext.prototype.READ_FRAMEBUFFER;
 /** @type {number} */
WebGL2RenderingContext.prototype.DRAW_FRAMEBUFFER;
 /** @type {number} */
WebGL2RenderingContext.prototype.READ_FRAMEBUFFER_BINDING;
 /** @type {number} */
WebGL2RenderingContext.prototype.RENDERBUFFER_SAMPLES;
 /** @type {number} */
WebGL2RenderingContext.prototype.FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER;
 /** @type {number} */
WebGL2RenderingContext.prototype.MAX_COLOR_ATTACHMENTS;
 /** @type {number} */
WebGL2RenderingContext.prototype.COLOR_ATTACHMENT1;
 /** @type {number} */
WebGL2RenderingContext.prototype.COLOR_ATTACHMENT2;
 /** @type {number} */
WebGL2RenderingContext.prototype.COLOR_ATTACHMENT3;
 /** @type {number} */
WebGL2RenderingContext.prototype.COLOR_ATTACHMENT4;
 /** @type {number} */
WebGL2RenderingContext.prototype.COLOR_ATTACHMENT5;
 /** @type {number} */
WebGL2RenderingContext.prototype.COLOR_ATTACHMENT6;
 /** @type {number} */
WebGL2RenderingContext.prototype.COLOR_ATTACHMENT7;
 /** @type {number} */
WebGL2RenderingContext.prototype.COLOR_ATTACHMENT8;
 /** @type {number} */
WebGL2RenderingContext.prototype.COLOR_ATTACHMENT9;
 /** @type {number} */
WebGL2RenderingContext.prototype.COLOR_ATTACHMENT10;
 /** @type {number} */
WebGL2RenderingContext.prototype.COLOR_ATTACHMENT11;
 /** @type {number} */
WebGL2RenderingContext.prototype.COLOR_ATTACHMENT12;
 /** @type {number} */
WebGL2RenderingContext.prototype.COLOR_ATTACHMENT13;
 /** @type {number} */
WebGL2RenderingContext.prototype.COLOR_ATTACHMENT14;
 /** @type {number} */
WebGL2RenderingContext.prototype.COLOR_ATTACHMENT15;
 /** @type {number} */
WebGL2RenderingContext.prototype.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE;
 /** @type {number} */
WebGL2RenderingContext.prototype.MAX_SAMPLES;
 /** @type {number} */
WebGL2RenderingContext.prototype.HALF_FLOAT;
 /** @type {number} */
WebGL2RenderingContext.prototype.RG;
 /** @type {number} */
WebGL2RenderingContext.prototype.RG_INTEGER;
 /** @type {number} */
WebGL2RenderingContext.prototype.R8;
 /** @type {number} */
WebGL2RenderingContext.prototype.RG8;
 /** @type {number} */
WebGL2RenderingContext.prototype.R16F;
 /** @type {number} */
WebGL2RenderingContext.prototype.R32F;
 /** @type {number} */
WebGL2RenderingContext.prototype.RG16F;
 /** @type {number} */
WebGL2RenderingContext.prototype.RG32F;
 /** @type {number} */
WebGL2RenderingContext.prototype.R8I;
 /** @type {number} */
WebGL2RenderingContext.prototype.R8UI;
 /** @type {number} */
WebGL2RenderingContext.prototype.R16I;
 /** @type {number} */
WebGL2RenderingContext.prototype.R16UI;
 /** @type {number} */
WebGL2RenderingContext.prototype.R32I;
 /** @type {number} */
WebGL2RenderingContext.prototype.R32UI;
 /** @type {number} */
WebGL2RenderingContext.prototype.RG8I;
 /** @type {number} */
WebGL2RenderingContext.prototype.RG8UI;
 /** @type {number} */
WebGL2RenderingContext.prototype.RG16I;
 /** @type {number} */
WebGL2RenderingContext.prototype.RG16UI;
 /** @type {number} */
WebGL2RenderingContext.prototype.RG32I;
 /** @type {number} */
WebGL2RenderingContext.prototype.RG32UI;
 /** @type {number} */
WebGL2RenderingContext.prototype.VERTEX_ARRAY_BINDING;
 /** @type {number} */
WebGL2RenderingContext.prototype.R8_SNORM;
 /** @type {number} */
WebGL2RenderingContext.prototype.RG8_SNORM;
 /** @type {number} */
WebGL2RenderingContext.prototype.RGB8_SNORM;
 /** @type {number} */
WebGL2RenderingContext.prototype.RGBA8_SNORM;
 /** @type {number} */
WebGL2RenderingContext.prototype.SIGNED_NORMALIZED;
 /** @type {number} */
WebGL2RenderingContext.prototype.COPY_READ_BUFFER;
 /** @type {number} */
WebGL2RenderingContext.prototype.COPY_WRITE_BUFFER;
 /** @type {number} */
WebGL2RenderingContext.prototype.COPY_READ_BUFFER_BINDING;
 /** @type {number} */
WebGL2RenderingContext.prototype.COPY_WRITE_BUFFER_BINDING;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNIFORM_BUFFER;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNIFORM_BUFFER_BINDING;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNIFORM_BUFFER_START;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNIFORM_BUFFER_SIZE;
 /** @type {number} */
WebGL2RenderingContext.prototype.MAX_VERTEX_UNIFORM_BLOCKS;
 /** @type {number} */
WebGL2RenderingContext.prototype.MAX_FRAGMENT_UNIFORM_BLOCKS;
 /** @type {number} */
WebGL2RenderingContext.prototype.MAX_COMBINED_UNIFORM_BLOCKS;
 /** @type {number} */
WebGL2RenderingContext.prototype.MAX_UNIFORM_BUFFER_BINDINGS;
 /** @type {number} */
WebGL2RenderingContext.prototype.MAX_UNIFORM_BLOCK_SIZE;
 /** @type {number} */
WebGL2RenderingContext.prototype.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS;
 /** @type {number} */
WebGL2RenderingContext.prototype.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNIFORM_BUFFER_OFFSET_ALIGNMENT;
 /** @type {number} */
WebGL2RenderingContext.prototype.ACTIVE_UNIFORM_BLOCKS;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNIFORM_TYPE;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNIFORM_SIZE;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNIFORM_BLOCK_INDEX;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNIFORM_OFFSET;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNIFORM_ARRAY_STRIDE;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNIFORM_MATRIX_STRIDE;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNIFORM_IS_ROW_MAJOR;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNIFORM_BLOCK_BINDING;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNIFORM_BLOCK_DATA_SIZE;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNIFORM_BLOCK_ACTIVE_UNIFORMS;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER;
 /** @type {number} */
WebGL2RenderingContext.prototype.INVALID_INDEX;
 /** @type {number} */
WebGL2RenderingContext.prototype.MAX_VERTEX_OUTPUT_COMPONENTS;
 /** @type {number} */
WebGL2RenderingContext.prototype.MAX_FRAGMENT_INPUT_COMPONENTS;
 /** @type {number} */
WebGL2RenderingContext.prototype.MAX_SERVER_WAIT_TIMEOUT;
 /** @type {number} */
WebGL2RenderingContext.prototype.OBJECT_TYPE;
 /** @type {number} */
WebGL2RenderingContext.prototype.SYNC_CONDITION;
 /** @type {number} */
WebGL2RenderingContext.prototype.SYNC_STATUS;
 /** @type {number} */
WebGL2RenderingContext.prototype.SYNC_FLAGS;
 /** @type {number} */
WebGL2RenderingContext.prototype.SYNC_FENCE;
 /** @type {number} */
WebGL2RenderingContext.prototype.SYNC_GPU_COMMANDS_COMPLETE;
 /** @type {number} */
WebGL2RenderingContext.prototype.UNSIGNALED;
 /** @type {number} */
WebGL2RenderingContext.prototype.SIGNALED;
 /** @type {number} */
WebGL2RenderingContext.prototype.ALREADY_SIGNALED;
 /** @type {number} */
WebGL2RenderingContext.prototype.TIMEOUT_EXPIRED;
 /** @type {number} */
WebGL2RenderingContext.prototype.CONDITION_SATISFIED;
 /** @type {number} */
WebGL2RenderingContext.prototype.WAIT_FAILED;
 /** @type {number} */
WebGL2RenderingContext.prototype.SYNC_FLUSH_COMMANDS_BIT;
 /** @type {number} */
WebGL2RenderingContext.prototype.VERTEX_ATTRIB_ARRAY_DIVISOR;
 /** @type {number} */
WebGL2RenderingContext.prototype.ANY_SAMPLES_PASSED;
 /** @type {number} */
WebGL2RenderingContext.prototype.ANY_SAMPLES_PASSED_CONSERVATIVE;
 /** @type {number} */
WebGL2RenderingContext.prototype.SAMPLER_BINDING;
 /** @type {number} */
WebGL2RenderingContext.prototype.RGB10_A2UI;
 /** @type {number} */
WebGL2RenderingContext.prototype.INT_2_10_10_10_REV;
 /** @type {number} */
WebGL2RenderingContext.prototype.TRANSFORM_FEEDBACK;
 /** @type {number} */
WebGL2RenderingContext.prototype.TRANSFORM_FEEDBACK_PAUSED;
 /** @type {number} */
WebGL2RenderingContext.prototype.TRANSFORM_FEEDBACK_ACTIVE;
 /** @type {number} */
WebGL2RenderingContext.prototype.TRANSFORM_FEEDBACK_BINDING;
 /** @type {number} */
WebGL2RenderingContext.prototype.TEXTURE_IMMUTABLE_FORMAT;
 /** @type {number} */
WebGL2RenderingContext.prototype.MAX_ELEMENT_INDEX;
 /** @type {number} */
WebGL2RenderingContext.prototype.TEXTURE_IMMUTABLE_LEVELS;
 /** @type {number} */
WebGL2RenderingContext.prototype.TIMEOUT_IGNORED;
 /** @type {number} */
WebGL2RenderingContext.prototype.MAX_CLIENT_WAIT_TIMEOUT_WEBGL;

/**
 * @param {number} target
 * @param {number|(!ArrayBuffer|!ArrayBufferView)|!ArrayBufferView} size_or_srcData
 * @param {number} usage
 * @param {number=} srcOffset
 * @param {number=} length
 * @return {void}
 */
WebGL2RenderingContext.prototype.bufferData = function(target, size_or_srcData, usage, srcOffset, length) {};

/**
 * @param {number} target
 * @param {number} dstByteOffset
 * @param {(!ArrayBuffer|!ArrayBufferView)|!ArrayBufferView} srcData
 * @param {number=} srcOffset
 * @param {number=} length
 * @return {void}
 */
WebGL2RenderingContext.prototype.bufferSubData = function(target, dstByteOffset, srcData, srcOffset, length) {};

/**
 * @param {number} readTarget
 * @param {number} writeTarget
 * @param {number} readOffset
 * @param {number} writeOffset
 * @param {number} size
 * @return {void}
 */
WebGL2RenderingContext.prototype.copyBufferSubData = function(readTarget, writeTarget, readOffset, writeOffset, size) {};

/**
 * @param {number} target
 * @param {number} srcByteOffset
 * @param {!ArrayBufferView} dstBuffer
 * @param {number=} dstOffset
 * @param {number=} length
 * @return {void}
 */
WebGL2RenderingContext.prototype.getBufferSubData = function(target, srcByteOffset, dstBuffer, dstOffset, length) {};

/**
 * @param {number} srcX0
 * @param {number} srcY0
 * @param {number} srcX1
 * @param {number} srcY1
 * @param {number} dstX0
 * @param {number} dstY0
 * @param {number} dstX1
 * @param {number} dstY1
 * @param {number} mask
 * @param {number} filter
 * @return {void}
 */
WebGL2RenderingContext.prototype.blitFramebuffer = function(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter) {};

/**
 * @param {number} target
 * @param {number} attachment
 * @param {!WebGLTexture} texture
 * @param {number} level
 * @param {number} layer
 * @return {void}
 */
WebGL2RenderingContext.prototype.framebufferTextureLayer = function(target, attachment, texture, level, layer) {};

/**
 * @param {number} target
 * @param {!Array<number>} attachments
 * @return {void}
 */
WebGL2RenderingContext.prototype.invalidateFramebuffer = function(target, attachments) {};

/**
 * @param {number} target
 * @param {!Array<number>} attachments
 * @param {number} x
 * @param {number} y
 * @param {number} width
 * @param {number} height
 * @return {void}
 */
WebGL2RenderingContext.prototype.invalidateSubFramebuffer = function(target, attachments, x, y, width, height) {};

/**
 * @param {number} src
 * @return {void}
 */
WebGL2RenderingContext.prototype.readBuffer = function(src) {};

/**
 * @param {number} target
 * @param {number} internalformat
 * @param {number} pname
 * @return {?}
 */
WebGL2RenderingContext.prototype.getInternalformatParameter = function(target, internalformat, pname) {};

/**
 * @param {number} target
 * @param {number} samples
 * @param {number} internalformat
 * @param {number} width
 * @param {number} height
 * @return {void}
 */
WebGL2RenderingContext.prototype.renderbufferStorageMultisample = function(target, samples, internalformat, width, height) {};

/**
 * @param {number} target
 * @param {number} levels
 * @param {number} internalformat
 * @param {number} width
 * @param {number} height
 * @return {void}
 */
WebGL2RenderingContext.prototype.texStorage2D = function(target, levels, internalformat, width, height) {};

/**
 * @param {number} target
 * @param {number} levels
 * @param {number} internalformat
 * @param {number} width
 * @param {number} height
 * @param {number} depth
 * @return {void}
 */
WebGL2RenderingContext.prototype.texStorage3D = function(target, levels, internalformat, width, height, depth) {};

/**
 * @param {number} target
 * @param {number} level
 * @param {number} internalformat
 * @param {number} width_or_format
 * @param {number} height_or_type
 * @param {number|(!ImageData|!HTMLImageElement|!HTMLCanvasElement|!HTMLVideoElement)|(!ImageData|!HTMLImageElement|!HTMLCanvasElement|!HTMLVideoElement|!ImageBitmap)} border_or_source
 * @param {number=} format
 * @param {number=} type
 * @param {!ArrayBufferView|number|(!ImageData|!HTMLImageElement|!HTMLCanvasElement|!HTMLVideoElement|!ImageBitmap)=} pixels_or_pboOffset_or_source_or_srcData
 * @param {number=} srcOffset
 * @return {void}
 */
WebGL2RenderingContext.prototype.texImage2D = function(target, level, internalformat, width_or_format, height_or_type, border_or_source, format, type, pixels_or_pboOffset_or_source_or_srcData, srcOffset) {};

/**
 * @param {number} target
 * @param {number} level
 * @param {number} xoffset
 * @param {number} yoffset
 * @param {number} width_or_format
 * @param {number} height_or_type
 * @param {number|(!ImageData|!HTMLImageElement|!HTMLCanvasElement|!HTMLVideoElement)|(!ImageData|!HTMLImageElement|!HTMLCanvasElement|!HTMLVideoElement|!ImageBitmap)} format_or_source
 * @param {number=} type
 * @param {!ArrayBufferView|number|(!ImageData|!HTMLImageElement|!HTMLCanvasElement|!HTMLVideoElement|!ImageBitmap)=} pixels_or_pboOffset_or_source_or_srcData
 * @param {number=} srcOffset
 * @return {void}
 */
WebGL2RenderingContext.prototype.texSubImage2D = function(target, level, xoffset, yoffset, width_or_format, height_or_type, format_or_source, type, pixels_or_pboOffset_or_source_or_srcData, srcOffset) {};

/**
 * @param {number} target
 * @param {number} level
 * @param {number} internalformat
 * @param {number} width
 * @param {number} height
 * @param {number} depth
 * @param {number} border
 * @param {number} format
 * @param {number} type
 * @param {number|(!ImageData|!HTMLImageElement|!HTMLCanvasElement|!HTMLVideoElement|!ImageBitmap)|!ArrayBufferView} pboOffset_or_source_or_srcData
 * @param {number=} srcOffset
 * @return {void}
 */
WebGL2RenderingContext.prototype.texImage3D = function(target, level, internalformat, width, height, depth, border, format, type, pboOffset_or_source_or_srcData, srcOffset) {};

/**
 * @param {number} target
 * @param {number} level
 * @param {number} xoffset
 * @param {number} yoffset
 * @param {number} zoffset
 * @param {number} width
 * @param {number} height
 * @param {number} depth
 * @param {number} format
 * @param {number} type
 * @param {number|(!ImageData|!HTMLImageElement|!HTMLCanvasElement|!HTMLVideoElement|!ImageBitmap)|!ArrayBufferView} pboOffset_or_source_or_srcData
 * @param {number=} srcOffset
 * @return {void}
 */
WebGL2RenderingContext.prototype.texSubImage3D = function(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pboOffset_or_source_or_srcData, srcOffset) {};

/**
 * @param {number} target
 * @param {number} level
 * @param {number} xoffset
 * @param {number} yoffset
 * @param {number} zoffset
 * @param {number} x
 * @param {number} y
 * @param {number} width
 * @param {number} height
 * @return {void}
 */
WebGL2RenderingContext.prototype.copyTexSubImage3D = function(target, level, xoffset, yoffset, zoffset, x, y, width, height) {};

/**
 * @param {number} target
 * @param {number} level
 * @param {number} internalformat
 * @param {number} width
 * @param {number} height
 * @param {number} border
 * @param {number|!ArrayBufferView} imageSize_or_srcData
 * @param {number=} offset_or_srcOffset
 * @param {number=} srcLengthOverride
 * @return {void}
 */
WebGL2RenderingContext.prototype.compressedTexImage2D = function(target, level, internalformat, width, height, border, imageSize_or_srcData, offset_or_srcOffset, srcLengthOverride) {};

/**
 * @param {number} target
 * @param {number} level
 * @param {number} internalformat
 * @param {number} width
 * @param {number} height
 * @param {number} depth
 * @param {number} border
 * @param {number|!ArrayBufferView} imageSize_or_srcData
 * @param {number=} offset_or_srcOffset
 * @param {number=} srcLengthOverride
 * @return {void}
 */
WebGL2RenderingContext.prototype.compressedTexImage3D = function(target, level, internalformat, width, height, depth, border, imageSize_or_srcData, offset_or_srcOffset, srcLengthOverride) {};

/**
 * @param {number} target
 * @param {number} level
 * @param {number} xoffset
 * @param {number} yoffset
 * @param {number} width
 * @param {number} height
 * @param {number} format
 * @param {number|!ArrayBufferView} imageSize_or_srcData
 * @param {number=} offset_or_srcOffset
 * @param {number=} srcLengthOverride
 * @return {void}
 */
WebGL2RenderingContext.prototype.compressedTexSubImage2D = function(target, level, xoffset, yoffset, width, height, format, imageSize_or_srcData, offset_or_srcOffset, srcLengthOverride) {};

/**
 * @param {number} target
 * @param {number} level
 * @param {number} xoffset
 * @param {number} yoffset
 * @param {number} zoffset
 * @param {number} width
 * @param {number} height
 * @param {number} depth
 * @param {number} format
 * @param {number|!ArrayBufferView} imageSize_or_srcData
 * @param {number=} offset_or_srcOffset
 * @param {number=} srcLengthOverride
 * @return {void}
 */
WebGL2RenderingContext.prototype.compressedTexSubImage3D = function(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize_or_srcData, offset_or_srcOffset, srcLengthOverride) {};

/**
 * @param {!WebGLProgram} program
 * @param {string} name
 * @return {number}
 */
WebGL2RenderingContext.prototype.getFragDataLocation = function(program, name) {};

/**
 * @param {!WebGLUniformLocation} location
 * @param {number} v0
 * @return {void}
 */
WebGL2RenderingContext.prototype.uniform1ui = function(location, v0) {};

/**
 * @param {!WebGLUniformLocation} location
 * @param {number} v0
 * @param {number} v1
 * @return {void}
 */
WebGL2RenderingContext.prototype.uniform2ui = function(location, v0, v1) {};

/**
 * @param {!WebGLUniformLocation} location
 * @param {number} v0
 * @param {number} v1
 * @param {number} v2
 * @return {void}
 */
WebGL2RenderingContext.prototype.uniform3ui = function(location, v0, v1, v2) {};

/**
 * @param {!WebGLUniformLocation} location
 * @param {number} v0
 * @param {number} v1
 * @param {number} v2
 * @param {number} v3
 * @return {void}
 */
WebGL2RenderingContext.prototype.uniform4ui = function(location, v0, v1, v2, v3) {};

/**
 * @param {!WebGLUniformLocation} location
 * @param {(!Array<number>|!Float32Array)} data
 * @param {number=} srcOffset
 * @param {number=} srcLength
 * @return {void}
 */
WebGL2RenderingContext.prototype.uniform1fv = function(location, data, srcOffset, srcLength) {};

/**
 * @param {!WebGLUniformLocation} location
 * @param {(!Array<number>|!Float32Array)} data
 * @param {number=} srcOffset
 * @param {number=} srcLength
 * @return {void}
 */
WebGL2RenderingContext.prototype.uniform2fv = function(location, data, srcOffset, srcLength) {};

/**
 * @param {!WebGLUniformLocation} location
 * @param {(!Array<number>|!Float32Array)} data
 * @param {number=} srcOffset
 * @param {number=} srcLength
 * @return {void}
 */
WebGL2RenderingContext.prototype.uniform3fv = function(location, data, srcOffset, srcLength) {};

/**
 * @param {!WebGLUniformLocation} location
 * @param {(!Array<number>|!Float32Array)} data
 * @param {number=} srcOffset
 * @param {number=} srcLength
 * @return {void}
 */
WebGL2RenderingContext.prototype.uniform4fv = function(location, data, srcOffset, srcLength) {};

/**
 * @param {!WebGLUniformLocation} location
 * @param {(!Array<number>|!Int32Array)} data
 * @param {number=} srcOffset
 * @param {number=} srcLength
 * @return {void}
 */
WebGL2RenderingContext.prototype.uniform1iv = function(location, data, srcOffset, srcLength) {};

/**
 * @param {!WebGLUniformLocation} location
 * @param {(!Array<number>|!Int32Array)} data
 * @param {number=} srcOffset
 * @param {number=} srcLength
 * @return {void}
 */
WebGL2RenderingContext.prototype.uniform2iv = function(location, data, srcOffset, srcLength) {};

/**
 * @param {!WebGLUniformLocation} location
 * @param {(!Array<number>|!Int32Array)} data
 * @param {number=} srcOffset
 * @param {number=} srcLength
 * @return {void}
 */
WebGL2RenderingContext.prototype.uniform3iv = function(location, data, srcOffset, srcLength) {};

/**
 * @param {!WebGLUniformLocation} location
 * @param {(!Array<number>|!Int32Array)} data
 * @param {number=} srcOffset
 * @param {number=} srcLength
 * @return {void}
 */
WebGL2RenderingContext.prototype.uniform4iv = function(location, data, srcOffset, srcLength) {};

/**
 * @param {!WebGLUniformLocation} location
 * @param {(!Array<number>|!Uint32Array)} data
 * @param {number=} srcOffset
 * @param {number=} srcLength
 * @return {void}
 */
WebGL2RenderingContext.prototype.uniform1uiv = function(location, data, srcOffset, srcLength) {};

/**
 * @param {!WebGLUniformLocation} location
 * @param {(!Array<number>|!Uint32Array)} data
 * @param {number=} srcOffset
 * @param {number=} srcLength
 * @return {void}
 */
WebGL2RenderingContext.prototype.uniform2uiv = function(location, data, srcOffset, srcLength) {};

/**
 * @param {!WebGLUniformLocation} location
 * @param {(!Array<number>|!Uint32Array)} data
 * @param {number=} srcOffset
 * @param {number=} srcLength
 * @return {void}
 */
WebGL2RenderingContext.prototype.uniform3uiv = function(location, data, srcOffset, srcLength) {};

/**
 * @param {!WebGLUniformLocation} location
 * @param {(!Array<number>|!Uint32Array)} data
 * @param {number=} srcOffset
 * @param {number=} srcLength
 * @return {void}
 */
WebGL2RenderingContext.prototype.uniform4uiv = function(location, data, srcOffset, srcLength) {};

/**
 * @param {!WebGLUniformLocation} location
 * @param {boolean} transpose
 * @param {(!Array<number>|!Float32Array)} data
 * @param {number=} srcOffset
 * @param {number=} srcLength
 * @return {void}
 */
WebGL2RenderingContext.prototype.uniformMatrix2fv = function(location, transpose, data, srcOffset, srcLength) {};

/**
 * @param {!WebGLUniformLocation} location
 * @param {boolean} transpose
 * @param {(!Array<number>|!Float32Array)} data
 * @param {number=} srcOffset
 * @param {number=} srcLength
 * @return {void}
 */
WebGL2RenderingContext.prototype.uniformMatrix3x2fv = function(location, transpose, data, srcOffset, srcLength) {};

/**
 * @param {!WebGLUniformLocation} location
 * @param {boolean} transpose
 * @param {(!Array<number>|!Float32Array)} data
 * @param {number=} srcOffset
 * @param {number=} srcLength
 * @return {void}
 */
WebGL2RenderingContext.prototype.uniformMatrix4x2fv = function(location, transpose, data, srcOffset, srcLength) {};

/**
 * @param {!WebGLUniformLocation} location
 * @param {boolean} transpose
 * @param {(!Array<number>|!Float32Array)} data
 * @param {number=} srcOffset
 * @param {number=} srcLength
 * @return {void}
 */
WebGL2RenderingContext.prototype.uniformMatrix2x3fv = function(location, transpose, data, srcOffset, srcLength) {};

/**
 * @param {!WebGLUniformLocation} location
 * @param {boolean} transpose
 * @param {(!Array<number>|!Float32Array)} data
 * @param {number=} srcOffset
 * @param {number=} srcLength
 * @return {void}
 */
WebGL2RenderingContext.prototype.uniformMatrix3fv = function(location, transpose, data, srcOffset, srcLength) {};

/**
 * @param {!WebGLUniformLocation} location
 * @param {boolean} transpose
 * @param {(!Array<number>|!Float32Array)} data
 * @param {number=} srcOffset
 * @param {number=} srcLength
 * @return {void}
 */
WebGL2RenderingContext.prototype.uniformMatrix4x3fv = function(location, transpose, data, srcOffset, srcLength) {};

/**
 * @param {!WebGLUniformLocation} location
 * @param {boolean} transpose
 * @param {(!Array<number>|!Float32Array)} data
 * @param {number=} srcOffset
 * @param {number=} srcLength
 * @return {void}
 */
WebGL2RenderingContext.prototype.uniformMatrix2x4fv = function(location, transpose, data, srcOffset, srcLength) {};

/**
 * @param {!WebGLUniformLocation} location
 * @param {boolean} transpose
 * @param {(!Array<number>|!Float32Array)} data
 * @param {number=} srcOffset
 * @param {number=} srcLength
 * @return {void}
 */
WebGL2RenderingContext.prototype.uniformMatrix3x4fv = function(location, transpose, data, srcOffset, srcLength) {};

/**
 * @param {!WebGLUniformLocation} location
 * @param {boolean} transpose
 * @param {(!Array<number>|!Float32Array)} data
 * @param {number=} srcOffset
 * @param {number=} srcLength
 * @return {void}
 */
WebGL2RenderingContext.prototype.uniformMatrix4fv = function(location, transpose, data, srcOffset, srcLength) {};

/**
 * @param {number} index
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} w
 * @return {void}
 */
WebGL2RenderingContext.prototype.vertexAttribI4i = function(index, x, y, z, w) {};

/**
 * @param {number} index
 * @param {(!Array<number>|!Int32Array)} values
 * @return {void}
 */
WebGL2RenderingContext.prototype.vertexAttribI4iv = function(index, values) {};

/**
 * @param {number} index
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} w
 * @return {void}
 */
WebGL2RenderingContext.prototype.vertexAttribI4ui = function(index, x, y, z, w) {};

/**
 * @param {number} index
 * @param {(!Array<number>|!Uint32Array)} values
 * @return {void}
 */
WebGL2RenderingContext.prototype.vertexAttribI4uiv = function(index, values) {};

/**
 * @param {number} index
 * @param {number} size
 * @param {number} type
 * @param {number} stride
 * @param {number} offset
 * @return {void}
 */
WebGL2RenderingContext.prototype.vertexAttribIPointer = function(index, size, type, stride, offset) {};

/**
 * @param {number} index
 * @param {number} divisor
 * @return {void}
 */
WebGL2RenderingContext.prototype.vertexAttribDivisor = function(index, divisor) {};

/**
 * @param {number} mode
 * @param {number} first
 * @param {number} count
 * @param {number} instanceCount
 * @return {void}
 */
WebGL2RenderingContext.prototype.drawArraysInstanced = function(mode, first, count, instanceCount) {};

/**
 * @param {number} mode
 * @param {number} count
 * @param {number} type
 * @param {number} offset
 * @param {number} instanceCount
 * @return {void}
 */
WebGL2RenderingContext.prototype.drawElementsInstanced = function(mode, count, type, offset, instanceCount) {};

/**
 * @param {number} mode
 * @param {number} start
 * @param {number} end
 * @param {number} count
 * @param {number} type
 * @param {number} offset
 * @return {void}
 */
WebGL2RenderingContext.prototype.drawRangeElements = function(mode, start, end, count, type, offset) {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} width
 * @param {number} height
 * @param {number} format
 * @param {number} type
 * @param {!ArrayBufferView|number} dstData_or_offset
 * @param {number=} dstOffset
 * @return {void}
 */
WebGL2RenderingContext.prototype.readPixels = function(x, y, width, height, format, type, dstData_or_offset, dstOffset) {};

/**
 * @param {!Array<number>} buffers
 * @return {void}
 */
WebGL2RenderingContext.prototype.drawBuffers = function(buffers) {};

/**
 * @param {number} buffer
 * @param {number} drawbuffer
 * @param {(!Array<number>|!Float32Array)} values
 * @param {number=} srcOffset
 * @return {void}
 */
WebGL2RenderingContext.prototype.clearBufferfv = function(buffer, drawbuffer, values, srcOffset) {};

/**
 * @param {number} buffer
 * @param {number} drawbuffer
 * @param {(!Array<number>|!Int32Array)} values
 * @param {number=} srcOffset
 * @return {void}
 */
WebGL2RenderingContext.prototype.clearBufferiv = function(buffer, drawbuffer, values, srcOffset) {};

/**
 * @param {number} buffer
 * @param {number} drawbuffer
 * @param {(!Array<number>|!Uint32Array)} values
 * @param {number=} srcOffset
 * @return {void}
 */
WebGL2RenderingContext.prototype.clearBufferuiv = function(buffer, drawbuffer, values, srcOffset) {};

/**
 * @param {number} buffer
 * @param {number} drawbuffer
 * @param {number} depth
 * @param {number} stencil
 * @return {void}
 */
WebGL2RenderingContext.prototype.clearBufferfi = function(buffer, drawbuffer, depth, stencil) {};

/**
 * @return {?}
 */
WebGL2RenderingContext.prototype.createQuery = function() {};

/**
 * @param {?} query
 * @return {void}
 */
WebGL2RenderingContext.prototype.deleteQuery = function(query) {};

/**
 * @param {?} query
 * @return {boolean}
 */
WebGL2RenderingContext.prototype.isQuery = function(query) {};

/**
 * @param {number} target
 * @param {?} query
 * @return {void}
 */
WebGL2RenderingContext.prototype.beginQuery = function(target, query) {};

/**
 * @param {number} target
 * @return {void}
 */
WebGL2RenderingContext.prototype.endQuery = function(target) {};

/**
 * @param {number} target
 * @param {number} pname
 * @return {?}
 */
WebGL2RenderingContext.prototype.getQuery = function(target, pname) {};

/**
 * @param {?} query
 * @param {number} pname
 * @return {?}
 */
WebGL2RenderingContext.prototype.getQueryParameter = function(query, pname) {};

/**
 * @return {?}
 */
WebGL2RenderingContext.prototype.createSampler = function() {};

/**
 * @param {?} sampler
 * @return {void}
 */
WebGL2RenderingContext.prototype.deleteSampler = function(sampler) {};

/**
 * @param {?} sampler
 * @return {boolean}
 */
WebGL2RenderingContext.prototype.isSampler = function(sampler) {};

/**
 * @param {number} unit
 * @param {?} sampler
 * @return {void}
 */
WebGL2RenderingContext.prototype.bindSampler = function(unit, sampler) {};

/**
 * @param {?} sampler
 * @param {number} pname
 * @param {number} param
 * @return {void}
 */
WebGL2RenderingContext.prototype.samplerParameteri = function(sampler, pname, param) {};

/**
 * @param {?} sampler
 * @param {number} pname
 * @param {number} param
 * @return {void}
 */
WebGL2RenderingContext.prototype.samplerParameterf = function(sampler, pname, param) {};

/**
 * @param {?} sampler
 * @param {number} pname
 * @return {?}
 */
WebGL2RenderingContext.prototype.getSamplerParameter = function(sampler, pname) {};

/**
 * @param {number} condition
 * @param {number} flags
 * @return {?}
 */
WebGL2RenderingContext.prototype.fenceSync = function(condition, flags) {};

/**
 * @param {?} sync
 * @return {boolean}
 */
WebGL2RenderingContext.prototype.isSync = function(sync) {};

/**
 * @param {?} sync
 * @return {void}
 */
WebGL2RenderingContext.prototype.deleteSync = function(sync) {};

/**
 * @param {?} sync
 * @param {number} flags
 * @param {number} timeout
 * @return {number}
 */
WebGL2RenderingContext.prototype.clientWaitSync = function(sync, flags, timeout) {};

/**
 * @param {?} sync
 * @param {number} flags
 * @param {number} timeout
 * @return {void}
 */
WebGL2RenderingContext.prototype.waitSync = function(sync, flags, timeout) {};

/**
 * @param {?} sync
 * @param {number} pname
 * @return {?}
 */
WebGL2RenderingContext.prototype.getSyncParameter = function(sync, pname) {};

/**
 * @return {?}
 */
WebGL2RenderingContext.prototype.createTransformFeedback = function() {};

/**
 * @param {?} tf
 * @return {void}
 */
WebGL2RenderingContext.prototype.deleteTransformFeedback = function(tf) {};

/**
 * @param {?} tf
 * @return {boolean}
 */
WebGL2RenderingContext.prototype.isTransformFeedback = function(tf) {};

/**
 * @param {number} target
 * @param {?} tf
 * @return {void}
 */
WebGL2RenderingContext.prototype.bindTransformFeedback = function(target, tf) {};

/**
 * @param {number} primitiveMode
 * @return {void}
 */
WebGL2RenderingContext.prototype.beginTransformFeedback = function(primitiveMode) {};

/**
 * @return {void}
 */
WebGL2RenderingContext.prototype.endTransformFeedback = function() {};

/**
 * @param {!WebGLProgram} program
 * @param {!Array<string>} varyings
 * @param {number} bufferMode
 * @return {void}
 */
WebGL2RenderingContext.prototype.transformFeedbackVaryings = function(program, varyings, bufferMode) {};

/**
 * @param {!WebGLProgram} program
 * @param {number} index
 * @return {!WebGLActiveInfo}
 */
WebGL2RenderingContext.prototype.getTransformFeedbackVarying = function(program, index) {};

/**
 * @return {void}
 */
WebGL2RenderingContext.prototype.pauseTransformFeedback = function() {};

/**
 * @return {void}
 */
WebGL2RenderingContext.prototype.resumeTransformFeedback = function() {};

/**
 * @param {number} target
 * @param {number} index
 * @param {!WebGLBuffer} buffer
 * @return {void}
 */
WebGL2RenderingContext.prototype.bindBufferBase = function(target, index, buffer) {};

/**
 * @param {number} target
 * @param {number} index
 * @param {!WebGLBuffer} buffer
 * @param {number} offset
 * @param {number} size
 * @return {void}
 */
WebGL2RenderingContext.prototype.bindBufferRange = function(target, index, buffer, offset, size) {};

/**
 * @param {number} target
 * @param {number} index
 * @return {?}
 */
WebGL2RenderingContext.prototype.getIndexedParameter = function(target, index) {};

/**
 * @param {!WebGLProgram} program
 * @param {!Array<string>} uniformNames
 * @return {!Array<number>}
 */
WebGL2RenderingContext.prototype.getUniformIndices = function(program, uniformNames) {};

/**
 * @param {!WebGLProgram} program
 * @param {!Array<number>} uniformIndices
 * @param {number} pname
 * @return {?}
 */
WebGL2RenderingContext.prototype.getActiveUniforms = function(program, uniformIndices, pname) {};

/**
 * @param {!WebGLProgram} program
 * @param {string} uniformBlockName
 * @return {number}
 */
WebGL2RenderingContext.prototype.getUniformBlockIndex = function(program, uniformBlockName) {};

/**
 * @param {!WebGLProgram} program
 * @param {number} uniformBlockIndex
 * @param {number} pname
 * @return {?}
 */
WebGL2RenderingContext.prototype.getActiveUniformBlockParameter = function(program, uniformBlockIndex, pname) {};

/**
 * @param {!WebGLProgram} program
 * @param {number} uniformBlockIndex
 * @return {string}
 */
WebGL2RenderingContext.prototype.getActiveUniformBlockName = function(program, uniformBlockIndex) {};

/**
 * @param {!WebGLProgram} program
 * @param {number} uniformBlockIndex
 * @param {number} uniformBlockBinding
 * @return {void}
 */
WebGL2RenderingContext.prototype.uniformBlockBinding = function(program, uniformBlockIndex, uniformBlockBinding) {};

/**
 * @return {?}
 */
WebGL2RenderingContext.prototype.createVertexArray = function() {};

/**
 * @param {?} vertexArray
 * @return {void}
 */
WebGL2RenderingContext.prototype.deleteVertexArray = function(vertexArray) {};

/**
 * @param {?} vertexArray
 * @return {boolean}
 */
WebGL2RenderingContext.prototype.isVertexArray = function(vertexArray) {};

/**
 * @param {?} array
 * @return {void}
 */
WebGL2RenderingContext.prototype.bindVertexArray = function(array) {};
 /** @type {function(new: (?)): ?} */
var WebGL2RenderingContext;
/**
 * @record
 * @struct
 */
function WebGLQuery() {}
 /** @type {function(new: (?)): ?} */
var WebGLQuery;
/**
 * @record
 * @struct
 */
function WebGLSampler() {}
 /** @type {function(new: (?)): ?} */
var WebGLSampler;
/**
 * @record
 * @struct
 */
function WebGLSync() {}
 /** @type {function(new: (?)): ?} */
var WebGLSync;
/**
 * @record
 * @struct
 */
function WebGLTransformFeedback() {}
 /** @type {function(new: (?)): ?} */
var WebGLTransformFeedback;
/**
 * @record
 * @struct
 */
function WebGLVertexArrayObject() {}
 /** @type {function(new: (?)): ?} */
var WebGLVertexArrayObject;
