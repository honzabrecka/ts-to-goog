/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/random-seed/index.d.ts:
/**
 * @record
 * @struct
 */
function RandomSeed() {}

/**
 * @param {number} range
 * @return {number}
 */
RandomSeed.prototype.range = function(range) {};

/**
 * @return {number}
 */
RandomSeed.prototype.random = function() {};

/**
 * @param {number} min
 * @param {number} max
 * @return {number}
 */
RandomSeed.prototype.floatBetween = function(min, max) {};

/**
 * @param {number} min
 * @param {number} max
 * @return {number}
 */
RandomSeed.prototype.intBetween = function(min, max) {};

/**
 * @param {number} count
 * @return {string}
 */
RandomSeed.prototype.string = function(count) {};

/**
 * @param {string} seed
 * @return {void}
 */
RandomSeed.prototype.seed = function(seed) {};

/**
 * @param {string} inStr
 * @return {string}
 */
RandomSeed.prototype.cleanString = function(inStr) {};

/**
 * @param {string} inStr
 * @return {string}
 */
RandomSeed.prototype.hashString = function(inStr) {};

/**
 * @param {...?} args
 * @return {void}
 */
RandomSeed.prototype.addEntropy = function(args) {};

/**
 * @return {void}
 */
RandomSeed.prototype.initState = function() {};

/**
 * @return {void}
 */
RandomSeed.prototype.done = function() {};

/**
 * @param {string=} seed
 * @return {?}
 */
function create(seed) {}
