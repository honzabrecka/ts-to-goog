/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/egg.js/index.d.ts:
 /** @type {!Egg} */
var egg;

/**
 * @constructor
 * @struct
 * Egg.js is a simple JS library that has no prerequisites and allows you to easily add web easter
 * eggs by watching the user's key strokes.
 * Egg.js is a simple JS library that has no prerequisites and allows you to easily add web easter
 * eggs by watching the user's key strokes.
 * Egg.js is a simple JS library that has no prerequisites and allows you to easily add web easter
 * eggs by watching the user's key strokes.
 * @param {string=} keySequence You need to pass it the character sequence to trigger the easter egg
 *                    callback (which can either be in plain English or JavaScript key codes).
 * @param {function(): ?=} fn A function to trigger when it happens.
 * @param {?=} metadata An optional set of metadata.
 */
function Egg(keySequence, fn, metadata) {}

/**
 * Use to add in your easter eggs.
 * Use to add in your easter eggs.
 * @param {string} keySequence You need to pass it the character sequence to trigger the easter egg
 *                    callback (which can either be in plain English or JavaScript key codes).
 * @param {function(): ?} fn A function to trigger when it happens.
 * @param {?=} metadata An optional set of metadata.
 * @return {!Egg}
 */
Egg.prototype.AddCode = function(keySequence, fn, metadata) {};

/**
 * Add a hook, that will run after any egg code is triggered. You could use it to fire a Google
 * Analytics event or send out a tweet that someone finally found your easter egg. Hooks get
 * access to the whole Egg.js object so you can pull information about the easter egg that
 * fired via this.activeEgg.
 * @param {function(): ?} fn A function to trigger when it happens.
 * @return {!Egg}
 */
Egg.prototype.AddHook = function(fn) {};

/**
 * Start listening to key codes.
 * @return {!Egg}
 */
Egg.prototype.Listen = function() {};

/**
 * Use to add in your easter eggs.
 * Use to add in your easter eggs.
 * @param {string} keySequence You need to pass it the character sequence to trigger the easter egg
 *                    callback (which can either be in plain English or JavaScript key codes).
 * @param {function(): ?} fn A function to trigger when it happens.
 * @param {?=} metadata An optional set of metadata.
 * @return {!Egg}
 */
Egg.prototype.addCode = function(keySequence, fn, metadata) {};

/**
 * Add a hook, that will run after any egg code is triggered. You could use it to fire a Google
 * Analytics event or send out a tweet that someone finally found your easter egg. Hooks get
 * access to the whole Egg.js object so you can pull information about the easter egg that
 * fired via this.activeEgg.
 * @param {function(): ?} fn A function to trigger when it happens.
 * @return {!Egg}
 */
Egg.prototype.addHook = function(fn) {};

/**
 * Start listening to key codes.
 * @return {!Egg}
 */
Egg.prototype.listen = function() {};
