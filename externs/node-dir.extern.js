/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/node-dir/index.d.ts:

/* TODO: ImportDeclaration in  */
/**
 * @record
 * @struct
 */
function Options() {}
 /** @type {string} */
Options.prototype.encoding;
 /** @type {(!RegExp|!Array<string>)} */
Options.prototype.exclude;
 /** @type {(!RegExp|!Array<string>)} */
Options.prototype.excludeDir;
 /** @type {(!RegExp|!Array<string>)} */
Options.prototype.match;
 /** @type {(!RegExp|!Array<string>)} */
Options.prototype.matchDir;
 /** @type {boolean} */
Options.prototype.recursive;
 /** @type {boolean} */
Options.prototype.reverse;
 /** @type {boolean} */
Options.prototype.shortName;
 /** @type {boolean} */
Options.prototype.sort;
 /** @type {boolean} */
Options.prototype.doneOnErr;
/**
 * @record
 * @struct
 */
function FileCallback() {}

/* TODO: CallSignature:  */
/**
 * @record
 * @struct
 */
function FileNamedCallback() {}

/* TODO: CallSignature:  */
/**
 * @record
 * @struct
 */
function StreamCallback() {}

/* TODO: CallSignature:  */
/**
 * @record
 * @struct
 */
function FinishedCallback() {}

/* TODO: CallSignature:  */
/**
 * @record
 * @struct
 */
function PathsResult() {}
 /** @type {!Array<string>} */
PathsResult.prototype.files;
 /** @type {!Array<string>} */
PathsResult.prototype.dirs;

/**
 * @param {string} dir
 * @param {?} fileCallback_or_options
 * @param {?=} finishedCallback_or_fileCallback
 * @param {?=} finishedCallback
 * @return {void}
 */
function readFiles(dir, fileCallback_or_options, finishedCallback_or_fileCallback, finishedCallback) {}

/**
 * @param {string} dir
 * @param {?} options
 * @param {?} streamCallback
 * @param {?=} finishedCallback
 * @return {void}
 */
function readFilesStream(dir, options, streamCallback, finishedCallback) {}

/**
 * @param {string} dir
 * @param {?} callback
 * @return {void}
 */
function files(dir, callback) {}

/**
 * @param {string} dir
 * @param {?} callback
 * @return {void}
 */
function subdirs(dir, callback) {}

/**
 * @param {string} dir
 * @param {?|boolean} callback_or_combine
 * @param {?=} callback
 * @return {void}
 */
function paths(dir, callback_or_combine, callback) {}
