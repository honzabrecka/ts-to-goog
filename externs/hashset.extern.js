/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/hashset/index.d.ts:
/**
 * @record
 * @struct
 */
function IHashSet() {}

/**
 * @param {TValue} value
 * @return {void}
 */
IHashSet.prototype.add = function(value) {};

/**
 * @param {!Array<TValue>} arr
 * @return {void}
 */
IHashSet.prototype.addAll = function(arr) {};

/**
 * @param {TValue} value
 * @return {boolean}
 */
IHashSet.prototype.contains = function(value) {};

/**
 * @return {void}
 */
IHashSet.prototype.clear = function() {};

/**
 * @return {boolean}
 */
IHashSet.prototype.isEmpty = function() {};

/**
 * @return {!Array<TValue>}
 */
IHashSet.prototype.values = function() {};

/**
 * @param {TValue} value
 * @return {void}
 */
IHashSet.prototype.remove = function(value) {};

/**
 * @return {number}
 */
IHashSet.prototype.size = function() {};

/**
 * @return {!IHashSet}
 */
IHashSet.prototype.clone = function() {};

/**
 * @param {!IHashSet} set
 * @return {boolean}
 */
IHashSet.prototype.isSubsetOf = function(set) {};

/**
 * @param {!IHashSet} set
 * @return {!IHashSet}
 */
IHashSet.prototype.intersection = function(set) {};

/**
 * @param {!IHashSet} set
 * @return {!IHashSet}
 */
IHashSet.prototype.union = function(set) {};

/**
 * @param {!IHashSet} set
 * @return {!IHashSet}
 */
IHashSet.prototype.complement = function(set) {};
/**
 * @record
 * @struct
 */
function IHashSetStatic() {}

/* TODO: ConstructSignature:  */

/* TODO: ConstructSignature:  */

/* TODO: ConstructSignature:  */
 /** @type {!IHashSetStatic} */
var HashSet;
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "hashset"
/** @const */
tsickle_declare_module.hashset = {};

/* TODO: ExportAssignment in tsickle_declare_module.hashset */
