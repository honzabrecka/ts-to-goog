/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/procfs-stats/index.d.ts:

/**
 * @param {number} pid
 * @return {!procfs.StatStatic}
 */
function procfs(pid) {}

/** @typedef {function(?, Value): void} */
procfs.Callback;
/**
 * @record
 * @struct
 */
procfs.Cpu = function() {};
 /** @type {!procfs.CpuDetail} */
procfs.Cpu.prototype.cpu;
 /** @type {string} */
procfs.Cpu.prototype.intr;
 /** @type {string} */
procfs.Cpu.prototype.ctxt;
 /** @type {string} */
procfs.Cpu.prototype.btime;
 /** @type {string} */
procfs.Cpu.prototype.processes;
 /** @type {string} */
procfs.Cpu.prototype.procs_running;
 /** @type {string} */
procfs.Cpu.prototype.procs_blocked;
 /** @type {string} */
procfs.Cpu.prototype.softirq;
/**
 * @record
 * @struct
 */
procfs.CpuDetail = function() {};
 /** @type {string} */
procfs.CpuDetail.prototype.user;
 /** @type {string} */
procfs.CpuDetail.prototype.nice;
 /** @type {string} */
procfs.CpuDetail.prototype.system;
 /** @type {string} */
procfs.CpuDetail.prototype.idle;
 /** @type {string} */
procfs.CpuDetail.prototype.iowait;
 /** @type {string} */
procfs.CpuDetail.prototype.irq;
 /** @type {string} */
procfs.CpuDetail.prototype.softirq;
 /** @type {string} */
procfs.CpuDetail.prototype.steal;
 /** @type {string} */
procfs.CpuDetail.prototype.guest;
 /** @type {string} */
procfs.CpuDetail.prototype.guest_nice;
/**
 * @record
 * @struct
 */
procfs.DiskStat = function() {};
 /** @type {string} */
procfs.DiskStat.prototype.device_number;
 /** @type {string} */
procfs.DiskStat.prototype.device_number_minor;
 /** @type {string} */
procfs.DiskStat.prototype.device;
 /** @type {string} */
procfs.DiskStat.prototype.reads_completed;
 /** @type {string} */
procfs.DiskStat.prototype.reads_merged;
 /** @type {string} */
procfs.DiskStat.prototype.sectors_read;
 /** @type {string} */
procfs.DiskStat.prototype.ms_reading;
 /** @type {string} */
procfs.DiskStat.prototype.writes_completed;
 /** @type {string} */
procfs.DiskStat.prototype.writes_merged;
 /** @type {string} */
procfs.DiskStat.prototype.sectors_written;
 /** @type {string} */
procfs.DiskStat.prototype.ms_writing;
 /** @type {string} */
procfs.DiskStat.prototype.ios_pending;
 /** @type {string} */
procfs.DiskStat.prototype.ms_io;
 /** @type {string} */
procfs.DiskStat.prototype.ms_weighted_io;
/**
 * @record
 * @struct
 */
procfs.FileDescriptor = function() {};
 /** @type {string} */
procfs.FileDescriptor.prototype.fd;
 /** @type {string} */
procfs.FileDescriptor.prototype.path;
 /** @type {!procfs.FileDescriptorInfo} */
procfs.FileDescriptor.prototype.info;
 /** @type {(boolean|!procfs.FileDescriptorStat)} */
procfs.FileDescriptor.prototype.stat;
/**
 * @record
 * @struct
 */
procfs.FileDescriptorInfo = function() {};
 /** @type {string} */
procfs.FileDescriptorInfo.prototype.pos;
 /** @type {string} */
procfs.FileDescriptorInfo.prototype.flags;
/**
 * @record
 * @struct
 */
procfs.FileDescriptorStat = function() {};
 /** @type {number} */
procfs.FileDescriptorStat.prototype.dev;
 /** @type {number} */
procfs.FileDescriptorStat.prototype.mode;
 /** @type {number} */
procfs.FileDescriptorStat.prototype.nlink;
 /** @type {number} */
procfs.FileDescriptorStat.prototype.uid;
 /** @type {number} */
procfs.FileDescriptorStat.prototype.gid;
 /** @type {number} */
procfs.FileDescriptorStat.prototype.rdev;
 /** @type {number} */
procfs.FileDescriptorStat.prototype.blksize;
 /** @type {number} */
procfs.FileDescriptorStat.prototype.ino;
 /** @type {number} */
procfs.FileDescriptorStat.prototype.size;
 /** @type {number} */
procfs.FileDescriptorStat.prototype.blocks;
 /** @type {!Date} */
procfs.FileDescriptorStat.prototype.atime;
 /** @type {!Date} */
procfs.FileDescriptorStat.prototype.mtime;
 /** @type {!Date} */
procfs.FileDescriptorStat.prototype.ctime;
/**
 * @record
 * @struct
 */
procfs.MemoryInfo = function() {};
 /** @type {string} */
procfs.MemoryInfo.prototype.MemTotal;
 /** @type {string} */
procfs.MemoryInfo.prototype.MemFree;
 /** @type {string} */
procfs.MemoryInfo.prototype.MemAvailable;
 /** @type {string} */
procfs.MemoryInfo.prototype.Buffers;
 /** @type {string} */
procfs.MemoryInfo.prototype.Cached;
 /** @type {string} */
procfs.MemoryInfo.prototype.SwapCached;
 /** @type {string} */
procfs.MemoryInfo.prototype.Active;
 /** @type {string} */
procfs.MemoryInfo.prototype.Inactive;

/* TODO: PropertySignature: procfs.'Active(anon)' */

/* TODO: PropertySignature: procfs.'Inactive(anon)' */

/* TODO: PropertySignature: procfs.'Active(file)' */

/* TODO: PropertySignature: procfs.'Inactive(file)' */
 /** @type {string} */
procfs.MemoryInfo.prototype.Unevictable;
 /** @type {string} */
procfs.MemoryInfo.prototype.Mlocked;
 /** @type {string} */
procfs.MemoryInfo.prototype.SwapTotal;
 /** @type {string} */
procfs.MemoryInfo.prototype.SwapFree;
 /** @type {string} */
procfs.MemoryInfo.prototype.Dirty;
 /** @type {string} */
procfs.MemoryInfo.prototype.Writeback;
 /** @type {string} */
procfs.MemoryInfo.prototype.AnonPages;
 /** @type {string} */
procfs.MemoryInfo.prototype.Mapped;
 /** @type {string} */
procfs.MemoryInfo.prototype.Shmem;
 /** @type {string} */
procfs.MemoryInfo.prototype.Slab;
 /** @type {string} */
procfs.MemoryInfo.prototype.SReclaimable;
 /** @type {string} */
procfs.MemoryInfo.prototype.SUnreclaim;
 /** @type {string} */
procfs.MemoryInfo.prototype.KernelStack;
 /** @type {string} */
procfs.MemoryInfo.prototype.PageTables;
 /** @type {string} */
procfs.MemoryInfo.prototype.NFS_Unstable;
 /** @type {string} */
procfs.MemoryInfo.prototype.Bounce;
 /** @type {string} */
procfs.MemoryInfo.prototype.WritebackTmp;
 /** @type {string} */
procfs.MemoryInfo.prototype.CommitLimit;
 /** @type {string} */
procfs.MemoryInfo.prototype.Committed_AS;
 /** @type {string} */
procfs.MemoryInfo.prototype.VmallocTotal;
 /** @type {string} */
procfs.MemoryInfo.prototype.VmallocUsed;
 /** @type {string} */
procfs.MemoryInfo.prototype.VmallocChunk;
 /** @type {string} */
procfs.MemoryInfo.prototype.AnonHugePages;
 /** @type {string} */
procfs.MemoryInfo.prototype.HugePages_Total;
 /** @type {string} */
procfs.MemoryInfo.prototype.HugePages_Free;
 /** @type {string} */
procfs.MemoryInfo.prototype.HugePages_Rsvd;
 /** @type {string} */
procfs.MemoryInfo.prototype.HugePages_Surp;
 /** @type {string} */
procfs.MemoryInfo.prototype.Hugepagesize;
 /** @type {string} */
procfs.MemoryInfo.prototype.DirectMap4k;
 /** @type {string} */
procfs.MemoryInfo.prototype.DirectMap2M;
/**
 * @record
 * @struct
 */
procfs.MemoryStat = function() {};
 /** @type {string} */
procfs.MemoryStat.prototype.size;
 /** @type {string} */
procfs.MemoryStat.prototype.resident;
 /** @type {string} */
procfs.MemoryStat.prototype.share;
 /** @type {string} */
procfs.MemoryStat.prototype.text;
 /** @type {string} */
procfs.MemoryStat.prototype.lib;
 /** @type {string} */
procfs.MemoryStat.prototype.data;
 /** @type {string} */
procfs.MemoryStat.prototype.dt;
/**
 * @record
 * @struct
 */
procfs.Net = function() {};
 /** @type {string} */
procfs.Net.prototype.Interface;
 /** @type {{Receive: string, Transmit: string}} */
procfs.Net.prototype.bytes;
 /** @type {{Receive: string, Transmit: string}} */
procfs.Net.prototype.packets;
 /** @type {{Receive: string, Transmit: string}} */
procfs.Net.prototype.errs;
 /** @type {{Receive: string, Transmit: string}} */
procfs.Net.prototype.drop;
 /** @type {{Receive: string, Transmit: string}} */
procfs.Net.prototype.fifo;
 /** @type {{Receive: string}} */
procfs.Net.prototype.frame;
 /** @type {{Receive: string, Transmit: string}} */
procfs.Net.prototype.compressed;
 /** @type {{Receive: string}} */
procfs.Net.prototype.multicast;
 /** @type {{Transmit: string}} */
procfs.Net.prototype.colls;
 /** @type {{Transmit: string}} */
procfs.Net.prototype.carrier;
/**
 * @record
 * @struct
 */
procfs.Io = function() {};
 /** @type {string} */
procfs.Io.prototype.cancelled_write_bytes;
 /** @type {string} */
procfs.Io.prototype.rchar;
 /** @type {string} */
procfs.Io.prototype.read_bytes;
 /** @type {string} */
procfs.Io.prototype.syscr;
 /** @type {string} */
procfs.Io.prototype.syscw;
 /** @type {string} */
procfs.Io.prototype.wchar;
 /** @type {string} */
procfs.Io.prototype.write_bytes;
/**
 * @record
 * @struct
 */
procfs.Stat = function() {};
 /** @type {string} */
procfs.Stat.prototype.pid;
 /** @type {string} */
procfs.Stat.prototype.comm;
 /** @type {string} */
procfs.Stat.prototype.state;
 /** @type {string} */
procfs.Stat.prototype.ppid;
 /** @type {string} */
procfs.Stat.prototype.pgrp;
 /** @type {string} */
procfs.Stat.prototype.session;
 /** @type {string} */
procfs.Stat.prototype.tty_nr;
 /** @type {string} */
procfs.Stat.prototype.tpgid;
 /** @type {string} */
procfs.Stat.prototype.flags;
 /** @type {string} */
procfs.Stat.prototype.minflt;
 /** @type {string} */
procfs.Stat.prototype.cminflt;
 /** @type {string} */
procfs.Stat.prototype.majflt;
 /** @type {string} */
procfs.Stat.prototype.cmajflt;
 /** @type {string} */
procfs.Stat.prototype.utime;
 /** @type {string} */
procfs.Stat.prototype.stime;
 /** @type {string} */
procfs.Stat.prototype.cutime;
 /** @type {string} */
procfs.Stat.prototype.cstime;
 /** @type {string} */
procfs.Stat.prototype.priority;
 /** @type {string} */
procfs.Stat.prototype.nice;
 /** @type {string} */
procfs.Stat.prototype.num_threads;
 /** @type {string} */
procfs.Stat.prototype.itrealvalue;
 /** @type {string} */
procfs.Stat.prototype.starttime;
 /** @type {string} */
procfs.Stat.prototype.vsize;
 /** @type {string} */
procfs.Stat.prototype.rss;
 /** @type {string} */
procfs.Stat.prototype.rsslim;
 /** @type {string} */
procfs.Stat.prototype.startcode;
 /** @type {string} */
procfs.Stat.prototype.endcode;
 /** @type {string} */
procfs.Stat.prototype.startstack;
 /** @type {string} */
procfs.Stat.prototype.kstkesp;
 /** @type {string} */
procfs.Stat.prototype.kstkeip;
 /** @type {string} */
procfs.Stat.prototype.signal;
 /** @type {string} */
procfs.Stat.prototype.blocked;
 /** @type {string} */
procfs.Stat.prototype.sigignore;
 /** @type {string} */
procfs.Stat.prototype.sigcatch;
 /** @type {string} */
procfs.Stat.prototype.wchan;
 /** @type {string} */
procfs.Stat.prototype.nswap;
 /** @type {string} */
procfs.Stat.prototype.cnswap;
 /** @type {string} */
procfs.Stat.prototype.exit_signal;
 /** @type {string} */
procfs.Stat.prototype.processor;
 /** @type {string} */
procfs.Stat.prototype.rt_priority;
 /** @type {string} */
procfs.Stat.prototype.policy;
 /** @type {string} */
procfs.Stat.prototype.delayacct_blkio_ticks;
 /** @type {string} */
procfs.Stat.prototype.guest_time;
 /** @type {string} */
procfs.Stat.prototype.cguest_time;
/**
 * @record
 * @struct
 */
procfs.Status = function() {};
 /** @type {string} */
procfs.Status.prototype.Name;
 /** @type {string} */
procfs.Status.prototype.State;
 /** @type {string} */
procfs.Status.prototype.Tgid;
 /** @type {string} */
procfs.Status.prototype.Pid;
 /** @type {string} */
procfs.Status.prototype.PPid;
 /** @type {string} */
procfs.Status.prototype.TracerPid;
 /** @type {string} */
procfs.Status.prototype.Uid;
 /** @type {string} */
procfs.Status.prototype.Gid;
 /** @type {string} */
procfs.Status.prototype.FDSize;
 /** @type {string} */
procfs.Status.prototype.Groups;
 /** @type {string} */
procfs.Status.prototype.VmPeak;
 /** @type {string} */
procfs.Status.prototype.VmSize;
 /** @type {string} */
procfs.Status.prototype.VmLck;
 /** @type {string} */
procfs.Status.prototype.VmPin;
 /** @type {string} */
procfs.Status.prototype.VmHWM;
 /** @type {string} */
procfs.Status.prototype.VmRSS;
 /** @type {string} */
procfs.Status.prototype.VmData;
 /** @type {string} */
procfs.Status.prototype.VmStk;
 /** @type {string} */
procfs.Status.prototype.VmExe;
 /** @type {string} */
procfs.Status.prototype.VmLib;
 /** @type {string} */
procfs.Status.prototype.VmPTE;
 /** @type {string} */
procfs.Status.prototype.VmSwap;
 /** @type {string} */
procfs.Status.prototype.Threads;
 /** @type {string} */
procfs.Status.prototype.SigQ;
 /** @type {string} */
procfs.Status.prototype.SigPnd;
 /** @type {string} */
procfs.Status.prototype.ShdPnd;
 /** @type {string} */
procfs.Status.prototype.SigBlk;
 /** @type {string} */
procfs.Status.prototype.SigIgn;
 /** @type {string} */
procfs.Status.prototype.SigCgt;
 /** @type {string} */
procfs.Status.prototype.CapInh;
 /** @type {string} */
procfs.Status.prototype.CapPrm;
 /** @type {string} */
procfs.Status.prototype.CapEff;
 /** @type {string} */
procfs.Status.prototype.CapBnd;
 /** @type {string} */
procfs.Status.prototype.Cpus_allowed;
 /** @type {string} */
procfs.Status.prototype.Cpus_allowed_list;
 /** @type {string} */
procfs.Status.prototype.Mems_allowed;
 /** @type {string} */
procfs.Status.prototype.Mems_allowed_list;
 /** @type {string} */
procfs.Status.prototype.voluntary_ctxt_switches;
 /** @type {string} */
procfs.Status.prototype.nonvoluntary_ctxt_switches;
/**
 * @record
 * @struct
 */
procfs.Tcp = function() {};
 /** @type {string} */
procfs.Tcp.prototype.sl;
 /** @type {string} */
procfs.Tcp.prototype.local_address;
 /** @type {string} */
procfs.Tcp.prototype.rem_address;
 /** @type {string} */
procfs.Tcp.prototype.st;
 /** @type {string} */
procfs.Tcp.prototype.tx_queue;
 /** @type {string} */
procfs.Tcp.prototype.rx_queue;
 /** @type {string} */
procfs.Tcp.prototype.tr;

/* TODO: PropertySignature: procfs.'tm->when' */
 /** @type {string} */
procfs.Tcp.prototype.retrnsmt;
 /** @type {string} */
procfs.Tcp.prototype.uid;
 /** @type {string} */
procfs.Tcp.prototype.timeout;
 /** @type {string} */
procfs.Tcp.prototype.inode;
 /** @type {!Object<string,string>} */
procfs.Tcp.prototype._;
/**
 * @record
 * @struct
 */
procfs.Udp = function() {};
 /** @type {string} */
procfs.Udp.prototype.sl;
 /** @type {string} */
procfs.Udp.prototype.local_address;
 /** @type {string} */
procfs.Udp.prototype.rem_address;
 /** @type {string} */
procfs.Udp.prototype.st;
 /** @type {string} */
procfs.Udp.prototype.tx_queue;
 /** @type {string} */
procfs.Udp.prototype.rx_queue;
 /** @type {string} */
procfs.Udp.prototype.tr;

/* TODO: PropertySignature: procfs.'tm->when' */
 /** @type {string} */
procfs.Udp.prototype.retrnsmt;
 /** @type {string} */
procfs.Udp.prototype.uid;
 /** @type {string} */
procfs.Udp.prototype.timeout;
 /** @type {string} */
procfs.Udp.prototype.inode;
 /** @type {string} */
procfs.Udp.prototype.ref;
 /** @type {string} */
procfs.Udp.prototype.pointer;
 /** @type {string} */
procfs.Udp.prototype.drops;
/**
 * @record
 * @struct
 */
procfs.UnixSocket = function() {};
 /** @type {string} */
procfs.UnixSocket.prototype.Num;
 /** @type {string} */
procfs.UnixSocket.prototype.RefCount;
 /** @type {string} */
procfs.UnixSocket.prototype.Protocol;
 /** @type {string} */
procfs.UnixSocket.prototype.Flags;
 /** @type {string} */
procfs.UnixSocket.prototype.Type;
 /** @type {string} */
procfs.UnixSocket.prototype.St;
 /** @type {string} */
procfs.UnixSocket.prototype.Inode;
 /** @type {string} */
procfs.UnixSocket.prototype.Path;
/**
 * @record
 * @struct
 */
procfs.Wifi = function() {};
 /** @type {string} */
procfs.Wifi.prototype.Interface;
 /** @type {string} */
procfs.Wifi.prototype.status;
 /** @type {{Quality: string}} */
procfs.Wifi.prototype.link;
 /** @type {{Quality: string}} */
procfs.Wifi.prototype.level;
 /** @type {{Quality: string}} */
procfs.Wifi.prototype.noise;
 /** @type {{Discarded packets: string}} */
procfs.Wifi.prototype.nwid;
 /** @type {{Discarded packets: string}} */
procfs.Wifi.prototype.crypt;
 /** @type {{Discarded packets: string}} */
procfs.Wifi.prototype.frag;
 /** @type {{Discarded packets: string}} */
procfs.Wifi.prototype.retry;
 /** @type {{Discarded packets: string}} */
procfs.Wifi.prototype.misc;
 /** @type {{Missed: string}} */
procfs.Wifi.prototype.beacon;
/**
 * @constructor
 * @struct
 */
procfs.StatStatic = function() {};
 /** @type {boolean} */
procfs.StatStatic.prototype.works;

/**
 * @param {function(?, !Array<string>): void} callback
 * @return {?}
 */
procfs.StatStatic.prototype.argv = function(callback) {};

/**
 * @param {function(?, !procfs.Cpu): void} callback
 * @return {?}
 */
procfs.StatStatic.prototype.cpu = function(callback) {};

/**
 * @param {function(?, string): void} callback
 * @return {?}
 */
procfs.StatStatic.prototype.cwd = function(callback) {};

/**
 * @param {function(?, !Array<!procfs.DiskStat>): void} callback
 * @return {?}
 */
procfs.StatStatic.prototype.disk = function(callback) {};

/**
 * @param {function(?, !Array<string>): void} callback
 * @return {?}
 */
procfs.StatStatic.prototype.env = function(callback) {};

/**
 * @param {string} fdPath
 * @param {function(?, !procfs.FileDescriptor): void} callback
 * @return {?}
 */
procfs.StatStatic.prototype.fd = function(fdPath, callback) {};

/**
 * @param {function(?, !Array<string>): void} callback
 * @return {?}
 */
procfs.StatStatic.prototype.fds = function(callback) {};

/**
 * @param {function(?, !procfs.MemoryInfo): void} callback
 * @return {?}
 */
procfs.StatStatic.prototype.meminfo = function(callback) {};

/**
 * @param {function(?, !Array<!procfs.Net>): void} callback
 * @return {?}
 */
procfs.StatStatic.prototype.net = function(callback) {};

/**
 * @param {function(?, !procfs.Io): void} callback
 * @return {?}
 */
procfs.StatStatic.prototype.io = function(callback) {};

/**
 * @param {function(?, !procfs.Stat): void} callback
 * @return {?}
 */
procfs.StatStatic.prototype.stat = function(callback) {};

/**
 * @param {function(?, !procfs.MemoryStat): void} callback
 * @return {?}
 */
procfs.StatStatic.prototype.statm = function(callback) {};

/**
 * @param {function(?, !procfs.Status): void} callback
 * @return {?}
 */
procfs.StatStatic.prototype.status = function(callback) {};

/**
 * @param {function(?, !Array<!procfs.Tcp>): void} callback
 * @return {?}
 */
procfs.StatStatic.prototype.tcp = function(callback) {};

/**
 * @param {number} tid
 * @return {!procfs.Stat}
 */
procfs.StatStatic.prototype.thread = function(tid) {};

/**
 * @param {function(?, !Array<string>): void} callback
 * @return {?}
 */
procfs.StatStatic.prototype.threads = function(callback) {};

/**
 * @param {function(?, !Array<!procfs.Udp>): void} callback
 * @return {?}
 */
procfs.StatStatic.prototype.udp = function(callback) {};

/**
 * @param {function(?, !Array<!procfs.UnixSocket>): void} callback
 * @return {?}
 */
procfs.StatStatic.prototype.unix = function(callback) {};

/**
 * @param {function(?, !Array<!procfs.Wifi>): void} callback
 * @return {?}
 */
procfs.StatStatic.prototype.wifi = function(callback) {};

/* TODO: ExportAssignment in  */
