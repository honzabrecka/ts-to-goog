/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/virtual-dom/index.d.ts:
/** @const */
var VirtualDOM = {};
/**
 * @record
 * @struct
 */
VirtualDOM.VHook = function() {};

/**
 * @param {!Element} node
 * @param {string} propertyName
 * @return {void}
 */
VirtualDOM.VHook.prototype.hook = function(node, propertyName) {};

/**
 * @param {!Element} node
 * @param {string} propertyName
 * @return {void}
 */
VirtualDOM.VHook.prototype.unhook = function(node, propertyName) {};

/** @typedef {function(!Array<?>): void} */
VirtualDOM.EventHandler;
/**
 * @record
 * @struct
 */
VirtualDOM.VProperties = function() {};
 /** @type {!Object<string,string>} */
VirtualDOM.VProperties.prototype.attributes;
 /** @type {?} */
VirtualDOM.VProperties.prototype.style;

/* TODO: IndexSignature: VirtualDOM */
/**
 * @record
 * @struct
 */
VirtualDOM.VNode = function() {};
 /** @type {string} */
VirtualDOM.VNode.prototype.tagName;
 /** @type {!VirtualDOM.VProperties} */
VirtualDOM.VNode.prototype.properties;
 /** @type {!Array<(!VirtualDOM.VText|!VirtualDOM.VNode|!VirtualDOM.Widget|!VirtualDOM.Thunk)>} */
VirtualDOM.VNode.prototype.children;
 /** @type {string} */
VirtualDOM.VNode.prototype.key;
 /** @type {string} */
VirtualDOM.VNode.prototype.namespace;
 /** @type {number} */
VirtualDOM.VNode.prototype.count;
 /** @type {boolean} */
VirtualDOM.VNode.prototype.hasWidgets;
 /** @type {boolean} */
VirtualDOM.VNode.prototype.hasThunks;
 /** @type {!Array<?>} */
VirtualDOM.VNode.prototype.hooks;
 /** @type {!Array<?>} */
VirtualDOM.VNode.prototype.descendantHooks;
 /** @type {string} */
VirtualDOM.VNode.prototype.version;
 /** @type {string} */
VirtualDOM.VNode.prototype.type;
/**
 * @record
 * @struct
 */
VirtualDOM.VText = function() {};
 /** @type {string} */
VirtualDOM.VText.prototype.text;

/* TODO: ConstructSignature: VirtualDOM */
 /** @type {string} */
VirtualDOM.VText.prototype.version;
 /** @type {string} */
VirtualDOM.VText.prototype.type;
/**
 * @record
 * @struct
 */
VirtualDOM.Widget = function() {};
 /** @type {string} */
VirtualDOM.Widget.prototype.type;

/**
 * @return {!Element}
 */
VirtualDOM.Widget.prototype.init = function() {};

/**
 * @param {!VirtualDOM.Widget} previous
 * @param {!Element} domNode
 * @return {void}
 */
VirtualDOM.Widget.prototype.update = function(previous, domNode) {};

/**
 * @param {!Element} node
 * @return {void}
 */
VirtualDOM.Widget.prototype.destroy = function(node) {};
/**
 * @record
 * @struct
 */
VirtualDOM.Thunk = function() {};
 /** @type {string} */
VirtualDOM.Thunk.prototype.type;
 /** @type {(!VirtualDOM.VText|!VirtualDOM.VNode|!VirtualDOM.Widget|!VirtualDOM.Thunk)} */
VirtualDOM.Thunk.prototype.vnode;

/**
 * @param {(!VirtualDOM.VText|!VirtualDOM.VNode|!VirtualDOM.Widget|!VirtualDOM.Thunk)} previous
 * @return {(!VirtualDOM.VText|!VirtualDOM.VNode|!VirtualDOM.Widget|!VirtualDOM.Thunk)}
 */
VirtualDOM.Thunk.prototype.render = function(previous) {};

/** @typedef {(!VirtualDOM.VText|!VirtualDOM.VNode|!VirtualDOM.Widget|!VirtualDOM.Thunk)} */
VirtualDOM.VTree;
/**
 * @record
 * @struct
 */
VirtualDOM.VPatch = function() {};
 /** @type {!VirtualDOM.VNode} */
VirtualDOM.VPatch.prototype.vNode;
 /** @type {?} */
VirtualDOM.VPatch.prototype.patch;

/* TODO: ConstructSignature: VirtualDOM */
 /** @type {string} */
VirtualDOM.VPatch.prototype.version;
 /** @type {number} */
VirtualDOM.VPatch.prototype.type;
/**
 * @extends {VirtualDOM.VProperties}
 * @record
 * @struct
 */
VirtualDOM.createProperties = function() {};
 /** @type {string} */
VirtualDOM.createProperties.prototype.key;
 /** @type {string} */
VirtualDOM.createProperties.prototype.namespace;

/** @typedef {(string|!VirtualDOM.VText|!VirtualDOM.VNode|!VirtualDOM.Widget|!VirtualDOM.Thunk|!Array<(!VirtualDOM.VText|!VirtualDOM.VNode|!VirtualDOM.Widget|!VirtualDOM.Thunk)>|!Array<string>)} */
VirtualDOM.VChild;

/**
 * create() calls either document.createElement() or document.createElementNS(),
 * for which the common denominator is Element (not HTMLElement).
 * @param {!VirtualDOM.VText|(!VirtualDOM.VNode|!VirtualDOM.Widget|!VirtualDOM.Thunk)} vnode
 * @param {{document: !Document, warn: boolean}=} opts
 * @return {!Text|!Element}
 */
VirtualDOM.create = function(vnode, opts) {};

/**
 * @param {string} tagName
 * @param {!VirtualDOM.createProperties|(string|!Array<(string|!VirtualDOM.VText|!VirtualDOM.VNode|!VirtualDOM.Widget|!VirtualDOM.Thunk|!Array<(!VirtualDOM.VText|!VirtualDOM.VNode|!VirtualDOM.Widget|!VirtualDOM.Thunk)>|!Array<string>)>)} properties_or_children
 * @param {(string|!Array<(string|!VirtualDOM.VText|!VirtualDOM.VNode|!VirtualDOM.Widget|!VirtualDOM.Thunk|!Array<(!VirtualDOM.VText|!VirtualDOM.VNode|!VirtualDOM.Widget|!VirtualDOM.Thunk)>|!Array<string>)>)=} children
 * @return {!VirtualDOM.VNode}
 */
VirtualDOM.h = function(tagName, properties_or_children, children) {};

/**
 * @param {(!VirtualDOM.VText|!VirtualDOM.VNode|!VirtualDOM.Widget|!VirtualDOM.Thunk)} left
 * @param {(!VirtualDOM.VText|!VirtualDOM.VNode|!VirtualDOM.Widget|!VirtualDOM.Thunk)} right
 * @return {!Array<!VirtualDOM.VPatch>}
 */
VirtualDOM.diff = function(left, right) {};

/**
 * patch() usually just returns rootNode after doing stuff to it, so we want
 * to preserve that type (though it will usually be just Element).
 * @template T
 * @param {T} rootNode
 * @param {!Array<!VirtualDOM.VPatch>} patches
 * @param {?=} renderOptions
 * @return {T}
 */
VirtualDOM.patch = function(rootNode, patches, renderOptions) {};
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "virtual-dom/h"
/** @const */
tsickle_declare_module.virtual_dom_h = {};

/* TODO: ImportEqualsDeclaration in tsickle_declare_module.virtual_dom_h */

/* TODO: ExportAssignment in tsickle_declare_module.virtual_dom_h */
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "virtual-dom/create-element"
/** @const */
tsickle_declare_module.virtual_dom_create_element = {};

/* TODO: ImportEqualsDeclaration in tsickle_declare_module.virtual_dom_create_element */

/* TODO: ExportAssignment in tsickle_declare_module.virtual_dom_create_element */
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "virtual-dom/diff"
/** @const */
tsickle_declare_module.virtual_dom_diff = {};

/* TODO: ImportEqualsDeclaration in tsickle_declare_module.virtual_dom_diff */

/* TODO: ExportAssignment in tsickle_declare_module.virtual_dom_diff */
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "virtual-dom/patch"
/** @const */
tsickle_declare_module.virtual_dom_patch = {};

/* TODO: ImportEqualsDeclaration in tsickle_declare_module.virtual_dom_patch */

/* TODO: ExportAssignment in tsickle_declare_module.virtual_dom_patch */
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "virtual-dom"
/** @const */
tsickle_declare_module.virtual_dom = {};

/* TODO: ExportAssignment in tsickle_declare_module.virtual_dom */
