/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/knockout/index.d.ts:
/**
 * @record
 * @struct
 */
function KnockoutExtensionFunctions() {}

/* TODO: IndexSignature:  */
/**
 * @extends {KnockoutExtensionFunctions}
 * @record
 * @struct
 */
function KnockoutSubscribableFunctions() {}

/**
 * @param {T=} valueToWrite
 * @param {string=} event
 * @return {void}
 */
KnockoutSubscribableFunctions.prototype.notifySubscribers = function(valueToWrite, event) {};
/**
 * @extends {KnockoutExtensionFunctions}
 * @record
 * @struct
 */
function KnockoutComputedFunctions() {}
/**
 * @extends {KnockoutExtensionFunctions}
 * @record
 * @struct
 */
function KnockoutObservableFunctions() {}

/**
 * @param {?} a
 * @param {?} b
 * @return {boolean}
 */
KnockoutObservableFunctions.prototype.equalityComparer = function(a, b) {};
/**
 * @extends {KnockoutExtensionFunctions}
 * @record
 * @struct
 */
function KnockoutObservableArrayFunctions() {}

/**
 * @param {T} searchElement
 * @param {number=} fromIndex
 * @return {number}
 */
KnockoutObservableArrayFunctions.prototype.indexOf = function(searchElement, fromIndex) {};

/**
 * @param {number} start
 * @param {number=} end
 * @return {!Array<T>}
 */
KnockoutObservableArrayFunctions.prototype.slice = function(start, end) {};

/**
 * @param {number} start
 * @param {number=} deleteCount
 * @param {...T} items
 * @return {!Array<T>}
 */
KnockoutObservableArrayFunctions.prototype.splice = function(start, deleteCount, items) {};

/**
 * @return {T}
 */
KnockoutObservableArrayFunctions.prototype.pop = function() {};

/**
 * @param {...T} items
 * @return {void}
 */
KnockoutObservableArrayFunctions.prototype.push = function(items) {};

/**
 * @return {T}
 */
KnockoutObservableArrayFunctions.prototype.shift = function() {};

/**
 * @param {...T} items
 * @return {number}
 */
KnockoutObservableArrayFunctions.prototype.unshift = function(items) {};

/**
 * @return {!KnockoutObservableArray<T>}
 */
KnockoutObservableArrayFunctions.prototype.reverse = function() {};

/**
 * @param {function(T, T): number=} compareFunction
 * @return {!KnockoutObservableArray<T>}
 */
KnockoutObservableArrayFunctions.prototype.sort = function(compareFunction) {};

/**
 * @param {T} oldItem
 * @param {T} newItem
 * @return {void}
 */
KnockoutObservableArrayFunctions.prototype.replace = function(oldItem, newItem) {};

/**
 * @param {T|function(T): boolean} item_or_removeFunction
 * @return {!Array<T>}
 */
KnockoutObservableArrayFunctions.prototype.remove = function(item_or_removeFunction) {};

/**
 * @param {!Array<T>=} items
 * @return {!Array<T>}
 */
KnockoutObservableArrayFunctions.prototype.removeAll = function(items) {};

/**
 * @param {T|function(T): boolean} item_or_destroyFunction
 * @return {void}
 */
KnockoutObservableArrayFunctions.prototype.destroy = function(item_or_destroyFunction) {};

/**
 * @param {!Array<T>=} items
 * @return {void}
 */
KnockoutObservableArrayFunctions.prototype.destroyAll = function(items) {};
/**
 * @record
 * @struct
 */
function KnockoutSubscribableStatic() {}
 /** @type {!KnockoutSubscribableFunctions<?>} */
KnockoutSubscribableStatic.prototype.fn;

/* TODO: ConstructSignature:  */
/**
 * @record
 * @struct
 */
function KnockoutSubscription() {}

/**
 * @return {void}
 */
KnockoutSubscription.prototype.dispose = function() {};
/**
 * @extends {KnockoutSubscribableFunctions}
 * @record
 * @struct
 */
function KnockoutSubscribable() {}

/**
 * @template TEvent
 * @param {function(T): void|function(TEvent): void} callback
 * @param {?=} target
 * @param {string=} event
 * @return {!KnockoutSubscription}
 */
KnockoutSubscribable.prototype.subscribe = function(callback, target, event) {};

/**
 * @param {!Object<string,?>} requestedExtenders
 * @return {!KnockoutSubscribable}
 */
KnockoutSubscribable.prototype.extend = function(requestedExtenders) {};

/**
 * @return {number}
 */
KnockoutSubscribable.prototype.getSubscriptionsCount = function() {};
/**
 * @record
 * @struct
 */
function KnockoutComputedStatic() {}
 /** @type {!KnockoutComputedFunctions<?>} */
KnockoutComputedStatic.prototype.fn;

/* TODO: CallSignature:  */

/* TODO: CallSignature:  */

/* TODO: CallSignature:  */
/**
 * @extends {KnockoutObservable}
 * @extends {KnockoutComputedFunctions}
 * @record
 * @struct
 */
function KnockoutComputed() {}
 /** @type {!KnockoutComputedFunctions<?>} */
KnockoutComputed.prototype.fn;

/**
 * @return {void}
 */
KnockoutComputed.prototype.dispose = function() {};

/**
 * @return {boolean}
 */
KnockoutComputed.prototype.isActive = function() {};

/**
 * @return {number}
 */
KnockoutComputed.prototype.getDependenciesCount = function() {};

/**
 * @param {!Object<string,?>} requestedExtenders
 * @return {!KnockoutComputed}
 */
KnockoutComputed.prototype.extend = function(requestedExtenders) {};
/**
 * @record
 * @struct
 */
function KnockoutObservableArrayStatic() {}
 /** @type {!KnockoutObservableArrayFunctions<?>} */
KnockoutObservableArrayStatic.prototype.fn;

/* TODO: CallSignature:  */
/**
 * @extends {KnockoutObservable}
 * @extends {KnockoutObservableArrayFunctions}
 * @record
 * @struct
 */
function KnockoutObservableArray() {}

/**
 * @template TEvent
 * @param {function(!Array<!KnockoutArrayChange<T>>): void|function(!Array<T>): void|function(TEvent): void} callback
 * @param {?=} target
 * @param {string=} event
 * @return {!KnockoutSubscription}
 */
KnockoutObservableArray.prototype.subscribe = function(callback, target, event) {};

/**
 * @param {!Object<string,?>} requestedExtenders
 * @return {!KnockoutObservableArray}
 */
KnockoutObservableArray.prototype.extend = function(requestedExtenders) {};
/**
 * @record
 * @struct
 */
function KnockoutObservableStatic() {}
 /** @type {!KnockoutObservableFunctions<?>} */
KnockoutObservableStatic.prototype.fn;

/* TODO: CallSignature:  */
/**
 * @extends {KnockoutSubscribable}
 * @extends {KnockoutObservableFunctions}
 * @record
 * @struct
 */
function KnockoutObservable() {}

/* TODO: CallSignature:  */

/* TODO: CallSignature:  */
 /** @type {function(): void} */
KnockoutObservable.prototype.valueHasMutated;
 /** @type {function(): void} */
KnockoutObservable.prototype.valueWillMutate;

/**
 * @return {T}
 */
KnockoutObservable.prototype.peek = function() {};

/**
 * @param {!Object<string,?>} requestedExtenders
 * @return {!KnockoutObservable}
 */
KnockoutObservable.prototype.extend = function(requestedExtenders) {};
/**
 * @record
 * @struct
 */
function KnockoutComputedDefine() {}
 /** @type {!Node} */
KnockoutComputedDefine.prototype.disposeWhenNodeIsRemoved;
 /** @type {?} */
KnockoutComputedDefine.prototype.owner;
 /** @type {boolean} */
KnockoutComputedDefine.prototype.deferEvaluation;
 /** @type {boolean} */
KnockoutComputedDefine.prototype.pure;

/**
 * @return {T}
 */
KnockoutComputedDefine.prototype.read = function() {};

/**
 * @param {T} value
 * @return {void}
 */
KnockoutComputedDefine.prototype.write = function(value) {};

/**
 * @return {boolean}
 */
KnockoutComputedDefine.prototype.disposeWhen = function() {};
/**
 * @record
 * @struct
 */
function KnockoutBindingContext() {}
 /** @type {?} */
KnockoutBindingContext.prototype.$parent;
 /** @type {!Array<?>} */
KnockoutBindingContext.prototype.$parents;
 /** @type {?} */
KnockoutBindingContext.prototype.$root;
 /** @type {?} */
KnockoutBindingContext.prototype.$data;
 /** @type {?} */
KnockoutBindingContext.prototype.$rawData;
 /** @type {!KnockoutObservable<number>} */
KnockoutBindingContext.prototype.$index;
 /** @type {!KnockoutBindingContext} */
KnockoutBindingContext.prototype.$parentContext;
 /** @type {?} */
KnockoutBindingContext.prototype.$component;
 /** @type {!Array<!Node>} */
KnockoutBindingContext.prototype.$componentTemplateNodes;

/**
 * @param {?} properties
 * @return {?}
 */
KnockoutBindingContext.prototype.extend = function(properties) {};

/**
 * @param {?} dataItemOrAccessor
 * @param {?=} dataItemAlias
 * @param {!Function=} extendCallback
 * @return {?}
 */
KnockoutBindingContext.prototype.createChildContext = function(dataItemOrAccessor, dataItemAlias, extendCallback) {};
/**
 * @record
 * @struct
 */
function KnockoutAllBindingsAccessor() {}

/* TODO: CallSignature:  */

/**
 * @param {string} name
 * @return {?}
 */
KnockoutAllBindingsAccessor.prototype.get = function(name) {};

/**
 * @param {string} name
 * @return {boolean}
 */
KnockoutAllBindingsAccessor.prototype.has = function(name) {};
/**
 * @record
 * @struct
 */
function KnockoutBindingHandler() {}
 /** @type {!Array<string>} */
KnockoutBindingHandler.prototype.after;
 /** @type {function(?, function(): ?, !KnockoutAllBindingsAccessor, ?, !KnockoutBindingContext): (void|{controlsDescendantBindings: boolean})} */
KnockoutBindingHandler.prototype.init;
 /** @type {function(?, function(): ?, !KnockoutAllBindingsAccessor, ?, !KnockoutBindingContext): void} */
KnockoutBindingHandler.prototype.update;
 /** @type {?} */
KnockoutBindingHandler.prototype.options;
 /** @type {function(string, string, function(string, string): void): string} */
KnockoutBindingHandler.prototype.preprocess;

/* TODO: IndexSignature:  */
/**
 * @record
 * @struct
 */
function KnockoutBindingHandlers() {}

/* TODO: IndexSignature:  */
 /** @type {!KnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.visible;
 /** @type {!KnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.text;
 /** @type {!KnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.html;
 /** @type {!KnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.css;
 /** @type {!KnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.style;
 /** @type {!KnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.attr;
 /** @type {!KnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.foreach;
 /** @type {!KnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.if;
 /** @type {!KnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.ifnot;
 /** @type {!KnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.with;
 /** @type {!KnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.click;
 /** @type {!KnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.event;
 /** @type {!KnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.submit;
 /** @type {!KnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.enable;
 /** @type {!KnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.disable;
 /** @type {!KnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.value;
 /** @type {!KnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.textInput;
 /** @type {!KnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.hasfocus;
 /** @type {!KnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.checked;
 /** @type {!KnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.options;
 /** @type {!KnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.selectedOptions;
 /** @type {!KnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.uniqueName;
 /** @type {!KnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.template;
 /** @type {!KnockoutBindingHandler} */
KnockoutBindingHandlers.prototype.component;
/**
 * @record
 * @struct
 */
function KnockoutMemoization() {}

/**
 * @param {function(): string} callback
 * @return {string}
 */
KnockoutMemoization.prototype.memoize = function(callback) {};

/**
 * @param {string} memoId
 * @param {!Array<?>} callbackParams
 * @return {boolean}
 */
KnockoutMemoization.prototype.unmemoize = function(memoId, callbackParams) {};

/**
 * @param {?} domNode
 * @param {!Array<?>} extraCallbackParamsArray
 * @return {boolean}
 */
KnockoutMemoization.prototype.unmemoizeDomNodeAndDescendants = function(domNode, extraCallbackParamsArray) {};

/**
 * @param {string} memoText
 * @return {string}
 */
KnockoutMemoization.prototype.parseMemoText = function(memoText) {};
/**
 * @record
 * @struct
 */
function KnockoutVirtualElement() {}
/**
 * @record
 * @struct
 */
function KnockoutVirtualElements() {}
 /** @type {!Object<string,boolean>} */
KnockoutVirtualElements.prototype.allowedBindings;

/**
 * @param {!KnockoutVirtualElement} node
 * @return {void}
 */
KnockoutVirtualElements.prototype.emptyNode = function(node) {};

/**
 * @param {!KnockoutVirtualElement} node
 * @return {!KnockoutVirtualElement}
 */
KnockoutVirtualElements.prototype.firstChild = function(node) {};

/**
 * @param {!KnockoutVirtualElement} container
 * @param {!Node} nodeToInsert
 * @param {!Node} insertAfter
 * @return {void}
 */
KnockoutVirtualElements.prototype.insertAfter = function(container, nodeToInsert, insertAfter) {};

/**
 * @param {!KnockoutVirtualElement} node
 * @return {!Node}
 */
KnockoutVirtualElements.prototype.nextSibling = function(node) {};

/**
 * @param {!KnockoutVirtualElement} node
 * @param {!Node} toInsert
 * @return {void}
 */
KnockoutVirtualElements.prototype.prepend = function(node, toInsert) {};

/**
 * @param {!KnockoutVirtualElement} node
 * @param {?} newChildren
 * @return {void}
 */
KnockoutVirtualElements.prototype.setDomNodeChildren = function(node, newChildren) {};

/**
 * @param {!KnockoutVirtualElement} node
 * @return {!Array<!Node>}
 */
KnockoutVirtualElements.prototype.childNodes = function(node) {};
/**
 * @record
 * @struct
 */
function KnockoutExtenders() {}

/**
 * @param {?} target
 * @param {number} timeout
 * @return {!KnockoutComputed<?>}
 */
KnockoutExtenders.prototype.throttle = function(target, timeout) {};

/**
 * @param {?} target
 * @param {string} notifyWhen
 * @return {?}
 */
KnockoutExtenders.prototype.notify = function(target, notifyWhen) {};

/**
 * @param {?} target
 * @param {number|{timeout: number, method: string}} timeout_or_options
 * @return {?}
 */
KnockoutExtenders.prototype.rateLimit = function(target, timeout_or_options) {};

/**
 * @param {?} target
 * @return {?}
 */
KnockoutExtenders.prototype.trackArrayChanges = function(target) {};
/**
 * @record
 * @struct
 */
function KnockoutUtils() {}
 /** @type {{get: function(!Node, string): ?, set: function(!Node, string, ?): void, getAll: function(!Node, boolean): ?, clear: function(!Node): boolean}} */
KnockoutUtils.prototype.domData;
 /** @type {{addDisposeCallback: function(!Node, !Function): void, removeDisposeCallback: function(!Node, !Function): void, cleanNode: function(!Node): !Node, removeNode: function(!Node): void}} */
KnockoutUtils.prototype.domNodeDisposal;
 /** @type {!Array<?>} */
KnockoutUtils.prototype.fieldsIncludedWithJsonPost;

/**
 * @template T
 * @param {(!Array<T>|!KnockoutObservable<T>)} array
 * @param {T} value
 * @param {T} included
 * @return {void}
 */
KnockoutUtils.prototype.addOrRemoveItem = function(array, value, included) {};

/**
 * @template T
 * @param {!Array<T>} array
 * @param {function(T): boolean} predicate
 * @return {!Array<T>}
 */
KnockoutUtils.prototype.arrayFilter = function(array, predicate) {};

/**
 * @template T
 * @param {!Array<T>} array
 * @param {function(T): boolean} predicate
 * @param {?=} predicateOwner
 * @return {T}
 */
KnockoutUtils.prototype.arrayFirst = function(array, predicate, predicateOwner) {};

/**
 * @template T
 * @param {!Array<T>} array
 * @param {function(T, number): void} action
 * @return {void}
 */
KnockoutUtils.prototype.arrayForEach = function(array, action) {};

/**
 * @template T
 * @param {!Array<T>} array
 * @return {!Array<T>}
 */
KnockoutUtils.prototype.arrayGetDistinctValues = function(array) {};

/**
 * @template T
 * @param {!Array<T>} array
 * @param {T} item
 * @return {number}
 */
KnockoutUtils.prototype.arrayIndexOf = function(array, item) {};

/**
 * @template T, U
 * @param {!Array<T>} array
 * @param {function(T): U} mapping
 * @return {!Array<U>}
 */
KnockoutUtils.prototype.arrayMap = function(array, mapping) {};

/**
 * @template T
 * @param {(!Array<T>|!KnockoutObservableArray<T>)} array
 * @param {!Array<T>} valuesToPush
 * @return {!Array<T>}
 */
KnockoutUtils.prototype.arrayPushAll = function(array, valuesToPush) {};

/**
 * @param {!Array<?>} array
 * @param {?} itemToRemove
 * @return {void}
 */
KnockoutUtils.prototype.arrayRemoveItem = function(array, itemToRemove) {};

/**
 * @template T
 * @param {!Array<T>} a
 * @param {!Array<T>} b
 * @return {!Array<!KnockoutArrayChange<T>>}
 */
KnockoutUtils.prototype.compareArrays = function(a, b) {};

/**
 * @param {!Object} target
 * @param {!Object} source
 * @return {!Object}
 */
KnockoutUtils.prototype.extend = function(target, source) {};

/**
 * @param {?} form
 * @param {string} fieldName
 * @return {!Array<?>}
 */
KnockoutUtils.prototype.getFormFields = function(form, fieldName) {};

/**
 * @param {?} obj
 * @param {function(?, ?): void} action
 * @return {void}
 */
KnockoutUtils.prototype.objectForEach = function(obj, action) {};

/**
 * @param {string} html
 * @return {!Array<?>}
 */
KnockoutUtils.prototype.parseHtmlFragment = function(html) {};

/**
 * @param {string} jsonString
 * @return {?}
 */
KnockoutUtils.prototype.parseJson = function(jsonString) {};

/**
 * @param {?} urlOrForm
 * @param {?} data
 * @param {?} options
 * @return {void}
 */
KnockoutUtils.prototype.postJson = function(urlOrForm, data, options) {};

/**
 * @template T
 * @param {!KnockoutObservable<T>} value
 * @return {T}
 */
KnockoutUtils.prototype.peekObservable = function(value) {};

/**
 * @param {?} min
 * @param {?} max
 * @return {?}
 */
KnockoutUtils.prototype.range = function(min, max) {};

/**
 * @param {?} element
 * @param {?} eventType
 * @param {!Function} handler
 * @return {void}
 */
KnockoutUtils.prototype.registerEventHandler = function(element, eventType, handler) {};

/**
 * @param {!Element} node
 * @param {function(): string|string} html
 * @return {void}
 */
KnockoutUtils.prototype.setHtml = function(node, html) {};

/**
 * @param {?} element
 * @param {(string|!KnockoutObservable<string>)} textContent
 * @return {void}
 */
KnockoutUtils.prototype.setTextContent = function(element, textContent) {};

/**
 * @param {?} data
 * @param {!Function=} replacer
 * @param {string=} space
 * @return {string}
 */
KnockoutUtils.prototype.stringifyJson = function(data, replacer, space) {};

/**
 * @param {?} node
 * @param {string} className
 * @param {boolean} shouldHaveClass
 * @return {void}
 */
KnockoutUtils.prototype.toggleDomNodeCssClass = function(node, className, shouldHaveClass) {};

/**
 * @param {?} element
 * @param {?} eventType
 * @return {void}
 */
KnockoutUtils.prototype.triggerEvent = function(element, eventType) {};

/**
 * @template T
 * @param {(T|!KnockoutObservable<T>)} value
 * @return {T}
 */
KnockoutUtils.prototype.unwrapObservable = function(value) {};
/**
 * @record
 * @struct
 */
function KnockoutArrayChange() {}
 /** @type {string} */
KnockoutArrayChange.prototype.status;
 /** @type {T} */
KnockoutArrayChange.prototype.value;
 /** @type {number} */
KnockoutArrayChange.prototype.index;
 /** @type {number} */
KnockoutArrayChange.prototype.moved;
/**
 * @record
 * @struct
 */
function KnockoutTemplateSourcesDomElement() {}

/**
 * @param {?=} value
 * @return {?|void}
 */
KnockoutTemplateSourcesDomElement.prototype.text = function(value) {};

/**
 * @param {string} key
 * @param {?=} value
 * @return {?}
 */
KnockoutTemplateSourcesDomElement.prototype.data = function(key, value) {};
/**
 * @extends {KnockoutTemplateSourcesDomElement}
 * @record
 * @struct
 */
function KnockoutTemplateAnonymous() {}

/**
 * @param {?=} value
 * @return {?|void}
 */
KnockoutTemplateAnonymous.prototype.nodes = function(value) {};
/**
 * @record
 * @struct
 */
function KnockoutTemplateSources() {}
 /** @type {function(new: (!KnockoutTemplateSourcesDomElement), !Element): ?} */
KnockoutTemplateSources.prototype.domElement;
 /** @type {function(new: (!KnockoutTemplateAnonymous), !Element): ?} */
KnockoutTemplateSources.prototype.anonymousTemplate;
/**
 * @record
 * @struct
 */
function KnockoutNativeTemplateEngine() {}

/**
 * @param {!Object} templateSource
 * @param {!KnockoutBindingContext=} bindingContext
 * @param {!Object=} options
 * @return {!Array<?>}
 */
KnockoutNativeTemplateEngine.prototype.renderTemplateSource = function(templateSource, bindingContext, options) {};
/**
 * @extends {KnockoutNativeTemplateEngine}
 * @record
 * @struct
 */
function KnockoutTemplateEngine() {}

/**
 * @param {string} script
 * @return {string}
 */
KnockoutTemplateEngine.prototype.createJavaScriptEvaluatorBlock = function(script) {};

/**
 * @param {?} template
 * @param {!Document=} templateDocument
 * @return {?}
 */
KnockoutTemplateEngine.prototype.makeTemplateSource = function(template, templateDocument) {};

/**
 * @param {?} template
 * @param {!KnockoutBindingContext} bindingContext
 * @param {!Object} options
 * @param {!Document} templateDocument
 * @return {?}
 */
KnockoutTemplateEngine.prototype.renderTemplate = function(template, bindingContext, options, templateDocument) {};

/**
 * @param {?} template
 * @param {!Document} templateDocument
 * @return {boolean}
 */
KnockoutTemplateEngine.prototype.isTemplateRewritten = function(template, templateDocument) {};

/**
 * @param {?} template
 * @param {!Function} rewriterCallback
 * @param {!Document} templateDocument
 * @return {void}
 */
KnockoutTemplateEngine.prototype.rewriteTemplate = function(template, rewriterCallback, templateDocument) {};
/**
 * @record
 * @struct
 */
function KnockoutTasks() {}
 /** @type {function(!Function): ?} */
KnockoutTasks.prototype.scheduler;

/**
 * @param {!Function} task
 * @return {number}
 */
KnockoutTasks.prototype.schedule = function(task) {};

/**
 * @param {number} handle
 * @return {void}
 */
KnockoutTasks.prototype.cancel = function(handle) {};

/**
 * @return {void}
 */
KnockoutTasks.prototype.runEarly = function() {};
/**
 * @record
 * @struct
 */
function KnockoutStatic() {}
 /** @type {!KnockoutUtils} */
KnockoutStatic.prototype.utils;
 /** @type {!KnockoutMemoization} */
KnockoutStatic.prototype.memoization;
 /** @type {!KnockoutBindingHandlers} */
KnockoutStatic.prototype.bindingHandlers;
 /** @type {!KnockoutVirtualElements} */
KnockoutStatic.prototype.virtualElements;
 /** @type {!KnockoutExtenders} */
KnockoutStatic.prototype.extenders;
 /** @type {!KnockoutSubscribableStatic} */
KnockoutStatic.prototype.subscribable;
 /** @type {!KnockoutObservableStatic} */
KnockoutStatic.prototype.observable;
 /** @type {!KnockoutComputedStatic} */
KnockoutStatic.prototype.computed;
 /** @type {!KnockoutObservableArrayStatic} */
KnockoutStatic.prototype.observableArray;
 /** @type {!KnockoutComputedContext} */
KnockoutStatic.prototype.computedContext;
 /** @type {!KnockoutTemplateSources} */
KnockoutStatic.prototype.templateSources;
 /** @type {function(new: (!KnockoutTemplateEngine)): ?} */
KnockoutStatic.prototype.templateEngine;
 /** @type {{ensureTemplateIsRewritten: ?, memoizeBindingAttributeSyntax: function(string, !KnockoutTemplateEngine): ?, applyMemoizedBindingsToNextSibling: function(?, string): string}} */
KnockoutStatic.prototype.templateRewriting;
 /** @type {function(new: (!KnockoutNativeTemplateEngine)): ?} */
KnockoutStatic.prototype.nativeTemplateEngine;
 /** @type {{prototype: !KnockoutTemplateEngine, renderTemplateSource: function(!Object, !KnockoutBindingContext, !Object): !Array<!Node>, createJavaScriptEvaluatorBlock: function(string): string, addTemplate: function(string, string): void}} */
KnockoutStatic.prototype.jqueryTmplTemplateEngine;
 /** @type {{bindingRewriteValidators: !Array<?>, twoWayBindings: ?, parseObjectLiteral: function(string): !Array<?>, writeValueToProperty: function(?, !KnockoutAllBindingsAccessor, string, ?, boolean): void}} */
KnockoutStatic.prototype.expressionRewriting;
 /** @type {function(new: (!KnockoutBindingProvider)): ?} */
KnockoutStatic.prototype.bindingProvider;
 /** @type {{readValue: function(!HTMLElement): ?, writeValue: function(!HTMLElement, ?): void}} */
KnockoutStatic.prototype.selectExtensions;
 /** @type {!KnockoutComponents} */
KnockoutStatic.prototype.components;
 /** @type {{deferUpdates: boolean, useOnlyNativeEvents: boolean}} */
KnockoutStatic.prototype.options;
 /** @type {!KnockoutTasks} */
KnockoutStatic.prototype.tasks;
 /** @type {function(!Error): void} */
KnockoutStatic.prototype.onError;

/**
 * @param {string} handler
 * @return {!KnockoutBindingHandler}
 */
KnockoutStatic.prototype.getBindingHandler = function(handler) {};

/**
 * @param {?=} viewModelOrBindingContext
 * @param {?=} rootNode
 * @return {void}
 */
KnockoutStatic.prototype.applyBindings = function(viewModelOrBindingContext, rootNode) {};

/**
 * @param {?} viewModelOrBindingContext
 * @param {?} rootNode
 * @return {void}
 */
KnockoutStatic.prototype.applyBindingsToDescendants = function(viewModelOrBindingContext, rootNode) {};

/**
 * @param {!Node} node
 * @param {function(!KnockoutBindingContext, !Node): !Object|!Object} bindings
 * @param {!KnockoutBindingContext|?} bindingContext_or_viewModel
 * @return {void}
 */
KnockoutStatic.prototype.applyBindingAccessorsToNode = function(node, bindings, bindingContext_or_viewModel) {};

/**
 * @param {!Node} node
 * @param {?} bindings
 * @param {?=} viewModelOrBindingContext
 * @return {?}
 */
KnockoutStatic.prototype.applyBindingsToNode = function(node, bindings, viewModelOrBindingContext) {};

/**
 * @template T
 * @param {function(): T|!KnockoutComputedDefine<T>} evaluatorFunction_or_options
 * @param {?=} context
 * @return {!KnockoutComputed<T>}
 */
KnockoutStatic.prototype.pureComputed = function(evaluatorFunction_or_options, context) {};

/**
 * @param {?} node
 * @return {?}
 */
KnockoutStatic.prototype.contextFor = function(node) {};

/**
 * @param {?} instance
 * @return {boolean}
 */
KnockoutStatic.prototype.isSubscribable = function(instance) {};

/**
 * @param {?} viewModel
 * @param {!Function=} replacer
 * @param {?=} space
 * @return {string}
 */
KnockoutStatic.prototype.toJSON = function(viewModel, replacer, space) {};

/**
 * @param {?} viewModel
 * @return {?}
 */
KnockoutStatic.prototype.toJS = function(viewModel) {};

/**
 * @param {?} instance
 * @return {boolean}
 */
KnockoutStatic.prototype.isObservable = function(instance) {};

/**
 * @param {?} instance
 * @return {boolean}
 */
KnockoutStatic.prototype.isWriteableObservable = function(instance) {};

/**
 * @param {?} instance
 * @return {boolean}
 */
KnockoutStatic.prototype.isComputed = function(instance) {};

/**
 * @param {?} node
 * @return {?}
 */
KnockoutStatic.prototype.dataFor = function(node) {};

/**
 * @param {!Node} node
 * @return {void}
 */
KnockoutStatic.prototype.removeNode = function(node) {};

/**
 * @param {!Node} node
 * @return {!Node}
 */
KnockoutStatic.prototype.cleanNode = function(node) {};

/**
 * @param {!Function|string|?} template
 * @param {?|!KnockoutBindingContext} viewModel_or_dataOrBindingContext
 * @param {?|!Object=} options
 * @param {?|!Node|!Array<!Node>=} target_or_targetNodeOrNodeArray
 * @param {?|string=} renderMode
 * @return {?}
 */
KnockoutStatic.prototype.renderTemplate = function(template, viewModel_or_dataOrBindingContext, options, target_or_targetNodeOrNodeArray, renderMode) {};

/**
 * @template T
 * @param {(T|!KnockoutObservable<T>)} value
 * @return {T}
 */
KnockoutStatic.prototype.unwrap = function(value) {};

/**
 * @param {!KnockoutNativeTemplateEngine} templateEngine
 * @return {void}
 */
KnockoutStatic.prototype.setTemplateEngine = function(templateEngine) {};

/**
 * @param {!Function|?} template
 * @param {!Array<?>|!KnockoutObservable<?>} arrayOrObservableArray
 * @param {!Object} options
 * @param {!Node} targetNode
 * @param {!KnockoutBindingContext} parentBindingContext
 * @return {?}
 */
KnockoutStatic.prototype.renderTemplateForEach = function(template, arrayOrObservableArray, options, targetNode, parentBindingContext) {};

/**
 * @template T
 * @param {function(): T} callback
 * @return {T}
 */
KnockoutStatic.prototype.ignoreDependencies = function(callback) {};
/**
 * @record
 * @struct
 */
function KnockoutBindingProvider() {}

/**
 * @param {!Node} node
 * @return {boolean}
 */
KnockoutBindingProvider.prototype.nodeHasBindings = function(node) {};

/**
 * @param {!Node} node
 * @param {!KnockoutBindingContext} bindingContext
 * @return {!Object}
 */
KnockoutBindingProvider.prototype.getBindings = function(node, bindingContext) {};

/**
 * @param {!Node} node
 * @param {!KnockoutBindingContext} bindingContext
 * @return {!Object<string,string>}
 */
KnockoutBindingProvider.prototype.getBindingAccessors = function(node, bindingContext) {};
/**
 * @record
 * @struct
 */
function KnockoutComputedContext() {}
 /** @type {function(): boolean} */
KnockoutComputedContext.prototype.isInitial;
 /** @type {boolean} */
KnockoutComputedContext.prototype.isSleeping;

/**
 * @return {number}
 */
KnockoutComputedContext.prototype.getDependenciesCount = function() {};
/** @const */
var KnockoutComponentTypes = {};
/**
 * @record
 * @struct
 */
KnockoutComponentTypes.Config = function() {};
 /** @type {(!KnockoutComponentTypes.ViewModelFunction|!KnockoutComponentTypes.ViewModelSharedInstance|!KnockoutComponentTypes.ViewModelFactoryFunction|!KnockoutComponentTypes.AMDModule)} */
KnockoutComponentTypes.Config.prototype.viewModel;
 /** @type {(string|!Array<!Node>|!KnockoutComponentTypes.AMDModule|!DocumentFragment|!KnockoutComponentTypes.TemplateElement)} */
KnockoutComponentTypes.Config.prototype.template;
 /** @type {boolean} */
KnockoutComponentTypes.Config.prototype.synchronous;
/**
 * @record
 * @struct
 */
KnockoutComponentTypes.ComponentConfig = function() {};
 /** @type {(!KnockoutComponentTypes.ViewModelFunction|!KnockoutComponentTypes.ViewModelSharedInstance|!KnockoutComponentTypes.ViewModelFactoryFunction|!KnockoutComponentTypes.AMDModule)} */
KnockoutComponentTypes.ComponentConfig.prototype.viewModel;
 /** @type {?} */
KnockoutComponentTypes.ComponentConfig.prototype.template;
 /** @type {?} */
KnockoutComponentTypes.ComponentConfig.prototype.createViewModel;
/**
 * @record
 * @struct
 */
KnockoutComponentTypes.EmptyConfig = function() {};
/**
 * @record
 * @struct
 */
KnockoutComponentTypes.AMDModule = function() {};
 /** @type {string} */
KnockoutComponentTypes.AMDModule.prototype.require;
/**
 * @record
 * @struct
 */
KnockoutComponentTypes.ViewModelFunction = function() {};

/* TODO: CallSignature: KnockoutComponentTypes */
/**
 * @record
 * @struct
 */
KnockoutComponentTypes.ViewModelSharedInstance = function() {};
 /** @type {?} */
KnockoutComponentTypes.ViewModelSharedInstance.prototype.instance;
/**
 * @record
 * @struct
 */
KnockoutComponentTypes.ViewModelFactoryFunction = function() {};
 /** @type {function(?, !KnockoutComponentTypes.ComponentInfo): ?} */
KnockoutComponentTypes.ViewModelFactoryFunction.prototype.createViewModel;
/**
 * @record
 * @struct
 */
KnockoutComponentTypes.ComponentInfo = function() {};
 /** @type {!Node} */
KnockoutComponentTypes.ComponentInfo.prototype.element;
 /** @type {!Array<!Node>} */
KnockoutComponentTypes.ComponentInfo.prototype.templateNodes;
/**
 * @record
 * @struct
 */
KnockoutComponentTypes.TemplateElement = function() {};
 /** @type {(string|!Node)} */
KnockoutComponentTypes.TemplateElement.prototype.element;
/**
 * @record
 * @struct
 */
KnockoutComponentTypes.Loader = function() {};
 /** @type {boolean} */
KnockoutComponentTypes.Loader.prototype.suppressLoaderExceptions;

/**
 * @param {string} componentName
 * @param {function(!KnockoutComponentTypes.ComponentConfig): void} callback
 * @return {void}
 */
KnockoutComponentTypes.Loader.prototype.getConfig = function(componentName, callback) {};

/**
 * @param {string} componentName
 * @param {!KnockoutComponentTypes.ComponentConfig} config
 * @param {function(!KnockoutComponentTypes.Definition): void} callback
 * @return {void}
 */
KnockoutComponentTypes.Loader.prototype.loadComponent = function(componentName, config, callback) {};

/**
 * @param {string} componentName
 * @param {?} templateConfig
 * @param {function(!Array<!Node>): void} callback
 * @return {void}
 */
KnockoutComponentTypes.Loader.prototype.loadTemplate = function(componentName, templateConfig, callback) {};

/**
 * @param {string} componentName
 * @param {?} viewModelConfig
 * @param {function(?): void} callback
 * @return {void}
 */
KnockoutComponentTypes.Loader.prototype.loadViewModel = function(componentName, viewModelConfig, callback) {};
/**
 * @record
 * @struct
 */
KnockoutComponentTypes.Definition = function() {};
 /** @type {!Array<!Node>} */
KnockoutComponentTypes.Definition.prototype.template;

/**
 * @param {?} params
 * @param {{element: !Node}} options
 * @return {?}
 */
KnockoutComponentTypes.Definition.prototype.createViewModel = function(params, options) {};
/**
 * @record
 * @struct
 */
function KnockoutComponents() {}
 /** @type {!KnockoutComponentTypes.Loader} */
KnockoutComponents.prototype.defaultLoader;
 /** @type {!Array<!KnockoutComponentTypes.Loader>} */
KnockoutComponents.prototype.loaders;

/**
 * @param {string} componentName
 * @param {(!KnockoutComponentTypes.Config|!KnockoutComponentTypes.EmptyConfig)} config
 * @return {void}
 */
KnockoutComponents.prototype.register = function(componentName, config) {};

/**
 * @param {string} componentName
 * @return {boolean}
 */
KnockoutComponents.prototype.isRegistered = function(componentName) {};

/**
 * @param {string} componentName
 * @return {void}
 */
KnockoutComponents.prototype.unregister = function(componentName) {};

/**
 * @param {string} componentName
 * @param {function(!KnockoutComponentTypes.Definition): void} callback
 * @return {void}
 */
KnockoutComponents.prototype.get = function(componentName, callback) {};

/**
 * @param {string} componentName
 * @return {void}
 */
KnockoutComponents.prototype.clearCachedDefinition = function(componentName) {};

/**
 * @param {!Node} node
 * @return {string}
 */
KnockoutComponents.prototype.getComponentNameForNode = function(node) {};
 /** @type {!KnockoutStatic} */
var ko;
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "knockout"
/** @const */
tsickle_declare_module.knockout = {};

/* TODO: ExportAssignment in tsickle_declare_module.knockout */
