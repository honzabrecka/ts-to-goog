/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/chai-xml/index.d.ts:
 /** @type {!ChaiXml.XmlAssertion} */
Chai.Assertion.prototype.xml;
/** @const */
var ChaiXml = {};
/**
 * @extends {Chai.Assertion}
 * @record
 * @struct
 */
ChaiXml.XmlAssertion = function() {};
 /** @type {!ChaiXml.XmlAssertion} */
ChaiXml.XmlAssertion.prototype.not;
 /** @type {!ChaiXml.XmlAssertion} */
ChaiXml.XmlAssertion.prototype.to;
 /** @type {!ChaiXml.XmlAssertion} */
ChaiXml.XmlAssertion.prototype.be;
 /** @type {!ChaiXml.XmlAssertion} */
ChaiXml.XmlAssertion.prototype.been;
 /** @type {!ChaiXml.XmlAssertion} */
ChaiXml.XmlAssertion.prototype.is;
 /** @type {!ChaiXml.XmlAssertion} */
ChaiXml.XmlAssertion.prototype.that;
 /** @type {!ChaiXml.XmlAssertion} */
ChaiXml.XmlAssertion.prototype.which;
 /** @type {!ChaiXml.XmlAssertion} */
ChaiXml.XmlAssertion.prototype.and;
 /** @type {!ChaiXml.XmlAssertion} */
ChaiXml.XmlAssertion.prototype.has;
 /** @type {!ChaiXml.XmlAssertion} */
ChaiXml.XmlAssertion.prototype.have;
 /** @type {!ChaiXml.XmlAssertion} */
ChaiXml.XmlAssertion.prototype.with;
 /** @type {!ChaiXml.XmlAssertion} */
ChaiXml.XmlAssertion.prototype.at;
 /** @type {!ChaiXml.XmlAssertion} */
ChaiXml.XmlAssertion.prototype.of;
 /** @type {!ChaiXml.XmlAssertion} */
ChaiXml.XmlAssertion.prototype.same;

/**
 * @return {!ChaiXml.XmlAssertion}
 */
ChaiXml.XmlAssertion.prototype.valid = function() {};

/**
 * @param {?} chai
 * @param {?} utils
 * @return {void}
 */
function chaiXml(chai, utils) {}

/* TODO: ExportAssignment in  */
