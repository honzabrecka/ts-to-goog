/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/wrench/index.d.ts:

/**
 * @param {string} baseDir
 * @return {!Array<string>}
 */
function readdirSyncRecursive(baseDir) {}

/**
 * @param {string} path
 * @param {boolean=} failSilent
 * @return {void}
 */
function rmdirSyncRecursive(path, failSilent) {}

/**
 * @param {string} sourceDir
 * @param {string} newDirLocation
 * @param {{preserve: boolean}=} opts
 * @return {void}
 */
function copyDirSyncRecursive(sourceDir, newDirLocation, opts) {}

/**
 * @param {string} sourceDir
 * @param {number} filemode
 * @return {void}
 */
function chmodSyncRecursive(sourceDir, filemode) {}

/**
 * @param {string} sourceDir
 * @param {number} uid
 * @param {number} gid
 * @return {void}
 */
function chownSyncRecursive(sourceDir, uid, gid) {}

/**
 * @param {string} path
 * @param {number} mode
 * @return {void}
 */
function mkdirSyncRecursive(path, mode) {}

/**
 * @param {string} baseDir
 * @param {function(!Error, !Array<string>): void} fn
 * @return {void}
 */
function readdirRecursive(baseDir, fn) {}

/**
 * @param {string} path
 * @param {function(!Error): void} fn
 * @return {void}
 */
function rmdirRecursive(path, fn) {}

/**
 * @param {string} srcDir
 * @param {string} newDir
 * @param {function(!Error): void} fn
 * @return {void}
 */
function copyDirRecursive(srcDir, newDir, fn) {}

/**
 * @constructor
 * @struct
 * @param {string} filename
 * @param {number=} bufferSize
 */
function LineReader(filename, bufferSize) {}

/**
 * @param {number} position
 * @return {number}
 */
LineReader.prototype.getBufferAndSetCurrentPosition = function(position) {};

/**
 * @return {boolean}
 */
LineReader.prototype.hasNextLine = function() {};

/**
 * @return {string}
 */
LineReader.prototype.getNextLine = function() {};
