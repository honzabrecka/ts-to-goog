/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/iconv-lite/index.d.ts:

/* TODO: ImportEqualsDeclaration in  */
/**
 * @record
 * @struct
 */
function Options() {}
 /** @type {boolean} */
Options.prototype.stripBOM;
 /** @type {boolean} */
Options.prototype.addBOM;
 /** @type {string} */
Options.prototype.defaultEncoding;

/**
 * @param {?} buffer
 * @param {string} encoding
 * @param {?=} options
 * @return {string}
 */
function decode(buffer, encoding, options) {}

/**
 * @param {string} source
 * @param {string} encoding
 * @param {?=} options
 * @return {?}
 */
function encode(source, encoding, options) {}

/**
 * @param {string} encoding
 * @return {boolean}
 */
function encodingExists(encoding) {}
/**
 * @constructor
 * @struct
 */
function DecodeStream() {}

/**
 * @param {?} cb
 * @return {?}
 */
DecodeStream.prototype.collect = function(cb) {};
/**
 * @constructor
 * @struct
 */
function EncodeStream() {}

/**
 * @param {?} cb
 * @return {?}
 */
EncodeStream.prototype.collect = function(cb) {};

/**
 * @param {string} encoding
 * @param {?=} options
 * @return {?}
 */
function decodeStream(encoding, options) {}

/**
 * @param {string} encoding
 * @param {?=} options
 * @return {?}
 */
function encodeStream(encoding, options) {}

/**
 * @return {void}
 */
function extendNodeEncodings() {}

/**
 * @return {void}
 */
function undoExtendNodeEncodings() {}
