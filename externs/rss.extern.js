/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/rss/index.d.ts:
 /** @type {!NodeRSS.RSSFactory} */
var factory;

/* TODO: ExportAssignment in  */
/** @const */
var NodeRSS = {};
/**
 * @record
 * @struct
 */
NodeRSS.FeedOptions = function() {};
 /** @type {string} */
NodeRSS.FeedOptions.prototype.title;
 /** @type {string} */
NodeRSS.FeedOptions.prototype.description;
 /** @type {string} */
NodeRSS.FeedOptions.prototype.generator;
 /** @type {string} */
NodeRSS.FeedOptions.prototype.feed_url;
 /** @type {string} */
NodeRSS.FeedOptions.prototype.site_url;
 /** @type {string} */
NodeRSS.FeedOptions.prototype.image_url;
 /** @type {string} */
NodeRSS.FeedOptions.prototype.docs;
 /** @type {string} */
NodeRSS.FeedOptions.prototype.managingEditor;
 /** @type {string} */
NodeRSS.FeedOptions.prototype.webMaster;
 /** @type {string} */
NodeRSS.FeedOptions.prototype.copyright;
 /** @type {string} */
NodeRSS.FeedOptions.prototype.language;
 /** @type {!Array<string>} */
NodeRSS.FeedOptions.prototype.categories;
 /** @type {(string|!Date)} */
NodeRSS.FeedOptions.prototype.pubDate;
 /** @type {number} */
NodeRSS.FeedOptions.prototype.ttl;
 /** @type {string} */
NodeRSS.FeedOptions.prototype.hub;
 /** @type {!Object} */
NodeRSS.FeedOptions.prototype.custom_namespaces;
 /** @type {!Array<?>} */
NodeRSS.FeedOptions.prototype.custom_elements;
/**
 * @record
 * @struct
 */
NodeRSS.EnclosureObject = function() {};
 /** @type {string} */
NodeRSS.EnclosureObject.prototype.url;
 /** @type {string} */
NodeRSS.EnclosureObject.prototype.file;
 /** @type {number} */
NodeRSS.EnclosureObject.prototype.size;
 /** @type {string} */
NodeRSS.EnclosureObject.prototype.type;
/**
 * @record
 * @struct
 */
NodeRSS.ItemOptions = function() {};
 /** @type {string} */
NodeRSS.ItemOptions.prototype.title;
 /** @type {string} */
NodeRSS.ItemOptions.prototype.description;
 /** @type {string} */
NodeRSS.ItemOptions.prototype.url;
 /** @type {string} */
NodeRSS.ItemOptions.prototype.guid;
 /** @type {!Array<string>} */
NodeRSS.ItemOptions.prototype.categories;
 /** @type {string} */
NodeRSS.ItemOptions.prototype.author;
 /** @type {(string|!Date)} */
NodeRSS.ItemOptions.prototype.date;
 /** @type {number} */
NodeRSS.ItemOptions.prototype.lat;
 /** @type {number} */
NodeRSS.ItemOptions.prototype.long;
 /** @type {!Array<?>} */
NodeRSS.ItemOptions.prototype.custom_elements;
 /** @type {!NodeRSS.EnclosureObject} */
NodeRSS.ItemOptions.prototype.enclosure;
/**
 * @record
 * @struct
 */
NodeRSS.XmlOptions = function() {};
 /** @type {(string|boolean)} */
NodeRSS.XmlOptions.prototype.indent;
/**
 * @record
 * @struct
 */
NodeRSS.RSS = function() {};

/**
 * Add an item to a feed. An item can be used for a blog
 * entry, project update, log entry, etc.
 * @param {!NodeRSS.ItemOptions} itemOptions
 * @return {!NodeRSS.RSS}
 */
NodeRSS.RSS.prototype.item = function(itemOptions) {};

/**
 * Generate XML and return as a string for this feed.
 * Generate XML and return as a string for this feed.
 * 
 * option to specify the tab character to use.
 * @param {!NodeRSS.XmlOptions=} xmlOptions
 * @return {string}
 */
NodeRSS.RSS.prototype.xml = function(xmlOptions) {};
/**
 * @record
 * @struct
 */
NodeRSS.RSSFactory = function() {};

/* TODO: ConstructSignature: NodeRSS */
