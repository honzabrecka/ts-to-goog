/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/pouchdb-mapreduce/index.d.ts:

/** @typedef {string} */
PouchDB.BuiltInReducers;

/** @typedef {function(Content, function(?, (Content|Result)): void): void} */
PouchDB.Map;

/** @typedef {function(?, (!Array<Reduction>|!Array<Content>), boolean): (Reduction|!Array<Reduction>)} */
PouchDB.Reducer;
/**
 * @record
 * @struct
 */
PouchDB.Filter = function() {};
 /** @type {function(Content, function(?, (Content|Reduction)): void): void} */
PouchDB.Filter.prototype.map;
 /** @type {(string|function(?, (!Array<Reduction>|!Array<Content>), boolean): (Reduction|!Array<Reduction>))} */
PouchDB.Filter.prototype.reduce;
/** @const */
PouchDB.Query = {};
/**
 * @record
 * @struct
 */
PouchDB.Query.Options = function() {};
 /** @type {(boolean|string|function(?, (!Array<Reduction>|!Array<Content>), boolean): (Reduction|!Array<Reduction>))} */
PouchDB.Query.Options.prototype.reduce;
 /** @type {boolean} */
PouchDB.Query.Options.prototype.include_docs;
 /** @type {boolean} */
PouchDB.Query.Options.prototype.conflicts;
 /** @type {boolean} */
PouchDB.Query.Options.prototype.attachments;
 /** @type {boolean} */
PouchDB.Query.Options.prototype.binary;
 /** @type {?} */
PouchDB.Query.Options.prototype.startkey;
 /** @type {?} */
PouchDB.Query.Options.prototype.endkey;
 /** @type {boolean} */
PouchDB.Query.Options.prototype.inclusive_end;
 /** @type {number} */
PouchDB.Query.Options.prototype.limit;
 /** @type {number} */
PouchDB.Query.Options.prototype.skip;
 /** @type {boolean} */
PouchDB.Query.Options.prototype.descending;
 /** @type {?} */
PouchDB.Query.Options.prototype.key;
 /** @type {!Array<?>} */
PouchDB.Query.Options.prototype.keys;
 /** @type {boolean} */
PouchDB.Query.Options.prototype.group;
 /** @type {number} */
PouchDB.Query.Options.prototype.group_level;
 /** @type {string} */
PouchDB.Query.Options.prototype.stale;
/**
 * @record
 * @struct
 */
PouchDB.Query.Response = function() {};
 /** @type {number} */
PouchDB.Query.Response.prototype.total_rows;
 /** @type {number} */
PouchDB.Query.Response.prototype.offset;
 /** @type {!Array<{id: ?, key: ?, value: ?, doc: ?}>} */
PouchDB.Query.Response.prototype.rows;

/**
 * Cleans up any stale map/reduce indexes.
 * 
 * As design docs are deleted or modified, their associated index
 * files(in CouchDB) or companion databases (in local PouchDBs) continue
 * to take up space on disk. viewCleanup() removes these unnecessary
 * index files.
 * Cleans up any stale map/reduce indexes.
 * 
 * As design docs are deleted or modified, their associated index
 * files(in CouchDB) or companion databases (in local PouchDBs) continue
 * to take up space on disk. viewCleanup() removes these unnecessary
 * index files.
 * @param {function(!PouchDB.Core.Error, !PouchDB.Core.BasicResponse): void=} callback
 * @return {void|!Promise<!PouchDB.Core.BasicResponse>}
 */
PouchDB.Database.prototype.viewCleanup = function(callback) {};

/**
 * Invoke a map/reduce function, which allows you to perform more complex queries
 * on PouchDB than what you get with allDocs().
 * Invoke a map/reduce function, which allows you to perform more complex queries
 * on PouchDB than what you get with allDocs().
 * Invoke a map/reduce function, which allows you to perform more complex queries
 * on PouchDB than what you get with allDocs().
 * @template Result, Model
 * @param {(string|function(Model, function(?, (Result|Model)): void): void|!PouchDB.Filter<Model, Result>)} fun
 * @param {!PouchDB.Query.Options<Model, Result>|function(!PouchDB.Core.Error, !PouchDB.Query.Response<Result>): void=} opts_or_callback
 * @param {function(!PouchDB.Core.Error, !PouchDB.Query.Response<Result>): void=} callback
 * @return {void|!Promise<!PouchDB.Query.Response<Result>>}
 */
PouchDB.Database.prototype.query = function(fun, opts_or_callback, callback) {};
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "pouchdb-mapreduce"
/** @const */
tsickle_declare_module.pouchdb_mapreduce = {};
 /** @type {string} */
tsickle_declare_module.pouchdb_mapreduce.plugin;

/* TODO: ExportAssignment in tsickle_declare_module.pouchdb_mapreduce */
