/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/glidejs/index.d.ts:
/**
 * @record
 * @struct
 */
function JQuery() {}

/**
 * Glide is responsive and touch-friendly jQuery slider.
 * Based on CSS3 transitions with fallback to older broswers.
 * It's simple, lightweight and fast. Designed to slide,
 * no less, no more.
 * @param {!JQueryGlide.IGlideOptions=} options
 * @return {!JQuery}
 */
JQuery.prototype.glide = function(options) {};
/** @const */
var JQueryGlide = {};
/**
 * @record
 * @struct
 */
JQueryGlide.IGlideOptions = function() {};
 /** @type {?} */
JQueryGlide.IGlideOptions.prototype.autoplay;
 /** @type {boolean} */
JQueryGlide.IGlideOptions.prototype.hoverpause;
 /** @type {boolean} */
JQueryGlide.IGlideOptions.prototype.circular;
 /** @type {number} */
JQueryGlide.IGlideOptions.prototype.animationDuration;
 /** @type {string} */
JQueryGlide.IGlideOptions.prototype.animationTimingFunc;
 /** @type {?} */
JQueryGlide.IGlideOptions.prototype.arrows;
 /** @type {string} */
JQueryGlide.IGlideOptions.prototype.arrowsWrapperClass;
 /** @type {string} */
JQueryGlide.IGlideOptions.prototype.arrowMainClass;
 /** @type {string} */
JQueryGlide.IGlideOptions.prototype.arrowRightClass;
 /** @type {string} */
JQueryGlide.IGlideOptions.prototype.arrowRightText;
 /** @type {string} */
JQueryGlide.IGlideOptions.prototype.arrowLeftClass;
 /** @type {string} */
JQueryGlide.IGlideOptions.prototype.arrowLeftText;
 /** @type {?} */
JQueryGlide.IGlideOptions.prototype.navigation;
 /** @type {boolean} */
JQueryGlide.IGlideOptions.prototype.navigationCenter;
 /** @type {string} */
JQueryGlide.IGlideOptions.prototype.navigationClass;
 /** @type {string} */
JQueryGlide.IGlideOptions.prototype.navigationItemClass;
 /** @type {string} */
JQueryGlide.IGlideOptions.prototype.navigationCurrentItemClass;
 /** @type {boolean} */
JQueryGlide.IGlideOptions.prototype.keyboard;
 /** @type {?} */
JQueryGlide.IGlideOptions.prototype.touchDistance;
 /** @type {!Function} */
JQueryGlide.IGlideOptions.prototype.beforeInit;
 /** @type {!Function} */
JQueryGlide.IGlideOptions.prototype.afterInit;
 /** @type {!Function} */
JQueryGlide.IGlideOptions.prototype.beforeTransition;
 /** @type {!Function} */
JQueryGlide.IGlideOptions.prototype.afterTransition;
/**
 * @record
 * @struct
 */
JQueryGlide.IGlideApi = function() {};

/**
 * Returning current slide number
 * @return {number}
 */
JQueryGlide.IGlideApi.prototype.current = function() {};

/**
 * Rebuild and recalculate dimensions of slider elements
 * @return {void}
 */
JQueryGlide.IGlideApi.prototype.reinit = function() {};

/**
 * Destroy and cleanup slider
 * @return {void}
 */
JQueryGlide.IGlideApi.prototype.destroy = function() {};

/**
 * Starting autoplay
 * @return {void}
 */
JQueryGlide.IGlideApi.prototype.play = function() {};

/**
 * Stopping autoplay
 * @return {void}
 */
JQueryGlide.IGlideApi.prototype.pause = function() {};

/**
 * Slide one forward
 * @param {!Function} callback
 * @return {void}
 */
JQueryGlide.IGlideApi.prototype.next = function(callback) {};

/**
 * Slide one backward
 * @param {!Function} callback
 * @return {void}
 */
JQueryGlide.IGlideApi.prototype.prev = function(callback) {};

/**
 * Jump to current slide
 * @param {number} distance
 * @param {!Function} callback
 * @return {void}
 */
JQueryGlide.IGlideApi.prototype.jump = function(distance, callback) {};

/**
 * Append navigation to specifed target (eq. 'body', '.class', '#id')
 * @param {string} target
 * @return {void}
 */
JQueryGlide.IGlideApi.prototype.nav = function(target) {};

/**
 * Append arrows to specifed target (eq. 'body', '.class', '#id')
 * @param {string} target
 * @return {void}
 */
JQueryGlide.IGlideApi.prototype.arrows = function(target) {};
