/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/ladda/index.d.ts:
/**
 * @record
 * @struct
 */
function ILaddaButton() {}

/**
 * @return {!ILaddaButton}
 */
ILaddaButton.prototype.start = function() {};

/**
 * @param {number} delay
 * @return {!ILaddaButton}
 */
ILaddaButton.prototype.startAfter = function(delay) {};

/**
 * @return {!ILaddaButton}
 */
ILaddaButton.prototype.stop = function() {};

/**
 * @return {!ILaddaButton}
 */
ILaddaButton.prototype.toggle = function() {};

/**
 * @param {number} progress
 * @return {!ILaddaButton}
 */
ILaddaButton.prototype.setProgress = function(progress) {};

/**
 * @return {!ILaddaButton}
 */
ILaddaButton.prototype.enable = function() {};

/**
 * @return {!ILaddaButton}
 */
ILaddaButton.prototype.disable = function() {};

/**
 * @return {boolean}
 */
ILaddaButton.prototype.isLoading = function() {};

/**
 * @return {void}
 */
ILaddaButton.prototype.remove = function() {};
/**
 * @record
 * @struct
 */
function ILaddaOptions() {}
 /** @type {number} */
ILaddaOptions.prototype.timeout;
 /** @type {function(!ILaddaButton): void} */
ILaddaOptions.prototype.callback;
/**
 * @record
 * @struct
 */
function ILadda() {}

/**
 * @param {!HTMLElement|string} target_or_cssSelector
 * @param {!ILaddaOptions=} options
 * @return {void}
 */
ILadda.prototype.bind = function(target_or_cssSelector, options) {};

/**
 * @param {!Element} button
 * @return {!ILaddaButton}
 */
ILadda.prototype.create = function(button) {};

/**
 * @return {void}
 */
ILadda.prototype.stopAll = function() {};
 /** @type {!ILadda} */
var Ladda;
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "ladda"
/** @const */
tsickle_declare_module.ladda = {};

/* TODO: ExportAssignment in tsickle_declare_module.ladda */

/**
 * Creates a new instance of ladda for the selected button
 * The action controls or checks the state of the ladda button.  
 * Possible actions are 'start', 'stop', 'toggle', 'stopAll'
 * Possible check 'isLoading'
 * When the action is 'setProgress' you can pass a number between
 * 0 and 1 for the options to represent the progress.  For example .5 would be 50%
 * When the action is 'bind' you can pass an object with a property
 * called timeout with the timeout value in milliseconds. 
 * For example { timeout: 2000 }
 * @param {string=} action
 * @param {?=} options
 * @return {?<!HTMLElement>}
 */
JQuery.prototype.ladda = function(action, options) {};

/**
 * @param {string} action
 * @return {?<!HTMLElement>}
 */
JQueryStatic.prototype.ladda = function(action) {};
