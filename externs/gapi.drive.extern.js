/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/gapi.drive/index.d.ts:
/** @const */
gapi.client.drive = {};
 /** @type {{get: function(!gapi.client.drive.GetParameters): !gapi.client.HttpRequest<!gapi.client.drive.FileResource>, patch: function(!gapi.client.drive.PatchParameters): !gapi.client.HttpRequest<!gapi.client.drive.FileResource>, copy: function(!gapi.client.drive.CopyParameters): !gapi.client.HttpRequest<!gapi.client.drive.FileResource>, delete: function(!gapi.client.drive.DeleteParameters): !gapi.client.HttpRequest<?>, emptyTrash: function(): !gapi.client.HttpRequest<?>, export: function(!gapi.client.drive.ExportParameters): !gapi.client.HttpRequest<!gapi.client.drive.FileResource>, generateIds: function(!gapi.client.drive.GenerateIdsParameters): !gapi.client.HttpRequest<!gapi.client.drive.IdsResource>, insert: function(!gapi.client.drive.InsertParameters): !gapi.client.HttpRequest<!gapi.client.drive.FileResource>, list: function(!gapi.client.drive.ListParameters): !gapi.client.HttpRequest<!gapi.client.drive.FileListResource>, touch: function(!gapi.client.drive.TouchParameters): !gapi.client.HttpRequest<!gapi.client.drive.FileResource>, trash: function(!gapi.client.drive.TrashParameters): !gapi.client.HttpRequest<!gapi.client.drive.FileResource>, untrash: function(!gapi.client.drive.UntrashParameters): !gapi.client.HttpRequest<!gapi.client.drive.FileResource>, watch: function(!gapi.client.drive.WatchParameters): !gapi.client.HttpRequest<!gapi.client.drive.ChannelResource>}} */
gapi.client.drive.files;
/**
 * @record
 * @struct
 */
gapi.client.drive.GetParameters = function() {};
 /** @type {string} */
gapi.client.drive.GetParameters.prototype.fileId;
 /** @type {boolean} */
gapi.client.drive.GetParameters.prototype.acknowledgeAbuse;
 /** @type {string} */
gapi.client.drive.GetParameters.prototype.projection;
 /** @type {string} */
gapi.client.drive.GetParameters.prototype.revisionId;
 /** @type {boolean} */
gapi.client.drive.GetParameters.prototype.supportsTeamDrives;
 /** @type {boolean} */
gapi.client.drive.GetParameters.prototype.updateViewedDate;
/**
 * @record
 * @struct
 */
gapi.client.drive.PatchParameters = function() {};
 /** @type {string} */
gapi.client.drive.PatchParameters.prototype.fileId;
 /** @type {!gapi.client.drive.FileResource} */
gapi.client.drive.PatchParameters.prototype.resource;
 /** @type {boolean} */
gapi.client.drive.PatchParameters.prototype.convert;
 /** @type {string} */
gapi.client.drive.PatchParameters.prototype.modifiedDateBehavior;
 /** @type {boolean} */
gapi.client.drive.PatchParameters.prototype.newRevision;
 /** @type {boolean} */
gapi.client.drive.PatchParameters.prototype.ocr;
 /** @type {string} */
gapi.client.drive.PatchParameters.prototype.ocrLanguage;
 /** @type {boolean} */
gapi.client.drive.PatchParameters.prototype.pinned;
 /** @type {string} */
gapi.client.drive.PatchParameters.prototype.removeParents;
 /** @type {boolean} */
gapi.client.drive.PatchParameters.prototype.setModifiedDate;
 /** @type {boolean} */
gapi.client.drive.PatchParameters.prototype.supportsTeamDrives;
 /** @type {string} */
gapi.client.drive.PatchParameters.prototype.timedTextLanguage;
 /** @type {string} */
gapi.client.drive.PatchParameters.prototype.timedTextTrackName;
 /** @type {boolean} */
gapi.client.drive.PatchParameters.prototype.updateViewedData;
 /** @type {boolean} */
gapi.client.drive.PatchParameters.prototype.useContentAsIndexableText;
/**
 * @record
 * @struct
 */
gapi.client.drive.CopyParameters = function() {};
 /** @type {string} */
gapi.client.drive.CopyParameters.prototype.fileId;
 /** @type {!gapi.client.drive.FileResource} */
gapi.client.drive.CopyParameters.prototype.resource;
 /** @type {boolean} */
gapi.client.drive.CopyParameters.prototype.convert;
 /** @type {boolean} */
gapi.client.drive.CopyParameters.prototype.ocr;
 /** @type {string} */
gapi.client.drive.CopyParameters.prototype.ocrLanguage;
 /** @type {boolean} */
gapi.client.drive.CopyParameters.prototype.pinned;
 /** @type {boolean} */
gapi.client.drive.CopyParameters.prototype.supportsTeamDrives;
 /** @type {string} */
gapi.client.drive.CopyParameters.prototype.timedTextLanguage;
 /** @type {string} */
gapi.client.drive.CopyParameters.prototype.timedTextTrackName;
 /** @type {string} */
gapi.client.drive.CopyParameters.prototype.visibility;
/**
 * @record
 * @struct
 */
gapi.client.drive.DeleteParameters = function() {};
 /** @type {string} */
gapi.client.drive.DeleteParameters.prototype.fileId;
 /** @type {boolean} */
gapi.client.drive.DeleteParameters.prototype.supportsTeamDrives;
/**
 * @record
 * @struct
 */
gapi.client.drive.ExportParameters = function() {};
 /** @type {string} */
gapi.client.drive.ExportParameters.prototype.fileId;
 /** @type {string} */
gapi.client.drive.ExportParameters.prototype.mimeType;
/**
 * @record
 * @struct
 */
gapi.client.drive.GenerateIdsParameters = function() {};
 /** @type {number} */
gapi.client.drive.GenerateIdsParameters.prototype.maxResults;
 /** @type {string} */
gapi.client.drive.GenerateIdsParameters.prototype.space;
/**
 * @record
 * @struct
 */
gapi.client.drive.InsertParameters = function() {};
 /** @type {string} */
gapi.client.drive.InsertParameters.prototype.uploadType;
 /** @type {boolean} */
gapi.client.drive.InsertParameters.prototype.convert;
 /** @type {boolean} */
gapi.client.drive.InsertParameters.prototype.ocr;
 /** @type {string} */
gapi.client.drive.InsertParameters.prototype.ocrLanguage;
 /** @type {boolean} */
gapi.client.drive.InsertParameters.prototype.pinned;
 /** @type {boolean} */
gapi.client.drive.InsertParameters.prototype.supportsTeamDrives;
 /** @type {string} */
gapi.client.drive.InsertParameters.prototype.timedTextLanguage;
 /** @type {string} */
gapi.client.drive.InsertParameters.prototype.timedTextTrackName;
 /** @type {boolean} */
gapi.client.drive.InsertParameters.prototype.usecontentAsIndexableText;
 /** @type {string} */
gapi.client.drive.InsertParameters.prototype.visibility;
/**
 * @record
 * @struct
 */
gapi.client.drive.ListParameters = function() {};
 /** @type {string} */
gapi.client.drive.ListParameters.prototype.corpora;
 /** @type {string} */
gapi.client.drive.ListParameters.prototype.corpus;
 /** @type {boolean} */
gapi.client.drive.ListParameters.prototype.includeTeamDriveItems;
 /** @type {number} */
gapi.client.drive.ListParameters.prototype.maxResults;
 /** @type {string} */
gapi.client.drive.ListParameters.prototype.orderBy;
 /** @type {string} */
gapi.client.drive.ListParameters.prototype.pageToken;
 /** @type {string} */
gapi.client.drive.ListParameters.prototype.projection;
 /** @type {string} */
gapi.client.drive.ListParameters.prototype.q;
 /** @type {string} */
gapi.client.drive.ListParameters.prototype.spaces;
 /** @type {boolean} */
gapi.client.drive.ListParameters.prototype.supportsTeamDrives;
 /** @type {string} */
gapi.client.drive.ListParameters.prototype.teamDriveId;
/**
 * @record
 * @struct
 */
gapi.client.drive.TouchParameters = function() {};
 /** @type {string} */
gapi.client.drive.TouchParameters.prototype.fileId;
 /** @type {boolean} */
gapi.client.drive.TouchParameters.prototype.supportsTeamDrives;
/**
 * @record
 * @struct
 */
gapi.client.drive.TrashParameters = function() {};
 /** @type {string} */
gapi.client.drive.TrashParameters.prototype.fileId;
 /** @type {boolean} */
gapi.client.drive.TrashParameters.prototype.supportsTeamDrives;
/**
 * @record
 * @struct
 */
gapi.client.drive.UntrashParameters = function() {};
 /** @type {string} */
gapi.client.drive.UntrashParameters.prototype.fileId;
 /** @type {boolean} */
gapi.client.drive.UntrashParameters.prototype.supportsTeamDrives;
/**
 * @record
 * @struct
 */
gapi.client.drive.WatchParameters = function() {};
 /** @type {string} */
gapi.client.drive.WatchParameters.prototype.fileId;
 /** @type {!gapi.client.drive.WatchResource} */
gapi.client.drive.WatchParameters.prototype.resource;
 /** @type {string} */
gapi.client.drive.WatchParameters.prototype.revisionId;
 /** @type {boolean} */
gapi.client.drive.WatchParameters.prototype.supportsTeamDrives;
/**
 * @record
 * @struct
 */
gapi.client.drive.FileResource = function() {};
 /** @type {string} */
gapi.client.drive.FileResource.prototype.kind;
 /** @type {string} */
gapi.client.drive.FileResource.prototype.id;
 /** @type {string} */
gapi.client.drive.FileResource.prototype.etag;
 /** @type {string} */
gapi.client.drive.FileResource.prototype.selfLink;
 /** @type {string} */
gapi.client.drive.FileResource.prototype.webContentLink;
 /** @type {string} */
gapi.client.drive.FileResource.prototype.webViewLink;
 /** @type {string} */
gapi.client.drive.FileResource.prototype.alternateLink;
 /** @type {string} */
gapi.client.drive.FileResource.prototype.embedLink;
 /** @type {string} */
gapi.client.drive.FileResource.prototype.defaultOpenWithLink;
 /** @type {string} */
gapi.client.drive.FileResource.prototype.iconLink;
 /** @type {boolean} */
gapi.client.drive.FileResource.prototype.hasThumbnail;
 /** @type {string} */
gapi.client.drive.FileResource.prototype.thumbnailLink;
 /** @type {{image: !Uint8Array, mimType: string}} */
gapi.client.drive.FileResource.prototype.thumbnail;
 /** @type {string} */
gapi.client.drive.FileResource.prototype.title;
 /** @type {string} */
gapi.client.drive.FileResource.prototype.mimeType;
 /** @type {string} */
gapi.client.drive.FileResource.prototype.description;
 /** @type {{starred: boolean, hidden: boolean, trashed: boolean, restricted: boolean, viewed: boolean, modified: boolean}} */
gapi.client.drive.FileResource.prototype.labels;
 /** @type {!Date} */
gapi.client.drive.FileResource.prototype.createdDate;
 /** @type {!Date} */
gapi.client.drive.FileResource.prototype.modifiedDate;
 /** @type {!Date} */
gapi.client.drive.FileResource.prototype.modifiedByMeDate;
 /** @type {!Date} */
gapi.client.drive.FileResource.prototype.lastViewedByMeDate;
 /** @type {!Date} */
gapi.client.drive.FileResource.prototype.markedViewedByMeDate;
 /** @type {!Date} */
gapi.client.drive.FileResource.prototype.sharedWithMeDate;
 /** @type {number} */
gapi.client.drive.FileResource.prototype.version;
 /** @type {{kind: string, displayName: string, picture: {url: string}, isAuthenticatedUser: boolean, permissionId: string, emailAddress: string}} */
gapi.client.drive.FileResource.prototype.sharingUser;
 /** @type {!Array<!gapi.client.drive.ParentResource>} */
gapi.client.drive.FileResource.prototype.parents;
 /** @type {string} */
gapi.client.drive.FileResource.prototype.downloadUrl;
 /** @type {{text: string}} */
gapi.client.drive.FileResource.prototype.indexableText;
 /** @type {!gapi.client.drive.PermissionResource} */
gapi.client.drive.FileResource.prototype.userPermission;
 /** @type {!Array<!gapi.client.drive.PermissionResource>} */
gapi.client.drive.FileResource.prototype.permissions;
 /** @type {boolean} */
gapi.client.drive.FileResource.prototype.hasAugmentedPermissions;
 /** @type {string} */
gapi.client.drive.FileResource.prototype.originalFilename;
 /** @type {string} */
gapi.client.drive.FileResource.prototype.fileExtension;
 /** @type {string} */
gapi.client.drive.FileResource.prototype.fullFileExtension;
 /** @type {string} */
gapi.client.drive.FileResource.prototype.md5Checksum;
 /** @type {number} */
gapi.client.drive.FileResource.prototype.fileSize;
 /** @type {number} */
gapi.client.drive.FileResource.prototype.quotaBytesUsed;
 /** @type {!Array<string>} */
gapi.client.drive.FileResource.prototype.ownerNames;
 /** @type {!Array<{kind: string, displayName: string, picture: {url: string}, isAuthenticatedUser: boolean, permissionId: string, emailAddress: string}>} */
gapi.client.drive.FileResource.prototype.owners;
 /** @type {string} */
gapi.client.drive.FileResource.prototype.teamDriveId;
 /** @type {string} */
gapi.client.drive.FileResource.prototype.lastModifyingUserName;
 /** @type {{kind: string, displayName: string, picture: {url: string}, isAuthenticatedUser: boolean, permissionId: string, emailAddress: string}} */
gapi.client.drive.FileResource.prototype.lastModifyingUser;
 /** @type {boolean} */
gapi.client.drive.FileResource.prototype.ownedByMe;
 /** @type {{canAddChildren: boolean, canChangeRestrictedDownload: boolean, canComment: boolean, canCopy: boolean, canDelete: boolean, canDownload: boolean, canEdit: boolean, canListChildren: boolean, canMoveItemIntoTeamDrive: boolean, canMoveTeamDriveItem: boolean, canReadRevisions: boolean, canReadTeamDrive: boolean, canRemoveChildren: boolean, canRename: boolean, canShare: boolean, canTrash: boolean, canUntrash: boolean}} */
gapi.client.drive.FileResource.prototype.capabilities;
 /** @type {boolean} */
gapi.client.drive.FileResource.prototype.editable;
 /** @type {boolean} */
gapi.client.drive.FileResource.prototype.canComment;
 /** @type {boolean} */
gapi.client.drive.FileResource.prototype.canReadRevisions;
 /** @type {boolean} */
gapi.client.drive.FileResource.prototype.shareable;
 /** @type {boolean} */
gapi.client.drive.FileResource.prototype.copyable;
 /** @type {boolean} */
gapi.client.drive.FileResource.prototype.writersCanShare;
 /** @type {boolean} */
gapi.client.drive.FileResource.prototype.shared;
 /** @type {boolean} */
gapi.client.drive.FileResource.prototype.explicitlyTrashed;
 /** @type {{kind: string, displayName: string, picture: {url: string}, isAuthenticatedUser: boolean, permissionId: string, emailAddress: string}} */
gapi.client.drive.FileResource.prototype.trashingUser;
 /** @type {!Date} */
gapi.client.drive.FileResource.prototype.trashedDate;
 /** @type {boolean} */
gapi.client.drive.FileResource.prototype.appDataContents;
 /** @type {string} */
gapi.client.drive.FileResource.prototype.headRevisionId;
 /** @type {!Array<!gapi.client.drive.PropertiesResource>} */
gapi.client.drive.FileResource.prototype.properties;
 /** @type {string} */
gapi.client.drive.FileResource.prototype.folderColorRgb;
 /** @type {{width: number, height: number, rotation: number, location: {latitude: number, longitude: number, altitude: number}, date: string, cameraMake: string, cameraModel: string, exposureTime: number, aperture: number, flashUsed: boolean, focalLength: number, isoSpeed: number, meteringMode: string, sensor: string, exposureMode: string, colorSpace: string, whiteBalance: string, exposureBias: number, maxApertureValue: number, subjectDistance: number, lens: string}} */
gapi.client.drive.FileResource.prototype.imageMediaMetadata;
 /** @type {{width: number, height: number, durationMillis: number}} */
gapi.client.drive.FileResource.prototype.videoMediaMetadata;
 /** @type {!Array<string>} */
gapi.client.drive.FileResource.prototype.spaces;
 /** @type {boolean} */
gapi.client.drive.FileResource.prototype.isAppAuthorized;
/**
 * @record
 * @struct
 */
gapi.client.drive.FileListResource = function() {};
 /** @type {string} */
gapi.client.drive.FileListResource.prototype.kind;
 /** @type {string} */
gapi.client.drive.FileListResource.prototype.etag;
 /** @type {string} */
gapi.client.drive.FileListResource.prototype.selfLink;
 /** @type {string} */
gapi.client.drive.FileListResource.prototype.nextPageToken;
 /** @type {string} */
gapi.client.drive.FileListResource.prototype.nextLink;
 /** @type {boolean} */
gapi.client.drive.FileListResource.prototype.incompleteSearch;
 /** @type {!Array<!gapi.client.drive.FileResource>} */
gapi.client.drive.FileListResource.prototype.items;
/**
 * @record
 * @struct
 */
gapi.client.drive.ParentResource = function() {};
 /** @type {string} */
gapi.client.drive.ParentResource.prototype.kind;
 /** @type {string} */
gapi.client.drive.ParentResource.prototype.id;
 /** @type {string} */
gapi.client.drive.ParentResource.prototype.selfLink;
 /** @type {string} */
gapi.client.drive.ParentResource.prototype.parentLink;
 /** @type {boolean} */
gapi.client.drive.ParentResource.prototype.isRoot;
/**
 * @record
 * @struct
 */
gapi.client.drive.PermissionResource = function() {};
 /** @type {string} */
gapi.client.drive.PermissionResource.prototype.kind;
 /** @type {string} */
gapi.client.drive.PermissionResource.prototype.etag;
 /** @type {string} */
gapi.client.drive.PermissionResource.prototype.id;
 /** @type {string} */
gapi.client.drive.PermissionResource.prototype.selfLink;
 /** @type {string} */
gapi.client.drive.PermissionResource.prototype.name;
 /** @type {string} */
gapi.client.drive.PermissionResource.prototype.emailAddress;
 /** @type {string} */
gapi.client.drive.PermissionResource.prototype.domain;
 /** @type {string} */
gapi.client.drive.PermissionResource.prototype.role;
 /** @type {!Array<string>} */
gapi.client.drive.PermissionResource.prototype.additionalRoles;
 /** @type {string} */
gapi.client.drive.PermissionResource.prototype.type;
 /** @type {string} */
gapi.client.drive.PermissionResource.prototype.value;
 /** @type {string} */
gapi.client.drive.PermissionResource.prototype.authKey;
 /** @type {boolean} */
gapi.client.drive.PermissionResource.prototype.withLink;
 /** @type {string} */
gapi.client.drive.PermissionResource.prototype.photoLink;
 /** @type {!Date} */
gapi.client.drive.PermissionResource.prototype.expirationDate;
 /** @type {!Array<{teamDrivePermissionType: string, role: string, additionalRoles: !Array<string>, inheritedFrom: string, inherited: boolean}>} */
gapi.client.drive.PermissionResource.prototype.teamDrivePermissionDetails;
 /** @type {boolean} */
gapi.client.drive.PermissionResource.prototype.deleted;
/**
 * @record
 * @struct
 */
gapi.client.drive.PropertiesResource = function() {};
 /** @type {string} */
gapi.client.drive.PropertiesResource.prototype.kind;
 /** @type {string} */
gapi.client.drive.PropertiesResource.prototype.etag;
 /** @type {string} */
gapi.client.drive.PropertiesResource.prototype.selfLink;
 /** @type {string} */
gapi.client.drive.PropertiesResource.prototype.key;
 /** @type {string} */
gapi.client.drive.PropertiesResource.prototype.visibility;
 /** @type {string} */
gapi.client.drive.PropertiesResource.prototype.value;
/**
 * @record
 * @struct
 */
gapi.client.drive.WatchResource = function() {};
 /** @type {string} */
gapi.client.drive.WatchResource.prototype.id;
 /** @type {number} */
gapi.client.drive.WatchResource.prototype.expiration;
 /** @type {string} */
gapi.client.drive.WatchResource.prototype.token;
 /** @type {string} */
gapi.client.drive.WatchResource.prototype.type;
 /** @type {string} */
gapi.client.drive.WatchResource.prototype.address;
/**
 * @record
 * @struct
 */
gapi.client.drive.ChannelResource = function() {};
 /** @type {string} */
gapi.client.drive.ChannelResource.prototype.kind;
 /** @type {string} */
gapi.client.drive.ChannelResource.prototype.id;
 /** @type {string} */
gapi.client.drive.ChannelResource.prototype.resourceId;
 /** @type {string} */
gapi.client.drive.ChannelResource.prototype.resourceUri;
 /** @type {string} */
gapi.client.drive.ChannelResource.prototype.token;
 /** @type {number} */
gapi.client.drive.ChannelResource.prototype.expiration;
/**
 * @record
 * @struct
 */
gapi.client.drive.IdsResource = function() {};
 /** @type {string} */
gapi.client.drive.IdsResource.prototype.kind;
 /** @type {string} */
gapi.client.drive.IdsResource.prototype.space;
 /** @type {!Array<string>} */
gapi.client.drive.IdsResource.prototype.ids;
