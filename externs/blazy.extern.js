/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/blazy/index.d.ts:
 /** @type {?} */
var Blazy;

/* TODO: ConstructSignature:  */
/**
 * @record
 * @struct
 */
function BlazyOptions() {}
 /** @type {!Array<!Breakpoint>} */
BlazyOptions.prototype.breakpoints;
 /** @type {string} */
BlazyOptions.prototype.container;
 /** @type {function((!Element|!HTMLElement), string): void} */
BlazyOptions.prototype.error;
 /** @type {string} */
BlazyOptions.prototype.errorClass;
 /** @type {boolean} */
BlazyOptions.prototype.loadInvisible;
 /** @type {number} */
BlazyOptions.prototype.offset;
 /** @type {number} */
BlazyOptions.prototype.saveViewportOffsetDelay;
 /** @type {string} */
BlazyOptions.prototype.selector;
 /** @type {string} */
BlazyOptions.prototype.separator;
 /** @type {string} */
BlazyOptions.prototype.src;
 /** @type {function((!Element|!HTMLElement)): void} */
BlazyOptions.prototype.success;
 /** @type {string} */
BlazyOptions.prototype.successClass;
 /** @type {number} */
BlazyOptions.prototype.validateDelay;
/**
 * @record
 * @struct
 */
function BlazyInstance() {}

/**
 * Revalidates document for visible images. Useful if you add images with scripting or ajax.
 * @return {void}
 */
BlazyInstance.prototype.revalidate = function() {};

/**
 * Forces the given element(s) to load if not collapsed. If you also want to load a collapsed/hidden elements you can add true as the second parameter.
 * You can pass a single element or a list of elements. Tested with getElementById, getElementsByClassName, querySelectorAll, querySelector and jQuery selector.
 * @param {(!Element|!HTMLElement|!Array<!Element>|!Array<!HTMLElement>|!NodeList)} elements
 * @param {boolean} force
 * @return {void}
 */
BlazyInstance.prototype.load = function(elements, force) {};

/**
 * Unbind events and resets image array.
 * @return {void}
 */
BlazyInstance.prototype.destroy = function() {};
/**
 * @record
 * @struct
 */
function Breakpoint() {}
 /** @type {number} */
Breakpoint.prototype.width;
 /** @type {string} */
Breakpoint.prototype.src;
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "blazy"
/** @const */
tsickle_declare_module.blazy = {};

/* TODO: ExportAssignment in tsickle_declare_module.blazy */
