/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/plotly.js/index.d.ts:

/* TODO: NamespaceExportDeclaration in  */
/**
 * @record
 * @struct
 */
function StaticPlots() {}

/**
 * @param {(string|!HTMLElement)} root
 * @return {void}
 */
StaticPlots.prototype.resize = function(root) {};
 /** @type {?} */
var Plots;
/**
 * @record
 * @struct
 */
function Point() {}
 /** @type {number} */
Point.prototype.x;
 /** @type {number} */
Point.prototype.y;
 /** @type {number} */
Point.prototype.z;
/**
 * @record
 * @struct
 */
function PlotlyHTMLElement() {}

/**
 * @param {string} event
 * @param {?} callback
 * @return {void}
 */
PlotlyHTMLElement.prototype.on = function(event, callback) {};
/**
 * @record
 * @struct
 */
function ToImgopts() {}
 /** @type {string} */
ToImgopts.prototype.format;
 /** @type {number} */
ToImgopts.prototype.width;
 /** @type {number} */
ToImgopts.prototype.height;
/**
 * @record
 * @struct
 */
function DownloadImgopts() {}
 /** @type {string} */
DownloadImgopts.prototype.format;
 /** @type {number} */
DownloadImgopts.prototype.width;
 /** @type {number} */
DownloadImgopts.prototype.height;
 /** @type {string} */
DownloadImgopts.prototype.filename;

/** @typedef {(string|!HTMLElement)} */
var Root;

/**
 * @param {(string|!HTMLElement)} root
 * @param {!Array<?>} data
 * @param {?=} layout
 * @param {?=} config
 * @return {!Promise<?>}
 */
function newPlot(root, data, layout, config) {}

/**
 * @param {(string|!HTMLElement)} root
 * @param {!Array<?>} data
 * @param {?=} layout
 * @param {?=} config
 * @return {!Promise<?>}
 */
function plot(root, data, layout, config) {}

/**
 * @param {(string|!HTMLElement)} root
 * @param {?} layout
 * @return {!Promise<?>}
 */
function relayout(root, layout) {}

/**
 * @param {(string|!HTMLElement)} root
 * @return {!Promise<?>}
 */
function redraw(root) {}

/**
 * @param {(string|!HTMLElement)} root
 * @return {void}
 */
function purge(root) {}
 /** @type {?} */
var d3;

/**
 * @param {(string|!HTMLElement)} root
 * @param {?} aobj
 * @param {(number|!Array<number>)=} traces
 * @return {!Promise<?>}
 */
function restyle(root, aobj, traces) {}

/**
 * @param {(string|!HTMLElement)} root
 * @param {?} traceUpdate
 * @param {?} layoutUpdate
 * @param {(number|!Array<number>)=} traces
 * @return {!Promise<?>}
 */
function update(root, traceUpdate, layoutUpdate, traces) {}

/**
 * @param {(string|!HTMLElement)} root
 * @param {(?|!Array<?>)} traces
 * @param {(number|!Array<number>)=} newIndices
 * @return {!Promise<?>}
 */
function addTraces(root, traces, newIndices) {}

/**
 * @param {(string|!HTMLElement)} root
 * @param {(number|!Array<number>)} indices
 * @return {!Promise<?>}
 */
function deleteTraces(root, indices) {}

/**
 * @param {(string|!HTMLElement)} root
 * @param {(number|!Array<number>)} currentIndices
 * @param {(number|!Array<number>)=} newIndices
 * @return {!Promise<?>}
 */
function moveTraces(root, currentIndices, newIndices) {}

/**
 * @param {(string|!HTMLElement)} root
 * @param {(?|!Array<?>)} update
 * @param {(number|!Array<number>)} indices
 * @return {!Promise<?>}
 */
function extendTraces(root, update, indices) {}

/**
 * @param {(string|!HTMLElement)} root
 * @param {(?|!Array<?>)} update
 * @param {(number|!Array<number>)} indices
 * @return {!Promise<?>}
 */
function prependTraces(root, update, indices) {}

/**
 * @param {(string|!HTMLElement)} root
 * @param {?} opts
 * @return {!Promise<string>}
 */
function toImage(root, opts) {}

/**
 * @param {(string|!HTMLElement)} root
 * @param {?} opts
 * @return {!Promise<string>}
 */
function downloadImage(root, opts) {}
/**
 * @record
 * @struct
 */
function Layout() {}
 /** @type {string} */
Layout.prototype.title;
 /** @type {boolean} */
Layout.prototype.autosize;
 /** @type {boolean} */
Layout.prototype.showlegend;
 /** @type {?} */
Layout.prototype.xaxis;
 /** @type {?} */
Layout.prototype.yaxis;
 /** @type {?} */
Layout.prototype.margin;
 /** @type {number} */
Layout.prototype.height;
 /** @type {number} */
Layout.prototype.width;
 /** @type {(boolean|string)} */
Layout.prototype.hovermode;

/* TODO: PropertySignature: 'xaxis.range' */

/* TODO: PropertySignature: 'xaxis.range[0]' */

/* TODO: PropertySignature: 'xaxis.range[1]' */

/* TODO: PropertySignature: 'yaxis.range' */

/* TODO: PropertySignature: 'yaxis.range[0]' */

/* TODO: PropertySignature: 'yaxis.range[1]' */

/* TODO: PropertySignature: 'yaxis.type' */

/* TODO: PropertySignature: 'xaxis.type' */

/* TODO: PropertySignature: 'xaxis.autorange' */

/* TODO: PropertySignature: 'yaxis.autorange' */
 /** @type {string} */
Layout.prototype.dragmode;
 /** @type {!Array<?>} */
Layout.prototype.shapes;
 /** @type {?} */
Layout.prototype.legend;
/**
 * @record
 * @struct
 */
function Legend() {}
 /** @type {string} */
Legend.prototype.traceorder;
 /** @type {number} */
Legend.prototype.x;
 /** @type {number} */
Legend.prototype.y;
 /** @type {?} */
Legend.prototype.font;
 /** @type {string} */
Legend.prototype.bgcolor;
 /** @type {string} */
Legend.prototype.bordercolor;
 /** @type {number} */
Legend.prototype.borderwidth;
 /** @type {string} */
Legend.prototype.orientation;
 /** @type {number} */
Legend.prototype.tracegroupgap;
 /** @type {string} */
Legend.prototype.xanchor;
 /** @type {string} */
Legend.prototype.yanchor;

/** @typedef {string} */
var AxisType;
/**
 * @record
 * @struct
 */
function Axis() {}
 /** @type {string} */
Axis.prototype.title;
 /** @type {boolean} */
Axis.prototype.showgrid;
 /** @type {boolean} */
Axis.prototype.fixedrange;
 /** @type {string} */
Axis.prototype.rangemode;
 /** @type {string} */
Axis.prototype.type;
 /** @type {string} */
Axis.prototype.tickformat;
 /** @type {string} */
Axis.prototype.hoverformat;
 /** @type {?} */
Axis.prototype.rangeslider;
 /** @type {?} */
Axis.prototype.rangeselector;
 /** @type {!Array<?>} */
Axis.prototype.range;
 /** @type {boolean} */
Axis.prototype.showticklabels;
 /** @type {boolean} */
Axis.prototype.autotick;
 /** @type {boolean} */
Axis.prototype.zeroline;
 /** @type {(boolean|string)} */
Axis.prototype.autorange;
/**
 * @record
 * @struct
 */
function ShapeLine() {}
 /** @type {string} */
ShapeLine.prototype.color;
 /** @type {number} */
ShapeLine.prototype.width;
 /** @type {string} */
ShapeLine.prototype.dash;
/**
 * @record
 * @struct
 */
function Shape() {}
 /** @type {boolean} */
Shape.prototype.visible;
 /** @type {string} */
Shape.prototype.layer;
 /** @type {string} */
Shape.prototype.type;
 /** @type {string} */
Shape.prototype.path;
 /** @type {string} */
Shape.prototype.xref;
 /** @type {string} */
Shape.prototype.yref;
 /** @type {(string|number|!Date)} */
Shape.prototype.x0;
 /** @type {(string|number|!Date)} */
Shape.prototype.y0;
 /** @type {(string|number|!Date)} */
Shape.prototype.x1;
 /** @type {(string|number|!Date)} */
Shape.prototype.y1;
 /** @type {string} */
Shape.prototype.fillcolor;
 /** @type {number} */
Shape.prototype.opacity;
 /** @type {?} */
Shape.prototype.line;
/**
 * @record
 * @struct
 */
function Margin() {}
 /** @type {number} */
Margin.prototype.t;
 /** @type {number} */
Margin.prototype.b;
 /** @type {number} */
Margin.prototype.l;
 /** @type {number} */
Margin.prototype.r;

/** @typedef {string} */
var ModeBarButtons;

/** @typedef {(string|number|!Date)} */
var Datum;

/** @typedef {string} */
var Dash;

/** @typedef {?} */
var Data;

/** @typedef {(string|!Array<string>|!Array<!Array<string>>)} */
var Color;
/**
 * @record
 * @struct
 */
function ScatterData() {}
 /** @type {string} */
ScatterData.prototype.type;
 /** @type {(!Array<(string|number|!Date)>|!Array<!Array<(string|number|!Date)>>)} */
ScatterData.prototype.x;
 /** @type {(!Array<(string|number|!Date)>|!Array<!Array<(string|number|!Date)>>)} */
ScatterData.prototype.y;
 /** @type {(string|!Array<string>)} */
ScatterData.prototype.text;
 /** @type {?} */
ScatterData.prototype.line;

/* TODO: PropertySignature: 'line.color' */

/* TODO: PropertySignature: 'line.width' */

/* TODO: PropertySignature: 'line.dash' */

/* TODO: PropertySignature: 'line.shape' */

/* TODO: PropertySignature: 'line.smoothing' */

/* TODO: PropertySignature: 'line.simplify' */
 /** @type {?} */
ScatterData.prototype.marker;

/* TODO: PropertySignature: 'marker.symbol' */

/* TODO: PropertySignature: 'marker.color' */

/* TODO: PropertySignature: 'marker.opacity' */

/* TODO: PropertySignature: 'marker.size' */

/* TODO: PropertySignature: 'marker.maxdisplayed' */

/* TODO: PropertySignature: 'marker.sizeref' */

/* TODO: PropertySignature: 'marker.sizemin' */

/* TODO: PropertySignature: 'marker.sizemode' */

/* TODO: PropertySignature: 'marker.showscale' */

/* TODO: PropertySignature: 'marker.line' */

/* TODO: PropertySignature: 'marker.colorbar' */
 /** @type {string} */
ScatterData.prototype.mode;
 /** @type {string} */
ScatterData.prototype.hoveron;
 /** @type {string} */
ScatterData.prototype.hoverinfo;
 /** @type {string} */
ScatterData.prototype.fill;
 /** @type {string} */
ScatterData.prototype.fillcolor;
 /** @type {string} */
ScatterData.prototype.legendgroup;
 /** @type {string} */
ScatterData.prototype.name;
 /** @type {boolean} */
ScatterData.prototype.connectgaps;
/**
 * @record
 * @struct
 */
function ScatterMarker() {}
 /** @type {(string|!Array<string>)} */
ScatterMarker.prototype.symbol;
 /** @type {(string|!Array<string>|!Array<!Array<string>>)} */
ScatterMarker.prototype.color;
 /** @type {(number|!Array<number>)} */
ScatterMarker.prototype.opacity;
 /** @type {(number|!Array<number>)} */
ScatterMarker.prototype.size;
 /** @type {number} */
ScatterMarker.prototype.maxdisplayed;
 /** @type {number} */
ScatterMarker.prototype.sizeref;
 /** @type {number} */
ScatterMarker.prototype.sizemin;
 /** @type {string} */
ScatterMarker.prototype.sizemode;
 /** @type {boolean} */
ScatterMarker.prototype.showscale;
 /** @type {!Object} */
ScatterMarker.prototype.line;
 /** @type {!Object} */
ScatterMarker.prototype.colorbar;
/**
 * @record
 * @struct
 */
function ScatterLine() {}
 /** @type {(string|!Array<string>|!Array<!Array<string>>)} */
ScatterLine.prototype.color;
 /** @type {number} */
ScatterLine.prototype.width;
 /** @type {string} */
ScatterLine.prototype.dash;
 /** @type {string} */
ScatterLine.prototype.shape;
 /** @type {number} */
ScatterLine.prototype.smoothing;
 /** @type {boolean} */
ScatterLine.prototype.simplify;
/**
 * @record
 * @struct
 */
function Font() {}
 /** @type {string} */
Font.prototype.family;
 /** @type {number} */
Font.prototype.size;
 /** @type {string} */
Font.prototype.color;
/**
 * @record
 * @struct
 */
function Config() {}
 /** @type {boolean} */
Config.prototype.staticPlot;
 /** @type {boolean} */
Config.prototype.editable;
 /** @type {boolean} */
Config.prototype.autosizable;
 /** @type {number} */
Config.prototype.queueLength;
 /** @type {boolean} */
Config.prototype.fillFrame;
 /** @type {number} */
Config.prototype.frameMargins;
 /** @type {boolean} */
Config.prototype.scrollZoom;
 /** @type {(boolean|string)} */
Config.prototype.doubleClick;
 /** @type {boolean} */
Config.prototype.showTips;
 /** @type {boolean} */
Config.prototype.showLink;
 /** @type {boolean} */
Config.prototype.sendData;
 /** @type {string} */
Config.prototype.linkText;
 /** @type {boolean} */
Config.prototype.showSources;
 /** @type {(boolean|string)} */
Config.prototype.displayModeBar;
 /** @type {!Array<string>} */
Config.prototype.modeBarButtonsToRemove;
 /** @type {!Array<string>} */
Config.prototype.modeBarButtonsToAdd;
 /** @type {!Array<!Array<string>>} */
Config.prototype.modeBarButtons;
 /** @type {boolean} */
Config.prototype.displaylogo;
 /** @type {number} */
Config.prototype.plotGlPixelRatio;
 /** @type {string} */
Config.prototype.setBackground;
 /** @type {string} */
Config.prototype.topojsonURL;
 /** @type {string} */
Config.prototype.mapboxAccessToken;
 /** @type {boolean} */
Config.prototype.logging;
 /** @type {!Array<?>} */
Config.prototype.globalTransforms;
/**
 * @record
 * @struct
 */
function RangeSlider() {}
 /** @type {boolean} */
RangeSlider.prototype.visible;
 /** @type {number} */
RangeSlider.prototype.thickness;
 /** @type {!Array<?>} */
RangeSlider.prototype.range;
 /** @type {number} */
RangeSlider.prototype.borderwidth;
 /** @type {string} */
RangeSlider.prototype.bordercolor;
 /** @type {string} */
RangeSlider.prototype.bgcolor;
/**
 * @record
 * @struct
 */
function RangeSelectorButton() {}
 /** @type {string} */
RangeSelectorButton.prototype.step;
 /** @type {string} */
RangeSelectorButton.prototype.stepmode;
 /** @type {number} */
RangeSelectorButton.prototype.count;
 /** @type {string} */
RangeSelectorButton.prototype.label;
/**
 * @record
 * @struct
 */
function RangeSelector() {}
 /** @type {!Array<?>} */
RangeSelector.prototype.buttons;
 /** @type {boolean} */
RangeSelector.prototype.visible;
 /** @type {number} */
RangeSelector.prototype.x;
 /** @type {string} */
RangeSelector.prototype.xanchor;
 /** @type {number} */
RangeSelector.prototype.y;
 /** @type {string} */
RangeSelector.prototype.yanchor;
 /** @type {string} */
RangeSelector.prototype.bgcolor;
 /** @type {string} */
RangeSelector.prototype.activecolor;
 /** @type {string} */
RangeSelector.prototype.bordercolor;
 /** @type {number} */
RangeSelector.prototype.borderwidth;
 /** @type {?} */
RangeSelector.prototype.font;
