/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/multer-s3/index.d.ts:

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */
/**
 * @record
 * @struct
 */
function Options() {}
 /** @type {!S3} */
Options.prototype.s3;
 /** @type {(string|?)} */
Options.prototype.bucket;
 /** @type {(string|?)} */
Options.prototype.acl;
 /** @type {(string|?)} */
Options.prototype.cacheControl;

/**
 * @param {!Express.Request} req
 * @param {!Express.Multer.File} file
 * @param {?} callback
 * @return {void}
 */
Options.prototype.key = function(req, file, callback) {};

/**
 * @param {!Express.Request} req
 * @param {!Express.Multer.File} file
 * @param {?} callback
 * @return {void}
 */
Options.prototype.contentType = function(req, file, callback) {};

/**
 * @param {!Express.Request} req
 * @param {!Express.Multer.File} file
 * @param {?} callback
 * @return {void}
 */
Options.prototype.metadata = function(req, file, callback) {};
/**
 * @record
 * @struct
 */
function S3Storage() {}

/* TODO: CallSignature:  */

/**
 * @param {!Express.Request} req
 * @param {!Express.Multer.File} file
 * @param {?} callback
 * @return {void}
 */
S3Storage.prototype.AUTO_CONTENT_TYPE = function(req, file, callback) {};

/**
 * @param {!Express.Request} req
 * @param {!Express.Multer.File} file
 * @param {?} callback
 * @return {void}
 */
S3Storage.prototype.DEFAULT_CONTENT_TYPE = function(req, file, callback) {};
 /** @type {?} */
var s3Storage;

/* TODO: ExportAssignment in  */
