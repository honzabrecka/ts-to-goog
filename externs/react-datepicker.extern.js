/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/react-datepicker/index.d.ts:

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */
/**
 * @record
 * @struct
 */
function ReactDatePickerProps() {}
 /** @type {boolean} */
ReactDatePickerProps.prototype.allowSameDay;
 /** @type {string} */
ReactDatePickerProps.prototype.autoComplete;
 /** @type {boolean} */
ReactDatePickerProps.prototype.autoFocus;
 /** @type {string} */
ReactDatePickerProps.prototype.calendarClassName;
 /** @type {?} */
ReactDatePickerProps.prototype.children;
 /** @type {string} */
ReactDatePickerProps.prototype.className;
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)} */
ReactDatePickerProps.prototype.customInput;
 /** @type {(string|!Array<string>)} */
ReactDatePickerProps.prototype.dateFormat;
 /** @type {string} */
ReactDatePickerProps.prototype.dateFormatCalendar;
 /** @type {boolean} */
ReactDatePickerProps.prototype.disabled;
 /** @type {boolean} */
ReactDatePickerProps.prototype.disabledKeyboardNavigation;
 /** @type {string} */
ReactDatePickerProps.prototype.dropdownMode;
 /** @type {!moment.Moment} */
ReactDatePickerProps.prototype.endDate;
 /** @type {!Array<?>} */
ReactDatePickerProps.prototype.excludeDates;
 /** @type {boolean} */
ReactDatePickerProps.prototype.fixedHeight;
 /** @type {boolean} */
ReactDatePickerProps.prototype.forceShowMonthNavigation;
 /** @type {!Array<?>} */
ReactDatePickerProps.prototype.highlightDates;
 /** @type {string} */
ReactDatePickerProps.prototype.id;
 /** @type {!Array<?>} */
ReactDatePickerProps.prototype.includeDates;
 /** @type {boolean} */
ReactDatePickerProps.prototype.inline;
 /** @type {boolean} */
ReactDatePickerProps.prototype.isClearable;
 /** @type {string} */
ReactDatePickerProps.prototype.locale;
 /** @type {!moment.Moment} */
ReactDatePickerProps.prototype.maxDate;
 /** @type {!moment.Moment} */
ReactDatePickerProps.prototype.minDate;
 /** @type {number} */
ReactDatePickerProps.prototype.monthsShown;
 /** @type {string} */
ReactDatePickerProps.prototype.name;
 /** @type {!moment.Moment} */
ReactDatePickerProps.prototype.openToDate;
 /** @type {boolean} */
ReactDatePickerProps.prototype.peekNextMonth;
 /** @type {string} */
ReactDatePickerProps.prototype.placeholderText;
 /** @type {string} */
ReactDatePickerProps.prototype.popperClassName;
 /** @type {?} */
ReactDatePickerProps.prototype.popperModifiers;
 /** @type {string} */
ReactDatePickerProps.prototype.popperPlacement;
 /** @type {boolean} */
ReactDatePickerProps.prototype.readOnly;
 /** @type {boolean} */
ReactDatePickerProps.prototype.required;
 /** @type {boolean} */
ReactDatePickerProps.prototype.scrollableYearDropdown;
 /** @type {!moment.Moment} */
ReactDatePickerProps.prototype.selected;
 /** @type {boolean} */
ReactDatePickerProps.prototype.selectsEnd;
 /** @type {boolean} */
ReactDatePickerProps.prototype.selectsStart;
 /** @type {boolean} */
ReactDatePickerProps.prototype.showMonthDropdown;
 /** @type {boolean} */
ReactDatePickerProps.prototype.showWeekNumbers;
 /** @type {boolean} */
ReactDatePickerProps.prototype.showYearDropdown;
 /** @type {!moment.Moment} */
ReactDatePickerProps.prototype.startDate;
 /** @type {number} */
ReactDatePickerProps.prototype.tabIndex;
 /** @type {string} */
ReactDatePickerProps.prototype.title;
 /** @type {string} */
ReactDatePickerProps.prototype.todayButton;
 /** @type {boolean} */
ReactDatePickerProps.prototype.useWeekdaysShort;
 /** @type {number} */
ReactDatePickerProps.prototype.utcOffset;
 /** @type {string} */
ReactDatePickerProps.prototype.value;
 /** @type {string} */
ReactDatePickerProps.prototype.weekLabel;
 /** @type {boolean} */
ReactDatePickerProps.prototype.withPortal;
 /** @type {number} */
ReactDatePickerProps.prototype.yearDropdownItemNumber;

/**
 * @param {!moment.Moment} date
 * @return {string}
 */
ReactDatePickerProps.prototype.dayClassName = function(date) {};

/**
 * @param {!moment.Moment} date
 * @return {boolean}
 */
ReactDatePickerProps.prototype.filterDate = function(date) {};

/**
 * @param {!moment.Moment} date
 * @return {(string|number)}
 */
ReactDatePickerProps.prototype.formatWeekNumber = function(date) {};

/**
 * @param {!React.FocusEvent<!HTMLInputElement>} event
 * @return {void}
 */
ReactDatePickerProps.prototype.onBlur = function(event) {};

/**
 * @param {!moment.Moment} date
 * @param {!React.SyntheticEvent<?>} event
 * @return {?}
 */
ReactDatePickerProps.prototype.onChange = function(date, event) {};

/**
 * @param {!React.FocusEvent<!HTMLInputElement>} event
 * @return {void}
 */
ReactDatePickerProps.prototype.onChangeRaw = function(event) {};

/**
 * @param {!React.MouseEvent<!HTMLDivElement>} event
 * @return {void}
 */
ReactDatePickerProps.prototype.onClickOutside = function(event) {};

/**
 * @param {!React.FocusEvent<!HTMLInputElement>} event
 * @return {void}
 */
ReactDatePickerProps.prototype.onFocus = function(event) {};

/**
 * @param {!React.KeyboardEvent<!HTMLDivElement>} event
 * @return {void}
 */
ReactDatePickerProps.prototype.onKeyDown = function(event) {};

/**
 * @param {!moment.Moment} date
 * @return {void}
 */
ReactDatePickerProps.prototype.onMonthChange = function(date) {};

/**
 * @param {!moment.Moment} date
 * @param {!React.SyntheticEvent<?>} event
 * @return {void}
 */
ReactDatePickerProps.prototype.onSelect = function(date, event) {};

/**
 * @param {!moment.Moment} firstDayOfWeek
 * @param {(string|number)} weekNumber
 * @param {!React.SyntheticEvent<?>} event
 * @return {void}
 */
ReactDatePickerProps.prototype.onWeekSelect = function(firstDayOfWeek, weekNumber, event) {};
 /** @type {!React.ClassicComponentClass<?>} */
var ReactDatePicker;

/* TODO: ExportAssignment in  */
