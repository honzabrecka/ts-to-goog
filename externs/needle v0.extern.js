/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/needle v0/index.d.ts:
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "needle"
/** @const */
tsickle_declare_module.needle = {};

/* TODO: ImportDeclaration in tsickle_declare_module.needle */

/* TODO: ImportDeclaration in tsickle_declare_module.needle */
/** @const */
tsickle_declare_module.needle.Needle = {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.needle.Needle.NeedleResponse = function() {};
 /** @type {?} */
tsickle_declare_module.needle.Needle.NeedleResponse.prototype.body;
 /** @type {?} */
tsickle_declare_module.needle.Needle.NeedleResponse.prototype.raw;
 /** @type {number} */
tsickle_declare_module.needle.Needle.NeedleResponse.prototype.bytes;

/** @typedef {!NodeJS.ReadableStream} */
tsickle_declare_module.needle.Needle.ReadableStream;

/** @typedef {function(!Error, !Needle.NeedleResponse, ?): void} */
tsickle_declare_module.needle.Needle.NeedleCallback;
/**
 * @record
 * @struct
 */
tsickle_declare_module.needle.Needle.RequestOptions = function() {};
 /** @type {number} */
tsickle_declare_module.needle.Needle.RequestOptions.prototype.timeout;
 /** @type {number} */
tsickle_declare_module.needle.Needle.RequestOptions.prototype.follow;
 /** @type {number} */
tsickle_declare_module.needle.Needle.RequestOptions.prototype.follow_max;
 /** @type {boolean} */
tsickle_declare_module.needle.Needle.RequestOptions.prototype.multipart;
 /** @type {string} */
tsickle_declare_module.needle.Needle.RequestOptions.prototype.proxy;
 /** @type {string} */
tsickle_declare_module.needle.Needle.RequestOptions.prototype.agent;
 /** @type {!Object} */
tsickle_declare_module.needle.Needle.RequestOptions.prototype.headers;
 /** @type {string} */
tsickle_declare_module.needle.Needle.RequestOptions.prototype.auth;
 /** @type {boolean} */
tsickle_declare_module.needle.Needle.RequestOptions.prototype.json;
 /** @type {boolean} */
tsickle_declare_module.needle.Needle.RequestOptions.prototype.compressed;
 /** @type {!Object<string,?>} */
tsickle_declare_module.needle.Needle.RequestOptions.prototype.cookies;
 /** @type {string} */
tsickle_declare_module.needle.Needle.RequestOptions.prototype.username;
 /** @type {string} */
tsickle_declare_module.needle.Needle.RequestOptions.prototype.password;
/**
 * @record
 * @struct
 */
tsickle_declare_module.needle.Needle.ResponseOptions = function() {};
 /** @type {boolean} */
tsickle_declare_module.needle.Needle.ResponseOptions.prototype.decode;
 /** @type {boolean} */
tsickle_declare_module.needle.Needle.ResponseOptions.prototype.parse;
 /** @type {?} */
tsickle_declare_module.needle.Needle.ResponseOptions.prototype.output;
/**
 * @record
 * @struct
 */
tsickle_declare_module.needle.Needle.TLSOptions = function() {};
 /** @type {?} */
tsickle_declare_module.needle.Needle.TLSOptions.prototype.pfx;
 /** @type {?} */
tsickle_declare_module.needle.Needle.TLSOptions.prototype.key;
 /** @type {string} */
tsickle_declare_module.needle.Needle.TLSOptions.prototype.passphrase;
 /** @type {?} */
tsickle_declare_module.needle.Needle.TLSOptions.prototype.cert;
 /** @type {?} */
tsickle_declare_module.needle.Needle.TLSOptions.prototype.ca;
 /** @type {?} */
tsickle_declare_module.needle.Needle.TLSOptions.prototype.ciphers;
 /** @type {boolean} */
tsickle_declare_module.needle.Needle.TLSOptions.prototype.rejectUnauthorized;
 /** @type {?} */
tsickle_declare_module.needle.Needle.TLSOptions.prototype.secureProtocol;
/**
 * @record
 * @struct
 */
tsickle_declare_module.needle.Needle.NeedleStatic = function() {};

/**
 * @param {?=} options
 * @return {void}
 */
tsickle_declare_module.needle.Needle.NeedleStatic.prototype.defaults = function(options) {};

/**
 * @param {string} url
 * @param {function(!Error, !Needle.NeedleResponse, ?): void|!Needle.RequestOptions=} callback_or_options
 * @param {function(!Error, !Needle.NeedleResponse, ?): void=} callback
 * @return {!NodeJS.ReadableStream}
 */
tsickle_declare_module.needle.Needle.NeedleStatic.prototype.head = function(url, callback_or_options, callback) {};

/**
 * @param {string} url
 * @param {function(!Error, !Needle.NeedleResponse, ?): void|!Needle.RequestOptions=} callback_or_options
 * @param {function(!Error, !Needle.NeedleResponse, ?): void=} callback
 * @return {!NodeJS.ReadableStream}
 */
tsickle_declare_module.needle.Needle.NeedleStatic.prototype.get = function(url, callback_or_options, callback) {};

/**
 * @param {string} url
 * @param {?} data
 * @param {function(!Error, !Needle.NeedleResponse, ?): void|!Needle.RequestOptions=} callback_or_options
 * @param {function(!Error, !Needle.NeedleResponse, ?): void=} callback
 * @return {!NodeJS.ReadableStream}
 */
tsickle_declare_module.needle.Needle.NeedleStatic.prototype.post = function(url, data, callback_or_options, callback) {};

/**
 * @param {string} url
 * @param {?} data
 * @param {function(!Error, !Needle.NeedleResponse, ?): void|!Needle.RequestOptions=} callback_or_options
 * @param {function(!Error, !Needle.NeedleResponse, ?): void=} callback
 * @return {!NodeJS.ReadableStream}
 */
tsickle_declare_module.needle.Needle.NeedleStatic.prototype.put = function(url, data, callback_or_options, callback) {};

/**
 * @param {string} url
 * @param {?} data
 * @param {function(!Error, !Needle.NeedleResponse, ?): void|!Needle.RequestOptions=} callback_or_options
 * @param {function(!Error, !Needle.NeedleResponse, ?): void=} callback
 * @return {!NodeJS.ReadableStream}
 */
tsickle_declare_module.needle.Needle.NeedleStatic.prototype.delete = function(url, data, callback_or_options, callback) {};

/**
 * @param {string} method
 * @param {string} url
 * @param {?} data
 * @param {function(!Error, !Needle.NeedleResponse, ?): void|!Needle.RequestOptions=} callback_or_options
 * @param {function(!Error, !Needle.NeedleResponse, ?): void=} callback
 * @return {!NodeJS.ReadableStream}
 */
tsickle_declare_module.needle.Needle.NeedleStatic.prototype.request = function(method, url, data, callback_or_options, callback) {};
 /** @type {!Needle.NeedleStatic} */
tsickle_declare_module.needle.needle;

/* TODO: ExportAssignment in tsickle_declare_module.needle */
