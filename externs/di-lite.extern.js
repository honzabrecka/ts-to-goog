/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/di-lite/index.d.ts:
/** @const */
var DiLite = {};
/**
 * @record
 * @struct
 */
DiLite.DiLiteStatic = function() {};
 /** @type {string} */
DiLite.DiLiteStatic.prototype.version;
 /** @type {!DiLite.StrategyEnum} */
DiLite.DiLiteStatic.prototype.strategy;
 /** @type {!DiLite.FactoryEnum} */
DiLite.DiLiteStatic.prototype.factory;
 /** @type {!DiLite.Utils} */
DiLite.DiLiteStatic.prototype.utils;

/**
 * @return {!DiLite.CreateContext}
 */
DiLite.DiLiteStatic.prototype.createContext = function() {};

/**
 * @param {string} depExp
 * @return {string}
 */
DiLite.DiLiteStatic.prototype.dependencyExpression = function(depExp) {};

/**
 * @param {string} name
 * @param {!DiLite.CreateContext} ctx
 * @return {?}
 */
DiLite.DiLiteStatic.prototype.entry = function(name, ctx) {};
/**
 * @record
 * @struct
 */
DiLite.Dictionary = function() {};

/* TODO: IndexSignature: DiLite */
/**
 * @record
 * @struct
 */
DiLite.CreateContext = function() {};
 /** @type {!DiLite.Dictionary<?>} */
DiLite.CreateContext.prototype.map;

/**
 * @template T
 * @param {string} name
 * @return {T}
 */
DiLite.CreateContext.prototype.entry = function(name) {};

/**
 * @template T
 * @param {string} name
 * @param {T} service
 * @return {!DiLite.Entry}
 */
DiLite.CreateContext.prototype.register = function(name, service) {};

/**
 * @param {string} name
 * @return {boolean}
 */
DiLite.CreateContext.prototype.has = function(name) {};

/**
 * @param {string} name
 * @return {?}
 */
DiLite.CreateContext.prototype.get = function(name) {};

/**
 * @template T
 * @param {string} name
 * @param {?} args
 * @return {T}
 */
DiLite.CreateContext.prototype.create = function(name, args) {};

/**
 * @return {void}
 */
DiLite.CreateContext.prototype.initialize = function() {};

/**
 * @return {void}
 */
DiLite.CreateContext.prototype.clear = function() {};

/**
 * @template T
 * @param {string} name
 * @param {T} o
 * @param {string} dependencies
 * @return {T}
 */
DiLite.CreateContext.prototype.inject = function(name, o, dependencies) {};

/**
 * @template T
 * @param {!Function|?} o
 * @return {T}
 */
DiLite.CreateContext.prototype.ready = function(o) {};
/**
 * @record
 * @struct
 */
DiLite.Entry = function() {};

/**
 * @param {?} newArgs
 * @return {!DiLite.Entry}
 */
DiLite.Entry.prototype.create = function(newArgs) {};

/**
 * @template T
 * @param {T=} o
 * @return {!DiLite.Entry|T}
 */
DiLite.Entry.prototype.object = function(o) {};

/**
 * @template T
 * @param {!Function=} s
 * @return {!DiLite.Entry|T}
 */
DiLite.Entry.prototype.strategy = function(s) {};

/**
 * @template T
 * @param {T=} t
 * @return {!DiLite.Entry|T}
 */
DiLite.Entry.prototype.type = function(t) {};

/**
 * @template T
 * @param {T=} d
 * @return {!DiLite.Entry|T}
 */
DiLite.Entry.prototype.dependencies = function(d) {};

/**
 * @template T
 * @param {T=} a
 * @return {!DiLite.Entry|T}
 */
DiLite.Entry.prototype.args = function(a) {};

/**
 * @template T
 * @param {!Function=} f
 * @return {!DiLite.Entry|T}
 */
DiLite.Entry.prototype.factory = function(f) {};
/**
 * @record
 * @struct
 */
DiLite.StrategyEnum = function() {};

/**
 * @template TObject, TType
 * @param {string} name
 * @param {TObject} object
 * @param {TType} type
 * @param {?} args
 * @param {!DiLite.CreateContext} ctx
 * @param {?} dependencies
 * @return {TObject}
 */
DiLite.StrategyEnum.prototype.proto = function(name, object, type, args, ctx, dependencies) {};

/**
 * @template TObject, TType
 * @param {string} name
 * @param {TObject} object
 * @param {TType} type
 * @param {?} args
 * @param {!DiLite.CreateContext=} ctx
 * @param {?=} dependencies
 * @return {TObject}
 */
DiLite.StrategyEnum.prototype.singleton = function(name, object, type, args, ctx, dependencies) {};
/**
 * @record
 * @struct
 */
DiLite.FactoryEnum = function() {};

/**
 * @template T
 * @param {T} type
 * @param {?} args
 * @return {T}
 */
DiLite.FactoryEnum.prototype.constructor = function(type, args) {};

/**
 * @template T
 * @param {T} type
 * @param {?} args
 * @return {T}
 */
DiLite.FactoryEnum.prototype.func = function(type, args) {};
/**
 * @record
 * @struct
 */
DiLite.Utils = function() {};

/**
 * @param {?} args
 * @param {string} op
 * @return {string}
 */
DiLite.Utils.prototype.invokeStmt = function(args, op) {};
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "di-lite"
/** @const */
tsickle_declare_module.di_lite = {};

/* TODO: ExportAssignment in tsickle_declare_module.di_lite */
 /** @type {!DiLite.DiLiteStatic} */
var di;
