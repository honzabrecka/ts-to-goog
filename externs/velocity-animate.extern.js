/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/velocity-animate/index.d.ts:

/**
 * @param {string|{properties: !Object, options: !jquery.velocity.Options}|!Object} name_or_options_or_properties
 * @param {!jquery.velocity.RegisteredEffectOptions|!jquery.velocity.Options|number|(string|!Array<number>)|function(!NodeListOf<!HTMLElement>): void=} options_or_duration_or_easing_or_complete
 * @param {(string|!Array<number>)|function(!NodeListOf<!HTMLElement>): void=} easing_or_complete
 * @param {function(!NodeListOf<!HTMLElement>): void=} complete
 * @return {?<!HTMLElement>}
 */
JQuery.prototype.velocity = function(name_or_options_or_properties, options_or_duration_or_easing_or_complete, easing_or_complete, complete) {};
 /** @type {!jquery.velocity.VelocityStatic} */
JQueryStatic.prototype.Velocity;
/** @const */
var jquery = {};
/** @const */
jquery.velocity = {};

/** @typedef {!Object} */
jquery.velocity.Properties;

/** @typedef {(string|!Array<number>)} */
jquery.velocity.Easing;

/** @typedef {function(!NodeListOf<!HTMLElement>): void} */
jquery.velocity.ElementCallback;

/** @typedef {function(!NodeListOf<!HTMLElement>, number, number, number, number): void} */
jquery.velocity.ProgressCallback;

/** @typedef {!Array<?>} */
jquery.velocity.EffectCall;
/**
 * @record
 * @struct
 */
jquery.velocity.EffectCallOptions = function() {};
 /** @type {?} */
jquery.velocity.EffectCallOptions.prototype.delay;
 /** @type {?} */
jquery.velocity.EffectCallOptions.prototype.easing;
/**
 * @record
 * @struct
 */
jquery.velocity.CommonOptions = function() {};
 /** @type {(string|number)} */
jquery.velocity.CommonOptions.prototype.duration;
 /** @type {function(!NodeListOf<!HTMLElement>): void} */
jquery.velocity.CommonOptions.prototype.begin;
 /** @type {function(!NodeListOf<!HTMLElement>): void} */
jquery.velocity.CommonOptions.prototype.complete;
 /** @type {(string|boolean)} */
jquery.velocity.CommonOptions.prototype.display;
 /** @type {(number|boolean)} */
jquery.velocity.CommonOptions.prototype.delay;
 /** @type {boolean} */
jquery.velocity.CommonOptions.prototype.mobileHA;
 /** @type {boolean} */
jquery.velocity.CommonOptions.prototype._cacheValues;
 /** @type {?<!HTMLElement>} */
jquery.velocity.CommonOptions.prototype.container;
 /** @type {string} */
jquery.velocity.CommonOptions.prototype.axis;
 /** @type {number} */
jquery.velocity.CommonOptions.prototype.offset;
/**
 * @extends {jquery.velocity.CommonOptions}
 * @record
 * @struct
 */
jquery.velocity.Options = function() {};
 /** @type {(string|boolean)} */
jquery.velocity.Options.prototype.queue;
 /** @type {(string|!Array<number>)} */
jquery.velocity.Options.prototype.easing;
 /** @type {function(!NodeListOf<!HTMLElement>, number, number, number, number): void} */
jquery.velocity.Options.prototype.progress;
 /** @type {(number|boolean)} */
jquery.velocity.Options.prototype.loop;
/**
 * @record
 * @struct
 */
jquery.velocity.RegisterEffectOptions = function() {};
 /** @type {number} */
jquery.velocity.RegisterEffectOptions.prototype.defaultDuration;
 /** @type {!Array<!Array<?>>} */
jquery.velocity.RegisterEffectOptions.prototype.calls;
 /** @type {!Object} */
jquery.velocity.RegisterEffectOptions.prototype.reset;
/**
 * @extends {jquery.velocity.CommonOptions}
 * @record
 * @struct
 */
jquery.velocity.RegisteredEffectOptions = function() {};
 /** @type {number} */
jquery.velocity.RegisteredEffectOptions.prototype.stagger;
 /** @type {boolean} */
jquery.velocity.RegisteredEffectOptions.prototype.drag;
 /** @type {boolean} */
jquery.velocity.RegisteredEffectOptions.prototype.backwards;
/**
 * @record
 * @struct
 */
jquery.velocity.SequenceCall = function() {};
 /** @type {(!HTMLElement|?<!HTMLElement>)} */
jquery.velocity.SequenceCall.prototype.e;
 /** @type {!Object} */
jquery.velocity.SequenceCall.prototype.p;
 /** @type {!jquery.velocity.SequenceOptions} */
jquery.velocity.SequenceCall.prototype.o;
/**
 * @extends {jquery.velocity.Options}
 * @record
 * @struct
 */
jquery.velocity.SequenceOptions = function() {};
 /** @type {boolean} */
jquery.velocity.SequenceOptions.prototype.sequenceQueue;
/**
 * @record
 * @struct
 */
jquery.velocity.VelocityStatic = function() {};
 /** @type {?} */
jquery.velocity.VelocityStatic.prototype.Sequences;
 /** @type {?} */
jquery.velocity.VelocityStatic.prototype.mock;

/**
 * @param {{elements: !NodeListOf<!HTMLElement>, properties: !Object, options: !jquery.velocity.Options}|(!HTMLElement|!NodeListOf<!HTMLElement>)} options_or_elements
 * @param {!Object=} properties
 * @param {!jquery.velocity.Options=} options
 * @return {?}
 */
jquery.velocity.VelocityStatic.prototype.animate = function(options_or_elements, properties, options) {};

/**
 * @param {string} name
 * @param {!jquery.velocity.RegisterEffectOptions} options
 * @return {!jquery.velocity.VelocityStatic}
 */
jquery.velocity.VelocityStatic.prototype.RegisterEffect = function(name, options) {};

/**
 * @param {!Array<!jquery.velocity.SequenceCall>} sequence
 * @return {!jquery.velocity.VelocityStatic}
 */
jquery.velocity.VelocityStatic.prototype.RunSequence = function(sequence) {};

/**
 * Get a hook value. Hooks are the subvalues of multi-value CSS properties.
 * It features the same API as $.css().
 * Set a hook value. Hooks are the subvalues of multi-value CSS properties.
 * It features the same API as $.css().
 * @param {(!HTMLElement|?<!HTMLElement>)} element
 * @param {string} cssKey
 * @param {string=} cssValue
 * @return {string|void}
 */
jquery.velocity.VelocityStatic.prototype.hook = function(element, cssKey, cssValue) {};
