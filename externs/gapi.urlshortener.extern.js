/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/gapi.urlshortener/index.d.ts:
/** @const */
gapi.client.urlshortener = {};
/**
 * @record
 * @struct
 */
gapi.client.urlshortener.url = function() {};

/**
 * Expands a short URL or gets creation time and analytics.
 * @param {{shortUrl: string, projection: string, fields: string}} object
 * @return {!gapi.client.HttpRequest<!GoogleApiUrlShortenerUrlResource>}
 */
gapi.client.urlshortener.url.prototype.get = function(object) {};

/**
 * Creates a new short URL.
 * @param {{fields: string, RequestBody: string}} object
 * @return {!gapi.client.HttpRequest<!GoogleApiUrlShortenerUrlResource>}
 */
gapi.client.urlshortener.url.prototype.insert = function(object) {};

/**
 * Retrieves a list of URLs shortened by a user.
 * @param {{projection: string, start-token: string, fields: string}} object
 * @return {!gapi.client.HttpRequest<!GoogleApiUrlShortenerUrlResource>}
 */
gapi.client.urlshortener.url.prototype.list = function(object) {};
/**
 * @record
 * @struct
 */
function GoogleApiUrlShortenerUrlResource() {}
 /** @type {string} */
GoogleApiUrlShortenerUrlResource.prototype.kind;
 /** @type {string} */
GoogleApiUrlShortenerUrlResource.prototype.id;
 /** @type {string} */
GoogleApiUrlShortenerUrlResource.prototype.longUrl;
 /** @type {string} */
GoogleApiUrlShortenerUrlResource.prototype.status;
 /** @type {string} */
GoogleApiUrlShortenerUrlResource.prototype.created;
 /** @type {{allTime: !GoogleApiUrlShortenerUrlResourceAnalyticsObject, month: !GoogleApiUrlShortenerUrlResourceAnalyticsObject, week: !GoogleApiUrlShortenerUrlResourceAnalyticsObject, day: !GoogleApiUrlShortenerUrlResourceAnalyticsObject, twoHours: !GoogleApiUrlShortenerUrlResourceAnalyticsObject}} */
GoogleApiUrlShortenerUrlResource.prototype.analytics;
/**
 * @record
 * @struct
 */
function GoogleApiUrlShortenerUrlResourceAnalyticsObject() {}
 /** @type {string} */
GoogleApiUrlShortenerUrlResourceAnalyticsObject.prototype.shortUrlClicks;
 /** @type {string} */
GoogleApiUrlShortenerUrlResourceAnalyticsObject.prototype.longUrlClicks;
 /** @type {!Array<!GoogleApiUrlShortenerUrlResourceAnalyticsArrayObject>} */
GoogleApiUrlShortenerUrlResourceAnalyticsObject.prototype.referrers;
 /** @type {!Array<!GoogleApiUrlShortenerUrlResourceAnalyticsArrayObject>} */
GoogleApiUrlShortenerUrlResourceAnalyticsObject.prototype.countries;
 /** @type {!Array<!GoogleApiUrlShortenerUrlResourceAnalyticsArrayObject>} */
GoogleApiUrlShortenerUrlResourceAnalyticsObject.prototype.browsers;
 /** @type {!Array<!GoogleApiUrlShortenerUrlResourceAnalyticsArrayObject>} */
GoogleApiUrlShortenerUrlResourceAnalyticsObject.prototype.platforms;
/**
 * @record
 * @struct
 */
function GoogleApiUrlShortenerUrlResourceAnalyticsArrayObject() {}
 /** @type {string} */
GoogleApiUrlShortenerUrlResourceAnalyticsArrayObject.prototype.count;
 /** @type {string} */
GoogleApiUrlShortenerUrlResourceAnalyticsArrayObject.prototype.id;
