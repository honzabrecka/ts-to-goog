/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/touch/index.d.ts:

/**
 * @template T
 * @param {string} filename
 * @param {function(!NodeJS.ErrnoException): T|!touch.Options=} cb_or_options
 * @param {function(!NodeJS.ErrnoException): T=} cb
 * @return {!Promise<T>}
 */
function touch(filename, cb_or_options, cb) {}
/**
 * @record
 * @struct
 */
touch.Options = function() {};
 /** @type {boolean} */
touch.Options.prototype.force;
 /** @type {(string|number|!Date)} */
touch.Options.prototype.time;
 /** @type {(boolean|!Date)} */
touch.Options.prototype.atime;
 /** @type {(boolean|!Date)} */
touch.Options.prototype.mtime;
 /** @type {string} */
touch.Options.prototype.ref;
 /** @type {boolean} */
touch.Options.prototype.nocreate;

/**
 * @param {string} filename
 * @param {!touch.Options=} options
 * @return {void}
 */
touch.sync = function(filename, options) {};

/**
 * @template T
 * @param {number} fd
 * @param {function(!NodeJS.ErrnoException): T|!touch.Options=} cb_or_options
 * @param {function(!NodeJS.ErrnoException): T=} cb
 * @return {!Promise<T>}
 */
touch.ftouch = function(fd, cb_or_options, cb) {};

/**
 * @param {number} fd
 * @param {!touch.Options=} options
 * @return {void}
 */
touch.ftouchSync = function(fd, options) {};

/* TODO: ExportAssignment in  */
