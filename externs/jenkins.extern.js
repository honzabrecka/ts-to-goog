/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/jenkins/index.d.ts:
/** @const */
var create = {};
/**
 * @record
 * @struct
 */
create.JenkinsAPI = function() {};
 /** @type {{get: function(string, number, function(!Error, ?): void): void, log: ?, logStream: function(string, number, string, number): !NodeJS.ReadableStream, stop: function(string, number, function(!Error): void): void}} */
create.JenkinsAPI.prototype.build;
 /** @type {{build: ?, config: ?, copy: function(string, string, function(!Error): void): void, create: function(string, string, function(!Error): void): void, destroy: function(string, function(!Error): void): void, disable: function(string, function(!Error): void): void, enable: function(string, function(!Error): void): void, exists: function(string, function(!Error, boolean): void): void, get: function(string, function(!Error, ?): void): void, list: function(function(!Error, ?): void): void}} */
create.JenkinsAPI.prototype.job;
 /** @type {{config: function(string, function(!Error, ?): void): void, create: function(string, function(!Error): void): void, destroy: function(string, function(!Error): void): void, disconnect: ?, disable: ?, enable: function(string, function(!Error): void): void, exists: function(string, function(!Error, boolean): void): void, get: function(string, function(!Error, ?): void): void, list: ?}} */
create.JenkinsAPI.prototype.node;
 /** @type {{list: function(function(!Error, ?): void): void, item: function(number, function(!Error, ?): void): void, cancel: function(number, function(!Error): void): void}} */
create.JenkinsAPI.prototype.queue;
 /** @type {{config: ?, create: function(string, string, function(!Error): void): void, destroy: function(string, function(!Error): void): void, exists: function(string, function(!Error, boolean): void): void, get: function(string, function(!Error, ?): void): void, list: function(function(!Error, ?): void): void, add: function(string, string, function(!Error): void): void, remove: function(string, string, function(!Error): void): void}} */
create.JenkinsAPI.prototype.view;

/**
 * @param {function(!Error, ?): void} callback
 * @return {void}
 */
create.JenkinsAPI.prototype.info = function(callback) {};
/**
 * @record
 * @struct
 */
create.JenkinsPromisifiedAPI = function() {};
 /** @type {{get: function(string, number): !Promise<?>, log: function(string, number, number, string, boolean): !Promise<?>, logStream: function(string, number, string, number): !Promise<?>, stop: function(string, number): !Promise<void>}} */
create.JenkinsPromisifiedAPI.prototype.build;
 /** @type {{build: ?, config: function(string, string): !Promise<?>, copy: function(string, string): !Promise<void>, create: function(string, string): !Promise<void>, destroy: function(string): !Promise<void>, disable: function(string): !Promise<void>, enable: function(string): !Promise<void>, exists: function(string): !Promise<boolean>, get: function(string): !Promise<?>, list: function(): !Promise<?>}} */
create.JenkinsPromisifiedAPI.prototype.job;
 /** @type {{config: function(string): !Promise<?>, create: function(string): !Promise<void>, destroy: function(string): !Promise<void>, disconnect: function(string, string): !Promise<void>, disable: function(string, string): !Promise<void>, enable: function(string): !Promise<void>, exists: function(string): !Promise<boolean>, get: function(string): !Promise<?>, list: function(boolean): !Promise<?>}} */
create.JenkinsPromisifiedAPI.prototype.node;
 /** @type {{list: function(): !Promise<?>, item: function(number): !Promise<?>, cancel: function(number): !Promise<void>}} */
create.JenkinsPromisifiedAPI.prototype.queue;
 /** @type {{config: function(string, string): !Promise<?>, create: function(string, string): !Promise<void>, destroy: function(string): !Promise<void>, exists: function(string): !Promise<boolean>, get: function(string): !Promise<?>, list: function(): !Promise<?>, add: function(string, string): !Promise<void>, remove: function(string, string): !Promise<void>}} */
create.JenkinsPromisifiedAPI.prototype.view;

/**
 * @return {!Promise<?>}
 */
create.JenkinsPromisifiedAPI.prototype.info = function() {};
/**
 * @record
 * @struct
 */
create.JobBuildOptions = function() {};
 /** @type {string} */
create.JobBuildOptions.prototype.name;
 /** @type {?} */
create.JobBuildOptions.prototype.parameters;
 /** @type {string} */
create.JobBuildOptions.prototype.token;
/**
 * @record
 * @struct
 */
create.JenkinsClientOptions = function() {};
 /** @type {string} */
create.JenkinsClientOptions.prototype.baseUrl;
 /** @type {boolean} */
create.JenkinsClientOptions.prototype.crumbIssuer;
 /** @type {?} */
create.JenkinsClientOptions.prototype.headers;
 /** @type {(boolean|function(!Array<?>): ?)} */
create.JenkinsClientOptions.prototype.promisify;

/**
 * @param {{baseUrl: string, crumbIssuer: boolean, headers: ?, promisify: boolean}=} opts
 * @return {!create.JenkinsAPI|!create.JenkinsPromisifiedAPI}
 */
function create(opts) {}

/* TODO: ExportAssignment in  */
