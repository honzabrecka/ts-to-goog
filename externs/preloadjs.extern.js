/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/preloadjs/index.d.ts:
/**
 * @extends {createjs.EventDispatcher}
 * @constructor
 * @struct
 */
createjs.AbstractLoader = function() {};
 /** @type {string} */
createjs.AbstractLoader.BINARY;
 /** @type {boolean} */
createjs.AbstractLoader.prototype.canceled;
 /** @type {string} */
createjs.AbstractLoader.CSS;
 /** @type {string} */
createjs.AbstractLoader.GET;
 /** @type {string} */
createjs.AbstractLoader.IMAGE;
 /** @type {string} */
createjs.AbstractLoader.JAVASCRIPT;
 /** @type {string} */
createjs.AbstractLoader.JSON;
 /** @type {string} */
createjs.AbstractLoader.JSONP;
 /** @type {boolean} */
createjs.AbstractLoader.prototype.loaded;
 /** @type {string} */
createjs.AbstractLoader.MANIFEST;
 /** @type {string} */
createjs.AbstractLoader.POST;
 /** @type {number} */
createjs.AbstractLoader.prototype.progress;
 /** @type {function(): ?} */
createjs.AbstractLoader.prototype.resultFormatter;
 /** @type {string} */
createjs.AbstractLoader.SOUND;
 /** @type {string} */
createjs.AbstractLoader.SPRITESHEET;
 /** @type {string} */
createjs.AbstractLoader.SVG;
 /** @type {string} */
createjs.AbstractLoader.TEXT;
 /** @type {string} */
createjs.AbstractLoader.prototype.type;
 /** @type {string} */
createjs.AbstractLoader.VIDEO;
 /** @type {string} */
createjs.AbstractLoader.XML;

/**
 * @return {void}
 */
createjs.AbstractLoader.prototype.cancel = function() {};

/**
 * @return {void}
 */
createjs.AbstractLoader.prototype.destroy = function() {};

/**
 * @param {string=} value
 * @return {!Object}
 */
createjs.AbstractLoader.prototype.getItem = function(value) {};

/**
 * @return {!Array<!Object>}
 */
createjs.AbstractLoader.prototype.getLoadedItems = function() {};

/**
 * @param {?=} value
 * @param {boolean=} rawResult
 * @return {!Object}
 */
createjs.AbstractLoader.prototype.getResult = function(value, rawResult) {};

/**
 * @return {!Object}
 */
createjs.AbstractLoader.prototype.getTag = function() {};

/**
 * @return {void}
 */
createjs.AbstractLoader.prototype.load = function() {};

/**
 * @param {!Object} tag
 * @return {void}
 */
createjs.AbstractLoader.prototype.setTag = function(tag) {};

/**
 * @return {string}
 */
createjs.AbstractLoader.prototype.toString = function() {};

/**
 * @constructor
 * @struct
 * @param {!Object} loadItem
 * @param {boolean} preferXHR
 * @param {string} type
 */
createjs.AbstractMediaLoader = function(loadItem, preferXHR, type) {};

/**
 * @constructor
 * @struct
 * @param {!createjs.LoadItem} item
 */
createjs.AbstractRequest = function(item) {};

/**
 * @return {void}
 */
createjs.AbstractRequest.prototype.cancel = function() {};

/**
 * @return {void}
 */
createjs.AbstractRequest.prototype.destroy = function() {};

/**
 * @return {void}
 */
createjs.AbstractRequest.prototype.load = function() {};

/**
 * @constructor
 * @struct
 * @param {!Object} loadItem
 */
createjs.BinaryLoader = function(loadItem) {};

/**
 * @param {!Object} item
 * @return {boolean}
 */
createjs.BinaryLoader.canLoadItem = function(item) {};

/**
 * @constructor
 * @struct
 * @param {!Object} loadItem
 * @param {boolean} preferXHR
 */
createjs.CSSLoader = function(loadItem, preferXHR) {};

/**
 * @param {!Object} item
 * @return {boolean}
 */
createjs.CSSLoader.prototype.canLoadItem = function(item) {};
/** @const */
createjs.DataUtils = {};

/**
 * @param {string} value
 * @return {!Object}
 */
createjs.DataUtils.parseJSON = function(value) {};

/**
 * @param {string} text
 * @param {string} type
 * @return {!XMLDocument}
 */
createjs.DataUtils.parseXML = function(text, type) {};

/**
 * @constructor
 * @struct
 * @param {string=} title
 * @param {string=} message
 * @param {!Object=} data
 */
createjs.ErrorEvent = function(title, message, data) {};
 /** @type {!Object} */
createjs.ErrorEvent.prototype.data;
 /** @type {string} */
createjs.ErrorEvent.prototype.message;
 /** @type {string} */
createjs.ErrorEvent.prototype.title;

/**
 * @constructor
 * @struct
 * @param {!Object} loadItem
 * @param {boolean} preferXHR
 */
createjs.ImageLoader = function(loadItem, preferXHR) {};

/**
 * @param {!Object} item
 * @return {boolean}
 */
createjs.ImageLoader.canLoadItem = function(item) {};

/**
 * @constructor
 * @struct
 * @param {!Object} loadItem
 * @param {boolean} preferXHR
 */
createjs.JavaScriptLoader = function(loadItem, preferXHR) {};

/**
 * @param {!Object} item
 * @return {boolean}
 */
createjs.JavaScriptLoader.canLoadItem = function(item) {};

/**
 * @constructor
 * @struct
 * @param {!Object} loadItem
 */
createjs.JSONLoader = function(loadItem) {};

/**
 * @param {!Object} item
 * @return {boolean}
 */
createjs.JSONLoader.canLoadItem = function(item) {};

/**
 * @constructor
 * @struct
 * @param {!Object} loadItem
 */
createjs.JSONPLoader = function(loadItem) {};

/**
 * @param {!Object} item
 * @return {boolean}
 */
createjs.JSONPLoader.canLoadItem = function(item) {};
/**
 * @constructor
 * @struct
 */
createjs.LoadItem = function() {};
 /** @type {string} */
createjs.LoadItem.prototype.callback;
 /** @type {boolean} */
createjs.LoadItem.prototype.crossOrigin;
 /** @type {!Object} */
createjs.LoadItem.prototype.data;
 /** @type {!Object} */
createjs.LoadItem.prototype.headers;
 /** @type {string} */
createjs.LoadItem.prototype.id;
 /** @type {number} */
createjs.LoadItem.prototype.loadTimeout;
 /** @type {boolean} */
createjs.LoadItem.prototype.maintainOrder;
 /** @type {string} */
createjs.LoadItem.prototype.method;
 /** @type {string} */
createjs.LoadItem.prototype.mimeType;
 /** @type {string} */
createjs.LoadItem.prototype.src;
 /** @type {string} */
createjs.LoadItem.prototype.type;
 /** @type {!Object} */
createjs.LoadItem.prototype.values;
 /** @type {boolean} */
createjs.LoadItem.prototype.withCredentials;

/**
 * @param {(string|!Object|!createjs.LoadItem)} value
 * @return {(!Object|!createjs.LoadItem)}
 */
createjs.LoadItem.create = function(value) {};

/**
 * @param {!Object} props
 * @return {!createjs.LoadItem}
 */
createjs.LoadItem.prototype.set = function(props) {};

/**
 * @constructor
 * @struct
 * @param {boolean=} preferXHR
 * @param {string=} basePath
 * @param {(string|boolean)=} crossOrigin
 */
createjs.LoadQueue = function(preferXHR, basePath, crossOrigin) {};
 /** @type {boolean} */
createjs.LoadQueue.prototype.maintainScriptOrder;
 /** @type {!createjs.LoadQueue} */
createjs.LoadQueue.prototype.next;
 /** @type {boolean} */
createjs.LoadQueue.prototype.stopOnError;

/**
 * @return {void}
 */
createjs.LoadQueue.prototype.close = function() {};

/**
 * @param {boolean} loaded
 * @return {!Array<!Object>}
 */
createjs.LoadQueue.prototype.getItems = function(loaded) {};

/**
 * @param {?} plugin
 * @return {void}
 */
createjs.LoadQueue.prototype.installPlugin = function(plugin) {};

/**
 * @param {(string|!Object)} file
 * @param {boolean=} loadNow
 * @param {string=} basePath
 * @return {void}
 */
createjs.LoadQueue.prototype.loadFile = function(file, loadNow, basePath) {};

/**
 * @param {(string|!Object|!Array<?>)} manifest
 * @param {boolean=} loadNow
 * @param {string=} basePath
 * @return {void}
 */
createjs.LoadQueue.prototype.loadManifest = function(manifest, loadNow, basePath) {};

/**
 * @param {!createjs.AbstractLoader} loader
 * @return {void}
 */
createjs.LoadQueue.prototype.registerLoader = function(loader) {};

/**
 * @param {(string|!Array<?>)} idsOrUrls
 * @return {void}
 */
createjs.LoadQueue.prototype.remove = function(idsOrUrls) {};

/**
 * @return {void}
 */
createjs.LoadQueue.prototype.removeAll = function() {};

/**
 * @return {void}
 */
createjs.LoadQueue.prototype.reset = function() {};

/**
 * @param {number} value
 * @return {void}
 */
createjs.LoadQueue.prototype.setMaxConnections = function(value) {};

/**
 * @param {boolean} value
 * @return {void}
 */
createjs.LoadQueue.prototype.setPaused = function(value) {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
createjs.LoadQueue.prototype.setPreferXHR = function(value) {};

/**
 * @deprecated - use 'preferXHR' property instead (or setUseXHR())
 * @param {boolean} value
 * @return {void}
 */
createjs.LoadQueue.prototype.setUseXHR = function(value) {};

/**
 * @param {!createjs.AbstractLoader} loader
 * @return {void}
 */
createjs.LoadQueue.prototype.unregisterLoader = function(loader) {};

/**
 * @constructor
 * @struct
 * @param {(!Object|!createjs.LoadItem)} loadItem
 */
createjs.ManifestLoader = function(loadItem) {};

/**
 * @param {(!Object|!createjs.LoadItem)} item
 * @return {boolean}
 */
createjs.ManifestLoader.canLoadItem = function(item) {};

/**
 * @constructor
 * @struct
 * @param {!createjs.LoadItem} loadItem
 * @param {(!HTMLAudioElement|!HTMLVideoElement)} tag
 * @param {string} srcAttribute
 */
createjs.MediaTagRequest = function(loadItem, tag, srcAttribute) {};
/**
 * @constructor
 * @struct
 */
createjs.PreloadJS = function() {};
 /** @type {string} */
createjs.PreloadJS.buildDate;
 /** @type {string} */
createjs.PreloadJS.version;

/**
 * @constructor
 * @struct
 * @param {number} loaded
 * @param {number=} total
 */
createjs.ProgressEvent = function(loaded, total) {};
 /** @type {number} */
createjs.ProgressEvent.prototype.loaded;
 /** @type {number} */
createjs.ProgressEvent.prototype.progress;
 /** @type {number} */
createjs.ProgressEvent.prototype.total;

/**
 * @return {!createjs.ProgressEvent}
 */
createjs.ProgressEvent.prototype.clone = function() {};
/**
 * @constructor
 * @struct
 */
createjs.RequestUtils = function() {};
 /** @type {!RegExp} */
createjs.RequestUtils.ABSOLUTE_PATH;
 /** @type {!RegExp} */
createjs.RequestUtils.EXTENSION_PATT;
 /** @type {!RegExp} */
createjs.RequestUtils.RELATIVE_PATH;

/**
 * @param {string} src
 * @param {!Object=} data
 * @return {string}
 */
createjs.RequestUtils.buildPath = function(src, data) {};

/**
 * @param {!Object} data
 * @param {!Array<!Object>=} query
 * @return {string}
 */
createjs.RequestUtils.formatQueryString = function(data, query) {};

/**
 * @param {string} extension
 * @return {string}
 */
createjs.RequestUtils.getTypeByExtension = function(extension) {};

/**
 * @param {!Object} item
 * @return {boolean}
 */
createjs.RequestUtils.isAudioTag = function(item) {};

/**
 * @param {string} type
 * @return {boolean}
 */
createjs.RequestUtils.isBinary = function(type) {};

/**
 * @param {!Object} item
 * @return {boolean}
 */
createjs.RequestUtils.isCrossDomain = function(item) {};

/**
 * @param {!Object} item
 * @return {boolean}
 */
createjs.RequestUtils.isImageTag = function(item) {};

/**
 * @param {!Object} item
 * @return {boolean}
 */
createjs.RequestUtils.isLocal = function(item) {};

/**
 * @param {string} type
 * @return {boolean}
 */
createjs.RequestUtils.isText = function(type) {};

/**
 * @param {!Object} item
 * @return {boolean}
 */
createjs.RequestUtils.isVideoTag = function(item) {};

/**
 * @param {string} path
 * @return {!Object}
 */
createjs.RequestUtils.parseURI = function(path) {};

/**
 * @constructor
 * @struct
 * @param {!Object} loadItem
 * @param {boolean} preferXHR
 */
createjs.SoundLoader = function(loadItem, preferXHR) {};

/**
 * @param {!Object} item
 * @return {boolean}
 */
createjs.SoundLoader.canLoadItem = function(item) {};

/**
 * @constructor
 * @struct
 * @param {!Object} loadItem
 */
createjs.SpriteSheetLoader = function(loadItem) {};

/**
 * @param {!Object} item
 * @return {boolean}
 */
createjs.SpriteSheetLoader.canLoadItem = function(item) {};

/**
 * @constructor
 * @struct
 * @param {!Object} loadItem
 * @param {boolean} preferXHR
 */
createjs.SVGLoader = function(loadItem, preferXHR) {};

/**
 * @param {!Object} item
 * @return {boolean}
 */
createjs.SVGLoader.canLoadItem = function(item) {};
/**
 * @constructor
 * @struct
 */
createjs.TagRequest = function() {};

/**
 * @constructor
 * @struct
 * @param {!Object} loadItem
 */
createjs.TextLoader = function(loadItem) {};

/**
 * @param {!Object} item
 * @return {boolean}
 */
createjs.TextLoader.canLoadItem = function(item) {};

/**
 * @constructor
 * @struct
 * @param {!Object} loadItem
 * @param {boolean} preferXHR
 */
createjs.VideoLoader = function(loadItem, preferXHR) {};

/**
 * @param {!Object} item
 * @return {boolean}
 */
createjs.VideoLoader.canLoadItem = function(item) {};

/**
 * @constructor
 * @struct
 * @param {!Object} item
 */
createjs.XHRRequest = function(item) {};

/**
 * @return {string}
 */
createjs.XHRRequest.prototype.getAllResponseHeaders = function() {};

/**
 * @param {string} header
 * @return {string}
 */
createjs.XHRRequest.prototype.getResponseHeader = function(header) {};

/**
 * @constructor
 * @struct
 * @param {!Object} loadItem
 */
createjs.XMLLoader = function(loadItem) {};

/**
 * @param {!Object} item
 * @return {boolean}
 */
createjs.XMLLoader.canLoadItem = function(item) {};
