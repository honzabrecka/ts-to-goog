/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/apigee-access/index.d.ts:
/** @const */
var ApigeeAccess = {};

/**
 * @param {?} request
 * @param {string} name
 * @return {(string|number|boolean)}
 */
ApigeeAccess.getVariable = function(request, name) {};

/**
 * @param {?} request
 * @param {string} name
 * @param {(string|number|boolean)} value
 * @return {void}
 */
ApigeeAccess.setVariable = function(request, name, value) {};

/**
 * @param {?} request
 * @param {string} name
 * @param {(string|number)} value
 * @return {void}
 */
ApigeeAccess.setIntVariable = function(request, name, value) {};

/**
 * @param {?} request
 * @param {string} name
 * @return {void}
 */
ApigeeAccess.deleteVariable = function(request, name) {};

/**
 * @param {string} name
 * @param {!ApigeeAccess.CacheOptions=} options
 * @return {?}
 */
ApigeeAccess.getCache = function(name, options) {};

/**
 * @param {string} name
 * @param {string=} scope
 * @return {!ApigeeAccess.SecureVault}
 */
ApigeeAccess.getVault = function(name, scope) {};

/**
 * @param {?=} options
 * @return {!ApigeeAccess.QuotaService}
 */
ApigeeAccess.getQuota = function(options) {};

/**
 * @return {string}
 */
ApigeeAccess.getMode = function() {};
/**
 * @record
 * @struct
 */
ApigeeAccess.CacheOptions = function() {};
 /** @type {string} */
ApigeeAccess.CacheOptions.prototype.resource;
 /** @type {string} */
ApigeeAccess.CacheOptions.prototype.scope;
 /** @type {number} */
ApigeeAccess.CacheOptions.prototype.defaultTtl;
 /** @type {number} */
ApigeeAccess.CacheOptions.prototype.timeout;
/**
 * @record
 * @struct
 */
ApigeeAccess.Cache = function() {};

/**
 * @param {string} key
 * @param {?} data
 * @param {number=} ttl
 * @param {function(?): void=} callback
 * @return {void}
 */
ApigeeAccess.Cache.prototype.put = function(key, data, ttl, callback) {};

/**
 * @param {string} key
 * @param {function(?, ?): void} callback
 * @return {void}
 */
ApigeeAccess.Cache.prototype.get = function(key, callback) {};

/**
 * @param {string} key
 * @param {function(?): void=} callback
 * @return {void}
 */
ApigeeAccess.Cache.prototype.remove = function(key, callback) {};
/**
 * @record
 * @struct
 */
ApigeeAccess.SecureVault = function() {};

/**
 * @param {function(?, ?): void} callback
 * @return {void}
 */
ApigeeAccess.SecureVault.prototype.getKeys = function(callback) {};

/**
 * @param {string} key
 * @param {function(?, ?): void} callback
 * @return {void}
 */
ApigeeAccess.SecureVault.prototype.get = function(key, callback) {};
/**
 * @record
 * @struct
 */
ApigeeAccess.QuotaService = function() {};

/**
 * @param {!ApigeeAccess.QuotaServiceApplyOptions=} options
 * @param {function(?, !ApigeeAccess.QuotaServiceApplyCallbackData): void=} callback
 * @return {void}
 */
ApigeeAccess.QuotaService.prototype.apply = function(options, callback) {};
/**
 * @record
 * @struct
 */
ApigeeAccess.QuotaServiceApplyOptions = function() {};
 /** @type {string} */
ApigeeAccess.QuotaServiceApplyOptions.prototype.identifier;
 /** @type {string} */
ApigeeAccess.QuotaServiceApplyOptions.prototype.timeUnit;
 /** @type {number} */
ApigeeAccess.QuotaServiceApplyOptions.prototype.allow;
 /** @type {number} */
ApigeeAccess.QuotaServiceApplyOptions.prototype.interval;
 /** @type {number} */
ApigeeAccess.QuotaServiceApplyOptions.prototype.weight;
/**
 * @record
 * @struct
 */
ApigeeAccess.QuotaServiceApplyCallbackData = function() {};
 /** @type {number} */
ApigeeAccess.QuotaServiceApplyCallbackData.prototype.used;
 /** @type {number} */
ApigeeAccess.QuotaServiceApplyCallbackData.prototype.allowed;
 /** @type {boolean} */
ApigeeAccess.QuotaServiceApplyCallbackData.prototype.isAllowed;
 /** @type {number} */
ApigeeAccess.QuotaServiceApplyCallbackData.prototype.expiryTime;
 /** @type {number} */
ApigeeAccess.QuotaServiceApplyCallbackData.prototype.timestamp;

/* TODO: ExportAssignment in  */
