/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/nunjucks/index.d.ts:
/** @const */
var Nunjucks = {};

/**
 * @param {string} name
 * @param {!Object=} context
 * @param {function(?, string): ?=} callback
 * @return {string|void}
 */
Nunjucks.render = function(name, context, callback) {};

/**
 * @param {string} src
 * @param {!Object} context
 * @param {function(?, string): ?=} callback
 * @return {string|void}
 */
Nunjucks.renderString = function(src, context, callback) {};

/**
 * @param {string} src
 * @param {!Nunjucks.Environment=} env
 * @param {function(?, !Nunjucks.Template): ?=} callback
 * @return {!Nunjucks.Template}
 */
Nunjucks.compile = function(src, env, callback) {};

/**
 * @param {string} path
 * @param {!Nunjucks.PrecompileOptions=} opts
 * @return {string}
 */
Nunjucks.precompile = function(path, opts) {};

/**
 * @param {string} src
 * @param {!Nunjucks.PrecompileOptions=} opts
 * @return {string}
 */
Nunjucks.precompileString = function(src, opts) {};
/**
 * @record
 * @struct
 */
Nunjucks.PrecompileOptions = function() {};
 /** @type {string} */
Nunjucks.PrecompileOptions.prototype.name;
 /** @type {boolean} */
Nunjucks.PrecompileOptions.prototype.asFunction;
 /** @type {boolean} */
Nunjucks.PrecompileOptions.prototype.force;
 /** @type {!Nunjucks.Environment} */
Nunjucks.PrecompileOptions.prototype.env;
 /** @type {!Array<string>} */
Nunjucks.PrecompileOptions.prototype.include;
 /** @type {!Array<string>} */
Nunjucks.PrecompileOptions.prototype.exclude;

/**
 * @param {{name: string, template: string}} templates
 * @param {!Nunjucks.PrecompileOptions} opts
 * @return {string}
 */
Nunjucks.PrecompileOptions.prototype.wrapper = function(templates, opts) {};

/**
 * @constructor
 * @struct
 * @param {string} src
 * @param {!Nunjucks.Environment=} env
 * @param {boolean=} eagerCompile
 */
Nunjucks.Template = function(src, env, eagerCompile) {};

/**
 * @param {!Object=} context
 * @param {function(?, string): ?=} callback
 * @return {string|void}
 */
Nunjucks.Template.prototype.render = function(context, callback) {};

/**
 * @param {!Nunjucks.ConfigureOptions|string|!Array<string>} options_or_path
 * @param {!Nunjucks.ConfigureOptions=} options
 * @return {!Nunjucks.Environment}
 */
Nunjucks.configure = function(options_or_path, options) {};
/**
 * @record
 * @struct
 */
Nunjucks.ConfigureOptions = function() {};
 /** @type {boolean} */
Nunjucks.ConfigureOptions.prototype.autoescape;
 /** @type {boolean} */
Nunjucks.ConfigureOptions.prototype.throwOnUndefined;
 /** @type {boolean} */
Nunjucks.ConfigureOptions.prototype.trimBlocks;
 /** @type {boolean} */
Nunjucks.ConfigureOptions.prototype.lstripBlocks;
 /** @type {boolean} */
Nunjucks.ConfigureOptions.prototype.watch;
 /** @type {boolean} */
Nunjucks.ConfigureOptions.prototype.noCache;
 /** @type {{useCache: boolean, async: boolean}} */
Nunjucks.ConfigureOptions.prototype.web;
 /** @type {!Object} */
Nunjucks.ConfigureOptions.prototype.express;
 /** @type {{blockStart: string, blockEnd: string, variableStart: string, variableEnd: string, commentStart: string, commentEnd: string}} */
Nunjucks.ConfigureOptions.prototype.tags;

/**
 * @constructor
 * @struct
 * @param {!Nunjucks.ILoader|!Array<!Nunjucks.ILoader>=} loader_or_loaders
 * @param {!Nunjucks.ConfigureOptions=} opts
 */
Nunjucks.Environment = function(loader_or_loaders, opts) {};
 /** @type {{autoescape: boolean}} */
Nunjucks.Environment.prototype.options;

/**
 * @param {string} name
 * @param {!Object=} context
 * @param {function(?, string): ?=} callback
 * @return {string|void}
 */
Nunjucks.Environment.prototype.render = function(name, context, callback) {};

/**
 * @param {string} name
 * @param {!Object} context
 * @param {function(?, string): ?=} callback
 * @return {string|void}
 */
Nunjucks.Environment.prototype.renderString = function(name, context, callback) {};

/**
 * @param {string} name
 * @param {function(!Array<?>): ?} func
 * @param {boolean=} async
 * @return {void}
 */
Nunjucks.Environment.prototype.addFilter = function(name, func, async) {};

/**
 * @param {string} name
 * @return {void}
 */
Nunjucks.Environment.prototype.getFilter = function(name) {};

/**
 * @param {string} name
 * @param {!Nunjucks.Extension} ext
 * @return {void}
 */
Nunjucks.Environment.prototype.addExtension = function(name, ext) {};

/**
 * @param {string} name
 * @return {void}
 */
Nunjucks.Environment.prototype.removeExtension = function(name) {};

/**
 * @param {string} name
 * @return {!Nunjucks.Extension}
 */
Nunjucks.Environment.prototype.getExtension = function(name) {};

/**
 * @param {string} name
 * @return {void}
 */
Nunjucks.Environment.prototype.hasExtension = function(name) {};

/**
 * @param {string} name
 * @param {?} value
 * @return {void}
 */
Nunjucks.Environment.prototype.addGlobal = function(name, value) {};

/**
 * @param {string} name
 * @param {boolean=} eagerCompile
 * @param {function(?, !Nunjucks.Template): !Nunjucks.Template=} callback
 * @return {!Nunjucks.Template|void}
 */
Nunjucks.Environment.prototype.getTemplate = function(name, eagerCompile, callback) {};

/**
 * @param {!Object} app
 * @return {void}
 */
Nunjucks.Environment.prototype.express = function(app) {};
/**
 * @record
 * @struct
 */
Nunjucks.Extension = function() {};
 /** @type {!Array<string>} */
Nunjucks.Extension.prototype.tags;

/**
 * @param {?} parser
 * @param {?} nodes
 * @param {?} lexer
 * @return {?}
 */
Nunjucks.Extension.prototype.parse = function(parser, nodes, lexer) {};

/**
 * @return {void}
 */
Nunjucks.installJinjaCompat = function() {};
/**
 * @record
 * @struct
 */
Nunjucks.ILoader = function() {};
 /** @type {boolean} */
Nunjucks.ILoader.prototype.async;

/**
 * @param {string} name
 * @return {!Nunjucks.LoaderSource}
 */
Nunjucks.ILoader.prototype.getSource = function(name) {};

/**
 * @param {!Nunjucks.ILoader} extender
 * @return {!Nunjucks.ILoader}
 */
Nunjucks.ILoader.prototype.extend = function(extender) {};
/**
 * @constructor
 * @struct
 */
Nunjucks.Loader = function() {};

/**
 * @param {string} name
 * @param {function(!Array<?>): ?} func
 * @return {void}
 */
Nunjucks.Loader.prototype.on = function(name, func) {};

/**
 * @param {string} name
 * @param {...?} args
 * @return {void}
 */
Nunjucks.Loader.prototype.emit = function(name, args) {};

/**
 * @param {string} from
 * @param {string} to
 * @return {string}
 */
Nunjucks.Loader.prototype.resolve = function(from, to) {};

/**
 * @param {string} filename
 * @return {boolean}
 */
Nunjucks.Loader.prototype.isRelative = function(filename) {};

/**
 * @param {!Nunjucks.ILoader} toExtend
 * @return {!Nunjucks.ILoader}
 */
Nunjucks.Loader.prototype.extend = function(toExtend) {};
/**
 * @record
 * @struct
 */
Nunjucks.LoaderSource = function() {};
 /** @type {string} */
Nunjucks.LoaderSource.prototype.src;
 /** @type {string} */
Nunjucks.LoaderSource.prototype.path;
 /** @type {boolean} */
Nunjucks.LoaderSource.prototype.noCache;
/**
 * @record
 * @struct
 */
Nunjucks.FileSystemLoaderOptions = function() {};
 /** @type {boolean} */
Nunjucks.FileSystemLoaderOptions.prototype.watch;
 /** @type {boolean} */
Nunjucks.FileSystemLoaderOptions.prototype.noCache;

/**
 * @constructor
 * @struct
 * @param {(string|!Array<string>)=} searchPaths
 * @param {!Nunjucks.FileSystemLoaderOptions=} opts
 */
Nunjucks.FileSystemLoader = function(searchPaths, opts) {};

/**
 * @param {!Array<string>} searchPaths
 * @param {?} opts
 * @return {void}
 */
Nunjucks.FileSystemLoader.prototype.init = function(searchPaths, opts) {};

/**
 * @param {string} name
 * @return {!Nunjucks.LoaderSource}
 */
Nunjucks.FileSystemLoader.prototype.getSource = function(name) {};

/**
 * @constructor
 * @struct
 * @param {string} baseUrl
 * @param {?=} opts
 */
Nunjucks.WebLoader = function(baseUrl, opts) {};

/**
 * @param {string} name
 * @return {!Nunjucks.LoaderSource}
 */
Nunjucks.WebLoader.prototype.getSource = function(name) {};
/**
 * @extends {Nunjucks.Loader}
 * @implements {Nunjucks.ILoader}
 * @constructor
 * @struct
 */
Nunjucks.PrecompiledLoader = function() {};

/**
 * @param {!Array<string>} searchPaths
 * @param {?} opts
 * @return {void}
 */
Nunjucks.PrecompiledLoader.prototype.init = function(searchPaths, opts) {};

/**
 * @param {string} name
 * @return {!Nunjucks.LoaderSource}
 */
Nunjucks.PrecompiledLoader.prototype.getSource = function(name) {};

/* TODO: ExportAssignment in  */
