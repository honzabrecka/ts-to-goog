/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/webpack/index.d.ts:

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: ExportAssignment in  */

/**
 * @param {!webpack.Configuration|!Array<!webpack.Configuration>=} options
 * @param {function(!Error, !webpack.Stats): void=} handler
 * @return {(!webpack.Compiler.Watching|!webpack.Compiler)|!webpack.Compiler|(!webpack.MultiWatching|!webpack.MultiCompiler)|!webpack.MultiCompiler}
 */
function webpack(options, handler) {}
/**
 * @record
 * @struct
 */
webpack.Configuration = function() {};
 /** @type {string} */
webpack.Configuration.prototype.name;
 /** @type {string} */
webpack.Configuration.prototype.context;
 /** @type {(string|!Array<string>|!webpack.Entry)} */
webpack.Configuration.prototype.entry;
 /** @type {(boolean|string)} */
webpack.Configuration.prototype.devtool;
 /** @type {!webpack.Output} */
webpack.Configuration.prototype.output;
 /** @type {(!webpack.OldModule|!webpack.NewModule)} */
webpack.Configuration.prototype.module;
 /** @type {(!webpack.OldResolve|!webpack.NewResolve)} */
webpack.Configuration.prototype.resolve;
 /** @type {(!webpack.OldResolveLoader|!webpack.NewResolveLoader)} */
webpack.Configuration.prototype.resolveLoader;
 /** @type {(string|!RegExp|!webpack.ExternalsObjectElement|function(?, ?, function(?, ?): void): ?|!Array<(string|!RegExp|!webpack.ExternalsObjectElement|?)>)} */
webpack.Configuration.prototype.externals;
 /** @type {(string|function(?): void)} */
webpack.Configuration.prototype.target;
 /** @type {boolean} */
webpack.Configuration.prototype.bail;
 /** @type {boolean} */
webpack.Configuration.prototype.profile;
 /** @type {?} */
webpack.Configuration.prototype.cache;
 /** @type {boolean} */
webpack.Configuration.prototype.watch;
 /** @type {!webpack.ICompiler.WatchOptions} */
webpack.Configuration.prototype.watchOptions;
 /** @type {boolean} */
webpack.Configuration.prototype.debug;
 /** @type {?} */
webpack.Configuration.prototype.devServer;
 /** @type {!webpack.Node} */
webpack.Configuration.prototype.node;
 /** @type {!Object<string,boolean>} */
webpack.Configuration.prototype.amd;
 /** @type {string} */
webpack.Configuration.prototype.recordsPath;
 /** @type {string} */
webpack.Configuration.prototype.recordsInputPath;
 /** @type {string} */
webpack.Configuration.prototype.recordsOutputPath;
 /** @type {!Array<!webpack.Plugin>} */
webpack.Configuration.prototype.plugins;
 /** @type {(boolean|string|!webpack.Stats.ToStringOptionsObject)} */
webpack.Configuration.prototype.stats;
 /** @type {!webpack.Options.Performance} */
webpack.Configuration.prototype.performance;
/**
 * @record
 * @struct
 */
webpack.Entry = function() {};

/* TODO: IndexSignature: webpack */
/**
 * @record
 * @struct
 */
webpack.DevtoolModuleFilenameTemplateInfo = function() {};
 /** @type {string} */
webpack.DevtoolModuleFilenameTemplateInfo.prototype.identifier;
 /** @type {string} */
webpack.DevtoolModuleFilenameTemplateInfo.prototype.shortIdentifier;
 /** @type {?} */
webpack.DevtoolModuleFilenameTemplateInfo.prototype.resource;
 /** @type {string} */
webpack.DevtoolModuleFilenameTemplateInfo.prototype.resourcePath;
 /** @type {string} */
webpack.DevtoolModuleFilenameTemplateInfo.prototype.absoluteResourcePath;
 /** @type {!Array<?>} */
webpack.DevtoolModuleFilenameTemplateInfo.prototype.allLoaders;
 /** @type {string} */
webpack.DevtoolModuleFilenameTemplateInfo.prototype.query;
 /** @type {string} */
webpack.DevtoolModuleFilenameTemplateInfo.prototype.moduleId;
 /** @type {string} */
webpack.DevtoolModuleFilenameTemplateInfo.prototype.hash;
/**
 * @record
 * @struct
 */
webpack.Output = function() {};
 /** @type {string} */
webpack.Output.prototype.path;
 /** @type {string} */
webpack.Output.prototype.filename;
 /** @type {string} */
webpack.Output.prototype.chunkFilename;
 /** @type {string} */
webpack.Output.prototype.sourceMapFilename;
 /** @type {(string|function(!webpack.DevtoolModuleFilenameTemplateInfo): string)} */
webpack.Output.prototype.devtoolModuleFilenameTemplate;
 /** @type {(string|function(!webpack.DevtoolModuleFilenameTemplateInfo): string)} */
webpack.Output.prototype.devtoolFallbackModuleFilenameTemplate;
 /** @type {boolean} */
webpack.Output.prototype.devtoolLineToLine;
 /** @type {string} */
webpack.Output.prototype.hotUpdateChunkFilename;
 /** @type {string} */
webpack.Output.prototype.hotUpdateMainFilename;
 /** @type {string} */
webpack.Output.prototype.publicPath;
 /** @type {string} */
webpack.Output.prototype.jsonpFunction;
 /** @type {string} */
webpack.Output.prototype.hotUpdateFunction;
 /** @type {boolean} */
webpack.Output.prototype.pathinfo;
 /** @type {string} */
webpack.Output.prototype.library;
 /** @type {string} */
webpack.Output.prototype.libraryTarget;
 /** @type {boolean} */
webpack.Output.prototype.umdNamedDefine;
 /** @type {string} */
webpack.Output.prototype.sourcePrefix;
 /** @type {(string|boolean)} */
webpack.Output.prototype.crossOriginLoading;
/**
 * @record
 * @struct
 */
webpack.BaseModule = function() {};
 /** @type {!Array<(!webpack.OldLoaderRule|!webpack.NewLoaderRule|!webpack.OldUseRule|!webpack.NewUseRule|!webpack.RulesRule|!webpack.OneOfRule)>} */
webpack.BaseModule.prototype.preLoaders;
 /** @type {!Array<(!webpack.OldLoaderRule|!webpack.NewLoaderRule|!webpack.OldUseRule|!webpack.NewUseRule|!webpack.RulesRule|!webpack.OneOfRule)>} */
webpack.BaseModule.prototype.postLoaders;
 /** @type {(!RegExp|!Array<!RegExp>)} */
webpack.BaseModule.prototype.noParse;
 /** @type {string} */
webpack.BaseModule.prototype.unknownContextRequest;
 /** @type {boolean} */
webpack.BaseModule.prototype.unknownContextRecursive;
 /** @type {!RegExp} */
webpack.BaseModule.prototype.unknownContextRegExp;
 /** @type {boolean} */
webpack.BaseModule.prototype.unknownContextCritical;
 /** @type {string} */
webpack.BaseModule.prototype.exprContextRequest;
 /** @type {!RegExp} */
webpack.BaseModule.prototype.exprContextRegExp;
 /** @type {boolean} */
webpack.BaseModule.prototype.exprContextRecursive;
 /** @type {boolean} */
webpack.BaseModule.prototype.exprContextCritical;
 /** @type {!RegExp} */
webpack.BaseModule.prototype.wrappedContextRegExp;
 /** @type {boolean} */
webpack.BaseModule.prototype.wrappedContextRecursive;
 /** @type {boolean} */
webpack.BaseModule.prototype.wrappedContextCritical;
 /** @type {boolean} */
webpack.BaseModule.prototype.strictExportPresence;
/**
 * @extends {webpack.BaseModule}
 * @record
 * @struct
 */
webpack.OldModule = function() {};
 /** @type {!Array<(!webpack.OldLoaderRule|!webpack.NewLoaderRule|!webpack.OldUseRule|!webpack.NewUseRule|!webpack.RulesRule|!webpack.OneOfRule)>} */
webpack.OldModule.prototype.loaders;
/**
 * @extends {webpack.BaseModule}
 * @record
 * @struct
 */
webpack.NewModule = function() {};
 /** @type {!Array<(!webpack.OldLoaderRule|!webpack.NewLoaderRule|!webpack.OldUseRule|!webpack.NewUseRule|!webpack.RulesRule|!webpack.OneOfRule)>} */
webpack.NewModule.prototype.rules;

/** @typedef {(!webpack.OldModule|!webpack.NewModule)} */
webpack.Module;
/**
 * @record
 * @struct
 */
webpack.NewResolve = function() {};
 /** @type {!Array<string>} */
webpack.NewResolve.prototype.modules;
 /** @type {!Array<string>} */
webpack.NewResolve.prototype.descriptionFiles;
 /** @type {!Array<string>} */
webpack.NewResolve.prototype.mainFields;
 /** @type {!Array<string>} */
webpack.NewResolve.prototype.aliasFields;
 /** @type {!Array<string>} */
webpack.NewResolve.prototype.mainFiles;
 /** @type {!Array<string>} */
webpack.NewResolve.prototype.extensions;
 /** @type {boolean} */
webpack.NewResolve.prototype.enforceExtension;
 /** @type {!Object<string,string>} */
webpack.NewResolve.prototype.alias;
 /** @type {(boolean|!Object)} */
webpack.NewResolve.prototype.unsafeCache;
 /** @type {!Array<!webpack.ResolvePlugin>} */
webpack.NewResolve.prototype.plugins;
 /** @type {boolean} */
webpack.NewResolve.prototype.symlinks;

/**
 * A function used to decide whether to cache the given resolve request.
 * 
 * Defaults to `() => true`.
 * @param {{path: string, request: string}} data
 * @return {boolean}
 */
webpack.NewResolve.prototype.cachePredicate = function(data) {};
/**
 * @record
 * @struct
 */
webpack.OldResolve = function() {};
 /** @type {!Object<string,string>} */
webpack.OldResolve.prototype.alias;
 /** @type {(string|!Array<string>)} */
webpack.OldResolve.prototype.root;
 /** @type {!Array<string>} */
webpack.OldResolve.prototype.modulesDirectories;
 /** @type {(string|!Array<string>)} */
webpack.OldResolve.prototype.fallback;
 /** @type {!Array<string>} */
webpack.OldResolve.prototype.extensions;
 /** @type {!Array<(string|!Array<string>)>} */
webpack.OldResolve.prototype.packageMains;
 /** @type {!Array<(string|!Array<string>)>} */
webpack.OldResolve.prototype.packageAlias;
 /** @type {(boolean|!RegExp|!Array<!RegExp>)} */
webpack.OldResolve.prototype.unsafeCache;

/** @typedef {(!webpack.OldResolve|!webpack.NewResolve)} */
webpack.Resolve;
/**
 * @extends {webpack.OldResolve}
 * @record
 * @struct
 */
webpack.OldResolveLoader = function() {};
 /** @type {!Array<string>} */
webpack.OldResolveLoader.prototype.moduleTemplates;
/**
 * @extends {webpack.NewResolve}
 * @record
 * @struct
 */
webpack.NewResolveLoader = function() {};
 /** @type {!Array<string>} */
webpack.NewResolveLoader.prototype.moduleExtensions;
 /** @type {boolean} */
webpack.NewResolveLoader.prototype.enforceModuleExtension;

/** @typedef {(!webpack.OldResolveLoader|!webpack.NewResolveLoader)} */
webpack.ResolveLoader;

/** @typedef {(string|!RegExp|!webpack.ExternalsObjectElement|function(?, ?, function(?, ?): void): ?)} */
webpack.ExternalsElement;
/**
 * @record
 * @struct
 */
webpack.ExternalsObjectElement = function() {};

/* TODO: IndexSignature: webpack */

/** @typedef {function(?, ?, function(?, ?): void): ?} */
webpack.ExternalsFunctionElement;
/**
 * @record
 * @struct
 */
webpack.Node = function() {};
 /** @type {boolean} */
webpack.Node.prototype.console;
 /** @type {boolean} */
webpack.Node.prototype.global;
 /** @type {boolean} */
webpack.Node.prototype.process;
 /** @type {boolean} */
webpack.Node.prototype.Buffer;
 /** @type {(string|boolean)} */
webpack.Node.prototype.__filename;
 /** @type {(string|boolean)} */
webpack.Node.prototype.__dirname;

/* TODO: IndexSignature: webpack */
/**
 * @record
 * @struct
 */
webpack.BaseConditionSpec = function() {};
 /** @type {(string|!RegExp|function(string): boolean|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray)} */
webpack.BaseConditionSpec.prototype.include;
 /** @type {(string|!RegExp|function(string): boolean|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray)} */
webpack.BaseConditionSpec.prototype.exclude;
/**
 * @extends {webpack.BaseConditionSpec}
 * @record
 * @struct
 */
webpack.TestConditionSpec = function() {};
 /** @type {(string|!RegExp|function(string): boolean|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray)} */
webpack.TestConditionSpec.prototype.test;
/**
 * @extends {webpack.BaseConditionSpec}
 * @record
 * @struct
 */
webpack.AndConditionSpec = function() {};
 /** @type {!Array<(string|!RegExp|function(string): boolean|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray)>} */
webpack.AndConditionSpec.prototype.and;
/**
 * @extends {webpack.BaseConditionSpec}
 * @record
 * @struct
 */
webpack.OrConditionSpec = function() {};
 /** @type {!Array<(string|!RegExp|function(string): boolean|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray)>} */
webpack.OrConditionSpec.prototype.or;
/**
 * @extends {webpack.BaseConditionSpec}
 * @record
 * @struct
 */
webpack.NotConditionSpec = function() {};
 /** @type {(string|!RegExp|function(string): boolean|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray)} */
webpack.NotConditionSpec.prototype.not;

/** @typedef {(!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec)} */
webpack.ConditionSpec;
/**
 * @record
 * @struct
 */
webpack.ConditionArray = function() {};

/** @typedef {(string|!RegExp|function(string): boolean|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray)} */
webpack.Condition;
/**
 * @record
 * @struct
 */
webpack.OldLoader = function() {};
 /** @type {string} */
webpack.OldLoader.prototype.loader;
 /** @type {!Object<string,?>} */
webpack.OldLoader.prototype.query;
/**
 * @record
 * @struct
 */
webpack.NewLoader = function() {};
 /** @type {string} */
webpack.NewLoader.prototype.loader;
 /** @type {!Object<string,?>} */
webpack.NewLoader.prototype.options;

/** @typedef {(string|!webpack.OldLoader|!webpack.NewLoader)} */
webpack.Loader;
/**
 * @record
 * @struct
 */
webpack.BaseRule = function() {};
 /** @type {string} */
webpack.BaseRule.prototype.enforce;
 /** @type {(string|!RegExp|function(string): boolean|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray|!Array<(string|!RegExp|?|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray)>)} */
webpack.BaseRule.prototype.test;
 /** @type {(string|!RegExp|function(string): boolean|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray|!Array<(string|!RegExp|?|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray)>)} */
webpack.BaseRule.prototype.exclude;
 /** @type {(string|!RegExp|function(string): boolean|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray|!Array<(string|!RegExp|?|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray)>)} */
webpack.BaseRule.prototype.include;
 /** @type {(string|!RegExp|function(string): boolean|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray|!Array<(string|!RegExp|?|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray)>)} */
webpack.BaseRule.prototype.resource;
 /** @type {(string|!RegExp|function(string): boolean|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray|!Array<(string|!RegExp|?|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray)>)} */
webpack.BaseRule.prototype.issuer;
 /** @type {!Object<string,?>} */
webpack.BaseRule.prototype.parser;
 /** @type {!Array<(!webpack.OldLoaderRule|!webpack.NewLoaderRule|!webpack.OldUseRule|!webpack.NewUseRule|!webpack.RulesRule|!webpack.OneOfRule)>} */
webpack.BaseRule.prototype.rules;
 /** @type {!Array<(!webpack.OldLoaderRule|!webpack.NewLoaderRule|!webpack.OldUseRule|!webpack.NewUseRule|!webpack.RulesRule|!webpack.OneOfRule)>} */
webpack.BaseRule.prototype.oneOf;
/**
 * @extends {webpack.BaseRule}
 * @record
 * @struct
 */
webpack.BaseDirectRule = function() {};
 /** @type {(string|!RegExp|function(string): boolean|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray|!Array<(string|!RegExp|?|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray)>)} */
webpack.BaseDirectRule.prototype.test;
/**
 * @extends {webpack.BaseDirectRule}
 * @record
 * @struct
 */
webpack.BaseSingleLoaderRule = function() {};
 /** @type {(string|!webpack.OldLoader|!webpack.NewLoader)} */
webpack.BaseSingleLoaderRule.prototype.loader;
/**
 * @extends {webpack.BaseSingleLoaderRule}
 * @record
 * @struct
 */
webpack.OldLoaderRule = function() {};
 /** @type {!Object<string,?>} */
webpack.OldLoaderRule.prototype.query;
/**
 * @extends {webpack.BaseSingleLoaderRule}
 * @record
 * @struct
 */
webpack.NewLoaderRule = function() {};
 /** @type {!Object<string,?>} */
webpack.NewLoaderRule.prototype.options;

/** @typedef {(!webpack.OldLoaderRule|!webpack.NewLoaderRule)} */
webpack.LoaderRule;
/**
 * @extends {webpack.BaseDirectRule}
 * @record
 * @struct
 */
webpack.OldUseRule = function() {};
 /** @type {!Array<string>} */
webpack.OldUseRule.prototype.loaders;
/**
 * @extends {webpack.BaseDirectRule}
 * @record
 * @struct
 */
webpack.NewUseRule = function() {};
 /** @type {(string|!webpack.OldLoader|!webpack.NewLoader|!Array<(string|!webpack.OldLoader|!webpack.NewLoader)>)} */
webpack.NewUseRule.prototype.use;

/** @typedef {(!webpack.OldUseRule|!webpack.NewUseRule)} */
webpack.UseRule;
/**
 * @extends {webpack.BaseRule}
 * @record
 * @struct
 */
webpack.RulesRule = function() {};
 /** @type {!Array<(!webpack.OldLoaderRule|!webpack.NewLoaderRule|!webpack.OldUseRule|!webpack.NewUseRule|!webpack.RulesRule|!webpack.OneOfRule)>} */
webpack.RulesRule.prototype.rules;
/**
 * @extends {webpack.BaseRule}
 * @record
 * @struct
 */
webpack.OneOfRule = function() {};
 /** @type {!Array<(!webpack.OldLoaderRule|!webpack.NewLoaderRule|!webpack.OldUseRule|!webpack.NewUseRule|!webpack.RulesRule|!webpack.OneOfRule)>} */
webpack.OneOfRule.prototype.oneOf;

/** @typedef {(!webpack.OldLoaderRule|!webpack.NewLoaderRule|!webpack.OldUseRule|!webpack.NewUseRule|!webpack.RulesRule|!webpack.OneOfRule)} */
webpack.Rule;
/** @const */
webpack.Options = {};

/** @typedef {(boolean|string)} */
webpack.Options.Devtool;
/**
 * @record
 * @struct
 */
webpack.Options.Performance = function() {};
 /** @type {(boolean|string)} */
webpack.Options.Performance.prototype.hints;
 /** @type {number} */
webpack.Options.Performance.prototype.maxAssetSize;
 /** @type {number} */
webpack.Options.Performance.prototype.maxEntrypointSize;

/**
 * This property allows webpack to control what files are used to calculate performance hints.
 * @param {string} assetFilename
 * @return {boolean}
 */
webpack.Options.Performance.prototype.assetFilter = function(assetFilename) {};

/** @typedef {(boolean|string|!webpack.Stats.ToStringOptionsObject)} */
webpack.Options.Stats;

/** @typedef {!webpack.ICompiler.WatchOptions} */
webpack.Options.WatchOptions;
/**
 * @record
 * @struct
 */
webpack.ICompiler = function() {};

/**
 * @param {function(!Error, !webpack.Stats): void} handler
 * @return {void}
 */
webpack.ICompiler.prototype.run = function(handler) {};

/**
 * @param {!webpack.ICompiler.WatchOptions} watchOptions
 * @param {function(!Error, !webpack.Stats): void} handler
 * @return {!webpack.Watching}
 */
webpack.ICompiler.prototype.watch = function(watchOptions, handler) {};

/** @typedef {function(!Error, !webpack.Stats): void} */
webpack.ICompiler.Handler;
/**
 * @record
 * @struct
 */
webpack.ICompiler.WatchOptions = function() {};
 /** @type {number} */
webpack.ICompiler.WatchOptions.prototype.aggregateTimeout;
 /** @type {(string|!RegExp)} */
webpack.ICompiler.WatchOptions.prototype.ignored;
 /** @type {(number|boolean)} */
webpack.ICompiler.WatchOptions.prototype.poll;
/**
 * @record
 * @struct
 */
webpack.Watching = function() {};

/**
 * @param {function(): void} callback
 * @return {void}
 */
webpack.Watching.prototype.close = function(callback) {};

/**
 * @return {void}
 */
webpack.Watching.prototype.invalidate = function() {};

/**
 * @constructor
 * @struct
 */
webpack.Compiler = function() {};
 /** @type {string} */
webpack.Compiler.prototype.name;
 /** @type {!webpack.Configuration} */
webpack.Compiler.prototype.options;
 /** @type {?} */
webpack.Compiler.prototype.outputFileSystem;

/**
 * @param {function(!Error, !webpack.Stats): void} handler
 * @return {void}
 */
webpack.Compiler.prototype.run = function(handler) {};

/**
 * @param {!webpack.ICompiler.WatchOptions} watchOptions
 * @param {function(!Error, !webpack.Stats): void} handler
 * @return {!webpack.Compiler.Watching}
 */
webpack.Compiler.prototype.watch = function(watchOptions, handler) {};

/** @typedef {function(!Error, !webpack.Stats): void} */
webpack.Compiler.Handler;

/** @typedef {!webpack.ICompiler.WatchOptions} */
webpack.Compiler.WatchOptions;

/**
 * @constructor
 * @struct
 * @param {!webpack.Compiler} compiler
 * @param {!webpack.ICompiler.WatchOptions} watchOptions
 * @param {function(!Error, !webpack.Stats): void} handler
 */
webpack.Compiler.Watching = function(compiler, watchOptions, handler) {};

/**
 * @param {function(): void} callback
 * @return {void}
 */
webpack.Compiler.Watching.prototype.close = function(callback) {};

/**
 * @return {void}
 */
webpack.Compiler.Watching.prototype.invalidate = function() {};

/** @typedef {!webpack.ICompiler.WatchOptions} */
webpack.Compiler.Watching.WatchOptions;

/** @typedef {function(!Error, !webpack.Stats): void} */
webpack.Compiler.Watching.Handler;
/**
 * @implements {webpack.ICompiler}
 * @constructor
 * @struct
 */
webpack.MultiCompiler = function() {};

/**
 * @param {function(!Error, !webpack.Stats): void} handler
 * @return {void}
 */
webpack.MultiCompiler.prototype.run = function(handler) {};

/**
 * @param {!webpack.ICompiler.WatchOptions} watchOptions
 * @param {function(!Error, !webpack.Stats): void} handler
 * @return {!webpack.MultiWatching}
 */
webpack.MultiCompiler.prototype.watch = function(watchOptions, handler) {};

/** @typedef {function(!Error, !webpack.Stats): void} */
webpack.MultiCompiler.Handler;

/** @typedef {!webpack.ICompiler.WatchOptions} */
webpack.MultiCompiler.WatchOptions;
/**
 * @implements {webpack.Watching}
 * @constructor
 * @struct
 */
webpack.MultiWatching = function() {};

/**
 * @param {function(): void} callback
 * @return {void}
 */
webpack.MultiWatching.prototype.close = function(callback) {};

/**
 * @return {void}
 */
webpack.MultiWatching.prototype.invalidate = function() {};
/**
 * @implements {Tapable.Plugin}
 * @constructor
 * @struct
 */
webpack.Plugin = function() {};

/**
 * @param {!webpack.Compiler} compiler
 * @return {void}
 */
webpack.Plugin.prototype.apply = function(compiler) {};
/**
 * @implements {Tapable.Plugin}
 * @constructor
 * @struct
 */
webpack.ResolvePlugin = function() {};

/**
 * @param {?} resolver
 * @return {void}
 */
webpack.ResolvePlugin.prototype.apply = function(resolver) {};
/**
 * @constructor
 * @struct
 */
webpack.Stats = function() {};

/**
 * Returns true if there were errors while compiling.
 * @return {boolean}
 */
webpack.Stats.prototype.hasErrors = function() {};

/**
 * Returns true if there were warnings while compiling.
 * @return {boolean}
 */
webpack.Stats.prototype.hasWarnings = function() {};

/**
 * Returns compilation information as a JSON object.
 * @param {(boolean|string|!webpack.Stats.ToJsonOptionsObject)=} options
 * @return {?}
 */
webpack.Stats.prototype.toJson = function(options) {};

/**
 * Returns a formatted string of the compilation information (similar to CLI output).
 * @param {(boolean|string|!webpack.Stats.ToStringOptionsObject)=} options
 * @return {string}
 */
webpack.Stats.prototype.toString = function(options) {};

/** @typedef {(boolean|string)} */
webpack.Stats.Preset;
/**
 * @record
 * @struct
 */
webpack.Stats.ToJsonOptionsObject = function() {};
 /** @type {boolean} */
webpack.Stats.ToJsonOptionsObject.prototype.assets;
 /** @type {string} */
webpack.Stats.ToJsonOptionsObject.prototype.assetsSort;
 /** @type {boolean} */
webpack.Stats.ToJsonOptionsObject.prototype.cached;
 /** @type {boolean} */
webpack.Stats.ToJsonOptionsObject.prototype.children;
 /** @type {boolean} */
webpack.Stats.ToJsonOptionsObject.prototype.chunkModules;
 /** @type {boolean} */
webpack.Stats.ToJsonOptionsObject.prototype.chunkOrigins;
 /** @type {boolean} */
webpack.Stats.ToJsonOptionsObject.prototype.chunks;
 /** @type {string} */
webpack.Stats.ToJsonOptionsObject.prototype.chunksSort;
 /** @type {string} */
webpack.Stats.ToJsonOptionsObject.prototype.context;
 /** @type {boolean} */
webpack.Stats.ToJsonOptionsObject.prototype.errorDetails;
 /** @type {boolean} */
webpack.Stats.ToJsonOptionsObject.prototype.errors;
 /** @type {boolean} */
webpack.Stats.ToJsonOptionsObject.prototype.hash;
 /** @type {boolean} */
webpack.Stats.ToJsonOptionsObject.prototype.modules;
 /** @type {string} */
webpack.Stats.ToJsonOptionsObject.prototype.modulesSort;
 /** @type {boolean} */
webpack.Stats.ToJsonOptionsObject.prototype.publicPath;
 /** @type {boolean} */
webpack.Stats.ToJsonOptionsObject.prototype.reasons;
 /** @type {boolean} */
webpack.Stats.ToJsonOptionsObject.prototype.source;
 /** @type {boolean} */
webpack.Stats.ToJsonOptionsObject.prototype.timings;
 /** @type {boolean} */
webpack.Stats.ToJsonOptionsObject.prototype.version;
 /** @type {boolean} */
webpack.Stats.ToJsonOptionsObject.prototype.warnings;

/** @typedef {(boolean|string|!webpack.Stats.ToJsonOptionsObject)} */
webpack.Stats.ToJsonOptions;
/**
 * @extends {webpack.Stats.ToJsonOptionsObject}
 * @record
 * @struct
 */
webpack.Stats.ToStringOptionsObject = function() {};
 /** @type {boolean} */
webpack.Stats.ToStringOptionsObject.prototype.colors;

/** @typedef {(boolean|string|!webpack.Stats.ToStringOptionsObject)} */
webpack.Stats.ToStringOptions;

/**
 * @constructor
 * @struct
 * @param {(string|!webpack.BannerPlugin.Options)} options
 */
webpack.BannerPlugin = function(options) {};

/** @typedef {(string|!RegExp)} */
webpack.BannerPlugin.Filter;
/**
 * @record
 * @struct
 */
webpack.BannerPlugin.Options = function() {};
 /** @type {string} */
webpack.BannerPlugin.Options.prototype.banner;
 /** @type {boolean} */
webpack.BannerPlugin.Options.prototype.entryOnly;
 /** @type {(string|!RegExp|!Array<(string|!RegExp)>)} */
webpack.BannerPlugin.Options.prototype.exclude;
 /** @type {(string|!RegExp|!Array<(string|!RegExp)>)} */
webpack.BannerPlugin.Options.prototype.include;
 /** @type {boolean} */
webpack.BannerPlugin.Options.prototype.raw;
 /** @type {(string|!RegExp|!Array<(string|!RegExp)>)} */
webpack.BannerPlugin.Options.prototype.test;

/**
 * @constructor
 * @struct
 * @param {?} resourceRegExp
 * @param {?=} newContentResource
 * @param {?=} newContentRecursive
 * @param {?=} newContentRegExp
 */
webpack.ContextReplacementPlugin = function(resourceRegExp, newContentResource, newContentRecursive, newContentRegExp) {};

/**
 * @constructor
 * @struct
 * @param {!Object<string,?>} definitions
 */
webpack.DefinePlugin = function(definitions) {};

/**
 * @constructor
 * @struct
 * @param {(!webpack.DllPlugin.Options|!Array<!webpack.DllPlugin.Options>)} options
 */
webpack.DllPlugin = function(options) {};
/**
 * @record
 * @struct
 */
webpack.DllPlugin.Options = function() {};
 /** @type {string} */
webpack.DllPlugin.Options.prototype.context;
 /** @type {string} */
webpack.DllPlugin.Options.prototype.name;
 /** @type {string} */
webpack.DllPlugin.Options.prototype.path;

/**
 * @constructor
 * @struct
 * @param {!webpack.DllReferencePlugin.Options} options
 */
webpack.DllReferencePlugin = function(options) {};
/**
 * @record
 * @struct
 */
webpack.DllReferencePlugin.Options = function() {};
 /** @type {?} */
webpack.DllReferencePlugin.Options.prototype.content;
 /** @type {string} */
webpack.DllReferencePlugin.Options.prototype.context;
 /** @type {(string|{content: string, name: string})} */
webpack.DllReferencePlugin.Options.prototype.manifest;
 /** @type {string} */
webpack.DllReferencePlugin.Options.prototype.name;
 /** @type {string} */
webpack.DllReferencePlugin.Options.prototype.scope;
 /** @type {string} */
webpack.DllReferencePlugin.Options.prototype.sourceType;

/**
 * @constructor
 * @struct
 * @param {(string|boolean|!webpack.EvalSourceMapDevToolPlugin.Options)=} options
 */
webpack.EvalSourceMapDevToolPlugin = function(options) {};
/**
 * @record
 * @struct
 */
webpack.EvalSourceMapDevToolPlugin.Options = function() {};
 /** @type {(string|boolean)} */
webpack.EvalSourceMapDevToolPlugin.Options.prototype.append;
 /** @type {boolean} */
webpack.EvalSourceMapDevToolPlugin.Options.prototype.columns;
 /** @type {(boolean|{exclude: (string|!RegExp|function(string): boolean|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray|!Array<(string|!RegExp|?|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray)>), include: (string|!RegExp|?|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray|!Array<(string|!RegExp|?|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray)>), test: (string|!RegExp|?|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray|!Array<(string|!RegExp|?|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray)>)})} */
webpack.EvalSourceMapDevToolPlugin.Options.prototype.lineToLine;
 /** @type {boolean} */
webpack.EvalSourceMapDevToolPlugin.Options.prototype.module;
 /** @type {string} */
webpack.EvalSourceMapDevToolPlugin.Options.prototype.moduleFilenameTemplate;
 /** @type {string} */
webpack.EvalSourceMapDevToolPlugin.Options.prototype.sourceRoot;

/**
 * @constructor
 * @struct
 */
webpack.ExtendedAPIPlugin = function() {};

/**
 * @constructor
 * @struct
 * @param {{hashFunction: string, hashDigest: string, hashDigestLength: number}=} options
 */
webpack.HashedModuleIdsPlugin = function(options) {};

/**
 * @constructor
 * @struct
 * @param {?=} options
 */
webpack.HotModuleReplacementPlugin = function(options) {};

/**
 * @constructor
 * @struct
 * @param {?} requestRegExp
 * @param {?=} contextRegExp
 */
webpack.IgnorePlugin = function(requestRegExp, contextRegExp) {};

/**
 * @constructor
 * @struct
 * @param {?} options
 */
webpack.LoaderOptionsPlugin = function(options) {};

/**
 * @constructor
 * @struct
 */
webpack.NamedModulesPlugin = function() {};

/**
 * @constructor
 * @struct
 * @param {function(?): string=} nameResolver
 */
webpack.NamedChunksPlugin = function(nameResolver) {};

/**
 * @constructor
 * @struct
 */
webpack.NoEmitOnErrorsPlugin = function() {};

/**
 * @constructor
 * @struct
 */
webpack.NoErrorsPlugin = function() {};

/**
 * @constructor
 * @struct
 * @param {?} resourceRegExp
 * @param {?} newResource
 */
webpack.NormalModuleReplacementPlugin = function(resourceRegExp, newResource) {};

/**
 * @constructor
 * @struct
 * @param {?} context_or_request
 * @param {?=} request
 */
webpack.PrefetchPlugin = function(context_or_request, request) {};

/**
 * @constructor
 * @struct
 * @param {function(number, string): void=} options
 */
webpack.ProgressPlugin = function(options) {};

/**
 * @constructor
 * @struct
 * @param {(!Array<string>|!Object<string,?>)} envs
 */
webpack.EnvironmentPlugin = function(envs) {};

/**
 * @constructor
 * @struct
 * @param {!Object<string,?>} definitions
 */
webpack.ProvidePlugin = function(definitions) {};

/**
 * @constructor
 * @struct
 * @param {(string|boolean|!webpack.SourceMapDevToolPlugin.Options)=} options
 */
webpack.SourceMapDevToolPlugin = function(options) {};
/**
 * @record
 * @struct
 */
webpack.SourceMapDevToolPlugin.Options = function() {};
 /** @type {(string|boolean)} */
webpack.SourceMapDevToolPlugin.Options.prototype.append;
 /** @type {boolean} */
webpack.SourceMapDevToolPlugin.Options.prototype.columns;
 /** @type {(string|!RegExp|function(string): boolean|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray|!Array<(string|!RegExp|?|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray)>)} */
webpack.SourceMapDevToolPlugin.Options.prototype.exclude;
 /** @type {string} */
webpack.SourceMapDevToolPlugin.Options.prototype.fallbackModuleFilenameTemplate;
 /** @type {(string|boolean)} */
webpack.SourceMapDevToolPlugin.Options.prototype.filename;
 /** @type {(string|!RegExp|function(string): boolean|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray|!Array<(string|!RegExp|?|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray)>)} */
webpack.SourceMapDevToolPlugin.Options.prototype.include;
 /** @type {(boolean|{exclude: (string|!RegExp|function(string): boolean|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray|!Array<(string|!RegExp|?|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray)>), include: (string|!RegExp|?|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray|!Array<(string|!RegExp|?|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray)>), test: (string|!RegExp|?|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray|!Array<(string|!RegExp|?|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray)>)})} */
webpack.SourceMapDevToolPlugin.Options.prototype.lineToLine;
 /** @type {boolean} */
webpack.SourceMapDevToolPlugin.Options.prototype.module;
 /** @type {string} */
webpack.SourceMapDevToolPlugin.Options.prototype.moduleFilenameTemplate;
 /** @type {boolean} */
webpack.SourceMapDevToolPlugin.Options.prototype.noSources;
 /** @type {string} */
webpack.SourceMapDevToolPlugin.Options.prototype.sourceRoot;
 /** @type {(string|!RegExp|function(string): boolean|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray|!Array<(string|!RegExp|?|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray)>)} */
webpack.SourceMapDevToolPlugin.Options.prototype.test;

/**
 * @constructor
 * @struct
 * @param {!Array<!RegExp>} paths
 */
webpack.WatchIgnorePlugin = function(paths) {};
/** @const */
webpack.optimize = {};
/**
 * @extends {webpack.Plugin}
 * @constructor
 * @struct
 */
webpack.optimize.ModuleConcatenationPlugin = function() {};

/**
 * @constructor
 * @struct
 * @param {!webpack.optimize.AggressiveMergingPlugin.Options=} options
 */
webpack.optimize.AggressiveMergingPlugin = function(options) {};
/**
 * @record
 * @struct
 */
webpack.optimize.AggressiveMergingPlugin.Options = function() {};
 /** @type {number} */
webpack.optimize.AggressiveMergingPlugin.Options.prototype.entryChunkMultiplicator;
 /** @type {number} */
webpack.optimize.AggressiveMergingPlugin.Options.prototype.minSizeReduce;
 /** @type {boolean} */
webpack.optimize.AggressiveMergingPlugin.Options.prototype.moveToParents;

/**
 * @constructor
 * @struct
 * @param {!webpack.optimize.CommonsChunkPlugin.Options=} options
 */
webpack.optimize.CommonsChunkPlugin = function(options) {};

/** @typedef {function(?, number): boolean} */
webpack.optimize.CommonsChunkPlugin.MinChunksFn;
/**
 * @record
 * @struct
 */
webpack.optimize.CommonsChunkPlugin.Options = function() {};
 /** @type {string} */
webpack.optimize.CommonsChunkPlugin.Options.prototype.name;
 /** @type {!Array<string>} */
webpack.optimize.CommonsChunkPlugin.Options.prototype.names;
 /** @type {string} */
webpack.optimize.CommonsChunkPlugin.Options.prototype.filename;
 /** @type {(number|function(?, number): boolean)} */
webpack.optimize.CommonsChunkPlugin.Options.prototype.minChunks;
 /** @type {!Array<string>} */
webpack.optimize.CommonsChunkPlugin.Options.prototype.chunks;
 /** @type {boolean} */
webpack.optimize.CommonsChunkPlugin.Options.prototype.children;
 /** @type {(string|boolean)} */
webpack.optimize.CommonsChunkPlugin.Options.prototype.async;
 /** @type {number} */
webpack.optimize.CommonsChunkPlugin.Options.prototype.minSize;

/**
 * @constructor
 * @struct
 */
webpack.optimize.DedupePlugin = function() {};

/**
 * @constructor
 * @struct
 * @param {?} options
 */
webpack.optimize.LimitChunkCountPlugin = function(options) {};

/**
 * @constructor
 * @struct
 * @param {?} options
 */
webpack.optimize.MinChunkSizePlugin = function(options) {};

/**
 * @constructor
 * @struct
 * @param {boolean} preferEntry
 */
webpack.optimize.OccurrenceOrderPlugin = function(preferEntry) {};

/**
 * @constructor
 * @struct
 * @param {!webpack.optimize.UglifyJsPlugin.Options=} options
 */
webpack.optimize.UglifyJsPlugin = function(options) {};

/** @typedef {function(?, ?): boolean} */
webpack.optimize.UglifyJsPlugin.CommentFilter;
/**
 * @extends {UglifyJS.MinifyOptions}
 * @record
 * @struct
 */
webpack.optimize.UglifyJsPlugin.Options = function() {};
 /** @type {boolean} */
webpack.optimize.UglifyJsPlugin.Options.prototype.beautify;
 /** @type {(boolean|!RegExp|function(?, ?): boolean)} */
webpack.optimize.UglifyJsPlugin.Options.prototype.comments;
 /** @type {(string|!RegExp|function(string): boolean|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray|!Array<(string|!RegExp|?|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray)>)} */
webpack.optimize.UglifyJsPlugin.Options.prototype.exclude;
 /** @type {(string|!RegExp|function(string): boolean|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray|!Array<(string|!RegExp|?|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray)>)} */
webpack.optimize.UglifyJsPlugin.Options.prototype.include;
 /** @type {boolean} */
webpack.optimize.UglifyJsPlugin.Options.prototype.sourceMap;
 /** @type {(string|!RegExp|function(string): boolean|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray|!Array<(string|!RegExp|?|!webpack.TestConditionSpec|!webpack.OrConditionSpec|!webpack.AndConditionSpec|!webpack.NotConditionSpec|!webpack.ConditionArray)>)} */
webpack.optimize.UglifyJsPlugin.Options.prototype.test;
/** @const */
webpack.dependencies = {};
/** @const */
webpack.loader = {};
/**
 * @record
 * @struct
 */
webpack.loader.Loader = function() {};

/* TODO: CallSignature: webpack.loader */
 /** @type {boolean} */
webpack.loader.Loader.prototype.raw;

/**
 * The order of chained loaders are always called from right to left.
 * But, in some cases, loaders do not care about the results of the previous loader or the resource.
 * They only care for metadata. The pitch method on the loaders is called from left to right before the loaders are called (from right to left).
 * If a loader delivers a result in the pitch method the process turns around and skips the remaining loaders,
 * continuing with the calls to the more left loaders. data can be passed between pitch and normal call.
 * @param {string} remainingRequest
 * @param {string} precedingRequest
 * @param {?} data
 * @return {?}
 */
webpack.loader.Loader.prototype.pitch = function(remainingRequest, precedingRequest, data) {};

/** @typedef {function(!Error, (string|?), (string|?)): void} */
webpack.loader.loaderCallback;
/**
 * @record
 * @struct
 */
webpack.loader.LoaderContext = function() {};
 /** @type {string} */
webpack.loader.LoaderContext.prototype.version;
 /** @type {string} */
webpack.loader.LoaderContext.prototype.context;
 /** @type {string} */
webpack.loader.LoaderContext.prototype.request;
 /** @type {?} */
webpack.loader.LoaderContext.prototype.query;
 /** @type {?} */
webpack.loader.LoaderContext.prototype.data;
 /** @type {function(!Error, (string|?), (string|?)): void} */
webpack.loader.LoaderContext.prototype.callback;
 /** @type {!Array<?>} */
webpack.loader.LoaderContext.prototype.loaders;
 /** @type {number} */
webpack.loader.LoaderContext.prototype.loaderIndex;
 /** @type {string} */
webpack.loader.LoaderContext.prototype.resource;
 /** @type {string} */
webpack.loader.LoaderContext.prototype.resourcePath;
 /** @type {string} */
webpack.loader.LoaderContext.prototype.resourceQuery;
 /** @type {?} */
webpack.loader.LoaderContext.prototype.value;
 /** @type {?} */
webpack.loader.LoaderContext.prototype.inputValue;
 /** @type {?} */
webpack.loader.LoaderContext.prototype.options;
 /** @type {boolean} */
webpack.loader.LoaderContext.prototype.debug;
 /** @type {boolean} */
webpack.loader.LoaderContext.prototype.minimize;
 /** @type {boolean} */
webpack.loader.LoaderContext.prototype.sourceMap;
 /** @type {string} */
webpack.loader.LoaderContext.prototype.target;
 /** @type {boolean} */
webpack.loader.LoaderContext.prototype.webpack;
 /** @type {?} */
webpack.loader.LoaderContext.prototype.fs;
 /** @type {?} */
webpack.loader.LoaderContext.prototype._compilation;
 /** @type {!webpack.Compiler} */
webpack.loader.LoaderContext.prototype._compiler;
 /** @type {?} */
webpack.loader.LoaderContext.prototype._module;

/**
 * Make this loader async.
 * @return {function(!Error, (string|?), (string|?)): void}
 */
webpack.loader.LoaderContext.prototype.async = function() {};

/**
 *  Make this loader result cacheable. By default it's not cacheable.
 *  A cacheable loader must have a deterministic result, when inputs and dependencies haven't changed.
 *  This means the loader shouldn't have other dependencies than specified with this.addDependency.
 *  Most loaders are deterministic and cacheable.
 * @param {boolean=} flag
 * @return {void}
 */
webpack.loader.LoaderContext.prototype.cacheable = function(flag) {};

/**
 * Emit a warning.
 * @param {string} message
 * @return {void}
 */
webpack.loader.LoaderContext.prototype.emitWarning = function(message) {};

/**
 * Emit a error.
 * @param {string} message
 * @return {void}
 */
webpack.loader.LoaderContext.prototype.emitError = function(message) {};

/**
 * Execute some code fragment like a module.
 * 
 * Don't use require(this.resourcePath), use this function to make loaders chainable!
 * 
 * @param {string} code
 * @param {string} filename
 * @return {?}
 */
webpack.loader.LoaderContext.prototype.exec = function(code, filename) {};

/**
 * Resolve a request like a require expression.
 * @param {string} context
 * @param {string} request
 * @param {function(!Error, string): void} callback
 * @return {?}
 */
webpack.loader.LoaderContext.prototype.resolve = function(context, request, callback) {};

/**
 * Resolve a request like a require expression.
 * @param {string} context
 * @param {string} request
 * @return {string}
 */
webpack.loader.LoaderContext.prototype.resolveSync = function(context, request) {};

/**
 * Adds a file as dependency of the loader result in order to make them watchable.
 * For example, html-loader uses this technique as it finds src and src-set attributes.
 * Then, it sets the url's for those attributes as dependencies of the html file that is parsed.
 * @param {string} file
 * @return {void}
 */
webpack.loader.LoaderContext.prototype.addDependency = function(file) {};

/**
 * Adds a file as dependency of the loader result in order to make them watchable.
 * For example, html-loader uses this technique as it finds src and src-set attributes.
 * Then, it sets the url's for those attributes as dependencies of the html file that is parsed.
 * @param {string} file
 * @return {void}
 */
webpack.loader.LoaderContext.prototype.dependency = function(file) {};

/**
 * Add a directory as dependency of the loader result.
 * @param {string} directory
 * @return {void}
 */
webpack.loader.LoaderContext.prototype.addContextDependency = function(directory) {};

/**
 * Remove all dependencies of the loader result. Even initial dependencies and these of other loaders. Consider using pitch.
 * @return {void}
 */
webpack.loader.LoaderContext.prototype.clearDependencies = function() {};

/**
 * Emit a file. This is webpack-specific.
 * @param {string} name
 * @param {(string|?)} content
 * @param {?} sourceMap
 * @return {void}
 */
webpack.loader.LoaderContext.prototype.emitFile = function(name, content, sourceMap) {};
/** @const */
webpack.compiler = {};

/** @typedef {!webpack.Compiler} */
webpack.compiler.Compiler;

/** @typedef {!webpack.Compiler.Watching} */
webpack.compiler.Watching;

/** @typedef {!webpack.ICompiler.WatchOptions} */
webpack.compiler.WatchOptions;

/** @typedef {!webpack.Stats} */
webpack.compiler.Stats;

/** @typedef {(boolean|string|!webpack.Stats.ToJsonOptionsObject)} */
webpack.compiler.StatsOptions;

/** @typedef {(boolean|string|!webpack.Stats.ToStringOptionsObject)} */
webpack.compiler.StatsToStringOptions;

/** @typedef {function(!Error, !webpack.Stats): void} */
webpack.compiler.CompilerCallback;

/** @typedef {!webpack.Options.Performance} */
webpack.PerformanceOptions;

/** @typedef {!webpack.ICompiler.WatchOptions} */
webpack.WatchOptions;

/** @typedef {!webpack.EvalSourceMapDevToolPlugin.Options} */
webpack.EvalSourceMapDevToolPluginOptions;

/** @typedef {!webpack.SourceMapDevToolPlugin.Options} */
webpack.SourceMapDevToolPluginOptions;

/** @typedef {function(?, ?): boolean} */
webpack.UglifyCommentFunction;

/** @typedef {!webpack.optimize.UglifyJsPlugin.Options} */
webpack.UglifyPluginOptions;
