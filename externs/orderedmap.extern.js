/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/orderedmap/index.d.ts:

/* TODO: ExportAssignment in  */
/**
 * @constructor
 * @struct
 */
function OrderedMap() {}
 /** @type {number} */
OrderedMap.prototype.size;

/**
 * @param {string} key
 * @return {T}
 */
OrderedMap.prototype.get = function(key) {};

/**
 * @param {string} key
 * @param {T} value
 * @param {string=} newKey
 * @return {OrderedMap}
 */
OrderedMap.prototype.update = function(key, value, newKey) {};

/**
 * @param {string} key
 * @return {OrderedMap}
 */
OrderedMap.prototype.remove = function(key) {};

/**
 * @param {string} key
 * @param {T} value
 * @return {OrderedMap}
 */
OrderedMap.prototype.addToStart = function(key, value) {};

/**
 * @param {string} key
 * @param {T} value
 * @return {OrderedMap}
 */
OrderedMap.prototype.addToEnd = function(key, value) {};

/**
 * @param {string} place
 * @param {string} key
 * @param {T} value
 * @return {OrderedMap}
 */
OrderedMap.prototype.addBefore = function(place, key, value) {};

/**
 * @param {function(string, T): void} f
 * @return {void}
 */
OrderedMap.prototype.forEach = function(f) {};

/**
 * @param {(!OrderedMap|!Object<string,T>)} map
 * @return {OrderedMap}
 */
OrderedMap.prototype.prepend = function(map) {};

/**
 * @param {(!OrderedMap|!Object<string,T>)} map
 * @return {OrderedMap}
 */
OrderedMap.prototype.append = function(map) {};

/**
 * @param {(!OrderedMap|!Object<string,T>)} map
 * @return {OrderedMap}
 */
OrderedMap.prototype.subtract = function(map) {};

/**
 * @template T
 * @param {(!OrderedMap<T>|!Object<string,T>)=} value
 * @return {!OrderedMap<T>}
 */
OrderedMap.from = function(value) {};
