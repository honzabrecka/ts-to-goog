/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/node-waves/index.d.ts:

/** @typedef {(string|!Element|!Array<!Element>)} */
var ElementTarget;
/**
 * @record
 * @struct
 */
function WavesConfig() {}
 /** @type {number} */
WavesConfig.prototype.duration;
 /** @type {number} */
WavesConfig.prototype.delay;
/**
 * @record
 * @struct
 */
function RippleOptions() {}
 /** @type {number} */
RippleOptions.prototype.wait;
 /** @type {?} */
RippleOptions.prototype.position;

/**
 * Initializes waves with an optional config.
 * @param {?=} config
 * @return {void}
 */
function init(config) {}

/**
 * Attach ripple effect by adding `.waves-effect` to HTML element.
 * Make sure you call `init` to activate the ripple.
 * 
 * @param {(string|!Element|!Array<!Element>)} elements
 * @param {(string|!Array<string>)=} classes
 * @return {void}
 */
function attach(elements, classes) {}

/**
 * Creates a ripple effect in HTML element programmatically.
 * @param {(string|!Element|!Array<!Element>)} elements
 * @param {?=} options
 * @return {void}
 */
function ripple(elements, options) {}

/**
 * Removes all ripples from inside an element immediately.
 * 
 * @param {(string|!Element|!Array<!Element>)} elements
 * @return {void}
 */
function calm(elements) {}
