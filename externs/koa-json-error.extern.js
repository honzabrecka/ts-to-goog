/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/koa-json-error/index.d.ts:

/* TODO: ImportDeclaration in  */
/**
 * @record
 * @struct
 */
function JSONErrorOptions() {}

/**
 * Perform some task before calling `options.format`. Must be a function with the original err as its only argument.
 * @param {!Error} err
 * @return {?}
 */
JSONErrorOptions.prototype.preFormat = function(err) {};

/**
 * Runs inmediatly after `options.preFormat`. It receives two arguments: the original `err` and the output of     `options.preFormat`. It should `return` a newly formatted error.
 * @param {!Error} err
 * @param {?} obj
 * @return {?}
 */
JSONErrorOptions.prototype.format = function(err, obj) {};

/**
 * Runs inmediatly after `options.format`. It receives two arguments: the original `err` and the output of   `options.format`.   It should `return` a newly formatted error.
 * @param {!Error} err
 * @param {?} obj
 * @return {?}
 */
JSONErrorOptions.prototype.postFormat = function(err, obj) {};

/**
 * Error handler for pure Koa 2.0.0+ JSON apps
 * @param {?=} options
 * @return {function(!Application.Context, function(): !Promise<?>): ?}
 */
function jsonError(options) {}

/* TODO: ExportAssignment in  */
