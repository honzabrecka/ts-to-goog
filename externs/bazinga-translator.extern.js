/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/bazinga-translator/index.d.ts:
/**
 * @record
 * @struct
 */
function BazingaTranslator() {}
 /** @type {string} */
BazingaTranslator.prototype.locale;
 /** @type {string} */
BazingaTranslator.prototype.fallback;
 /** @type {string} */
BazingaTranslator.prototype.placeHolderPrefix;
 /** @type {string} */
BazingaTranslator.prototype.placeHolderSuffix;
 /** @type {string} */
BazingaTranslator.prototype.defaultDomain;
 /** @type {string} */
BazingaTranslator.prototype.pluralSeparator;

/**
 * Adds a translation entry.
 * 
 * 
 * @param {string} id
 * @param {string} message
 * @param {string} domain
 * @param {string} locale
 * @return {!BazingaTranslator}
 */
BazingaTranslator.prototype.add = function(id, message, domain, locale) {};

/**
 * Translates the given message.
 * 
 * 
 * @param {string} id
 * @param {?} parameters
 * @param {string} domain
 * @param {string=} locale
 * @return {string}
 */
BazingaTranslator.prototype.trans = function(id, parameters, domain, locale) {};

/**
 * Translates the given choice message by choosing a translation according to a number.
 * 
 * 
 * @param {string} id
 * @param {number} number
 * @param {?} parameters
 * @param {string} domain
 * @param {string=} locale
 * @return {string}
 */
BazingaTranslator.prototype.transChoice = function(id, number, parameters, domain, locale) {};

/**
 * Loads translations from JSON.
 * 
 * 
 * @param {string} data
 * @return {!BazingaTranslator}
 */
BazingaTranslator.prototype.fromJSON = function(data) {};

/**
 * @return {void}
 */
BazingaTranslator.prototype.reset = function() {};
 /** @type {!BazingaTranslator} */
var Translator;
