/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/gapi.analytics/index.d.ts:
/** @const */
gapi.client.analytics = {};
/** @const */
gapi.client.analytics.provisioning = {};

/**
 * @return {!Promise<?>}
 */
gapi.client.analytics.provisioning.createAccountTicket = function() {};
/**
 * @record
 * @struct
 */
function DataQuery() {}

/* TODO: PropertySignature: "ids" */

/* TODO: PropertySignature: "start-date" */

/* TODO: PropertySignature: "30daysAgo" */

/* TODO: PropertySignature: "end-date" */

/* TODO: PropertySignature: "yesterday" */

/* TODO: PropertySignature: "metrics" */

/* TODO: PropertySignature: "dimensions" */

/* TODO: PropertySignature: "sort" */

/* TODO: PropertySignature: "filters" */

/* TODO: PropertySignature: "segment" */

/* TODO: PropertySignature: "samplingLevel" */

/* TODO: PropertySignature: "include-empty-rows" */

/* TODO: PropertySignature: "start-index" */

/* TODO: PropertySignature: "max-results" */
/** @const */
gapi.client.analytics.data = {};
/** @const */
gapi.client.analytics.data.ga = {};

/**
 * @param {!DataQuery=} data
 * @return {!Promise<?>}
 */
gapi.client.analytics.data.ga.get = function(data) {};
/** @const */
gapi.client.analytics.data.mcf = {};

/**
 * @param {!DataQuery=} data
 * @return {!Promise<?>}
 */
gapi.client.analytics.data.mcf.get = function(data) {};
/** @const */
gapi.client.analytics.data.realtime = {};

/**
 * @param {!DataQuery=} data
 * @return {!Promise<?>}
 */
gapi.client.analytics.data.realtime.get = function(data) {};
/** @const */
gapi.client.analytics.kB = {};
/** @const */
gapi.client.analytics.kB.parameters = {};
/**
 * @record
 * @struct
 */
gapi.client.analytics.kB.parameters.AnalyticsParameter = function() {};

/* TODO: PropertySignature: gapi.client.analytics.kB.parameters."type" */

/* TODO: PropertySignature: gapi.client.analytics.kB.parameters."description" */

/* TODO: PropertySignature: gapi.client.analytics.kB.parameters."default" */

/* TODO: PropertySignature: gapi.client.analytics.kB.parameters."enum" */

/* TODO: PropertySignature: gapi.client.analytics.kB.parameters."enumDescriptions" */

/* TODO: PropertySignature: gapi.client.analytics.kB.parameters."location" */
/**
 * @extends {gapi.client.analytics.kB.parameters.AnalyticsParameter}
 * @record
 * @struct
 */
gapi.client.analytics.kB.parameters.alt = function() {};
/**
 * @extends {gapi.client.analytics.kB.parameters.AnalyticsParameter}
 * @record
 * @struct
 */
gapi.client.analytics.kB.parameters.fields = function() {};
/**
 * @extends {gapi.client.analytics.kB.parameters.AnalyticsParameter}
 * @record
 * @struct
 */
gapi.client.analytics.kB.parameters.key = function() {};
/**
 * @extends {gapi.client.analytics.kB.parameters.AnalyticsParameter}
 * @record
 * @struct
 */
gapi.client.analytics.kB.parameters.oauth_token = function() {};
/**
 * @extends {gapi.client.analytics.kB.parameters.AnalyticsParameter}
 * @record
 * @struct
 */
gapi.client.analytics.kB.parameters.prettyPrint = function() {};
/**
 * @extends {gapi.client.analytics.kB.parameters.AnalyticsParameter}
 * @record
 * @struct
 */
gapi.client.analytics.kB.parameters.quotaUser = function() {};
/**
 * @extends {gapi.client.analytics.kB.parameters.AnalyticsParameter}
 * @record
 * @struct
 */
gapi.client.analytics.kB.parameters.userIP = function() {};
/**
 * @record
 * @struct
 */
function View() {}
 /** @type {string} */
View.prototype.accountId;
 /** @type {string} */
View.prototype.webPropertyId;
 /** @type {string} */
View.prototype.webViewId;
/** @const */
gapi.client.analytics.management = {};
/** @const */
gapi.client.analytics.management.accountSummaries = {};

/**
 * @param {!View=} view
 * @return {!Promise<?>}
 */
gapi.client.analytics.management.accountSummaries.list = function(view) {};
/** @const */
gapi.client.analytics.management.accountUserLinks = {};

/**
 * @param {!View=} view
 * @return {!Promise<?>}
 */
gapi.client.analytics.management.accountUserLinks.list = function(view) {};
/** @const */
gapi.client.analytics.management.accounts = {};

/**
 * @param {!View=} view
 * @return {!Promise<?>}
 */
gapi.client.analytics.management.accounts.list = function(view) {};
/** @const */
gapi.client.analytics.management.customDataSources = {};

/**
 * @param {!View=} view
 * @return {!Promise<?>}
 */
gapi.client.analytics.management.customDataSources.list = function(view) {};
/** @const */
gapi.client.analytics.management.customDimensions = {};

/**
 * @param {!View=} view
 * @return {!Promise<?>}
 */
gapi.client.analytics.management.customDimensions.list = function(view) {};
/** @const */
gapi.client.analytics.management.customMetrics = {};

/**
 * @param {!View=} view
 * @return {!Promise<?>}
 */
gapi.client.analytics.management.customMetrics.list = function(view) {};
/** @const */
gapi.client.analytics.management.experiments = {};

/**
 * @param {!View=} view
 * @return {!Promise<?>}
 */
gapi.client.analytics.management.experiments.list = function(view) {};
/** @const */
gapi.client.analytics.management.filters = {};

/**
 * @param {!View=} view
 * @return {!Promise<?>}
 */
gapi.client.analytics.management.filters.list = function(view) {};
/** @const */
gapi.client.analytics.management.goals = {};

/**
 * @param {!View=} view
 * @return {!Promise<?>}
 */
gapi.client.analytics.management.goals.list = function(view) {};
/** @const */
gapi.client.analytics.management.profileFilterLinks = {};

/**
 * @param {!View=} view
 * @return {!Promise<?>}
 */
gapi.client.analytics.management.profileFilterLinks.list = function(view) {};
/** @const */
gapi.client.analytics.management.profileUserLinks = {};

/**
 * @param {!View=} view
 * @return {!Promise<?>}
 */
gapi.client.analytics.management.profileUserLinks.list = function(view) {};
/** @const */
gapi.client.analytics.management.profiles = {};

/**
 * @param {!View=} view
 * @return {!Promise<?>}
 */
gapi.client.analytics.management.profiles.list = function(view) {};
/** @const */
gapi.client.analytics.management.remarketingAudience = {};

/**
 * @param {!View=} view
 * @return {!Promise<?>}
 */
gapi.client.analytics.management.remarketingAudience.list = function(view) {};
/** @const */
gapi.client.analytics.management.segments = {};

/**
 * @param {!View=} view
 * @return {!Promise<?>}
 */
gapi.client.analytics.management.segments.list = function(view) {};
/** @const */
gapi.client.analytics.management.unsampledReports = {};

/**
 * @param {!View=} view
 * @return {!Promise<?>}
 */
gapi.client.analytics.management.unsampledReports.list = function(view) {};
/** @const */
gapi.client.analytics.management.uploads = {};

/**
 * @param {!View=} view
 * @return {!Promise<?>}
 */
gapi.client.analytics.management.uploads.list = function(view) {};
/** @const */
gapi.client.analytics.management.webPropertyAdWordsLinks = {};

/**
 * @param {!View=} view
 * @return {!Promise<?>}
 */
gapi.client.analytics.management.webPropertyAdWordsLinks.list = function(view) {};
/** @const */
gapi.client.analytics.management.webproperties = {};

/**
 * @param {!View=} view
 * @return {!Promise<?>}
 */
gapi.client.analytics.management.webproperties.list = function(view) {};
/** @const */
gapi.client.analytics.management.webpropertyUserLinks = {};

/**
 * @param {!View=} view
 * @return {!Promise<?>}
 */
gapi.client.analytics.management.webpropertyUserLinks.list = function(view) {};
/** @const */
gapi.client.analytics.metadata = {};
/** @const */
gapi.client.analytics.metadata.column = {};

/**
 * @return {!Promise<?>}
 */
gapi.client.analytics.metadata.column.list = function() {};
