/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/react-router v2/index.d.ts:

/* TODO: NamespaceExportDeclaration in  */

/* TODO: ImportDeclaration in  */
 /** @type {!React.Requireable<?>} */
var routerShape;
 /** @type {!React.Requireable<?>} */
var locationShape;

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/** @typedef {!Router.PlainRoute} */
var PlainRoute;

/** @typedef {function(!Router.RouterState, !Router.RedirectFunction, !Function): void} */
var EnterHook;

/** @typedef {function(): void} */
var LeaveHook;

/** @typedef {function(string): ?} */
var ParseQueryString;

/** @typedef {!Router.LocationDescriptor} */
var LocationDescriptor;

/** @typedef {!Router.RedirectFunction} */
var RedirectFunction;

/** @typedef {(string|!React.ComponentClass<?>|!React.StatelessComponent<?>)} */
var RouteComponent;

/** @typedef {!Router.RouteComponentProps<?, ?>} */
var RouteComponentProps;

/** @typedef {(string|number|boolean|!Object|!Router.PlainRoute|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>|!Array<!Router.PlainRoute>)} */
var RouteConfig;

/** @typedef {function(?): ?} */
var RouteHook;

/** @typedef {function(?): string} */
var StringifyQuery;

/** @typedef {function(!Error, !Router.RouterState): void} */
var RouterListener;

/** @typedef {!Router.RouterState} */
var RouterState;

/** @typedef {!Router.InjectedRouter} */
var InjectedRouter;

/** @typedef {?} */
var HistoryBase;

/** @typedef {!Router.RouterOnContext} */
var RouterOnContext;

/** @typedef {!self.RouteProps} */
var RouteProps;

/** @typedef {!Link.LinkProps} */
var LinkProps;

/* TODO: ExportDeclaration in  */

/* TODO: ExportAssignment in  */
