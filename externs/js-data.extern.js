/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/js-data/index.d.ts:
/** @const */
var JSData = {};
/**
 * @record
 * @struct
 */
JSData.JSDataPromise = function() {};

/**
 * @template U
 * @param {function(R): (U|!JSData.JSDataPromise<U>)=} onFulfilled
 * @param {function(?): (U|!JSData.JSDataPromise<U>)=} onRejected
 * @return {!JSData.JSDataPromise<U>}
 */
JSData.JSDataPromise.prototype.then = function(onFulfilled, onRejected) {};

/**
 * @template U
 * @param {function(?): (U|!JSData.JSDataPromise<U>)=} onRejected
 * @return {!JSData.JSDataPromise<U>}
 */
JSData.JSDataPromise.prototype.catch = function(onRejected) {};

/**
 * @param {function(): ?=} finallyCb
 * @return {!JSData.JSDataPromise}
 */
JSData.JSDataPromise.prototype.finally = function(finallyCb) {};
/**
 * @extends {JSData.IDSResourceLifecycleEventHandlers}
 * @record
 * @struct
 */
JSData.DSConfiguration = function() {};
 /** @type {!Object} */
JSData.DSConfiguration.prototype.actions;
 /** @type {boolean} */
JSData.DSConfiguration.prototype.allowSimpleWhere;
 /** @type {string} */
JSData.DSConfiguration.prototype.basePath;
 /** @type {boolean} */
JSData.DSConfiguration.prototype.bypassCache;
 /** @type {boolean} */
JSData.DSConfiguration.prototype.cacheResponse;
 /** @type {boolean} */
JSData.DSConfiguration.prototype.clearEmptyQueries;
 /** @type {boolean} */
JSData.DSConfiguration.prototype.debug;
 /** @type {string} */
JSData.DSConfiguration.prototype.defaultAdapter;
 /** @type {function(!Array<?>, string, (!Object|!JSData.DSFilterParams), !JSData.DSConfiguration): !Array<?>} */
JSData.DSConfiguration.prototype.defaultFilter;
 /** @type {!Object} */
JSData.DSConfiguration.prototype.defaultValues;
 /** @type {boolean} */
JSData.DSConfiguration.prototype.eagerEject;
 /** @type {string} */
JSData.DSConfiguration.prototype.endpoint;
 /** @type {(boolean|function(?, !Array<?>): void)} */
JSData.DSConfiguration.prototype.error;
 /** @type {!Array<string>} */
JSData.DSConfiguration.prototype.fallbackAdapters;
 /** @type {!Array<string>} */
JSData.DSConfiguration.prototype.findAllFallbackAdapters;
 /** @type {string} */
JSData.DSConfiguration.prototype.findAllStrategy;
 /** @type {!Array<string>} */
JSData.DSConfiguration.prototype.findFallbackAdapters;
 /** @type {string} */
JSData.DSConfiguration.prototype.findStrategy;
 /** @type {boolean} */
JSData.DSConfiguration.prototype.findStrictCache;
 /** @type {string} */
JSData.DSConfiguration.prototype.idAttribute;
 /** @type {!Array<(string|!RegExp)>} */
JSData.DSConfiguration.prototype.ignoredChanges;
 /** @type {boolean} */
JSData.DSConfiguration.prototype.ignoreMissing;
 /** @type {boolean} */
JSData.DSConfiguration.prototype.instanceEvents;
 /** @type {boolean} */
JSData.DSConfiguration.prototype.keepChangeHistory;
 /** @type {boolean} */
JSData.DSConfiguration.prototype.linkRelations;
 /** @type {(boolean|function(?, !Array<?>): void)} */
JSData.DSConfiguration.prototype.log;
 /** @type {number} */
JSData.DSConfiguration.prototype.maxAge;
 /** @type {boolean} */
JSData.DSConfiguration.prototype.notify;
 /** @type {!Array<(string|!RegExp)>} */
JSData.DSConfiguration.prototype.omit;
 /** @type {string} */
JSData.DSConfiguration.prototype.onConflict;
 /** @type {string} */
JSData.DSConfiguration.prototype.reapAction;
 /** @type {number} */
JSData.DSConfiguration.prototype.reapInterval;
 /** @type {boolean} */
JSData.DSConfiguration.prototype.relationsEnumerable;
 /** @type {boolean} */
JSData.DSConfiguration.prototype.resetHistoryOnInject;
 /** @type {boolean} */
JSData.DSConfiguration.prototype.returnMeta;
 /** @type {!Object} */
JSData.DSConfiguration.prototype.scopes;
 /** @type {string} */
JSData.DSConfiguration.prototype.strategy;
 /** @type {boolean} */
JSData.DSConfiguration.prototype.upsert;
 /** @type {?} */
JSData.DSConfiguration.prototype.useClass;
 /** @type {boolean} */
JSData.DSConfiguration.prototype.useFilter;
 /** @type {boolean} */
JSData.DSConfiguration.prototype.watchChanges;
/**
 * @extends {JSData.DSConfiguration}
 * @record
 * @struct
 */
JSData.DSResourceDefinitionConfiguration = function() {};
 /** @type {?} */
JSData.DSResourceDefinitionConfiguration.prototype.computed;
 /** @type {?} */
JSData.DSResourceDefinitionConfiguration.prototype.meta;
 /** @type {?} */
JSData.DSResourceDefinitionConfiguration.prototype.methods;
 /** @type {string} */
JSData.DSResourceDefinitionConfiguration.prototype.name;
 /** @type {{hasMany: !Object, hasOne: !Object, belongsTo: !Object}} */
JSData.DSResourceDefinitionConfiguration.prototype.relations;
/**
 * @record
 * @struct
 */
JSData.DSFilterParams = function() {};
 /** @type {!Object} */
JSData.DSFilterParams.prototype.where;
 /** @type {number} */
JSData.DSFilterParams.prototype.limit;
 /** @type {number} */
JSData.DSFilterParams.prototype.skip;
 /** @type {number} */
JSData.DSFilterParams.prototype.offset;
 /** @type {(string|!Array<string>|!Array<!Array<string>>)} */
JSData.DSFilterParams.prototype.orderBy;
 /** @type {(string|!Array<string>|!Array<!Array<string>>)} */
JSData.DSFilterParams.prototype.sort;

/** @typedef {(!Object|!JSData.DSFilterParams)} */
JSData.DSFilterArg;
/**
 * @extends {JSData.DSConfiguration}
 * @record
 * @struct
 */
JSData.DSAdapterOperationConfiguration = function() {};
 /** @type {string} */
JSData.DSAdapterOperationConfiguration.prototype.adapter;
 /** @type {!Object<string,(string|number|boolean)>} */
JSData.DSAdapterOperationConfiguration.prototype.params;
/**
 * @extends {JSData.DSAdapterOperationConfiguration}
 * @record
 * @struct
 */
JSData.DSSaveConfiguration = function() {};
 /** @type {boolean} */
JSData.DSSaveConfiguration.prototype.changesOnly;
/**
 * @record
 * @struct
 */
JSData.DSCollection = function() {};
 /** @type {(!Object|!JSData.DSFilterParams)} */
JSData.DSCollection.prototype.params;
 /** @type {string} */
JSData.DSCollection.prototype.resourceName;

/**
 * @param {(!Object|!JSData.DSFilterParams)=} params
 * @param {!JSData.DSConfiguration=} options
 * @return {!JSData.JSDataPromise<!Array<?>>}
 */
JSData.DSCollection.prototype.fetch = function(params, options) {};
/**
 * @record
 * @struct
 */
JSData.DSEvents = function() {};

/**
 * @param {string} name
 * @param {function(!Array<?>): void} handler
 * @return {void}
 */
JSData.DSEvents.prototype.on = function(name, handler) {};

/**
 * @param {string} name
 * @param {function(!Array<?>): void} handler
 * @return {void}
 */
JSData.DSEvents.prototype.off = function(name, handler) {};

/**
 * @param {string} name
 * @param {...?} args
 * @return {void}
 */
JSData.DSEvents.prototype.emit = function(name, args) {};
/**
 * @extends {JSData.DSEvents}
 * @record
 * @struct
 */
JSData.DS = function() {};

/* TODO: ConstructSignature: JSData */
 /** @type {!JSData.DSErrors} */
JSData.DS.prototype.errors;
 /** @type {?} */
JSData.DS.prototype.definitions;
 /** @type {?} */
JSData.DS.prototype.adapters;
 /** @type {!JSData.DSConfiguration} */
JSData.DS.prototype.defaults;

/**
 * @param {string} resourceName
 * @param {(string|number)} id
 * @return {!Array<!Object>}
 */
JSData.DS.prototype.changeHistory = function(resourceName, id) {};

/**
 * @param {string} resourceName
 * @param {(string|number)} id
 * @param {{ignoredChanges: !Array<(string|!RegExp)>}=} options
 * @return {!Object}
 */
JSData.DS.prototype.changes = function(resourceName, id, options) {};

/**
 * @template T
 * @return {!Array<?>}
 */
JSData.DS.prototype.clear = function() {};

/**
 * @template T
 * @param {string} resourceName
 * @param {(string|number|T)} idOrInstance
 * @return {?}
 */
JSData.DS.prototype.compute = function(resourceName, idOrInstance) {};

/**
 * @template T
 * @param {string} resourceName
 * @param {!Object} attrs
 * @param {!JSData.DSConfiguration=} options
 * @return {!JSData.JSDataPromise<?>}
 */
JSData.DS.prototype.create = function(resourceName, attrs, options) {};

/**
 * @template T
 * @param {string} resourceName
 * @param {!Array<T>=} array
 * @param {(!Object|!JSData.DSFilterParams)=} params
 * @param {!JSData.DSConfiguration=} options
 * @return {!JSData.DSCollection<?>}
 */
JSData.DS.prototype.createCollection = function(resourceName, array, params, options) {};

/**
 * @template T
 * @param {string} resourceName
 * @param {!Object=} attrs
 * @param {!JSData.DSConfiguration=} options
 * @return {?}
 */
JSData.DS.prototype.createInstance = function(resourceName, attrs, options) {};

/**
 * @param {string} resourceName
 * @param {(string|number)} id
 * @param {!JSData.DSAdapterOperationConfiguration=} options
 * @return {!JSData.JSDataPromise<void>}
 */
JSData.DS.prototype.destroy = function(resourceName, id, options) {};

/**
 * @param {string} resourceName
 * @param {(!Object|!JSData.DSFilterParams)=} params
 * @param {!JSData.DSAdapterOperationConfiguration=} options
 * @return {!JSData.JSDataPromise<void>}
 */
JSData.DS.prototype.destroyAll = function(resourceName, params, options) {};

/**
 * @return {void}
 */
JSData.DS.prototype.digest = function() {};

/**
 * @template T
 * @param {string} resourceName
 * @param {(string|number)} id
 * @param {!JSData.DSConfiguration=} options
 * @return {?}
 */
JSData.DS.prototype.eject = function(resourceName, id, options) {};

/**
 * @template T
 * @param {string} resourceName
 * @param {(!Object|!JSData.DSFilterParams)} params
 * @param {!JSData.DSConfiguration=} options
 * @return {!Array<?>}
 */
JSData.DS.prototype.ejectAll = function(resourceName, params, options) {};

/**
 * @template T
 * @param {string} resourceName
 * @param {(!Object|!JSData.DSFilterParams)} params
 * @param {!JSData.DSConfiguration=} options
 * @return {!Array<?>}
 */
JSData.DS.prototype.filter = function(resourceName, params, options) {};

/**
 * @template T
 * @param {string} resourceName
 * @param {(string|number)} id
 * @param {!JSData.DSAdapterOperationConfiguration=} options
 * @return {!JSData.JSDataPromise<?>}
 */
JSData.DS.prototype.find = function(resourceName, id, options) {};

/**
 * @template T
 * @param {string} resourceName
 * @param {(!Object|!JSData.DSFilterParams)=} params
 * @param {!JSData.DSAdapterOperationConfiguration=} options
 * @return {!JSData.JSDataPromise<!Array<?>>}
 */
JSData.DS.prototype.findAll = function(resourceName, params, options) {};

/**
 * @template T
 * @param {string} resourceName
 * @param {(string|number)} id
 * @return {?}
 */
JSData.DS.prototype.get = function(resourceName, id) {};

/**
 * @template T
 * @param {string} resourceName
 * @param {!Array<(string|number)>=} ids
 * @return {!Array<?>}
 */
JSData.DS.prototype.getAll = function(resourceName, ids) {};

/**
 * @param {string} resourceName
 * @param {(string|number)} id
 * @return {boolean}
 */
JSData.DS.prototype.hasChanges = function(resourceName, id) {};

/**
 * @template TInject, U
 * @param {string} resourceName
 * @param {TInject|!Array<TInject>} attrs_or_items
 * @param {!JSData.DSConfiguration=} options
 * @return {?|!Array<?>}
 */
JSData.DS.prototype.inject = function(resourceName, attrs_or_items, options) {};

/**
 * @param {string} resourceName
 * @param {!Object} object
 * @return {boolean}
 */
JSData.DS.prototype.is = function(resourceName, object) {};

/**
 * @param {string} resourceName
 * @param {(string|number)=} id
 * @return {number}
 */
JSData.DS.prototype.lastModified = function(resourceName, id) {};

/**
 * @param {string} resourceName
 * @param {(string|number)=} id
 * @return {number}
 */
JSData.DS.prototype.lastSaved = function(resourceName, id) {};

/**
 * @template T
 * @param {string} resourceName
 * @param {(string|number)} idOrInstance
 * @param {(string|!Array<string>)} relations
 * @param {!JSData.DSAdapterOperationConfiguration=} options
 * @return {!JSData.JSDataPromise<?>}
 */
JSData.DS.prototype.loadRelations = function(resourceName, idOrInstance, relations, options) {};

/**
 * @template T
 * @param {string} resourceName
 * @param {(string|number)} id
 * @return {?}
 */
JSData.DS.prototype.previous = function(resourceName, id) {};

/**
 * @param {string} resourceName
 * @return {!JSData.JSDataPromise<void>}
 */
JSData.DS.prototype.reap = function(resourceName) {};

/**
 * @template T
 * @param {string} resourceName
 * @param {(string|number)} id
 * @param {!JSData.DSAdapterOperationConfiguration=} options
 * @return {!JSData.JSDataPromise<?>}
 */
JSData.DS.prototype.refresh = function(resourceName, id, options) {};

/**
 * @template T
 * @param {string} resourceName
 * @param {(!Object|!JSData.DSFilterParams)=} params
 * @param {!JSData.DSAdapterOperationConfiguration=} options
 * @return {!JSData.JSDataPromise<!Array<?>>}
 */
JSData.DS.prototype.refreshAll = function(resourceName, params, options) {};

/**
 * @template T
 * @param {string} resourceName
 * @param {(string|number)} id
 * @return {?}
 */
JSData.DS.prototype.revert = function(resourceName, id) {};

/**
 * @template T
 * @param {string} resourceName
 * @param {(string|number)} id
 * @param {!JSData.DSSaveConfiguration=} options
 * @return {!JSData.JSDataPromise<?>}
 */
JSData.DS.prototype.save = function(resourceName, id, options) {};

/**
 * @template T
 * @param {string} resourceName
 * @param {(string|number)} id
 * @param {!Object} attrs
 * @param {!JSData.DSAdapterOperationConfiguration=} options
 * @return {!JSData.JSDataPromise<?>}
 */
JSData.DS.prototype.update = function(resourceName, id, attrs, options) {};

/**
 * @template T
 * @param {string} resourceName
 * @param {!Object} attrs
 * @param {(!Object|!JSData.DSFilterParams)=} params
 * @param {!JSData.DSAdapterOperationConfiguration=} options
 * @return {!JSData.JSDataPromise<!Array<?>>}
 */
JSData.DS.prototype.updateAll = function(resourceName, attrs, params, options) {};

/**
 * @template T, TActions
 * @param {(string|!JSData.DSResourceDefinitionConfiguration)} resourceNameOrDefinition
 * @return {!JSData.DSResourceDefinition<T>|?}
 */
JSData.DS.prototype.defineResource = function(resourceNameOrDefinition) {};

/**
 * @param {string} adapterId
 * @param {!JSData.IDSAdapter} adapter
 * @param {{default: boolean}=} options
 * @return {void}
 */
JSData.DS.prototype.registerAdapter = function(adapterId, adapter, options) {};
/**
 * @extends {JSData.DSResourceDefinitionConfiguration}
 * @extends {JSData.DSEvents}
 * @record
 * @struct
 */
JSData.DSResourceDefinition = function() {};

/**
 * @param {(string|number)} id
 * @return {!Array<!Object>}
 */
JSData.DSResourceDefinition.prototype.changeHistory = function(id) {};

/**
 * @param {(string|number)} id
 * @param {{ignoredChanges: !Array<(string|!RegExp)>}=} options
 * @return {!Object}
 */
JSData.DSResourceDefinition.prototype.changes = function(id, options) {};

/**
 * @return {!Array<?>}
 */
JSData.DSResourceDefinition.prototype.clear = function() {};

/**
 * @param {(string|number|T)} idOrInstance
 * @return {?}
 */
JSData.DSResourceDefinition.prototype.compute = function(idOrInstance) {};

/**
 * @param {!Object} attrs
 * @param {!JSData.DSConfiguration=} options
 * @return {!JSData.JSDataPromise<?>}
 */
JSData.DSResourceDefinition.prototype.create = function(attrs, options) {};

/**
 * @param {!Array<T>=} array
 * @param {(!Object|!JSData.DSFilterParams)=} params
 * @param {!JSData.DSConfiguration=} options
 * @return {!JSData.DSCollection<?>}
 */
JSData.DSResourceDefinition.prototype.createCollection = function(array, params, options) {};

/**
 * @param {!Object=} attrs
 * @param {!JSData.DSConfiguration=} options
 * @return {?}
 */
JSData.DSResourceDefinition.prototype.createInstance = function(attrs, options) {};

/**
 * @param {(string|number)} id
 * @param {!JSData.DSAdapterOperationConfiguration=} options
 * @return {!JSData.JSDataPromise<void>}
 */
JSData.DSResourceDefinition.prototype.destroy = function(id, options) {};

/**
 * @param {(!Object|!JSData.DSFilterParams)=} params
 * @param {!JSData.DSAdapterOperationConfiguration=} options
 * @return {!JSData.JSDataPromise<void>}
 */
JSData.DSResourceDefinition.prototype.destroyAll = function(params, options) {};

/**
 * @return {void}
 */
JSData.DSResourceDefinition.prototype.digest = function() {};

/**
 * @param {(string|number)} id
 * @param {!JSData.DSConfiguration=} options
 * @return {?}
 */
JSData.DSResourceDefinition.prototype.eject = function(id, options) {};

/**
 * @param {(!Object|!JSData.DSFilterParams)} params
 * @param {!JSData.DSConfiguration=} options
 * @return {!Array<?>}
 */
JSData.DSResourceDefinition.prototype.ejectAll = function(params, options) {};

/**
 * @param {(!Object|!JSData.DSFilterParams)} params
 * @param {!JSData.DSConfiguration=} options
 * @return {!Array<?>}
 */
JSData.DSResourceDefinition.prototype.filter = function(params, options) {};

/**
 * @param {(string|number)} id
 * @param {!JSData.DSAdapterOperationConfiguration=} options
 * @return {!JSData.JSDataPromise<?>}
 */
JSData.DSResourceDefinition.prototype.find = function(id, options) {};

/**
 * @param {(!Object|!JSData.DSFilterParams)=} params
 * @param {!JSData.DSAdapterOperationConfiguration=} options
 * @return {!JSData.JSDataPromise<!Array<?>>}
 */
JSData.DSResourceDefinition.prototype.findAll = function(params, options) {};

/**
 * @param {(string|number)} id
 * @return {?}
 */
JSData.DSResourceDefinition.prototype.get = function(id) {};

/**
 * @param {!Array<(string|number)>=} ids
 * @return {!Array<?>}
 */
JSData.DSResourceDefinition.prototype.getAll = function(ids) {};

/**
 * @param {(string|number)} id
 * @return {boolean}
 */
JSData.DSResourceDefinition.prototype.hasChanges = function(id) {};

/**
 * @template TInject
 * @param {TInject|!Array<TInject>} attrs_or_items
 * @param {!JSData.DSConfiguration=} options
 * @return {?|!Array<?>}
 */
JSData.DSResourceDefinition.prototype.inject = function(attrs_or_items, options) {};

/**
 * @param {!Object} object
 * @return {boolean}
 */
JSData.DSResourceDefinition.prototype.is = function(object) {};

/**
 * @param {(string|number)=} id
 * @return {number}
 */
JSData.DSResourceDefinition.prototype.lastModified = function(id) {};

/**
 * @param {(string|number)=} id
 * @return {number}
 */
JSData.DSResourceDefinition.prototype.lastSaved = function(id) {};

/**
 * @param {(string|number)} idOrInstance
 * @param {(string|!Array<string>)} relations
 * @param {!JSData.DSAdapterOperationConfiguration=} options
 * @return {!JSData.JSDataPromise<?>}
 */
JSData.DSResourceDefinition.prototype.loadRelations = function(idOrInstance, relations, options) {};

/**
 * @param {(string|number)} id
 * @return {?}
 */
JSData.DSResourceDefinition.prototype.previous = function(id) {};

/**
 * @return {!JSData.JSDataPromise<void>}
 */
JSData.DSResourceDefinition.prototype.reap = function() {};

/**
 * @param {(string|number)} id
 * @param {!JSData.DSAdapterOperationConfiguration=} options
 * @return {!JSData.JSDataPromise<?>}
 */
JSData.DSResourceDefinition.prototype.refresh = function(id, options) {};

/**
 * @param {(!Object|!JSData.DSFilterParams)=} params
 * @param {!JSData.DSAdapterOperationConfiguration=} options
 * @return {!JSData.JSDataPromise<!Array<?>>}
 */
JSData.DSResourceDefinition.prototype.refreshAll = function(params, options) {};

/**
 * @param {(string|number)} id
 * @return {?}
 */
JSData.DSResourceDefinition.prototype.revert = function(id) {};

/**
 * @param {(string|number)} id
 * @param {!JSData.DSSaveConfiguration=} options
 * @return {!JSData.JSDataPromise<?>}
 */
JSData.DSResourceDefinition.prototype.save = function(id, options) {};

/**
 * @param {(string|number)} id
 * @param {!Object} attrs
 * @param {!JSData.DSAdapterOperationConfiguration=} options
 * @return {!JSData.JSDataPromise<?>}
 */
JSData.DSResourceDefinition.prototype.update = function(id, attrs, options) {};

/**
 * @param {!Object} attrs
 * @param {(!Object|!JSData.DSFilterParams)=} params
 * @param {!JSData.DSAdapterOperationConfiguration=} options
 * @return {!JSData.JSDataPromise<!Array<?>>}
 */
JSData.DSResourceDefinition.prototype.updateAll = function(attrs, params, options) {};
/**
 * @extends {JSData.DSEvents}
 * @record
 * @struct
 */
JSData.DSInstanceShorthands = function() {};

/**
 * @return {void}
 */
JSData.DSInstanceShorthands.prototype.DSCompute = function() {};

/**
 * @param {!JSData.DSAdapterOperationConfiguration=} options
 * @return {!JSData.JSDataPromise<?>}
 */
JSData.DSInstanceShorthands.prototype.DSRefresh = function(options) {};

/**
 * @param {!JSData.DSSaveConfiguration=} options
 * @return {!JSData.JSDataPromise<?>}
 */
JSData.DSInstanceShorthands.prototype.DSSave = function(options) {};

/**
 * @param {!JSData.DSAdapterOperationConfiguration=} options
 * @return {!JSData.JSDataPromise<?>}
 */
JSData.DSInstanceShorthands.prototype.DSUpdate = function(options) {};

/**
 * @param {!JSData.DSAdapterOperationConfiguration=} options
 * @return {!JSData.JSDataPromise<void>}
 */
JSData.DSInstanceShorthands.prototype.DSDestroy = function(options) {};

/**
 * @param {!JSData.DSAdapterOperationConfiguration=} options
 * @return {!JSData.JSDataPromise<?>}
 */
JSData.DSInstanceShorthands.prototype.DSCreate = function(options) {};

/**
 * @param {(string|!Array<string>)} relations
 * @param {!JSData.DSAdapterOperationConfiguration=} options
 * @return {!JSData.JSDataPromise<?>}
 */
JSData.DSInstanceShorthands.prototype.DSLoadRelations = function(relations, options) {};

/**
 * @return {!Array<!Object>}
 */
JSData.DSInstanceShorthands.prototype.DSChangeHistory = function() {};

/**
 * @return {!Object}
 */
JSData.DSInstanceShorthands.prototype.DSChanges = function() {};

/**
 * @return {boolean}
 */
JSData.DSInstanceShorthands.prototype.DSHasChanges = function() {};

/**
 * @return {number}
 */
JSData.DSInstanceShorthands.prototype.DSLastModified = function() {};

/**
 * @return {number}
 */
JSData.DSInstanceShorthands.prototype.DSLastSaved = function() {};

/**
 * @return {?}
 */
JSData.DSInstanceShorthands.prototype.DSPrevious = function() {};

/**
 * @return {?}
 */
JSData.DSInstanceShorthands.prototype.DSRevert = function() {};

/** @typedef {function(!JSData.DSResourceDefinition<?>, ?): void} */
JSData.DSSyncLifecycleHookHandler;

/** @typedef {function(!JSData.DSResourceDefinition<?>, ?): !JSData.JSDataPromise<?>} */
JSData.DSAsyncLifecycleHookHandler;

/** @typedef {function(!JSData.DSResourceDefinition<?>, ?, function(!Error, ?): void): void} */
JSData.DSAsyncLifecycleHookHandlerCb;
/**
 * @record
 * @struct
 */
JSData.IDSResourceLifecycleValidateEventHandlers = function() {};
 /** @type {(function(!JSData.DSResourceDefinition<?>, ?): !JSData.JSDataPromise<?>|function(!JSData.DSResourceDefinition<?>, ?, function(!Error, ?): void): void)} */
JSData.IDSResourceLifecycleValidateEventHandlers.prototype.beforeValidate;
 /** @type {(function(!JSData.DSResourceDefinition<?>, ?): !JSData.JSDataPromise<?>|function(!JSData.DSResourceDefinition<?>, ?, function(!Error, ?): void): void)} */
JSData.IDSResourceLifecycleValidateEventHandlers.prototype.validate;
 /** @type {(function(!JSData.DSResourceDefinition<?>, ?): !JSData.JSDataPromise<?>|function(!JSData.DSResourceDefinition<?>, ?, function(!Error, ?): void): void)} */
JSData.IDSResourceLifecycleValidateEventHandlers.prototype.afterValidate;
/**
 * @record
 * @struct
 */
JSData.IDSResourceLifecycleCreateEventHandlers = function() {};
 /** @type {(function(!JSData.DSResourceDefinition<?>, ?): !JSData.JSDataPromise<?>|function(!JSData.DSResourceDefinition<?>, ?, function(!Error, ?): void): void)} */
JSData.IDSResourceLifecycleCreateEventHandlers.prototype.beforeCreate;
 /** @type {(function(!JSData.DSResourceDefinition<?>, ?): !JSData.JSDataPromise<?>|function(!JSData.DSResourceDefinition<?>, ?, function(!Error, ?): void): void)} */
JSData.IDSResourceLifecycleCreateEventHandlers.prototype.afterCreate;
/**
 * @record
 * @struct
 */
JSData.IDSResourceLifecycleUpdateEventHandlers = function() {};
 /** @type {(function(!JSData.DSResourceDefinition<?>, ?): !JSData.JSDataPromise<?>|function(!JSData.DSResourceDefinition<?>, ?, function(!Error, ?): void): void)} */
JSData.IDSResourceLifecycleUpdateEventHandlers.prototype.beforeUpdate;
 /** @type {(function(!JSData.DSResourceDefinition<?>, ?): !JSData.JSDataPromise<?>|function(!JSData.DSResourceDefinition<?>, ?, function(!Error, ?): void): void)} */
JSData.IDSResourceLifecycleUpdateEventHandlers.prototype.afterUpdate;
/**
 * @record
 * @struct
 */
JSData.IDSResourceLifecycleDestroyEventHandlers = function() {};
 /** @type {(function(!JSData.DSResourceDefinition<?>, ?): !JSData.JSDataPromise<?>|function(!JSData.DSResourceDefinition<?>, ?, function(!Error, ?): void): void)} */
JSData.IDSResourceLifecycleDestroyEventHandlers.prototype.beforeDestroy;
 /** @type {(function(!JSData.DSResourceDefinition<?>, ?): !JSData.JSDataPromise<?>|function(!JSData.DSResourceDefinition<?>, ?, function(!Error, ?): void): void)} */
JSData.IDSResourceLifecycleDestroyEventHandlers.prototype.afterDestroy;
/**
 * @record
 * @struct
 */
JSData.IDSResourceLifecycleCreateInstanceEventHandlers = function() {};
 /** @type {function(!JSData.DSResourceDefinition<?>, ?): void} */
JSData.IDSResourceLifecycleCreateInstanceEventHandlers.prototype.beforeCreateInstance;
 /** @type {function(!JSData.DSResourceDefinition<?>, ?): void} */
JSData.IDSResourceLifecycleCreateInstanceEventHandlers.prototype.afterCreateInstance;
/**
 * @record
 * @struct
 */
JSData.IDSResourceLifecycleInjectEventHandlers = function() {};
 /** @type {function(!JSData.DSResourceDefinition<?>, ?): void} */
JSData.IDSResourceLifecycleInjectEventHandlers.prototype.beforeInject;
 /** @type {function(!JSData.DSResourceDefinition<?>, ?): void} */
JSData.IDSResourceLifecycleInjectEventHandlers.prototype.afterInject;
/**
 * @record
 * @struct
 */
JSData.IDSResourceLifecycleEjectEventHandlers = function() {};
 /** @type {function(!JSData.DSResourceDefinition<?>, ?): void} */
JSData.IDSResourceLifecycleEjectEventHandlers.prototype.beforeEject;
 /** @type {function(!JSData.DSResourceDefinition<?>, ?): void} */
JSData.IDSResourceLifecycleEjectEventHandlers.prototype.afterEject;
/**
 * @record
 * @struct
 */
JSData.IDSResourceLifecycleReapEventHandlers = function() {};
 /** @type {function(!JSData.DSResourceDefinition<?>, ?): void} */
JSData.IDSResourceLifecycleReapEventHandlers.prototype.beforeReap;
 /** @type {function(!JSData.DSResourceDefinition<?>, ?): void} */
JSData.IDSResourceLifecycleReapEventHandlers.prototype.afterReap;
/**
 * @record
 * @struct
 */
JSData.IDSResourceLifecycleFindEventHandlers = function() {};
 /** @type {(function(!JSData.DSResourceDefinition<?>, ?): !JSData.JSDataPromise<?>|function(!JSData.DSResourceDefinition<?>, ?, function(!Error, ?): void): void)} */
JSData.IDSResourceLifecycleFindEventHandlers.prototype.afterFind;
/**
 * @record
 * @struct
 */
JSData.IDSResourceLifecycleFindAllEventHandlers = function() {};
 /** @type {(function(!JSData.DSResourceDefinition<?>, ?): !JSData.JSDataPromise<?>|function(!JSData.DSResourceDefinition<?>, ?, function(!Error, ?): void): void)} */
JSData.IDSResourceLifecycleFindAllEventHandlers.prototype.afterFindAll;
/**
 * @record
 * @struct
 */
JSData.IDSResourceLifecycleLoadRelationsEventHandlers = function() {};
 /** @type {(function(!JSData.DSResourceDefinition<?>, ?): !JSData.JSDataPromise<?>|function(!JSData.DSResourceDefinition<?>, ?, function(!Error, ?): void): void)} */
JSData.IDSResourceLifecycleLoadRelationsEventHandlers.prototype.afterLoadRelations;
/**
 * @record
 * @struct
 */
JSData.IDSResourceLifecycleCreateCollectionEventHandlers = function() {};
 /** @type {function(!JSData.DSResourceDefinition<?>, ?): void} */
JSData.IDSResourceLifecycleCreateCollectionEventHandlers.prototype.beforeCreateCollection;
 /** @type {function(!JSData.DSResourceDefinition<?>, ?): void} */
JSData.IDSResourceLifecycleCreateCollectionEventHandlers.prototype.afterCreateCollection;
/**
 * @extends {JSData.IDSResourceLifecycleCreateEventHandlers}
 * @extends {JSData.IDSResourceLifecycleCreateInstanceEventHandlers}
 * @extends {JSData.IDSResourceLifecycleValidateEventHandlers}
 * @extends {JSData.IDSResourceLifecycleUpdateEventHandlers}
 * @extends {JSData.IDSResourceLifecycleDestroyEventHandlers}
 * @extends {JSData.IDSResourceLifecycleInjectEventHandlers}
 * @extends {JSData.IDSResourceLifecycleEjectEventHandlers}
 * @extends {JSData.IDSResourceLifecycleReapEventHandlers}
 * @extends {JSData.IDSResourceLifecycleFindEventHandlers}
 * @extends {JSData.IDSResourceLifecycleFindAllEventHandlers}
 * @extends {JSData.IDSResourceLifecycleLoadRelationsEventHandlers}
 * @extends {JSData.IDSResourceLifecycleCreateCollectionEventHandlers}
 * @record
 * @struct
 */
JSData.IDSResourceLifecycleEventHandlers = function() {};
/**
 * @record
 * @struct
 */
JSData.DSErrors = function() {};
 /** @type {!JSData.DSError} */
JSData.DSErrors.prototype.IllegalArgumentError;
 /** @type {!JSData.DSError} */
JSData.DSErrors.prototype.IA;
 /** @type {!JSData.DSError} */
JSData.DSErrors.prototype.RuntimeError;
 /** @type {!JSData.DSError} */
JSData.DSErrors.prototype.R;
 /** @type {!JSData.DSError} */
JSData.DSErrors.prototype.NonexistentResourceError;
 /** @type {!JSData.DSError} */
JSData.DSErrors.prototype.NER;
/**
 * @record
 * @struct
 */
JSData.DSError = function() {};

/* TODO: ConstructSignature: JSData */
 /** @type {string} */
JSData.DSError.prototype.message;
 /** @type {string} */
JSData.DSError.prototype.type;
/**
 * @record
 * @struct
 */
JSData.IDSAdapter = function() {};

/**
 * @param {!JSData.DSResourceDefinition<?>} config
 * @param {!Object} attrs
 * @param {!JSData.DSConfiguration=} options
 * @return {!JSData.JSDataPromise<?>}
 */
JSData.IDSAdapter.prototype.create = function(config, attrs, options) {};

/**
 * @param {!JSData.DSResourceDefinition<?>} config
 * @param {(string|number)} id
 * @param {!JSData.DSConfiguration=} options
 * @return {!JSData.JSDataPromise<void>}
 */
JSData.IDSAdapter.prototype.destroy = function(config, id, options) {};

/**
 * @param {!JSData.DSResourceDefinition<?>} config
 * @param {(!Object|!JSData.DSFilterParams)} params
 * @param {!JSData.DSConfiguration=} options
 * @return {!JSData.JSDataPromise<void>}
 */
JSData.IDSAdapter.prototype.destroyAll = function(config, params, options) {};

/**
 * @param {!JSData.DSResourceDefinition<?>} config
 * @param {(string|number)} id
 * @param {!JSData.DSConfiguration=} options
 * @return {!JSData.JSDataPromise<?>}
 */
JSData.IDSAdapter.prototype.find = function(config, id, options) {};

/**
 * @param {!JSData.DSResourceDefinition<?>} config
 * @param {(!Object|!JSData.DSFilterParams)=} params
 * @param {!JSData.DSConfiguration=} options
 * @return {!JSData.JSDataPromise<?>}
 */
JSData.IDSAdapter.prototype.findAll = function(config, params, options) {};

/**
 * @param {!JSData.DSResourceDefinition<?>} config
 * @param {(string|number)} id
 * @param {!Object} attrs
 * @param {!JSData.DSConfiguration=} options
 * @return {!JSData.JSDataPromise<?>}
 */
JSData.IDSAdapter.prototype.update = function(config, id, attrs, options) {};

/**
 * @param {!JSData.DSResourceDefinition<?>} config
 * @param {!Object} attrs
 * @param {(!Object|!JSData.DSFilterParams)=} params
 * @param {!JSData.DSConfiguration=} options
 * @return {!JSData.JSDataPromise<?>}
 */
JSData.IDSAdapter.prototype.updateAll = function(config, attrs, params, options) {};
/**
 * @record
 * @struct
 */
JSData.DSActionConfig = function() {};
 /** @type {string} */
JSData.DSActionConfig.prototype.adapter;
 /** @type {string} */
JSData.DSActionConfig.prototype.endpoint;
 /** @type {string} */
JSData.DSActionConfig.prototype.pathname;
 /** @type {string} */
JSData.DSActionConfig.prototype.method;
/**
 * @record
 * @struct
 */
JSData.DSActionFn = function() {};

/* TODO: CallSignature: JSData */
 /** @type {{DS: !JSData.DS, DSErrors: !JSData.DSErrors, DSUtils: ?}} */
var JSData;

/* TODO: ExportAssignment in  */
