/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/rsmq-worker/index.d.ts:

/* TODO: ImportEqualsDeclaration in  */

/* TODO: ImportEqualsDeclaration in  */

/* TODO: ImportDeclaration in  */
/** @const */
var RSMQWorker = {};
/**
 * @record
 * @struct
 */
RSMQWorker.Client = function() {};

/**
 * @return {!RSMQWorker.Client}
 */
RSMQWorker.Client.prototype.start = function() {};

/**
 * @return {!RSMQWorker.Client}
 */
RSMQWorker.Client.prototype.stop = function() {};

/**
 * @param {string} message
 * @param {number|!RSMQWorker.CallbackT<string>=} delay_or_cb
 * @param {!RSMQWorker.CallbackT<string>=} cb
 * @return {!RSMQWorker.Client}
 */
RSMQWorker.Client.prototype.send = function(message, delay_or_cb, cb) {};

/**
 * @param {string} id
 * @param {!RSMQWorker.CallbackT<void>=} cb
 * @return {!RSMQWorker.Client}
 */
RSMQWorker.Client.prototype.del = function(id, cb) {};

/**
 * @param {(number|!Array<number>)} interval
 * @return {!RSMQWorker.Client}
 */
RSMQWorker.Client.prototype.changeInterval = function(interval) {};
/**
 * @record
 * @struct
 */
RSMQWorker.Options = function() {};
 /** @type {number} */
RSMQWorker.Options.prototype.interval;
 /** @type {number} */
RSMQWorker.Options.prototype.maxReceiveCount;
 /** @type {number} */
RSMQWorker.Options.prototype.invisibletime;
 /** @type {number} */
RSMQWorker.Options.prototype.defaultDelay;
 /** @type {boolean} */
RSMQWorker.Options.prototype.autostart;
 /** @type {number} */
RSMQWorker.Options.prototype.timeout;
 /** @type {!RSMQWorker.CustomExceedCheckCallback} */
RSMQWorker.Options.prototype.customExceedCheck;
 /** @type {!RedisSMQ.Client} */
RSMQWorker.Options.prototype.rsmq;
 /** @type {?} */
RSMQWorker.Options.prototype.redis;
 /** @type {string} */
RSMQWorker.Options.prototype.redisPrefix;
 /** @type {string} */
RSMQWorker.Options.prototype.host;
 /** @type {number} */
RSMQWorker.Options.prototype.port;
 /** @type {?} */
RSMQWorker.Options.prototype.options;
/**
 * @record
 * @struct
 */
RSMQWorker.CustomExceedCheckCallback = function() {};

/* TODO: CallSignature: RSMQWorker */
/**
 * @record
 * @struct
 */
RSMQWorker.CallbackT = function() {};

/* TODO: CallSignature: RSMQWorker */
/**
 * @record
 * @struct
 */
function RSMQWorkerStatic() {}

/* TODO: ConstructSignature:  */
 /** @type {?} */
var RSMQWorker;

/* TODO: ExportAssignment in  */
