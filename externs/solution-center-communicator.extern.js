/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/solution-center-communicator/index.d.ts:
/** @const */
var ScCommunicator = {};
/**
 * @record
 * @struct
 */
ScCommunicator.Environment = function() {};
 /** @type {string} */
ScCommunicator.Environment.prototype.NAME;
 /** @type {string} */
ScCommunicator.Environment.prototype.URL;
 /** @type {string} */
ScCommunicator.Environment.prototype.DOMAIN;
 /** @type {string} */
ScCommunicator.Environment.prototype.PORT;
 /** @type {string} */
ScCommunicator.Environment.prototype.USER_SERVICE;
 /** @type {string} */
ScCommunicator.Environment.prototype.TOKEN_SERVICE;
 /** @type {string} */
ScCommunicator.Environment.prototype.MERCHANT_SERVICE;
 /** @type {string} */
ScCommunicator.Environment.prototype.GOODDATA_SERVICE;
 /** @type {string} */
ScCommunicator.Environment.prototype.MODULE_SERVICE;
 /** @type {string} */
ScCommunicator.Environment.prototype.USER_SERVICE_NEW;
/**
 * @record
 * @struct
 */
ScCommunicator.Environments = function() {};
 /** @type {!ScCommunicator.Environment} */
ScCommunicator.Environments.prototype.PRODUCTION;
 /** @type {!ScCommunicator.Environment} */
ScCommunicator.Environments.prototype.STAGE;
 /** @type {!ScCommunicator.Environment} */
ScCommunicator.Environments.prototype.INTEGRATION;
 /** @type {!ScCommunicator.Environment} */
ScCommunicator.Environments.prototype.DEVELOPMENT;
 /** @type {!ScCommunicator.Environment} */
ScCommunicator.Environments.prototype.LOCAL;
 /** @type {!ScCommunicator.Environment} */
ScCommunicator.Environments.prototype.TESTING;
/**
 * @record
 * @struct
 */
ScCommunicator.ScEnvironmentsProvider = function() {};

/**
 * Get current environment
 * If environment was not previously configured, use default environment
 * 
 * @return {!ScCommunicator.Environment}
 */
ScCommunicator.ScEnvironmentsProvider.prototype.getCurrentEnvironment = function() {};

/**
 * Get specific environment
 * 
 * @param {string} name
 * @return {!ScCommunicator.Environment}
 */
ScCommunicator.ScEnvironmentsProvider.prototype.getSpecificEnvironment = function(name) {};

/**
 * Set current environment
 * 
 * @param {?} env
 * @return {!ScCommunicator.Environment}
 */
ScCommunicator.ScEnvironmentsProvider.prototype.setCurrentEnvironment = function(env) {};

/**
 * Access to the public methods of the service
 * @return {?}
 */
ScCommunicator.ScEnvironmentsProvider.prototype.$get = function() {};
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "solution-center-communicator"
/** @const */
tsickle_declare_module.solution_center_communicator = {};

/* TODO: ExportAssignment in tsickle_declare_module.solution_center_communicator */
