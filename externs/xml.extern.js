/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/xml/index.d.ts:
/**
 * @record
 * @struct
 */
function Option() {}
 /** @type {string} */
Option.prototype.indent;
 /** @type {boolean} */
Option.prototype.stream;
 /** @type {(boolean|?)} */
Option.prototype.declaration;
/**
 * @record
 * @struct
 */
function XmlAttrs() {}

/* TODO: IndexSignature:  */
/**
 * @record
 * @struct
 */
function XmlDescArray() {}

/* TODO: IndexSignature:  */
/**
 * @record
 * @struct
 */
function ElementObject() {}

/**
 * @param {(string|number|boolean|?|!Array<(string|number|boolean)>)} xmlObject
 * @return {void}
 */
ElementObject.prototype.push = function(xmlObject) {};

/**
 * @param {(string|number|boolean|?|!Array<(string|number|boolean)>)=} xmlObject
 * @return {void}
 */
ElementObject.prototype.close = function(xmlObject) {};

/** @typedef {(string|number|boolean)} */
var XmlAtom;

/** @typedef {(string|number|boolean|?|!Array<(string|number|boolean)>)} */
var XmlDesc;

/** @typedef {(string|number|boolean|?|!Array<(string|number|boolean)>)} */
var XmlObject;
/** @const */
var xml = {};

/**
 * @param {...(string|number|boolean|?|!Array<(string|number|boolean)>)} xmlObjects
 * @return {?}
 */
xml.element = function(xmlObjects) {};

/**
 * @param {...(string|number|boolean|?|!Array<(string|number|boolean)>)} xmlObjects
 * @return {?}
 */
xml.Element = function(xmlObjects) {};

/**
 * @param {(string|number|boolean|?|!Array<(string|number|boolean)>|!Array<(string|number|boolean|?|!Array<(string|number|boolean)>)>)=} xmlObject
 * @param {{stream: boolean, indent: string}|(string|boolean|?)=} options
 * @return {!NodeJS.ReadableStream|string}
 */
function xml(xmlObject, options) {}

/* TODO: ExportAssignment in  */
