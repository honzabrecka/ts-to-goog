/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/steam/index.d.ts:

/* TODO: ExportAssignment in  */
/** @const */
var Steam = {};
 /** @type {?} */
Steam.servers;
/**
 * @record
 * @struct
 */
Steam.LogonOptions = function() {};
 /** @type {string} */
Steam.LogonOptions.prototype.accountName;
 /** @type {string} */
Steam.LogonOptions.prototype.password;
 /** @type {string} */
Steam.LogonOptions.prototype.shaSentryfile;
 /** @type {string} */
Steam.LogonOptions.prototype.authCode;

/** @const */
Steam.EResult = {};
/** @const {number} */
Steam.EResult.AccountLogonDenied;

/** @const */
Steam.EPersonaState = {};
/** @const {number} */
Steam.EPersonaState.Online;

/** @const */
Steam.EChatEntryType = {};
/** @const {number} */
Steam.EChatEntryType.ChatMsg;

/** @const */
Steam.EChatMemberStateChange = {};
/** @const {number} */
Steam.EChatMemberStateChange.Kicked;
/**
 * @extends {NodeJS.EventEmitter}
 * @constructor
 * @struct
 */
Steam.SteamClient = function() {};
 /** @type {string} */
Steam.SteamClient.prototype.sessionId;
 /** @type {!Array<string>} */
Steam.SteamClient.prototype.cookie;
 /** @type {string} */
Steam.SteamClient.prototype.steamID;
 /** @type {!Object} */
Steam.SteamClient.prototype.users;

/**
 * @param {!Steam.LogonOptions} options
 * @return {void}
 */
Steam.SteamClient.prototype.logOn = function(options) {};

/**
 * @param {function(!Array<?>): void} callback
 * @return {void}
 */
Steam.SteamClient.prototype.webLogOn = function(callback) {};

/**
 * @param {string} chatId
 * @return {void}
 */
Steam.SteamClient.prototype.joinChat = function(chatId) {};

/**
 * @param {?} source
 * @param {string} message
 * @param {Steam.EChatEntryType} entryType
 * @return {void}
 */
Steam.SteamClient.prototype.sendMessage = function(source, message, entryType) {};

/**
 * @param {Steam.EPersonaState} state
 * @return {void}
 */
Steam.SteamClient.prototype.setPersonaState = function(state) {};

/**
 * @param {string} name
 * @return {void}
 */
Steam.SteamClient.prototype.setPersonaName = function(name) {};

/**
 * @param {string} event
 * @param {!Function} listener
 * @return {SteamClient}
 */
Steam.SteamClient.prototype.addListener = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function} listener
 * @return {SteamClient}
 */
Steam.SteamClient.prototype.on = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function} listener
 * @return {SteamClient}
 */
Steam.SteamClient.prototype.once = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function} listener
 * @return {SteamClient}
 */
Steam.SteamClient.prototype.removeListener = function(event, listener) {};

/**
 * @param {string=} event
 * @return {SteamClient}
 */
Steam.SteamClient.prototype.removeAllListeners = function(event) {};

/**
 * @param {number} n
 * @return {SteamClient}
 */
Steam.SteamClient.prototype.setMaxListeners = function(n) {};

/**
 * @return {number}
 */
Steam.SteamClient.prototype.getMaxListeners = function() {};

/**
 * @param {string} event
 * @return {!Array<!Function>}
 */
Steam.SteamClient.prototype.listeners = function(event) {};

/**
 * @param {string} event
 * @param {...?} args
 * @return {boolean}
 */
Steam.SteamClient.prototype.emit = function(event, args) {};

/**
 * @param {string} type
 * @return {number}
 */
Steam.SteamClient.prototype.listenerCount = function(type) {};
