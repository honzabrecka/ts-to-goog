/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/launchpad/index.d.ts:

/**
 * For launching local browsers. The callback will be given a Launcher to
 * perform the actual launching.
 * @param {?} cb
 * @return {void}
 */
function local(cb) {}
 /** @type {?} */
local.platform;
/**
 * @record
 * @struct
 */
function BrowserstackAuth() {}
 /** @type {string} */
BrowserstackAuth.prototype.username;
 /** @type {string} */
BrowserstackAuth.prototype.password;

/**
 * @param {?} authCreds
 * @param {?} cb
 * @return {void}
 */
function browserstack(authCreds, cb) {}
/**
 * @record
 * @struct
 */
function BrowserPlatformDetails() {}
 /** @type {string} */
BrowserPlatformDetails.prototype.pathQuery;
 /** @type {string} */
BrowserPlatformDetails.prototype.plistPath;
 /** @type {string} */
BrowserPlatformDetails.prototype.command;
 /** @type {string} */
BrowserPlatformDetails.prototype.process;
 /** @type {string} */
BrowserPlatformDetails.prototype.versionKey;
 /** @type {string} */
BrowserPlatformDetails.prototype.defaultLocation;
 /** @type {!Array<string>} */
BrowserPlatformDetails.prototype.args;
 /** @type {boolean} */
BrowserPlatformDetails.prototype.opensTab;
 /** @type {boolean} */
BrowserPlatformDetails.prototype.multi;
 /** @type {?} */
BrowserPlatformDetails.prototype.getCommand;
 /** @type {string} */
BrowserPlatformDetails.prototype.cwd;
 /** @type {string} */
BrowserPlatformDetails.prototype.imageName;
/**
 * @record
 * @struct
 */
function LaunchOptions() {}
 /** @type {string} */
LaunchOptions.prototype.browser;
 /** @type {string} */
LaunchOptions.prototype.version;
/**
 * @record
 * @struct
 */
function Launcher() {}

/* TODO: CallSignature:  */
 /** @type {?} */
Launcher.prototype.chrome;
 /** @type {?} */
Launcher.prototype.chromium;
 /** @type {?} */
Launcher.prototype.canary;
 /** @type {?} */
Launcher.prototype.firefox;
 /** @type {?} */
Launcher.prototype.aurora;
 /** @type {?} */
Launcher.prototype.opera;
 /** @type {?} */
Launcher.prototype.ie;
 /** @type {?} */
Launcher.prototype.edge;
 /** @type {?} */
Launcher.prototype.safari;
 /** @type {?} */
Launcher.prototype.phantom;
 /** @type {?} */
Launcher.prototype.nodeWebkit;

/**
 * @param {?} cb
 * @return {void}
 */
Launcher.prototype.browsers = function(cb) {};
/**
 * @record
 * @struct
 */
function Browser() {}
 /** @type {string} */
Browser.prototype.name;
 /** @type {string} */
Browser.prototype.version;
 /** @type {string} */
Browser.prototype.binPath;
/**
 * @record
 * @struct
 */
function BrowserFunction() {}

/* TODO: CallSignature:  */
/**
 * @record
 * @struct
 */
function Instance() {}
 /** @type {string} */
Instance.prototype.id;

/**
 * @param {?} cb
 * @return {void}
 */
Instance.prototype.stop = function(cb) {};

/**
 * @param {?} cb
 * @return {void}
 */
Instance.prototype.status = function(cb) {};

/**
 * @param {string} event
 * @param {!Function} listener
 * @return {?}
 */
Instance.prototype.addListener = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function} listener
 * @return {?}
 */
Instance.prototype.on = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function} listener
 * @return {?}
 */
Instance.prototype.once = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function} listener
 * @return {?}
 */
Instance.prototype.removeListener = function(event, listener) {};

/**
 * @param {string=} event
 * @return {?}
 */
Instance.prototype.removeAllListeners = function(event) {};

/**
 * @param {number} n
 * @return {void}
 */
Instance.prototype.setMaxListeners = function(n) {};

/**
 * @param {string} event
 * @return {!Array<!Function>}
 */
Instance.prototype.listeners = function(event) {};

/**
 * @param {string} event
 * @param {...?} args
 * @return {boolean}
 */
Instance.prototype.emit = function(event, args) {};
