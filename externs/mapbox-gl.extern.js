/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/mapbox-gl/index.d.ts:
/** @const */
var mapboxgl = {};
 /** @type {string} */
mapboxgl.accessToken;
 /** @type {string} */
mapboxgl.version;

/**
 * @param {{failIfMajorPerformanceCaveat: boolean}=} options
 * @return {boolean}
 */
mapboxgl.supported = function(options) {};

/**
 * @param {string} pluginURL
 * @param {!Function} callback
 * @return {void}
 */
mapboxgl.setRTLTextPlugin = function(pluginURL, callback) {};

/** @typedef {(!Array<number>|!mapboxgl.LngLat)} */
mapboxgl.LngLatLike;

/** @typedef {(!Array<!Array<number>>|!Array<(!Array<number>|!mapboxgl.LngLat)>|!mapboxgl.LngLatBounds)} */
mapboxgl.LngLatBoundsLike;

/** @typedef {(!Array<number>|!mapboxgl.Point)} */
mapboxgl.PointLike;

/**
 * @constructor
 * @struct
 * @param {!mapboxgl.MapboxOptions=} options
 */
mapboxgl.Map = function(options) {};
 /** @type {boolean} */
mapboxgl.Map.prototype.showTileBoundaries;
 /** @type {boolean} */
mapboxgl.Map.prototype.showCollisionBoxes;
 /** @type {boolean} */
mapboxgl.Map.prototype.repaint;
 /** @type {!mapboxgl.ScrollZoomHandler} */
mapboxgl.Map.prototype.scrollZoom;
 /** @type {!mapboxgl.BoxZoomHandler} */
mapboxgl.Map.prototype.boxZoom;
 /** @type {!mapboxgl.DragRotateHandler} */
mapboxgl.Map.prototype.dragRotate;
 /** @type {!mapboxgl.DragPanHandler} */
mapboxgl.Map.prototype.dragPan;
 /** @type {!mapboxgl.KeyboardHandler} */
mapboxgl.Map.prototype.keyboard;
 /** @type {!mapboxgl.DoubleClickZoomHandler} */
mapboxgl.Map.prototype.doubleClickZoom;
 /** @type {!mapboxgl.TouchZoomRotateHandler} */
mapboxgl.Map.prototype.touchZoomRotate;

/**
 * @param {!mapboxgl.Control} control
 * @param {string=} position
 * @return {Map}
 */
mapboxgl.Map.prototype.addControl = function(control, position) {};

/**
 * @param {!mapboxgl.Control} control
 * @return {Map}
 */
mapboxgl.Map.prototype.removeControl = function(control) {};

/**
 * @param {string} klass
 * @param {!mapboxgl.StyleOptions=} options
 * @return {Map}
 */
mapboxgl.Map.prototype.addClass = function(klass, options) {};

/**
 * @param {string} klass
 * @param {!mapboxgl.StyleOptions=} options
 * @return {Map}
 */
mapboxgl.Map.prototype.removeClass = function(klass, options) {};

/**
 * @param {!Array<string>} klasses
 * @param {!mapboxgl.StyleOptions=} options
 * @return {Map}
 */
mapboxgl.Map.prototype.setClasses = function(klasses, options) {};

/**
 * @param {string} klass
 * @return {boolean}
 */
mapboxgl.Map.prototype.hasClass = function(klass) {};

/**
 * @return {!Array<string>}
 */
mapboxgl.Map.prototype.getClasses = function() {};

/**
 * @return {Map}
 */
mapboxgl.Map.prototype.resize = function() {};

/**
 * @return {!mapboxgl.LngLatBounds}
 */
mapboxgl.Map.prototype.getBounds = function() {};

/**
 * @param {(!Array<!Array<number>>|!Array<(!Array<number>|!mapboxgl.LngLat)>|!mapboxgl.LngLatBounds)=} lnglatbounds
 * @return {Map}
 */
mapboxgl.Map.prototype.setMaxBounds = function(lnglatbounds) {};

/**
 * @param {number=} minZoom
 * @return {Map}
 */
mapboxgl.Map.prototype.setMinZoom = function(minZoom) {};

/**
 * @return {number}
 */
mapboxgl.Map.prototype.getMinZoom = function() {};

/**
 * @param {number=} maxZoom
 * @return {Map}
 */
mapboxgl.Map.prototype.setMaxZoom = function(maxZoom) {};

/**
 * @return {number}
 */
mapboxgl.Map.prototype.getMaxZoom = function() {};

/**
 * @param {(!Array<number>|!mapboxgl.LngLat)} lnglat
 * @return {!mapboxgl.Point}
 */
mapboxgl.Map.prototype.project = function(lnglat) {};

/**
 * @param {(!Array<number>|!mapboxgl.Point)} point
 * @return {!mapboxgl.LngLat}
 */
mapboxgl.Map.prototype.unproject = function(point) {};

/**
 * @param {(!Array<number>|!mapboxgl.Point|!Array<(!Array<number>|!mapboxgl.Point)>)=} pointOrBox
 * @param {{layers: !Array<string>, filter: !Array<?>}=} parameters
 * @return {!Array<?>}
 */
mapboxgl.Map.prototype.queryRenderedFeatures = function(pointOrBox, parameters) {};

/**
 * @param {string} sourceID
 * @param {{sourceLayer: string, filter: !Array<?>}=} parameters
 * @return {!Array<?>}
 */
mapboxgl.Map.prototype.querySourceFeatures = function(sourceID, parameters) {};

/**
 * @param {(string|!mapboxgl.Style)} style
 * @return {Map}
 */
mapboxgl.Map.prototype.setStyle = function(style) {};

/**
 * @return {!mapboxgl.Style}
 */
mapboxgl.Map.prototype.getStyle = function() {};

/**
 * @return {boolean}
 */
mapboxgl.Map.prototype.isStyleLoaded = function() {};

/**
 * @param {string} id
 * @param {(!mapboxgl.VectorSource|!mapboxgl.RasterSource|!mapboxgl.GeoJSONSource|!mapboxgl.ImageSource|!mapboxgl.VideoSource|!mapboxgl.GeoJSONSourceRaw)} source
 * @return {Map}
 */
mapboxgl.Map.prototype.addSource = function(id, source) {};

/**
 * @param {string} id
 * @return {boolean}
 */
mapboxgl.Map.prototype.isSourceLoaded = function(id) {};

/**
 * @return {boolean}
 */
mapboxgl.Map.prototype.areTilesLoaded = function() {};

/**
 * @param {string} id
 * @return {Map}
 */
mapboxgl.Map.prototype.removeSource = function(id) {};

/**
 * @param {string} id
 * @return {(!mapboxgl.VectorSource|!mapboxgl.RasterSource|!mapboxgl.GeoJSONSource|!mapboxgl.ImageSource|!mapboxgl.VideoSource)}
 */
mapboxgl.Map.prototype.getSource = function(id) {};

/**
 * @param {string} name
 * @param {(!HTMLImageElement|!ArrayBufferView)} image
 * @param {{width: number, height: number, pixelRatio: number}=} options
 * @return {Map}
 */
mapboxgl.Map.prototype.addImage = function(name, image, options) {};

/**
 * @param {string} name
 * @return {Map}
 */
mapboxgl.Map.prototype.removeImage = function(name) {};

/**
 * @param {string} url
 * @param {!Function} callback
 * @return {Map}
 */
mapboxgl.Map.prototype.loadImage = function(url, callback) {};

/**
 * @param {!mapboxgl.Layer} layer
 * @param {string=} before
 * @return {Map}
 */
mapboxgl.Map.prototype.addLayer = function(layer, before) {};

/**
 * @param {string} id
 * @param {string=} beforeId
 * @return {Map}
 */
mapboxgl.Map.prototype.moveLayer = function(id, beforeId) {};

/**
 * @param {string} id
 * @return {Map}
 */
mapboxgl.Map.prototype.removeLayer = function(id) {};

/**
 * @param {string} id
 * @return {!mapboxgl.Layer}
 */
mapboxgl.Map.prototype.getLayer = function(id) {};

/**
 * @param {string} layer
 * @param {!Array<?>} filter
 * @return {Map}
 */
mapboxgl.Map.prototype.setFilter = function(layer, filter) {};

/**
 * @param {string} layerId
 * @param {number} minzoom
 * @param {number} maxzoom
 * @return {Map}
 */
mapboxgl.Map.prototype.setLayerZoomRange = function(layerId, minzoom, maxzoom) {};

/**
 * @param {string} layer
 * @return {!Array<?>}
 */
mapboxgl.Map.prototype.getFilter = function(layer) {};

/**
 * @param {string} layer
 * @param {string} name
 * @param {?} value
 * @param {string=} klass
 * @return {Map}
 */
mapboxgl.Map.prototype.setPaintProperty = function(layer, name, value, klass) {};

/**
 * @param {string} layer
 * @param {string} name
 * @param {string=} klass
 * @return {?}
 */
mapboxgl.Map.prototype.getPaintProperty = function(layer, name, klass) {};

/**
 * @param {string} layer
 * @param {string} name
 * @param {?} value
 * @return {Map}
 */
mapboxgl.Map.prototype.setLayoutProperty = function(layer, name, value) {};

/**
 * @param {string} layer
 * @param {string} name
 * @param {string=} klass
 * @return {?}
 */
mapboxgl.Map.prototype.getLayoutProperty = function(layer, name, klass) {};

/**
 * @param {!mapboxgl.Light} options
 * @param {?} lightOptions
 * @return {Map}
 */
mapboxgl.Map.prototype.setLight = function(options, lightOptions) {};

/**
 * @return {!mapboxgl.Light}
 */
mapboxgl.Map.prototype.getLight = function() {};

/**
 * @return {!HTMLElement}
 */
mapboxgl.Map.prototype.getContainer = function() {};

/**
 * @return {!HTMLElement}
 */
mapboxgl.Map.prototype.getCanvasContainer = function() {};

/**
 * @return {!HTMLCanvasElement}
 */
mapboxgl.Map.prototype.getCanvas = function() {};

/**
 * @return {boolean}
 */
mapboxgl.Map.prototype.loaded = function() {};

/**
 * @return {void}
 */
mapboxgl.Map.prototype.remove = function() {};

/**
 * @return {void}
 */
mapboxgl.Map.prototype.onError = function() {};

/**
 * @return {!mapboxgl.LngLat}
 */
mapboxgl.Map.prototype.getCenter = function() {};

/**
 * @param {(!Array<number>|!mapboxgl.LngLat)} center
 * @param {!mapboxgl.EventData=} eventData
 * @return {Map}
 */
mapboxgl.Map.prototype.setCenter = function(center, eventData) {};

/**
 * @param {!Array<number>} offset
 * @param {!mapboxgl.AnimationOptions=} options
 * @param {!mapboxgl.EventData=} eventData
 * @return {Map}
 */
mapboxgl.Map.prototype.panBy = function(offset, options, eventData) {};

/**
 * @param {(!Array<number>|!mapboxgl.LngLat)} lnglat
 * @param {!mapboxgl.AnimationOptions=} options
 * @param {!mapboxgl.EventData=} eventdata
 * @return {Map}
 */
mapboxgl.Map.prototype.panTo = function(lnglat, options, eventdata) {};

/**
 * @return {number}
 */
mapboxgl.Map.prototype.getZoom = function() {};

/**
 * @param {number} zoom
 * @param {!mapboxgl.EventData=} eventData
 * @return {Map}
 */
mapboxgl.Map.prototype.setZoom = function(zoom, eventData) {};

/**
 * @param {number} zoom
 * @param {!mapboxgl.AnimationOptions=} options
 * @param {!mapboxgl.EventData=} eventData
 * @return {Map}
 */
mapboxgl.Map.prototype.zoomTo = function(zoom, options, eventData) {};

/**
 * @param {!mapboxgl.AnimationOptions=} options
 * @param {!mapboxgl.EventData=} eventData
 * @return {Map}
 */
mapboxgl.Map.prototype.zoomIn = function(options, eventData) {};

/**
 * @param {!mapboxgl.AnimationOptions=} options
 * @param {!mapboxgl.EventData=} eventData
 * @return {Map}
 */
mapboxgl.Map.prototype.zoomOut = function(options, eventData) {};

/**
 * @return {number}
 */
mapboxgl.Map.prototype.getBearing = function() {};

/**
 * @param {number} bearing
 * @param {!mapboxgl.EventData=} eventData
 * @return {Map}
 */
mapboxgl.Map.prototype.setBearing = function(bearing, eventData) {};

/**
 * @param {number} bearing
 * @param {!mapboxgl.AnimationOptions=} options
 * @param {!mapboxgl.EventData=} eventData
 * @return {Map}
 */
mapboxgl.Map.prototype.rotateTo = function(bearing, options, eventData) {};

/**
 * @param {!mapboxgl.AnimationOptions=} options
 * @param {!mapboxgl.EventData=} eventData
 * @return {Map}
 */
mapboxgl.Map.prototype.resetNorth = function(options, eventData) {};

/**
 * @param {!mapboxgl.AnimationOptions=} options
 * @param {!mapboxgl.EventData=} eventData
 * @return {Map}
 */
mapboxgl.Map.prototype.snapToNorth = function(options, eventData) {};

/**
 * @return {number}
 */
mapboxgl.Map.prototype.getPitch = function() {};

/**
 * @param {number} pitch
 * @param {!mapboxgl.EventData=} eventData
 * @return {Map}
 */
mapboxgl.Map.prototype.setPitch = function(pitch, eventData) {};

/**
 * @param {(!Array<!Array<number>>|!Array<(!Array<number>|!mapboxgl.LngLat)>|!mapboxgl.LngLatBounds)} bounds
 * @param {{linear: boolean, easing: !Function, padding: (number|!mapboxgl.PaddingOptions), offset: (!Array<number>|!mapboxgl.Point), maxZoom: number}=} options
 * @param {!mapboxgl.EventData=} eventData
 * @return {Map}
 */
mapboxgl.Map.prototype.fitBounds = function(bounds, options, eventData) {};

/**
 * @param {!mapboxgl.CameraOptions} options
 * @param {!mapboxgl.EventData=} eventData
 * @return {Map}
 */
mapboxgl.Map.prototype.jumpTo = function(options, eventData) {};

/**
 * @param {(!mapboxgl.AnimationOptions|!mapboxgl.CameraOptions)} options
 * @param {!mapboxgl.EventData=} eventData
 * @return {Map}
 */
mapboxgl.Map.prototype.easeTo = function(options, eventData) {};

/**
 * @param {!mapboxgl.FlyToOptions} options
 * @param {!mapboxgl.EventData=} eventData
 * @return {Map}
 */
mapboxgl.Map.prototype.flyTo = function(options, eventData) {};

/**
 * @return {boolean}
 */
mapboxgl.Map.prototype.isMoving = function() {};

/**
 * @return {Map}
 */
mapboxgl.Map.prototype.stop = function() {};
/**
 * @record
 * @struct
 */
mapboxgl.MapboxOptions = function() {};
 /** @type {boolean} */
mapboxgl.MapboxOptions.prototype.attributionControl;
 /** @type {number} */
mapboxgl.MapboxOptions.prototype.bearing;
 /** @type {number} */
mapboxgl.MapboxOptions.prototype.bearingSnap;
 /** @type {boolean} */
mapboxgl.MapboxOptions.prototype.boxZoom;
 /** @type {(!Array<number>|!mapboxgl.LngLat)} */
mapboxgl.MapboxOptions.prototype.center;
 /** @type {!Array<string>} */
mapboxgl.MapboxOptions.prototype.classes;
 /** @type {(string|!Element)} */
mapboxgl.MapboxOptions.prototype.container;
 /** @type {boolean} */
mapboxgl.MapboxOptions.prototype.dragPan;
 /** @type {boolean} */
mapboxgl.MapboxOptions.prototype.dragRotate;
 /** @type {boolean} */
mapboxgl.MapboxOptions.prototype.doubleClickZoom;
 /** @type {boolean} */
mapboxgl.MapboxOptions.prototype.hash;
 /** @type {boolean} */
mapboxgl.MapboxOptions.prototype.failIfMayorPerformanceCaveat;
 /** @type {boolean} */
mapboxgl.MapboxOptions.prototype.interactive;
 /** @type {boolean} */
mapboxgl.MapboxOptions.prototype.keyboard;
 /** @type {boolean} */
mapboxgl.MapboxOptions.prototype.logoPosition;
 /** @type {(!Array<!Array<number>>|!Array<(!Array<number>|!mapboxgl.LngLat)>|!mapboxgl.LngLatBounds)} */
mapboxgl.MapboxOptions.prototype.maxBounds;
 /** @type {number} */
mapboxgl.MapboxOptions.prototype.maxZoom;
 /** @type {number} */
mapboxgl.MapboxOptions.prototype.minZoom;
 /** @type {boolean} */
mapboxgl.MapboxOptions.prototype.preserveDrawingBuffer;
 /** @type {number} */
mapboxgl.MapboxOptions.prototype.pitch;
 /** @type {boolean} */
mapboxgl.MapboxOptions.prototype.refreshExpiredTiles;
 /** @type {boolean} */
mapboxgl.MapboxOptions.prototype.renderWorldCopies;
 /** @type {boolean} */
mapboxgl.MapboxOptions.prototype.scrollZoom;
 /** @type {(string|!mapboxgl.Style)} */
mapboxgl.MapboxOptions.prototype.style;
 /** @type {boolean} */
mapboxgl.MapboxOptions.prototype.trackResize;
 /** @type {boolean} */
mapboxgl.MapboxOptions.prototype.touchZoomRotate;
 /** @type {number} */
mapboxgl.MapboxOptions.prototype.zoom;
 /** @type {number} */
mapboxgl.MapboxOptions.prototype.maxTileCacheSize;
/**
 * @record
 * @struct
 */
mapboxgl.PaddingOptions = function() {};
 /** @type {number} */
mapboxgl.PaddingOptions.prototype.top;
 /** @type {number} */
mapboxgl.PaddingOptions.prototype.bottom;
 /** @type {number} */
mapboxgl.PaddingOptions.prototype.left;
 /** @type {number} */
mapboxgl.PaddingOptions.prototype.right;

/**
 * @constructor
 * @struct
 * @param {!mapboxgl.Map} map
 */
mapboxgl.BoxZoomHandler = function(map) {};

/**
 * @return {boolean}
 */
mapboxgl.BoxZoomHandler.prototype.isEnabled = function() {};

/**
 * @return {boolean}
 */
mapboxgl.BoxZoomHandler.prototype.isActive = function() {};

/**
 * @return {void}
 */
mapboxgl.BoxZoomHandler.prototype.enable = function() {};

/**
 * @return {void}
 */
mapboxgl.BoxZoomHandler.prototype.disable = function() {};

/**
 * @constructor
 * @struct
 * @param {!mapboxgl.Map} map
 */
mapboxgl.ScrollZoomHandler = function(map) {};

/**
 * @return {boolean}
 */
mapboxgl.ScrollZoomHandler.prototype.isEnabled = function() {};

/**
 * @return {void}
 */
mapboxgl.ScrollZoomHandler.prototype.enable = function() {};

/**
 * @return {void}
 */
mapboxgl.ScrollZoomHandler.prototype.disable = function() {};

/**
 * @constructor
 * @struct
 * @param {!mapboxgl.Map} map
 */
mapboxgl.DragPanHandler = function(map) {};

/**
 * @return {boolean}
 */
mapboxgl.DragPanHandler.prototype.isEnabled = function() {};

/**
 * @return {boolean}
 */
mapboxgl.DragPanHandler.prototype.isActive = function() {};

/**
 * @return {void}
 */
mapboxgl.DragPanHandler.prototype.enable = function() {};

/**
 * @return {void}
 */
mapboxgl.DragPanHandler.prototype.disable = function() {};

/**
 * @constructor
 * @struct
 * @param {!mapboxgl.Map} map
 * @param {{bearingSnap: number, pitchWithRotate: boolean}=} options
 */
mapboxgl.DragRotateHandler = function(map, options) {};

/**
 * @return {boolean}
 */
mapboxgl.DragRotateHandler.prototype.isEnabled = function() {};

/**
 * @return {boolean}
 */
mapboxgl.DragRotateHandler.prototype.isActive = function() {};

/**
 * @return {void}
 */
mapboxgl.DragRotateHandler.prototype.enable = function() {};

/**
 * @return {void}
 */
mapboxgl.DragRotateHandler.prototype.disable = function() {};

/**
 * @constructor
 * @struct
 * @param {!mapboxgl.Map} map
 */
mapboxgl.KeyboardHandler = function(map) {};

/**
 * @return {boolean}
 */
mapboxgl.KeyboardHandler.prototype.isEnabled = function() {};

/**
 * @return {void}
 */
mapboxgl.KeyboardHandler.prototype.enable = function() {};

/**
 * @return {void}
 */
mapboxgl.KeyboardHandler.prototype.disable = function() {};

/**
 * @constructor
 * @struct
 * @param {!mapboxgl.Map} map
 */
mapboxgl.DoubleClickZoomHandler = function(map) {};

/**
 * @return {boolean}
 */
mapboxgl.DoubleClickZoomHandler.prototype.isEnabled = function() {};

/**
 * @return {void}
 */
mapboxgl.DoubleClickZoomHandler.prototype.enable = function() {};

/**
 * @return {void}
 */
mapboxgl.DoubleClickZoomHandler.prototype.disable = function() {};

/**
 * @constructor
 * @struct
 * @param {!mapboxgl.Map} map
 */
mapboxgl.TouchZoomRotateHandler = function(map) {};

/**
 * @return {boolean}
 */
mapboxgl.TouchZoomRotateHandler.prototype.isEnabled = function() {};

/**
 * @return {void}
 */
mapboxgl.TouchZoomRotateHandler.prototype.enable = function() {};

/**
 * @return {void}
 */
mapboxgl.TouchZoomRotateHandler.prototype.disable = function() {};

/**
 * @return {void}
 */
mapboxgl.TouchZoomRotateHandler.prototype.disableRotation = function() {};

/**
 * @return {void}
 */
mapboxgl.TouchZoomRotateHandler.prototype.enableRotation = function() {};
/**
 * @record
 * @struct
 */
mapboxgl.IControl = function() {};

/**
 * @param {!mapboxgl.Map} map
 * @return {!HTMLElement}
 */
mapboxgl.IControl.prototype.onAdd = function(map) {};

/**
 * @param {!mapboxgl.Map} map
 * @return {?}
 */
mapboxgl.IControl.prototype.onRemove = function(map) {};

/**
 * @return {string}
 */
mapboxgl.IControl.prototype.getDefaultPosition = function() {};
/**
 * @extends {mapboxgl.Evented}
 * @constructor
 * @struct
 */
mapboxgl.Control = function() {};

/**
 * @constructor
 * @struct
 */
mapboxgl.NavigationControl = function() {};
/**
 * @constructor
 * @struct
 */
mapboxgl.PositionOptions = function() {};
 /** @type {boolean} */
mapboxgl.PositionOptions.prototype.enableHighAccuracy;
 /** @type {number} */
mapboxgl.PositionOptions.prototype.timeout;
 /** @type {number} */
mapboxgl.PositionOptions.prototype.maximumAge;

/**
 * @constructor
 * @struct
 * @param {{positionOptions: !mapboxgl.PositionOptions, watchPosition: boolean}=} options
 */
mapboxgl.GeolocateControl = function(options) {};

/**
 * @constructor
 * @struct
 * @param {{compact: boolean}=} options
 */
mapboxgl.AttributionControl = function(options) {};

/**
 * @constructor
 * @struct
 * @param {{maxWidth: number, unit: string}=} options
 */
mapboxgl.ScaleControl = function(options) {};

/**
 * @constructor
 * @struct
 */
mapboxgl.FullscreenControl = function() {};

/**
 * @constructor
 * @struct
 * @param {!mapboxgl.PopupOptions=} options
 */
mapboxgl.Popup = function(options) {};

/**
 * @param {!mapboxgl.Map} map
 * @return {Popup}
 */
mapboxgl.Popup.prototype.addTo = function(map) {};

/**
 * @return {boolean}
 */
mapboxgl.Popup.prototype.isOpen = function() {};

/**
 * @return {Popup}
 */
mapboxgl.Popup.prototype.remove = function() {};

/**
 * @return {!mapboxgl.LngLat}
 */
mapboxgl.Popup.prototype.getLngLat = function() {};

/**
 * @param {(!Array<number>|!mapboxgl.LngLat)} lnglat
 * @return {Popup}
 */
mapboxgl.Popup.prototype.setLngLat = function(lnglat) {};

/**
 * @param {string} text
 * @return {Popup}
 */
mapboxgl.Popup.prototype.setText = function(text) {};

/**
 * @param {string} html
 * @return {Popup}
 */
mapboxgl.Popup.prototype.setHTML = function(html) {};

/**
 * @param {!Node} htmlNode
 * @return {Popup}
 */
mapboxgl.Popup.prototype.setDOMContent = function(htmlNode) {};
/**
 * @record
 * @struct
 */
mapboxgl.PopupOptions = function() {};
 /** @type {boolean} */
mapboxgl.PopupOptions.prototype.closeButton;
 /** @type {boolean} */
mapboxgl.PopupOptions.prototype.closeOnClick;
 /** @type {string} */
mapboxgl.PopupOptions.prototype.anchor;
 /** @type {(number|!Array<number>|!mapboxgl.Point|!Object<string,(!Array<number>|!mapboxgl.Point)>)} */
mapboxgl.PopupOptions.prototype.offset;
/**
 * @record
 * @struct
 */
mapboxgl.Style = function() {};
 /** @type {number} */
mapboxgl.Style.prototype.bearing;
 /** @type {!Array<number>} */
mapboxgl.Style.prototype.center;
 /** @type {string} */
mapboxgl.Style.prototype.glyphs;
 /** @type {!Array<!mapboxgl.Layer>} */
mapboxgl.Style.prototype.layers;
 /** @type {?} */
mapboxgl.Style.prototype.metadata;
 /** @type {string} */
mapboxgl.Style.prototype.name;
 /** @type {number} */
mapboxgl.Style.prototype.pitch;
 /** @type {!mapboxgl.Light} */
mapboxgl.Style.prototype.light;
 /** @type {?} */
mapboxgl.Style.prototype.sources;
 /** @type {string} */
mapboxgl.Style.prototype.sprite;
 /** @type {!mapboxgl.Transition} */
mapboxgl.Style.prototype.transition;
 /** @type {number} */
mapboxgl.Style.prototype.version;
 /** @type {number} */
mapboxgl.Style.prototype.zoom;
/**
 * @record
 * @struct
 */
mapboxgl.Transition = function() {};
 /** @type {number} */
mapboxgl.Transition.prototype.delay;
 /** @type {number} */
mapboxgl.Transition.prototype.duration;
/**
 * @record
 * @struct
 */
mapboxgl.Light = function() {};

/* TODO: PropertySignature: mapboxgl."anchor" */

/* TODO: PropertySignature: mapboxgl."position" */

/* TODO: PropertySignature: mapboxgl."color" */

/* TODO: PropertySignature: mapboxgl."intensity" */
/**
 * @record
 * @struct
 */
mapboxgl.Source = function() {};
 /** @type {string} */
mapboxgl.Source.prototype.type;
/**
 * @extends {mapboxgl.Source}
 * @extends {mapboxgl.GeoJSONSourceOptions}
 * @record
 * @struct
 */
mapboxgl.GeoJSONSourceRaw = function() {};
 /** @type {string} */
mapboxgl.GeoJSONSourceRaw.prototype.type;

/**
 * @constructor
 * @struct
 * @param {!mapboxgl.GeoJSONSourceOptions=} options
 */
mapboxgl.GeoJSONSource = function(options) {};
 /** @type {string} */
mapboxgl.GeoJSONSource.prototype.type;

/**
 * @param {(!String|?)} data
 * @return {GeoJSONSource}
 */
mapboxgl.GeoJSONSource.prototype.setData = function(data) {};
/**
 * @record
 * @struct
 */
mapboxgl.GeoJSONSourceOptions = function() {};
 /** @type {(string|?)} */
mapboxgl.GeoJSONSourceOptions.prototype.data;
 /** @type {number} */
mapboxgl.GeoJSONSourceOptions.prototype.maxzoom;
 /** @type {number} */
mapboxgl.GeoJSONSourceOptions.prototype.buffer;
 /** @type {number} */
mapboxgl.GeoJSONSourceOptions.prototype.tolerance;
 /** @type {(number|boolean)} */
mapboxgl.GeoJSONSourceOptions.prototype.cluster;
 /** @type {number} */
mapboxgl.GeoJSONSourceOptions.prototype.clusterRadius;
 /** @type {number} */
mapboxgl.GeoJSONSourceOptions.prototype.clusterMaxZoom;
/**
 * @extends {mapboxgl.VideoSourceOptions}
 * @record
 * @struct
 */
mapboxgl.VideoSource = function() {};
 /** @type {string} */
mapboxgl.VideoSource.prototype.type;

/**
 * @return {!HTMLVideoElement}
 */
mapboxgl.VideoSource.prototype.getVideo = function() {};

/**
 * @param {!Array<!Array<number>>} coordinates
 * @return {VideoSource}
 */
mapboxgl.VideoSource.prototype.setCoordinates = function(coordinates) {};
/**
 * @record
 * @struct
 */
mapboxgl.VideoSourceOptions = function() {};
 /** @type {!Array<string>} */
mapboxgl.VideoSourceOptions.prototype.urls;
 /** @type {!Array<!Array<number>>} */
mapboxgl.VideoSourceOptions.prototype.coordinates;
/**
 * @extends {mapboxgl.ImageSourceOptions}
 * @record
 * @struct
 */
mapboxgl.ImageSource = function() {};
 /** @type {string} */
mapboxgl.ImageSource.prototype.type;

/**
 * @param {!Array<!Array<number>>} coordinates
 * @return {ImageSource}
 */
mapboxgl.ImageSource.prototype.setCoordinates = function(coordinates) {};
/**
 * @record
 * @struct
 */
mapboxgl.ImageSourceOptions = function() {};
 /** @type {string} */
mapboxgl.ImageSourceOptions.prototype.url;
 /** @type {!Array<!Array<number>>} */
mapboxgl.ImageSourceOptions.prototype.coordinates;
/**
 * @implements {mapboxgl.Source}
 * @implements {mapboxgl.CanvasSourceOptions}
 * @constructor
 * @struct
 */
mapboxgl.CanvasSource = function() {};
 /** @type {string} */
mapboxgl.CanvasSource.prototype.type;
 /** @type {!Array<!Array<number>>} */
mapboxgl.CanvasSource.prototype.coordinates;
 /** @type {string} */
mapboxgl.CanvasSource.prototype.canvas;

/**
 * @return {!HTMLCanvasElement}
 */
mapboxgl.CanvasSource.prototype.getCanvas = function() {};

/**
 * @param {!Array<!Array<number>>} coordinates
 * @return {CanvasSource}
 */
mapboxgl.CanvasSource.prototype.setCoordinates = function(coordinates) {};
/**
 * @record
 * @struct
 */
mapboxgl.CanvasSourceOptions = function() {};
 /** @type {!Array<!Array<number>>} */
mapboxgl.CanvasSourceOptions.prototype.coordinates;
 /** @type {boolean} */
mapboxgl.CanvasSourceOptions.prototype.animate;
 /** @type {string} */
mapboxgl.CanvasSourceOptions.prototype.canvas;
/**
 * @extends {mapboxgl.Source}
 * @record
 * @struct
 */
mapboxgl.VectorSource = function() {};
 /** @type {string} */
mapboxgl.VectorSource.prototype.type;
 /** @type {string} */
mapboxgl.VectorSource.prototype.url;
 /** @type {!Array<string>} */
mapboxgl.VectorSource.prototype.tiles;
 /** @type {number} */
mapboxgl.VectorSource.prototype.minzoom;
 /** @type {number} */
mapboxgl.VectorSource.prototype.maxzoom;
/**
 * @extends {mapboxgl.Source}
 * @record
 * @struct
 */
mapboxgl.RasterSource = function() {};
 /** @type {string} */
mapboxgl.RasterSource.prototype.type;
 /** @type {string} */
mapboxgl.RasterSource.prototype.url;
 /** @type {!Array<string>} */
mapboxgl.RasterSource.prototype.tiles;
 /** @type {number} */
mapboxgl.RasterSource.prototype.minzoom;
 /** @type {number} */
mapboxgl.RasterSource.prototype.maxzoom;
 /** @type {number} */
mapboxgl.RasterSource.prototype.tileSize;

/**
 * @constructor
 * @struct
 * @param {number} lng
 * @param {number} lat
 */
mapboxgl.LngLat = function(lng, lat) {};
 /** @type {number} */
mapboxgl.LngLat.prototype.lng;
 /** @type {number} */
mapboxgl.LngLat.prototype.lat;

/**
 * Return a new LngLat object whose longitude is wrapped to the range (-180, 180).
 * @return {!mapboxgl.LngLat}
 */
mapboxgl.LngLat.prototype.wrap = function() {};

/**
 * Return a LngLat as an array
 * @return {!Array<number>}
 */
mapboxgl.LngLat.prototype.toArray = function() {};

/**
 * Return a LngLat as a string
 * @return {string}
 */
mapboxgl.LngLat.prototype.toString = function() {};

/**
 * @param {number} radius
 * @return {!mapboxgl.LngLatBounds}
 */
mapboxgl.LngLat.prototype.toBounds = function(radius) {};

/**
 * @param {(!Array<number>|!mapboxgl.LngLat)} input
 * @return {!mapboxgl.LngLat}
 */
mapboxgl.LngLat.convert = function(input) {};

/**
 * @constructor
 * @struct
 * @param {(!Array<number>|!mapboxgl.LngLat)=} sw
 * @param {(!Array<number>|!mapboxgl.LngLat)=} ne
 */
mapboxgl.LngLatBounds = function(sw, ne) {};
 /** @type {(!Array<number>|!mapboxgl.LngLat)} */
mapboxgl.LngLatBounds.prototype.sw;
 /** @type {(!Array<number>|!mapboxgl.LngLat)} */
mapboxgl.LngLatBounds.prototype.ne;

/**
 * @param {(!Array<number>|!mapboxgl.LngLat)} ne
 * @return {LngLatBounds}
 */
mapboxgl.LngLatBounds.prototype.setNorthEast = function(ne) {};

/**
 * @param {(!Array<number>|!mapboxgl.LngLat)} sw
 * @return {LngLatBounds}
 */
mapboxgl.LngLatBounds.prototype.setSouthWest = function(sw) {};

/**
 * Extend the bounds to include a given LngLat or LngLatBounds.
 * @param {(!mapboxgl.LngLat|!mapboxgl.LngLatBounds)} obj
 * @return {LngLatBounds}
 */
mapboxgl.LngLatBounds.prototype.extend = function(obj) {};

/**
 * Get the point equidistant from this box's corners
 * @return {!mapboxgl.LngLat}
 */
mapboxgl.LngLatBounds.prototype.getCenter = function() {};

/**
 * Get southwest corner
 * @return {!mapboxgl.LngLat}
 */
mapboxgl.LngLatBounds.prototype.getSouthWest = function() {};

/**
 * Get northeast corner
 * @return {!mapboxgl.LngLat}
 */
mapboxgl.LngLatBounds.prototype.getNorthEast = function() {};

/**
 * Get northwest corner
 * @return {!mapboxgl.LngLat}
 */
mapboxgl.LngLatBounds.prototype.getNorthWest = function() {};

/**
 * Get southeast corner
 * @return {!mapboxgl.LngLat}
 */
mapboxgl.LngLatBounds.prototype.getSouthEast = function() {};

/**
 * Get west edge longitude
 * @return {number}
 */
mapboxgl.LngLatBounds.prototype.getWest = function() {};

/**
 * Get south edge latitude
 * @return {number}
 */
mapboxgl.LngLatBounds.prototype.getSouth = function() {};

/**
 * Get east edge longitude
 * @return {number}
 */
mapboxgl.LngLatBounds.prototype.getEast = function() {};

/**
 * Get north edge latitude
 * @return {number}
 */
mapboxgl.LngLatBounds.prototype.getNorth = function() {};

/**
 * Returns a LngLatBounds as an array
 * @return {!Array<!Array<number>>}
 */
mapboxgl.LngLatBounds.prototype.toArray = function() {};

/**
 * Return a LngLatBounds as a string
 * @return {string}
 */
mapboxgl.LngLatBounds.prototype.toString = function() {};

/**
 * Convert an array to a LngLatBounds object, or return an existing LngLatBounds object unchanged.
 * @param {(!Array<!Array<number>>|!Array<(!Array<number>|!mapboxgl.LngLat)>|!mapboxgl.LngLatBounds)} input
 * @return {!mapboxgl.LngLatBounds}
 */
mapboxgl.LngLatBounds.convert = function(input) {};

/**
 * @constructor
 * @struct
 * @param {number} x
 * @param {number} y
 */
mapboxgl.Point = function(x, y) {};
 /** @type {number} */
mapboxgl.Point.prototype.x;
 /** @type {number} */
mapboxgl.Point.prototype.y;

/**
 * @return {!mapboxgl.Point}
 */
mapboxgl.Point.prototype.clone = function() {};

/**
 * @param {number} p
 * @return {!mapboxgl.Point}
 */
mapboxgl.Point.prototype.add = function(p) {};

/**
 * @param {number} p
 * @return {!mapboxgl.Point}
 */
mapboxgl.Point.prototype.sub = function(p) {};

/**
 * @param {number} k
 * @return {!mapboxgl.Point}
 */
mapboxgl.Point.prototype.mult = function(k) {};

/**
 * @param {number} k
 * @return {!mapboxgl.Point}
 */
mapboxgl.Point.prototype.div = function(k) {};

/**
 * @param {number} a
 * @return {!mapboxgl.Point}
 */
mapboxgl.Point.prototype.rotate = function(a) {};

/**
 * @param {number} m
 * @return {!mapboxgl.Point}
 */
mapboxgl.Point.prototype.matMult = function(m) {};

/**
 * @return {!mapboxgl.Point}
 */
mapboxgl.Point.prototype.unit = function() {};

/**
 * @return {!mapboxgl.Point}
 */
mapboxgl.Point.prototype.perp = function() {};

/**
 * @return {!mapboxgl.Point}
 */
mapboxgl.Point.prototype.round = function() {};

/**
 * @return {number}
 */
mapboxgl.Point.prototype.mag = function() {};

/**
 * @param {!mapboxgl.Point} p
 * @return {boolean}
 */
mapboxgl.Point.prototype.equals = function(p) {};

/**
 * @param {!mapboxgl.Point} p
 * @return {number}
 */
mapboxgl.Point.prototype.dist = function(p) {};

/**
 * @param {!mapboxgl.Point} p
 * @return {number}
 */
mapboxgl.Point.prototype.distSqr = function(p) {};

/**
 * @return {number}
 */
mapboxgl.Point.prototype.angle = function() {};

/**
 * @param {!mapboxgl.Point} p
 * @return {number}
 */
mapboxgl.Point.prototype.angleTo = function(p) {};

/**
 * @param {!mapboxgl.Point} p
 * @return {number}
 */
mapboxgl.Point.prototype.angleWidth = function(p) {};

/**
 * @param {number} x
 * @param {number} y
 * @return {number}
 */
mapboxgl.Point.prototype.angleWithSep = function(x, y) {};

/**
 * @param {(!Array<number>|!mapboxgl.Point)} a
 * @return {!mapboxgl.Point}
 */
mapboxgl.Point.convert = function(a) {};

/**
 * @constructor
 * @struct
 * @param {!HTMLElement=} element
 * @param {{offset: (!Array<number>|!mapboxgl.Point)}=} options
 */
mapboxgl.Marker = function(element, options) {};

/**
 * @param {!mapboxgl.Map} map
 * @return {Marker}
 */
mapboxgl.Marker.prototype.addTo = function(map) {};

/**
 * @return {Marker}
 */
mapboxgl.Marker.prototype.remove = function() {};

/**
 * @return {!mapboxgl.LngLat}
 */
mapboxgl.Marker.prototype.getLngLat = function() {};

/**
 * @param {(!Array<number>|!mapboxgl.LngLat)} lngLat
 * @return {Marker}
 */
mapboxgl.Marker.prototype.setLngLat = function(lngLat) {};

/**
 * @param {!mapboxgl.Popup=} popup
 * @return {Marker}
 */
mapboxgl.Marker.prototype.setPopup = function(popup) {};

/**
 * @return {!mapboxgl.Popup}
 */
mapboxgl.Marker.prototype.getPopup = function() {};

/**
 * @return {Marker}
 */
mapboxgl.Marker.prototype.togglePopup = function() {};
/**
 * @constructor
 * @struct
 */
mapboxgl.Evented = function() {};

/**
 * @param {string} type
 * @param {!Function|string} listener_or_layer
 * @param {!Function=} listener
 * @return {Evented}
 */
mapboxgl.Evented.prototype.on = function(type, listener_or_layer, listener) {};

/**
 * @param {?=} type
 * @param {!Function|string=} listener_or_layer
 * @param {!Function=} listener
 * @return {Evented}
 */
mapboxgl.Evented.prototype.off = function(type, listener_or_layer, listener) {};

/**
 * @param {string} type
 * @param {!Function} listener
 * @return {Evented}
 */
mapboxgl.Evented.prototype.once = function(type, listener) {};

/**
 * @param {string} type
 * @param {(!Object|!mapboxgl.EventData)=} data
 * @return {Evented}
 */
mapboxgl.Evented.prototype.fire = function(type, data) {};

/**
 * @param {string} type
 * @return {boolean}
 */
mapboxgl.Evented.prototype.listens = function(type) {};
/**
 * @record
 * @struct
 */
mapboxgl.StyleOptions = function() {};
 /** @type {boolean} */
mapboxgl.StyleOptions.prototype.transition;
/**
 * @constructor
 * @struct
 */
mapboxgl.EventData = function() {};
 /** @type {string} */
mapboxgl.EventData.prototype.type;
 /** @type {!mapboxgl.Map} */
mapboxgl.EventData.prototype.target;
 /** @type {!Event} */
mapboxgl.EventData.prototype.originalEvent;
 /** @type {!mapboxgl.Point} */
mapboxgl.EventData.prototype.point;
 /** @type {!mapboxgl.LngLat} */
mapboxgl.EventData.prototype.lngLat;
/**
 * @constructor
 * @struct
 */
mapboxgl.MapMouseEvent = function() {};
 /** @type {string} */
mapboxgl.MapMouseEvent.prototype.type;
 /** @type {!mapboxgl.Map} */
mapboxgl.MapMouseEvent.prototype.target;
 /** @type {!MouseEvent} */
mapboxgl.MapMouseEvent.prototype.originalEvent;
 /** @type {!mapboxgl.Point} */
mapboxgl.MapMouseEvent.prototype.point;
 /** @type {!mapboxgl.LngLat} */
mapboxgl.MapMouseEvent.prototype.lngLat;
/**
 * @constructor
 * @struct
 */
mapboxgl.MapTouchEvent = function() {};
 /** @type {string} */
mapboxgl.MapTouchEvent.prototype.type;
 /** @type {!mapboxgl.Map} */
mapboxgl.MapTouchEvent.prototype.target;
 /** @type {!TouchEvent} */
mapboxgl.MapTouchEvent.prototype.originalEvent;
 /** @type {!mapboxgl.Point} */
mapboxgl.MapTouchEvent.prototype.point;
 /** @type {!mapboxgl.LngLat} */
mapboxgl.MapTouchEvent.prototype.lngLat;
 /** @type {!Array<!mapboxgl.Point>} */
mapboxgl.MapTouchEvent.prototype.points;
 /** @type {!Array<!mapboxgl.LngLat>} */
mapboxgl.MapTouchEvent.prototype.lngLats;
/**
 * @constructor
 * @struct
 */
mapboxgl.MapBoxZoomEvent = function() {};
 /** @type {!MouseEvent} */
mapboxgl.MapBoxZoomEvent.prototype.originalEvent;
 /** @type {!mapboxgl.LngLatBounds} */
mapboxgl.MapBoxZoomEvent.prototype.boxZoomBounds;
/**
 * @constructor
 * @struct
 */
mapboxgl.MapDataEvent = function() {};
 /** @type {string} */
mapboxgl.MapDataEvent.prototype.type;
 /** @type {string} */
mapboxgl.MapDataEvent.prototype.dataType;
 /** @type {boolean} */
mapboxgl.MapDataEvent.prototype.isSourceLoaded;
 /** @type {!mapboxgl.Source} */
mapboxgl.MapDataEvent.prototype.source;
 /** @type {?} */
mapboxgl.MapDataEvent.prototype.coord;
/**
 * @record
 * @struct
 */
mapboxgl.AnimationOptions = function() {};
 /** @type {number} */
mapboxgl.AnimationOptions.prototype.duration;
 /** @type {!Function} */
mapboxgl.AnimationOptions.prototype.easing;
 /** @type {(!Array<number>|!mapboxgl.Point)} */
mapboxgl.AnimationOptions.prototype.offset;
 /** @type {boolean} */
mapboxgl.AnimationOptions.prototype.animate;
/**
 * @record
 * @struct
 */
mapboxgl.CameraOptions = function() {};
 /** @type {(!Array<number>|!mapboxgl.LngLat)} */
mapboxgl.CameraOptions.prototype.center;
 /** @type {number} */
mapboxgl.CameraOptions.prototype.zoom;
 /** @type {number} */
mapboxgl.CameraOptions.prototype.bearing;
 /** @type {number} */
mapboxgl.CameraOptions.prototype.pitch;
 /** @type {(!Array<number>|!mapboxgl.LngLat)} */
mapboxgl.CameraOptions.prototype.around;
/**
 * @extends {mapboxgl.AnimationOptions}
 * @extends {mapboxgl.CameraOptions}
 * @record
 * @struct
 */
mapboxgl.FlyToOptions = function() {};
 /** @type {number} */
mapboxgl.FlyToOptions.prototype.curve;
 /** @type {number} */
mapboxgl.FlyToOptions.prototype.minZoom;
 /** @type {number} */
mapboxgl.FlyToOptions.prototype.speed;
 /** @type {number} */
mapboxgl.FlyToOptions.prototype.screenSpeed;
 /** @type {!Function} */
mapboxgl.FlyToOptions.prototype.easing;
/**
 * @record
 * @struct
 */
mapboxgl.MapEvent = function() {};
 /** @type {void} */
mapboxgl.MapEvent.prototype.resize;
 /** @type {{originalEvent: !WebGLContextEvent}} */
mapboxgl.MapEvent.prototype.webglcontextlost;
 /** @type {{originalEvent: !WebGLContextEvent}} */
mapboxgl.MapEvent.prototype.webglcontextrestored;
 /** @type {void} */
mapboxgl.MapEvent.prototype.remove;
 /** @type {{data: !mapboxgl.MapDataEvent}} */
mapboxgl.MapEvent.prototype.dataloading;
 /** @type {{data: !mapboxgl.MapDataEvent}} */
mapboxgl.MapEvent.prototype.data;
 /** @type {void} */
mapboxgl.MapEvent.prototype.render;
 /** @type {{data: !mapboxgl.MapMouseEvent}} */
mapboxgl.MapEvent.prototype.contextmenu;
 /** @type {{data: !mapboxgl.MapMouseEvent}} */
mapboxgl.MapEvent.prototype.dblclick;
 /** @type {{data: !mapboxgl.MapMouseEvent}} */
mapboxgl.MapEvent.prototype.click;
 /** @type {{data: !mapboxgl.MapDataEvent}} */
mapboxgl.MapEvent.prototype.tiledataloading;
 /** @type {{data: !mapboxgl.MapDataEvent}} */
mapboxgl.MapEvent.prototype.sourcedataloading;
 /** @type {{data: !mapboxgl.MapDataEvent}} */
mapboxgl.MapEvent.prototype.styledataloading;
 /** @type {{data: !mapboxgl.MapTouchEvent}} */
mapboxgl.MapEvent.prototype.touchcancel;
 /** @type {{data: !mapboxgl.MapTouchEvent}} */
mapboxgl.MapEvent.prototype.touchmove;
 /** @type {{data: !mapboxgl.MapTouchEvent}} */
mapboxgl.MapEvent.prototype.touchend;
 /** @type {{data: !mapboxgl.MapTouchEvent}} */
mapboxgl.MapEvent.prototype.touchstart;
 /** @type {{data: !mapboxgl.MapMouseEvent}} */
mapboxgl.MapEvent.prototype.mousemove;
 /** @type {{data: !mapboxgl.MapMouseEvent}} */
mapboxgl.MapEvent.prototype.mouseup;
 /** @type {{data: !mapboxgl.MapMouseEvent}} */
mapboxgl.MapEvent.prototype.mousedown;
 /** @type {{data: (!mapboxgl.MapMouseEvent|!mapboxgl.MapTouchEvent)}} */
mapboxgl.MapEvent.prototype.moveend;
 /** @type {{data: (!mapboxgl.MapMouseEvent|!mapboxgl.MapTouchEvent)}} */
mapboxgl.MapEvent.prototype.move;
 /** @type {{data: (!mapboxgl.MapMouseEvent|!mapboxgl.MapTouchEvent)}} */
mapboxgl.MapEvent.prototype.movestart;
 /** @type {{data: !mapboxgl.MapMouseEvent}} */
mapboxgl.MapEvent.prototype.mouseout;
 /** @type {void} */
mapboxgl.MapEvent.prototype.load;
 /** @type {{data: !mapboxgl.MapDataEvent}} */
mapboxgl.MapEvent.prototype.sourcedata;
 /** @type {{data: !mapboxgl.MapDataEvent}} */
mapboxgl.MapEvent.prototype.styledata;
 /** @type {{data: (!mapboxgl.MapMouseEvent|!mapboxgl.MapTouchEvent)}} */
mapboxgl.MapEvent.prototype.zoomend;
 /** @type {{data: (!mapboxgl.MapMouseEvent|!mapboxgl.MapTouchEvent)}} */
mapboxgl.MapEvent.prototype.zoom;
 /** @type {{data: (!mapboxgl.MapMouseEvent|!mapboxgl.MapTouchEvent)}} */
mapboxgl.MapEvent.prototype.zoomstart;
 /** @type {{data: !mapboxgl.MapBoxZoomEvent}} */
mapboxgl.MapEvent.prototype.boxzoomcancel;
 /** @type {{data: !mapboxgl.MapBoxZoomEvent}} */
mapboxgl.MapEvent.prototype.boxzoomstart;
 /** @type {{data: !mapboxgl.MapBoxZoomEvent}} */
mapboxgl.MapEvent.prototype.boxzoomend;
 /** @type {{data: (!mapboxgl.MapMouseEvent|!mapboxgl.MapTouchEvent)}} */
mapboxgl.MapEvent.prototype.rotate;
 /** @type {{data: (!mapboxgl.MapMouseEvent|!mapboxgl.MapTouchEvent)}} */
mapboxgl.MapEvent.prototype.rotatestart;
 /** @type {{data: (!mapboxgl.MapMouseEvent|!mapboxgl.MapTouchEvent)}} */
mapboxgl.MapEvent.prototype.rotateend;
 /** @type {{data: (!mapboxgl.MapMouseEvent|!mapboxgl.MapTouchEvent)}} */
mapboxgl.MapEvent.prototype.drag;
 /** @type {{data: (!mapboxgl.MapMouseEvent|!mapboxgl.MapTouchEvent)}} */
mapboxgl.MapEvent.prototype.dragend;
 /** @type {{data: !mapboxgl.EventData}} */
mapboxgl.MapEvent.prototype.pitch;
/**
 * @record
 * @struct
 */
mapboxgl.Layer = function() {};
 /** @type {string} */
mapboxgl.Layer.prototype.id;
 /** @type {string} */
mapboxgl.Layer.prototype.type;
 /** @type {?} */
mapboxgl.Layer.prototype.metadata;
 /** @type {string} */
mapboxgl.Layer.prototype.ref;
 /** @type {(string|!mapboxgl.VectorSource|!mapboxgl.RasterSource|!mapboxgl.GeoJSONSource|!mapboxgl.ImageSource|!mapboxgl.VideoSource|!mapboxgl.GeoJSONSourceRaw)} */
mapboxgl.Layer.prototype.source;

/* TODO: PropertySignature: mapboxgl."source-layer" */
 /** @type {number} */
mapboxgl.Layer.prototype.minzoom;
 /** @type {number} */
mapboxgl.Layer.prototype.maxzoom;
 /** @type {boolean} */
mapboxgl.Layer.prototype.interactive;
 /** @type {!Array<?>} */
mapboxgl.Layer.prototype.filter;
 /** @type {(!mapboxgl.BackgroundLayout|!mapboxgl.FillLayout|!mapboxgl.FillExtrusionLayout|!mapboxgl.LineLayout|!mapboxgl.SymbolLayout|!mapboxgl.RasterLayout|!mapboxgl.CircleLayout)} */
mapboxgl.Layer.prototype.layout;
 /** @type {(!mapboxgl.BackgroundPaint|!mapboxgl.FillPaint|!mapboxgl.FillExtrusionPaint|!mapboxgl.LinePaint|!mapboxgl.SymbolPaint|!mapboxgl.RasterPaint|!mapboxgl.CirclePaint)} */
mapboxgl.Layer.prototype.paint;
/**
 * @record
 * @struct
 */
mapboxgl.StyleFunction = function() {};
 /** @type {!Array<!Array<?>>} */
mapboxgl.StyleFunction.prototype.stops;
 /** @type {string} */
mapboxgl.StyleFunction.prototype.property;
 /** @type {number} */
mapboxgl.StyleFunction.prototype.base;
 /** @type {string} */
mapboxgl.StyleFunction.prototype.type;
 /** @type {?} */
mapboxgl.StyleFunction.prototype.default;

/* TODO: PropertySignature: mapboxgl."colorSpace" */
/**
 * @record
 * @struct
 */
mapboxgl.BackgroundLayout = function() {};
 /** @type {string} */
mapboxgl.BackgroundLayout.prototype.visibility;
/**
 * @record
 * @struct
 */
mapboxgl.BackgroundPaint = function() {};

/* TODO: PropertySignature: mapboxgl."background-color" */

/* TODO: PropertySignature: mapboxgl."background-pattern" */

/* TODO: PropertySignature: mapboxgl."background-opacity" */
/**
 * @record
 * @struct
 */
mapboxgl.FillLayout = function() {};
 /** @type {string} */
mapboxgl.FillLayout.prototype.visibility;
/**
 * @record
 * @struct
 */
mapboxgl.FillPaint = function() {};

/* TODO: PropertySignature: mapboxgl."fill-antialias" */

/* TODO: PropertySignature: mapboxgl."fill-opacity" */

/* TODO: PropertySignature: mapboxgl."fill-color" */

/* TODO: PropertySignature: mapboxgl."fill-outline-color" */

/* TODO: PropertySignature: mapboxgl."fill-translate" */

/* TODO: PropertySignature: mapboxgl."fill-translate-anchor" */

/* TODO: PropertySignature: mapboxgl."fill-pattern" */
/**
 * @record
 * @struct
 */
mapboxgl.FillExtrusionLayout = function() {};
 /** @type {string} */
mapboxgl.FillExtrusionLayout.prototype.visibility;
/**
 * @record
 * @struct
 */
mapboxgl.FillExtrusionPaint = function() {};

/* TODO: PropertySignature: mapboxgl."fill-extrusion-opacity" */

/* TODO: PropertySignature: mapboxgl."fill-extrusion-color" */

/* TODO: PropertySignature: mapboxgl."fill-extrusion-translate" */

/* TODO: PropertySignature: mapboxgl."fill-extrusion-translate-anchor" */

/* TODO: PropertySignature: mapboxgl."fill-extrusion-pattern" */

/* TODO: PropertySignature: mapboxgl."fill-extrusion-height" */

/* TODO: PropertySignature: mapboxgl."fill-extrusion-base" */
/**
 * @record
 * @struct
 */
mapboxgl.LineLayout = function() {};
 /** @type {string} */
mapboxgl.LineLayout.prototype.visibility;

/* TODO: PropertySignature: mapboxgl."line-cap" */

/* TODO: PropertySignature: mapboxgl."line-join" */

/* TODO: PropertySignature: mapboxgl."line-miter-limit" */

/* TODO: PropertySignature: mapboxgl."line-round-limit" */
/**
 * @record
 * @struct
 */
mapboxgl.LinePaint = function() {};

/* TODO: PropertySignature: mapboxgl."line-opacity" */

/* TODO: PropertySignature: mapboxgl."line-color" */

/* TODO: PropertySignature: mapboxgl."line-translate" */

/* TODO: PropertySignature: mapboxgl."line-translate-anchor" */

/* TODO: PropertySignature: mapboxgl."line-width" */

/* TODO: PropertySignature: mapboxgl."line-gap-width" */

/* TODO: PropertySignature: mapboxgl."line-offset" */

/* TODO: PropertySignature: mapboxgl."line-blur" */

/* TODO: PropertySignature: mapboxgl."line-dasharray" */

/* TODO: PropertySignature: mapboxgl."line-dasharray-transition" */

/* TODO: PropertySignature: mapboxgl."line-pattern" */
/**
 * @record
 * @struct
 */
mapboxgl.SymbolLayout = function() {};
 /** @type {string} */
mapboxgl.SymbolLayout.prototype.visibility;

/* TODO: PropertySignature: mapboxgl."symbol-placement" */

/* TODO: PropertySignature: mapboxgl."symbol-spacing" */

/* TODO: PropertySignature: mapboxgl."symbol-avoid-edges" */

/* TODO: PropertySignature: mapboxgl."icon-allow-overlap" */

/* TODO: PropertySignature: mapboxgl."icon-ignore-placement" */

/* TODO: PropertySignature: mapboxgl."icon-optional" */

/* TODO: PropertySignature: mapboxgl."icon-rotation-alignment" */

/* TODO: PropertySignature: mapboxgl."icon-size" */

/* TODO: PropertySignature: mapboxgl."icon-text-fit" */

/* TODO: PropertySignature: mapboxgl."icon-text-fit-padding" */

/* TODO: PropertySignature: mapboxgl."icon-image" */

/* TODO: PropertySignature: mapboxgl."icon-rotate" */

/* TODO: PropertySignature: mapboxgl."icon-padding" */

/* TODO: PropertySignature: mapboxgl."icon-keep-upright" */

/* TODO: PropertySignature: mapboxgl."icon-offset" */

/* TODO: PropertySignature: mapboxgl."text-pitch-alignment" */

/* TODO: PropertySignature: mapboxgl."text-rotation-alignment" */

/* TODO: PropertySignature: mapboxgl."text-field" */

/* TODO: PropertySignature: mapboxgl."text-font" */

/* TODO: PropertySignature: mapboxgl."text-size" */

/* TODO: PropertySignature: mapboxgl."text-max-width" */

/* TODO: PropertySignature: mapboxgl."text-line-height" */

/* TODO: PropertySignature: mapboxgl."text-letter-spacing" */

/* TODO: PropertySignature: mapboxgl."text-justify" */

/* TODO: PropertySignature: mapboxgl."text-anchor" */

/* TODO: PropertySignature: mapboxgl."text-max-angle" */

/* TODO: PropertySignature: mapboxgl."text-rotate" */

/* TODO: PropertySignature: mapboxgl."text-padding" */

/* TODO: PropertySignature: mapboxgl."text-keep-upright" */

/* TODO: PropertySignature: mapboxgl."text-transform" */

/* TODO: PropertySignature: mapboxgl."text-offset" */

/* TODO: PropertySignature: mapboxgl."text-allow-overlap" */

/* TODO: PropertySignature: mapboxgl."text-ignore-placement" */

/* TODO: PropertySignature: mapboxgl."text-optional" */
/**
 * @record
 * @struct
 */
mapboxgl.SymbolPaint = function() {};

/* TODO: PropertySignature: mapboxgl."icon-opacity" */

/* TODO: PropertySignature: mapboxgl."icon-color" */

/* TODO: PropertySignature: mapboxgl."icon-halo-color" */

/* TODO: PropertySignature: mapboxgl."icon-halo-width" */

/* TODO: PropertySignature: mapboxgl."icon-halo-blur" */

/* TODO: PropertySignature: mapboxgl."icon-translate" */

/* TODO: PropertySignature: mapboxgl."icon-translate-anchor" */

/* TODO: PropertySignature: mapboxgl."text-opacity" */

/* TODO: PropertySignature: mapboxgl."text-color" */

/* TODO: PropertySignature: mapboxgl."text-halo-color" */

/* TODO: PropertySignature: mapboxgl."text-halo-width" */

/* TODO: PropertySignature: mapboxgl."text-halo-blur" */

/* TODO: PropertySignature: mapboxgl."text-translate" */

/* TODO: PropertySignature: mapboxgl."text-translate-anchor" */
/**
 * @record
 * @struct
 */
mapboxgl.RasterLayout = function() {};
 /** @type {string} */
mapboxgl.RasterLayout.prototype.visibility;
/**
 * @record
 * @struct
 */
mapboxgl.RasterPaint = function() {};

/* TODO: PropertySignature: mapboxgl."raster-opacity" */

/* TODO: PropertySignature: mapboxgl."raster-hue-rotate" */

/* TODO: PropertySignature: mapboxgl."raster-brightness-min" */

/* TODO: PropertySignature: mapboxgl."raster-brightness-max" */

/* TODO: PropertySignature: mapboxgl."raster-saturation" */

/* TODO: PropertySignature: mapboxgl."raster-contrast" */

/* TODO: PropertySignature: mapboxgl."raster-fade-duration" */
/**
 * @record
 * @struct
 */
mapboxgl.CircleLayout = function() {};
 /** @type {string} */
mapboxgl.CircleLayout.prototype.visibility;
/**
 * @record
 * @struct
 */
mapboxgl.CirclePaint = function() {};

/* TODO: PropertySignature: mapboxgl."circle-radius" */

/* TODO: PropertySignature: mapboxgl."circle-radius-transition" */

/* TODO: PropertySignature: mapboxgl."circle-color" */

/* TODO: PropertySignature: mapboxgl."circle-blur" */

/* TODO: PropertySignature: mapboxgl."circle-opacity" */

/* TODO: PropertySignature: mapboxgl."circle-translate" */

/* TODO: PropertySignature: mapboxgl."circle-translate-anchor" */

/* TODO: PropertySignature: mapboxgl."circle-pitch-scale" */

/* TODO: PropertySignature: mapboxgl."circle-stroke-width" */

/* TODO: PropertySignature: mapboxgl."circle-stroke-color" */

/* TODO: PropertySignature: mapboxgl."circle-stroke-opacity" */
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "mapbox-gl"
/** @const */
tsickle_declare_module.mapbox_gl = {};

/* TODO: ExportAssignment in tsickle_declare_module.mapbox_gl */
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "mapbox-gl/dist/mapbox-gl"
/** @const */
tsickle_declare_module.mapbox_gl_dist_mapbox_gl = {};

/* TODO: ExportAssignment in tsickle_declare_module.mapbox_gl_dist_mapbox_gl */
