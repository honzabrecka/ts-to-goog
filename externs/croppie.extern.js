/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/croppie/index.d.ts:

/**
 * @constructor
 * @struct
 * @param {!HTMLElement} container
 * @param {?=} options
 */
function Croppie(container, options) {}

/**
 * @param {?} options
 * @return {!Promise<void>}
 */
Croppie.prototype.bind = function(options) {};

/**
 * @param {?=} options
 * @return {!Promise<string>|!Promise<!HTMLElement>|!Promise<!Blob>|!Promise<!HTMLCanvasElement>}
 */
Croppie.prototype.result = function(options) {};

/**
 * @param {number} degrees
 * @return {void}
 */
Croppie.prototype.rotate = function(degrees) {};

/**
 * @param {number} zoom
 * @return {void}
 */
Croppie.prototype.setZoom = function(zoom) {};

/**
 * @return {void}
 */
Croppie.prototype.destroy = function() {};

/** @typedef {string} */
var CropType;

/** @typedef {string} */
var Format;
/**
 * @record
 * @struct
 */
function ResultOptions() {}
 /** @type {(string|?)} */
ResultOptions.prototype.size;
 /** @type {string} */
ResultOptions.prototype.format;
 /** @type {number} */
ResultOptions.prototype.quality;
 /** @type {boolean} */
ResultOptions.prototype.circle;
/**
 * @record
 * @struct
 */
function CroppieOptions() {}
 /** @type {?} */
CroppieOptions.prototype.boundary;
 /** @type {string} */
CroppieOptions.prototype.customClass;
 /** @type {boolean} */
CroppieOptions.prototype.enableExif;
 /** @type {boolean} */
CroppieOptions.prototype.enableOrientation;
 /** @type {boolean} */
CroppieOptions.prototype.enableZoom;
 /** @type {boolean} */
CroppieOptions.prototype.enforceBoundary;
 /** @type {boolean} */
CroppieOptions.prototype.mouseWheelZoom;
 /** @type {boolean} */
CroppieOptions.prototype.showZoomer;
 /** @type {?} */
CroppieOptions.prototype.viewport;
