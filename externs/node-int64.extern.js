/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/node-int64/index.d.ts:

/**
 * @constructor
 * @struct
 * @param {?|!Uint8Array|string|number} buffer_or_array_or_str_or_hi
 * @param {number=} offset_or_lo
 */
function Int64(buffer_or_array_or_str_or_hi, offset_or_lo) {}
 /** @type {number} */
Int64.MAX_INT;
 /** @type {number} */
Int64.MIN_INT;

/**
 * @return {void}
 */
Int64.prototype._2scomp = function() {};

/**
 * @param {string} str
 * @return {void}
 */
Int64.prototype.setValue = function(str) {};

/**
 * @param {boolean=} allowImprecise
 * @return {number}
 */
Int64.prototype.toNumber = function(allowImprecise) {};

/**
 * @return {number}
 */
Int64.prototype.valueOf = function() {};

/**
 * @param {number=} radix
 * @return {string}
 */
Int64.prototype.toString = function(radix) {};

/**
 * @param {string=} separator
 * @return {string}
 */
Int64.prototype.toOctetString = function(separator) {};

/**
 * @param {boolean=} rawBuffer
 * @return {?}
 */
Int64.prototype.toBuffer = function(rawBuffer) {};

/**
 * @param {?} targetBuffer
 * @param {number=} targetOffset
 * @return {void}
 */
Int64.prototype.copy = function(targetBuffer, targetOffset) {};

/**
 * @param {!Int64} other
 * @return {number}
 */
Int64.prototype.compare = function(other) {};

/**
 * @param {!Int64} other
 * @return {boolean}
 */
Int64.prototype.equals = function(other) {};

/**
 * @return {string}
 */
Int64.prototype.inspect = function() {};

/* TODO: ExportAssignment in  */
