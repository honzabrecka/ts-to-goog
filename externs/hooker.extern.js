/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/hooker/index.d.ts:

/** @typedef {function(?, !Array<?>): (void|!IHookerPostHookResult)} */
var HookerPostHookFunction;

/** @typedef {function(!Array<?>): (void|!IHookerPreHookResult)} */
var HookerPreHookFunction;
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "hooker"
/** @const */
tsickle_declare_module.hooker = {};

/**
 * @param {?} object
 * @param {(string|!Array<string>)} props
 * @param {!IHookerOptions|function(!Array<?>): (void|!IHookerPreHookResult)} options_or_prehookFunction
 * @return {void}
 */
tsickle_declare_module.hooker.hook = function(object, props, options_or_prehookFunction) {};

/**
 * @param {?} object
 * @param {(string|!Array<string>)=} props
 * @return {!Array<string>}
 */
tsickle_declare_module.hooker.unhook = function(object, props) {};

/**
 * @param {?} object
 * @param {(string|!Array<string>)} props
 * @return {!Function}
 */
tsickle_declare_module.hooker.orig = function(object, props) {};

/**
 * @param {?} value
 * @return {!HookerOverride}
 */
tsickle_declare_module.hooker.override = function(value) {};

/**
 * @param {?} value
 * @return {!HookerPreempt}
 */
tsickle_declare_module.hooker.preempt = function(value) {};

/**
 * @param {?} context
 * @param {!Array<?>} args
 * @return {!HookerFilter}
 */
tsickle_declare_module.hooker.filter = function(context, args) {};
/**
 * @implements {IHookerPostHookResult}
 * @implements {IHookerPreHookResult}
 * @constructor
 * @struct
 */
function HookerOverride() {}
 /** @type {?} */
HookerOverride.prototype.value;
/**
 * @implements {IHookerPreHookResult}
 * @constructor
 * @struct
 */
function HookerPreempt() {}
 /** @type {?} */
HookerPreempt.prototype.value;
/**
 * @implements {IHookerPreHookResult}
 * @constructor
 * @struct
 */
function HookerFilter() {}
 /** @type {?} */
HookerFilter.prototype.context;
 /** @type {!Array<?>} */
HookerFilter.prototype.args;
/**
 * @record
 * @struct
 */
function IHookerPostHookResult() {}
/**
 * @record
 * @struct
 */
function IHookerPreHookResult() {}
/**
 * @record
 * @struct
 */
function IHookerOptions() {}
 /** @type {function(!Array<?>): (void|!IHookerPreHookResult)} */
IHookerOptions.prototype.pre;
 /** @type {function(?, !Array<?>): (void|!IHookerPostHookResult)} */
IHookerOptions.prototype.post;
 /** @type {boolean} */
IHookerOptions.prototype.once;
 /** @type {boolean} */
IHookerOptions.prototype.passName;
