/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/fecha/index.d.ts:

/** @typedef {!Array<?>} */
var Days;

/** @typedef {!Array<?>} */
var Months;
/**
 * @record
 * @struct
 */
function i18nSettings() {}
 /** @type {!Array<?>} */
i18nSettings.prototype.amPm;
 /** @type {!Array<?>} */
i18nSettings.prototype.dayNames;
 /** @type {!Array<?>} */
i18nSettings.prototype.dayNamesShort;
 /** @type {!Array<?>} */
i18nSettings.prototype.monthNames;
 /** @type {!Array<?>} */
i18nSettings.prototype.monthNamesShort;

/**
 * @param {number} D
 * @return {string}
 */
i18nSettings.prototype.DoFn = function(D) {};
/**
 * @record
 * @struct
 */
function Masks() {}
 /** @type {string} */
Masks.prototype.default;
 /** @type {string} */
Masks.prototype.fullDate;
 /** @type {string} */
Masks.prototype.longDate;
 /** @type {string} */
Masks.prototype.longTime;
 /** @type {string} */
Masks.prototype.mediumDate;
 /** @type {string} */
Masks.prototype.mediumTime;
 /** @type {string} */
Masks.prototype.shortDate;
 /** @type {string} */
Masks.prototype.shortTime;

/* TODO: IndexSignature:  */
 /** @type {?} */
var masks;
 /** @type {?} */
var i18n;

/**
 * @param {(number|!Date)} dateObj
 * @param {string} mask
 * @param {?=} i18nSettings
 * @return {string}
 */
function format(dateObj, mask, i18nSettings) {}

/**
 * @param {string} dateStr
 * @param {string} format
 * @param {?=} i18nSettings
 * @return {!Date}
 */
function parse(dateStr, format, i18nSettings) {}

/* TODO: NamespaceExportDeclaration in  */
