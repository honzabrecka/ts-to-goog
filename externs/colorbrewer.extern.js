/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/colorbrewer/index.d.ts:
 /** @type {!ColorBrewer.Base} */
var colorbrewer;
/** @const */
var ColorBrewer = {};
/**
 * @record
 * @struct
 */
ColorBrewer.ColorScheme = function() {};

/* TODO: IndexSignature: ColorBrewer */
/**
 * @extends {ColorBrewer.ColorScheme}
 * @record
 * @struct
 */
ColorBrewer.EightColorScheme = function() {};

/* TODO: PropertySignature: ColorBrewer.3 */

/* TODO: PropertySignature: ColorBrewer.4 */

/* TODO: PropertySignature: ColorBrewer.5 */

/* TODO: PropertySignature: ColorBrewer.6 */

/* TODO: PropertySignature: ColorBrewer.7 */

/* TODO: PropertySignature: ColorBrewer.8 */
/**
 * @extends {ColorBrewer.EightColorScheme}
 * @record
 * @struct
 */
ColorBrewer.NineColorScheme = function() {};

/* TODO: PropertySignature: ColorBrewer.9 */
/**
 * @extends {ColorBrewer.NineColorScheme}
 * @record
 * @struct
 */
ColorBrewer.ElevenColorScheme = function() {};

/* TODO: PropertySignature: ColorBrewer.10 */

/* TODO: PropertySignature: ColorBrewer.11 */
/**
 * @extends {ColorBrewer.ElevenColorScheme}
 * @record
 * @struct
 */
ColorBrewer.TwelveColorScheme = function() {};

/* TODO: PropertySignature: ColorBrewer.12 */
/**
 * @record
 * @struct
 */
ColorBrewer.Base = function() {};
 /** @type {!ColorBrewer.NineColorScheme} */
ColorBrewer.Base.prototype.YlGn;
 /** @type {!ColorBrewer.NineColorScheme} */
ColorBrewer.Base.prototype.YlGnBu;
 /** @type {!ColorBrewer.NineColorScheme} */
ColorBrewer.Base.prototype.GnBu;
 /** @type {!ColorBrewer.NineColorScheme} */
ColorBrewer.Base.prototype.BuGn;
 /** @type {!ColorBrewer.NineColorScheme} */
ColorBrewer.Base.prototype.PuBuGn;
 /** @type {!ColorBrewer.NineColorScheme} */
ColorBrewer.Base.prototype.PuBu;
 /** @type {!ColorBrewer.NineColorScheme} */
ColorBrewer.Base.prototype.BuPu;
 /** @type {!ColorBrewer.NineColorScheme} */
ColorBrewer.Base.prototype.RdPu;
 /** @type {!ColorBrewer.NineColorScheme} */
ColorBrewer.Base.prototype.PuRd;
 /** @type {!ColorBrewer.NineColorScheme} */
ColorBrewer.Base.prototype.OrRd;
 /** @type {!ColorBrewer.NineColorScheme} */
ColorBrewer.Base.prototype.YlOrRd;
 /** @type {!ColorBrewer.NineColorScheme} */
ColorBrewer.Base.prototype.YlOrBr;
 /** @type {!ColorBrewer.NineColorScheme} */
ColorBrewer.Base.prototype.Purples;
 /** @type {!ColorBrewer.NineColorScheme} */
ColorBrewer.Base.prototype.Blues;
 /** @type {!ColorBrewer.NineColorScheme} */
ColorBrewer.Base.prototype.Greens;
 /** @type {!ColorBrewer.NineColorScheme} */
ColorBrewer.Base.prototype.Oranges;
 /** @type {!ColorBrewer.NineColorScheme} */
ColorBrewer.Base.prototype.Reds;
 /** @type {!ColorBrewer.NineColorScheme} */
ColorBrewer.Base.prototype.Greys;
 /** @type {!ColorBrewer.ElevenColorScheme} */
ColorBrewer.Base.prototype.PuOr;
 /** @type {!ColorBrewer.ElevenColorScheme} */
ColorBrewer.Base.prototype.BrBG;
 /** @type {!ColorBrewer.ElevenColorScheme} */
ColorBrewer.Base.prototype.PRGn;
 /** @type {!ColorBrewer.ElevenColorScheme} */
ColorBrewer.Base.prototype.PiYG;
 /** @type {!ColorBrewer.ElevenColorScheme} */
ColorBrewer.Base.prototype.RdBu;
 /** @type {!ColorBrewer.ElevenColorScheme} */
ColorBrewer.Base.prototype.RdGy;
 /** @type {!ColorBrewer.ElevenColorScheme} */
ColorBrewer.Base.prototype.RdYlBu;
 /** @type {!ColorBrewer.ElevenColorScheme} */
ColorBrewer.Base.prototype.Spectral;
 /** @type {!ColorBrewer.ElevenColorScheme} */
ColorBrewer.Base.prototype.RdYlGn;
 /** @type {!ColorBrewer.EightColorScheme} */
ColorBrewer.Base.prototype.Accent;
 /** @type {!ColorBrewer.EightColorScheme} */
ColorBrewer.Base.prototype.Dark2;
 /** @type {!ColorBrewer.TwelveColorScheme} */
ColorBrewer.Base.prototype.Paired;
 /** @type {!ColorBrewer.NineColorScheme} */
ColorBrewer.Base.prototype.Pastel1;
 /** @type {!ColorBrewer.EightColorScheme} */
ColorBrewer.Base.prototype.Pastel2;
 /** @type {!ColorBrewer.NineColorScheme} */
ColorBrewer.Base.prototype.Set1;
 /** @type {!ColorBrewer.EightColorScheme} */
ColorBrewer.Base.prototype.Set2;
 /** @type {!ColorBrewer.TwelveColorScheme} */
ColorBrewer.Base.prototype.Set3;
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "colorbrewer"
/** @const */
tsickle_declare_module.colorbrewer = {};

/* TODO: ExportAssignment in tsickle_declare_module.colorbrewer */
