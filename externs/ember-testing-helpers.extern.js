/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/ember-testing-helpers/index.d.ts:

/* TODO: ImportDeclaration in  */

/** @typedef {string} */
var KeyEventType;

/** @typedef {!RSVP.Promise<?, ?>} */
var WaitResult;

/**
 * @template T
 * @param {function(!Array<?>): T} callback
 * @return {!RSVP.Promise<T, ?>}
 */
function andThen(callback) {}

/**
 * @param {string} selector
 * @param {!Object=} context
 * @return {!RSVP.Promise<void, ?>}
 */
function click(selector, context) {}

/**
 * @return {string}
 */
function currentPath() {}

/**
 * @return {string}
 */
function currentRouteName() {}

/**
 * @return {string}
 */
function currentURL() {}

/**
 * @param {string} selector
 * @param {!Object|string} context_or_text
 * @param {string=} text
 * @return {!RSVP.Promise<void, ?>}
 */
function fillIn(selector, context_or_text, text) {}

/**
 * @param {string} selector
 * @param {!Object=} context
 * @return {?<!Node>}
 */
function find(selector, context) {}

/**
 * @param {string} selector
 * @param {!Object=} context
 * @return {?<!Node>}
 */
function findWithAssert(selector, context) {}

/**
 * @param {string} selector
 * @param {string} type
 * @param {number} keyCode
 * @return {!RSVP.Promise<void, ?>}
 */
function keyEvent(selector, type, keyCode) {}

/**
 * @return {!RSVP.Promise<!Object, ?>}
 */
function pauseTest() {}

/**
 * @return {void}
 */
function resumeTest() {}

/**
 * @param {string} selector
 * @param {!Object|string} context_or_type
 * @param {string|!Object=} type_or_options
 * @param {!Object=} options
 * @return {!RSVP.Promise<void, ?>}
 */
function triggerEvent(selector, context_or_type, type_or_options, options) {}

/**
 * @template T
 * @param {string} route
 * @return {!RSVP.Promise<void, ?>}
 */
function visit(route) {}

/**
 * @template T
 * @param {T} value
 * @return {!RSVP.Promise<T, ?>}
 */
function wait(value) {}

/* TODO: ExportDeclaration in  */
