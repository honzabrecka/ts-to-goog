/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/knockout.projections/index.d.ts:
/**
 * @extends {KnockoutObservableArray}
 * @extends {KnockoutSubscription}
 * @record
 * @struct
 */
function KnockoutMappedObservableArray() {}

/**
 * @template TResult
 * @param {{mappingWithDisposeCallback: function(T): {mappedValue: TResult, dispose: function(): void}}|{mapping: function(T): TResult, disposeItem: function(TResult): void}|function(T): TResult} mappingOptions
 * @return {!KnockoutMappedObservableArray<TResult>}
 */
KnockoutObservableArrayFunctions.prototype.map = function(mappingOptions) {};

/**
 * @param {function(T): boolean} predicate
 * @return {!KnockoutMappedObservableArray<T>}
 */
KnockoutObservableArrayFunctions.prototype.filter = function(predicate) {};
