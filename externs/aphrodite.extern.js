/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/aphrodite/index.d.ts:

/* TODO: ImportDeclaration in  */
/**
 * @record
 * @struct
 */
function StyleDeclaration() {}

/* TODO: IndexSignature:  */
/**
 * @record
 * @struct
 */
function StyleSheetStatic() {}

/**
 * Create style sheet
 * @template T
 * @param {?} styles
 * @return {?}
 */
StyleSheetStatic.prototype.create = function(styles) {};

/**
 * Rehydrate class names from server renderer
 * @param {!Array<string>} renderedClassNames
 * @return {void}
 */
StyleSheetStatic.prototype.rehydrate = function(renderedClassNames) {};
 /** @type {?} */
var StyleSheet;

/**
 * Get class names from passed styles
 * @param {...?} styles
 * @return {string}
 */
function css(styles) {}
/**
 * @record
 * @struct
 */
function StaticRendererResult() {}
 /** @type {string} */
StaticRendererResult.prototype.html;
 /** @type {?} */
StaticRendererResult.prototype.css;
/**
 * @record
 * @struct
 */
function StyleSheetServerStatic() {}

/**
 * @param {?} renderFunc
 * @return {?}
 */
StyleSheetServerStatic.prototype.renderStatic = function(renderFunc) {};
 /** @type {?} */
var StyleSheetServer;
/**
 * @record
 * @struct
 */
function StyleSheetTestUtilsStatic() {}

/**
 * Prevent styles from being injected into the DOM.
 * 
 * This is useful in situations where you'd like to test rendering UI
 * components which use Aphrodite without any of the side-effects of
 * Aphrodite happening. Particularly useful for testing the output of
 * components when you have no DOM, e.g. testing in Node without a fake DOM.
 * 
 * Should be paired with a subsequent call to
 * clearBufferAndResumeStyleInjection.
 * @return {void}
 */
StyleSheetTestUtilsStatic.prototype.suppressStyleInjection = function() {};

/**
 * Opposite method of preventStyleInject.
 * @return {void}
 */
StyleSheetTestUtilsStatic.prototype.clearBufferAndResumeStyleInjection = function() {};
 /** @type {?} */
var StyleSheetTestUtils;
