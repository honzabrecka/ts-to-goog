/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/imagemagick-native/index.d.ts:

/* TODO: ImportEqualsDeclaration in  */
/** @const */
var streams = {};

/**
 * @param {?} options
 * @return {!internal.Transform}
 */
streams.convert = function(options) {};

/**
 * @param {?} options
 * @param {function(?, ?): void=} callback
 * @return {?|void}
 */
function convert(options, callback) {}

/**
 * @param {?} options
 * @param {function(?, ?): void=} callback
 * @return {?|void}
 */
function identify(options, callback) {}

/**
 * @param {?} options
 * @return {!Array<?>}
 */
function quantizeColors(options) {}

/**
 * @param {?} options
 * @param {function(?, ?): void=} callback
 * @return {?|void}
 */
function composite(options, callback) {}

/**
 * @param {?} options
 * @return {!Array<?>}
 */
function getConstPixels(options) {}

/**
 * @return {number}
 */
function quantumDepth() {}

/**
 * @return {string}
 */
function version() {}
/**
 * @record
 * @struct
 */
function IStreamConvertOptions() {}
 /** @type {string} */
IStreamConvertOptions.prototype.srcFormat;
 /** @type {number} */
IStreamConvertOptions.prototype.quality;
 /** @type {boolean} */
IStreamConvertOptions.prototype.trim;
 /** @type {number} */
IStreamConvertOptions.prototype.trimFuzz;
 /** @type {number} */
IStreamConvertOptions.prototype.width;
 /** @type {number} */
IStreamConvertOptions.prototype.height;
 /** @type {number} */
IStreamConvertOptions.prototype.density;
 /** @type {string} */
IStreamConvertOptions.prototype.resizeStyle;
 /** @type {string} */
IStreamConvertOptions.prototype.gravity;
 /** @type {string} */
IStreamConvertOptions.prototype.format;
 /** @type {string} */
IStreamConvertOptions.prototype.filter;
 /** @type {number} */
IStreamConvertOptions.prototype.blur;
 /** @type {boolean} */
IStreamConvertOptions.prototype.strip;
 /** @type {number} */
IStreamConvertOptions.prototype.rotate;
 /** @type {boolean} */
IStreamConvertOptions.prototype.flip;
 /** @type {boolean} */
IStreamConvertOptions.prototype.debug;
 /** @type {boolean} */
IStreamConvertOptions.prototype.ignoreWarnings;
/**
 * @record
 * @struct
 */
function IConvertOptions() {}
 /** @type {?} */
IConvertOptions.prototype.srcData;
 /** @type {string} */
IConvertOptions.prototype.srcFormat;
 /** @type {number} */
IConvertOptions.prototype.quality;
 /** @type {boolean} */
IConvertOptions.prototype.trim;
 /** @type {number} */
IConvertOptions.prototype.trimFuzz;
 /** @type {number} */
IConvertOptions.prototype.width;
 /** @type {number} */
IConvertOptions.prototype.height;
 /** @type {number} */
IConvertOptions.prototype.density;
 /** @type {string} */
IConvertOptions.prototype.resizeStyle;
 /** @type {string} */
IConvertOptions.prototype.gravity;
 /** @type {string} */
IConvertOptions.prototype.format;
 /** @type {string} */
IConvertOptions.prototype.filter;
 /** @type {number} */
IConvertOptions.prototype.blur;
 /** @type {boolean} */
IConvertOptions.prototype.strip;
 /** @type {number} */
IConvertOptions.prototype.rotate;
 /** @type {boolean} */
IConvertOptions.prototype.flip;
 /** @type {boolean} */
IConvertOptions.prototype.debug;
 /** @type {boolean} */
IConvertOptions.prototype.ignoreWarnings;
/**
 * @record
 * @struct
 */
function IIdentifyOptions() {}
 /** @type {?} */
IIdentifyOptions.prototype.srcData;
 /** @type {boolean} */
IIdentifyOptions.prototype.debug;
 /** @type {boolean} */
IIdentifyOptions.prototype.ignoreWarnings;
/**
 * @record
 * @struct
 */
function IIdentifyResult() {}
 /** @type {string} */
IIdentifyResult.prototype.format;
 /** @type {number} */
IIdentifyResult.prototype.width;
 /** @type {number} */
IIdentifyResult.prototype.height;
 /** @type {number} */
IIdentifyResult.prototype.depth;
 /** @type {?} */
IIdentifyResult.prototype.density;
 /** @type {?} */
IIdentifyResult.prototype.exif;
/**
 * @record
 * @struct
 */
function IQuantizeColorsOptions() {}
 /** @type {?} */
IQuantizeColorsOptions.prototype.srcData;
 /** @type {number} */
IQuantizeColorsOptions.prototype.colors;
 /** @type {boolean} */
IQuantizeColorsOptions.prototype.debug;
 /** @type {boolean} */
IQuantizeColorsOptions.prototype.ignoreWarnings;
/**
 * @record
 * @struct
 */
function IQuantizeColorsItem() {}
 /** @type {number} */
IQuantizeColorsItem.prototype.r;
 /** @type {number} */
IQuantizeColorsItem.prototype.g;
 /** @type {number} */
IQuantizeColorsItem.prototype.b;
 /** @type {string} */
IQuantizeColorsItem.prototype.hex;
/**
 * @record
 * @struct
 */
function ICompositeOptions() {}
 /** @type {?} */
ICompositeOptions.prototype.srcData;
 /** @type {?} */
ICompositeOptions.prototype.compositeData;
 /** @type {string} */
ICompositeOptions.prototype.gravity;
 /** @type {boolean} */
ICompositeOptions.prototype.debug;
 /** @type {boolean} */
ICompositeOptions.prototype.ignoreWarnings;
/**
 * @record
 * @struct
 */
function IConstPixelsOptions() {}
 /** @type {?} */
IConstPixelsOptions.prototype.srcData;
 /** @type {number} */
IConstPixelsOptions.prototype.x;
 /** @type {number} */
IConstPixelsOptions.prototype.y;
 /** @type {number} */
IConstPixelsOptions.prototype.columns;
 /** @type {number} */
IConstPixelsOptions.prototype.rows;
/**
 * @record
 * @struct
 */
function IConstPixelsItem() {}
 /** @type {number} */
IConstPixelsItem.prototype.red;
 /** @type {number} */
IConstPixelsItem.prototype.green;
 /** @type {number} */
IConstPixelsItem.prototype.blue;
 /** @type {number} */
IConstPixelsItem.prototype.opacity;
