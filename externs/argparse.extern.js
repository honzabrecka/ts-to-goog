/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/argparse/index.d.ts:

/**
 * @constructor
 * @struct
 * @param {?=} options
 */
function ArgumentParser(options) {}

/**
 * @param {?=} options
 * @return {!SubParser}
 */
ArgumentParser.prototype.addSubparsers = function(options) {};

/**
 * @param {!Array<string>=} args
 * @param {(!Object|?)=} ns
 * @return {?}
 */
ArgumentParser.prototype.parseArgs = function(args, ns) {};

/**
 * @return {void}
 */
ArgumentParser.prototype.printUsage = function() {};

/**
 * @return {void}
 */
ArgumentParser.prototype.printHelp = function() {};

/**
 * @return {string}
 */
ArgumentParser.prototype.formatUsage = function() {};

/**
 * @return {string}
 */
ArgumentParser.prototype.formatHelp = function() {};

/**
 * @param {!Array<string>=} args
 * @param {(!Object|?)=} ns
 * @return {!Array<?>}
 */
ArgumentParser.prototype.parseKnownArgs = function(args, ns) {};

/**
 * @param {string} argLine
 * @return {!Array<string>}
 */
ArgumentParser.prototype.convertArgLineToArg = function(argLine) {};

/**
 * @param {number} status
 * @param {string} message
 * @return {void}
 */
ArgumentParser.prototype.exit = function(status, message) {};

/**
 * @param {(string|!Error)} err
 * @return {void}
 */
ArgumentParser.prototype.error = function(err) {};
/**
 * @record
 * @struct
 */
function Namespace() {}
/**
 * @constructor
 * @struct
 */
function SubParser() {}

/**
 * @param {string} name
 * @param {?=} options
 * @return {!ArgumentParser}
 */
SubParser.prototype.addParser = function(name, options) {};
/**
 * @constructor
 * @struct
 */
function ArgumentGroup() {}

/**
 * @param {!Array<string>} args
 * @param {?=} options
 * @return {void}
 */
ArgumentGroup.prototype.addArgument = function(args, options) {};

/**
 * @param {?=} options
 * @return {!ArgumentGroup}
 */
ArgumentGroup.prototype.addArgumentGroup = function(options) {};

/**
 * @param {{required: boolean}=} options
 * @return {!ArgumentGroup}
 */
ArgumentGroup.prototype.addMutuallyExclusiveGroup = function(options) {};

/**
 * @param {!Object=} options
 * @return {void}
 */
ArgumentGroup.prototype.setDefaults = function(options) {};

/**
 * @param {string} dest
 * @return {?}
 */
ArgumentGroup.prototype.getDefault = function(dest) {};
/**
 * @record
 * @struct
 */
function SubparserOptions() {}
 /** @type {string} */
SubparserOptions.prototype.title;
 /** @type {string} */
SubparserOptions.prototype.description;
 /** @type {string} */
SubparserOptions.prototype.prog;
 /** @type {?} */
SubparserOptions.prototype.parserClass;
 /** @type {string} */
SubparserOptions.prototype.action;
 /** @type {string} */
SubparserOptions.prototype.dest;
 /** @type {string} */
SubparserOptions.prototype.help;
 /** @type {string} */
SubparserOptions.prototype.metavar;
/**
 * @extends {ArgumentParserOptions}
 * @record
 * @struct
 */
function SubArgumentParserOptions() {}
 /** @type {!Array<string>} */
SubArgumentParserOptions.prototype.aliases;
 /** @type {string} */
SubArgumentParserOptions.prototype.help;
/**
 * @record
 * @struct
 */
function ArgumentParserOptions() {}
 /** @type {string} */
ArgumentParserOptions.prototype.description;
 /** @type {string} */
ArgumentParserOptions.prototype.epilog;
 /** @type {boolean} */
ArgumentParserOptions.prototype.addHelp;
 /** @type {?} */
ArgumentParserOptions.prototype.argumentDefault;
 /** @type {!Array<!ArgumentParser>} */
ArgumentParserOptions.prototype.parents;
 /** @type {string} */
ArgumentParserOptions.prototype.prefixChars;
 /** @type {?} */
ArgumentParserOptions.prototype.formatterClass;
 /** @type {string} */
ArgumentParserOptions.prototype.prog;
 /** @type {string} */
ArgumentParserOptions.prototype.usage;
 /** @type {string} */
ArgumentParserOptions.prototype.version;
/**
 * @record
 * @struct
 */
function ArgumentGroupOptions() {}
 /** @type {string} */
ArgumentGroupOptions.prototype.prefixChars;
 /** @type {?} */
ArgumentGroupOptions.prototype.argumentDefault;
 /** @type {string} */
ArgumentGroupOptions.prototype.title;
 /** @type {string} */
ArgumentGroupOptions.prototype.description;
/**
 * @constructor
 * @struct
 */
function HelpFormatter() {}
/**
 * @constructor
 * @struct
 */
function ArgumentDefaultsHelpFormatter() {}
/**
 * @constructor
 * @struct
 */
function RawDescriptionHelpFormatter() {}
/**
 * @constructor
 * @struct
 */
function RawTextHelpFormatter() {}
/**
 * @record
 * @struct
 */
function ArgumentOptions() {}
 /** @type {string} */
ArgumentOptions.prototype.action;
 /** @type {!Array<string>} */
ArgumentOptions.prototype.optionStrings;
 /** @type {string} */
ArgumentOptions.prototype.dest;
 /** @type {(string|number)} */
ArgumentOptions.prototype.nargs;
 /** @type {?} */
ArgumentOptions.prototype.constant;
 /** @type {?} */
ArgumentOptions.prototype.defaultValue;
 /** @type {(string|!Function)} */
ArgumentOptions.prototype.type;
 /** @type {(string|!Array<string>)} */
ArgumentOptions.prototype.choices;
 /** @type {boolean} */
ArgumentOptions.prototype.required;
 /** @type {string} */
ArgumentOptions.prototype.help;
 /** @type {string} */
ArgumentOptions.prototype.metavar;
