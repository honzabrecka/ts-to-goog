/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/wiredep/index.d.ts:
/**
 * @record
 * @struct
 */
function PathFiles() {}

/* TODO: IndexSignature:  */

/**
 * \@example: 
 *  {
 *     js: [
 *       'paths/to/your/js/files.js',
 *       'in/their/order/of/dependency.js'
 *     ],
 *     css: [
 *       'paths/to/your/css/files.css'
 *     ],
 *     // etc.
 *   }
 * @param {?} config
 * @return {?}
 */
function Wiredep(config) {}

/**
 * @param {?} config
 * @return {!NodeJS.ReadWriteStream}
 */
Wiredep.stream = function(config) {};
/**
 * @record
 * @struct
 */
function WiredepParams() {}
 /** @type {(string|!Array<string>)} */
WiredepParams.prototype.src;
 /** @type {string} */
WiredepParams.prototype.directory;
 /** @type {string} */
WiredepParams.prototype.bowerJson;
 /** @type {string} */
WiredepParams.prototype.cwd;
 /** @type {boolean} */
WiredepParams.prototype.dependencies;
 /** @type {boolean} */
WiredepParams.prototype.devDependencies;
 /** @type {boolean} */
WiredepParams.prototype.includeSelf;
 /** @type {!Array<(string|!RegExp)>} */
WiredepParams.prototype.exclude;
 /** @type {(string|!RegExp)} */
WiredepParams.prototype.ignorePath;
 /** @type {!Object} */
WiredepParams.prototype.overrides;
 /** @type {?} */
WiredepParams.prototype.onError;
 /** @type {?} */
WiredepParams.prototype.onFileUpdated;
 /** @type {?} */
WiredepParams.prototype.onPathInjected;
 /** @type {?} */
WiredepParams.prototype.onMainNotFound;
 /** @type {?} */
WiredepParams.prototype.fileTypes;
/**
 * @record
 * @struct
 */
function FileObject() {}
 /** @type {string} */
FileObject.prototype.block;
 /** @type {string} */
FileObject.prototype.file;
 /** @type {string} */
FileObject.prototype.path;
/**
 * @record
 * @struct
 */
function FileTypes() {}
 /** @type {?} */
FileTypes.prototype.fileExtension;
 /** @type {?} */
FileTypes.prototype.html;
 /** @type {?} */
FileTypes.prototype.jade;
 /** @type {?} */
FileTypes.prototype.less;
 /** @type {?} */
FileTypes.prototype.scss;
 /** @type {?} */
FileTypes.prototype.styl;
 /** @type {?} */
FileTypes.prototype.yaml;

/* TODO: ExportAssignment in  */
