/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/heatmap.js/index.d.ts:

/* TODO: ImportDeclaration in  */
/**
 * @record
 * @struct
 */
function HeatmapConfiguration() {}
 /** @type {string} */
HeatmapConfiguration.prototype.backgroundColor;
 /** @type {number} */
HeatmapConfiguration.prototype.blur;
 /** @type {?} */
HeatmapConfiguration.prototype.gradient;
 /** @type {string} */
HeatmapConfiguration.prototype.latField;
 /** @type {string} */
HeatmapConfiguration.prototype.lngField;
 /** @type {number} */
HeatmapConfiguration.prototype.maxOpacity;
 /** @type {number} */
HeatmapConfiguration.prototype.minOpacity;
 /** @type {number} */
HeatmapConfiguration.prototype.opacity;
 /** @type {number} */
HeatmapConfiguration.prototype.radius;
 /** @type {boolean} */
HeatmapConfiguration.prototype.scaleRadius;
 /** @type {boolean} */
HeatmapConfiguration.prototype.useLocalExtrema;
 /** @type {string} */
HeatmapConfiguration.prototype.valueField;
/**
 * @record
 * @struct
 */
function HeatmapDataPoint() {}

/* TODO: IndexSignature:  */
/**
 * @record
 * @struct
 */
function HeatmapData() {}
 /** @type {!Array<!HeatmapDataPoint>} */
HeatmapData.prototype.data;
 /** @type {number} */
HeatmapData.prototype.max;
 /** @type {number} */
HeatmapData.prototype.min;

/**
 * @constructor
 * @struct
 * @param {!HeatmapConfiguration} configuration
 */
function HeatmapOverlay(configuration) {}

/**
 * @param {?} map
 * @return {void}
 */
HeatmapOverlay.prototype.onAdd = function(map) {};

/**
 * @param {?} map
 * @return {void}
 */
HeatmapOverlay.prototype.onRemove = function(map) {};

/**
 * @param {!HeatmapData} data
 * @return {void}
 */
HeatmapOverlay.prototype.setData = function(data) {};
