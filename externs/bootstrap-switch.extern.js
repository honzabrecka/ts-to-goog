/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/bootstrap-switch/index.d.ts:
/** @const */
var BootstrapSwitch = {};
/**
 * @extends {JQueryEventObject}
 * @record
 * @struct
 */
BootstrapSwitch.BootstrapSwitchChangeEventObject = function() {};
 /** @type {boolean} */
BootstrapSwitch.BootstrapSwitchChangeEventObject.prototype.state;
/**
 * @extends {JQueryEventObject}
 * @record
 * @struct
 */
BootstrapSwitch.BootstrapSwitchEventObject = function() {};
/**
 * @record
 * @struct
 */
BootstrapSwitch.BootstrapSwitchOptions = function() {};
 /** @type {boolean} */
BootstrapSwitch.BootstrapSwitchOptions.prototype.state;
 /** @type {string} */
BootstrapSwitch.BootstrapSwitchOptions.prototype.size;
 /** @type {boolean} */
BootstrapSwitch.BootstrapSwitchOptions.prototype.animate;
 /** @type {boolean} */
BootstrapSwitch.BootstrapSwitchOptions.prototype.disabled;
 /** @type {boolean} */
BootstrapSwitch.BootstrapSwitchOptions.prototype.readonly;
 /** @type {boolean} */
BootstrapSwitch.BootstrapSwitchOptions.prototype.indeterminate;
 /** @type {boolean} */
BootstrapSwitch.BootstrapSwitchOptions.prototype.invers;
 /** @type {boolean} */
BootstrapSwitch.BootstrapSwitchOptions.prototype.radioAllOff;
 /** @type {string} */
BootstrapSwitch.BootstrapSwitchOptions.prototype.onColor;
 /** @type {string} */
BootstrapSwitch.BootstrapSwitchOptions.prototype.offColor;
 /** @type {string} */
BootstrapSwitch.BootstrapSwitchOptions.prototype.onText;
 /** @type {string} */
BootstrapSwitch.BootstrapSwitchOptions.prototype.offText;
 /** @type {string} */
BootstrapSwitch.BootstrapSwitchOptions.prototype.labelText;
 /** @type {string} */
BootstrapSwitch.BootstrapSwitchOptions.prototype.handleWidth;
 /** @type {string} */
BootstrapSwitch.BootstrapSwitchOptions.prototype.labelWidth;
 /** @type {string} */
BootstrapSwitch.BootstrapSwitchOptions.prototype.baseClass;
 /** @type {string} */
BootstrapSwitch.BootstrapSwitchOptions.prototype.wrapperClass;
 /** @type {?} */
BootstrapSwitch.BootstrapSwitchOptions.prototype.onInit;
 /** @type {?} */
BootstrapSwitch.BootstrapSwitchOptions.prototype.onSwitchChange;
/**
 * @record
 * @struct
 */
BootstrapSwitch.Switch = function() {};

/**
 * @return {?<!HTMLElement>}
 */
BootstrapSwitch.Switch.prototype.toggleAnimate = function() {};

/**
 * @return {?<!HTMLElement>}
 */
BootstrapSwitch.Switch.prototype.toggleDisabled = function() {};

/**
 * @return {?<!HTMLElement>}
 */
BootstrapSwitch.Switch.prototype.toggleReadonly = function() {};

/**
 * @return {?<!HTMLElement>}
 */
BootstrapSwitch.Switch.prototype.toggleIndeterminate = function() {};

/**
 * @return {?<!HTMLElement>}
 */
BootstrapSwitch.Switch.prototype.toggleInverse = function() {};

/**
 * @return {?<!HTMLElement>}
 */
BootstrapSwitch.Switch.prototype.destroy = function() {};

/**
 * @param {?=} value
 * @param {boolean=} skip
 * @return {boolean|?<!HTMLElement>}
 */
BootstrapSwitch.Switch.prototype.state = function(value, skip) {};

/**
 * @param {boolean=} skip
 * @return {?<!HTMLElement>}
 */
BootstrapSwitch.Switch.prototype.toggleState = function(skip) {};

/**
 * @param {boolean=} state
 * @return {boolean|?<!HTMLElement>}
 */
BootstrapSwitch.Switch.prototype.radioAllOff = function(state) {};

/**
 * @param {string=} size
 * @return {string|?<!HTMLElement>}
 */
BootstrapSwitch.Switch.prototype.size = function(size) {};

/**
 * @param {boolean=} state
 * @return {boolean|?<!HTMLElement>}
 */
BootstrapSwitch.Switch.prototype.animate = function(state) {};

/**
 * @param {boolean=} state
 * @return {boolean|?<!HTMLElement>}
 */
BootstrapSwitch.Switch.prototype.disabled = function(state) {};

/**
 * @param {boolean=} state
 * @return {boolean|?<!HTMLElement>}
 */
BootstrapSwitch.Switch.prototype.readonly = function(state) {};

/**
 * @return {?<!HTMLElement>}
 */
BootstrapSwitch.Switch.prototype.toggleReadOnly = function() {};

/**
 * @param {string=} color
 * @return {string|?<!HTMLElement>}
 */
BootstrapSwitch.Switch.prototype.onColor = function(color) {};

/**
 * @param {string=} color
 * @return {string|?<!HTMLElement>}
 */
BootstrapSwitch.Switch.prototype.offColor = function(color) {};

/**
 * @param {string=} text
 * @return {string|?<!HTMLElement>}
 */
BootstrapSwitch.Switch.prototype.onText = function(text) {};

/**
 * @param {string=} text
 * @return {string|?<!HTMLElement>}
 */
BootstrapSwitch.Switch.prototype.offText = function(text) {};

/**
 * @param {string=} text
 * @return {string|?<!HTMLElement>}
 */
BootstrapSwitch.Switch.prototype.labelText = function(text) {};

/**
 * @param {string=} text
 * @return {string|?<!HTMLElement>}
 */
BootstrapSwitch.Switch.prototype.baseClass = function(text) {};

/**
 * @param {string=} text
 * @return {string|?<!HTMLElement>}
 */
BootstrapSwitch.Switch.prototype.wrapperClass = function(text) {};

/**
 * @param {!BootstrapSwitch.BootstrapSwitchOptions|string=} options_or_method
 * @param {?=} param_or_param1
 * @param {?=} param2
 * @return {?<!HTMLElement>|boolean|string}
 */
JQuery.prototype.bootstrapSwitch = function(options_or_method, param_or_param1, param2) {};

/**
 * @param {string} events
 * @param {string|function(!BootstrapSwitch.BootstrapSwitchEventObject): ?|function(!BootstrapSwitch.BootstrapSwitchChangeEventObject): ?=} selector_or_handler
 * @param {function(!BootstrapSwitch.BootstrapSwitchEventObject): ?|function(!BootstrapSwitch.BootstrapSwitchChangeEventObject): ?=} handler
 * @return {?<!HTMLElement>}
 */
JQuery.prototype.off = function(events, selector_or_handler, handler) {};

/**
 * @param {string} events
 * @param {string|function(!BootstrapSwitch.BootstrapSwitchEventObject): ?|function(!BootstrapSwitch.BootstrapSwitchChangeEventObject): ?=} selector_or_handler
 * @param {function(!BootstrapSwitch.BootstrapSwitchEventObject): ?|function(!BootstrapSwitch.BootstrapSwitchChangeEventObject): ?=} handler
 * @return {?<!HTMLElement>}
 */
JQuery.prototype.on = function(events, selector_or_handler, handler) {};
