/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/proj4leaflet/index.d.ts:

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */
/** @const */
L.Proj = {};

/**
 * @constructor
 * @struct
 * @param {!proj4.InterfaceProjection|string} projection_or_code
 * @param {!L.Proj.ProjCRSOptions|string=} options_or_proj4def
 * @param {!L.Proj.ProjCRSOptions=} options
 */
L.Proj.CRS = function(projection_or_code, options_or_proj4def, options) {};
 /** @type {?} */
L.Proj.CRS.prototype.projection;
 /** @type {!L.Transformation} */
L.Proj.CRS.prototype.transformation;
 /** @type {string} */
L.Proj.CRS.prototype.code;
 /** @type {!Array<?>} */
L.Proj.CRS.prototype.wrapLng;
 /** @type {!Array<?>} */
L.Proj.CRS.prototype.wrapLat;
 /** @type {boolean} */
L.Proj.CRS.prototype.infinite;

/**
 * @param {(!Array<?>|!L.LatLng|!L.LatLngLiteral)} latlng
 * @param {number} zoom
 * @return {!L.Point}
 */
L.Proj.CRS.prototype.latLngToPoint = function(latlng, zoom) {};

/**
 * @param {(!Array<?>|!L.Point)} point
 * @param {number} zoom
 * @return {!L.LatLng}
 */
L.Proj.CRS.prototype.pointToLatLng = function(point, zoom) {};

/**
 * @param {(!L.LatLng|!L.LatLngLiteral)} latlng
 * @return {!L.Point}
 */
L.Proj.CRS.prototype.project = function(latlng) {};

/**
 * @param {(!Array<?>|!L.Point)} point
 * @return {!L.LatLng}
 */
L.Proj.CRS.prototype.unproject = function(point) {};

/**
 * @param {number} zoom
 * @return {number}
 */
L.Proj.CRS.prototype.scale = function(zoom) {};

/**
 * @param {number} scale
 * @return {number}
 */
L.Proj.CRS.prototype.zoom = function(scale) {};

/**
 * @param {number} zoom
 * @return {!L.Bounds}
 */
L.Proj.CRS.prototype.getProjectedBounds = function(zoom) {};

/**
 * @param {(!Array<?>|!L.LatLng|!L.LatLngLiteral)} latlng1
 * @param {(!Array<?>|!L.LatLng|!L.LatLngLiteral)} latlng2
 * @return {number}
 */
L.Proj.CRS.prototype.distance = function(latlng1, latlng2) {};

/**
 * @param {(!L.LatLng|!L.LatLngLiteral)} latlng
 * @return {!L.LatLng}
 */
L.Proj.CRS.prototype.wrapLatLng = function(latlng) {};
/**
 * @extends {L.GeoJSON}
 * @constructor
 * @struct
 */
L.Proj.GeoJSON = function() {};
 /** @type {function(?, !L.GeoJSONOptions): !L.Proj.GeoJSON} */
L.Proj.geoJson;
/**
 * @extends {L.ImageOverlay}
 * @constructor
 * @struct
 */
L.Proj.ImageOverlay = function() {};
 /** @type {function(string, (!L.LatLngBounds|!Array<!Array<?>>), !L.ImageOverlayOptions): !L.Proj.ImageOverlay} */
L.Proj.imageOverlay;
/**
 * @record
 * @struct
 */
L.Proj.ProjCRSOptions = function() {};
 /** @type {!L.Bounds} */
L.Proj.ProjCRSOptions.prototype.bounds;
 /** @type {!Array<?>} */
L.Proj.ProjCRSOptions.prototype.origin;
 /** @type {!Array<number>} */
L.Proj.ProjCRSOptions.prototype.scales;
 /** @type {!Array<number>} */
L.Proj.ProjCRSOptions.prototype.resolutions;
 /** @type {!L.Transformation} */
L.Proj.ProjCRSOptions.prototype.transformation;

/* TODO: ExportAssignment in  */
