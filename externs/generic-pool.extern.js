/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/generic-pool/index.d.ts:

/* TODO: ImportDeclaration in  */
/**
 * @constructor
 * @struct
 */
function Pool() {}
 /** @type {number} */
Pool.prototype.spareResourceCapacity;
 /** @type {number} */
Pool.prototype.size;
 /** @type {number} */
Pool.prototype.available;
 /** @type {number} */
Pool.prototype.borrowed;
 /** @type {number} */
Pool.prototype.pending;
 /** @type {number} */
Pool.prototype.max;
 /** @type {number} */
Pool.prototype.min;

/**
 * @param {number=} priority
 * @return {!Promise<?>}
 */
Pool.prototype.acquire = function(priority) {};

/**
 * @param {?} resource
 * @return {void}
 */
Pool.prototype.release = function(resource) {};

/**
 * @param {?} resource
 * @return {void}
 */
Pool.prototype.destroy = function(resource) {};

/**
 * @return {!Promise<undefined>}
 */
Pool.prototype.drain = function() {};

/**
 * @return {!Promise<!Array<undefined>>}
 */
Pool.prototype.clear = function() {};
/**
 * @record
 * @struct
 */
function Factory() {}

/**
 * @return {!Promise<?>}
 */
Factory.prototype.create = function() {};

/**
 * @param {?} client
 * @return {!Promise<undefined>}
 */
Factory.prototype.destroy = function(client) {};

/**
 * @param {?} client
 * @return {!Promise<boolean>}
 */
Factory.prototype.validate = function(client) {};
/**
 * @record
 * @struct
 */
function Options() {}
 /** @type {number} */
Options.prototype.max;
 /** @type {number} */
Options.prototype.min;
 /** @type {number} */
Options.prototype.maxWaitingClients;
 /** @type {boolean} */
Options.prototype.testOnBorrow;
 /** @type {number} */
Options.prototype.acquireTimeoutMillis;
 /** @type {boolean} */
Options.prototype.fifo;
 /** @type {number} */
Options.prototype.priorityRange;
 /** @type {boolean} */
Options.prototype.autostart;
 /** @type {number} */
Options.prototype.evictionRunIntervalMillis;
 /** @type {number} */
Options.prototype.numTestsPerRun;
 /** @type {number} */
Options.prototype.softIdleTimeoutMillis;
 /** @type {number} */
Options.prototype.idleTimeoutMillis;

/**
 * @template T
 * @param {?} factory
 * @param {?=} opts
 * @return {?}
 */
function createPool(factory, opts) {}
