/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/react-tooltip/index.d.ts:

/* TODO: ImportDeclaration in  */
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
function ReactTooltip() {}
/**
 * @record
 * @struct
 */
ReactTooltip.Offset = function() {};
 /** @type {number} */
ReactTooltip.Offset.prototype.top;
 /** @type {number} */
ReactTooltip.Offset.prototype.right;
 /** @type {number} */
ReactTooltip.Offset.prototype.left;
 /** @type {number} */
ReactTooltip.Offset.prototype.bottom;

/** @typedef {string} */
ReactTooltip.ElementEvents;

/** @typedef {string} */
ReactTooltip.WindowEvents;

/** @typedef {function(): (string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)} */
ReactTooltip.GetContentCallback;

/** @typedef {(function(): (string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)|!Array<?>)} */
ReactTooltip.GetContent;
/**
 * @record
 * @struct
 */
ReactTooltip.Props = function() {};
 /** @type {string} */
ReactTooltip.Props.prototype.id;
 /** @type {string} */
ReactTooltip.Props.prototype.place;
 /** @type {string} */
ReactTooltip.Props.prototype.type;
 /** @type {string} */
ReactTooltip.Props.prototype.effect;
 /** @type {string} */
ReactTooltip.Props.prototype.event;
 /** @type {string} */
ReactTooltip.Props.prototype.eventOff;
 /** @type {string} */
ReactTooltip.Props.prototype.globalEventOff;
 /** @type {boolean} */
ReactTooltip.Props.prototype.isCapture;
 /** @type {!ReactTooltip.Offset} */
ReactTooltip.Props.prototype.offset;
 /** @type {boolean} */
ReactTooltip.Props.prototype.multiline;
 /** @type {string} */
ReactTooltip.Props.prototype.className;
 /** @type {boolean} */
ReactTooltip.Props.prototype.html;
 /** @type {number} */
ReactTooltip.Props.prototype.delayHide;
 /** @type {number} */
ReactTooltip.Props.prototype.delayShow;
 /** @type {boolean} */
ReactTooltip.Props.prototype.insecure;
 /** @type {boolean} */
ReactTooltip.Props.prototype.border;
 /** @type {(function(): (string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)|!Array<?>)} */
ReactTooltip.Props.prototype.getContent;
 /** @type {boolean} */
ReactTooltip.Props.prototype.disable;
 /** @type {boolean} */
ReactTooltip.Props.prototype.scrollHide;
 /** @type {boolean} */
ReactTooltip.Props.prototype.resizeHide;
 /** @type {string} */
ReactTooltip.Props.prototype.wrapper;
 /** @type {string} */
ReactTooltip.Props.prototype.role;
 /** @type {string} */
ReactTooltip.Props.prototype.class;
 /** @type {boolean} */
ReactTooltip.Props.prototype.watchWindow;

/**
 * @return {void}
 */
ReactTooltip.Props.prototype.afterShow = function() {};

/**
 * @return {void}
 */
ReactTooltip.Props.prototype.afterHide = function() {};

/* TODO: ExportAssignment in  */
