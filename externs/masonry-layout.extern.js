/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/masonry-layout/index.d.ts:

/* TODO: ExportAssignment in  */

/**
 * @constructor
 * @struct
 * @param {!Masonry.Options|string=} options_or_selector
 * @param {!Masonry.Options=} options
 */
function Masonry(options_or_selector, options) {}

/**
 * @param {string=} eventName
 * @param {?=} listener
 * @return {void}
 */
Masonry.prototype.masonry = function(eventName, listener) {};

/**
 * @return {void}
 */
Masonry.prototype.layout = function() {};

/**
 * @param {!Array<?>} items
 * @param {boolean=} isStill
 * @return {void}
 */
Masonry.prototype.layoutItems = function(items, isStill) {};

/**
 * @param {!Array<?>} elements
 * @return {void}
 */
Masonry.prototype.stamp = function(elements) {};

/**
 * @param {!Array<?>} elements
 * @return {void}
 */
Masonry.prototype.unstamp = function(elements) {};

/**
 * @param {!Array<?>} elements
 * @return {void}
 */
Masonry.prototype.appended = function(elements) {};

/**
 * @param {!Array<?>} elements
 * @return {void}
 */
Masonry.prototype.prepended = function(elements) {};

/**
 * @param {!Array<?>} elements
 * @return {void}
 */
Masonry.prototype.addItems = function(elements) {};

/**
 * @param {!Array<?>} elements
 * @return {void}
 */
Masonry.prototype.remove = function(elements) {};

/**
 * @param {string} eventName
 * @param {?} listener
 * @return {void}
 */
Masonry.prototype.on = function(eventName, listener) {};

/**
 * @param {string} eventName
 * @param {?} listener
 * @return {void}
 */
Masonry.prototype.off = function(eventName, listener) {};

/**
 * @param {string} eventName
 * @param {?} listener
 * @return {void}
 */
Masonry.prototype.once = function(eventName, listener) {};

/**
 * @return {void}
 */
Masonry.prototype.reloadItems = function() {};

/**
 * @return {void}
 */
Masonry.prototype.destroy = function() {};

/**
 * @return {!Array<?>}
 */
Masonry.prototype.getItemElements = function() {};

/**
 * @param {!Element} element
 * @return {!Masonry}
 */
Masonry.prototype.data = function(element) {};
/**
 * @record
 * @struct
 */
Masonry.Options = function() {};
 /** @type {string} */
Masonry.Options.prototype.itemSelector;
 /** @type {?} */
Masonry.Options.prototype.columnWidth;
 /** @type {boolean} */
Masonry.Options.prototype.percentPosition;
 /** @type {?} */
Masonry.Options.prototype.gutter;
 /** @type {string} */
Masonry.Options.prototype.stamp;
 /** @type {boolean} */
Masonry.Options.prototype.fitWidth;
 /** @type {boolean} */
Masonry.Options.prototype.originLeft;
 /** @type {boolean} */
Masonry.Options.prototype.originTop;
 /** @type {!Object} */
Masonry.Options.prototype.containerStyle;
 /** @type {?} */
Masonry.Options.prototype.transitionDuration;
 /** @type {boolean} */
Masonry.Options.prototype.resize;
 /** @type {boolean} */
Masonry.Options.prototype.initLayout;

/**
 * @param {!Masonry.Options=} options
 * @return {?<!HTMLElement>}
 */
JQuery.prototype.masonry = function(options) {};
