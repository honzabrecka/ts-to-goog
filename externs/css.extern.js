/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/css/index.d.ts:
/**
 * @record
 * @struct
 */
function ParserOptions() {}
 /** @type {boolean} */
ParserOptions.prototype.silent;
 /** @type {string} */
ParserOptions.prototype.source;
/**
 * @record
 * @struct
 */
function StringifyOptions() {}
 /** @type {string} */
StringifyOptions.prototype.indent;
 /** @type {boolean} */
StringifyOptions.prototype.compress;
 /** @type {string} */
StringifyOptions.prototype.sourcemap;
 /** @type {boolean} */
StringifyOptions.prototype.inputSourcemaps;
/**
 * @record
 * @struct
 */
function ParserError() {}
 /** @type {string} */
ParserError.prototype.message;
 /** @type {string} */
ParserError.prototype.reason;
 /** @type {string} */
ParserError.prototype.filename;
 /** @type {number} */
ParserError.prototype.line;
 /** @type {number} */
ParserError.prototype.column;
 /** @type {string} */
ParserError.prototype.source;
/**
 * @record
 * @struct
 */
function Position() {}
 /** @type {number} */
Position.prototype.line;
 /** @type {number} */
Position.prototype.column;
/**
 * @record
 * @struct
 */
function Node() {}
 /** @type {string} */
Node.prototype.type;
 /** @type {?} */
Node.prototype.parent;
 /** @type {?} */
Node.prototype.position;
/**
 * @extends {Node}
 * @record
 * @struct
 */
function Rule() {}
 /** @type {!Array<string>} */
Rule.prototype.selectors;
 /** @type {!Array<?>} */
Rule.prototype.declarations;
/**
 * @extends {Node}
 * @record
 * @struct
 */
function Declaration() {}
 /** @type {string} */
Declaration.prototype.property;
 /** @type {string} */
Declaration.prototype.value;
/**
 * @extends {Node}
 * @record
 * @struct
 */
function Comment() {}
 /** @type {string} */
Comment.prototype.comment;
/**
 * @record
 * @struct
 */
function Charset() {}
 /** @type {string} */
Charset.prototype.charset;
/**
 * @record
 * @struct
 */
function CustomMedia() {}
 /** @type {string} */
CustomMedia.prototype.name;
 /** @type {string} */
CustomMedia.prototype.media;
/**
 * @record
 * @struct
 */
function Document() {}
 /** @type {string} */
Document.prototype.document;
 /** @type {string} */
Document.prototype.vendor;
 /** @type {!Array<?>} */
Document.prototype.rules;
/**
 * @record
 * @struct
 */
function FontFace() {}
 /** @type {!Array<?>} */
FontFace.prototype.declarations;
/**
 * @record
 * @struct
 */
function Host() {}
 /** @type {!Array<?>} */
Host.prototype.rules;
/**
 * @record
 * @struct
 */
function Import() {}
 /** @type {string} */
Import.prototype.import;
/**
 * @record
 * @struct
 */
function KeyFrames() {}
 /** @type {string} */
KeyFrames.prototype.name;
 /** @type {string} */
KeyFrames.prototype.vendor;
 /** @type {!Array<?>} */
KeyFrames.prototype.keyframes;
/**
 * @record
 * @struct
 */
function KeyFrame() {}
 /** @type {!Array<string>} */
KeyFrame.prototype.values;
 /** @type {!Array<?>} */
KeyFrame.prototype.declarations;
/**
 * @record
 * @struct
 */
function Media() {}
 /** @type {string} */
Media.prototype.media;
 /** @type {!Array<?>} */
Media.prototype.rules;
/**
 * @record
 * @struct
 */
function Namespace() {}
 /** @type {string} */
Namespace.prototype.namespace;
/**
 * @record
 * @struct
 */
function Page() {}
 /** @type {!Array<string>} */
Page.prototype.selectors;
 /** @type {!Array<?>} */
Page.prototype.declarations;
/**
 * @record
 * @struct
 */
function Supports() {}
 /** @type {string} */
Supports.prototype.supports;
 /** @type {!Array<?>} */
Supports.prototype.rules;

/** @typedef {?} */
var AtRule;
/**
 * @extends {Node}
 * @record
 * @struct
 */
function Stylesheet() {}
 /** @type {?} */
Stylesheet.prototype.stylesheet;

/**
 * Accepts a CSS string and returns an AST object.
 * 
 * @param {string} code
 * @param {?=} options
 * @return {?}
 */
function parse(code, options) {}

/**
 * Accepts an AST object (as css.parse produces) and returns a CSS string.
 * 
 * @param {?} stylesheet
 * @param {?=} options
 * @return {string}
 */
function stringify(stylesheet, options) {}
