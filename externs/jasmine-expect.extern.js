/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/jasmine-expect/index.d.ts:

/**
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeArray = function() {};

/**
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeArrayOfBooleans = function() {};

/**
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeArrayOfNumbers = function() {};

/**
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeArrayOfObjects = function() {};

/**
 * @param {number} size
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeArrayOfSize = function(size) {};

/**
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeArrayOfStrings = function() {};

/**
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeEmptyArray = function() {};

/**
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeNonEmptyArray = function() {};

/**
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeBoolean = function() {};

/**
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeFalse = function() {};

/**
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeTrue = function() {};

/**
 * @param {!Date} date
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeAfter = function(date) {};

/**
 * @param {!Date} date
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeBefore = function(date) {};

/**
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeDate = function() {};

/**
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeValidDate = function() {};

/**
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeFunction = function() {};

/**
 * @return {boolean}
 */
jasmine.Matchers.prototype.toThrowAnyError = function() {};

/**
 * @param {string} constructorName
 * @return {boolean}
 */
jasmine.Matchers.prototype.toThrowErrorOfType = function(constructorName) {};

/**
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeCalculable = function() {};

/**
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeEvenNumber = function() {};

/**
 * @param {number} number
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeGreaterThanOrEqualTo = function(number) {};

/**
 * @param {number} number
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeLessThanOrEqualTo = function(number) {};

/**
 * @param {number} number
 * @param {number} epsilon
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeNear = function(number, epsilon) {};

/**
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeNumber = function() {};

/**
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeOddNumber = function() {};

/**
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeWholeNumber = function() {};

/**
 * @param {number} floor
 * @param {number} ceiling
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeWithinRange = function(floor, ceiling) {};

/**
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeEmptyString = function() {};

/**
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeHtmlString = function() {};

/**
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeIso8601 = function() {};

/**
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeJsonString = function() {};

/**
 * @param {string} string
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeLongerThan = function(string) {};

/**
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeNonEmptyString = function() {};

/**
 * @param {string} string
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeSameLengthAs = function(string) {};

/**
 * @param {string} string
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeShorterThan = function(string) {};

/**
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeString = function() {};

/**
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeWhitespace = function() {};

/**
 * @param {string} string
 * @return {boolean}
 */
jasmine.Matchers.prototype.toEndWith = function(string) {};

/**
 * @param {string} string
 * @return {boolean}
 */
jasmine.Matchers.prototype.toStartWith = function(string) {};

/**
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeEmptyObject = function() {};

/**
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeNonEmptyObject = function() {};

/**
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeObject = function() {};

/**
 * @return {boolean}
 */
jasmine.Matchers.prototype.toBeRegExp = function() {};

/**
 * @param {string} memberName
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveArray = function(memberName) {};

/**
 * @param {string} memberName
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveArrayOfBooleans = function(memberName) {};

/**
 * @param {string} memberName
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveArrayOfNumbers = function(memberName) {};

/**
 * @param {string} memberName
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveArrayOfObjects = function(memberName) {};

/**
 * @param {string} memberName
 * @param {number} size
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveArrayOfSize = function(memberName, size) {};

/**
 * @param {string} memberName
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveArrayOfStrings = function(memberName) {};

/**
 * @param {string} memberName
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveBoolean = function(memberName) {};

/**
 * @param {string} memberName
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveCalculable = function(memberName) {};

/**
 * @param {string} memberName
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveDate = function(memberName) {};

/**
 * @param {string} memberName
 * @param {!Date} date
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveDateAfter = function(memberName, date) {};

/**
 * @param {string} memberName
 * @param {!Date} date
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveDateBefore = function(memberName, date) {};

/**
 * @param {string} memberName
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveEmptyArray = function(memberName) {};

/**
 * @param {string} memberName
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveEmptyObject = function(memberName) {};

/**
 * @param {string} memberName
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveEmptyString = function(memberName) {};

/**
 * @param {string} memberName
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveEvenNumber = function(memberName) {};

/**
 * @param {string} memberName
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveFalse = function(memberName) {};

/**
 * @param {string} memberName
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveHtmlString = function(memberName) {};

/**
 * @param {string} memberName
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveIso8601 = function(memberName) {};

/**
 * @param {string} memberName
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveJsonString = function(memberName) {};

/**
 * @param {string} memberName
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveMember = function(memberName) {};

/**
 * @param {string} memberName
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveMethod = function(memberName) {};

/**
 * @param {string} memberName
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveNonEmptyArray = function(memberName) {};

/**
 * @param {string} memberName
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveNonEmptyObject = function(memberName) {};

/**
 * @param {string} memberName
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveNonEmptyString = function(memberName) {};

/**
 * @param {string} memberName
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveNumber = function(memberName) {};

/**
 * @param {string} memberName
 * @param {number} floor
 * @param {number} ceiling
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveNumberWithinRange = function(memberName, floor, ceiling) {};

/**
 * @param {string} memberName
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveObject = function(memberName) {};

/**
 * @param {string} memberName
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveOddNumber = function(memberName) {};

/**
 * @param {string} memberName
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveString = function(memberName) {};

/**
 * @param {string} memberName
 * @param {string} string
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveStringLongerThan = function(memberName, string) {};

/**
 * @param {string} memberName
 * @param {string} string
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveStringSameLengthAs = function(memberName, string) {};

/**
 * @param {string} memberName
 * @param {string} string
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveStringShorterThan = function(memberName, string) {};

/**
 * @param {string} memberName
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveTrue = function(memberName) {};

/**
 * @param {string} memberName
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveUndefined = function(memberName) {};

/**
 * @param {string} memberName
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveWhitespaceString = function(memberName) {};

/**
 * @param {string} memberName
 * @return {boolean}
 */
jasmine.Matchers.prototype.toHaveWholeNumber = function(memberName) {};
/**
 * @record
 * @struct
 */
jasmine.AssymetricMatchers = function() {};

/**
 * @return {boolean}
 */
jasmine.AssymetricMatchers.prototype.arrayOfBooleans = function() {};

/**
 * @return {boolean}
 */
jasmine.AssymetricMatchers.prototype.arrayOfNumbers = function() {};

/**
 * @return {boolean}
 */
jasmine.AssymetricMatchers.prototype.arrayOfObjects = function() {};

/**
 * @param {number} number
 * @return {boolean}
 */
jasmine.AssymetricMatchers.prototype.arrayOfSize = function(number) {};

/**
 * @return {boolean}
 */
jasmine.AssymetricMatchers.prototype.arrayOfStrings = function() {};

/**
 * @return {boolean}
 */
jasmine.AssymetricMatchers.prototype.emptyArray = function() {};

/**
 * @return {boolean}
 */
jasmine.AssymetricMatchers.prototype.nonEmptyArray = function() {};

/**
 * @param {!Date} date
 * @return {boolean}
 */
jasmine.AssymetricMatchers.prototype.after = function(date) {};

/**
 * @param {!Date} date
 * @return {boolean}
 */
jasmine.AssymetricMatchers.prototype.before = function(date) {};

/**
 * @return {boolean}
 */
jasmine.AssymetricMatchers.prototype.calculable = function() {};

/**
 * @return {boolean}
 */
jasmine.AssymetricMatchers.prototype.evenNumber = function() {};

/**
 * @param {number} number
 * @return {boolean}
 */
jasmine.AssymetricMatchers.prototype.greaterThanOrEqualTo = function(number) {};

/**
 * @param {number} number
 * @return {boolean}
 */
jasmine.AssymetricMatchers.prototype.lessThanOrEqualTo = function(number) {};

/**
 * @return {boolean}
 */
jasmine.AssymetricMatchers.prototype.oddNumber = function() {};

/**
 * @return {boolean}
 */
jasmine.AssymetricMatchers.prototype.wholeNumber = function() {};

/**
 * @param {number} floor
 * @param {number} ceiling
 * @return {boolean}
 */
jasmine.AssymetricMatchers.prototype.withinRange = function(floor, ceiling) {};

/**
 * @param {string} string
 * @return {boolean}
 */
jasmine.AssymetricMatchers.prototype.endingWith = function(string) {};

/**
 * @return {boolean}
 */
jasmine.AssymetricMatchers.prototype.iso8601 = function() {};

/**
 * @return {boolean}
 */
jasmine.AssymetricMatchers.prototype.jsonString = function() {};

/**
 * @param {string} string
 * @return {boolean}
 */
jasmine.AssymetricMatchers.prototype.longerThan = function(string) {};

/**
 * @param {string} string
 * @return {boolean}
 */
jasmine.AssymetricMatchers.prototype.nonEmptyString = function(string) {};

/**
 * @param {string} string
 * @return {boolean}
 */
jasmine.AssymetricMatchers.prototype.sameLengthAs = function(string) {};

/**
 * @param {string} string
 * @return {boolean}
 */
jasmine.AssymetricMatchers.prototype.shorterThan = function(string) {};

/**
 * @param {string} string
 * @return {boolean}
 */
jasmine.AssymetricMatchers.prototype.startingWith = function(string) {};

/**
 * @return {boolean}
 */
jasmine.AssymetricMatchers.prototype.whitespace = function() {};

/**
 * @return {boolean}
 */
jasmine.AssymetricMatchers.prototype.emptyObject = function() {};

/**
 * @return {boolean}
 */
jasmine.AssymetricMatchers.prototype.nonEmptyObject = function() {};

/**
 * @return {boolean}
 */
jasmine.AssymetricMatchers.prototype.regExp = function() {};
 /** @type {!jasmine.AssymetricMatchers} */
var any;
