/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/rsmq/index.d.ts:
/** @const */
var RedisSMQ = {};
/**
 * @record
 * @struct
 */
RedisSMQ.CallbackT = function() {};

/* TODO: CallSignature: RedisSMQ */
/**
 * @record
 * @struct
 */
RedisSMQ.Client = function() {};

/**
 * @param {!RedisSMQ.QueueOptions} options
 * @param {!RedisSMQ.CallbackT<number>} cb
 * @return {void}
 */
RedisSMQ.Client.prototype.createQueue = function(options, cb) {};

/**
 * @param {!RedisSMQ.VisibilityOptions} options
 * @param {!RedisSMQ.CallbackT<number>} cb
 * @return {void}
 */
RedisSMQ.Client.prototype.changeMessageVisibility = function(options, cb) {};

/**
 * @param {!RedisSMQ.MessageIdentifier} options
 * @param {!RedisSMQ.CallbackT<number>} cb
 * @return {void}
 */
RedisSMQ.Client.prototype.deleteMessage = function(options, cb) {};

/**
 * @param {!RedisSMQ.QueueIdentifier} options
 * @param {!RedisSMQ.CallbackT<number>} cb
 * @return {void}
 */
RedisSMQ.Client.prototype.deleteQueue = function(options, cb) {};

/**
 * @param {!RedisSMQ.QueueIdentifier} options
 * @param {!RedisSMQ.CallbackT<!RedisSMQ.QueueAttributes>} cb
 * @return {void}
 */
RedisSMQ.Client.prototype.getQueueAttributes = function(options, cb) {};

/**
 * @param {!RedisSMQ.CallbackT<!Array<string>>} cb
 * @return {void}
 */
RedisSMQ.Client.prototype.listQueues = function(cb) {};

/**
 * @param {!RedisSMQ.ReceiveOptions} options
 * @param {!RedisSMQ.CallbackT<!RedisSMQ.Message>} cb
 * @return {void}
 */
RedisSMQ.Client.prototype.receiveMessage = function(options, cb) {};

/**
 * @param {!RedisSMQ.NewMessage} options
 * @param {!RedisSMQ.CallbackT<string>} cb
 * @return {void}
 */
RedisSMQ.Client.prototype.sendMessage = function(options, cb) {};

/**
 * @param {!RedisSMQ.QueueOptions} options
 * @param {!RedisSMQ.CallbackT<!RedisSMQ.QueueAttributes>} cb
 * @return {void}
 */
RedisSMQ.Client.prototype.setQueueAttributes = function(options, cb) {};

/**
 * @return {void}
 */
RedisSMQ.Client.prototype.quit = function() {};
/**
 * @record
 * @struct
 */
RedisSMQ.QueueIdentifier = function() {};
 /** @type {string} */
RedisSMQ.QueueIdentifier.prototype.qname;
/**
 * @extends {RedisSMQ.QueueIdentifier}
 * @record
 * @struct
 */
RedisSMQ.QueueOptions = function() {};
 /** @type {number} */
RedisSMQ.QueueOptions.prototype.vt;
 /** @type {number} */
RedisSMQ.QueueOptions.prototype.delay;
 /** @type {number} */
RedisSMQ.QueueOptions.prototype.maxsize;
/**
 * @extends {RedisSMQ.QueueIdentifier}
 * @record
 * @struct
 */
RedisSMQ.MessageIdentifier = function() {};
 /** @type {string} */
RedisSMQ.MessageIdentifier.prototype.id;
/**
 * @extends {RedisSMQ.MessageIdentifier}
 * @record
 * @struct
 */
RedisSMQ.VisibilityOptions = function() {};
 /** @type {number} */
RedisSMQ.VisibilityOptions.prototype.vt;
/**
 * @extends {RedisSMQ.QueueIdentifier}
 * @record
 * @struct
 */
RedisSMQ.QueueAttributes = function() {};
 /** @type {number} */
RedisSMQ.QueueAttributes.prototype.vt;
 /** @type {number} */
RedisSMQ.QueueAttributes.prototype.delay;
 /** @type {number} */
RedisSMQ.QueueAttributes.prototype.maxsize;
 /** @type {number} */
RedisSMQ.QueueAttributes.prototype.totalrecv;
 /** @type {number} */
RedisSMQ.QueueAttributes.prototype.totalsent;
 /** @type {number} */
RedisSMQ.QueueAttributes.prototype.created;
 /** @type {number} */
RedisSMQ.QueueAttributes.prototype.modified;
 /** @type {number} */
RedisSMQ.QueueAttributes.prototype.msgs;
 /** @type {number} */
RedisSMQ.QueueAttributes.prototype.hiddenmsgs;
/**
 * @extends {RedisSMQ.QueueIdentifier}
 * @record
 * @struct
 */
RedisSMQ.ReceiveOptions = function() {};
 /** @type {number} */
RedisSMQ.ReceiveOptions.prototype.vt;
/**
 * @extends {RedisSMQ.MessageIdentifier}
 * @record
 * @struct
 */
RedisSMQ.Message = function() {};
 /** @type {string} */
RedisSMQ.Message.prototype.message;
 /** @type {number} */
RedisSMQ.Message.prototype.sent;
 /** @type {number} */
RedisSMQ.Message.prototype.fr;
 /** @type {number} */
RedisSMQ.Message.prototype.rc;
/**
 * @extends {RedisSMQ.QueueIdentifier}
 * @record
 * @struct
 */
RedisSMQ.NewMessage = function() {};
 /** @type {string} */
RedisSMQ.NewMessage.prototype.message;
 /** @type {number} */
RedisSMQ.NewMessage.prototype.delay;

/* TODO: ImportEqualsDeclaration in  */
/**
 * @record
 * @struct
 */
function RedisSMQStatic() {}

/* TODO: ConstructSignature:  */
/**
 * @extends {RedisSMQ.Client}
 * @record
 * @struct
 */
function Client() {}
 /** @type {?} */
Client.prototype.redis;
/**
 * @record
 * @struct
 */
function ClientOptions() {}
 /** @type {string} */
ClientOptions.prototype.host;
 /** @type {number} */
ClientOptions.prototype.port;
 /** @type {?} */
ClientOptions.prototype.options;
 /** @type {?} */
ClientOptions.prototype.client;
 /** @type {string} */
ClientOptions.prototype.ns;
 /** @type {?} */
var RedisSMQ;

/* TODO: ExportAssignment in  */
