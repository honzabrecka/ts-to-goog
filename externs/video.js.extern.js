/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/video.js/index.d.ts:

/**
 * @param {?} id
 * @param {!videojs.PlayerOptions=} options
 * @param {function(): void=} ready
 * @return {!videojs.Player}
 */
function videojs(id, options, ready) {}

/* TODO: ExportAssignment in  */

/* TODO: NamespaceExportDeclaration in  */
/**
 * @record
 * @struct
 */
videojs.PlayerOptions = function() {};
 /** @type {!Array<string>} */
videojs.PlayerOptions.prototype.techOrder;
 /** @type {?} */
videojs.PlayerOptions.prototype.html5;
 /** @type {number} */
videojs.PlayerOptions.prototype.width;
 /** @type {number} */
videojs.PlayerOptions.prototype.height;
 /** @type {number} */
videojs.PlayerOptions.prototype.defaultVolume;
 /** @type {!Array<string>} */
videojs.PlayerOptions.prototype.children;
 /** @type {boolean} */
videojs.PlayerOptions.prototype.controls;
 /** @type {string} */
videojs.PlayerOptions.prototype.src;
 /** @type {boolean} */
videojs.PlayerOptions.prototype.autoplay;
 /** @type {string} */
videojs.PlayerOptions.prototype.preload;
/**
 * @record
 * @struct
 */
videojs.Source = function() {};
 /** @type {string} */
videojs.Source.prototype.type;
 /** @type {string} */
videojs.Source.prototype.src;
/**
 * @record
 * @struct
 */
videojs.Player = function() {};

/**
 * @return {!videojs.Player}
 */
videojs.Player.prototype.play = function() {};

/**
 * @return {!videojs.Player}
 */
videojs.Player.prototype.pause = function() {};

/**
 * @return {boolean}
 */
videojs.Player.prototype.paused = function() {};

/**
 * @param {(string|!videojs.Source|!Array<!videojs.Source>)} newSource
 * @return {!videojs.Player}
 */
videojs.Player.prototype.src = function(newSource) {};

/**
 * @param {number=} seconds
 * @return {!videojs.Player|number}
 */
videojs.Player.prototype.currentTime = function(seconds) {};

/**
 * @return {number}
 */
videojs.Player.prototype.duration = function() {};

/**
 * @return {!TimeRanges}
 */
videojs.Player.prototype.buffered = function() {};

/**
 * @return {number}
 */
videojs.Player.prototype.bufferedPercent = function() {};

/**
 * @param {number=} percentAsDecimal
 * @return {!TimeRanges|number}
 */
videojs.Player.prototype.volume = function(percentAsDecimal) {};

/**
 * @param {number=} pixels
 * @return {number|!videojs.Player}
 */
videojs.Player.prototype.width = function(pixels) {};

/**
 * @param {number=} pixels
 * @return {number|!videojs.Player}
 */
videojs.Player.prototype.height = function(pixels) {};

/**
 * @param {number} width
 * @param {number} height
 * @return {!videojs.Player}
 */
videojs.Player.prototype.size = function(width, height) {};

/**
 * @return {!videojs.Player}
 */
videojs.Player.prototype.requestFullScreen = function() {};

/**
 * @return {!videojs.Player}
 */
videojs.Player.prototype.cancelFullScreen = function() {};

/**
 * @param {function(): void} callback
 * @return {!videojs.Player}
 */
videojs.Player.prototype.ready = function(callback) {};

/**
 * @param {string} eventName
 * @param {function(!Event): void} callback
 * @return {void}
 */
videojs.Player.prototype.on = function(eventName, callback) {};

/**
 * @param {string=} eventName
 * @param {function(!Event): void=} callback
 * @return {void}
 */
videojs.Player.prototype.off = function(eventName, callback) {};

/**
 * @return {void}
 */
videojs.Player.prototype.dispose = function() {};

/**
 * @param {!Object} options
 * @return {!HTMLTrackElement}
 */
videojs.Player.prototype.addRemoteTextTrack = function(options) {};

/**
 * @param {!HTMLTrackElement} track
 * @return {void}
 */
videojs.Player.prototype.removeRemoteTextTrack = function(track) {};

/**
 * @param {string=} val
 * @return {(string|!videojs.Player)}
 */
videojs.Player.prototype.poster = function(val) {};

/**
 * @param {number=} rate
 * @return {number}
 */
videojs.Player.prototype.playbackRate = function(rate) {};
