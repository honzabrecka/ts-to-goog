/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/tooltipster/index.d.ts:
/** @const */
var JQueryTooltipster = {};
/**
 * @record
 * @struct
 */
JQueryTooltipster.ITooltipsterOptions = function() {};
 /** @type {string} */
JQueryTooltipster.ITooltipsterOptions.prototype.animation;
 /** @type {boolean} */
JQueryTooltipster.ITooltipsterOptions.prototype.arrow;
 /** @type {string} */
JQueryTooltipster.ITooltipsterOptions.prototype.arrowColor;
 /** @type {boolean} */
JQueryTooltipster.ITooltipsterOptions.prototype.autoClose;
 /** @type {string} */
JQueryTooltipster.ITooltipsterOptions.prototype.content;
 /** @type {boolean} */
JQueryTooltipster.ITooltipsterOptions.prototype.contentAsHTML;
 /** @type {boolean} */
JQueryTooltipster.ITooltipsterOptions.prototype.contentCloning;
 /** @type {boolean} */
JQueryTooltipster.ITooltipsterOptions.prototype.debug;
 /** @type {number} */
JQueryTooltipster.ITooltipsterOptions.prototype.delay;
 /** @type {number} */
JQueryTooltipster.ITooltipsterOptions.prototype.minWidth;
 /** @type {number} */
JQueryTooltipster.ITooltipsterOptions.prototype.maxWidth;
 /** @type {function(?<!HTMLElement>, string): void} */
JQueryTooltipster.ITooltipsterOptions.prototype.functionInit;
 /** @type {function(?<!HTMLElement>, function(): void): void} */
JQueryTooltipster.ITooltipsterOptions.prototype.functionBefore;
 /** @type {function(?<!HTMLElement>, ?<!HTMLElement>): void} */
JQueryTooltipster.ITooltipsterOptions.prototype.functionReady;
 /** @type {function(?<!HTMLElement>): void} */
JQueryTooltipster.ITooltipsterOptions.prototype.functionAfter;
 /** @type {boolean} */
JQueryTooltipster.ITooltipsterOptions.prototype.hideOnClick;
 /** @type {(string|?<!HTMLElement>)} */
JQueryTooltipster.ITooltipsterOptions.prototype.icon;
 /** @type {boolean} */
JQueryTooltipster.ITooltipsterOptions.prototype.iconCloning;
 /** @type {boolean} */
JQueryTooltipster.ITooltipsterOptions.prototype.iconDesktop;
 /** @type {string} */
JQueryTooltipster.ITooltipsterOptions.prototype.iconTheme;
 /** @type {boolean} */
JQueryTooltipster.ITooltipsterOptions.prototype.iconTouch;
 /** @type {boolean} */
JQueryTooltipster.ITooltipsterOptions.prototype.interactive;
 /** @type {number} */
JQueryTooltipster.ITooltipsterOptions.prototype.interactiveTolerance;
 /** @type {boolean} */
JQueryTooltipster.ITooltipsterOptions.prototype.multiple;
 /** @type {number} */
JQueryTooltipster.ITooltipsterOptions.prototype.offsetX;
 /** @type {number} */
JQueryTooltipster.ITooltipsterOptions.prototype.offsetY;
 /** @type {boolean} */
JQueryTooltipster.ITooltipsterOptions.prototype.onlyOne;
 /** @type {string} */
JQueryTooltipster.ITooltipsterOptions.prototype.position;
 /** @type {boolean} */
JQueryTooltipster.ITooltipsterOptions.prototype.positionTracker;
 /** @type {!Function} */
JQueryTooltipster.ITooltipsterOptions.prototype.positionTrackerCallback;
 /** @type {string} */
JQueryTooltipster.ITooltipsterOptions.prototype.restoration;
 /** @type {number} */
JQueryTooltipster.ITooltipsterOptions.prototype.speed;
 /** @type {number} */
JQueryTooltipster.ITooltipsterOptions.prototype.timer;
 /** @type {string} */
JQueryTooltipster.ITooltipsterOptions.prototype.theme;
 /** @type {boolean} */
JQueryTooltipster.ITooltipsterOptions.prototype.touchDevices;
 /** @type {string} */
JQueryTooltipster.ITooltipsterOptions.prototype.trigger;
 /** @type {boolean} */
JQueryTooltipster.ITooltipsterOptions.prototype.updateAnimation;
/**
 * @record
 * @struct
 */
JQueryTooltipster.ITooltipsterInstance = function() {};

/**
 * Updates the content of the tooltip.
 * @param {string} value
 * @return {?<!HTMLElement>}
 */
JQueryTooltipster.ITooltipsterInstance.prototype.content = function(value) {};

/**
 * Shows the tooltip.
 * @return {void}
 */
JQueryTooltipster.ITooltipsterInstance.prototype.show = function() {};

/**
 * Hides the tooltip (this will aslo causo it to be removed from the DOM, not simply hides it), however leaving the listeners.
 * @return {void}
 */
JQueryTooltipster.ITooltipsterInstance.prototype.hide = function() {};

/**
 * Disables the tooltip, causing it to not show unless its re-enabled.
 * @return {void}
 */
JQueryTooltipster.ITooltipsterInstance.prototype.disable = function() {};

/**
 * Enables the tooltip.
 * @return {void}
 */
JQueryTooltipster.ITooltipsterInstance.prototype.enable = function() {};

/**
 * Destroy the tooltip and its listeners.
 * @return {void}
 */
JQueryTooltipster.ITooltipsterInstance.prototype.destroy = function() {};

/**
 * Reposition and resize the tooltip.
 * @return {void}
 */
JQueryTooltipster.ITooltipsterInstance.prototype.reposition = function() {};

/**
 * Returns the root element of the tooltip.
 * @return {?<!HTMLElement>}
 */
JQueryTooltipster.ITooltipsterInstance.prototype.elementTooltip = function() {};

/**
 * Returns the root element of the icon if there is one, otherwise 'undefined'.
 * @return {?<!HTMLElement>}
 */
JQueryTooltipster.ITooltipsterInstance.prototype.elementIcon = function() {};

/**
 * @param {!JQueryTooltipster.ITooltipsterOptions=} options
 * @return {(?<!HTMLElement>|!Array<!JQueryTooltipster.ITooltipsterInstance>)}
 */
JQuery.prototype.tooltipster = function(options) {};
