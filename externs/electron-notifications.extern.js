/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/electron-notifications/index.d.ts:

/* TODO: ImportDeclaration in  */
/** @const */
var ElectronNotifications = {};
/**
 * @record
 * @struct
 */
ElectronNotifications.NotifierOptions = function() {};
 /** @type {string} */
ElectronNotifications.NotifierOptions.prototype.message;
 /** @type {string} */
ElectronNotifications.NotifierOptions.prototype.icon;
 /** @type {!Array<string>} */
ElectronNotifications.NotifierOptions.prototype.buttons;
/**
 * @extends {Electron.BrowserWindow}
 * @constructor
 * @struct
 */
ElectronNotifications.NotificationWindow = function() {};

/**
 * When the notification was clicked, but not dragged. This usually does the default action, or closes the notification.
 * When the notification has been swiped to the right. This usually indiciated the user wants to dismiss the notification.
 * When any one of the buttons are clicked, it will trigger a buttonClicked event, and pass the text that was clicked to the handler.
 * @param {string} event
 * @param {!Function|function(string): void} listener
 * @return {NotificationWindow}
 */
ElectronNotifications.NotificationWindow.prototype.on = function(event, listener) {};

/**
 * A node module for sending notifications in electron applications
 * @param {string} title
 * @param {!ElectronNotifications.NotifierOptions=} data
 * @return {!ElectronNotifications.NotificationWindow}
 */
ElectronNotifications.notify = function(title, data) {};

/* TODO: ExportAssignment in  */
