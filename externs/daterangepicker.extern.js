/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/daterangepicker/index.d.ts:

/* TODO: ImportEqualsDeclaration in  */

/**
 * @param {!daterangepicker.Settings=} settings
 * @param {function((string|!Date|!moment.Moment), (string|!Date|!moment.Moment), string): ?=} callback
 * @return {?<!HTMLElement>}
 */
JQuery.prototype.daterangepicker = function(settings, callback) {};
 /** @type {!daterangepicker.DateRangePicker} */
var daterangepicker;

/** @typedef {function((string|!Date|!moment.Moment), (string|!Date|!moment.Moment), string): ?} */
daterangepicker.DataRangePickerCallback;
/**
 * @record
 * @struct
 */
daterangepicker.DateRangePicker = function() {};

/* TODO: ConstructSignature: daterangepicker */
 /** @type {!moment.Moment} */
daterangepicker.DateRangePicker.prototype.startDate;
 /** @type {!moment.Moment} */
daterangepicker.DateRangePicker.prototype.endDate;

/**
 * @param {(string|!Date|!moment.Moment)} date
 * @return {void}
 */
daterangepicker.DateRangePicker.prototype.setStartDate = function(date) {};

/**
 * @param {(string|!Date|!moment.Moment)} date
 * @return {void}
 */
daterangepicker.DateRangePicker.prototype.setEndDate = function(date) {};

/**
 * @return {void}
 */
daterangepicker.DateRangePicker.prototype.remove = function() {};
/**
 * @extends {JQueryEventObject}
 * @record
 * @struct
 */
daterangepicker.DatepickerEventObject = function() {};
 /** @type {!Date} */
daterangepicker.DatepickerEventObject.prototype.date;

/**
 * @param {string=} format
 * @return {string}
 */
daterangepicker.DatepickerEventObject.prototype.format = function(format) {};
/**
 * @record
 * @struct
 */
daterangepicker.Settings = function() {};
 /** @type {(string|!Date|!moment.Moment)} */
daterangepicker.Settings.prototype.startDate;
 /** @type {(string|!Date|!moment.Moment)} */
daterangepicker.Settings.prototype.endDate;
 /** @type {(string|!Date|!moment.Moment)} */
daterangepicker.Settings.prototype.minDate;
 /** @type {(string|!Date|!moment.Moment)} */
daterangepicker.Settings.prototype.maxDate;
 /** @type {?} */
daterangepicker.Settings.prototype.dateLimit;
 /** @type {boolean} */
daterangepicker.Settings.prototype.showDropdowns;
 /** @type {boolean} */
daterangepicker.Settings.prototype.showWeekNumbers;
 /** @type {boolean} */
daterangepicker.Settings.prototype.showISOWeekNumbers;
 /** @type {boolean} */
daterangepicker.Settings.prototype.timePicker;
 /** @type {number} */
daterangepicker.Settings.prototype.timePickerIncrement;
 /** @type {boolean} */
daterangepicker.Settings.prototype.timePicker24Hour;
 /** @type {boolean} */
daterangepicker.Settings.prototype.timePickerSeconds;
 /** @type {?} */
daterangepicker.Settings.prototype.ranges;
 /** @type {string} */
daterangepicker.Settings.prototype.opens;
 /** @type {string} */
daterangepicker.Settings.prototype.drops;
 /** @type {!Array<string>} */
daterangepicker.Settings.prototype.buttonClasses;
 /** @type {string} */
daterangepicker.Settings.prototype.applyClass;
 /** @type {string} */
daterangepicker.Settings.prototype.cancelClass;
 /** @type {!daterangepicker.Locale} */
daterangepicker.Settings.prototype.locale;
 /** @type {boolean} */
daterangepicker.Settings.prototype.singleDatePicker;
 /** @type {boolean} */
daterangepicker.Settings.prototype.autoApply;
 /** @type {boolean} */
daterangepicker.Settings.prototype.linkedCalendars;
 /** @type {string} */
daterangepicker.Settings.prototype.parentEl;
 /** @type {boolean} */
daterangepicker.Settings.prototype.autoUpdateInput;
 /** @type {boolean} */
daterangepicker.Settings.prototype.alwaysShowCalendars;
 /** @type {boolean} */
daterangepicker.Settings.prototype.showCustomRangeLabel;

/**
 * A function that is passed each date in the two calendars before they are displayed, and may return true or false to indicate whether that date should be available for selection or not.
 * @param {(string|!Date|!moment.Moment)} startDate
 * @param {(string|!Date|!moment.Moment)=} endDate
 * @return {boolean}
 */
daterangepicker.Settings.prototype.isInvalidDate = function(startDate, endDate) {};
/**
 * @record
 * @struct
 */
daterangepicker.Locale = function() {};
 /** @type {string} */
daterangepicker.Locale.prototype.cancelLabel;
 /** @type {string} */
daterangepicker.Locale.prototype.applyLabel;
 /** @type {string} */
daterangepicker.Locale.prototype.fromLabel;
 /** @type {string} */
daterangepicker.Locale.prototype.toLabel;
 /** @type {string} */
daterangepicker.Locale.prototype.format;
 /** @type {string} */
daterangepicker.Locale.prototype.separator;
 /** @type {string} */
daterangepicker.Locale.prototype.weekLabel;
 /** @type {string} */
daterangepicker.Locale.prototype.customRangeLabel;
 /** @type {number} */
daterangepicker.Locale.prototype.firstDay;
 /** @type {!Array<string>} */
daterangepicker.Locale.prototype.daysOfWeek;
 /** @type {!Array<string>} */
daterangepicker.Locale.prototype.monthNames;

/* TODO: ExportAssignment in  */

/* TODO: NamespaceExportDeclaration in  */
