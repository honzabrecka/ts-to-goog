/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/terminal-menu/index.d.ts:
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "terminal-menu"
/** @const */
tsickle_declare_module.terminal_menu = {};

/* TODO: ImportDeclaration in tsickle_declare_module.terminal_menu */

/**
 * Creates a TerminalMenu with default settings.
 * Creates a TerminalMenu using options to override default settings.
 * @param {!MenuContainerFactory.TerminalMenuOptions=} options Override values for available settings.
 * @return {!MenuContainerFactory.TerminalMenu}
 */
tsickle_declare_module.terminal_menu.MenuContainerFactory = function(options) {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.terminal_menu.MenuContainerFactory.Thickness = function() {};
 /** @type {number} */
tsickle_declare_module.terminal_menu.MenuContainerFactory.Thickness.prototype.left;
 /** @type {number} */
tsickle_declare_module.terminal_menu.MenuContainerFactory.Thickness.prototype.right;
 /** @type {number} */
tsickle_declare_module.terminal_menu.MenuContainerFactory.Thickness.prototype.top;
 /** @type {number} */
tsickle_declare_module.terminal_menu.MenuContainerFactory.Thickness.prototype.bottom;
/**
 * @record
 * @struct
 */
tsickle_declare_module.terminal_menu.MenuContainerFactory.TerminalMenuOptions = function() {};
 /** @type {number} */
tsickle_declare_module.terminal_menu.MenuContainerFactory.TerminalMenuOptions.prototype.width;
 /** @type {number} */
tsickle_declare_module.terminal_menu.MenuContainerFactory.TerminalMenuOptions.prototype.x;
 /** @type {number} */
tsickle_declare_module.terminal_menu.MenuContainerFactory.TerminalMenuOptions.prototype.y;
 /** @type {string} */
tsickle_declare_module.terminal_menu.MenuContainerFactory.TerminalMenuOptions.prototype.fg;
 /** @type {string} */
tsickle_declare_module.terminal_menu.MenuContainerFactory.TerminalMenuOptions.prototype.bg;
 /** @type {(number|!MenuContainerFactory.Thickness)} */
tsickle_declare_module.terminal_menu.MenuContainerFactory.TerminalMenuOptions.prototype.padding;
 /** @type {number} */
tsickle_declare_module.terminal_menu.MenuContainerFactory.TerminalMenuOptions.prototype.selected;
/**
 * @record
 * @struct
 */
tsickle_declare_module.terminal_menu.MenuContainerFactory.TerminalMenu = function() {};

/**
 * Create a new selectable menu item with label as the anchor.
 * Create a new selectable menu item with label as the anchor.
 * @param {string} label Label to use as the menu item anchor.
 * @param {function(string, number): void=} callback Callback to invoke when the menu item is selected.
 * @return {void}
 */
tsickle_declare_module.terminal_menu.MenuContainerFactory.TerminalMenu.prototype.add = function(label, callback) {};

/**
 * Writes a message to the terminal.
 * @param {string} msg Message to be written.
 * @return {void}
 */
tsickle_declare_module.terminal_menu.MenuContainerFactory.TerminalMenu.prototype.write = function(msg) {};

/**
 * Return a duplex stream to wire up input and output.
 * @return {!internal.Duplex}
 */
tsickle_declare_module.terminal_menu.MenuContainerFactory.TerminalMenu.prototype.createStream = function() {};

/**
 * Reset the terminal, clearing all content.
 * @return {void}
 */
tsickle_declare_module.terminal_menu.MenuContainerFactory.TerminalMenu.prototype.reset = function() {};

/**
 * Unregister all listeners and puts the terminal back to its original state.
 * @return {void}
 */
tsickle_declare_module.terminal_menu.MenuContainerFactory.TerminalMenu.prototype.close = function() {};

/**
 * When a menu item is selected, this event is fired.
 * When a menu item is selected, this event is fired.
 * This overload ensures backward compatibility with older versions of NodeJS (< 6.0)
 * @param {(string|symbol)|string} eventName Name of the event. Only value available for eventName is "select"
 * @param {function(string, number): void} callback Handler for the event specified by eventName
 * @return {TerminalMenu}
 */
tsickle_declare_module.terminal_menu.MenuContainerFactory.TerminalMenu.prototype.on = function(eventName, callback) {};

/* TODO: ExportAssignment in tsickle_declare_module.terminal_menu */
