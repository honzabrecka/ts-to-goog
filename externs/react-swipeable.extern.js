/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/react-swipeable/index.d.ts:

/* TODO: ImportDeclaration in  */
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
function ReactSwipeable() {}

/** @typedef {function(!React.TouchEvent<!HTMLElement>, number, number, number, number, number): void} */
ReactSwipeable.OnSwipingCallback;

/** @typedef {function(!React.TouchEvent<!HTMLElement>, number, number, boolean, number): void} */
ReactSwipeable.OnSwipedCallback;

/** @typedef {function(!React.TouchEvent<!HTMLElement>, number, boolean): void} */
ReactSwipeable.OnSwipedDirectionCallback;

/** @typedef {function(!React.TouchEvent<!HTMLElement>, number): void} */
ReactSwipeable.OnSwipingDirectionCallback;

/** @typedef {function(!React.TouchEvent<!HTMLElement>): void} */
ReactSwipeable.OnTapCallback;
/**
 * @extends {React.ClassAttributes}
 * @extends {React.HTMLAttributes}
 * @record
 * @struct
 */
ReactSwipeable.SwipeableProps = function() {};
 /** @type {function(!React.TouchEvent<!HTMLElement>, number, number, boolean, number): void} */
ReactSwipeable.SwipeableProps.prototype.onSwiped;
 /** @type {function(!React.TouchEvent<!HTMLElement>, number, number, number, number, number): void} */
ReactSwipeable.SwipeableProps.prototype.onSwiping;
 /** @type {function(!React.TouchEvent<!HTMLElement>, number): void} */
ReactSwipeable.SwipeableProps.prototype.onSwipingUp;
 /** @type {function(!React.TouchEvent<!HTMLElement>, number): void} */
ReactSwipeable.SwipeableProps.prototype.onSwipingRight;
 /** @type {function(!React.TouchEvent<!HTMLElement>, number): void} */
ReactSwipeable.SwipeableProps.prototype.onSwipingDown;
 /** @type {function(!React.TouchEvent<!HTMLElement>, number): void} */
ReactSwipeable.SwipeableProps.prototype.onSwipingLeft;
 /** @type {function(!React.TouchEvent<!HTMLElement>, number, boolean): void} */
ReactSwipeable.SwipeableProps.prototype.onSwipedUp;
 /** @type {function(!React.TouchEvent<!HTMLElement>, number, boolean): void} */
ReactSwipeable.SwipeableProps.prototype.onSwipedRight;
 /** @type {function(!React.TouchEvent<!HTMLElement>, number, boolean): void} */
ReactSwipeable.SwipeableProps.prototype.onSwipedDown;
 /** @type {function(!React.TouchEvent<!HTMLElement>, number, boolean): void} */
ReactSwipeable.SwipeableProps.prototype.onSwipedLeft;
 /** @type {function(!React.TouchEvent<!HTMLElement>): void} */
ReactSwipeable.SwipeableProps.prototype.onTap;
 /** @type {number} */
ReactSwipeable.SwipeableProps.prototype.flickThreshold;
 /** @type {number} */
ReactSwipeable.SwipeableProps.prototype.delta;
 /** @type {boolean} */
ReactSwipeable.SwipeableProps.prototype.preventDefaultTouchmoveEvent;
 /** @type {boolean} */
ReactSwipeable.SwipeableProps.prototype.stopPropagation;
 /** @type {string} */
ReactSwipeable.SwipeableProps.prototype.nodeName;
 /** @type {boolean} */
ReactSwipeable.SwipeableProps.prototype.trackMouse;
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)} */
ReactSwipeable.SwipeableProps.prototype.children;

/* TODO: ExportAssignment in  */
