/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/vertx3-eventbus-client/index.d.ts:
/** @const */
var EventBus = {};
/**
 * @record
 * @struct
 */
EventBus.EventBusStatic = function() {};

/* TODO: ConstructSignature: EventBus */
/**
 * @record
 * @struct
 */
EventBus.EventBus = function() {};
 /** @type {string} */
EventBus.EventBus.prototype.url;
 /** @type {?} */
EventBus.EventBus.prototype.options;

/**
 * @return {?}
 */
EventBus.EventBus.prototype.onopen = function() {};

/**
 * @param {!Error} error
 * @return {?}
 */
EventBus.EventBus.prototype.onerror = function(error) {};

/**
 * @return {?}
 */
EventBus.EventBus.prototype.onclose = function() {};

/**
 * @param {string} address
 * @param {?} headers
 * @param {function(!Error, ?): ?} callback
 * @return {?}
 */
EventBus.EventBus.prototype.registerHandler = function(address, headers, callback) {};

/**
 * @param {string} address
 * @param {?} headers
 * @param {function(!Error, ?): ?} callback
 * @return {?}
 */
EventBus.EventBus.prototype.unregisterHandler = function(address, headers, callback) {};

/**
 * @param {string} address
 * @param {?} message
 * @param {?} headers
 * @param {function(!Error, ?): ?=} callback
 * @return {?}
 */
EventBus.EventBus.prototype.send = function(address, message, headers, callback) {};

/**
 * @param {string} address
 * @param {?} message
 * @param {?=} headers
 * @return {?}
 */
EventBus.EventBus.prototype.publish = function(address, message, headers) {};

/**
 * @return {?}
 */
EventBus.EventBus.prototype.close = function() {};
 /** @type {!EventBus.EventBusStatic} */
var EventBus;

/* TODO: ExportAssignment in  */
