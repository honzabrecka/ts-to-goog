/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/env-to-object/index.d.ts:
/** @const */
var env = {};
/**
 * @record
 * @struct
 */
env.Mappings = function() {};

/* TODO: IndexSignature: env */

/** @typedef {(!env.IntegerMapping|!env.GenericMapping|!env.BooleanMapping)} */
env.Mapping;
/**
 * @record
 * @struct
 */
env.GenericMapping = function() {};
 /** @type {string} */
env.GenericMapping.prototype.keypath;
 /** @type {string} */
env.GenericMapping.prototype.type;

/* TODO: IndexSignature: env */
/**
 * @extends {env.GenericMapping}
 * @record
 * @struct
 */
env.IntegerMapping = function() {};
 /** @type {string} */
env.IntegerMapping.prototype.type;
 /** @type {number} */
env.IntegerMapping.prototype.radix;
/**
 * @record
 * @struct
 */
env.BooleanMapping = function() {};
 /** @type {string} */
env.BooleanMapping.prototype.type;
 /** @type {boolean} */
env.BooleanMapping.prototype.strict;
/**
 * @record
 * @struct
 */
env.Parsers = function() {};

/* TODO: IndexSignature: env */
/**
 * @record
 * @struct
 */
env.Options = function() {};
 /** @type {!env.Parsers} */
env.Options.prototype.parsers;

/**
 * @param {!env.Mappings} map
 * @param {!env.Options=} options
 * @return {?}
 */
function env(map, options) {}

/* TODO: ExportAssignment in  */
