/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/slate-irc/index.d.ts:

/* TODO: ImportDeclaration in  */

/**
 * @param {?} socket
 * @return {!IRC.Client}
 */
function IRC(socket) {}
/**
 * @record
 * @struct
 */
IRC.DataEvent = function() {};
 /** @type {string} */
IRC.DataEvent.prototype.prefix;
 /** @type {string} */
IRC.DataEvent.prototype.command;
 /** @type {string} */
IRC.DataEvent.prototype.params;
 /** @type {string} */
IRC.DataEvent.prototype.trailing;
 /** @type {string} */
IRC.DataEvent.prototype.string;
/**
 * @record
 * @struct
 */
IRC.MOTDEvent = function() {};
 /** @type {!Array<string>} */
IRC.MOTDEvent.prototype.motd;
/**
 * @record
 * @struct
 */
IRC.TopicEvent = function() {};
 /** @type {string} */
IRC.TopicEvent.prototype.nick;
 /** @type {string} */
IRC.TopicEvent.prototype.hostmask;
 /** @type {string} */
IRC.TopicEvent.prototype.channel;
 /** @type {string} */
IRC.TopicEvent.prototype.topic;
/**
 * @record
 * @struct
 */
IRC.MessageEvent = function() {};
 /** @type {string} */
IRC.MessageEvent.prototype.from;
 /** @type {string} */
IRC.MessageEvent.prototype.hostmask;
 /** @type {string} */
IRC.MessageEvent.prototype.to;
 /** @type {string} */
IRC.MessageEvent.prototype.message;
/**
 * @record
 * @struct
 */
IRC.JoinEvent = function() {};
 /** @type {string} */
IRC.JoinEvent.prototype.nick;
 /** @type {string} */
IRC.JoinEvent.prototype.hostmask;
 /** @type {string} */
IRC.JoinEvent.prototype.channel;
/**
 * @record
 * @struct
 */
IRC.PartEvent = function() {};
 /** @type {string} */
IRC.PartEvent.prototype.nick;
 /** @type {string} */
IRC.PartEvent.prototype.hostmask;
 /** @type {!Array<string>} */
IRC.PartEvent.prototype.channels;
/**
 * @record
 * @struct
 */
IRC.NickEvent = function() {};
 /** @type {string} */
IRC.NickEvent.prototype.nick;
 /** @type {string} */
IRC.NickEvent.prototype.hostmask;
 /** @type {string} */
IRC.NickEvent.prototype.new;
/**
 * @record
 * @struct
 */
IRC.ModeEvent = function() {};
 /** @type {string} */
IRC.ModeEvent.prototype.nick;
 /** @type {string} */
IRC.ModeEvent.prototype.target;
 /** @type {string} */
IRC.ModeEvent.prototype.mode;
 /** @type {string} */
IRC.ModeEvent.prototype.client;
/**
 * @record
 * @struct
 */
IRC.AwayEvent = function() {};
 /** @type {string} */
IRC.AwayEvent.prototype.nick;
 /** @type {string} */
IRC.AwayEvent.prototype.message;
/**
 * @record
 * @struct
 */
IRC.QuitEvent = function() {};
 /** @type {string} */
IRC.QuitEvent.prototype.nick;
 /** @type {string} */
IRC.QuitEvent.prototype.hostmask;
 /** @type {string} */
IRC.QuitEvent.prototype.message;
/**
 * @constructor
 * @struct
 */
IRC.Client = function() {};
 /** @type {string} */
IRC.Client.prototype.me;

/**
 * @param {string} str
 * @return {void}
 */
IRC.Client.prototype.write = function(str) {};

/**
 * @param {string} pass
 * @return {void}
 */
IRC.Client.prototype.pass = function(pass) {};

/**
 * @param {string} nick
 * @return {void}
 */
IRC.Client.prototype.nick = function(nick) {};

/**
 * @param {string} username
 * @param {string} realname
 * @return {void}
 */
IRC.Client.prototype.user = function(username, realname) {};

/**
 * @param {string} name
 * @param {string} channel
 * @return {void}
 */
IRC.Client.prototype.invite = function(name, channel) {};

/**
 * @param {string} target
 * @param {string} msg
 * @return {void}
 */
IRC.Client.prototype.send = function(target, msg) {};

/**
 * @param {string} target
 * @param {string} msg
 * @return {void}
 */
IRC.Client.prototype.action = function(target, msg) {};

/**
 * @param {string} target
 * @param {string} msg
 * @return {void}
 */
IRC.Client.prototype.notice = function(target, msg) {};

/**
 * @param {string} target
 * @param {string} msg
 * @return {void}
 */
IRC.Client.prototype.ctcp = function(target, msg) {};

/**
 * @param {string} channel
 * @param {string=} key
 * @return {void}
 */
IRC.Client.prototype.join = function(channel, key) {};

/**
 * @param {string} channel
 * @param {string=} msg
 * @return {void}
 */
IRC.Client.prototype.part = function(channel, msg) {};

/**
 * @param {string} channel
 * @param {function(!Error, !Array<{name: string, mode: string}>): void} callback
 * @return {void}
 */
IRC.Client.prototype.names = function(channel, callback) {};

/**
 * @param {string} message
 * @return {void}
 */
IRC.Client.prototype.away = function(message) {};

/**
 * @param {string} channel
 * @param {string} topic
 * @return {void}
 */
IRC.Client.prototype.topic = function(channel, topic) {};

/**
 * @param {(string|!Array<string>)} channels
 * @param {(string|!Array<string>)} nicks
 * @param {string} msg
 * @return {void}
 */
IRC.Client.prototype.kick = function(channels, nicks, msg) {};

/**
 * @param {string} name
 * @param {string} password
 * @return {void}
 */
IRC.Client.prototype.oper = function(name, password) {};

/**
 * @param {string} target
 * @param {string} flags
 * @param {string} params
 * @return {void}
 */
IRC.Client.prototype.mode = function(target, flags, params) {};

/**
 * @param {string} msg
 * @return {void}
 */
IRC.Client.prototype.quit = function(msg) {};

/**
 * @param {string} target
 * @param {string} mask
 * @param {!Function} callback
 * @return {void}
 */
IRC.Client.prototype.whois = function(target, mask, callback) {};

/**
 * @param {string} event
 * @param {!Function|function(!IRC.DataEvent): void|function(string): void|function(!IRC.MessageEvent): void|function(!IRC.MOTDEvent): void|function(!IRC.TopicEvent): void|function(!IRC.JoinEvent): void|function(!IRC.PartEvent): void|function(!IRC.NickEvent): void|function(!IRC.ModeEvent): void|function(!IRC.AwayEvent): void|function(!IRC.QuitEvent): void} callback
 * @return {void}
 */
IRC.Client.prototype.on = function(event, callback) {};

/* TODO: ExportAssignment in  */
