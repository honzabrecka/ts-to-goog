/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/globalize-compiler/index.d.ts:

/* TODO: ImportDeclaration in  */
/**
 * @record
 * @struct
 */
function CompileTemplateOptions() {}
 /** @type {string} */
CompileTemplateOptions.prototype.code;
 /** @type {!Array<string>} */
CompileTemplateOptions.prototype.dependencies;
/**
 * @record
 * @struct
 */
function CompileOptions() {}
 /** @type {?} */
CompileOptions.prototype.template;
/**
 * @record
 * @struct
 */
function FormatterOrParserFunction() {}

/* TODO: CallSignature:  */
/**
 * @record
 * @struct
 */
function ExtractFunction() {}

/* TODO: CallSignature:  */
/**
 * @extends {CompileOptions}
 * @record
 * @struct
 */
function CompileExtractsAttributes() {}
 /** @type {?} */
CompileExtractsAttributes.prototype.extracts;
 /** @type {string} */
CompileExtractsAttributes.prototype.defaultLocale;
 /** @type {(!Object|?)} */
CompileExtractsAttributes.prototype.cldr;
 /** @type {(!Object|?)} */
CompileExtractsAttributes.prototype.messages;

/**
 * Generates a JavaScript bundle containing the specified globalize formatters and parsers.
 * 
 * 
 * @param {(!Array<?>|?)} formattersAndParsers
 * @param {?=} options
 * @return {string} a String with the generated JavaScript bundle (UMD wrapped) including the compiled formatters and
 *  parsers.
 */
function compile(formattersAndParsers, options) {}

/**
 * Creates an extract function from a source file.
 * 
 * 
 * @param {(string|?)} input
 * @return {?} an extract. An extract is a Function taking one argument: Globalize, the Globalize Object;
 *  and returning an Array with the formatters and parsers created using the passed Globalize.
 */
function extract(input) {}

/**
 * Generates a JavaScript bundle containing the specified globalize formatters and parsers.
 * 
 * 
 * @param {?} attributes
 * @return {string} a String with the generated JavaScript bundle (UMD wrapped) including the compiled formatters and
 *  parsers.
 */
function compileExtracts(attributes) {}
