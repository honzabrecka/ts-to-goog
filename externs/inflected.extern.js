/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/inflected/index.d.ts:
/** @const */
var Options = {};
/**
 * @record
 * @struct
 */
Options.Humanize = function() {};
 /** @type {boolean} */
Options.Humanize.prototype.capitalize;
/**
 * @record
 * @struct
 */
Options.Transliterate = function() {};
 /** @type {string} */
Options.Transliterate.prototype.locale;
 /** @type {string} */
Options.Transliterate.prototype.replacement;
/**
 * @record
 * @struct
 */
Options.Parameterize = function() {};
 /** @type {string} */
Options.Parameterize.prototype.separator;
/**
 * @record
 * @struct
 */
function Inflected() {}

/**
 * @param {string} word
 * @param {string=} locale
 * @return {string}
 */
Inflected.prototype.pluralize = function(word, locale) {};

/**
 * @param {string} word
 * @param {string=} locale
 * @return {string}
 */
Inflected.prototype.singularize = function(word, locale) {};

/**
 * @param {string} term
 * @param {boolean=} uppercaseFirstLetter
 * @return {string}
 */
Inflected.prototype.camelize = function(term, uppercaseFirstLetter) {};

/**
 * @param {string} camelCaseWord
 * @return {string}
 */
Inflected.prototype.underscore = function(camelCaseWord) {};

/**
 * @param {string} lowerCaseAndUnderscoredWord
 * @param {!Options.Humanize=} options
 * @return {string}
 */
Inflected.prototype.humanize = function(lowerCaseAndUnderscoredWord, options) {};

/**
 * @param {string} sentence
 * @return {string}
 */
Inflected.prototype.titleize = function(sentence) {};

/**
 * @param {string} className
 * @return {string}
 */
Inflected.prototype.tableize = function(className) {};

/**
 * @param {string} tableName
 * @return {string}
 */
Inflected.prototype.classify = function(tableName) {};

/**
 * @param {string} underscoredWord
 * @return {string}
 */
Inflected.prototype.dasherize = function(underscoredWord) {};

/**
 * @param {string} className
 * @param {boolean=} separateClassNameAndIdWithUnderscore
 * @return {string}
 */
Inflected.prototype.foreignKey = function(className, separateClassNameAndIdWithUnderscore) {};

/**
 * @param {number} number
 * @return {string}
 */
Inflected.prototype.ordinal = function(number) {};

/**
 * @param {number} number
 * @return {string}
 */
Inflected.prototype.ordinalize = function(number) {};

/**
 * @param {string} sentence
 * @param {!Options.Transliterate=} options
 * @return {string}
 */
Inflected.prototype.transliterate = function(sentence, options) {};

/**
 * @param {string} sentence
 * @param {!Options.Parameterize=} options
 * @return {string}
 */
Inflected.prototype.parameterize = function(sentence, options) {};
 /** @type {?} */
var Inflector;

/* TODO: ExportAssignment in  */
