/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/redux-optimistic-ui/index.d.ts:
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "redux-optimistic-ui"
/** @const */
tsickle_declare_module.redux_optimistic_ui = {};

/* TODO: ImportDeclaration in tsickle_declare_module.redux_optimistic_ui */
/**
 * @record
 * @struct
 */
tsickle_declare_module.redux_optimistic_ui.OptimisticState = function() {};
 /** @type {?} */
tsickle_declare_module.redux_optimistic_ui.OptimisticState.prototype.history;
 /** @type {TState} */
tsickle_declare_module.redux_optimistic_ui.OptimisticState.prototype.beforeState;
 /** @type {TState} */
tsickle_declare_module.redux_optimistic_ui.OptimisticState.prototype.current;

/**
 * Enhances and wraps your root reducer into optimistic state
 * @template TState
 * @param {?} reducer
 * @return {?}
 */
tsickle_declare_module.redux_optimistic_ui.optimistic = function(reducer) {};

/**
 * Returns your current state or state if it wasn't enhanced yet
 * @template TState
 * @param {(TState|!OptimisticState<TState>)} state
 * @return {TState}
 */
tsickle_declare_module.redux_optimistic_ui.ensureState = function(state) {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.redux_optimistic_ui.OptimisticAction = function() {};
 /** @type {{optimistic: {type: string, id: number}}} */
tsickle_declare_module.redux_optimistic_ui.OptimisticAction.prototype.meta;
 /** @type {string} */
tsickle_declare_module.redux_optimistic_ui.BEGIN;
 /** @type {string} */
tsickle_declare_module.redux_optimistic_ui.COMMIT;
 /** @type {string} */
tsickle_declare_module.redux_optimistic_ui.REVERT;
