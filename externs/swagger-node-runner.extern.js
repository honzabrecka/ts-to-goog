/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/swagger-node-runner/index.d.ts:

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */
/**
 * @record
 * @struct
 */
function Config() {}
 /** @type {string} */
Config.prototype.appRoot;
 /** @type {boolean} */
Config.prototype.mockMode;
 /** @type {boolean} */
Config.prototype.validateResponse;
 /** @type {string} */
Config.prototype.configDir;
 /** @type {!Array<string>} */
Config.prototype.controllersDirs;
 /** @type {!Array<string>} */
Config.prototype.mockControllersDirs;
 /** @type {!Array<string>} */
Config.prototype.fittingsDirs;
 /** @type {?} */
Config.prototype.swaggerSecurityHandlers;
 /** @type {?} */
Config.prototype.bagpipes;
 /** @type {string} */
Config.prototype.defaultPipe;
 /** @type {string} */
Config.prototype.swaggerControllerPipe;
/**
 * @record
 * @struct
 */
function ConfigInternal() {}
 /** @type {?} */
ConfigInternal.prototype.swagger;

/** @typedef {?} */
var SwaggerToolsMiddleware;

/** @typedef {?} */
var SwaggerToolsSecurityHandler;
/**
 * @record
 * @struct
 */
function SwaggerSecurityHandlers() {}

/* TODO: IndexSignature:  */
/**
 * @record
 * @struct
 */
function Runner() {}
 /** @type {?} */
Runner.prototype.config;
 /** @type {?} */
Runner.prototype.swagger;
 /** @type {?} */
Runner.prototype.swaggerTools;
 /** @type {?} */
Runner.prototype.swaggerSecurityHandlers;
 /** @type {?} */
Runner.prototype.bagpipes;

/**
 * Resolves path (relative to `config.appRoot`)
 * @param {...?} to
 * @return {string}
 */
Runner.prototype.resolveAppPath = function(to) {};

/**
 * @return {?}
 */
Runner.prototype.defaultErrorHandler = function() {};

/**
 * Fetch a _bagpipe_ pipe
 * @param {?} req
 * @return {?}
 */
Runner.prototype.getPipe = function(req) {};

/**
 * Create new Connect middleware
 * @return {?}
 */
Runner.prototype.connectMiddleware = function() {};

/**
 * Create new Express middleware
 * @return {?}
 */
Runner.prototype.expressMiddleware = function() {};

/**
 * Create new Restify middleware
 * @return {?}
 */
Runner.prototype.restifyMiddleware = function() {};

/**
 * Create new Sails middleware
 * @return {?}
 */
Runner.prototype.sailsMiddleware = function() {};

/**
 * Create new Hapi middleware
 * @return {?}
 */
Runner.prototype.hapiMiddleware = function() {};
/**
 * @record
 * @struct
 */
function Middleware() {}
 /** @type {?} */
Middleware.prototype.runner;
/**
 * @extends {Middleware}
 * @record
 * @struct
 */
function ConnectMiddleware() {}

/**
 * @return {?}
 */
ConnectMiddleware.prototype.middleware = function() {};

/**
 * Register this Middleware with `app`
 * @param {!Express.Application} app
 * @return {void}
 */
ConnectMiddleware.prototype.register = function(app) {};
/**
 * @extends {ConnectMiddleware}
 * @record
 * @struct
 */
function ExpressMiddleware() {}
/**
 * @extends {Middleware}
 * @record
 * @struct
 */
function SailsMiddleware() {}

/**
 * Express style middleware
 * @return {?}
 */
SailsMiddleware.prototype.chain = function() {};
/**
 * @extends {Middleware}
 * @record
 * @struct
 */
function HapiMiddleware() {}
 /** @type {?} */
HapiMiddleware.prototype.config;
 /** @type {?} */
HapiMiddleware.prototype.plugin;
/**
 * @extends {Middleware}
 * @record
 * @struct
 */
function RestifyMiddleware() {}

/**
 * Register this Middleware with `app`
 * @param {?} app
 * @return {void}
 */
RestifyMiddleware.prototype.register = function(app) {};

/**
 * Create new SwaggerNodeRunner Instance
 * 
 * SwaggerNode config priority:
 *   1. `swagger_**` environment vars
 *   2. `config` passed to `create()`
 *   3. read from swagger node in `default.yaml` in config directory
 *   4. defaults
 * 
 * @param {?} config
 * @param {?} cb
 * @return {void}
 */
function create(config, cb) {}
