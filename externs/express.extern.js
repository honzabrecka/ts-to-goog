/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/express/index.d.ts:

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/**
 * Creates an Express application. The express() function is a top-level function exported by the express module.
 * @return {?}
 */
function e() {}
 /** @type {function(string, !serveStatic.ServeStaticOptions): ?} */
e.static;

/**
 * @param {!e.RouterOptions=} options
 * @return {?}
 */
e.Router = function(options) {};
/**
 * @record
 * @struct
 */
e.RouterOptions = function() {};
 /** @type {boolean} */
e.RouterOptions.prototype.caseSensitive;
 /** @type {boolean} */
e.RouterOptions.prototype.mergeParams;
 /** @type {boolean} */
e.RouterOptions.prototype.strict;
/**
 * @extends {Application}
 * @record
 * @struct
 */
e.Application = function() {};
/**
 * @extends {CookieOptions}
 * @record
 * @struct
 */
e.CookieOptions = function() {};
/**
 * @extends {Errback}
 * @record
 * @struct
 */
e.Errback = function() {};
/**
 * @extends {ErrorRequestHandler}
 * @record
 * @struct
 */
e.ErrorRequestHandler = function() {};
/**
 * @extends {Express}
 * @record
 * @struct
 */
e.Express = function() {};
/**
 * @extends {Handler}
 * @record
 * @struct
 */
e.Handler = function() {};
/**
 * @extends {IRoute}
 * @record
 * @struct
 */
e.IRoute = function() {};
/**
 * @extends {IRouter}
 * @record
 * @struct
 */
e.IRouter = function() {};
/**
 * @extends {IRouterHandler}
 * @record
 * @struct
 */
e.IRouterHandler = function() {};
/**
 * @extends {IRouterMatcher}
 * @record
 * @struct
 */
e.IRouterMatcher = function() {};
/**
 * @extends {MediaType}
 * @record
 * @struct
 */
e.MediaType = function() {};
/**
 * @extends {NextFunction}
 * @record
 * @struct
 */
e.NextFunction = function() {};
/**
 * @extends {Request}
 * @record
 * @struct
 */
e.Request = function() {};
/**
 * @extends {RequestHandler}
 * @record
 * @struct
 */
e.RequestHandler = function() {};
/**
 * @extends {RequestParamHandler}
 * @record
 * @struct
 */
e.RequestParamHandler = function() {};
/**
 * @extends {Response}
 * @record
 * @struct
 */
e.Response = function() {};
/**
 * @extends {Send}
 * @record
 * @struct
 */
e.Send = function() {};

/* TODO: ExportAssignment in  */
