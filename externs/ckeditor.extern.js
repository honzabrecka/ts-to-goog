/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/ckeditor/index.d.ts:
 /** @type {string} */
Window.prototype.CKEDITOR_BASEPATH;
/** @const */
var CKEDITOR = {};
 /** @type {boolean} */
CKEDITOR.disableAutoInline;
 /** @type {boolean} */
CKEDITOR.disableObjectResizing;
 /** @type {string} */
CKEDITOR.replaceClass;
 /** @type {string} */
CKEDITOR.skinName;
 /** @type {number} */
CKEDITOR.ALT;
 /** @type {number} */
CKEDITOR.CTRL;
 /** @type {number} */
CKEDITOR.DIALOG_RESIZE_BOTH;
 /** @type {number} */
CKEDITOR.DIALOG_RESIZE_HEIGHT;
 /** @type {number} */
CKEDITOR.DIALOG_RESIZE_NONE;
 /** @type {number} */
CKEDITOR.DIALOG_RESIZE_WIDTH;
 /** @type {number} */
CKEDITOR.ELEMENT_MODE_APPENDTO;
 /** @type {number} */
CKEDITOR.ELEMENT_MODE_INLINE;
 /** @type {number} */
CKEDITOR.ELEMENT_MODE_NONE;
 /** @type {number} */
CKEDITOR.ELEMENT_MODE_REPLACE;
 /** @type {number} */
CKEDITOR.END;
 /** @type {number} */
CKEDITOR.ENTER_BR;
 /** @type {number} */
CKEDITOR.ENTER_P;
 /** @type {number} */
CKEDITOR.EVENT_PHASE_AT_TARGET;
 /** @type {number} */
CKEDITOR.EVENT_PHASE_BUBBLING;
 /** @type {number} */
CKEDITOR.EVENT_PHASE_CAPTURING;
 /** @type {number} */
CKEDITOR.LINEUTILS_AFTER;
 /** @type {number} */
CKEDITOR.LINEUTILS_BEFORE;
 /** @type {number} */
CKEDITOR.LINEUTIS_INSIDE;
 /** @type {number} */
CKEDITOR.NODE_COMMENT;
 /** @type {number} */
CKEDITOR.NODE_DOCUMENT;
 /** @type {number} */
CKEDITOR.NODE_DOCUMENT_FRAGMENT;
 /** @type {number} */
CKEDITOR.NODE_ELEMENT;
 /** @type {number} */
CKEDITOR.NODE_TEXT;
 /** @type {number} */
CKEDITOR.SELECTION_ELEMENT;
 /** @type {number} */
CKEDITOR.SELECTION_NONE;
 /** @type {number} */
CKEDITOR.SELECTION_TEXT;
 /** @type {number} */
CKEDITOR.SHIFT;
 /** @type {number} */
CKEDITOR.SHRINK_ELEMENT;
 /** @type {number} */
CKEDITOR.SHRINK_TEXT;
 /** @type {number} */
CKEDITOR.START;
 /** @type {number} */
CKEDITOR.TRISTATE_DISABLED;
 /** @type {number} */
CKEDITOR.TRISTATE_OFF;
 /** @type {number} */
CKEDITOR.TRISTATE_ON;
 /** @type {string} */
CKEDITOR.UI_BUTTON;
 /** @type {string} */
CKEDITOR.UI_MENUBUTTON;
 /** @type {string} */
CKEDITOR.UI_PANEL;
 /** @type {string} */
CKEDITOR.UI_PANELBUTTON;
 /** @type {string} */
CKEDITOR.UI_RICHCOMBO;
 /** @type {string} */
CKEDITOR.UI_SEPARATOR;
 /** @type {string} */
CKEDITOR.basePath;
 /** @type {!CKEDITOR.editor} */
CKEDITOR.currentInstance;
 /** @type {!CKEDITOR.dom.document} */
CKEDITOR.document;
 /** @type {!CKEDITOR.environmentConfig} */
CKEDITOR.env;
 /** @type {!Array<!CKEDITOR.editor>} */
CKEDITOR.instances;
 /** @type {number} */
CKEDITOR.loadFullCoreTimeout;
 /** @type {string} */
CKEDITOR.revision;
 /** @type {number} */
CKEDITOR.rnd;
 /** @type {string} */
CKEDITOR.status;
 /** @type {string} */
CKEDITOR.timestamp;
 /** @type {string} */
CKEDITOR.version;
 /** @type {?} */
CKEDITOR.config;

/**
 * @param {!CKEDITOR.editor} editor
 * @return {void}
 */
CKEDITOR.add = function(editor) {};

/**
 * @param {string} css
 * @return {void}
 */
CKEDITOR.addCss = function(css) {};

/**
 * @param {string} name
 * @param {string} source
 * @return {!CKEDITOR.template}
 */
CKEDITOR.addTemplate = function(name, source) {};

/**
 * @param {string|!HTMLElement} element
 * @param {?=} config
 * @param {string=} data
 * @return {!CKEDITOR.editor}
 */
CKEDITOR.appendTo = function(element, config, data) {};

/**
 * @return {void}
 */
CKEDITOR.domReady = function() {};

/**
 * @param {string} dialogName
 * @return {void}
 */
CKEDITOR.dialogCommand = function(dialogName) {};

/**
 * @param {?} config
 * @return {void}
 */
CKEDITOR.editorConfig = function(config) {};

/**
 * @return {string}
 */
CKEDITOR.getCss = function() {};

/**
 * @param {string} name
 * @return {!CKEDITOR.template}
 */
CKEDITOR.getTemplate = function(name) {};

/**
 * @param {string} resource
 * @return {string}
 */
CKEDITOR.getUrl = function(resource) {};

/**
 * @param {string|!HTMLElement} element
 * @param {?=} instanceConfig
 * @return {!CKEDITOR.editor}
 */
CKEDITOR.inline = function(element, instanceConfig) {};

/**
 * @return {void}
 */
CKEDITOR.inlineAll = function() {};

/**
 * @return {void}
 */
CKEDITOR.loadFullCore = function() {};

/**
 * @param {(string|!HTMLTextAreaElement)} element
 * @param {?=} config
 * @return {!CKEDITOR.editor}
 */
CKEDITOR.replace = function(element, config) {};

/**
 * @param {string|function(!HTMLTextAreaElement, ?): boolean=} className_or_assertionFunction
 * @return {void}
 */
CKEDITOR.replaceAll = function(className_or_assertionFunction) {};
/** @const */
CKEDITOR.dom = {};

/**
 * @constructor
 * @struct
 * @param {string|!Object} comment
 * @param {!CKEDITOR.dom.document=} ownerDocument
 */
CKEDITOR.dom.comment = function(comment, ownerDocument) {};
 /** @type {number} */
CKEDITOR.dom.comment.prototype.type;

/**
 * @return {string}
 */
CKEDITOR.dom.comment.prototype.getOuterHtml = function() {};

/**
 * @constructor
 * @struct
 * @param {!Object} domDocument
 */
CKEDITOR.dom.document = function(domDocument) {};
 /** @type {number} */
CKEDITOR.dom.document.prototype.type;

/**
 * @param {string} cssFileUrl
 * @return {void}
 */
CKEDITOR.dom.document.prototype.appendStyleSheet = function(cssFileUrl) {};

/**
 * @param {string} cssStyleText
 * @return {!Object}
 */
CKEDITOR.dom.document.prototype.appendStyleText = function(cssStyleText) {};

/**
 * @param {string} name
 * @param {{attributes: !Object, styles: !Object}=} attribsAndStyles
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.dom.document.prototype.createElement = function(name, attribsAndStyles) {};

/**
 * @param {string} text
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.dom.document.prototype.createText = function(text) {};

/**
 * @param {string} selector
 * @return {!CKEDITOR.dom.nodeList}
 */
CKEDITOR.dom.document.prototype.find = function(selector) {};

/**
 * @param {string} selector
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.dom.document.prototype.findOne = function(selector) {};

/**
 * @return {void}
 */
CKEDITOR.dom.document.prototype.focus = function() {};

/**
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.dom.document.prototype.getActive = function() {};

/**
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.dom.document.prototype.getBody = function() {};

/**
 * @param {!Array<?>} address
 * @param {boolean=} normalized
 * @return {!CKEDITOR.dom.node}
 */
CKEDITOR.dom.document.prototype.getByAddress = function(address, normalized) {};

/**
 * @param {string} elementId
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.dom.document.prototype.getById = function(elementId) {};

/**
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.dom.document.prototype.getDocumentElement = function() {};

/**
 * @param {string} tagName
 * @return {!CKEDITOR.dom.nodeList}
 */
CKEDITOR.dom.document.prototype.getElementsByTag = function(tagName) {};

/**
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.dom.document.prototype.getHead = function() {};

/**
 * @return {!CKEDITOR.dom.selection}
 */
CKEDITOR.dom.document.prototype.getSelection = function() {};

/**
 * @return {!CKEDITOR.dom.window}
 */
CKEDITOR.dom.document.prototype.getWindow = function() {};

/**
 * @param {string} html
 * @return {void}
 */
CKEDITOR.dom.document.prototype.write = function(html) {};

/**
 * @constructor
 * @struct
 * @param {!Object} nodeOrDoc
 */
CKEDITOR.dom.documentFragment = function(nodeOrDoc) {};
 /** @type {number} */
CKEDITOR.dom.documentFragment.prototype.type;

/**
 * @param {!CKEDITOR.dom.node} node
 * @return {void}
 */
CKEDITOR.dom.documentFragment.prototype.insertAfterNode = function(node) {};

/**
 * @constructor
 * @struct
 * @param {!Object} nativeDomObject
 */
CKEDITOR.dom.domObject = function(nativeDomObject) {};
 /** @type {!HTMLElement} */
CKEDITOR.dom.domObject.prototype.$;

/**
 * @return {void}
 */
CKEDITOR.dom.domObject.prototype.clearCustomData = function() {};

/**
 * @param {?} object
 * @return {boolean}
 */
CKEDITOR.dom.domObject.prototype.equals = function(object) {};

/**
 * @param {string} key
 * @return {?}
 */
CKEDITOR.dom.domObject.prototype.getCustomData = function(key) {};

/**
 * @return {?}
 */
CKEDITOR.dom.domObject.prototype.getPrivate = function() {};

/**
 * @return {number}
 */
CKEDITOR.dom.domObject.prototype.getUniqueId = function() {};

/**
 * @return {void}
 */
CKEDITOR.dom.domObject.prototype.removeAllListeners = function() {};

/**
 * @param {string} key
 * @return {!Object}
 */
CKEDITOR.dom.domObject.prototype.removeCustomData = function(key) {};

/**
 * @param {string} key
 * @param {!Object} value
 * @return {!CKEDITOR.dom.domObject}
 */
CKEDITOR.dom.domObject.prototype.setCustomData = function(key, value) {};

/**
 * @constructor
 * @struct
 * @param {string|!HTMLElement} element
 * @param {!CKEDITOR.dom.document=} ownerDocument
 */
CKEDITOR.dom.element = function(element, ownerDocument) {};
 /** @type {number} */
CKEDITOR.dom.element.prototype.type;

/**
 * @param {string} className
 * @return {void}
 */
CKEDITOR.dom.element.prototype.addClass = function(className) {};

/**
 * @param {!CKEDITOR.dom.node|string} node
 * @param {boolean=} toStart
 * @return {!CKEDITOR.dom.node}
 */
CKEDITOR.dom.element.prototype.append = function(node, toStart) {};

/**
 * @param {boolean} force
 * @return {void}
 */
CKEDITOR.dom.element.prototype.appendBogus = function(force) {};

/**
 * @param {string} html
 * @return {void}
 */
CKEDITOR.dom.element.prototype.appendHtml = function(html) {};

/**
 * @param {string} text
 * @return {!CKEDITOR.dom.node}
 */
CKEDITOR.dom.element.prototype.appendText = function(text) {};

/**
 * @param {!CKEDITOR.dom.element} parent
 * @return {void}
 */
CKEDITOR.dom.element.prototype.breakParent = function(parent) {};

/**
 * @param {!CKEDITOR.dom.node} node
 * @return {boolean}
 */
CKEDITOR.dom.element.prototype.contains = function(node) {};

/**
 * @param {!CKEDITOR.dom.element} dest
 * @param {!Object} skipAttributes
 * @return {void}
 */
CKEDITOR.dom.element.prototype.copyAttributes = function(dest, skipAttributes) {};

/**
 * @param {string} name
 * @param {string|boolean=} value
 * @return {string|void}
 */
CKEDITOR.dom.element.prototype.data = function(name, value) {};

/**
 * @return {void}
 */
CKEDITOR.dom.element.prototype.disableContextMenu = function() {};

/**
 * @param {string} selector
 * @return {!CKEDITOR.dom.nodeList}
 */
CKEDITOR.dom.element.prototype.find = function(selector) {};

/**
 * @param {string} selector
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.dom.element.prototype.findOne = function(selector) {};

/**
 * @param {boolean=} defer
 * @return {void}
 */
CKEDITOR.dom.element.prototype.focus = function(defer) {};

/**
 * @param {boolean=} ignoreChildren
 * @param {number=} indexToUse
 * @return {void}
 */
CKEDITOR.dom.element.prototype.focusNext = function(ignoreChildren, indexToUse) {};

/**
 * @param {boolean=} ignoreChildren
 * @param {number=} indexToUse
 * @return {void}
 */
CKEDITOR.dom.element.prototype.focusPrevious = function(ignoreChildren, indexToUse) {};

/**
 * @param {function(!CKEDITOR.dom.node): void} callback
 * @param {number=} type
 * @param {boolean=} skipRoot
 * @return {void}
 */
CKEDITOR.dom.element.prototype.forEach = function(callback, type, skipRoot) {};

/**
 * @param {string} name
 * @return {string}
 */
CKEDITOR.dom.element.prototype.getAttribute = function(name) {};

/**
 * @return {!Object}
 */
CKEDITOR.dom.element.prototype.getBogus = function() {};

/**
 * @param {number|!Array<number>} indices
 * @return {!CKEDITOR.dom.node}
 */
CKEDITOR.dom.element.prototype.getChild = function(indices) {};

/**
 * @return {number}
 */
CKEDITOR.dom.element.prototype.getChildCount = function() {};

/**
 * @return {!CKEDITOR.dom.nodeList}
 */
CKEDITOR.dom.element.prototype.getChildren = function() {};

/**
 * @return {?}
 */
CKEDITOR.dom.element.prototype.getClientRect = function() {};

/**
 * @param {string} propertyName
 * @return {string}
 */
CKEDITOR.dom.element.prototype.getComputedStyle = function(propertyName) {};

/**
 * @param {boolean} useComputed
 * @return {string}
 */
CKEDITOR.dom.element.prototype.getDirection = function(useComputed) {};

/**
 * @param {!CKEDITOR.dom.document} refDocument
 * @return {!CKEDITOR.dom.position}
 */
CKEDITOR.dom.element.prototype.getDocumentPosition = function(refDocument) {};

/**
 * @return {?}
 */
CKEDITOR.dom.element.prototype.getDtd = function() {};

/**
 * @return {!CKEDITOR.editor}
 */
CKEDITOR.dom.element.prototype.getEditor = function() {};

/**
 * @param {string} tagName
 * @return {!CKEDITOR.dom.nodeList}
 */
CKEDITOR.dom.element.prototype.getElementsByTag = function(tagName) {};

/**
 * @param {!Function=} evaluator
 * @return {!CKEDITOR.dom.node}
 */
CKEDITOR.dom.element.prototype.getFirst = function(evaluator) {};

/**
 * @return {!CKEDITOR.dom.document}
 */
CKEDITOR.dom.element.prototype.getFrameDocument = function() {};

/**
 * @return {string}
 */
CKEDITOR.dom.element.prototype.getHtml = function() {};

/**
 * @return {string}
 */
CKEDITOR.dom.element.prototype.getId = function() {};

/**
 * @param {!Function=} evaluator
 * @return {!CKEDITOR.dom.node}
 */
CKEDITOR.dom.element.prototype.getLast = function(evaluator) {};

/**
 * @return {string}
 */
CKEDITOR.dom.element.prototype.getName = function() {};

/**
 * @return {string}
 */
CKEDITOR.dom.element.prototype.getNameAtt = function() {};

/**
 * @return {string}
 */
CKEDITOR.dom.element.prototype.getOuterHtml = function() {};

/**
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.dom.element.prototype.getPositionedAncestor = function() {};

/**
 * @param {string} type
 * @param {boolean} isBorderBox
 * @return {void}
 */
CKEDITOR.dom.element.prototype.getSize = function(type, isBorderBox) {};

/**
 * @param {string} name
 * @return {string}
 */
CKEDITOR.dom.element.prototype.getStyle = function(name) {};

/**
 * @return {number}
 */
CKEDITOR.dom.element.prototype.getTabIndex = function() {};

/**
 * @return {string}
 */
CKEDITOR.dom.element.prototype.getText = function() {};

/**
 * @return {string}
 */
CKEDITOR.dom.element.prototype.getValue = function() {};

/**
 * @return {!CKEDITOR.dom.window}
 */
CKEDITOR.dom.element.prototype.getWindow = function() {};

/**
 * @return {boolean}
 */
CKEDITOR.dom.element.prototype.hasAttributes = function() {};

/**
 * @param {string} name
 * @return {boolean}
 */
CKEDITOR.dom.element.prototype.hasAttribute = function(name) {};

/**
 * @param {string} className
 * @return {boolean}
 */
CKEDITOR.dom.element.prototype.hasClass = function(className) {};

/**
 * @return {void}
 */
CKEDITOR.dom.element.prototype.hide = function() {};

/**
 * @param {...string|?} name
 * @return {boolean}
 */
CKEDITOR.dom.element.prototype.is = function(name) {};

/**
 * @param {!Object} customNodeNames
 * @return {boolean}
 */
CKEDITOR.dom.element.prototype.isBlockBoundary = function(customNodeNames) {};

/**
 * @param {boolean=} textCursor
 * @return {boolean}
 */
CKEDITOR.dom.element.prototype.isEditable = function(textCursor) {};

/**
 * @return {boolean}
 */
CKEDITOR.dom.element.prototype.isEmptyInlineRemoveable = function() {};

/**
 * @param {!CKEDITOR.dom.element} otherElement
 * @return {boolean}
 */
CKEDITOR.dom.element.prototype.isIdentical = function(otherElement) {};

/**
 * @return {boolean}
 */
CKEDITOR.dom.element.prototype.isVisible = function() {};

/**
 * @param {boolean=} inlineOnly
 * @return {void}
 */
CKEDITOR.dom.element.prototype.mergeSiblings = function(inlineOnly) {};

/**
 * @param {!CKEDITOR.dom.element} target
 * @param {boolean=} toStart
 * @return {void}
 */
CKEDITOR.dom.element.prototype.moveChildren = function(target, toStart) {};

/**
 * @param {string} name
 * @return {void}
 */
CKEDITOR.dom.element.prototype.removeAttribute = function(name) {};

/**
 * @param {!Array<string>=} attributes
 * @return {void}
 */
CKEDITOR.dom.element.prototype.removeAttributes = function(attributes) {};

/**
 * @param {string} className
 * @return {void}
 */
CKEDITOR.dom.element.prototype.removeClass = function(className) {};

/**
 * @param {string} name
 * @return {void}
 */
CKEDITOR.dom.element.prototype.removeStyle = function(name) {};

/**
 * @param {string} newTag
 * @return {void}
 */
CKEDITOR.dom.element.prototype.renameNode = function(newTag) {};

/**
 * @param {!CKEDITOR.dom.element|!CKEDITOR.dom.window} parent
 * @param {boolean} alignToTop
 * @param {boolean} hscroll
 * @return {void}
 */
CKEDITOR.dom.element.prototype.scrollIntoParent = function(parent, alignToTop, hscroll) {};

/**
 * @param {boolean=} alignToTop
 * @return {void}
 */
CKEDITOR.dom.element.prototype.scrollIntoView = function(alignToTop) {};

/**
 * @param {string} name
 * @param {string} value
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.dom.element.prototype.setAttribute = function(name, value) {};

/**
 * @param {!Object} attributesPairs
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.dom.element.prototype.setAttributes = function(attributesPairs) {};

/**
 * @param {string} html
 * @return {string}
 */
CKEDITOR.dom.element.prototype.setHtml = function(html) {};

/**
 * @param {number} opacity
 * @return {void}
 */
CKEDITOR.dom.element.prototype.setOpacity = function(opacity) {};

/**
 * @param {string} type
 * @param {number} size
 * @param {boolean} isBorderBox
 * @return {void}
 */
CKEDITOR.dom.element.prototype.setSize = function(type, size, isBorderBox) {};

/**
 * @param {number} state
 * @param {!Object=} base
 * @param {!Object=} useAria
 * @return {void}
 */
CKEDITOR.dom.element.prototype.setState = function(state, base, useAria) {};

/**
 * @param {string} name
 * @param {string} value
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.dom.element.prototype.setStyle = function(name, value) {};

/**
 * @param {!Object} stylesPair
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.dom.element.prototype.setStyles = function(stylesPair) {};

/**
 * @param {string} text
 * @return {string}
 */
CKEDITOR.dom.element.prototype.setText = function(text) {};

/**
 * @param {string} value
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.dom.element.prototype.setValue = function(value) {};

/**
 * @return {void}
 */
CKEDITOR.dom.element.prototype.show = function() {};

/**
 * @return {void}
 */
CKEDITOR.dom.element.prototype.unselectable = function() {};

/**
 * @param {!Object} database
 * @return {!Object}
 */
CKEDITOR.dom.element.clearAllMarkers = function(database) {};

/**
 * @param {!Object} database
 * @param {!Object} element
 * @param {!Object} removeFromDatabase
 * @return {void}
 */
CKEDITOR.dom.element.clearMarkers = function(database, element, removeFromDatabase) {};

/**
 * @param {string} html
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.dom.element.createFromHtml = function(html) {};

/**
 * @param {string|?} element
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.dom.element.get = function(element) {};

/**
 * @param {!Object} database
 * @param {!Object} element
 * @param {!Object} name
 * @param {!Object} value
 * @return {!CKEDITOR.dom.domObject}
 */
CKEDITOR.dom.element.setMarker = function(database, element, name, value) {};

/**
 * @constructor
 * @struct
 * @param {!CKEDITOR.dom.element} startNode
 * @param {!CKEDITOR.dom.element} root
 */
CKEDITOR.dom.elementPath = function(startNode, root) {};
 /** @type {!CKEDITOR.dom.element} */
CKEDITOR.dom.elementPath.prototype.block;
 /** @type {!CKEDITOR.dom.element} */
CKEDITOR.dom.elementPath.prototype.blockLimit;
 /** @type {!CKEDITOR.dom.element} */
CKEDITOR.dom.elementPath.prototype.root;
 /** @type {!Array<!CKEDITOR.dom.element>} */
CKEDITOR.dom.elementPath.prototype.elements;

/**
 * @param {!CKEDITOR.dom.elementPath} otherPath
 * @return {boolean}
 */
CKEDITOR.dom.elementPath.prototype.compare = function(otherPath) {};

/**
 * @param {string|!Array<string>|function(!CKEDITOR.dom.element): boolean|!Object|!CKEDITOR.dom.element} query
 * @param {boolean} excludeRoot
 * @param {boolean} fromTop
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.dom.elementPath.prototype.contains = function(query, excludeRoot, fromTop) {};

/**
 * @param {string} tag
 * @return {boolean}
 */
CKEDITOR.dom.elementPath.prototype.isContextFor = function(tag) {};

/**
 * @return {string}
 */
CKEDITOR.dom.elementPath.prototype.direction = function() {};

/**
 * @constructor
 * @struct
 * @param {!CKEDITOR.dom.element|!CKEDITOR.dom.document} root
 */
CKEDITOR.dom.range = function(root) {};
 /** @type {?} */
CKEDITOR.dom.range.prototype.startContainer;
 /** @type {number} */
CKEDITOR.dom.range.prototype.startOffset;
 /** @type {?} */
CKEDITOR.dom.range.prototype.endContainer;
 /** @type {number} */
CKEDITOR.dom.range.prototype.endOffset;
 /** @type {boolean} */
CKEDITOR.dom.range.prototype.collapsed;
 /** @type {boolean} */
CKEDITOR.dom.range.prototype.isDocRoot;
 /** @type {!CKEDITOR.dom.document} */
CKEDITOR.dom.range.prototype.document;
 /** @type {!CKEDITOR.dom.element} */
CKEDITOR.dom.range.prototype.root;

/**
 * @return {!CKEDITOR.dom.range}
 */
CKEDITOR.dom.range.prototype.clone = function() {};

/**
 * @param {boolean=} toStart
 * @return {boolean}
 */
CKEDITOR.dom.range.prototype.collapse = function(toStart) {};

/**
 * @return {!CKEDITOR.dom.documentFragment}
 */
CKEDITOR.dom.range.prototype.cloneContents = function() {};

/**
 * @param {boolean=} mergeThen
 * @return {void}
 */
CKEDITOR.dom.range.prototype.deleteContents = function(mergeThen) {};

/**
 * @param {boolean=} mergeThen
 * @return {!CKEDITOR.dom.documentFragment}
 */
CKEDITOR.dom.range.prototype.extractContents = function(mergeThen) {};

/**
 * @param {boolean} serializable
 * @return {!Object}
 */
CKEDITOR.dom.range.prototype.createBookmark = function(serializable) {};

/**
 * @param {boolean} normalized
 * @return {!Object}
 */
CKEDITOR.dom.range.prototype.createBookmark2 = function(normalized) {};

/**
 * @return {!CKEDITOR.dom.iterator}
 */
CKEDITOR.dom.range.prototype.createIterator = function() {};

/**
 * @param {!Object} bookmark
 * @return {void}
 */
CKEDITOR.dom.range.prototype.moveToBookmark = function(bookmark) {};

/**
 * @return {{startNode: !CKEDITOR.dom.node, endNode: !CKEDITOR.dom.node}}
 */
CKEDITOR.dom.range.prototype.getBoundaryNodes = function() {};

/**
 * @param {boolean} includeSelf
 * @param {boolean} ignoreTextNode
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.dom.range.prototype.getCommonAncestor = function(includeSelf, ignoreTextNode) {};

/**
 * @return {void}
 */
CKEDITOR.dom.range.prototype.optimize = function() {};

/**
 * @return {void}
 */
CKEDITOR.dom.range.prototype.optimizeBookmark = function() {};

/**
 * @param {boolean=} ignoreStart
 * @param {boolean=} ignoreEnd
 * @return {void}
 */
CKEDITOR.dom.range.prototype.trim = function(ignoreStart, ignoreEnd) {};

/**
 * @param {number} unit
 * @param {boolean=} excludeBrs
 * @return {void}
 */
CKEDITOR.dom.range.prototype.enlarge = function(unit, excludeBrs) {};

/**
 * @param {number} mode
 * @param {boolean} selectContents
 * @return {void}
 */
CKEDITOR.dom.range.prototype.shrink = function(mode, selectContents) {};

/**
 * @param {!CKEDITOR.dom.node} node
 * @return {void}
 */
CKEDITOR.dom.range.prototype.insertNode = function(node) {};

/**
 * @param {!CKEDITOR.dom.node} node
 * @param {!Object} position
 * @return {void}
 */
CKEDITOR.dom.range.prototype.moveToPosition = function(node, position) {};

/**
 * @param {!CKEDITOR.dom.range} range
 * @return {void}
 */
CKEDITOR.dom.range.prototype.moveToRange = function(range) {};

/**
 * @param {!CKEDITOR.dom.node} node
 * @return {void}
 */
CKEDITOR.dom.range.prototype.selectNodeContents = function(node) {};

/**
 * @param {!CKEDITOR.dom.node} startNode
 * @param {number} startOffset
 * @return {void}
 */
CKEDITOR.dom.range.prototype.setStart = function(startNode, startOffset) {};

/**
 * @param {!CKEDITOR.dom.node} endNode
 * @param {number} endOffset
 * @return {void}
 */
CKEDITOR.dom.range.prototype.setEnd = function(endNode, endOffset) {};

/**
 * @param {!CKEDITOR.dom.node} node
 * @return {void}
 */
CKEDITOR.dom.range.prototype.setStartAfter = function(node) {};

/**
 * @param {!CKEDITOR.dom.node} node
 * @return {void}
 */
CKEDITOR.dom.range.prototype.setStartBefore = function(node) {};

/**
 * @param {!CKEDITOR.dom.node} node
 * @param {number} position
 * @return {void}
 */
CKEDITOR.dom.range.prototype.setStartAt = function(node, position) {};

/**
 * @param {!CKEDITOR.dom.node} node
 * @param {number} position
 * @return {void}
 */
CKEDITOR.dom.range.prototype.setEndAt = function(node, position) {};

/**
 * @param {boolean} isStart
 * @param {!Object} blockTag
 * @return {!Object}
 */
CKEDITOR.dom.range.prototype.fixBlock = function(isStart, blockTag) {};

/**
 * @param {!Object} blockTag
 * @return {!Object}
 */
CKEDITOR.dom.range.prototype.splitBlock = function(blockTag) {};

/**
 * @param {!CKEDITOR.dom.element} toSplit
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.dom.range.prototype.splitElement = function(toSplit) {};

/**
 * @param {boolean} atEnd
 * @return {void}
 */
CKEDITOR.dom.range.prototype.removeEmptyBlocksAtEnd = function(atEnd) {};

/**
 * @return {!CKEDITOR.dom.elementPath}
 */
CKEDITOR.dom.range.prototype.startPath = function() {};

/**
 * @return {!CKEDITOR.dom.elementPath}
 */
CKEDITOR.dom.range.prototype.endPath = function() {};

/**
 * @param {!CKEDITOR.dom.element} element
 * @param {number} checkType
 * @return {boolean}
 */
CKEDITOR.dom.range.prototype.checkBoundaryOfElement = function(element, checkType) {};

/**
 * @return {boolean}
 */
CKEDITOR.dom.range.prototype.checkStartOfBlock = function() {};

/**
 * @return {boolean}
 */
CKEDITOR.dom.range.prototype.checkEndOfBlock = function() {};

/**
 * @param {!Function} evaluator
 * @param {!Function} guard
 * @param {!CKEDITOR.dom.element} boundary
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.dom.range.prototype.getPreviousNode = function(evaluator, guard, boundary) {};

/**
 * @param {!Function} evaluator
 * @param {!Function} guard
 * @param {!CKEDITOR.dom.element} boundary
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.dom.range.prototype.getNextNode = function(evaluator, guard, boundary) {};

/**
 * @return {boolean}
 */
CKEDITOR.dom.range.prototype.checkReadOnly = function() {};

/**
 * @param {!CKEDITOR.dom.element} element
 * @param {boolean} isMoveToEnd
 * @return {boolean}
 */
CKEDITOR.dom.range.prototype.moveToElementEditablePosition = function(element, isMoveToEnd) {};

/**
 * @param {!CKEDITOR.dom.element} element
 * @param {boolean} isMoveToEnd
 * @return {boolean}
 */
CKEDITOR.dom.range.prototype.movetoClosestEditablePosition = function(element, isMoveToEnd) {};

/**
 * @param {!Object} target
 * @return {boolean}
 */
CKEDITOR.dom.range.prototype.moveToElementEditStart = function(target) {};

/**
 * @param {!Object} target
 * @return {boolean}
 */
CKEDITOR.dom.range.prototype.moveToElementEditEnd = function(target) {};

/**
 * @return {!CKEDITOR.dom.node}
 */
CKEDITOR.dom.range.prototype.getEnclosedNode = function() {};

/**
 * @return {!CKEDITOR.dom.node}
 */
CKEDITOR.dom.range.prototype.getTouchedStartNode = function() {};

/**
 * @return {!CKEDITOR.dom.node}
 */
CKEDITOR.dom.range.prototype.getTouchedEndNode = function() {};

/**
 * @return {!Object}
 */
CKEDITOR.dom.range.prototype.getNextEditableNode = function() {};

/**
 * @return {!Object}
 */
CKEDITOR.dom.range.prototype.getPreviousEditableNode = function() {};

/**
 * @return {void}
 */
CKEDITOR.dom.range.prototype.scrollIntoView = function() {};
/**
 * @record
 * @struct
 */
CKEDITOR.dom.rangeListIterator = function() {};

/**
 * @constructor
 * @struct
 * @param {!CKEDITOR.dom.document|!CKEDITOR.dom.element|!CKEDITOR.dom.selection} target
 */
CKEDITOR.dom.selection = function(target) {};
 /** @type {!CKEDITOR.dom.document} */
CKEDITOR.dom.selection.prototype.document;
 /** @type {boolean} */
CKEDITOR.dom.selection.prototype.isFake;
 /** @type {boolean} */
CKEDITOR.dom.selection.prototype.isLocked;
 /** @type {number} */
CKEDITOR.dom.selection.prototype.rev;
 /** @type {!CKEDITOR.dom.element} */
CKEDITOR.dom.selection.prototype.root;

/**
 * @param {!Object} serializable
 * @return {!Array<?>}
 */
CKEDITOR.dom.selection.prototype.createBookmarks = function(serializable) {};

/**
 * @param {!Object=} normalized
 * @return {!Array<?>}
 */
CKEDITOR.dom.selection.prototype.createBookmarks2 = function(normalized) {};

/**
 * @param {!CKEDITOR.dom.element} element
 * @return {void}
 */
CKEDITOR.dom.selection.prototype.fake = function(element) {};

/**
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.dom.selection.prototype.getCommonAncestor = function() {};

/**
 * @return {!Object}
 */
CKEDITOR.dom.selection.prototype.getNative = function() {};

/**
 * @param {boolean=} onlyEditables
 * @return {!Array<?>}
 */
CKEDITOR.dom.selection.prototype.getRanges = function(onlyEditables) {};

/**
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.dom.selection.prototype.getSelectedElement = function() {};

/**
 * @return {string}
 */
CKEDITOR.dom.selection.prototype.getSelectedText = function() {};

/**
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.dom.selection.prototype.getStartElement = function() {};

/**
 * @return {number}
 */
CKEDITOR.dom.selection.prototype.getType = function() {};

/**
 * @return {boolean}
 */
CKEDITOR.dom.selection.prototype.isHidden = function() {};

/**
 * @return {void}
 */
CKEDITOR.dom.selection.prototype.lock = function() {};

/**
 * @return {void}
 */
CKEDITOR.dom.selection.prototype.removeAllRanges = function() {};

/**
 * @return {void}
 */
CKEDITOR.dom.selection.prototype.reset = function() {};

/**
 * @return {void}
 */
CKEDITOR.dom.selection.prototype.scrollIntoView = function() {};

/**
 * @param {!Array<?>} bookmarks
 * @return {!CKEDITOR.dom.selection}
 */
CKEDITOR.dom.selection.prototype.selectBookmarks = function(bookmarks) {};

/**
 * @param {!CKEDITOR.dom.element} element
 * @return {void}
 */
CKEDITOR.dom.selection.prototype.selectElement = function(element) {};

/**
 * @param {!Array<?>} ranges
 * @return {void}
 */
CKEDITOR.dom.selection.prototype.selectRanges = function(ranges) {};

/**
 * @param {!Object} restore
 * @return {void}
 */
CKEDITOR.dom.selection.prototype.unlock = function(restore) {};

/**
 * @constructor
 * @struct
 * @param {!Array<!CKEDITOR.dom.range>|!CKEDITOR.dom.range} ranges_or_range
 */
CKEDITOR.dom.rangeList = function(ranges_or_range) {};

/**
 * @return {!CKEDITOR.dom.rangeListIterator}
 */
CKEDITOR.dom.rangeList.prototype.createIterator = function() {};

/**
 * @param {boolean} serializable
 * @return {!Array<!Object>}
 */
CKEDITOR.dom.rangeList.prototype.createBokmark = function(serializable) {};

/**
 * @param {boolean} normalized
 * @return {!Array<!Object>}
 */
CKEDITOR.dom.rangeList.prototype.createBookmark2 = function(normalized) {};

/**
 * @param {!Array<!Object>} bookmarks
 * @return {void}
 */
CKEDITOR.dom.rangeList.prototype.moveToBookmark = function(bookmarks) {};

/**
 * @constructor
 * @struct
 * @param {!CKEDITOR.dom.range} range
 */
CKEDITOR.dom.iterator = function(range) {};
 /** @type {!CKEDITOR.filter} */
CKEDITOR.dom.iterator.prototype.activeFilter;
 /** @type {boolean} */
CKEDITOR.dom.iterator.prototype.enforceRealBlocks;
 /** @type {boolean} */
CKEDITOR.dom.iterator.prototype.enlargeBr;
 /** @type {!CKEDITOR.filter} */
CKEDITOR.dom.iterator.prototype.filter;

/**
 * @param {string=} blockTag
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.dom.iterator.prototype.getNextParagraph = function(blockTag) {};

/**
 * @constructor
 * @struct
 * @param {!Node} domNode
 */
CKEDITOR.dom.node = function(domNode) {};

/**
 * @param {!CKEDITOR.dom.element} element
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.dom.node.prototype.appendTo = function(element) {};

/**
 * @param {boolean} includeChildren
 * @param {boolean} cloneId
 * @return {!CKEDITOR.dom.node}
 */
CKEDITOR.dom.node.prototype.clone = function(includeChildren, cloneId) {};

/**
 * @return {boolean}
 */
CKEDITOR.dom.node.prototype.hasPrevious = function() {};

/**
 * @return {boolean}
 */
CKEDITOR.dom.node.prototype.hasNext = function() {};

/**
 * @param {!CKEDITOR.dom.node} node
 * @return {!CKEDITOR.dom.node}
 */
CKEDITOR.dom.node.prototype.insertAfter = function(node) {};

/**
 * @param {!CKEDITOR.dom.node} node
 * @return {!CKEDITOR.dom.node}
 */
CKEDITOR.dom.node.prototype.insertBefore = function(node) {};

/**
 * @param {!CKEDITOR.dom.node} node
 * @return {!CKEDITOR.dom.node}
 */
CKEDITOR.dom.node.prototype.insertBeforeMe = function(node) {};

/**
 * @param {boolean} normalized
 * @return {!Array<!Object>}
 */
CKEDITOR.dom.node.prototype.getAddress = function(normalized) {};

/**
 * @return {!CKEDITOR.dom.document}
 */
CKEDITOR.dom.node.prototype.getDocument = function() {};

/**
 * @param {boolean=} normalized
 * @return {number}
 */
CKEDITOR.dom.node.prototype.getIndex = function(normalized) {};

/**
 * @param {!Object} startFromSibling
 * @param {!Object} nodeType
 * @param {!Object} guard
 * @return {void}
 */
CKEDITOR.dom.node.prototype.getNextSourceNode = function(startFromSibling, nodeType, guard) {};

/**
 * @param {!Object} startFromSibling
 * @param {!Object} nodeType
 * @param {!Object} guard
 * @return {void}
 */
CKEDITOR.dom.node.prototype.getPreviousSourceNode = function(startFromSibling, nodeType, guard) {};

/**
 * @param {!Function=} evaluator
 * @return {!CKEDITOR.dom.node}
 */
CKEDITOR.dom.node.prototype.getPrevious = function(evaluator) {};

/**
 * @param {!Function=} evaluator
 * @return {!CKEDITOR.dom.node}
 */
CKEDITOR.dom.node.prototype.getNext = function(evaluator) {};

/**
 * @param {boolean=} allowFragmentParent
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.dom.node.prototype.getParent = function(allowFragmentParent) {};

/**
 * @param {boolean=} closerFirst
 * @return {!Array<!CKEDITOR.dom.node>}
 */
CKEDITOR.dom.node.prototype.getParents = function(closerFirst) {};

/**
 * @param {!Object} node
 * @return {void}
 */
CKEDITOR.dom.node.prototype.getCommonAncestor = function(node) {};

/**
 * @param {!Object} otherNode
 * @return {void}
 */
CKEDITOR.dom.node.prototype.getPosition = function(otherNode) {};

/**
 * @param {string} reference
 * @param {boolean=} includeSelf
 * @return {!CKEDITOR.dom.node}
 */
CKEDITOR.dom.node.prototype.getAscendant = function(reference, includeSelf) {};

/**
 * @param {!Object} name
 * @param {?} includeSelf
 * @return {boolean}
 */
CKEDITOR.dom.node.prototype.hasAscendant = function(name, includeSelf) {};

/**
 * @param {boolean=} preserveChildren
 * @return {!CKEDITOR.dom.node}
 */
CKEDITOR.dom.node.prototype.move = function(preserveChildren) {};

/**
 * @param {!CKEDITOR.dom.node} nodeToReplace
 * @return {void}
 */
CKEDITOR.dom.node.prototype.replace = function(nodeToReplace) {};

/**
 * @return {void}
 */
CKEDITOR.dom.node.prototype.trim = function() {};

/**
 * @return {void}
 */
CKEDITOR.dom.node.prototype.ltrim = function() {};

/**
 * @return {void}
 */
CKEDITOR.dom.node.prototype.rtrim = function() {};

/**
 * @return {boolean}
 */
CKEDITOR.dom.node.prototype.isReadOnly = function() {};

/**
 * @constructor
 * @struct
 * @param {!Object} nativeList
 */
CKEDITOR.dom.nodeList = function(nativeList) {};

/**
 * @return {number}
 */
CKEDITOR.dom.nodeList.prototype.count = function() {};

/**
 * @param {number} index
 * @return {!CKEDITOR.dom.node}
 */
CKEDITOR.dom.nodeList.prototype.getItem = function(index) {};

/**
 * @constructor
 * @struct
 * @param {!Event} domEvent
 */
CKEDITOR.dom.event = function(domEvent) {};

/**
 * @return {number}
 */
CKEDITOR.dom.event.prototype.getKey = function() {};

/**
 * @return {number}
 */
CKEDITOR.dom.event.prototype.getKeystroke = function() {};

/**
 * @param {boolean} stopPropagation
 * @return {void}
 */
CKEDITOR.dom.event.prototype.preventDefault = function(stopPropagation) {};

/**
 * @return {void}
 */
CKEDITOR.dom.event.prototype.stopPropagation = function() {};

/**
 * @return {!CKEDITOR.dom.node}
 */
CKEDITOR.dom.event.prototype.getTarget = function() {};

/**
 * @return {number}
 */
CKEDITOR.dom.event.prototype.getPhase = function() {};

/**
 * @return {!CKEDITOR.dom.position}
 */
CKEDITOR.dom.event.prototype.getPhaseOffset = function() {};

/**
 * @param {string} eventName
 * @param {function(!CKEDITOR.eventInfo): void} listenerFunction
 * @param {!Object=} scopeObj
 * @param {!Object=} listenerData
 * @param {number=} priority
 * @return {!Object}
 */
CKEDITOR.dom.event.prototype.on = function(eventName, listenerFunction, scopeObj, listenerData, priority) {};
/**
 * @record
 * @struct
 */
CKEDITOR.dom.position = function() {};
 /** @type {number} */
CKEDITOR.dom.position.prototype.x;
 /** @type {number} */
CKEDITOR.dom.position.prototype.y;
/**
 * @record
 * @struct
 */
CKEDITOR.dom.widthAndHeight = function() {};
 /** @type {number} */
CKEDITOR.dom.widthAndHeight.prototype.width;
 /** @type {number} */
CKEDITOR.dom.widthAndHeight.prototype.height;

/**
 * @constructor
 * @struct
 * @param {!Text|string} text
 * @param {!CKEDITOR.dom.document=} ownerDocument
 */
CKEDITOR.dom.text = function(text, ownerDocument) {};
 /** @type {number} */
CKEDITOR.dom.text.prototype.type;

/**
 * @return {number}
 */
CKEDITOR.dom.text.prototype.getLength = function() {};

/**
 * @return {string}
 */
CKEDITOR.dom.text.prototype.getText = function() {};

/**
 * @param {string} text
 * @return {void}
 */
CKEDITOR.dom.text.prototype.setText = function(text) {};

/**
 * @param {number} offset
 * @return {!CKEDITOR.dom.text}
 */
CKEDITOR.dom.text.prototype.split = function(offset) {};

/**
 * @param {number} indexA
 * @param {number} indexB
 * @return {void}
 */
CKEDITOR.dom.text.prototype.substring = function(indexA, indexB) {};

/**
 * @constructor
 * @struct
 * @param {!Object} domWindow
 */
CKEDITOR.dom.window = function(domWindow) {};

/**
 * @return {void}
 */
CKEDITOR.dom.window.prototype.focus = function() {};

/**
 * @return {!CKEDITOR.dom.widthAndHeight}
 */
CKEDITOR.dom.window.prototype.getViewPaneSize = function() {};

/**
 * @return {!CKEDITOR.dom.position}
 */
CKEDITOR.dom.window.prototype.getScrollPosition = function() {};

/**
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.dom.window.prototype.getFrame = function() {};

/**
 * @constructor
 * @struct
 * @param {!CKEDITOR.dom.range} range
 */
CKEDITOR.dom.walker = function(range) {};

/**
 * @return {void}
 */
CKEDITOR.dom.walker.prototype.end = function() {};

/**
 * @return {!CKEDITOR.dom.node}
 */
CKEDITOR.dom.walker.prototype.next = function() {};

/**
 * @return {!CKEDITOR.dom.node}
 */
CKEDITOR.dom.walker.prototype.previous = function() {};

/**
 * @return {boolean}
 */
CKEDITOR.dom.walker.prototype.checkForward = function() {};

/**
 * @return {boolean}
 */
CKEDITOR.dom.walker.prototype.checkBackward = function() {};

/**
 * @return {!CKEDITOR.dom.node}
 */
CKEDITOR.dom.walker.prototype.lastForward = function() {};

/**
 * @return {!CKEDITOR.dom.node}
 */
CKEDITOR.dom.walker.prototype.lastBackward = function() {};

/**
 * @return {void}
 */
CKEDITOR.dom.walker.prototype.reset = function() {};

/**
 * @param {!Object} customNodeNames
 * @return {!Function}
 */
CKEDITOR.dom.walker.prototype.blockBoundary = function(customNodeNames) {};

/**
 * @return {!Function}
 */
CKEDITOR.dom.walker.prototype.listItemBoundary = function() {};

/**
 * @param {boolean=} contentOnly
 * @param {boolean=} isReject
 * @return {!Function}
 */
CKEDITOR.dom.walker.prototype.bookmark = function(contentOnly, isReject) {};

/**
 * @param {boolean=} isReject
 * @return {!Function}
 */
CKEDITOR.dom.walker.prototype.whitespaces = function(isReject) {};

/**
 * @param {boolean=} isReject
 * @return {!Function}
 */
CKEDITOR.dom.walker.prototype.invisible = function(isReject) {};

/**
 * @param {number} type
 * @param {boolean=} isReject
 * @return {!Function}
 */
CKEDITOR.dom.walker.prototype.nodeType = function(type, isReject) {};

/**
 * @param {boolean=} isReject
 * @return {!Function}
 */
CKEDITOR.dom.walker.prototype.bogus = function(isReject) {};

/**
 * @param {boolean=} isReject
 * @return {!Function}
 */
CKEDITOR.dom.walker.prototype.temp = function(isReject) {};

/**
 * @param {boolean=} isReject
 * @return {!Function}
 */
CKEDITOR.dom.walker.prototype.ignored = function(isReject) {};

/**
 * @param {boolean=} isReject
 * @return {!Function}
 */
CKEDITOR.dom.walker.prototype.editable = function(isReject) {};
/** @const */
CKEDITOR.ajax = {};

/**
 * @param {string} url
 * @param {!Function=} callback
 * @return {string}
 */
CKEDITOR.ajax.load = function(url, callback) {};

/**
 * @param {string} url
 * @param {!Function=} callback
 * @return {!CKEDITOR.xml}
 */
CKEDITOR.ajax.loadXml = function(url, callback) {};
/**
 * @record
 * @struct
 */
CKEDITOR.xml = function() {};

/**
 * @constructor
 * @struct
 * @param {!CKEDITOR.editor} editor
 * @param {!CKEDITOR.commandDefinition} commandDefinition
 */
CKEDITOR.command = function(editor, commandDefinition) {};
 /** @type {boolean} */
CKEDITOR.command.prototype.contextSensitive;
 /** @type {boolean} */
CKEDITOR.command.prototype.editorFocus;
 /** @type {?} */
CKEDITOR.command.prototype.modes;
 /** @type {number} */
CKEDITOR.command.prototype.previousState;
 /** @type {number} */
CKEDITOR.command.prototype.state;
 /** @type {!Array<?>} */
CKEDITOR.command.prototype.uiItems;

/**
 * @param {boolean} noCache
 * @return {boolean}
 */
CKEDITOR.command.prototype.checkAllowed = function(noCache) {};

/**
 * @return {void}
 */
CKEDITOR.command.prototype.disable = function() {};

/**
 * @return {void}
 */
CKEDITOR.command.prototype.enable = function() {};

/**
 * @param {!Object=} data
 * @return {boolean}
 */
CKEDITOR.command.prototype.exec = function(data) {};

/**
 * @param {!CKEDITOR.editor} editor
 * @param {!CKEDITOR.dom.elementPath} path
 * @return {void}
 */
CKEDITOR.command.prototype.refresh = function(editor, path) {};

/**
 * @param {number} newState
 * @return {boolean}
 */
CKEDITOR.command.prototype.setState = function(newState) {};

/**
 * @return {void}
 */
CKEDITOR.command.prototype.toggleState = function() {};

/**
 * @constructor
 * @struct
 * @param {!CKEDITOR.editor} editor
 */
CKEDITOR.focusManager = function(editor) {};
 /** @type {!CKEDITOR.dom.domObject} */
CKEDITOR.focusManager.prototype.currentActive;
 /** @type {boolean} */
CKEDITOR.focusManager.prototype.hasFocus;

/**
 * @param {!CKEDITOR.dom.element=} currentActive
 * @return {void}
 */
CKEDITOR.focusManager.prototype.focus = function(currentActive) {};

/**
 * @return {void}
 */
CKEDITOR.focusManager.prototype.lock = function() {};

/**
 * @return {void}
 */
CKEDITOR.focusManager.prototype.unlock = function() {};

/**
 * @param {boolean=} noDelay
 * @return {void}
 */
CKEDITOR.focusManager.prototype.blur = function(noDelay) {};

/**
 * @param {!CKEDITOR.dom.element} element
 * @param {boolean} isCapture
 * @return {void}
 */
CKEDITOR.focusManager.prototype.add = function(element, isCapture) {};

/**
 * @param {!CKEDITOR.dom.element} element
 * @return {void}
 */
CKEDITOR.focusManager.prototype.remove = function(element) {};
/**
 * @record
 * @struct
 */
CKEDITOR.keystrokeHandler = function() {};
/**
 * @record
 * @struct
 */
CKEDITOR.toolbarGroups = function() {};
 /** @type {string} */
CKEDITOR.toolbarGroups.prototype.name;
 /** @type {!Array<string>} */
CKEDITOR.toolbarGroups.prototype.groups;
/**
 * @record
 * @struct
 */
CKEDITOR.config.styleObject = function() {};
 /** @type {string} */
CKEDITOR.config.styleObject.prototype.name;
 /** @type {string} */
CKEDITOR.config.styleObject.prototype.element;
 /** @type {!Object} */
CKEDITOR.config.styleObject.prototype.attributes;
 /** @type {!Object} */
CKEDITOR.config.styleObject.prototype.styles;
 /** @type {!Object} */
CKEDITOR.config.styleObject.prototype.overrides;
 /** @type {(string|boolean|!Object|!CKEDITOR.style)} */
CKEDITOR.config.prototype.allowedContent;
 /** @type {(string|!Function)} */
CKEDITOR.config.prototype.autoEmbed_widget;
 /** @type {number} */
CKEDITOR.config.prototype.autoGrow_bottomSpace;
 /** @type {number} */
CKEDITOR.config.prototype.autoGrow_maxHeight;
 /** @type {number} */
CKEDITOR.config.prototype.autoGrow_minHeight;
 /** @type {boolean} */
CKEDITOR.config.prototype.autoGrow_onStartup;
 /** @type {boolean} */
CKEDITOR.config.prototype.autoUpdateElement;
 /** @type {number} */
CKEDITOR.config.prototype.baseFloatZIndex;
 /** @type {string} */
CKEDITOR.config.prototype.baseHref;
 /** @type {boolean} */
CKEDITOR.config.prototype.basicEntities;
 /** @type {!Array<number>} */
CKEDITOR.config.prototype.blockedKeystrokes;
 /** @type {string} */
CKEDITOR.config.prototype.bodyClass;
 /** @type {string} */
CKEDITOR.config.prototype.bodyId;
 /** @type {boolean} */
CKEDITOR.config.prototype.browserContextMenuOnCtrl;
 /** @type {string} */
CKEDITOR.config.prototype.clipboard_defaultContentType;
 /** @type {string} */
CKEDITOR.config.prototype.codeSnippet_codeClass;
 /** @type {!Object} */
CKEDITOR.config.prototype.codeSnippet_languages;
 /** @type {string} */
CKEDITOR.config.prototype.coceSnippet_theme;
 /** @type {!CKEDITOR.config.styleObject} */
CKEDITOR.config.prototype.colorButton_backStyle;
 /** @type {string} */
CKEDITOR.config.prototype.colorButton_colors;
 /** @type {boolean} */
CKEDITOR.config.prototype.colorButton_enableMore;
 /** @type {!CKEDITOR.config.styleObject} */
CKEDITOR.config.prototype.colorButton_foreStyle;
 /** @type {(string|!Array<string>)} */
CKEDITOR.config.prototype.contentsCss;
 /** @type {string} */
CKEDITOR.config.prototype.contentsLangDirection;
 /** @type {string} */
CKEDITOR.config.prototype.contentsLanguage;
 /** @type {!CKEDITOR.config.styleObject} */
CKEDITOR.config.prototype.coreStyles_bold;
 /** @type {!CKEDITOR.config.styleObject} */
CKEDITOR.config.prototype.coreStyles_italic;
 /** @type {!CKEDITOR.config.styleObject} */
CKEDITOR.config.prototype.coreStyles_strike;
 /** @type {!CKEDITOR.config.styleObject} */
CKEDITOR.config.prototype.coreStyles_subscript;
 /** @type {!CKEDITOR.config.styleObject} */
CKEDITOR.config.prototype.coreStyles_superscript;
 /** @type {!CKEDITOR.config.styleObject} */
CKEDITOR.config.prototype.coreStyles_underline;
 /** @type {string} */
CKEDITOR.config.prototype.customConfig;
 /** @type {string} */
CKEDITOR.config.prototype.dataIndentationChars;
 /** @type {string} */
CKEDITOR.config.prototype.defaultLanguage;
 /** @type {string} */
CKEDITOR.config.prototype.devtools_styles;
 /** @type {!Function} */
CKEDITOR.config.prototype.devtools_textCallback;
 /** @type {string} */
CKEDITOR.config.prototype.dialog_backgroundCoverColor;
 /** @type {number} */
CKEDITOR.config.prototype.dialog_backgroundCoverOpacity;
 /** @type {string} */
CKEDITOR.config.prototype.dialog_buttonsOrder;
 /** @type {number} */
CKEDITOR.config.prototype.dialog_magnetDistance;
 /** @type {boolean} */
CKEDITOR.config.prototype.dialog_noConfirmCancel;
 /** @type {boolean} */
CKEDITOR.config.prototype.dialog_startupFocusTab;
 /** @type {boolean} */
CKEDITOR.config.prototype.disableNativeSpellChecker;
 /** @type {boolean} */
CKEDITOR.config.prototype.disableNativeTableHandles;
 /** @type {boolean} */
CKEDITOR.config.prototype.disableNativeObjectResizing;
 /** @type {boolean} */
CKEDITOR.config.prototype.disableNativeReadonlySTyling;
 /** @type {(string|!Object)} */
CKEDITOR.config.prototype.disallowedContent;
 /** @type {boolean} */
CKEDITOR.config.prototype.div_wrapTable;
 /** @type {string} */
CKEDITOR.config.prototype.docType;
 /** @type {string} */
CKEDITOR.config.prototype.emailProtection;
 /** @type {string} */
CKEDITOR.config.prototype.embed_provider;
 /** @type {boolean} */
CKEDITOR.config.prototype.enableTabKeyTools;
 /** @type {number} */
CKEDITOR.config.prototype.enterMode;
 /** @type {boolean} */
CKEDITOR.config.prototype.entities;
 /** @type {string} */
CKEDITOR.config.prototype.entities_additional;
 /** @type {boolean} */
CKEDITOR.config.prototype.entities_greek;
 /** @type {boolean} */
CKEDITOR.config.prototype.entities_latin;
 /** @type {(string|boolean)} */
CKEDITOR.config.prototype.entities_processNumerical;
 /** @type {(string|!Object)} */
CKEDITOR.config.prototype.extraAllowedContent;
 /** @type {string} */
CKEDITOR.config.prototype.extraPlugins;
 /** @type {string} */
CKEDITOR.config.prototype.fileTools_defaultFileName;
 /** @type {string} */
CKEDITOR.config.prototype.filebrowserBrowseUrl;
 /** @type {string} */
CKEDITOR.config.prototype.filebrowserFlashBrowseUrl;
 /** @type {string} */
CKEDITOR.config.prototype.filebrowserFlashUploadUrl;
 /** @type {string} */
CKEDITOR.config.prototype.filebrowserImageBrowseLinkUrl;
 /** @type {string} */
CKEDITOR.config.prototype.filebrowserImageBrowseUrl;
 /** @type {string} */
CKEDITOR.config.prototype.filebrowserImageUploadUrl;
 /** @type {string} */
CKEDITOR.config.prototype.filebrowserUploadUrl;
 /** @type {string} */
CKEDITOR.config.prototype.filebrowserWindowFeatures;
 /** @type {(string|number)} */
CKEDITOR.config.prototype.filebrowserWindowHeight;
 /** @type {(string|number)} */
CKEDITOR.config.prototype.filebrowserWindowWidth;
 /** @type {(boolean|!Function)} */
CKEDITOR.config.prototype.fillEmptyBlocks;
 /** @type {!CKEDITOR.config.styleObject} */
CKEDITOR.config.prototype.find_highlight;
 /** @type {boolean} */
CKEDITOR.config.prototype.flashAddEmbedTag;
 /** @type {boolean} */
CKEDITOR.config.prototype.flashConvertOnEdit;
 /** @type {boolean} */
CKEDITOR.config.prototype.flashEmbedTagOnly;
 /** @type {number} */
CKEDITOR.config.prototype.floatSpaceDockedOffsetX;
 /** @type {number} */
CKEDITOR.config.prototype.floatSpaceDockedOffsetY;
 /** @type {number} */
CKEDITOR.config.prototype.floatSpacePinnedOffsetX;
 /** @type {number} */
CKEDITOR.config.prototype.floatSpacePinnedOffsetY;
 /** @type {boolean} */
CKEDITOR.config.prototype.floatSpacePreferRight;
 /** @type {string} */
CKEDITOR.config.prototype.fontSize_defaultLabel;
 /** @type {string} */
CKEDITOR.config.prototype.fontSize_sizes;
 /** @type {!CKEDITOR.config.styleObject} */
CKEDITOR.config.prototype.fontSize_style;
 /** @type {string} */
CKEDITOR.config.prototype.font_defaultLabel;
 /** @type {string} */
CKEDITOR.config.prototype.font_names;
 /** @type {!CKEDITOR.config.styleObject} */
CKEDITOR.config.prototype.font_style;
 /** @type {boolean} */
CKEDITOR.config.prototype.forceEnterMode;
 /** @type {boolean} */
CKEDITOR.config.prototype.forcePasteAsPlainText;
 /** @type {boolean} */
CKEDITOR.config.prototype.forceSimpleAmpersand;
 /** @type {!CKEDITOR.config.styleObject} */
CKEDITOR.config.prototype.format_address;
 /** @type {!CKEDITOR.config.styleObject} */
CKEDITOR.config.prototype.format_div;
 /** @type {!CKEDITOR.config.styleObject} */
CKEDITOR.config.prototype.format_h1;
 /** @type {!CKEDITOR.config.styleObject} */
CKEDITOR.config.prototype.format_h2;
 /** @type {!CKEDITOR.config.styleObject} */
CKEDITOR.config.prototype.format_h3;
 /** @type {!CKEDITOR.config.styleObject} */
CKEDITOR.config.prototype.format_h4;
 /** @type {!CKEDITOR.config.styleObject} */
CKEDITOR.config.prototype.format_h5;
 /** @type {!CKEDITOR.config.styleObject} */
CKEDITOR.config.prototype.format_h6;
 /** @type {!CKEDITOR.config.styleObject} */
CKEDITOR.config.prototype.format_p;
 /** @type {!CKEDITOR.config.styleObject} */
CKEDITOR.config.prototype.format_pre;
 /** @type {string} */
CKEDITOR.config.prototype.format_tags;
 /** @type {boolean} */
CKEDITOR.config.prototype.fullPage;
 /** @type {boolean} */
CKEDITOR.config.prototype.grayt_autoStartup;
 /** @type {(string|number)} */
CKEDITOR.config.prototype.height;
 /** @type {boolean} */
CKEDITOR.config.prototype.htmlEncodeOutput;
 /** @type {boolean} */
CKEDITOR.config.prototype.ignoreEmptyParagraph;
 /** @type {!Array<string>} */
CKEDITOR.config.prototype.image2_alignClasses;
 /** @type {string} */
CKEDITOR.config.prototype.image2_captionedClass;
 /** @type {boolean} */
CKEDITOR.config.prototype.image2_disableResizer;
 /** @type {boolean} */
CKEDITOR.config.prototype.image2_prefillDimensions;
 /** @type {string} */
CKEDITOR.config.prototype.imageUploadUrl;
 /** @type {boolean} */
CKEDITOR.config.prototype.image_prefillDimensions;
 /** @type {string} */
CKEDITOR.config.prototype.image_previewText;
 /** @type {boolean} */
CKEDITOR.config.prototype.image_removeLinkByEmptyUrl;
 /** @type {!Array<string>} */
CKEDITOR.config.prototype.indentClasses;
 /** @type {number} */
CKEDITOR.config.prototype.indentOffset;
 /** @type {string} */
CKEDITOR.config.prototype.indentUnit;
 /** @type {boolean} */
CKEDITOR.config.prototype.jqueryOverrideVal;
 /** @type {!Array<string>} */
CKEDITOR.config.prototype.justifyClasses;
 /** @type {!Array<?>} */
CKEDITOR.config.prototype.keystrokes;
 /** @type {string} */
CKEDITOR.config.prototype.language;
 /** @type {!Array<string>} */
CKEDITOR.config.prototype.language_list;
 /** @type {boolean} */
CKEDITOR.config.prototype.linkJavaScriptLinksAllowed;
 /** @type {boolean} */
CKEDITOR.config.prototype.linkShowAdvancedTab;
 /** @type {boolean} */
CKEDITOR.config.prototype.linkShowTargetTab;
 /** @type {string} */
CKEDITOR.config.prototype.magicline_color;
 /** @type {boolean} */
CKEDITOR.config.prototype.magicline_everywhere;
 /** @type {number} */
CKEDITOR.config.prototype.magicline_holdDistance;
 /** @type {number} */
CKEDITOR.config.prototype.magicline_keystrokeNext;
 /** @type {number} */
CKEDITOR.config.prototype.magicline_keystrokePrevious;
 /** @type {number} */
CKEDITOR.config.prototype.magicline_tabuList;
 /** @type {number} */
CKEDITOR.config.prototype.magicline_triggerOffset;
 /** @type {string} */
CKEDITOR.config.prototype.mathJaxLib;
 /** @type {string} */
CKEDITOR.config.prototype.menu_groups;
 /** @type {string} */
CKEDITOR.config.prototype.menu_subMenuDelay;
 /** @type {string} */
CKEDITOR.config.prototype.newpage_html;
 /** @type {number} */
CKEDITOR.config.prototype.notification_duration;
 /** @type {!CKEDITOR.editor.eventObject} */
CKEDITOR.config.prototype.on;
 /** @type {string} */
CKEDITOR.config.prototype.pasteFilter;
 /** @type {string} */
CKEDITOR.config.prototype.pasteFromWordCleanupFile;
 /** @type {boolean} */
CKEDITOR.config.prototype.pasteFromWordNumberedHeadingToList;
 /** @type {boolean} */
CKEDITOR.config.prototype.pasteFromWordPromptCleanup;
 /** @type {boolean} */
CKEDITOR.config.prototype.pasteFromWordRemoveFontStyles;
 /** @type {boolean} */
CKEDITOR.config.prototype.pasteFromWorkRemoveStyles;
 /** @type {string} */
CKEDITOR.config.prototype.plugins;
 /** @type {!Array<!RegExp>} */
CKEDITOR.config.prototype.protectedSource;
 /** @type {boolean} */
CKEDITOR.config.prototype.readOnly;
 /** @type {string} */
CKEDITOR.config.prototype.removeButtons;
 /** @type {string} */
CKEDITOR.config.prototype.removeDialogTabs;
 /** @type {string} */
CKEDITOR.config.prototype.removeFormatAttributes;
 /** @type {string} */
CKEDITOR.config.prototype.removeFormatTags;
 /** @type {string} */
CKEDITOR.config.prototype.removePlugins;
 /** @type {string} */
CKEDITOR.config.prototype.resize_dir;
 /** @type {boolean} */
CKEDITOR.config.prototype.resize_enabled;
 /** @type {number} */
CKEDITOR.config.prototype.resize_maxHeight;
 /** @type {number} */
CKEDITOR.config.prototype.resize_maxWidth;
 /** @type {number} */
CKEDITOR.config.prototype.resize_minHeight;
 /** @type {number} */
CKEDITOR.config.prototype.resize_minWidth;
 /** @type {boolean} */
CKEDITOR.config.prototype.scayt_autoStartup;
 /** @type {string} */
CKEDITOR.config.prototype.scayt_contextCommands;
 /** @type {string} */
CKEDITOR.config.prototype.scayt_contextMenuItemsOrder;
 /** @type {string} */
CKEDITOR.config.prototype.scayt_customDictionaryIds;
 /** @type {string} */
CKEDITOR.config.prototype.scayt_customerId;
 /** @type {(string|!Array<string>)} */
CKEDITOR.config.prototype.scayt_disableOptionsStorage;
 /** @type {string} */
CKEDITOR.config.prototype.scayt_elementsToIgnore;
 /** @type {string} */
CKEDITOR.config.prototype.scayt_handleCheckDirty;
 /** @type {string} */
CKEDITOR.config.prototype.scayt_handleUndoRedo;
 /** @type {boolean} */
CKEDITOR.config.prototype.scayt_ignoreAllCapsWords;
 /** @type {boolean} */
CKEDITOR.config.prototype.scayt_ignoreDomainNames;
 /** @type {boolean} */
CKEDITOR.config.prototype.scayt_ignoreWordsWithMixedCases;
 /** @type {boolean} */
CKEDITOR.config.prototype.scayt_ignoreWordsWithNumbers;
 /** @type {boolean} */
CKEDITOR.config.prototype.scayt_inlineModeImmediateMarkup;
 /** @type {number} */
CKEDITOR.config.prototype.scayt_maxSuggestions;
 /** @type {number} */
CKEDITOR.config.prototype.scayt_minWordLength;
 /** @type {string} */
CKEDITOR.config.prototype.scayt_moreSuggestions;
 /** @type {boolean} */
CKEDITOR.config.prototype.scayt_multiLanguageMode;
 /** @type {!Object} */
CKEDITOR.config.prototype.scayt_multiLanguageStyles;
 /** @type {string} */
CKEDITOR.config.prototype.scayt_sLang;
 /** @type {string} */
CKEDITOR.config.prototype.scayt_serviceHost;
 /** @type {string} */
CKEDITOR.config.prototype.scayt_servicePath;
 /** @type {string} */
CKEDITOR.config.prototype.scayt_servicePort;
 /** @type {string} */
CKEDITOR.config.prototype.scayt_serviceProtocol;
 /** @type {string} */
CKEDITOR.config.prototype.scayt_srcUrl;
 /** @type {string} */
CKEDITOR.config.prototype.scayt_uiTabs;
 /** @type {string} */
CKEDITOR.config.prototype.scayt_userDictionaryName;
 /** @type {!CKEDITOR.sharedSpace} */
CKEDITOR.config.prototype.sharedSpaces;
 /** @type {number} */
CKEDITOR.config.prototype.shiftEnterMode;
 /** @type {string} */
CKEDITOR.config.prototype.skin;
 /** @type {number} */
CKEDITOR.config.prototype.smiley_columns;
 /** @type {!Array<string>} */
CKEDITOR.config.prototype.smiley_descriptions;
 /** @type {!Array<string>} */
CKEDITOR.config.prototype.smiley_images;
 /** @type {string} */
CKEDITOR.config.prototype.smiley_path;
 /** @type {number} */
CKEDITOR.config.prototype.sourceAreaTabSize;
 /** @type {!Array<?>} */
CKEDITOR.config.prototype.specialChars;
 /** @type {boolean} */
CKEDITOR.config.prototype.startupFocus;
 /** @type {string} */
CKEDITOR.config.prototype.startupMode;
 /** @type {boolean} */
CKEDITOR.config.prototype.startupOutlineBlocks;
 /** @type {boolean} */
CKEDITOR.config.prototype.startupShowBorders;
 /** @type {(string|boolean|!Array<!CKEDITOR.config.styleObject>)} */
CKEDITOR.config.prototype.stylesSet;
 /** @type {!RegExp} */
CKEDITOR.config.prototype.stylesheetParser_skipSelectors;
 /** @type {!RegExp} */
CKEDITOR.config.prototype.stylesheetParser_validSelectors;
 /** @type {number} */
CKEDITOR.config.prototype.tabIndex;
 /** @type {number} */
CKEDITOR.config.prototype.tabSpaces;
 /** @type {string} */
CKEDITOR.config.prototype.templates;
 /** @type {!Object} */
CKEDITOR.config.prototype.templates_files;
 /** @type {boolean} */
CKEDITOR.config.prototype.templates_replaceContent;
 /** @type {(string|boolean)} */
CKEDITOR.config.prototype.title;
 /** @type {(string|!Array<(string|!Array<string>)>)} */
CKEDITOR.config.prototype.toolbar;
 /** @type {boolean} */
CKEDITOR.config.prototype.toolbarCanCollapse;
 /** @type {boolean} */
CKEDITOR.config.prototype.toolbarGroupCycling;
 /** @type {!Array<!CKEDITOR.toolbarGroups>} */
CKEDITOR.config.prototype.toolbarGroups;
 /** @type {string} */
CKEDITOR.config.prototype.toolbarLocation;
 /** @type {boolean} */
CKEDITOR.config.prototype.toolbarStartupExpanded;
 /** @type {string} */
CKEDITOR.config.prototype.uiColor;
 /** @type {number} */
CKEDITOR.config.prototype.undoStackSize;
 /** @type {string} */
CKEDITOR.config.prototype.uploadUrl;
 /** @type {boolean} */
CKEDITOR.config.prototype.useComputedState;
 /** @type {(string|number)} */
CKEDITOR.config.prototype.width;
 /** @type {string} */
CKEDITOR.config.prototype.wsc_cmd;
 /** @type {string} */
CKEDITOR.config.prototype.wsc_customDictionaryIds;
 /** @type {string} */
CKEDITOR.config.prototype.wsc_customLoaderScript;
 /** @type {string} */
CKEDITOR.config.prototype.wsc_customerId;
 /** @type {string} */
CKEDITOR.config.prototype.wsc_lang;
 /** @type {string} */
CKEDITOR.config.prototype.wsc_userDictionaryName;
/**
 * @record
 * @struct
 */
CKEDITOR.feature = function() {};
/**
 * @record
 * @struct
 */
CKEDITOR.sharedSpace = function() {};
 /** @type {(string|!HTMLElement)} */
CKEDITOR.sharedSpace.prototype.top;
 /** @type {(string|!HTMLElement)} */
CKEDITOR.sharedSpace.prototype.bottom;
/**
 * @record
 * @struct
 */
CKEDITOR.style = function() {};
/**
 * @record
 * @struct
 */
CKEDITOR.editable = function() {};

/**
 * @constructor
 * @struct
 */
CKEDITOR.menu = function() {};

/**
 * @param {?} item
 * @return {void}
 */
CKEDITOR.menu.prototype.add = function(item) {};

/**
 * @param {function(!CKEDITOR.dom.element, !CKEDITOR.dom.selection, !CKEDITOR.dom.elementPath): ?} listenerFn
 * @return {void}
 */
CKEDITOR.menu.prototype.addListener = function(listenerFn) {};

/**
 * @param {boolean=} returnFocus
 * @return {void}
 */
CKEDITOR.menu.prototype.hide = function(returnFocus) {};

/**
 * @return {void}
 */
CKEDITOR.menu.prototype.removeAll = function() {};

/**
 * @param {!CKEDITOR.dom.element} offsetParent
 * @param {number=} corner
 * @param {number=} offsetX
 * @param {number=} offsetY
 * @return {void}
 */
CKEDITOR.menu.prototype.show = function(offsetParent, corner, offsetX, offsetY) {};
/** @const */
CKEDITOR.plugins = {};

/**
 * @constructor
 * @struct
 * @param {!CKEDITOR.editor} editor
 */
CKEDITOR.plugins.contextMenu = function(editor) {};

/**
 * @param {!CKEDITOR.dom.element} element
 * @param {boolean=} nativeContextMenuOnCtrl
 * @return {void}
 */
CKEDITOR.plugins.contextMenu.prototype.addTarget = function(element, nativeContextMenuOnCtrl) {};

/**
 * @param {!CKEDITOR.dom.element} offsetParent
 * @param {number=} corner
 * @param {number=} offsetX
 * @param {number=} offsetY
 * @return {void}
 */
CKEDITOR.plugins.contextMenu.prototype.open = function(offsetParent, corner, offsetX, offsetY) {};
/** @const */
CKEDITOR.plugins.link = {};
 /** @type {boolean} */
CKEDITOR.plugins.link.emptyAnchorFix;
 /** @type {boolean} */
CKEDITOR.plugins.link.fakeAnchor;
 /** @type {boolean} */
CKEDITOR.plugins.link.synAnchorSelector;

/**
 * @param {!CKEDITOR.editor} editor
 * @return {!Array<!CKEDITOR.dom.element>}
 */
CKEDITOR.plugins.link.getEditorAnchors = function(editor) {};

/**
 * @param {!CKEDITOR.editor} editor
 * @return {!CKEDITOR.dom.elementPath}
 */
CKEDITOR.plugins.link.getSelectedLink = function(editor) {};

/**
 * @param {!CKEDITOR.editor} editor
 * @param {!CKEDITOR.dom.element} element
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.plugins.link.tryRestoreFakeAnchor = function(editor, element) {};
/** @const */
CKEDITOR.plugins.widget = {};
/** @const */
CKEDITOR.plugins.widget.nestedEditable = {};
/**
 * @record
 * @struct
 */
CKEDITOR.plugins.widget.nestedEditable.definition = function() {};
 /** @type {?} */
CKEDITOR.plugins.widget.nestedEditable.definition.prototype.allowedContent;
 /** @type {string} */
CKEDITOR.plugins.widget.nestedEditable.definition.prototype.pathName;
 /** @type {string} */
CKEDITOR.plugins.widget.nestedEditable.definition.prototype.selector;
 /** @type {!CKEDITOR.editor} */
CKEDITOR.plugins.widget.nestedEditable.prototype.editor;
 /** @type {number} */
CKEDITOR.plugins.widget.nestedEditable.prototype.enterMode;
 /** @type {!CKEDITOR.filter} */
CKEDITOR.plugins.widget.nestedEditable.prototype.filter;
 /** @type {number} */
CKEDITOR.plugins.widget.nestedEditable.prototype.shiftEnterMode;

/**
 * @return {string}
 */
CKEDITOR.plugins.widget.nestedEditable.prototype.getData = function() {};

/**
 * @param {string} data
 * @return {void}
 */
CKEDITOR.plugins.widget.nestedEditable.prototype.setData = function(data) {};
/**
 * @record
 * @struct
 */
CKEDITOR.plugins.widget.definition = function() {};
 /** @type {?} */
CKEDITOR.plugins.widget.definition.prototype.allowedContent;
 /** @type {string} */
CKEDITOR.plugins.widget.definition.prototype.button;
 /** @type {!Object} */
CKEDITOR.plugins.widget.definition.prototype.contentForms;
 /** @type {!Object} */
CKEDITOR.plugins.widget.definition.prototype.contentTransformations;
 /** @type {(!Object|!Function)} */
CKEDITOR.plugins.widget.definition.prototype.data;
 /** @type {!Object} */
CKEDITOR.plugins.widget.definition.prototype.defaults;
 /** @type {string} */
CKEDITOR.plugins.widget.definition.prototype.dialog;
 /** @type {(string|!Function)} */
CKEDITOR.plugins.widget.definition.prototype.downcast;
 /** @type {!Object} */
CKEDITOR.plugins.widget.definition.prototype.downcasts;
 /** @type {boolean} */
CKEDITOR.plugins.widget.definition.prototype.draggable;
 /** @type {!Function} */
CKEDITOR.plugins.widget.definition.prototype.edit;
 /** @type {!Object} */
CKEDITOR.plugins.widget.definition.prototype.editables;
 /** @type {!Function} */
CKEDITOR.plugins.widget.definition.prototype.init;
 /** @type {boolean} */
CKEDITOR.plugins.widget.definition.prototype.inline;
 /** @type {!Function} */
CKEDITOR.plugins.widget.definition.prototype.insert;
 /** @type {boolean} */
CKEDITOR.plugins.widget.definition.prototype.mask;
 /** @type {string} */
CKEDITOR.plugins.widget.definition.prototype.name;
 /** @type {!Object} */
CKEDITOR.plugins.widget.definition.prototype.parts;
 /** @type {string} */
CKEDITOR.plugins.widget.definition.prototype.pathName;
 /** @type {(string|!CKEDITOR.style)} */
CKEDITOR.plugins.widget.definition.prototype.requiredContent;
 /** @type {!Function} */
CKEDITOR.plugins.widget.definition.prototype.styleToAllowedContentRules;
 /** @type {string} */
CKEDITOR.plugins.widget.definition.prototype.styleableElements;
 /** @type {(string|!CKEDITOR.template)} */
CKEDITOR.plugins.widget.definition.prototype.template;
 /** @type {(string|!Function)} */
CKEDITOR.plugins.widget.definition.prototype.upcast;
 /** @type {number} */
CKEDITOR.plugins.widget.definition.prototype.upcastPriority;
 /** @type {!Object} */
CKEDITOR.plugins.widget.definition.prototype.upcasts;

/**
 * @return {!CKEDITOR.feature}
 */
CKEDITOR.plugins.widget.definition.prototype.toFeature = function() {};
/**
 * @constructor
 * @struct
 */
CKEDITOR.plugins.widget.repository = function() {};

/**
 * @param {string} name
 * @param {!CKEDITOR.plugins.widget.definition} widgetDef
 * @return {void}
 */
CKEDITOR.plugins.widget.repository.prototype.add = function(name, widgetDef) {};

/**
 * @param {!Function} callback
 * @return {void}
 */
CKEDITOR.plugins.widget.repository.prototype.addUpcastCallback = function(callback) {};

/**
 * @return {void}
 */
CKEDITOR.plugins.widget.repository.prototype.capture = function() {};

/**
 * @return {void}
 */
CKEDITOR.plugins.widget.repository.prototype.checkSelection = function() {};

/**
 * @param {{initOnlyNew: boolean, focusInited: boolean}=} options
 * @return {void}
 */
CKEDITOR.plugins.widget.repository.prototype.checkWidgets = function(options) {};

/**
 * @param {string} name
 * @param {{errorProof: boolean}=} meta
 * @return {void}
 */
CKEDITOR.plugins.widget.repository.prototype.define = function(name, meta) {};

/**
 * @param {!CKEDITOR.plugins.widget} widget
 * @return {void}
 */
CKEDITOR.plugins.widget.repository.prototype.del = function(widget) {};

/**
 * @param {!CKEDITOR.plugins.widget} widget
 * @param {boolean=} offline
 * @return {void}
 */
CKEDITOR.plugins.widget.repository.prototype.destroy = function(widget, offline) {};

/**
 * @param {boolean=} offline
 * @return {void}
 */
CKEDITOR.plugins.widget.repository.prototype.destroyAll = function(offline) {};

/**
 * @param {?} container
 * @return {void}
 */
CKEDITOR.plugins.widget.repository.prototype.finalizeCreation = function(container) {};

/**
 * @param {string} eventName
 * @param {!Object} data
 * @param {!CKEDITOR.editor} editor
 * @return {?}
 */
CKEDITOR.plugins.widget.repository.prototype.fire = function(eventName, data, editor) {};

/**
 * @param {?} element
 * @param {boolean} checkWrapperOnly
 * @return {!CKEDITOR.plugins.widget}
 */
CKEDITOR.plugins.widget.repository.prototype.getByElement = function(element, checkWrapperOnly) {};

/**
 * @param {string} eventName
 * @return {boolean}
 */
CKEDITOR.plugins.widget.repository.prototype.hasListeners = function(eventName) {};

/**
 * @param {?} element
 * @param {!CKEDITOR.plugins.widget.definition=} widgetDef
 * @param {!Object=} startupData
 * @return {!CKEDITOR.plugins.widget}
 */
CKEDITOR.plugins.widget.repository.prototype.initOn = function(element, widgetDef, startupData) {};

/**
 * @param {?=} container
 * @return {!Array<!CKEDITOR.plugins.widget>}
 */
CKEDITOR.plugins.widget.repository.prototype.initOnAll = function(container) {};

/**
 * @param {string} eventName
 * @param {!Function} listenerFunction
 * @param {!Object=} scopeObj
 * @param {!Object=} listenerData
 * @param {number=} priority
 * @return {?}
 */
CKEDITOR.plugins.widget.repository.prototype.on = function(eventName, listenerFunction, scopeObj, listenerData, priority) {};

/**
 * @return {void}
 */
CKEDITOR.plugins.widget.repository.prototype.once = function() {};

/**
 * @param {string} classes
 * @return {?}
 */
CKEDITOR.plugins.widget.repository.prototype.parseElementClasses = function(classes) {};

/**
 * @param {string} eventName
 * @param {!Function} listenerFunction
 * @return {void}
 */
CKEDITOR.plugins.widget.repository.prototype.removeAllListeners = function(eventName, listenerFunction) {};

/**
 * @param {?} element
 * @param {string=} widgetName
 * @return {?}
 */
CKEDITOR.plugins.widget.repository.prototype.wrapElement = function(element, widgetName) {};
 /** @type {?} */
CKEDITOR.plugins.widget.prototype.allowedContent;
 /** @type {string} */
CKEDITOR.plugins.widget.prototype.button;
 /** @type {?} */
CKEDITOR.plugins.widget.prototype.contentForms;
 /** @type {?} */
CKEDITOR.plugins.widget.prototype.contentTransformations;
 /** @type {?} */
CKEDITOR.plugins.widget.prototype.data;
 /** @type {boolean} */
CKEDITOR.plugins.widget.prototype.dataReady;
 /** @type {?} */
CKEDITOR.plugins.widget.prototype.defaults;
 /** @type {!CKEDITOR.plugins.widget.definition} */
CKEDITOR.plugins.widget.prototype.definition;
 /** @type {string} */
CKEDITOR.plugins.widget.prototype.dialog;
 /** @type {(string|!Function)} */
CKEDITOR.plugins.widget.prototype.downcast;
 /** @type {?} */
CKEDITOR.plugins.widget.prototype.downcasts;
 /** @type {boolean} */
CKEDITOR.plugins.widget.prototype.draggable;
 /** @type {?} */
CKEDITOR.plugins.widget.prototype.editables;
 /** @type {!CKEDITOR.editor} */
CKEDITOR.plugins.widget.prototype.editor;
 /** @type {!CKEDITOR.dom.element} */
CKEDITOR.plugins.widget.prototype.element;
 /** @type {!CKEDITOR.plugins.widget.nestedEditable} */
CKEDITOR.plugins.widget.prototype.focusedEditable;
 /** @type {number} */
CKEDITOR.plugins.widget.prototype.id;
 /** @type {!Function} */
CKEDITOR.plugins.widget.prototype.init;
 /** @type {boolean} */
CKEDITOR.plugins.widget.prototype.inited;
 /** @type {boolean} */
CKEDITOR.plugins.widget.prototype.inline;
 /** @type {!Function} */
CKEDITOR.plugins.widget.prototype.insert;
 /** @type {boolean} */
CKEDITOR.plugins.widget.prototype.mask;
 /** @type {string} */
CKEDITOR.plugins.widget.prototype.name;
 /** @type {?} */
CKEDITOR.plugins.widget.prototype.parts;
 /** @type {string} */
CKEDITOR.plugins.widget.prototype.pathName;
 /** @type {boolean} */
CKEDITOR.plugins.widget.prototype.ready;
 /** @type {!CKEDITOR.plugins.widget.repository} */
CKEDITOR.plugins.widget.prototype.repository;
 /** @type {(string|!CKEDITOR.style)} */
CKEDITOR.plugins.widget.prototype.requiredContent;
 /** @type {!Function} */
CKEDITOR.plugins.widget.prototype.styleToAllowedContentRules;
 /** @type {string} */
CKEDITOR.plugins.widget.prototype.styleableElements;
 /** @type {!CKEDITOR.template} */
CKEDITOR.plugins.widget.prototype.template;
 /** @type {(string|!Function)} */
CKEDITOR.plugins.widget.prototype.upcast;
 /** @type {number} */
CKEDITOR.plugins.widget.prototype.upcastPriority;
 /** @type {?} */
CKEDITOR.plugins.widget.prototype.upcasts;
 /** @type {!CKEDITOR.dom.element} */
CKEDITOR.plugins.widget.prototype.wrapper;

/**
 * @param {string} className
 * @return {void}
 */
CKEDITOR.plugins.widget.prototype.addClass = function(className) {};

/**
 * @param {!CKEDITOR.style} style
 * @return {void}
 */
CKEDITOR.plugins.widget.prototype.applyStyle = function(style) {};

/**
 * @return {void}
 */
CKEDITOR.plugins.widget.prototype.capture = function() {};

/**
 * @param {!CKEDITOR.style} style
 * @return {boolean}
 */
CKEDITOR.plugins.widget.prototype.checkStyleActive = function(style) {};

/**
 * @param {string} name
 * @param {{errorProof: boolean}} meta
 * @return {void}
 */
CKEDITOR.plugins.widget.prototype.define = function(name, meta) {};

/**
 * @param {boolean=} offline
 * @return {void}
 */
CKEDITOR.plugins.widget.prototype.destroy = function(offline) {};

/**
 * @param {string} editableName
 * @param {boolean=} offline
 * @return {void}
 */
CKEDITOR.plugins.widget.prototype.destroyEditable = function(editableName, offline) {};

/**
 * @return {boolean}
 */
CKEDITOR.plugins.widget.prototype.edit = function() {};

/**
 * @param {string} eventName
 * @param {!Object=} data
 * @param {!CKEDITOR.editor=} editor
 * @return {?}
 */
CKEDITOR.plugins.widget.prototype.fire = function(eventName, data, editor) {};

/**
 * @param {string} eventName
 * @param {!Object=} data
 * @param {!CKEDITOR.editor=} editor
 * @return {?}
 */
CKEDITOR.plugins.widget.prototype.fireOnce = function(eventName, data, editor) {};

/**
 * @return {void}
 */
CKEDITOR.plugins.widget.prototype.focus = function() {};

/**
 * @return {?}
 */
CKEDITOR.plugins.widget.prototype.getClasses = function() {};

/**
 * @param {string} className
 * @param {boolean} Whether
 * @return {void}
 */
CKEDITOR.plugins.widget.prototype.hasClass = function(className, Whether) {};

/**
 * @param {string} eventName
 * @return {boolean}
 */
CKEDITOR.plugins.widget.prototype.hasListeners = function(eventName) {};

/**
 * @param {string} editableName
 * @param {!CKEDITOR.plugins.widget.nestedEditable.definition} definition
 * @return {boolean}
 */
CKEDITOR.plugins.widget.prototype.initEditable = function(editableName, definition) {};

/**
 * @return {boolean}
 */
CKEDITOR.plugins.widget.prototype.isInited = function() {};

/**
 * @return {boolean}
 */
CKEDITOR.plugins.widget.prototype.isReady = function() {};

/**
 * @param {string} eventName
 * @param {!Function} listenerFunction
 * @param {!Object=} scopeObj
 * @param {!Object=} listenerData
 * @param {number=} priority
 * @return {?}
 */
CKEDITOR.plugins.widget.prototype.on = function(eventName, listenerFunction, scopeObj, listenerData, priority) {};

/**
 * @return {void}
 */
CKEDITOR.plugins.widget.prototype.once = function() {};

/**
 * @return {void}
 */
CKEDITOR.plugins.widget.prototype.removeAllListeners = function() {};

/**
 * @param {string} className
 * @return {void}
 */
CKEDITOR.plugins.widget.prototype.removeClass = function(className) {};

/**
 * @param {string} eventName
 * @param {!Function} listenerFunction
 * @return {void}
 */
CKEDITOR.plugins.widget.prototype.removeListener = function(eventName, listenerFunction) {};

/**
 * @param {!CKEDITOR.style} style
 * @return {void}
 */
CKEDITOR.plugins.widget.prototype.removeStyle = function(style) {};

/**
 * @param {(string|!Object)} keyOrData
 * @param {!Object} value
 * @return {!CKEDITOR.plugins.widget}
 */
CKEDITOR.plugins.widget.prototype.setData = function(keyOrData, value) {};

/**
 * @param {boolean} selected
 * @return {!CKEDITOR.plugins.widget}
 */
CKEDITOR.plugins.widget.prototype.setFocused = function(selected) {};

/**
 * @param {boolean} selected
 * @return {!CKEDITOR.plugins.widget}
 */
CKEDITOR.plugins.widget.prototype.setSelected = function(selected) {};

/**
 * @return {!CKEDITOR.feature}
 */
CKEDITOR.plugins.widget.prototype.toFeature = function() {};

/**
 * @return {void}
 */
CKEDITOR.plugins.widget.prototype.updateDragHandlerPosition = function() {};
/**
 * @record
 * @struct
 */
CKEDITOR.plugins.IPluginDefinition = function() {};
 /** @type {boolean} */
CKEDITOR.plugins.IPluginDefinition.prototype.hidpi;
 /** @type {(string|!Array<string>)} */
CKEDITOR.plugins.IPluginDefinition.prototype.lang;
 /** @type {(string|!Array<string>)} */
CKEDITOR.plugins.IPluginDefinition.prototype.requires;
 /** @type {string} */
CKEDITOR.plugins.IPluginDefinition.prototype.icons;

/**
 * @param {!CKEDITOR.editor} editor
 * @return {?}
 */
CKEDITOR.plugins.IPluginDefinition.prototype.afterInit = function(editor) {};

/**
 * @param {!CKEDITOR.editor} editor
 * @return {?}
 */
CKEDITOR.plugins.IPluginDefinition.prototype.beforeInit = function(editor) {};

/**
 * @param {!CKEDITOR.editor} editor
 * @return {?}
 */
CKEDITOR.plugins.IPluginDefinition.prototype.init = function(editor) {};

/**
 * @return {?}
 */
CKEDITOR.plugins.IPluginDefinition.prototype.onLoad = function() {};

/**
 * @param {string} name
 * @param {!CKEDITOR.plugins.IPluginDefinition=} definition
 * @return {void}
 */
CKEDITOR.plugins.add = function(name, definition) {};

/**
 * @param {string} name
 * @param {string} path
 * @param {string} fileName
 * @return {void}
 */
CKEDITOR.plugins.addExternal = function(name, path, fileName) {};

/**
 * @param {string} name
 * @return {?}
 */
CKEDITOR.plugins.get = function(name) {};

/**
 * @param {string} name
 * @return {string}
 */
CKEDITOR.plugins.getFilePath = function(name) {};

/**
 * @param {string} name
 * @return {string}
 */
CKEDITOR.plugins.getPath = function(name) {};

/**
 * @param {string} name
 * @param {!Function} callback
 * @param {!Object=} scope
 * @return {void}
 */
CKEDITOR.plugins.load = function(name, callback, scope) {};

/**
 * @param {string} pluginName
 * @param {string} languageCode
 * @param {?} languageEntries
 * @return {void}
 */
CKEDITOR.plugins.setLang = function(pluginName, languageCode, languageEntries) {};
/**
 * @record
 * @struct
 */
CKEDITOR.IMenuItemDefinition = function() {};
 /** @type {string} */
CKEDITOR.IMenuItemDefinition.prototype.label;
 /** @type {string} */
CKEDITOR.IMenuItemDefinition.prototype.command;
 /** @type {string} */
CKEDITOR.IMenuItemDefinition.prototype.group;
 /** @type {number} */
CKEDITOR.IMenuItemDefinition.prototype.order;

/**
 * @constructor
 * @struct
 * @param {!Object=} instanceConfig
 * @param {!CKEDITOR.dom.element=} element
 * @param {number=} mode
 */
CKEDITOR.editor = function(instanceConfig, element, mode) {};
 /** @type {number} */
CKEDITOR.editor.prototype.activeEnterMode;
 /** @type {!CKEDITOR.filter} */
CKEDITOR.editor.prototype.activeFilter;
 /** @type {number} */
CKEDITOR.editor.prototype.activeShiftEnterMode;
 /** @type {boolean} */
CKEDITOR.editor.prototype.blockless;
 /** @type {?} */
CKEDITOR.editor.prototype.config;
 /** @type {!CKEDITOR.dom.element} */
CKEDITOR.editor.prototype.container;
 /** @type {!CKEDITOR.plugins.contextMenu} */
CKEDITOR.editor.prototype.contextMenu;
 /** @type {!CKEDITOR.dataProcessor} */
CKEDITOR.editor.prototype.dataProcessor;
 /** @type {!CKEDITOR.dom.document} */
CKEDITOR.editor.prototype.document;
 /** @type {!CKEDITOR.dom.element} */
CKEDITOR.editor.prototype.element;
 /** @type {number} */
CKEDITOR.editor.prototype.elementMode;
 /** @type {number} */
CKEDITOR.editor.prototype.enterMode;
 /** @type {!CKEDITOR.filter} */
CKEDITOR.editor.prototype.filter;
 /** @type {!CKEDITOR.focusManager} */
CKEDITOR.editor.prototype.focusManager;
 /** @type {string} */
CKEDITOR.editor.prototype.id;
 /** @type {!CKEDITOR.keystrokeHandler} */
CKEDITOR.editor.prototype.keystrokeHandler;
 /** @type {?} */
CKEDITOR.editor.prototype.lang;
 /** @type {string} */
CKEDITOR.editor.prototype.langCode;
 /** @type {string} */
CKEDITOR.editor.prototype.mode;
 /** @type {string} */
CKEDITOR.editor.prototype.name;
 /** @type {?} */
CKEDITOR.editor.prototype.plugins;
 /** @type {boolean} */
CKEDITOR.editor.prototype.readOnly;
 /** @type {number} */
CKEDITOR.editor.prototype.shiftEnterMode;
 /** @type {string} */
CKEDITOR.editor.prototype.status;
 /** @type {number} */
CKEDITOR.editor.prototype.tabIndex;
 /** @type {?} */
CKEDITOR.editor.prototype.templates;
 /** @type {?} */
CKEDITOR.editor.prototype.title;
 /** @type {?} */
CKEDITOR.editor.prototype.toolbar;
 /** @type {!CKEDITOR.ui} */
CKEDITOR.editor.prototype.ui;
 /** @type {!CKEDITOR.plugins.widget.repository} */
CKEDITOR.editor.prototype.widgets;
 /** @type {!CKEDITOR.dom.window} */
CKEDITOR.editor.prototype.window;
 /** @type {?} */
CKEDITOR.editor.prototype.commands;

/**
 * @param {string} commandName
 * @param {!CKEDITOR.commandDefinition} commandDefinition
 * @return {void}
 */
CKEDITOR.editor.prototype.addCommand = function(commandName, commandDefinition) {};

/**
 * @param {!CKEDITOR.feature} feature
 * @return {boolean}
 */
CKEDITOR.editor.prototype.addFeature = function(feature) {};

/**
 * @param {string} name
 * @param {number=} order
 * @return {void}
 */
CKEDITOR.editor.prototype.addMenuGroup = function(name, order) {};

/**
 * @param {string} name
 * @param {!CKEDITOR.IMenuItemDefinition=} definition
 * @return {void}
 */
CKEDITOR.editor.prototype.addMenuItem = function(name, definition) {};

/**
 * @param {!Object<string,!CKEDITOR.IMenuItemDefinition>} definitions
 * @return {void}
 */
CKEDITOR.editor.prototype.addMenuItems = function(definitions) {};

/**
 * @param {string} mode
 * @param {function(): void} exec
 * @return {void}
 */
CKEDITOR.editor.prototype.addMode = function(mode, exec) {};

/**
 * @param {!Function} func
 * @return {void}
 */
CKEDITOR.editor.prototype.addRemoveFormatFilter = function(func) {};

/**
 * @param {!CKEDITOR.style} style
 * @return {void}
 */
CKEDITOR.editor.prototype.applyStyle = function(style) {};

/**
 * @param {!CKEDITOR.style} style
 * @param {!Function} callback
 * @return {void}
 */
CKEDITOR.editor.prototype.attachStyleStateChange = function(style, callback) {};

/**
 * @return {boolean}
 */
CKEDITOR.editor.prototype.checkDirty = function() {};

/**
 * @param {!Object} realElement
 * @param {!Object} className
 * @param {!Object} realElementType
 * @param {!Object} isResizable
 * @return {void}
 */
CKEDITOR.editor.prototype.createFakeElement = function(realElement, className, realElementType, isResizable) {};

/**
 * @param {!Object} realElement
 * @param {!Object} className
 * @param {!Object} realElementType
 * @param {!Object} isResizable
 * @return {void}
 */
CKEDITOR.editor.prototype.createFakeParserElement = function(realElement, className, realElementType, isResizable) {};

/**
 * @return {!CKEDITOR.dom.range}
 */
CKEDITOR.editor.prototype.createRange = function() {};

/**
 * @param {boolean=} noUpdate
 * @return {void}
 */
CKEDITOR.editor.prototype.destroy = function(noUpdate) {};

/**
 * @param {!CKEDITOR.dom.element|!CKEDITOR.editable} elementOrEditable
 * @return {void}
 */
CKEDITOR.editor.prototype.editable = function(elementOrEditable) {};

/**
 * @param {!CKEDITOR.dom.node=} startNode
 * @return {!CKEDITOR.dom.elementPath}
 */
CKEDITOR.editor.prototype.elementPath = function(startNode) {};

/**
 * @param {string} commandName
 * @param {!Object=} data
 * @return {boolean}
 */
CKEDITOR.editor.prototype.execCommand = function(commandName, data) {};

/**
 * @return {void}
 */
CKEDITOR.editor.prototype.focus = function() {};

/**
 * @return {void}
 */
CKEDITOR.editor.prototype.forceNextSelectionCheck = function() {};

/**
 * @param {!Object} options
 * @param {!Function} callback
 * @return {void}
 */
CKEDITOR.editor.prototype.getClipboardData = function(options, callback) {};

/**
 * @param {!Function} callback
 * @param {!Object=} scope
 * @return {void}
 */
CKEDITOR.editor.prototype.getColorFromDialog = function(callback, scope) {};

/**
 * @param {string} commandName
 * @return {!CKEDITOR.command}
 */
CKEDITOR.editor.prototype.getCommand = function(commandName) {};

/**
 * @param {!Object=} noEvents
 * @return {string}
 */
CKEDITOR.editor.prototype.getData = function(noEvents) {};

/**
 * @param {string} name
 * @return {!Object}
 */
CKEDITOR.editor.prototype.getMenuItem = function(name) {};

/**
 * @param {boolean} forContents
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.editor.prototype.getResizable = function(forContents) {};

/**
 * @param {boolean=} forceRealSelection
 * @return {!CKEDITOR.dom.selection}
 */
CKEDITOR.editor.prototype.getSelection = function(forceRealSelection) {};

/**
 * @return {string}
 */
CKEDITOR.editor.prototype.getSnapshot = function() {};

/**
 * @param {!Function} callback
 * @return {void}
 */
CKEDITOR.editor.prototype.getStylesSet = function(callback) {};

/**
 * @return {string}
 */
CKEDITOR.editor.prototype.getUiColor = function() {};

/**
 * @param {!CKEDITOR.dom.element} element
 * @return {void}
 */
CKEDITOR.editor.prototype.insertElement = function(element) {};

/**
 * @param {string} html
 * @param {string=} mode
 * @return {void}
 */
CKEDITOR.editor.prototype.insertHtml = function(html, mode) {};

/**
 * @param {string} text
 * @return {void}
 */
CKEDITOR.editor.prototype.insertText = function(text) {};

/**
 * @param {!Object} snapshot
 * @return {void}
 */
CKEDITOR.editor.prototype.loadSnapshot = function(snapshot) {};

/**
 * @param {!CKEDITOR.dom.selection=} sel
 * @return {boolean}
 */
CKEDITOR.editor.prototype.lockSelection = function(sel) {};

/**
 * @param {string} dialogName
 * @param {!Function} callback
 * @return {!CKEDITOR.dialog}
 */
CKEDITOR.editor.prototype.openDialog = function(dialogName, callback) {};

/**
 * @param {string} url
 * @param {number|string=} width
 * @param {number|string=} height
 * @param {string=} options
 * @return {void}
 */
CKEDITOR.editor.prototype.popup = function(url, width, height, options) {};

/**
 * @param {string} name
 * @return {void}
 */
CKEDITOR.editor.prototype.removeMenuItem = function(name) {};

/**
 * @param {!CKEDITOR.style} style
 * @return {void}
 */
CKEDITOR.editor.prototype.removeStyle = function(style) {};

/**
 * @return {void}
 */
CKEDITOR.editor.prototype.resetDirty = function() {};

/**
 * @return {void}
 */
CKEDITOR.editor.prototype.resetUndo = function() {};

/**
 * @param {number|string} width
 * @param {number|string} height
 * @param {boolean=} isContentHeight
 * @param {boolean=} resizeInner
 * @return {void}
 */
CKEDITOR.editor.prototype.resize = function(width, height, isContentHeight, resizeInner) {};

/**
 * @param {!Object} fakeElement
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.editor.prototype.restoreRealElement = function(fakeElement) {};

/**
 * @param {boolean=} checkNow
 * @return {void}
 */
CKEDITOR.editor.prototype.selectionChange = function(checkNow) {};

/**
 * @param {number} enterMode
 * @param {number} shiftEnterMode
 * @return {void}
 */
CKEDITOR.editor.prototype.setActiveEnterMode = function(enterMode, shiftEnterMode) {};

/**
 * @param {!CKEDITOR.filter} filter
 * @return {void}
 */
CKEDITOR.editor.prototype.setActiveFilter = function(filter) {};

/**
 * @param {string} data
 * @param {{internal: boolean, callback: !Function, noSnapshot: boolean}=} options
 * @return {void}
 */
CKEDITOR.editor.prototype.setData = function(data, options) {};

/**
 * @param {number|!Array<?>} keystroke
 * @param {string|boolean=} behavior
 * @return {void}
 */
CKEDITOR.editor.prototype.setKeystroke = function(keystroke, behavior) {};

/**
 * @param {string} newMode
 * @param {!Function} callback
 * @return {void}
 */
CKEDITOR.editor.prototype.setMode = function(newMode, callback) {};

/**
 * @param {boolean=} isReadOnly
 * @return {void}
 */
CKEDITOR.editor.prototype.setReadOnly = function(isReadOnly) {};

/**
 * @param {string} color
 * @return {void}
 */
CKEDITOR.editor.prototype.setUiColor = function(color) {};

/**
 * @param {boolean=} restore
 * @return {void}
 */
CKEDITOR.editor.prototype.unlockSelection = function(restore) {};

/**
 * @return {void}
 */
CKEDITOR.editor.prototype.updateElement = function() {};
/**
 * @record
 * @struct
 */
CKEDITOR.editor.eventObject = function() {};
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.activeEnterModeChange;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.activeFilterChange;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.afterCommandExec;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.afterInsertHtml;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.afterPaste;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.afterSetData;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.afterUndoImage;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.ariaEditorHelpLabel;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.ariaWidget;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.autogrow;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.beforeCommandExec;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.beforeGetData;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.beforeModuleUnload;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.beforeSetMode;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.blur;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.change;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.configLoaded;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.contentDirChanged;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.contentDom;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.contentDomInvalidated;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.contentDomUnload;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.customConfigLoaded;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.dataFiltered;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.dataReady;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.destroy;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.dialogHide;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.dialogShow;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.dirChanged;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.doubleckick;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.dragend;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.dragstart;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.drop;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.elementsPathUpdate;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.fileUploadRequest;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.fileUploadResponse;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.floatingSpaceLayout;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.focus;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.getData;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.getSnapshot;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.insertElement;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.insertHtml;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.insertText;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.insanceReady;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.key;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.langLoaded;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.loadSnapshot;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.loaded;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.lockSnapshot;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.maximize;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.menuShow;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.mode;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.notificationHide;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.notificationShow;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.notificationUpdate;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.paste;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.pluginsLoaded;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.readOnly;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.removeFormatCleanup;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.required;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.resize;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.save;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.saveSnapshot;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.selectionChange;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.setData;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.stylesSet;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.template;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.toDataFormat;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.toHtml;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.unlockSnapshot;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.updateSnapshot;
 /** @type {function(!CKEDITOR.eventInfo): void} */
CKEDITOR.editor.eventObject.prototype.widgetDefinition;
/**
 * @record
 * @struct
 */
CKEDITOR.eventInfo = function() {};
 /** @type {?} */
CKEDITOR.eventInfo.prototype.data;
 /** @type {!CKEDITOR.editor} */
CKEDITOR.eventInfo.prototype.editor;
 /** @type {?} */
CKEDITOR.eventInfo.prototype.listenerData;
 /** @type {string} */
CKEDITOR.eventInfo.prototype.name;
 /** @type {?} */
CKEDITOR.eventInfo.prototype.sender;

/**
 * @return {void}
 */
CKEDITOR.eventInfo.prototype.cancel = function() {};

/**
 * @return {void}
 */
CKEDITOR.eventInfo.prototype.removeListener = function() {};

/**
 * @return {void}
 */
CKEDITOR.eventInfo.prototype.stop = function() {};
/**
 * @constructor
 * @struct
 */
CKEDITOR.filter = function() {};
/**
 * @record
 * @struct
 */
CKEDITOR.buttonDefinition = function() {};
 /** @type {string} */
CKEDITOR.buttonDefinition.prototype.icon;
 /** @type {number} */
CKEDITOR.buttonDefinition.prototype.iconOffset;
 /** @type {string} */
CKEDITOR.buttonDefinition.prototype.label;
 /** @type {string} */
CKEDITOR.buttonDefinition.prototype.command;
 /** @type {string} */
CKEDITOR.buttonDefinition.prototype.toolbar;
/**
 * @record
 * @struct
 */
CKEDITOR.template = function() {};
/**
 * @record
 * @struct
 */
CKEDITOR.dataProcessor = function() {};

/**
 * @param {string} html
 * @param {string} fixForBody
 * @return {void}
 */
CKEDITOR.dataProcessor.prototype.toDataFormat = function(html, fixForBody) {};

/**
 * @param {string} data
 * @param {string=} fixForBody
 * @return {void}
 */
CKEDITOR.dataProcessor.prototype.toHtml = function(data, fixForBody) {};

/**
 * @constructor
 * @struct
 * @param {!CKEDITOR.editor} editor
 */
CKEDITOR.htmlDataProcessor = function(editor) {};
 /** @type {!CKEDITOR.htmlParser.filter} */
CKEDITOR.htmlDataProcessor.prototype.dataFilter;
 /** @type {!CKEDITOR.htmlParser.filter} */
CKEDITOR.htmlDataProcessor.prototype.htmlFilter;
 /** @type {!CKEDITOR.htmlParser.basicWriter} */
CKEDITOR.htmlDataProcessor.prototype.writer;

/**
 * @param {string} html
 * @param {!Object=} options
 * @return {string}
 */
CKEDITOR.htmlDataProcessor.prototype.toDataFormat = function(html, options) {};

/**
 * @param {string} data
 * @param {!Object=} options
 * @return {string}
 */
CKEDITOR.htmlDataProcessor.prototype.toHtml = function(data, options) {};

/**
 * @constructor
 * @struct
 */
CKEDITOR.event = function() {};
 /** @type {boolean} */
CKEDITOR.event.prototype.useCapture;

/**
 * @return {void}
 */
CKEDITOR.event.prototype.capture = function() {};

/**
 * @param {string} name
 * @param {!Object} meta
 * @return {void}
 */
CKEDITOR.event.prototype.define = function(name, meta) {};

/**
 * @param {string} eventName
 * @param {!Object=} data
 * @param {!CKEDITOR.editor=} editor
 * @return {?}
 */
CKEDITOR.event.prototype.fire = function(eventName, data, editor) {};

/**
 * @param {string} eventName
 * @param {!Object=} data
 * @param {!CKEDITOR.editor=} editor
 * @return {?}
 */
CKEDITOR.event.prototype.fireOnce = function(eventName, data, editor) {};

/**
 * @param {string} eventName
 * @return {boolean}
 */
CKEDITOR.event.prototype.hasListeners = function(eventName) {};

/**
 * @param {string} eventName
 * @param {function(!CKEDITOR.eventInfo): void} listenerFunction
 * @param {!Object=} scopeObj
 * @param {!Object=} listenerData
 * @param {number=} priority
 * @return {void}
 */
CKEDITOR.event.prototype.on = function(eventName, listenerFunction, scopeObj, listenerData, priority) {};

/**
 * @param {string} eventName
 * @param {function(!CKEDITOR.eventInfo): void} listenerFunction
 * @param {!Object=} scopeObj
 * @param {!Object=} listenerData
 * @param {number=} priority
 * @return {void}
 */
CKEDITOR.event.prototype.once = function(eventName, listenerFunction, scopeObj, listenerData, priority) {};

/**
 * @return {void}
 */
CKEDITOR.event.prototype.removeAllListeners = function() {};

/**
 * @param {string} eventName
 * @param {function(!CKEDITOR.eventInfo): void} listenerFunction
 * @return {void}
 */
CKEDITOR.event.prototype.removeListener = function(eventName, listenerFunction) {};

/**
 * @param {!Object} targetObject
 * @return {void}
 */
CKEDITOR.event.implementOn = function(targetObject) {};
/**
 * @record
 * @struct
 */
CKEDITOR.commandDefinition = function() {};
 /** @type {boolean} */
CKEDITOR.commandDefinition.prototype.async;
 /** @type {boolean} */
CKEDITOR.commandDefinition.prototype.canUndo;
 /** @type {boolean} */
CKEDITOR.commandDefinition.prototype.context;
 /** @type {boolean} */
CKEDITOR.commandDefinition.prototype.contextSensitive;
 /** @type {boolean} */
CKEDITOR.commandDefinition.prototype.editorFocus;
 /** @type {!Object} */
CKEDITOR.commandDefinition.prototype.modes;
 /** @type {boolean} */
CKEDITOR.commandDefinition.prototype.startDisabled;
 /** @type {boolean} */
CKEDITOR.commandDefinition.prototype.readOnly;

/**
 * @param {!CKEDITOR.editor} editor
 * @param {!Object=} data
 * @return {boolean}
 */
CKEDITOR.commandDefinition.prototype.exec = function(editor, data) {};

/**
 * @param {!CKEDITOR.editor} editor
 * @param {!CKEDITOR.dom.elementPath} path
 * @return {void}
 */
CKEDITOR.commandDefinition.prototype.refresh = function(editor, path) {};
/**
 * @constructor
 * @struct
 */
CKEDITOR.dtd = function() {};

/**
 * @constructor
 * @struct
 * @param {!CKEDITOR.editor} editor
 */
CKEDITOR.ui = function(editor) {};

/**
 * @param {string} name
 * @param {!Object} type
 * @param {!Object} definition
 * @return {void}
 */
CKEDITOR.ui.prototype.add = function(name, type, definition) {};

/**
 * @param {string} name
 * @param {!CKEDITOR.buttonDefinition} definition
 * @return {void}
 */
CKEDITOR.ui.prototype.addButton = function(name, definition) {};

/**
 * @param {!Object} type
 * @param {!Object} handler
 * @return {void}
 */
CKEDITOR.ui.prototype.addHandler = function(type, handler) {};
/**
 * @constructor
 * @struct
 */
CKEDITOR.environmentConfig = function() {};
 /** @type {boolean} */
CKEDITOR.environmentConfig.prototype.air;
 /** @type {boolean} */
CKEDITOR.environmentConfig.prototype.chrome;
 /** @type {string} */
CKEDITOR.environmentConfig.prototype.cssClass;
 /** @type {boolean} */
CKEDITOR.environmentConfig.prototype.edge;
 /** @type {boolean} */
CKEDITOR.environmentConfig.prototype.gecko;
 /** @type {boolean} */
CKEDITOR.environmentConfig.prototype.hc;
 /** @type {boolean} */
CKEDITOR.environmentConfig.prototype.hidpi;
 /** @type {boolean} */
CKEDITOR.environmentConfig.prototype.iOS;
 /** @type {boolean} */
CKEDITOR.environmentConfig.prototype.ie;
 /** @type {boolean} */
CKEDITOR.environmentConfig.prototype.isCompatible;
 /** @type {boolean} */
CKEDITOR.environmentConfig.prototype.mac;
 /** @type {boolean} */
CKEDITOR.environmentConfig.prototype.needsBrFiller;
 /** @type {boolean} */
CKEDITOR.environmentConfig.prototype.needsNbspFiller;
 /** @type {boolean} */
CKEDITOR.environmentConfig.prototype.quirks;
 /** @type {boolean} */
CKEDITOR.environmentConfig.prototype.safari;
 /** @type {number} */
CKEDITOR.environmentConfig.prototype.version;
 /** @type {boolean} */
CKEDITOR.environmentConfig.prototype.webkit;

/**
 * @return {boolean}
 */
CKEDITOR.environmentConfig.prototype.secure = function() {};
/** @const */
CKEDITOR.ui.dialog = {};

/**
 * @constructor
 * @struct
 * @param {!CKEDITOR.dialog} dialog
 * @param {!CKEDITOR.dialog.definition.uiElement} elementDefinition
 * @param {!Array<?>} htmlList
 * @param {(string|!Function)=} nodeNameArg
 * @param {(!Object|!Function)=} stylesArg
 * @param {(!Object|!Function)=} attributesArg
 * @param {(string|!Function)=} contentsArg
 */
CKEDITOR.ui.dialog.uiElement = function(dialog, elementDefinition, htmlList, nodeNameArg, stylesArg, attributesArg, contentsArg) {};
 /** @type {?} */
CKEDITOR.ui.dialog.uiElement.prototype.eventProcessors;

/**
 * @param {!CKEDITOR.dialog} dialog
 * @param {string} key
 * @return {void}
 */
CKEDITOR.ui.dialog.uiElement.prototype.accessKeyDown = function(dialog, key) {};

/**
 * @param {!CKEDITOR.dialog} dialog
 * @param {string} key
 * @return {void}
 */
CKEDITOR.ui.dialog.uiElement.prototype.accessKeyUp = function(dialog, key) {};

/**
 * @return {void}
 */
CKEDITOR.ui.dialog.uiElement.prototype.disable = function() {};

/**
 * @return {void}
 */
CKEDITOR.ui.dialog.uiElement.prototype.enable = function() {};

/**
 * @return {!CKEDITOR.ui.dialog.uiElement}
 */
CKEDITOR.ui.dialog.uiElement.prototype.focus = function() {};

/**
 * @return {!CKEDITOR.dialog}
 */
CKEDITOR.ui.dialog.uiElement.prototype.getDialog = function() {};

/**
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.ui.dialog.uiElement.prototype.getElement = function() {};

/**
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.ui.dialog.uiElement.prototype.getInputElement = function() {};

/**
 * @return {?}
 */
CKEDITOR.ui.dialog.uiElement.prototype.getValue = function() {};

/**
 * @return {boolean}
 */
CKEDITOR.ui.dialog.uiElement.prototype.isChanged = function() {};

/**
 * @return {boolean}
 */
CKEDITOR.ui.dialog.uiElement.prototype.isEnabled = function() {};

/**
 * @return {boolean}
 */
CKEDITOR.ui.dialog.uiElement.prototype.isFocusable = function() {};

/**
 * @return {boolean}
 */
CKEDITOR.ui.dialog.uiElement.prototype.isVisible = function() {};

/**
 * @param {!CKEDITOR.dialog.definition.uiElement} definition
 * @return {!CKEDITOR.ui.dialog.uiElement}
 */
CKEDITOR.ui.dialog.uiElement.prototype.registerEvents = function(definition) {};

/**
 * @return {!CKEDITOR.ui.dialog.uiElement}
 */
CKEDITOR.ui.dialog.uiElement.prototype.selectParentTab = function() {};

/**
 * @param {!Object} value
 * @param {boolean} noChangeEvent
 * @return {!CKEDITOR.ui.dialog.uiElement}
 */
CKEDITOR.ui.dialog.uiElement.prototype.setValue = function(value, noChangeEvent) {};

/**
 * @constructor
 * @struct
 * @param {!CKEDITOR.dialog} dialog
 * @param {!CKEDITOR.dialog.definition.uiElement} elementDefinition
 * @param {!Array<?>} htmlList
 */
CKEDITOR.ui.dialog.button = function(dialog, elementDefinition, htmlList) {};

/**
 * @return {void}
 */
CKEDITOR.ui.dialog.button.prototype.accessKeyDown = function() {};

/**
 * @return {void}
 */
CKEDITOR.ui.dialog.button.prototype.accessKeyUp = function() {};

/**
 * @return {?}
 */
CKEDITOR.ui.dialog.button.prototype.click = function() {};

/**
 * @constructor
 * @struct
 * @param {!CKEDITOR.dialog} dialog
 * @param {!CKEDITOR.dialog.definition.uiElement} elementDefinition
 * @param {!Array<?>} htmlList
 */
CKEDITOR.ui.dialog.checkbox = function(dialog, elementDefinition, htmlList) {};

/**
 * @return {void}
 */
CKEDITOR.ui.dialog.checkbox.prototype.accessKeyUp = function() {};

/**
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.ui.dialog.checkbox.prototype.getInputElement = function() {};

/**
 * @return {boolean}
 */
CKEDITOR.ui.dialog.checkbox.prototype.getValue = function() {};

/**
 * @param {boolean} checked
 * @param {boolean} noChangeEvent
 * @return {?}
 */
CKEDITOR.ui.dialog.checkbox.prototype.setValue = function(checked, noChangeEvent) {};

/**
 * @constructor
 * @struct
 * @param {!CKEDITOR.dialog} dialog
 * @param {!Array<?>} childObjList
 * @param {!Array<?>} childHtmlList
 * @param {!Array<?>} htmlList
 * @param {!CKEDITOR.dialog.definition.uiElement} elementDefinition
 */
CKEDITOR.ui.dialog.fieldset = function(dialog, childObjList, childHtmlList, htmlList, elementDefinition) {};

/**
 * @constructor
 * @struct
 * @param {!CKEDITOR.dialog} dialog
 * @param {!CKEDITOR.dialog.definition.uiElement} elementDefinition
 * @param {!Array<?>} htmlList
 */
CKEDITOR.ui.dialog.file = function(dialog, elementDefinition, htmlList) {};

/**
 * @return {string}
 */
CKEDITOR.ui.dialog.file.prototype.getAction = function() {};

/**
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.ui.dialog.file.prototype.getInputElement = function() {};

/**
 * @param {!Object} definition
 * @return {!CKEDITOR.ui.dialog.file}
 */
CKEDITOR.ui.dialog.file.prototype.registerEvents = function(definition) {};

/**
 * @return {void}
 */
CKEDITOR.ui.dialog.file.prototype.reset = function() {};

/**
 * @return {void}
 */
CKEDITOR.ui.dialog.file.prototype.setInitValue = function() {};

/**
 * @return {!CKEDITOR.ui.dialog.file}
 */
CKEDITOR.ui.dialog.file.prototype.submit = function() {};

/**
 * @constructor
 * @struct
 * @param {!CKEDITOR.dialog} dialog
 * @param {!CKEDITOR.dialog.definition.uiElement} elementDefinition
 * @param {!Array<?>} htmlList
 */
CKEDITOR.ui.dialog.fileButton = function(dialog, elementDefinition, htmlList) {};

/**
 * @constructor
 * @struct
 * @param {!CKEDITOR.dialog} dialog
 * @param {!Array<?>} childObjList
 * @param {!Array<?>} childHtmlList
 * @param {!Array<?>} htmlList
 * @param {!CKEDITOR.dialog.definition.uiElement} elementDefinition
 */
CKEDITOR.ui.dialog.hbox = function(dialog, childObjList, childHtmlList, htmlList, elementDefinition) {};

/**
 * @param {number|!Array<number>} indices
 * @return {!CKEDITOR.ui.dialog.uiElement|!Array<!CKEDITOR.ui.dialog.uiElement>}
 */
CKEDITOR.ui.dialog.hbox.prototype.getChild = function(indices) {};

/**
 * @constructor
 * @struct
 * @param {!CKEDITOR.dialog} dialog
 * @param {!CKEDITOR.dialog.definition.uiElement} elementDefinition
 * @param {!Array<?>} htmlList
 */
CKEDITOR.ui.dialog.html = function(dialog, elementDefinition, htmlList) {};
/**
 * @extends {CKEDITOR.ui.dialog.uiElement}
 * @constructor
 * @struct
 */
CKEDITOR.ui.dialog.iframeElement = function() {};

/**
 * @constructor
 * @struct
 * @param {!CKEDITOR.dialog} dialog
 * @param {!CKEDITOR.dialog.definition.uiElement} elementDefinition
 * @param {!Array<?>} htmlList
 * @param {!Function} contentHtml
 */
CKEDITOR.ui.dialog.labeledElement = function(dialog, elementDefinition, htmlList, contentHtml) {};

/**
 * @return {string}
 */
CKEDITOR.ui.dialog.labeledElement.prototype.getLabel = function() {};

/**
 * @param {string} label
 * @return {!CKEDITOR.ui.dialog.labeledElement}
 */
CKEDITOR.ui.dialog.labeledElement.prototype.setlabel = function(label) {};

/**
 * @constructor
 * @struct
 * @param {!CKEDITOR.dialog} dialog
 * @param {!CKEDITOR.dialog.definition.uiElement} elementDefinition
 * @param {!Array<?>} htmlList
 */
CKEDITOR.ui.dialog.radio = function(dialog, elementDefinition, htmlList) {};

/**
 * @return {void}
 */
CKEDITOR.ui.dialog.radio.prototype.accessKeyUp = function() {};

/**
 * @return {string}
 */
CKEDITOR.ui.dialog.radio.prototype.getValue = function() {};

/**
 * @param {string} value
 * @param {boolean} noChangeEvent
 * @return {?}
 */
CKEDITOR.ui.dialog.radio.prototype.setValue = function(value, noChangeEvent) {};

/**
 * @constructor
 * @struct
 * @param {!CKEDITOR.dialog} dialog
 * @param {!CKEDITOR.dialog.definition.uiElement} elementDefinition
 * @param {!Array<?>} htmlList
 */
CKEDITOR.ui.dialog.select = function(dialog, elementDefinition, htmlList) {};

/**
 * @param {string} label
 * @param {string=} value
 * @param {number=} indexedDB
 * @return {!CKEDITOR.ui.dialog.select}
 */
CKEDITOR.ui.dialog.select.prototype.add = function(label, value, indexedDB) {};

/**
 * @return {!CKEDITOR.ui.dialog.select}
 */
CKEDITOR.ui.dialog.select.prototype.clear = function() {};

/**
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.ui.dialog.select.prototype.getInputElement = function() {};

/**
 * @param {number} index
 * @return {!CKEDITOR.ui.dialog.select}
 */
CKEDITOR.ui.dialog.select.prototype.remove = function(index) {};

/**
 * @constructor
 * @struct
 * @param {!CKEDITOR.dialog} dialog
 * @param {!CKEDITOR.dialog.definition.uiElement} elementDefinition
 * @param {!Array<?>} htmlList
 */
CKEDITOR.ui.dialog.textarea = function(dialog, elementDefinition, htmlList) {};

/**
 * @constructor
 * @struct
 * @param {!CKEDITOR.dialog} dialog
 * @param {!CKEDITOR.dialog.definition.uiElement} elementDefinition
 * @param {!Array<?>} htmlList
 */
CKEDITOR.ui.dialog.textInput = function(dialog, elementDefinition, htmlList) {};

/**
 * @return {void}
 */
CKEDITOR.ui.dialog.textInput.prototype.accessKeyUp = function() {};

/**
 * @return {?}
 */
CKEDITOR.ui.dialog.textInput.prototype.focus = function() {};

/**
 * @return {string}
 */
CKEDITOR.ui.dialog.textInput.prototype.getDirectionMarker = function() {};

/**
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.ui.dialog.textInput.prototype.getInputElement = function() {};

/**
 * @return {string}
 */
CKEDITOR.ui.dialog.textInput.prototype.getValue = function() {};

/**
 * @return {void}
 */
CKEDITOR.ui.dialog.textInput.prototype.select = function() {};

/**
 * @param {string} dir
 * @return {void}
 */
CKEDITOR.ui.dialog.textInput.prototype.setDirectionMarker = function(dir) {};

/**
 * @param {string} value
 * @param {boolean} noChangeEvent
 * @return {!CKEDITOR.ui.dialog.textInput}
 */
CKEDITOR.ui.dialog.textInput.prototype.setValue = function(value, noChangeEvent) {};

/**
 * @constructor
 * @struct
 * @param {!Object} editor
 * @param {string} dialogName
 */
CKEDITOR.dialog = function(editor, dialogName) {};
 /** @type {number} */
CKEDITOR.dialog.prototype.state;

/**
 * @param {!CKEDITOR.dom.element} element
 * @param {number=} index
 * @return {void}
 */
CKEDITOR.dialog.prototype.addFocusable = function(element, index) {};

/**
 * @param {!Object} contents
 * @return {void}
 */
CKEDITOR.dialog.prototype.addPage = function(contents) {};

/**
 * @param {string} id
 * @return {!Object}
 */
CKEDITOR.dialog.prototype.click = function(id) {};

/**
 * @return {void}
 */
CKEDITOR.dialog.prototype.commitContent = function() {};

/**
 * @param {string} id
 * @return {void}
 */
CKEDITOR.dialog.prototype.diableButton = function(id) {};

/**
 * @param {string} id
 * @return {void}
 */
CKEDITOR.dialog.prototype.enableButton = function(id) {};

/**
 * @param {!Function} fn
 * @return {!CKEDITOR.dialog}
 */
CKEDITOR.dialog.prototype.foreach = function(fn) {};

/**
 * @param {string} id
 * @return {!CKEDITOR.ui.dialog.button}
 */
CKEDITOR.dialog.prototype.getButton = function(id) {};

/**
 * @param {string} pageId
 * @param {string} elementId
 * @return {!CKEDITOR.ui.dialog.uiElement}
 */
CKEDITOR.dialog.prototype.getContentElement = function(pageId, elementId) {};

/**
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.dialog.prototype.getElement = function() {};

/**
 * @return {string}
 */
CKEDITOR.dialog.prototype.getName = function() {};

/**
 * @return {number}
 */
CKEDITOR.dialog.prototype.getPageCount = function() {};

/**
 * @return {!CKEDITOR.editor}
 */
CKEDITOR.dialog.prototype.getParentEditor = function() {};

/**
 * @return {!Object}
 */
CKEDITOR.dialog.prototype.getPosition = function() {};

/**
 * @return {!CKEDITOR.dom.element}
 */
CKEDITOR.dialog.prototype.getSelectedElement = function() {};

/**
 * @return {!Object}
 */
CKEDITOR.dialog.prototype.getSize = function() {};

/**
 * @param {string} pageId
 * @param {string} elementId
 * @return {!Object}
 */
CKEDITOR.dialog.prototype.getValueOf = function(pageId, elementId) {};

/**
 * @return {void}
 */
CKEDITOR.dialog.prototype.hide = function() {};

/**
 * @param {string} id
 * @return {void}
 */
CKEDITOR.dialog.prototype.hidePage = function(id) {};

/**
 * @return {void}
 */
CKEDITOR.dialog.prototype.layout = function() {};

/**
 * @param {number} x
 * @param {number} y
 * @param {boolean} save
 * @return {void}
 */
CKEDITOR.dialog.prototype.move = function(x, y, save) {};

/**
 * @return {!CKEDITOR.dialog}
 */
CKEDITOR.dialog.prototype.reset = function() {};

/**
 * @param {number} width
 * @param {number} height
 * @return {void}
 */
CKEDITOR.dialog.prototype.resize = function(width, height) {};

/**
 * @param {string} id
 * @return {void}
 */
CKEDITOR.dialog.prototype.selectPage = function(id) {};

/**
 * @param {number} state
 * @return {void}
 */
CKEDITOR.dialog.prototype.setState = function(state) {};

/**
 * @param {string} pageId
 * @param {string} elementId
 * @param {!Object} value
 * @return {void}
 */
CKEDITOR.dialog.prototype.setValueOf = function(pageId, elementId, value) {};

/**
 * @return {void}
 */
CKEDITOR.dialog.prototype.setupContent = function() {};

/**
 * @return {void}
 */
CKEDITOR.dialog.prototype.show = function() {};

/**
 * @param {string} id
 * @return {void}
 */
CKEDITOR.dialog.prototype.showPage = function(id) {};

/**
 * @return {void}
 */
CKEDITOR.dialog.prototype.updateStyle = function() {};
/** @const */
CKEDITOR.dialog.definition = {};
/**
 * @extends {CKEDITOR.dialog.definition.uiElement}
 * @record
 * @struct
 */
CKEDITOR.dialog.definition.button = function() {};
 /** @type {boolean} */
CKEDITOR.dialog.definition.button.prototype.disabled;
 /** @type {string} */
CKEDITOR.dialog.definition.button.prototype.label;
/**
 * @extends {CKEDITOR.dialog.definition.uiElement}
 * @record
 * @struct
 */
CKEDITOR.dialog.definition.checkbox = function() {};
 /** @type {string} */
CKEDITOR.dialog.definition.checkbox.prototype.default;
 /** @type {string} */
CKEDITOR.dialog.definition.checkbox.prototype.label;
 /** @type {!Function} */
CKEDITOR.dialog.definition.checkbox.prototype.validate;
/**
 * @record
 * @struct
 */
CKEDITOR.dialog.definition.content = function() {};
 /** @type {string} */
CKEDITOR.dialog.definition.content.prototype.accessKey;
 /** @type {!Array<!CKEDITOR.dialog.definition.uiElement>} */
CKEDITOR.dialog.definition.content.prototype.elements;
 /** @type {string} */
CKEDITOR.dialog.definition.content.prototype.id;
 /** @type {string} */
CKEDITOR.dialog.definition.content.prototype.label;
 /** @type {string} */
CKEDITOR.dialog.definition.content.prototype.title;
/**
 * @extends {CKEDITOR.dialog.definition.labeledElement}
 * @record
 * @struct
 */
CKEDITOR.dialog.definition.file = function() {};
 /** @type {string} */
CKEDITOR.dialog.definition.file.prototype.action;
 /** @type {string} */
CKEDITOR.dialog.definition.file.prototype.size;
 /** @type {!Function} */
CKEDITOR.dialog.definition.file.prototype.validate;
/**
 * @extends {CKEDITOR.dialog.definition.uiElement}
 * @record
 * @struct
 */
CKEDITOR.dialog.definition.fileButton = function() {};
 /** @type {string} */
CKEDITOR.dialog.definition.fileButton.prototype.filebrowser;
 /** @type {string} */
CKEDITOR.dialog.definition.fileButton.prototype.for;
 /** @type {string} */
CKEDITOR.dialog.definition.fileButton.prototype.label;
 /** @type {string} */
CKEDITOR.dialog.definition.fileButton.prototype.styles;
/**
 * @extends {CKEDITOR.dialog.definition.uiElement}
 * @record
 * @struct
 */
CKEDITOR.dialog.definition.hbox = function() {};
 /** @type {!Array<!CKEDITOR.ui.dialog.uiElement>} */
CKEDITOR.dialog.definition.hbox.prototype.children;
 /** @type {number} */
CKEDITOR.dialog.definition.hbox.prototype.height;
 /** @type {number} */
CKEDITOR.dialog.definition.hbox.prototype.padding;
 /** @type {!Function} */
CKEDITOR.dialog.definition.hbox.prototype.validate;
 /** @type {!Array<number>} */
CKEDITOR.dialog.definition.hbox.prototype.widths;
/**
 * @extends {CKEDITOR.dialog.definition.uiElement}
 * @record
 * @struct
 */
CKEDITOR.dialog.definition.html = function() {};
 /** @type {string} */
CKEDITOR.dialog.definition.html.prototype.html;
/**
 * @extends {CKEDITOR.dialog.definition.uiElement}
 * @record
 * @struct
 */
CKEDITOR.dialog.definition.labeledElement = function() {};
 /** @type {string} */
CKEDITOR.dialog.definition.labeledElement.prototype.controlStyle;
 /** @type {string} */
CKEDITOR.dialog.definition.labeledElement.prototype.inputStyle;
 /** @type {string} */
CKEDITOR.dialog.definition.labeledElement.prototype.label;
 /** @type {string} */
CKEDITOR.dialog.definition.labeledElement.prototype.labelLayout;
 /** @type {string} */
CKEDITOR.dialog.definition.labeledElement.prototype.labelStyle;
 /** @type {!Array<number>} */
CKEDITOR.dialog.definition.labeledElement.prototype.widths;
/**
 * @extends {CKEDITOR.dialog.definition.labeledElement}
 * @record
 * @struct
 */
CKEDITOR.dialog.definition.radio = function() {};
 /** @type {string} */
CKEDITOR.dialog.definition.radio.prototype.default;
 /** @type {(!Array<string>|!Array<!Array<string>>)} */
CKEDITOR.dialog.definition.radio.prototype.items;
 /** @type {!Function} */
CKEDITOR.dialog.definition.radio.prototype.validate;
/**
 * @extends {CKEDITOR.dialog.definition.labeledElement}
 * @record
 * @struct
 */
CKEDITOR.dialog.definition.select = function() {};
 /** @type {string} */
CKEDITOR.dialog.definition.select.prototype.default;
 /** @type {(!Array<string>|!Array<!Array<string>>)} */
CKEDITOR.dialog.definition.select.prototype.items;
 /** @type {boolean} */
CKEDITOR.dialog.definition.select.prototype.multiple;
 /** @type {number} */
CKEDITOR.dialog.definition.select.prototype.size;
 /** @type {!Function} */
CKEDITOR.dialog.definition.select.prototype.validate;
/**
 * @extends {CKEDITOR.dialog.definition.labeledElement}
 * @record
 * @struct
 */
CKEDITOR.dialog.definition.textarea = function() {};
 /** @type {boolean} */
CKEDITOR.dialog.definition.textarea.prototype.bidi;
 /** @type {number} */
CKEDITOR.dialog.definition.textarea.prototype.cols;
 /** @type {string} */
CKEDITOR.dialog.definition.textarea.prototype.default;
 /** @type {number} */
CKEDITOR.dialog.definition.textarea.prototype.rows;
 /** @type {!Function} */
CKEDITOR.dialog.definition.textarea.prototype.validate;
/**
 * @extends {CKEDITOR.dialog.definition.labeledElement}
 * @record
 * @struct
 */
CKEDITOR.dialog.definition.textInput = function() {};
 /** @type {boolean} */
CKEDITOR.dialog.definition.textInput.prototype.bidi;
 /** @type {string} */
CKEDITOR.dialog.definition.textInput.prototype.default;
 /** @type {number} */
CKEDITOR.dialog.definition.textInput.prototype.maxLength;
 /** @type {number} */
CKEDITOR.dialog.definition.textInput.prototype.size;
 /** @type {!Function} */
CKEDITOR.dialog.definition.textInput.prototype.validate;
/**
 * @record
 * @struct
 */
CKEDITOR.dialog.definition.uiElement = function() {};
 /** @type {string} */
CKEDITOR.dialog.definition.uiElement.prototype.align;
 /** @type {string} */
CKEDITOR.dialog.definition.uiElement.prototype.className;
 /** @type {function(!CKEDITOR.plugins.widget): void} */
CKEDITOR.dialog.definition.uiElement.prototype.commit;
 /** @type {string} */
CKEDITOR.dialog.definition.uiElement.prototype.id;
 /** @type {function(!CKEDITOR.ui.dialog.uiElement): void} */
CKEDITOR.dialog.definition.uiElement.prototype.onHide;
 /** @type {function(!CKEDITOR.ui.dialog.uiElement): void} */
CKEDITOR.dialog.definition.uiElement.prototype.onLoad;
 /** @type {function(!CKEDITOR.ui.dialog.uiElement): void} */
CKEDITOR.dialog.definition.uiElement.prototype.onShow;
 /** @type {(string|!Object|!CKEDITOR.style)} */
CKEDITOR.dialog.definition.uiElement.prototype.requiredcontent;
 /** @type {function(!CKEDITOR.plugins.widget): void} */
CKEDITOR.dialog.definition.uiElement.prototype.setup;
 /** @type {string} */
CKEDITOR.dialog.definition.uiElement.prototype.style;
 /** @type {string} */
CKEDITOR.dialog.definition.uiElement.prototype.title;
 /** @type {string} */
CKEDITOR.dialog.definition.uiElement.prototype.type;
/**
 * @extends {CKEDITOR.dialog.definition.uiElement}
 * @record
 * @struct
 */
CKEDITOR.dialog.definition.vbox = function() {};
 /** @type {!Array<!CKEDITOR.ui.dialog.uiElement>} */
CKEDITOR.dialog.definition.vbox.prototype.children;
 /** @type {boolean} */
CKEDITOR.dialog.definition.vbox.prototype.expand;
 /** @type {!Array<number>} */
CKEDITOR.dialog.definition.vbox.prototype.heights;
 /** @type {number} */
CKEDITOR.dialog.definition.vbox.prototype.padding;
 /** @type {string} */
CKEDITOR.dialog.definition.vbox.prototype.styles;
 /** @type {!Array<number>} */
CKEDITOR.dialog.definition.vbox.prototype.width;
/**
 * @record
 * @struct
 */
CKEDITOR.dialog.IDialogDefinition = function() {};
 /** @type {!Array<!CKEDITOR.dialog.definition.button>} */
CKEDITOR.dialog.IDialogDefinition.prototype.buttons;
 /** @type {!Array<!CKEDITOR.dialog.definition.content>} */
CKEDITOR.dialog.IDialogDefinition.prototype.contents;
 /** @type {number} */
CKEDITOR.dialog.IDialogDefinition.prototype.height;
 /** @type {number} */
CKEDITOR.dialog.IDialogDefinition.prototype.minHeight;
 /** @type {number} */
CKEDITOR.dialog.IDialogDefinition.prototype.minWidth;
 /** @type {!Function} */
CKEDITOR.dialog.IDialogDefinition.prototype.onCancel;
 /** @type {!Function} */
CKEDITOR.dialog.IDialogDefinition.prototype.onLoad;
 /** @type {!Function} */
CKEDITOR.dialog.IDialogDefinition.prototype.onOk;
 /** @type {!Function} */
CKEDITOR.dialog.IDialogDefinition.prototype.onShow;
 /** @type {number} */
CKEDITOR.dialog.IDialogDefinition.prototype.resizable;
 /** @type {string} */
CKEDITOR.dialog.IDialogDefinition.prototype.title;
 /** @type {number} */
CKEDITOR.dialog.IDialogDefinition.prototype.width;

/**
 * @param {string} name
 * @param {string|function(!CKEDITOR.editor): !CKEDITOR.dialog.IDialogDefinition} path_or_dialogDefinition
 * @return {void}
 */
CKEDITOR.dialog.add = function(name, path_or_dialogDefinition) {};

/**
 * @param {string} name
 * @param {string} title
 * @param {number} minWidth
 * @param {number} minHeight
 * @param {!Function=} onContentLoad
 * @param {!Object=} userDefinition
 * @return {void}
 */
CKEDITOR.dialog.addIframe = function(name, title, minWidth, minHeight, onContentLoad, userDefinition) {};

/**
 * @param {string} typeName
 * @param {!Function} builder
 * @return {void}
 */
CKEDITOR.dialog.addUIElement = function(typeName, builder) {};

/**
 * @return {void}
 */
CKEDITOR.dialog.cancelButton = function() {};

/**
 * @param {(string|number)} name
 * @return {void}
 */
CKEDITOR.dialog.exists = function(name) {};

/**
 * @return {!CKEDITOR.dialog}
 */
CKEDITOR.dialog.getCurrent = function() {};

/**
 * @param {!CKEDITOR.editor} editor
 * @param {string} dialogName
 * @param {string} tabName
 * @return {boolean}
 */
CKEDITOR.dialog.isTabEnabled = function(editor, dialogName, tabName) {};

/**
 * @return {void}
 */
CKEDITOR.dialog.okButton = function() {};
/** @const */
CKEDITOR.htmlParser = {};

/**
 * @constructor
 * @struct
 */
CKEDITOR.htmlParser.basicWriter = function() {};

/**
 * @param {string} tagName
 * @param {!Object} attributes
 * @return {void}
 */
CKEDITOR.htmlParser.basicWriter.prototype.openTag = function(tagName, attributes) {};

/**
 * @param {string} tagName
 * @param {boolean} isSelfClose
 * @return {void}
 */
CKEDITOR.htmlParser.basicWriter.prototype.openTagClose = function(tagName, isSelfClose) {};

/**
 * @param {string} attName
 * @param {string} attValue
 * @return {void}
 */
CKEDITOR.htmlParser.basicWriter.prototype.attribute = function(attName, attValue) {};

/**
 * @param {string} tagName
 * @return {void}
 */
CKEDITOR.htmlParser.basicWriter.prototype.closeTag = function(tagName) {};

/**
 * @param {string} text
 * @return {void}
 */
CKEDITOR.htmlParser.basicWriter.prototype.text = function(text) {};

/**
 * @param {string} comment
 * @return {void}
 */
CKEDITOR.htmlParser.basicWriter.prototype.comment = function(comment) {};

/**
 * @param {string} data
 * @return {void}
 */
CKEDITOR.htmlParser.basicWriter.prototype.write = function(data) {};

/**
 * @return {void}
 */
CKEDITOR.htmlParser.basicWriter.prototype.reset = function() {};

/**
 * @param {boolean} reset
 * @return {string}
 */
CKEDITOR.htmlParser.basicWriter.prototype.getHtml = function(reset) {};

/**
 * @constructor
 * @struct
 */
CKEDITOR.htmlParser.node = function() {};

/**
 * @param {boolean=} preserveChildren
 * @return {!CKEDITOR.htmlParser.node}
 */
CKEDITOR.htmlParser.node.prototype.remove = function(preserveChildren) {};

/**
 * @param {!CKEDITOR.htmlParser.node} node
 * @return {void}
 */
CKEDITOR.htmlParser.node.prototype.replaceWith = function(node) {};

/**
 * @param {!CKEDITOR.htmlParser.node} node
 * @return {void}
 */
CKEDITOR.htmlParser.node.prototype.insertAfter = function(node) {};

/**
 * @param {!CKEDITOR.htmlParser.node} node
 * @return {void}
 */
CKEDITOR.htmlParser.node.prototype.insertBefore = function(node) {};

/**
 * @param {string|!Object|!Function} condition
 * @return {!CKEDITOR.htmlParser.element}
 */
CKEDITOR.htmlParser.node.prototype.getAscendant = function(condition) {};

/**
 * @param {!CKEDITOR.htmlParser.element} wrapper
 * @return {!CKEDITOR.htmlParser.element}
 */
CKEDITOR.htmlParser.node.prototype.wrapWith = function(wrapper) {};

/**
 * @return {number}
 */
CKEDITOR.htmlParser.node.prototype.getIndex = function() {};

/**
 * @constructor
 * @struct
 * @param {!CKEDITOR.htmlParser.filterRulesDefinition=} rules
 */
CKEDITOR.htmlParser.filter = function(rules) {};
 /** @type {number} */
CKEDITOR.htmlParser.filter.prototype.id;
 /** @type {!CKEDITOR.htmlParser.filterRulesGroup} */
CKEDITOR.htmlParser.filter.prototype.elementNameRules;
 /** @type {!CKEDITOR.htmlParser.filterRulesGroup} */
CKEDITOR.htmlParser.filter.prototype.attributeNameRules;
 /** @type {?} */
CKEDITOR.htmlParser.filter.prototype.elementsRules;
 /** @type {?} */
CKEDITOR.htmlParser.filter.prototype.attributesRules;
 /** @type {!CKEDITOR.htmlParser.filterRulesGroup} */
CKEDITOR.htmlParser.filter.prototype.textRules;
 /** @type {!CKEDITOR.htmlParser.filterRulesGroup} */
CKEDITOR.htmlParser.filter.prototype.commentRules;
 /** @type {!CKEDITOR.htmlParser.filterRulesGroup} */
CKEDITOR.htmlParser.filter.prototype.rootRules;

/**
 * @param {!CKEDITOR.htmlParser.filterRulesDefinition} rules
 * @param {number|{priority: number, applyToAll: boolean}=} options
 * @return {void}
 */
CKEDITOR.htmlParser.filter.prototype.addRules = function(rules, options) {};

/**
 * @param {!CKEDITOR.htmlParser.node} node
 * @return {void}
 */
CKEDITOR.htmlParser.filter.prototype.applyTo = function(node) {};
/**
 * @record
 * @struct
 */
CKEDITOR.htmlParser.filterRulesDefinition = function() {};
/**
 * @constructor
 * @struct
 */
CKEDITOR.htmlParser.filterRulesGroup = function() {};
 /** @type {!Array<!Object>} */
CKEDITOR.htmlParser.filterRulesGroup.prototype.rules;

/**
 * @param {!Function|!Array<!Object>} rule
 * @param {number} priority
 * @param {!Object} options
 * @return {void}
 */
CKEDITOR.htmlParser.filterRulesGroup.prototype.add = function(rule, priority, options) {};

/**
 * @param {!Array<!Object>} rules
 * @param {number} priority
 * @param {!Object} options
 * @return {void}
 */
CKEDITOR.htmlParser.filterRulesGroup.prototype.addMany = function(rules, priority, options) {};

/**
 * @param {number} priority
 * @return {number}
 */
CKEDITOR.htmlParser.filterRulesGroup.prototype.findIndex = function(priority) {};

/**
 * @param {!Object} currentValue
 * @return {?}
 */
CKEDITOR.htmlParser.filterRulesGroup.prototype.exec = function(currentValue) {};

/**
 * @param {string} currentName
 * @return {string}
 */
CKEDITOR.htmlParser.filterRulesGroup.prototype.execOnName = function(currentName) {};

/**
 * @constructor
 * @struct
 * @param {string} value
 */
CKEDITOR.htmlParser.cdata = function(value) {};
 /** @type {number} */
CKEDITOR.htmlParser.cdata.prototype.type;

/**
 * @param {!CKEDITOR.htmlParser.basicWriter} writer
 * @return {void}
 */
CKEDITOR.htmlParser.cdata.prototype.writeHtml = function(writer) {};

/**
 * @constructor
 * @struct
 * @param {string} value
 */
CKEDITOR.htmlParser.comment = function(value) {};
 /** @type {number} */
CKEDITOR.htmlParser.comment.prototype.type;

/**
 * @param {!CKEDITOR.htmlParser.filter} filter
 * @return {boolean}
 */
CKEDITOR.htmlParser.comment.prototype.filter = function(filter) {};

/**
 * @param {!CKEDITOR.htmlParser.basicWriter} writer
 * @param {!CKEDITOR.htmlParser.filter} filter
 * @return {void}
 */
CKEDITOR.htmlParser.comment.prototype.writeHtml = function(writer, filter) {};

/**
 * @constructor
 * @struct
 * @param {string} name
 * @param {!Object} attributes
 */
CKEDITOR.htmlParser.element = function(name, attributes) {};
 /** @type {string} */
CKEDITOR.htmlParser.element.prototype.name;
 /** @type {?} */
CKEDITOR.htmlParser.element.prototype.attributes;
 /** @type {!Array<?>} */
CKEDITOR.htmlParser.element.prototype.children;
 /** @type {number} */
CKEDITOR.htmlParser.element.prototype.type;

/**
 * @param {!CKEDITOR.htmlParser.node} node
 * @return {number}
 */
CKEDITOR.htmlParser.element.prototype.add = function(node) {};

/**
 * @return {!CKEDITOR.htmlParser.element}
 */
CKEDITOR.htmlParser.element.prototype.clone = function() {};

/**
 * @param {!CKEDITOR.htmlParser.filter} filter
 * @return {boolean}
 */
CKEDITOR.htmlParser.element.prototype.filter = function(filter) {};

/**
 * @param {!CKEDITOR.htmlParser.filter} filter
 * @return {void}
 */
CKEDITOR.htmlParser.element.prototype.filterChildren = function(filter) {};

/**
 * @param {!CKEDITOR.htmlParser.basicWriter} writer
 * @param {!CKEDITOR.htmlParser.filter} filter
 * @return {void}
 */
CKEDITOR.htmlParser.element.prototype.writeHtml = function(writer, filter) {};

/**
 * @param {!CKEDITOR.htmlParser.basicWriter} writer
 * @param {!CKEDITOR.htmlParser.filter} filter
 * @return {void}
 */
CKEDITOR.htmlParser.element.prototype.writeChildrenHtml = function(writer, filter) {};

/**
 * @return {void}
 */
CKEDITOR.htmlParser.element.prototype.replaceWithChildren = function() {};

/**
 * @param {function(!CKEDITOR.htmlParser.node, number): boolean} callback
 * @return {void}
 */
CKEDITOR.htmlParser.element.prototype.forEach = function(callback) {};

/**
 * @param {string|!Object|!Function} condition
 * @return {!CKEDITOR.htmlParser.node}
 */
CKEDITOR.htmlParser.element.prototype.getFirst = function(condition) {};

/**
 * @return {string}
 */
CKEDITOR.htmlParser.element.prototype.getHtml = function() {};

/**
 * @param {string} html
 * @return {void}
 */
CKEDITOR.htmlParser.element.prototype.setHtml = function(html) {};

/**
 * @return {string}
 */
CKEDITOR.htmlParser.element.prototype.getOuterHtml = function() {};

/**
 * @param {number} index
 * @return {!CKEDITOR.htmlParser.element}
 */
CKEDITOR.htmlParser.element.prototype.split = function(index) {};

/**
 * @param {string} className
 * @return {void}
 */
CKEDITOR.htmlParser.element.prototype.removeClass = function(className) {};

/**
 * @param {string} className
 * @return {boolean}
 */
CKEDITOR.htmlParser.element.prototype.hasClass = function(className) {};

/**
 * @constructor
 * @struct
 */
CKEDITOR.htmlParser.fragment = function() {};
 /** @type {!Array<?>} */
CKEDITOR.htmlParser.fragment.prototype.children;
 /** @type {?} */
CKEDITOR.htmlParser.fragment.prototype.parent;
 /** @type {number} */
CKEDITOR.htmlParser.fragment.prototype.type;

/**
 * @param {string} fragmentHtml
 * @param {!CKEDITOR.htmlParser.element|string=} parent
 * @param {string|boolean=} fixingBlock
 * @return {void}
 */
CKEDITOR.htmlParser.fragment.prototype.fromHtml = function(fragmentHtml, parent, fixingBlock) {};

/**
 * @param {!CKEDITOR.htmlParser.node} node
 * @param {number=} index
 * @return {void}
 */
CKEDITOR.htmlParser.fragment.prototype.add = function(node, index) {};

/**
 * @param {!CKEDITOR.htmlParser.filter} filter
 * @return {void}
 */
CKEDITOR.htmlParser.fragment.prototype.filter = function(filter) {};

/**
 * @param {!CKEDITOR.htmlParser.filter} filter
 * @param {boolean=} filterRoot
 * @return {void}
 */
CKEDITOR.htmlParser.fragment.prototype.filterChildren = function(filter, filterRoot) {};

/**
 * @param {!CKEDITOR.htmlParser.basicWriter} writer
 * @param {!CKEDITOR.htmlParser.filter=} filter
 * @return {void}
 */
CKEDITOR.htmlParser.fragment.prototype.writeHtml = function(writer, filter) {};

/**
 * @param {!CKEDITOR.htmlParser.basicWriter} writer
 * @param {!CKEDITOR.htmlParser.filter=} filter
 * @param {boolean=} filterRoot
 * @return {void}
 */
CKEDITOR.htmlParser.fragment.prototype.writeChildrenHtml = function(writer, filter, filterRoot) {};

/**
 * @param {function(!CKEDITOR.htmlParser.node, number): boolean} callback
 * @param {number=} type
 * @param {boolean=} skipRoot
 * @return {void}
 */
CKEDITOR.htmlParser.fragment.prototype.forEach = function(callback, type, skipRoot) {};

/**
 * @constructor
 * @struct
 * @param {!CKEDITOR.htmlParser.element|string} element_or_styleText
 */
CKEDITOR.htmlParser.cssStyle = function(element_or_styleText) {};

/**
 * @param {!CKEDITOR.htmlParser.element|!CKEDITOR.dom.element|!Object} obj
 * @return {void}
 */
CKEDITOR.htmlParser.cssStyle.prototype.populate = function(obj) {};

/**
 * @constructor
 * @struct
 * @param {string} value
 */
CKEDITOR.htmlParser.text = function(value) {};
 /** @type {number} */
CKEDITOR.htmlParser.text.prototype.type;

/**
 * @param {!CKEDITOR.htmlParser.filter} filter
 * @return {boolean}
 */
CKEDITOR.htmlParser.text.prototype.filter = function(filter) {};

/**
 * @param {!CKEDITOR.htmlParser.basicWriter} writer
 * @param {!CKEDITOR.htmlParser.filter=} filter
 * @return {void}
 */
CKEDITOR.htmlParser.text.prototype.writeHtml = function(writer, filter) {};
/**
 * @extends {CKEDITOR.htmlParser.basicWriter}
 * @constructor
 * @struct
 */
CKEDITOR.htmlWriter = function() {};
 /** @type {string} */
CKEDITOR.htmlWriter.prototype.indentationChars;
 /** @type {string} */
CKEDITOR.htmlWriter.prototype.lineBreakChars;
 /** @type {string} */
CKEDITOR.htmlWriter.prototype.selfClosingEnd;

/**
 * @return {void}
 */
CKEDITOR.htmlWriter.prototype.indentation = function() {};

/**
 * @return {void}
 */
CKEDITOR.htmlWriter.prototype.lineBreak = function() {};

/**
 * @param {string} tagName
 * @param {!Object} rules
 * @return {void}
 */
CKEDITOR.htmlWriter.prototype.setRules = function(tagName, rules) {};
/** @const */
CKEDITOR.tools = {};
 /** @type {!Function} */
CKEDITOR.tools.callFunction;

/**
 * @param {!Object} doc
 * @param {!Boolean=} withAppend
 * @return {void}
 */
CKEDITOR.tools.enableHtml5Elements = function(doc, withAppend) {};
/** @const */
CKEDITOR.lang = {};
 /** @type {?} */
CKEDITOR.lang.languages;
 /** @type {?} */
CKEDITOR.lang.rtl;

/**
 * @param {string} languageCode
 * @param {string} defaultLanguage
 * @param {!Function} callback
 * @return {void}
 */
CKEDITOR.lang.load = function(languageCode, defaultLanguage, callback) {};

/**
 * @param {string} defaultLanguage
 * @param {string} probeLanguage
 * @return {string}
 */
CKEDITOR.lang.detect = function(defaultLanguage, probeLanguage) {};
