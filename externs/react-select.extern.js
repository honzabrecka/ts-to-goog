/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/react-select/index.d.ts:

/* TODO: ImportDeclaration in  */

/* TODO: ExportAssignment in  */
/** @const */
var ReactSelectClass = {};
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactSelectClass.Creatable = function() {};
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactSelectClass.Async = function() {};
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
ReactSelectClass.AsyncCreatable = function() {};

/** @typedef {(boolean|!JSX.Element)} */
ReactSelectClass.HandlerRendererResult;

/** @typedef {function(!ReactSelectClass.Option<(string|number|boolean)>): void} */
ReactSelectClass.FocusOptionHandler;

/** @typedef {function(!ReactSelectClass.Option<(string|number|boolean)>): void} */
ReactSelectClass.SelectValueHandler;

/** @typedef {function(!ReactSelectClass.ArrowRendererProps): (boolean|!JSX.Element)} */
ReactSelectClass.ArrowRendererHandler;

/** @typedef {function(!ReactSelectClass.Option<(string|number|boolean)>, string): !ReactSelectClass.Option<(string|number|boolean)>} */
ReactSelectClass.FilterOptionHandler;

/** @typedef {function(!Array<!ReactSelectClass.Option<(string|number|boolean)>>, string, !Array<!ReactSelectClass.Option<(string|number|boolean)>>): !Array<!ReactSelectClass.Option<(string|number|boolean)>>} */
ReactSelectClass.FilterOptionsHandler;

/** @typedef {function(!Object<string,?>): (boolean|!JSX.Element)} */
ReactSelectClass.InputRendererHandler;

/** @typedef {function(!ReactSelectClass.MenuRendererProps): (boolean|!JSX.Element)} */
ReactSelectClass.MenuRendererHandler;

/** @typedef {function(): void} */
ReactSelectClass.OnCloseHandler;

/** @typedef {function(string): void} */
ReactSelectClass.OnInputChangeHandler;

/** @typedef {function(!React.KeyboardEvent<!HTMLDivElement>): void} */
ReactSelectClass.OnInputKeyDownHandler;

/** @typedef {function(): void} */
ReactSelectClass.OnMenuScrollToBottomHandler;

/** @typedef {function(): void} */
ReactSelectClass.OnOpenHandler;

/** @typedef {function(!React.FocusEvent<!HTMLDivElement>): void} */
ReactSelectClass.OnFocusHandler;

/** @typedef {function(!React.FocusEvent<!HTMLDivElement>): void} */
ReactSelectClass.OnBlurHandler;

/** @typedef {function(!ReactSelectClass.Option<(string|number|boolean)>): (boolean|!JSX.Element)} */
ReactSelectClass.OptionRendererHandler;

/** @typedef {function(!ReactSelectClass.Option<(string|number|boolean)>): (boolean|!JSX.Element)} */
ReactSelectClass.ValueRendererHandler;

/** @typedef {function(string, !React.MouseEvent<!HTMLAnchorElement>): void} */
ReactSelectClass.OnValueClickHandler;

/** @typedef {function({option: !ReactSelectClass.Option<(string|number|boolean)>, options: !Array<!ReactSelectClass.Option<(string|number|boolean)>>, labelKey: string, valueKey: string}): boolean} */
ReactSelectClass.IsOptionUniqueHandler;

/** @typedef {function({label: string}): boolean} */
ReactSelectClass.IsValidNewOptionHandler;

/** @typedef {function({label: string, labelKey: string, valueKey: string}): !ReactSelectClass.Option<(string|number|boolean)>} */
ReactSelectClass.NewOptionCreatorHandler;

/** @typedef {function(string): string} */
ReactSelectClass.PromptTextCreatorHandler;

/** @typedef {function({keyCode: number}): boolean} */
ReactSelectClass.ShouldKeyDownEventCreateNewOptionHandler;

/** @typedef {function(!ReactSelectClass.Option<TValue>): void} */
ReactSelectClass.OnChangeSingleHandler;

/** @typedef {function(!Array<!ReactSelectClass.Option<TValue>>): void} */
ReactSelectClass.OnChangeMultipleHandler;

/** @typedef {function(TOption): void} */
ReactSelectClass.OnChangeHandler;

/** @typedef {(function(string): !Promise<!ReactSelectClass.AutocompleteResult>|function(string, function(?, !ReactSelectClass.AutocompleteResult): void): void)} */
ReactSelectClass.LoadOptionsHandler;

/** @typedef {function(string): !Promise<!ReactSelectClass.AutocompleteResult>} */
ReactSelectClass.LoadOptionsAsyncHandler;

/** @typedef {function(string, function(?, !ReactSelectClass.AutocompleteResult): void): void} */
ReactSelectClass.LoadOptionsLegacyHandler;
/**
 * @record
 * @struct
 */
ReactSelectClass.AutocompleteResult = function() {};
 /** @type {!Array<!ReactSelectClass.Option<(string|number|boolean)>>} */
ReactSelectClass.AutocompleteResult.prototype.options;
 /** @type {boolean} */
ReactSelectClass.AutocompleteResult.prototype.complete;

/** @typedef {!Array<!ReactSelectClass.Option<TValue>>} */
ReactSelectClass.Options;
/**
 * @record
 * @struct
 */
ReactSelectClass.Option = function() {};
 /** @type {string} */
ReactSelectClass.Option.prototype.label;
 /** @type {TValue} */
ReactSelectClass.Option.prototype.value;
 /** @type {boolean} */
ReactSelectClass.Option.prototype.clearableValue;
 /** @type {boolean} */
ReactSelectClass.Option.prototype.disabled;

/** @typedef {(string|number|boolean)} */
ReactSelectClass.OptionValues;
/**
 * @record
 * @struct
 */
ReactSelectClass.MenuRendererProps = function() {};
 /** @type {!ReactSelectClass.Option<(string|number|boolean)>} */
ReactSelectClass.MenuRendererProps.prototype.focusedOption;
 /** @type {function(!ReactSelectClass.Option<(string|number|boolean)>): void} */
ReactSelectClass.MenuRendererProps.prototype.focusOption;
 /** @type {string} */
ReactSelectClass.MenuRendererProps.prototype.labelKey;
 /** @type {!Array<!ReactSelectClass.Option<(string|number|boolean)>>} */
ReactSelectClass.MenuRendererProps.prototype.options;
 /** @type {function(!ReactSelectClass.Option<(string|number|boolean)>): void} */
ReactSelectClass.MenuRendererProps.prototype.selectValue;
 /** @type {!Array<!ReactSelectClass.Option<(string|number|boolean)>>} */
ReactSelectClass.MenuRendererProps.prototype.valueArray;
/**
 * @record
 * @struct
 */
ReactSelectClass.ArrowRendererProps = function() {};
 /** @type {function(!React.MouseEvent<?>): void} */
ReactSelectClass.ArrowRendererProps.prototype.onMouseDown;
/**
 * @extends {React.Props}
 * @record
 * @struct
 */
ReactSelectClass.ReactSelectProps = function() {};
 /** @type {string} */
ReactSelectClass.ReactSelectProps.prototype.addLabelText;
 /** @type {function(!ReactSelectClass.ArrowRendererProps): (boolean|!JSX.Element)} */
ReactSelectClass.ReactSelectProps.prototype.arrowRenderer;
 /** @type {boolean} */
ReactSelectClass.ReactSelectProps.prototype.autoBlur;
 /** @type {boolean} */
ReactSelectClass.ReactSelectProps.prototype.autofocus;
 /** @type {boolean} */
ReactSelectClass.ReactSelectProps.prototype.autosize;
 /** @type {boolean} */
ReactSelectClass.ReactSelectProps.prototype.backspaceRemoves;
 /** @type {string} */
ReactSelectClass.ReactSelectProps.prototype.backspaceToRemoveMessage;
 /** @type {string} */
ReactSelectClass.ReactSelectProps.prototype.className;
 /** @type {string} */
ReactSelectClass.ReactSelectProps.prototype.clearAllText;
 /** @type {string} */
ReactSelectClass.ReactSelectProps.prototype.clearValueText;
 /** @type {boolean} */
ReactSelectClass.ReactSelectProps.prototype.clearable;
 /** @type {string} */
ReactSelectClass.ReactSelectProps.prototype.delimiter;
 /** @type {boolean} */
ReactSelectClass.ReactSelectProps.prototype.disabled;
 /** @type {boolean} */
ReactSelectClass.ReactSelectProps.prototype.escapeClearsValue;
 /** @type {function(!ReactSelectClass.Option<(string|number|boolean)>, string): !ReactSelectClass.Option<(string|number|boolean)>} */
ReactSelectClass.ReactSelectProps.prototype.filterOption;
 /** @type {function(!Array<!ReactSelectClass.Option<(string|number|boolean)>>, string, !Array<!ReactSelectClass.Option<(string|number|boolean)>>): !Array<!ReactSelectClass.Option<(string|number|boolean)>>} */
ReactSelectClass.ReactSelectProps.prototype.filterOptions;
 /** @type {boolean} */
ReactSelectClass.ReactSelectProps.prototype.ignoreAccents;
 /** @type {boolean} */
ReactSelectClass.ReactSelectProps.prototype.ignoreCase;
 /** @type {!Object<string,?>} */
ReactSelectClass.ReactSelectProps.prototype.inputProps;
 /** @type {function(!Object<string,?>): (boolean|!JSX.Element)} */
ReactSelectClass.ReactSelectProps.prototype.inputRenderer;
 /** @type {string} */
ReactSelectClass.ReactSelectProps.prototype.instanceId;
 /** @type {boolean} */
ReactSelectClass.ReactSelectProps.prototype.isLoading;
 /** @type {boolean} */
ReactSelectClass.ReactSelectProps.prototype.joinValues;
 /** @type {string} */
ReactSelectClass.ReactSelectProps.prototype.labelKey;
 /** @type {string} */
ReactSelectClass.ReactSelectProps.prototype.matchPos;
 /** @type {string} */
ReactSelectClass.ReactSelectProps.prototype.matchProp;
 /** @type {number} */
ReactSelectClass.ReactSelectProps.prototype.menuBuffer;
 /** @type {!React.CSSProperties} */
ReactSelectClass.ReactSelectProps.prototype.menuContainerStyle;
 /** @type {function(!ReactSelectClass.MenuRendererProps): (boolean|!JSX.Element)} */
ReactSelectClass.ReactSelectProps.prototype.menuRenderer;
 /** @type {!React.CSSProperties} */
ReactSelectClass.ReactSelectProps.prototype.menuStyle;
 /** @type {boolean} */
ReactSelectClass.ReactSelectProps.prototype.multi;
 /** @type {string} */
ReactSelectClass.ReactSelectProps.prototype.name;
 /** @type {(string|!JSX.Element)} */
ReactSelectClass.ReactSelectProps.prototype.noResultsText;
 /** @type {function(!React.FocusEvent<!HTMLDivElement>): void} */
ReactSelectClass.ReactSelectProps.prototype.onBlur;
 /** @type {boolean} */
ReactSelectClass.ReactSelectProps.prototype.onBlurResetsInput;
 /** @type {function((!ReactSelectClass.Option<(string|number|boolean)>|!Array<!ReactSelectClass.Option<(string|number|boolean)>>)): void} */
ReactSelectClass.ReactSelectProps.prototype.onChange;
 /** @type {function(): void} */
ReactSelectClass.ReactSelectProps.prototype.onClose;
 /** @type {function(!React.FocusEvent<!HTMLDivElement>): void} */
ReactSelectClass.ReactSelectProps.prototype.onFocus;
 /** @type {function(string): void} */
ReactSelectClass.ReactSelectProps.prototype.onInputChange;
 /** @type {function(!React.KeyboardEvent<!HTMLDivElement>): void} */
ReactSelectClass.ReactSelectProps.prototype.onInputKeyDown;
 /** @type {function(): void} */
ReactSelectClass.ReactSelectProps.prototype.onMenuScrollToBottom;
 /** @type {function(): void} */
ReactSelectClass.ReactSelectProps.prototype.onOpen;
 /** @type {boolean} */
ReactSelectClass.ReactSelectProps.prototype.openAfterFocus;
 /** @type {boolean} */
ReactSelectClass.ReactSelectProps.prototype.openOnFocus;
 /** @type {string} */
ReactSelectClass.ReactSelectProps.prototype.optionClassName;
 /** @type {(!React.ComponentClass<!Object>|!React.StatelessComponent<?>)} */
ReactSelectClass.ReactSelectProps.prototype.optionComponent;
 /** @type {function(!ReactSelectClass.Option<(string|number|boolean)>): (boolean|!JSX.Element)} */
ReactSelectClass.ReactSelectProps.prototype.optionRenderer;
 /** @type {!Array<!ReactSelectClass.Option<(string|number|boolean)>>} */
ReactSelectClass.ReactSelectProps.prototype.options;
 /** @type {(string|!JSX.Element)} */
ReactSelectClass.ReactSelectProps.prototype.placeholder;
 /** @type {boolean} */
ReactSelectClass.ReactSelectProps.prototype.required;
 /** @type {?} */
ReactSelectClass.ReactSelectProps.prototype.resetValue;
 /** @type {boolean} */
ReactSelectClass.ReactSelectProps.prototype.scrollMenuIntoView;
 /** @type {boolean} */
ReactSelectClass.ReactSelectProps.prototype.searchable;
 /** @type {boolean} */
ReactSelectClass.ReactSelectProps.prototype.tabSelectsValue;
 /** @type {(string|number|boolean|!ReactSelectClass.Option<(string|number|boolean)>|!Array<!ReactSelectClass.Option<(string|number|boolean)>>|!Array<string>|!Array<number>)} */
ReactSelectClass.ReactSelectProps.prototype.value;
 /** @type {string} */
ReactSelectClass.ReactSelectProps.prototype.valueKey;
 /** @type {function(!ReactSelectClass.Option<(string|number|boolean)>): (boolean|!JSX.Element)} */
ReactSelectClass.ReactSelectProps.prototype.valueRenderer;
 /** @type {!React.CSSProperties} */
ReactSelectClass.ReactSelectProps.prototype.style;
 /** @type {string} */
ReactSelectClass.ReactSelectProps.prototype.tabIndex;
 /** @type {(!React.ComponentClass<!Object>|!React.StatelessComponent<?>)} */
ReactSelectClass.ReactSelectProps.prototype.valueComponent;
 /** @type {!React.CSSProperties} */
ReactSelectClass.ReactSelectProps.prototype.wrapperStyle;
 /** @type {function(string, !React.MouseEvent<!HTMLAnchorElement>): void} */
ReactSelectClass.ReactSelectProps.prototype.onValueClick;
 /** @type {boolean} */
ReactSelectClass.ReactSelectProps.prototype.simpleValue;
/**
 * @extends {ReactSelectClass.ReactSelectProps}
 * @record
 * @struct
 */
ReactSelectClass.ReactCreatableSelectProps = function() {};
 /** @type {function({option: !ReactSelectClass.Option<(string|number|boolean)>, options: !Array<!ReactSelectClass.Option<(string|number|boolean)>>, labelKey: string, valueKey: string}): boolean} */
ReactSelectClass.ReactCreatableSelectProps.prototype.isOptionUnique;
 /** @type {function({label: string}): boolean} */
ReactSelectClass.ReactCreatableSelectProps.prototype.isValidNewOption;
 /** @type {function({label: string, labelKey: string, valueKey: string}): !ReactSelectClass.Option<(string|number|boolean)>} */
ReactSelectClass.ReactCreatableSelectProps.prototype.newOptionCreator;
 /** @type {function(string): string} */
ReactSelectClass.ReactCreatableSelectProps.prototype.promptTextCreator;
 /** @type {function({keyCode: number}): boolean} */
ReactSelectClass.ReactCreatableSelectProps.prototype.shouldKeyDownEventCreateNewOption;
/**
 * @extends {ReactSelectClass.ReactSelectProps}
 * @record
 * @struct
 */
ReactSelectClass.ReactAsyncSelectProps = function() {};
 /** @type {boolean} */
ReactSelectClass.ReactAsyncSelectProps.prototype.autoload;
 /** @type {(boolean|!Object<string,?>)} */
ReactSelectClass.ReactAsyncSelectProps.prototype.cache;
 /** @type {boolean} */
ReactSelectClass.ReactAsyncSelectProps.prototype.ignoreAccents;
 /** @type {boolean} */
ReactSelectClass.ReactAsyncSelectProps.prototype.ignoreCase;
 /** @type {boolean} */
ReactSelectClass.ReactAsyncSelectProps.prototype.isLoading;
 /** @type {(function(string): !Promise<!ReactSelectClass.AutocompleteResult>|function(string, function(?, !ReactSelectClass.AutocompleteResult): void): void)} */
ReactSelectClass.ReactAsyncSelectProps.prototype.loadOptions;
 /** @type {string} */
ReactSelectClass.ReactAsyncSelectProps.prototype.loadingPlaceholder;
 /** @type {number} */
ReactSelectClass.ReactAsyncSelectProps.prototype.minimumInput;
 /** @type {(string|!JSX.Element)} */
ReactSelectClass.ReactAsyncSelectProps.prototype.noResultsText;
 /** @type {string} */
ReactSelectClass.ReactAsyncSelectProps.prototype.placeholder;
 /** @type {string} */
ReactSelectClass.ReactAsyncSelectProps.prototype.searchPromptText;
 /** @type {string} */
ReactSelectClass.ReactAsyncSelectProps.prototype.searchingText;

/**
 * @return {void}
 */
ReactSelectClass.prototype.focus = function() {};
