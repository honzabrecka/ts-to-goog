/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/react-joyride/index.d.ts:

/* TODO: ImportDeclaration in  */

/**
 * @constructor
 * @struct
 * @param {?} props
 */
function Joyride(props) {}
 /** @type {?} */
Joyride.defaultProps;

/**
 * @param {boolean=} restart
 * @return {void}
 */
Joyride.prototype.reset = function(restart) {};

/**
 * @return {void}
 */
Joyride.prototype.next = function() {};

/**
 * @return {void}
 */
Joyride.prototype.back = function() {};

/**
 * @param {?} data
 * @return {void}
 */
Joyride.prototype.addTooltip = function(data) {};

/**
 * @return {?}
 */
Joyride.prototype.getProgress = function() {};

/**
 * Please don't use the `start` and `stop` methods anymore. Instead use a combination of the props `run` and `autoStart`.
 * @param {boolean=} autorun
 * @return {void}
 */
Joyride.prototype.start = function(autorun) {};

/**
 * Please don't use the `start` and `stop` methods anymore. Instead use a combination of the props `run` and `autoStart`.
 * @return {void}
 */
Joyride.prototype.stop = function() {};
/**
 * @record
 * @struct
 */
function Progress() {}
 /** @type {number} */
Progress.prototype.index;
 /** @type {number} */
Progress.prototype.percentageComplete;
 /** @type {?} */
Progress.prototype.step;
/**
 * @record
 * @struct
 */
function Locale() {}
 /** @type {string} */
Locale.prototype.back;
 /** @type {string} */
Locale.prototype.close;
 /** @type {string} */
Locale.prototype.last;
 /** @type {string} */
Locale.prototype.next;
 /** @type {string} */
Locale.prototype.skip;
/**
 * @record
 * @struct
 */
function Props() {}
 /** @type {!Array<?>} */
Props.prototype.steps;
 /** @type {number} */
Props.prototype.stepIndex;
 /** @type {boolean} */
Props.prototype.run;
 /** @type {boolean} */
Props.prototype.autoStart;
 /** @type {boolean} */
Props.prototype.keyboardNavigation;
 /** @type {?} */
Props.prototype.locale;
 /** @type {boolean} */
Props.prototype.resizeDebounce;
 /** @type {number} */
Props.prototype.resizeDebounceDelay;
 /** @type {number} */
Props.prototype.holePadding;
 /** @type {number} */
Props.prototype.scrollOffset;
 /** @type {boolean} */
Props.prototype.scrollToSteps;
 /** @type {boolean} */
Props.prototype.scrollToFirstStep;
 /** @type {boolean} */
Props.prototype.showBackButton;
 /** @type {boolean} */
Props.prototype.showOverlay;
 /** @type {boolean} */
Props.prototype.allowClicksThruHole;
 /** @type {boolean} */
Props.prototype.showSkipButton;
 /** @type {boolean} */
Props.prototype.showStepsProgress;
 /** @type {number} */
Props.prototype.tooltipOffset;
 /** @type {string} */
Props.prototype.type;
 /** @type {boolean} */
Props.prototype.disableOverlay;
 /** @type {boolean} */
Props.prototype.debug;

/**
 * It will be called when the tour's state changes.
 * @param {?} options
 * @return {void}
 */
Props.prototype.callback = function(options) {};
/**
 * @record
 * @struct
 */
function Step() {}
 /** @type {string} */
Step.prototype.title;
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)} */
Step.prototype.text;
 /** @type {string} */
Step.prototype.selector;
 /** @type {string} */
Step.prototype.position;
 /** @type {string} */
Step.prototype.type;
 /** @type {boolean} */
Step.prototype.isFixed;
 /** @type {boolean} */
Step.prototype.allowClicksThruHole;
 /** @type {?} */
Step.prototype.style;

/* TODO: IndexSignature:  */
/**
 * @record
 * @struct
 */
function StepStyles() {}
 /** @type {string} */
StepStyles.prototype.backgroundColor;
 /** @type {string} */
StepStyles.prototype.borderRadius;
 /** @type {string} */
StepStyles.prototype.color;
 /** @type {string} */
StepStyles.prototype.mainColor;
 /** @type {string} */
StepStyles.prototype.textAlign;
 /** @type {string} */
StepStyles.prototype.width;
 /** @type {?} */
StepStyles.prototype.beacon;

/* TODO: IndexSignature:  */
/**
 * @record
 * @struct
 */
function BeaconStyles() {}
 /** @type {number} */
BeaconStyles.prototype.offsetX;
 /** @type {number} */
BeaconStyles.prototype.offsetY;
 /** @type {string} */
BeaconStyles.prototype.inner;
 /** @type {string} */
BeaconStyles.prototype.outer;
/**
 * @record
 * @struct
 */
function State() {}
 /** @type {string} */
State.prototype.action;
 /** @type {number} */
State.prototype.index;
 /** @type {boolean} */
State.prototype.play;
 /** @type {boolean} */
State.prototype.redraw;
 /** @type {boolean} */
State.prototype.shouldPlay;
 /** @type {boolean} */
State.prototype.showTooltip;
 /** @type {number} */
State.prototype.xPos;
 /** @type {number} */
State.prototype.yPos;
 /** @type {boolean} */
State.prototype.skipped;
