/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/navigo/index.d.ts:
/**
 * @record
 * @struct
 */
function NavigoHooks() {}

/**
 * @param {?} done
 * @return {void}
 */
NavigoHooks.prototype.before = function(done) {};

/**
 * @return {void}
 */
NavigoHooks.prototype.after = function() {};

/** @typedef {?} */
var RouteHandler;

/**
 * @constructor
 * @struct
 * Constructs the router
 * @param {string=} root The main URL of your application.
 * @param {boolean=} useHash If useHash set to true then the router uses an old routing approach with hash in the URL. Navigo anyways falls back to this mode if there is no History API supported.
 */
function Navigo(root, useHash) {}

/**
 * @param {string|!RegExp|!Object<string,?>|?} location_or_routes_or_rootHandler
 * @param {?|function(!Array<string>): void=} handler_or_hooks
 * @param {?=} hooks
 * @return {!Navigo}
 */
Navigo.prototype.on = function(location_or_routes_or_rootHandler, handler_or_hooks, hooks) {};

/**
 * @param {function(string): void} handler
 * @param {?=} hooks
 * @return {void}
 */
Navigo.prototype.notFound = function(handler, hooks) {};

/**
 * @param {string} path
 * @param {boolean=} absolute
 * @return {void}
 */
Navigo.prototype.navigate = function(path, absolute) {};

/**
 * @return {void}
 */
Navigo.prototype.updatePageLinks = function() {};

/**
 * @param {string} path
 * @param {?=} params
 * @return {string}
 */
Navigo.prototype.generate = function(path, params) {};

/**
 * @param {string=} currentURL
 * @return {boolean}
 */
Navigo.prototype.resolve = function(currentURL) {};

/**
 * @param {string} path
 * @return {string}
 */
Navigo.prototype.link = function(path) {};

/**
 * @return {void}
 */
Navigo.prototype.disableIfAPINotAvailable = function() {};

/**
 * @return {void}
 */
Navigo.prototype.pause = function() {};

/**
 * @return {void}
 */
Navigo.prototype.resume = function() {};

/**
 * @return {void}
 */
Navigo.prototype.destroy = function() {};

/* TODO: ExportAssignment in  */

/* TODO: NamespaceExportDeclaration in  */
