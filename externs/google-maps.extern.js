/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/google-maps/index.d.ts:
/** @const */
var GoogleMapsLoader = {};

/** @typedef {{maps: ?}} */
GoogleMapsLoader.google;
/**
 * @record
 * @struct
 */
GoogleMapsLoader.CallBack = function() {};

/* TODO: CallSignature: GoogleMapsLoader */
 /** @type {string} */
GoogleMapsLoader.KEY;
 /** @type {string} */
GoogleMapsLoader.URL;
 /** @type {!Array<string>} */
GoogleMapsLoader.LIBRARIES;
 /** @type {string} */
GoogleMapsLoader.CLIENT;
 /** @type {string} */
GoogleMapsLoader.CHANNEL;
 /** @type {string} */
GoogleMapsLoader.LANGUAGE;
 /** @type {string} */
GoogleMapsLoader.REGION;
 /** @type {string} */
GoogleMapsLoader.VERSION;
 /** @type {string} */
GoogleMapsLoader.WINDOW_CALLBACK_NAME;

/**
 * @param {!Function} callBack
 * @return {void}
 */
GoogleMapsLoader.release = function(callBack) {};

/**
 * @param {!GoogleMapsLoader.CallBack=} callBack
 * @return {void}
 */
GoogleMapsLoader.onLoad = function(callBack) {};

/**
 * @param {!GoogleMapsLoader.CallBack=} callBack
 * @return {void}
 */
GoogleMapsLoader.load = function(callBack) {};

/**
 * @return {boolean}
 */
GoogleMapsLoader.isLoaded = function() {};

/**
 * @return {void}
 */
GoogleMapsLoader.createLoader = function() {};

/**
 * @return {string}
 */
GoogleMapsLoader.createUrl = function() {};

/**
 * @return {void}
 */
GoogleMapsLoader.makeMock = function() {};

/* TODO: ExportAssignment in  */

/* TODO: NamespaceExportDeclaration in  */
