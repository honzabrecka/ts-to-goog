/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/config/index.d.ts:
 /** @type {!c.IConfig} */
var c;
/**
 * @record
 * @struct
 */
c.IUtil = function() {};

/**
 * @param {?} mergeInto
 * @param {?} mergeFrom
 * @param {number=} depth
 * @return {?}
 */
c.IUtil.prototype.extendDeep = function(mergeInto, mergeFrom, depth) {};

/**
 * @param {?} copyFrom
 * @param {number=} depth
 * @return {?}
 */
c.IUtil.prototype.cloneDeep = function(copyFrom, depth) {};

/**
 * @param {?} object1
 * @param {?} object2
 * @param {number=} dept
 * @return {boolean}
 */
c.IUtil.prototype.equalsDeep = function(object1, object2, dept) {};

/**
 * @param {?} object1
 * @param {?} object2
 * @param {number=} depth
 * @return {?}
 */
c.IUtil.prototype.diffDeep = function(object1, object2, depth) {};

/**
 * @param {?} object
 * @param {string=} propertyName
 * @param {string=} propertyValue
 * @return {?}
 */
c.IUtil.prototype.makeImmutable = function(object, propertyName, propertyValue) {};

/**
 * @param {?} object
 * @param {string} propertyName
 * @param {string=} propertyValue
 * @return {?}
 */
c.IUtil.prototype.makeHidden = function(object, propertyName, propertyValue) {};

/**
 * @param {string} varName
 * @return {string}
 */
c.IUtil.prototype.getEnv = function(varName) {};

/**
 * @param {string} configDir
 * @return {?}
 */
c.IUtil.prototype.loadFileConfigs = function(configDir) {};

/**
 * @return {!Array<!c.IConfigSource>}
 */
c.IUtil.prototype.getConfigSources = function() {};
/**
 * @record
 * @struct
 */
c.IConfig = function() {};
 /** @type {!c.IUtil} */
c.IConfig.prototype.util;

/**
 * @template T
 * @param {string} setting
 * @return {T}
 */
c.IConfig.prototype.get = function(setting) {};

/**
 * @param {string} setting
 * @return {boolean}
 */
c.IConfig.prototype.has = function(setting) {};
/**
 * @record
 * @struct
 */
c.IConfigSource = function() {};
 /** @type {string} */
c.IConfigSource.prototype.name;
 /** @type {string} */
c.IConfigSource.prototype.original;
 /** @type {?} */
c.IConfigSource.prototype.parsed;

/* TODO: ExportAssignment in  */
