/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/gm/index.d.ts:

/* TODO: ImportEqualsDeclaration in  */

/**
 * @param {string|!NodeJS.ReadableStream|?|number} image_or_stream_or_buffer_or_width
 * @param {string|number=} image_or_height
 * @param {string=} color
 * @return {!m.State}
 */
function m(image_or_stream_or_buffer_or_width, image_or_height, color) {}
/**
 * @record
 * @struct
 */
m.ClassOptions = function() {};
 /** @type {boolean} */
m.ClassOptions.prototype.imageMagick;
 /** @type {boolean} */
m.ClassOptions.prototype.nativeAutoOrient;
/**
 * @record
 * @struct
 */
m.ChannelInfo = function() {};
 /** @type {T} */
m.ChannelInfo.prototype.Red;
 /** @type {T} */
m.ChannelInfo.prototype.Green;
 /** @type {T} */
m.ChannelInfo.prototype.Blue;
/**
 * @record
 * @struct
 */
m.CompareOptions = function() {};
 /** @type {string} */
m.CompareOptions.prototype.file;
 /** @type {string} */
m.CompareOptions.prototype.highlightColor;
 /** @type {string} */
m.CompareOptions.prototype.highlightStyle;
 /** @type {number} */
m.CompareOptions.prototype.tolerance;
/**
 * @record
 * @struct
 */
m.ColorStatistics = function() {};
 /** @type {string} */
m.ColorStatistics.prototype.Minimum;
 /** @type {string} */
m.ColorStatistics.prototype.Maximum;
 /** @type {string} */
m.ColorStatistics.prototype.Mean;

/* TODO: PropertySignature: m.'Standard Deviation' */
/**
 * @record
 * @struct
 */
m.Dimensions = function() {};
 /** @type {number} */
m.Dimensions.prototype.width;
 /** @type {number} */
m.Dimensions.prototype.height;
/**
 * @record
 * @struct
 */
m.GetterOptions = function() {};
 /** @type {boolean} */
m.GetterOptions.prototype.bufferStream;
/**
 * @record
 * @struct
 */
m.ImageInfo = function() {};

/* TODO: PropertySignature: m.'Background Color' */

/* TODO: PropertySignature: m.'Border Color' */

/* TODO: PropertySignature: m.'Channel Depths' */

/* TODO: PropertySignature: m.'Channel Statistics' */
 /** @type {string} */
m.ImageInfo.prototype.Class;
 /** @type {number} */
m.ImageInfo.prototype.color;
 /** @type {string} */
m.ImageInfo.prototype.Compose;
 /** @type {string} */
m.ImageInfo.prototype.Compression;
 /** @type {number} */
m.ImageInfo.prototype.depth;
 /** @type {string} */
m.ImageInfo.prototype.Depth;
 /** @type {string} */
m.ImageInfo.prototype.Dispose;
 /** @type {string} */
m.ImageInfo.prototype.Filesize;
 /** @type {string} */
m.ImageInfo.prototype.format;
 /** @type {string} */
m.ImageInfo.prototype.Format;
 /** @type {string} */
m.ImageInfo.prototype.Geometry;
 /** @type {string} */
m.ImageInfo.prototype.Interlace;
 /** @type {string} */
m.ImageInfo.prototype.Iterations;

/* TODO: PropertySignature: m.'JPEG-Quality' */

/* TODO: PropertySignature: m.'JPEG-Colorspace' */

/* TODO: PropertySignature: m.'JPEG-Colorspace-Name' */

/* TODO: PropertySignature: m.'JPEG-Sampling-factors' */

/* TODO: PropertySignature: m.'Matte Color' */
 /** @type {string} */
m.ImageInfo.prototype.Orientation;

/* TODO: PropertySignature: m.'Page geometry' */
 /** @type {string} */
m.ImageInfo.prototype.path;

/* TODO: PropertySignature: m.'Profile-color' */

/* TODO: PropertySignature: m.'Profile-iptc' */

/* TODO: PropertySignature: m.'Profile-EXIF' */

/* TODO: PropertySignature: m.'Profile-XMP' */
 /** @type {string} */
m.ImageInfo.prototype.Resolution;
 /** @type {!m.Dimensions} */
m.ImageInfo.prototype.size;
 /** @type {string} */
m.ImageInfo.prototype.Signature;
 /** @type {string} */
m.ImageInfo.prototype.Software;
 /** @type {string} */
m.ImageInfo.prototype.Tainted;
 /** @type {string} */
m.ImageInfo.prototype.Type;
/**
 * @record
 * @struct
 */
m.State = function() {};

/**
 * @return {!m.State}
 */
m.State.prototype.adjoin = function() {};

/**
 * @param {string} matrix
 * @return {!m.State}
 */
m.State.prototype.affine = function(matrix) {};

/**
 * @param {boolean} enable
 * @return {!m.State}
 */
m.State.prototype.antialias = function(enable) {};

/**
 * @param {string} image
 * @param {boolean=} ltr
 * @return {!m.State}
 */
m.State.prototype.append = function(image, ltr) {};

/**
 * @param {string} password
 * @return {!m.State}
 */
m.State.prototype.authenticate = function(password) {};

/**
 * @return {!m.State}
 */
m.State.prototype.autoOrient = function() {};

/**
 * @return {!m.State}
 */
m.State.prototype.backdrop = function() {};

/**
 * @param {string} color
 * @return {!m.State}
 */
m.State.prototype.background = function(color) {};

/**
 * @param {number} bits
 * @return {!m.State}
 */
m.State.prototype.bitdepth = function(bits) {};

/**
 * @param {number} intensity_or_red
 * @param {number=} green
 * @param {number=} blue
 * @param {number=} opacity
 * @return {!m.State}
 */
m.State.prototype.blackThreshold = function(intensity_or_red, green, blue, opacity) {};

/**
 * @param {number} x
 * @param {number} y
 * @return {!m.State}
 */
m.State.prototype.bluePrimary = function(x, y) {};

/**
 * @param {number} radius
 * @param {number=} sigma
 * @return {!m.State}
 */
m.State.prototype.blur = function(radius, sigma) {};

/**
 * @param {number} width
 * @param {number} height
 * @return {!m.State}
 */
m.State.prototype.border = function(width, height) {};

/**
 * @param {string} color
 * @return {!m.State}
 */
m.State.prototype.borderColor = function(color) {};

/**
 * @param {string} color
 * @return {!m.State}
 */
m.State.prototype.box = function(color) {};

/**
 * @param {string} type
 * @return {!m.State}
 */
m.State.prototype.channel = function(type) {};

/**
 * @param {number} factor
 * @return {!m.State}
 */
m.State.prototype.charcoal = function(factor) {};

/**
 * @param {number} width
 * @param {number} height
 * @param {number=} x
 * @param {number=} y
 * @return {!m.State}
 */
m.State.prototype.chop = function(width, height, x, y) {};

/**
 * @return {!m.State}
 */
m.State.prototype.clip = function() {};

/**
 * @return {!m.State}
 */
m.State.prototype.coalesce = function() {};

/**
 * @param {number} red
 * @param {number} green
 * @param {number} blue
 * @return {!m.State}
 */
m.State.prototype.colorize = function(red, green, blue) {};

/**
 * @param {string} type
 * @return {!m.State}
 */
m.State.prototype.colorMap = function(type) {};

/**
 * @param {number} colors
 * @return {!m.State}
 */
m.State.prototype.colors = function(colors) {};

/**
 * @param {string} space
 * @return {!m.State}
 */
m.State.prototype.colorspace = function(space) {};

/**
 * @param {string} operator
 * @return {!m.State}
 */
m.State.prototype.compose = function(operator) {};

/**
 * @param {string} type
 * @return {!m.State}
 */
m.State.prototype.compress = function(type) {};

/**
 * @param {number} multiplier
 * @return {!m.State}
 */
m.State.prototype.contrast = function(multiplier) {};

/**
 * @param {string} kernel
 * @return {!m.State}
 */
m.State.prototype.convolve = function(kernel) {};

/**
 * @return {!m.State}
 */
m.State.prototype.createDirectories = function() {};

/**
 * @param {number} width
 * @param {number} height
 * @param {number=} x
 * @param {number=} y
 * @param {boolean=} percent
 * @return {!m.State}
 */
m.State.prototype.crop = function(width, height, x, y, percent) {};

/**
 * @param {number} amount
 * @return {!m.State}
 */
m.State.prototype.cycle = function(amount) {};

/**
 * @return {!m.State}
 */
m.State.prototype.deconstruct = function() {};

/**
 * @return {!m.State}
 */
m.State.prototype.define = function() {};

/**
 * @param {number} milliseconds
 * @return {!m.State}
 */
m.State.prototype.delay = function(milliseconds) {};

/**
 * @param {number} width
 * @param {number} height
 * @return {!m.State}
 */
m.State.prototype.density = function(width, height) {};

/**
 * @return {!m.State}
 */
m.State.prototype.despeckle = function() {};

/**
 * @param {number} horizontal
 * @param {number} vertical
 * @return {!m.State}
 */
m.State.prototype.displace = function(horizontal, vertical) {};

/**
 * @param {string} xServer
 * @return {!m.State}
 */
m.State.prototype.display = function(xServer) {};

/**
 * @param {string} method
 * @return {!m.State}
 */
m.State.prototype.dispose = function(method) {};

/**
 * @param {number} percent
 * @return {!m.State}
 */
m.State.prototype.dissolve = function(percent) {};

/**
 * @param {boolean=} enable
 * @return {!m.State}
 */
m.State.prototype.dither = function(enable) {};

/**
 * @param {number=} radius
 * @return {!m.State}
 */
m.State.prototype.edge = function(radius) {};

/**
 * @param {number=} radius
 * @return {!m.State}
 */
m.State.prototype.emboss = function(radius) {};

/**
 * @param {string} encoding
 * @return {!m.State}
 */
m.State.prototype.encoding = function(encoding) {};

/**
 * @param {string} type
 * @return {!m.State}
 */
m.State.prototype.endian = function(type) {};

/**
 * @return {!m.State}
 */
m.State.prototype.enhance = function() {};

/**
 * @return {!m.State}
 */
m.State.prototype.equalize = function() {};

/**
 * @param {number} width
 * @param {number} height
 * @param {string=} options
 * @return {!m.State}
 */
m.State.prototype.extent = function(width, height, options) {};

/**
 * @param {string} filename
 * @return {!m.State}
 */
m.State.prototype.file = function(filename) {};

/**
 * @param {string} type
 * @return {!m.State}
 */
m.State.prototype.filter = function(type) {};

/**
 * @return {!m.State}
 */
m.State.prototype.flatten = function() {};

/**
 * @return {!m.State}
 */
m.State.prototype.flip = function() {};

/**
 * @return {!m.State}
 */
m.State.prototype.flop = function() {};

/**
 * @param {string} color
 * @return {!m.State}
 */
m.State.prototype.foreground = function(color) {};

/**
 * @param {number} width
 * @param {number} height
 * @param {number} outerBevelWidth
 * @param {number} outBevelHeight
 * @return {!m.State}
 */
m.State.prototype.frame = function(width, height, outerBevelWidth, outBevelHeight) {};

/**
 * @param {number} distance
 * @param {boolean=} percent
 * @return {!m.State}
 */
m.State.prototype.fuzz = function(distance, percent) {};

/**
 * @param {number} r
 * @param {number} g
 * @param {number} b
 * @return {!m.State}
 */
m.State.prototype.gamma = function(r, g, b) {};

/**
 * @param {number} radius
 * @param {number=} sigma
 * @return {!m.State}
 */
m.State.prototype.gaussian = function(radius, sigma) {};

/**
 * @param {number|string} width_or_geometry
 * @param {number=} height
 * @param {string=} option
 * @return {!m.State}
 */
m.State.prototype.geometry = function(width_or_geometry, height, option) {};

/**
 * @param {number} x
 * @param {number} y
 * @return {!m.State}
 */
m.State.prototype.greenPrimary = function(x, y) {};

/**
 * @param {string} direction
 * @return {!m.State}
 */
m.State.prototype.gravity = function(direction) {};

/**
 * @param {string} color
 * @return {!m.State}
 */
m.State.prototype.highlightColor = function(color) {};

/**
 * @param {string} style
 * @return {!m.State}
 */
m.State.prototype.highlightStyle = function(style) {};

/**
 * @param {string} geometry
 * @return {!m.State}
 */
m.State.prototype.iconGeometry = function(geometry) {};

/**
 * @param {number=} factor
 * @return {!m.State}
 */
m.State.prototype.implode = function(factor) {};

/**
 * @param {string} type
 * @return {!m.State}
 */
m.State.prototype.intent = function(type) {};

/**
 * @param {string} type
 * @return {!m.State}
 */
m.State.prototype.interlace = function(type) {};

/**
 * @param {string} name
 * @return {!m.State}
 */
m.State.prototype.label = function(name) {};

/**
 * @param {number} width
 * @param {number} height
 * @param {number} offset
 * @param {boolean=} percent
 * @return {!m.State}
 */
m.State.prototype.lat = function(width, height, offset, percent) {};

/**
 * @param {number} blackPoint
 * @param {number} gamma
 * @param {number} whitePoint
 * @param {boolean=} percent
 * @return {!m.State}
 */
m.State.prototype.level = function(blackPoint, gamma, whitePoint, percent) {};

/**
 * @param {string} type
 * @param {string} val
 * @return {!m.State}
 */
m.State.prototype.limit = function(type, val) {};

/**
 * @param {string} type
 * @return {!m.State}
 */
m.State.prototype.list = function(type) {};

/**
 * @param {string} format
 * @return {!m.State}
 */
m.State.prototype.log = function(format) {};

/**
 * @param {number} iterations
 * @return {!m.State}
 */
m.State.prototype.loop = function(iterations) {};

/**
 * @param {number} width
 * @param {number} height
 * @return {!m.State}
 */
m.State.prototype.lower = function(width, height) {};

/**
 * @param {number} factor
 * @return {!m.State}
 */
m.State.prototype.magnify = function(factor) {};

/**
 * @param {string} filename
 * @return {!m.State}
 */
m.State.prototype.map = function(filename) {};

/**
 * @param {string} filename
 * @return {!m.State}
 */
m.State.prototype.mask = function(filename) {};

/**
 * @return {!m.State}
 */
m.State.prototype.matte = function() {};

/**
 * @param {string} color
 * @return {!m.State}
 */
m.State.prototype.matteColor = function(color) {};

/**
 * @param {number} limit
 * @return {!m.State}
 */
m.State.prototype.maximumError = function(limit) {};

/**
 * @param {number=} radius
 * @return {!m.State}
 */
m.State.prototype.median = function(radius) {};

/**
 * @param {number} factor
 * @return {!m.State}
 */
m.State.prototype.minify = function(factor) {};

/**
 * @param {string} mode
 * @return {!m.State}
 */
m.State.prototype.mode = function(mode) {};

/**
 * @param {number} b
 * @param {number} s
 * @param {number} h
 * @return {!m.State}
 */
m.State.prototype.modulate = function(b, s, h) {};

/**
 * @return {!m.State}
 */
m.State.prototype.monitor = function() {};

/**
 * @return {!m.State}
 */
m.State.prototype.monochrome = function() {};

/**
 * @param {string|!Array<string>} otherImg
 * @param {string} outName
 * @param {function(!Error, string, string, string): ?=} callback
 * @return {!m.State}
 */
m.State.prototype.morph = function(otherImg, outName, callback) {};

/**
 * @return {!m.State}
 */
m.State.prototype.mosaic = function() {};

/**
 * @param {number} radius
 * @param {number=} sigma
 * @param {number=} angle
 * @return {!m.State}
 */
m.State.prototype.motionBlur = function(radius, sigma, angle) {};

/**
 * @return {!m.State}
 */
m.State.prototype.name = function() {};

/**
 * @return {!m.State}
 */
m.State.prototype.negative = function() {};

/**
 * @param {string|number} type_or_radius
 * @return {!m.State}
 */
m.State.prototype.noise = function(type_or_radius) {};

/**
 * @return {!m.State}
 */
m.State.prototype.noop = function() {};

/**
 * @return {!m.State}
 */
m.State.prototype.normalize = function() {};

/**
 * @param {string} color
 * @return {!m.State}
 */
m.State.prototype.opaque = function(color) {};

/**
 * @param {string} channel
 * @param {string} operator
 * @param {number} rvalue
 * @param {boolean=} percent
 * @return {!m.State}
 */
m.State.prototype.operator = function(channel, operator, rvalue, percent) {};

/**
 * @param {string} channelType
 * @param {string} NxN
 * @return {!m.State}
 */
m.State.prototype.orderedDither = function(channelType, NxN) {};

/**
 * @param {string} directory
 * @return {!m.State}
 */
m.State.prototype.outputDirectory = function(directory) {};

/**
 * @param {number} width
 * @param {number} height
 * @param {string=} arg
 * @return {!m.State}
 */
m.State.prototype.page = function(width, height, arg) {};

/**
 * @param {number} seconds
 * @return {!m.State}
 */
m.State.prototype.pause = function(seconds) {};

/**
 * @param {string} color
 * @return {!m.State}
 */
m.State.prototype.pen = function(color) {};

/**
 * @return {!m.State}
 */
m.State.prototype.ping = function() {};

/**
 * @param {number} size
 * @return {!m.State}
 */
m.State.prototype.pointSize = function(size) {};

/**
 * @return {!m.State}
 */
m.State.prototype.noProfile = function() {};

/**
 * @param {string} type
 * @return {!m.State}
 */
m.State.prototype.preview = function(type) {};

/**
 * @param {number} radius
 * @return {!m.State}
 */
m.State.prototype.paint = function(radius) {};

/**
 * @param {string} command
 * @return {!m.State}
 */
m.State.prototype.process = function(command) {};

/**
 * @param {string} filename
 * @return {!m.State}
 */
m.State.prototype.profile = function(filename) {};

/**
 * @return {!m.State}
 */
m.State.prototype.progress = function() {};

/**
 * @param {string} channelType
 * @param {string} LOWxHIGH
 * @return {!m.State}
 */
m.State.prototype.randomThreshold = function(channelType, LOWxHIGH) {};

/**
 * @param {number} level
 * @return {!m.State}
 */
m.State.prototype.quality = function(level) {};

/**
 * @param {number} width
 * @param {number} height
 * @return {!m.State}
 */
m.State.prototype.raise = function(width, height) {};

/**
 * @param {string} matrix
 * @return {!m.State}
 */
m.State.prototype.recolor = function(matrix) {};

/**
 * @param {number} x
 * @param {number} y
 * @return {!m.State}
 */
m.State.prototype.redPrimary = function(x, y) {};

/**
 * @param {number} width
 * @param {number} height
 * @param {number=} x
 * @param {number=} y
 * @return {!m.State}
 */
m.State.prototype.region = function(width, height, x, y) {};

/**
 * @return {!m.State}
 */
m.State.prototype.remote = function() {};

/**
 * @return {!m.State}
 */
m.State.prototype.render = function() {};

/**
 * @param {string|number} reset_or_width
 * @param {number=} height
 * @param {number=} xoff
 * @param {number=} yoff
 * @param {string=} arg
 * @return {!m.State}
 */
m.State.prototype.repage = function(reset_or_width, height, xoff, yoff, arg) {};

/**
 * @param {string} geometry
 * @return {!m.State}
 */
m.State.prototype.sample = function(geometry) {};

/**
 * @param {number} horizontalFactor
 * @param {number} verticalFactor
 * @return {!m.State}
 */
m.State.prototype.samplingFactor = function(horizontalFactor, verticalFactor) {};

/**
 * @param {number} width
 * @param {number} height
 * @param {number=} offset
 * @return {!m.State}
 */
m.State.prototype.rawSize = function(width, height, offset) {};

/**
 * @param {number} horizontal
 * @param {number} vertical
 * @return {!m.State}
 */
m.State.prototype.resample = function(horizontal, vertical) {};

/**
 * @param {number} width
 * @param {number=} height
 * @param {string=} option
 * @return {!m.State}
 */
m.State.prototype.resize = function(width, height, option) {};

/**
 * @param {number} horizontal
 * @param {number} vertical
 * @return {!m.State}
 */
m.State.prototype.roll = function(horizontal, vertical) {};

/**
 * @param {string} backgroundColor
 * @param {number} degrees
 * @return {!m.State}
 */
m.State.prototype.rotate = function(backgroundColor, degrees) {};

/**
 * @param {number} index
 * @return {!m.State}
 */
m.State.prototype.scene = function(index) {};

/**
 * @param {number} start
 * @param {number} end
 * @return {!m.State}
 */
m.State.prototype.scenes = function(start, end) {};

/**
 * @param {number} width
 * @param {number} height
 * @return {!m.State}
 */
m.State.prototype.scale = function(width, height) {};

/**
 * @return {!m.State}
 */
m.State.prototype.screen = function() {};

/**
 * @param {number} clustherThreshold
 * @param {number} smoothingThreshold
 * @return {!m.State}
 */
m.State.prototype.segment = function(clustherThreshold, smoothingThreshold) {};

/**
 * @return {!m.State}
 */
m.State.prototype.sepia = function() {};

/**
 * @param {string} attribute
 * @param {string} value
 * @return {!m.State}
 */
m.State.prototype.set = function(attribute, value) {};

/**
 * @param {string} format
 * @return {!m.State}
 */
m.State.prototype.setFormat = function(format) {};

/**
 * @param {number} azimuth
 * @param {number} elevation
 * @return {!m.State}
 */
m.State.prototype.shade = function(azimuth, elevation) {};

/**
 * @param {number} radius
 * @param {number=} sigma
 * @return {!m.State}
 */
m.State.prototype.shadow = function(radius, sigma) {};

/**
 * @return {!m.State}
 */
m.State.prototype.sharedMemory = function() {};

/**
 * @param {number} width
 * @param {number} height
 * @param {boolean=} percent
 * @return {!m.State}
 */
m.State.prototype.shave = function(width, height, percent) {};

/**
 * @param {number} radius
 * @param {number=} sigma
 * @return {!m.State}
 */
m.State.prototype.sharpen = function(radius, sigma) {};

/**
 * @param {number} xDegrees
 * @param {number} yDegress
 * @return {!m.State}
 */
m.State.prototype.shear = function(xDegrees, yDegress) {};

/**
 * @return {!m.State}
 */
m.State.prototype.silent = function() {};

/**
 * @param {number} count
 * @return {!m.State}
 */
m.State.prototype.snaps = function(count) {};

/**
 * @param {number} threshold
 * @return {!m.State}
 */
m.State.prototype.solarize = function(threshold) {};

/**
 * @param {number} amount
 * @return {!m.State}
 */
m.State.prototype.spread = function(amount) {};

/**
 * @param {number} offset
 * @return {!m.State}
 */
m.State.prototype.stegano = function(offset) {};

/**
 * @return {!m.State}
 */
m.State.prototype.stereo = function() {};

/**
 * @return {!m.State}
 */
m.State.prototype.strip = function() {};

/**
 * @param {number} degrees
 * @return {!m.State}
 */
m.State.prototype.swirl = function(degrees) {};

/**
 * @param {string} font
 * @return {!m.State}
 */
m.State.prototype.textFont = function(font) {};

/**
 * @param {number} value
 * @param {boolean=} percent
 * @return {!m.State}
 */
m.State.prototype.threshold = function(value, percent) {};

/**
 * @param {number} width
 * @param {number} height
 * @param {string} outName
 * @param {function(!Error, string, string, string): ?|number} callback_or_quality
 * @param {function(!Error, string, string, string): ?|string=} callback_or_align
 * @param {function(!Error, string, string, string): ?=} callback
 * @return {!m.State}
 */
m.State.prototype.thumb = function(width, height, outName, callback_or_quality, callback_or_align, callback) {};

/**
 * @param {string} filename
 * @return {!m.State}
 */
m.State.prototype.tile = function(filename) {};

/**
 * @param {string} title
 * @return {!m.State}
 */
m.State.prototype.title = function(title) {};

/**
 * @param {string} color
 * @return {!m.State}
 */
m.State.prototype.transform = function(color) {};

/**
 * @param {string} color
 * @return {!m.State}
 */
m.State.prototype.transparent = function(color) {};

/**
 * @param {number} depth
 * @return {!m.State}
 */
m.State.prototype.treeDepth = function(depth) {};

/**
 * @return {!m.State}
 */
m.State.prototype.trim = function() {};

/**
 * @param {string} type
 * @return {!m.State}
 */
m.State.prototype.type = function(type) {};

/**
 * @param {number} seconds
 * @return {!m.State}
 */
m.State.prototype.update = function(seconds) {};

/**
 * @param {string} type
 * @return {!m.State}
 */
m.State.prototype.units = function(type) {};

/**
 * @param {number} radius
 * @param {number=} sigma
 * @param {number=} amount
 * @param {number=} threshold
 * @return {!m.State}
 */
m.State.prototype.unsharp = function(radius, sigma, amount, threshold) {};

/**
 * @return {!m.State}
 */
m.State.prototype.usePixmap = function() {};

/**
 * @return {!m.State}
 */
m.State.prototype.view = function() {};

/**
 * @param {string} method
 * @return {!m.State}
 */
m.State.prototype.virtualPixel = function(method) {};

/**
 * @param {string} type
 * @return {!m.State}
 */
m.State.prototype.visual = function(type) {};

/**
 * @param {number} brightness
 * @param {number} saturation
 * @return {!m.State}
 */
m.State.prototype.watermark = function(brightness, saturation) {};

/**
 * @param {number} amplitude
 * @param {number} wavelength
 * @return {!m.State}
 */
m.State.prototype.wave = function(amplitude, wavelength) {};

/**
 * @param {number} x
 * @param {number} y
 * @return {!m.State}
 */
m.State.prototype.whitePoint = function(x, y) {};

/**
 * @param {number} intensity_or_red
 * @param {number=} green
 * @param {number=} blue
 * @param {number=} opacity
 * @return {!m.State}
 */
m.State.prototype.whiteThreshold = function(intensity_or_red, green, blue, opacity) {};

/**
 * @param {string} id
 * @return {!m.State}
 */
m.State.prototype.window = function(id) {};

/**
 * @return {!m.State}
 */
m.State.prototype.windowGroup = function() {};

/**
 * @param {function(!Error, number): ?|!m.GetterOptions} callback_or_opts
 * @param {function(!Error, number): ?=} callback
 * @return {!m.State}
 */
m.State.prototype.color = function(callback_or_opts, callback) {};

/**
 * @param {function(!Error, number): ?|!m.GetterOptions} callback_or_opts
 * @param {function(!Error, number): ?=} callback
 * @return {!m.State}
 */
m.State.prototype.depth = function(callback_or_opts, callback) {};

/**
 * @param {function(!Error, string): ?|!m.GetterOptions} callback_or_opts
 * @param {function(!Error, string): ?=} callback
 * @return {!m.State}
 */
m.State.prototype.filesize = function(callback_or_opts, callback) {};

/**
 * @param {function(!Error, string): ?|!m.GetterOptions} callback_or_opts
 * @param {function(!Error, string): ?=} callback
 * @return {!m.State}
 */
m.State.prototype.format = function(callback_or_opts, callback) {};

/**
 * @param {function(!Error, !m.ImageInfo): ?|!m.GetterOptions} callback_or_opts
 * @param {function(!Error, !m.ImageInfo): ?=} callback
 * @return {!m.State}
 */
m.State.prototype.identify = function(callback_or_opts, callback) {};

/**
 * @param {function(!Error, string): ?|!m.GetterOptions} callback_or_opts
 * @param {function(!Error, string): ?=} callback
 * @return {!m.State}
 */
m.State.prototype.res = function(callback_or_opts, callback) {};

/**
 * @param {function(!Error, !m.Dimensions): ?|!m.GetterOptions} callback_or_opts
 * @param {function(!Error, !m.Dimensions): ?=} callback
 * @return {!m.State}
 */
m.State.prototype.size = function(callback_or_opts, callback) {};

/**
 * @param {function(!Error, string): ?|!m.GetterOptions} callback_or_opts
 * @param {function(!Error, string): ?=} callback
 * @return {!m.State}
 */
m.State.prototype.orientation = function(callback_or_opts, callback) {};

/**
 * @param {string} args
 * @return {!m.State}
 */
m.State.prototype.draw = function(args) {};

/**
 * @param {number} x0
 * @param {number} y0
 * @param {number} x1
 * @param {number} y1
 * @param {number} r0
 * @param {number} r1
 * @return {!m.State}
 */
m.State.prototype.drawArc = function(x0, y0, x1, y1, r0, r1) {};

/**
 * @param {number} x0
 * @param {number} y0
 * @param {number} x1
 * @param {number} y1
 * @param {number=} x2
 * @param {number=} y2
 * @param {...number} coords
 * @return {!m.State}
 */
m.State.prototype.drawBezier = function(x0, y0, x1, y1, x2, y2, coords) {};

/**
 * @param {number} x0
 * @param {number} y0
 * @param {number} x1
 * @param {number} y1
 * @return {!m.State}
 */
m.State.prototype.drawCircle = function(x0, y0, x1, y1) {};

/**
 * @param {number} x0
 * @param {number} y0
 * @param {number} rx
 * @param {number} ry
 * @param {number} a0
 * @param {number} a1
 * @return {!m.State}
 */
m.State.prototype.drawEllipse = function(x0, y0, rx, ry, a0, a1) {};

/**
 * @param {number} x0
 * @param {number} y0
 * @param {number} x1
 * @param {number} y1
 * @return {!m.State}
 */
m.State.prototype.drawLine = function(x0, y0, x1, y1) {};

/**
 * @param {number} x
 * @param {number} y
 * @return {!m.State}
 */
m.State.prototype.drawPoint = function(x, y) {};

/**
 * @param {number} x0
 * @param {number} y0
 * @param {number} x1
 * @param {number} y1
 * @param {number} x2
 * @param {number} y2
 * @param {...number} coords
 * @return {!m.State}
 */
m.State.prototype.drawPolygon = function(x0, y0, x1, y1, x2, y2, coords) {};

/**
 * @param {number} x0
 * @param {number} y0
 * @param {number} x1
 * @param {number} y1
 * @param {number} x2
 * @param {number} y2
 * @param {...number} coords
 * @return {!m.State}
 */
m.State.prototype.drawPolyline = function(x0, y0, x1, y1, x2, y2, coords) {};

/**
 * @param {number} x0
 * @param {number} y0
 * @param {number} x1
 * @param {number} y1
 * @param {number=} rc_or_wc
 * @param {number=} hc
 * @return {!m.State}
 */
m.State.prototype.drawRectangle = function(x0, y0, x1, y1, rc_or_wc, hc) {};

/**
 * @param {number} x
 * @param {number} y
 * @param {string} text
 * @param {string=} gravity
 * @return {!m.State}
 */
m.State.prototype.drawText = function(x, y, text, gravity) {};

/**
 * @param {string} color
 * @return {!m.State}
 */
m.State.prototype.fill = function(color) {};

/**
 * @param {string} name
 * @param {number=} size
 * @return {!m.State}
 */
m.State.prototype.font = function(name, size) {};

/**
 * @param {number} size
 * @return {!m.State}
 */
m.State.prototype.fontSize = function(size) {};

/**
 * @param {string} color
 * @param {number=} width
 * @return {!m.State}
 */
m.State.prototype.stroke = function(color, width) {};

/**
 * @param {number} width
 * @return {!m.State}
 */
m.State.prototype.strokeWidth = function(width) {};

/**
 * @param {string} property
 * @param {number} x
 * @param {number} y
 * @param {string} method
 * @return {!m.State}
 */
m.State.prototype.setDraw = function(property, x, y, method) {};

/**
 * @param {function(!Error, string, string, string): ?|string=} callback_or_format
 * @param {function(!Error, string, string, string): ?=} callback
 * @return {!internal.PassThrough}
 */
m.State.prototype.stream = function(callback_or_format, callback) {};

/**
 * @param {function(!Error, ?): ?|string} callback_or_format
 * @param {function(!Error, ?): ?=} callback
 * @return {!internal.PassThrough}
 */
m.State.prototype.toBuffer = function(callback_or_format, callback) {};

/**
 * @param {string} filename
 * @param {function(!Error, string, string, string): ?} callback
 * @return {void}
 */
m.State.prototype.write = function(filename, callback) {};
/**
 * @record
 * @struct
 */
m.SubClass = function() {};

/* TODO: CallSignature: m */

/* TODO: CallSignature: m */

/* TODO: CallSignature: m */

/* TODO: CallSignature: m */

/**
 * @param {string} filename1
 * @param {string} filename2
 * @param {function(!Error, boolean, number, number): ?|number|!m.CompareOptions} callback_or_tolerance_or_options
 * @param {function(!Error, boolean, number, number): ?=} callback
 * @return {void}
 */
m.compare = function(filename1, filename2, callback_or_tolerance_or_options, callback) {};

/**
 * @param {!m.ClassOptions} options
 * @return {!m.SubClass}
 */
m.subClass = function(options) {};

/** @typedef {string} */
m.ChannelType;

/** @typedef {function(!Error, boolean, number, number): ?} */
m.CompareCallback;

/** @typedef {function(!Error, T): ?} */
m.GetterCallback;

/** @typedef {string} */
m.ResizeOption;

/** @typedef {function(!Error, string, string, string): ?} */
m.WriteCallback;

/* TODO: ExportAssignment in  */
