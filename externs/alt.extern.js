/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/alt/index.d.ts:
/** @const */
var AltJS = {};
/**
 * @record
 * @struct
 */
AltJS.StoreReduce = function() {};
 /** @type {?} */
AltJS.StoreReduce.prototype.action;
 /** @type {?} */
AltJS.StoreReduce.prototype.data;
/**
 * @record
 * @struct
 */
AltJS.StoreModel = function() {};
 /** @type {?} */
AltJS.StoreModel.prototype.dispatcher;
 /** @type {!AltJS.Alt} */
AltJS.StoreModel.prototype.alt;
 /** @type {string} */
AltJS.StoreModel.prototype.displayName;

/**
 * @param {!AltJS.Action<?>} action
 * @param {function(!Array<?>): ?} handler
 * @return {void}
 */
AltJS.StoreModel.prototype.bindAction = function(action, handler) {};

/**
 * @param {!AltJS.ActionsClass} actions
 * @return {void}
 */
AltJS.StoreModel.prototype.bindActions = function(actions) {};

/**
 * @param {?} exportConfig
 * @return {void}
 */
AltJS.StoreModel.prototype.exportPublicMethods = function(exportConfig) {};

/**
 * @param {!Object<string,(!AltJS.Action<?>|!Object<string,!AltJS.Action<?>>)>} config
 * @return {void}
 */
AltJS.StoreModel.prototype.bindListeners = function(config) {};

/**
 * @param {!Object<string,function(): !AltJS.SourceModel<?>>} source
 * @return {void}
 */
AltJS.StoreModel.prototype.exportAsync = function(source) {};

/**
 * @param {!Object<string,function(): !AltJS.SourceModel<?>>} datasource
 * @return {void}
 */
AltJS.StoreModel.prototype.registerAsync = function(datasource) {};

/**
 * @param {S|function(S, S): S} state_or_stateFn
 * @return {void}
 */
AltJS.StoreModel.prototype.setState = function(state_or_stateFn) {};

/**
 * @return {S}
 */
AltJS.StoreModel.prototype.getState = function() {};

/**
 * @param {!AltJS.AltStore<?>|(!AltJS.AltStore<?>|!Array<!AltJS.AltStore<?>>)} store_or_storeOrStores
 * @return {void}
 */
AltJS.StoreModel.prototype.waitFor = function(store_or_storeOrStores) {};

/**
 * @param {function(?): ?} fn
 * @return {void}
 */
AltJS.StoreModel.prototype.onSerialize = function(fn) {};

/**
 * @param {function(?): ?} fn
 * @return {void}
 */
AltJS.StoreModel.prototype.onDeserialize = function(fn) {};

/**
 * @param {AltJS.lifeCycleEvents} event
 * @param {function(): ?} callback
 * @return {void}
 */
AltJS.StoreModel.prototype.on = function(event, callback) {};

/**
 * @return {void}
 */
AltJS.StoreModel.prototype.emitChange = function() {};

/**
 * @param {?} data
 * @param {!AltJS.Action<?>} action
 * @return {void}
 */
AltJS.StoreModel.prototype.otherwise = function(data, action) {};

/**
 * @param {!AltJS.Alt} alt
 * @return {?}
 */
AltJS.StoreModel.prototype.observe = function(alt) {};

/**
 * @param {?} state
 * @param {!AltJS.StoreReduce} config
 * @return {!Object}
 */
AltJS.StoreModel.prototype.reduce = function(state, config) {};

/**
 * @return {void}
 */
AltJS.StoreModel.prototype.preventDefault = function() {};

/**
 * @param {!Object} payload
 * @param {!Object} state
 * @return {void}
 */
AltJS.StoreModel.prototype.afterEach = function(payload, state) {};

/**
 * @param {!Object} payload
 * @param {!Object} state
 * @return {void}
 */
AltJS.StoreModel.prototype.beforeEach = function(payload, state) {};

/**
 * @return {!AltJS.AltStore<S>}
 */
AltJS.StoreModel.prototype.getInstance = function() {};

/** @typedef {!Object<string,function(): !AltJS.SourceModel<?>>} */
AltJS.Source;
/**
 * @record
 * @struct
 */
AltJS.SourceModel = function() {};
 /** @type {function(?): void} */
AltJS.SourceModel.prototype.loading;
 /** @type {function(S): void} */
AltJS.SourceModel.prototype.success;
 /** @type {function(?): void} */
AltJS.SourceModel.prototype.error;

/**
 * @param {?} state
 * @param {...?} args
 * @return {?}
 */
AltJS.SourceModel.prototype.local = function(state, args) {};

/**
 * @param {?} state
 * @param {...?} args
 * @return {!Promise<S>}
 */
AltJS.SourceModel.prototype.remote = function(state, args) {};

/**
 * @param {function(!Array<?>): boolean} fetchFn
 * @return {void}
 */
AltJS.SourceModel.prototype.shouldFetch = function(fetchFn) {};

/**
 * @param {?} response
 * @param {!AltJS.Action<?>} action
 * @param {...?} args
 * @return {?}
 */
AltJS.SourceModel.prototype.interceptResponse = function(response, action, args) {};
/**
 * @record
 * @struct
 */
AltJS.AltStore = function() {};

/**
 * @return {S}
 */
AltJS.AltStore.prototype.getState = function() {};

/**
 * @param {function(S): ?} handler
 * @return {function(): void}
 */
AltJS.AltStore.prototype.listen = function(handler) {};

/**
 * @param {function(S): ?} handler
 * @return {void}
 */
AltJS.AltStore.prototype.unlisten = function(handler) {};

/**
 * @return {void}
 */
AltJS.AltStore.prototype.emitChange = function() {};

/** @const */
AltJS.lifeCycleEvents = {};
/** @const {number} */
AltJS.lifeCycleEvents.bootstrap;
/** @const {number} */
AltJS.lifeCycleEvents.snapshot;
/** @const {number} */
AltJS.lifeCycleEvents.init;
/** @const {number} */
AltJS.lifeCycleEvents.rollback;
/** @const {number} */
AltJS.lifeCycleEvents.error;

/** @typedef {!Object<string,!AltJS.Action<?>>} */
AltJS.Actions;
/**
 * @record
 * @struct
 */
AltJS.Action = function() {};

/* TODO: CallSignature: AltJS */

/**
 * @param {?} data
 * @return {void}
 */
AltJS.Action.prototype.defer = function(data) {};
/**
 * @record
 * @struct
 */
AltJS.ActionsClass = function() {};
 /** @type {!Object<string,!AltJS.Action<?>>} */
AltJS.ActionsClass.prototype.actions;

/**
 * @param {...string} action
 * @return {void}
 */
AltJS.ActionsClass.prototype.generateActions = function(action) {};

/**
 * @param {...?} payload
 * @return {void}
 */
AltJS.ActionsClass.prototype.dispatch = function(payload) {};

/** @typedef {function(!AltJS.StoreModel<?>): !AltJS.AltStore<?>} */
AltJS.StateTransform;
/**
 * @record
 * @struct
 */
AltJS.AltConfig = function() {};
 /** @type {?} */
AltJS.AltConfig.prototype.dispatcher;
 /** @type {function(function(!Object): string): void} */
AltJS.AltConfig.prototype.serialize;
 /** @type {function(function(string): !Object): void} */
AltJS.AltConfig.prototype.deserialize;
 /** @type {!Array<function(!AltJS.StoreModel<?>): !AltJS.AltStore<?>>} */
AltJS.AltConfig.prototype.storeTransforms;
 /** @type {function(function(!Array<?>): ?): void} */
AltJS.AltConfig.prototype.batchingFunction;

/**
 * @constructor
 * @struct
 * @param {!AltJS.AltConfig=} config
 */
AltJS.Alt = function(config) {};
 /** @type {!Object<string,!AltJS.Action<?>>} */
AltJS.Alt.prototype.actions;

/**
 * @param {string} jsonData
 * @return {void}
 */
AltJS.Alt.prototype.bootstrap = function(jsonData) {};

/**
 * @param {...string} storeNames
 * @return {string}
 */
AltJS.Alt.prototype.takeSnapshot = function(storeNames) {};

/**
 * @return {!Object}
 */
AltJS.Alt.prototype.flush = function() {};

/**
 * @param {...!AltJS.AltStore<?>} stores
 * @return {void}
 */
AltJS.Alt.prototype.recycle = function(stores) {};

/**
 * @return {void}
 */
AltJS.Alt.prototype.rollback = function() {};

/**
 * @param {(string|!AltJS.Action<?>)=} action
 * @param {!Object=} data
 * @param {?=} details
 * @return {void}
 */
AltJS.Alt.prototype.dispatch = function(action, data, details) {};

/**
 * @param {string} actionsName
 * @param {function(new: (!AltJS.ActionsClass), !AltJS.Alt): ?} ActionsClass
 * @return {void}
 */
AltJS.Alt.prototype.addActions = function(actionsName, ActionsClass) {};

/**
 * @template T
 * @param {function(new: (!AltJS.ActionsClass), !AltJS.Alt): ?} ActionsClass
 * @param {!Object=} exportObj
 * @param {...?} constructorArgs
 * @return {T}
 */
AltJS.Alt.prototype.createActions = function(ActionsClass, exportObj, constructorArgs) {};

/**
 * @template T
 * @param {...string} actions
 * @return {T}
 */
AltJS.Alt.prototype.generateActions = function(actions) {};

/**
 * @param {string} actionsName
 * @return {!Object<string,!AltJS.Action<?>>}
 */
AltJS.Alt.prototype.getActions = function(actionsName) {};

/**
 * @param {string} name
 * @param {!AltJS.StoreModel<?>} store
 * @param {boolean=} saveStore
 * @return {void}
 */
AltJS.Alt.prototype.addStore = function(name, store, saveStore) {};

/**
 * @template S
 * @param {!AltJS.StoreModel<S>} store
 * @param {string=} name
 * @return {!AltJS.AltStore<S>}
 */
AltJS.Alt.prototype.createStore = function(store, name) {};

/**
 * @param {string} name
 * @return {!AltJS.AltStore<?>}
 */
AltJS.Alt.prototype.getStore = function(name) {};
/**
 * @record
 * @struct
 */
AltJS.AltFactory = function() {};

/* TODO: ConstructSignature: AltJS */

/** @typedef {function(new: (!AltJS.ActionsClass), !AltJS.Alt): ?} */
AltJS.ActionsClassConstructor;

/** @typedef {function(!Array<?>): ?} */
AltJS.ActionHandler;

/** @typedef {!Object<string,function(!Array<?>): ?>} */
AltJS.ExportConfig;
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "alt/utils/chromeDebug"
/** @const */
tsickle_declare_module.alt_utils_chromeDebug = {};

/**
 * @param {!AltJS.Alt} alt
 * @return {void}
 */
tsickle_declare_module.alt_utils_chromeDebug.chromeDebug = function(alt) {};

/* TODO: ExportAssignment in tsickle_declare_module.alt_utils_chromeDebug */
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "alt/AltContainer"
/** @const */
tsickle_declare_module.alt_AltContainer = {};

/* TODO: ImportDeclaration in tsickle_declare_module.alt_AltContainer */
/**
 * @record
 * @struct
 */
tsickle_declare_module.alt_AltContainer.ContainerProps = function() {};
 /** @type {!AltJS.AltStore<?>} */
tsickle_declare_module.alt_AltContainer.ContainerProps.prototype.store;
 /** @type {!Array<!AltJS.AltStore<?>>} */
tsickle_declare_module.alt_AltContainer.ContainerProps.prototype.stores;
 /** @type {!Object<string,?>} */
tsickle_declare_module.alt_AltContainer.ContainerProps.prototype.inject;
 /** @type {!Object<string,!Object>} */
tsickle_declare_module.alt_AltContainer.ContainerProps.prototype.actions;
 /** @type {function(!Array<?>): !React.ReactElement<?>} */
tsickle_declare_module.alt_AltContainer.ContainerProps.prototype.render;
 /** @type {!AltJS.Alt} */
tsickle_declare_module.alt_AltContainer.ContainerProps.prototype.flux;
 /** @type {function(!AltJS.AltStore<?>, ?): ?} */
tsickle_declare_module.alt_AltContainer.ContainerProps.prototype.transform;
 /** @type {function(?): boolean} */
tsickle_declare_module.alt_AltContainer.ContainerProps.prototype.shouldComponentUpdate;
 /** @type {!React.Component<?, !Object>} */
tsickle_declare_module.alt_AltContainer.ContainerProps.prototype.component;

/** @typedef {!React.ReactElement<!ContainerProps>} */
tsickle_declare_module.alt_AltContainer.AltContainer;
 /** @type {!React.ComponentClass<!ContainerProps>} */
tsickle_declare_module.alt_AltContainer.AltContainer;

/* TODO: ExportAssignment in tsickle_declare_module.alt_AltContainer */
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "alt"
/** @const */
tsickle_declare_module.alt = {};
 /** @type {!AltJS.AltFactory} */
tsickle_declare_module.alt.alt;

/* TODO: ExportAssignment in tsickle_declare_module.alt */
