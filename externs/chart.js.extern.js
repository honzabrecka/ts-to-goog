/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/chart.js/index.d.ts:

/**
 * @constructor
 * @struct
 * @param {(string|?<!HTMLElement>|!CanvasRenderingContext2D|!HTMLCanvasElement|!Array<string>|!Array<!CanvasRenderingContext2D>|!Array<!HTMLCanvasElement>)} context
 * @param {!Chart.ChartConfiguration} options
 */
function Chart(context, options) {}
 /** @type {?} */
Chart.Chart;
 /** @type {!Chart.ChartConfiguration} */
Chart.prototype.config;
 /** @type {!Chart.ChartData} */
Chart.prototype.data;
 /** @type {function(): !Object} */
Chart.prototype.destroy;
 /** @type {function(?, ?): !Object} */
Chart.prototype.update;
 /** @type {function(?, ?): !Object} */
Chart.prototype.render;
 /** @type {function(): !Object} */
Chart.prototype.stop;
 /** @type {function(): !Object} */
Chart.prototype.resize;
 /** @type {function(): !Object} */
Chart.prototype.clear;
 /** @type {function(): string} */
Chart.prototype.toBase64;
 /** @type {function(): !Object} */
Chart.prototype.generateLegend;
 /** @type {function(?): !Object} */
Chart.prototype.getElementAtEvent;
 /** @type {function(?): !Array<!Object>} */
Chart.prototype.getElementsAtEvent;
 /** @type {function(?): !Array<!Object>} */
Chart.prototype.getDatasetAtEvent;
 /** @type {!CanvasRenderingContext2D} */
Chart.prototype.ctx;
 /** @type {!HTMLCanvasElement} */
Chart.prototype.canvas;
 /** @type {!Chart.ChartArea} */
Chart.prototype.chartArea;
 /** @type {!PluginServiceStatic} */
Chart.pluginService;
 /** @type {{global: !Chart.ChartOptions}} */
Chart.defaults;
/**
 * @constructor
 * @struct
 */
function PluginServiceStatic() {}

/**
 * @param {?=} plugin
 * @return {void}
 */
PluginServiceStatic.prototype.register = function(plugin) {};
/**
 * @record
 * @struct
 */
function PluginServiceRegistrationOptions() {}

/**
 * @param {!Chart} chartInstance
 * @return {void}
 */
PluginServiceRegistrationOptions.prototype.beforeInit = function(chartInstance) {};

/**
 * @param {!Chart} chartInstance
 * @return {void}
 */
PluginServiceRegistrationOptions.prototype.afterInit = function(chartInstance) {};

/**
 * @param {!Chart} chartInstance
 * @param {?} newChartSize
 * @return {void}
 */
PluginServiceRegistrationOptions.prototype.resize = function(chartInstance, newChartSize) {};

/**
 * @param {!Chart} chartInstance
 * @return {void}
 */
PluginServiceRegistrationOptions.prototype.beforeUpdate = function(chartInstance) {};

/**
 * @param {!Chart} chartInstance
 * @return {void}
 */
PluginServiceRegistrationOptions.prototype.afterScaleUpdate = function(chartInstance) {};

/**
 * @param {!Chart} chartInstance
 * @return {void}
 */
PluginServiceRegistrationOptions.prototype.beforeDatasetsUpdate = function(chartInstance) {};

/**
 * @param {!Chart} chartInstance
 * @return {void}
 */
PluginServiceRegistrationOptions.prototype.afterDatasetsUpdate = function(chartInstance) {};

/**
 * @param {!Chart} chartInstance
 * @return {void}
 */
PluginServiceRegistrationOptions.prototype.afterUpdate = function(chartInstance) {};

/**
 * @param {!Chart} chartInstance
 * @return {void}
 */
PluginServiceRegistrationOptions.prototype.beforeRender = function(chartInstance) {};

/**
 * @param {!Chart} chartInstance
 * @param {string} easing
 * @return {void}
 */
PluginServiceRegistrationOptions.prototype.beforeDraw = function(chartInstance, easing) {};

/**
 * @param {!Chart} chartInstance
 * @param {string} easing
 * @return {void}
 */
PluginServiceRegistrationOptions.prototype.afterDraw = function(chartInstance, easing) {};

/**
 * @param {!Chart} chartInstance
 * @param {string} easing
 * @return {void}
 */
PluginServiceRegistrationOptions.prototype.beforeDatasetsDraw = function(chartInstance, easing) {};

/**
 * @param {!Chart} chartInstance
 * @param {string} easing
 * @return {void}
 */
PluginServiceRegistrationOptions.prototype.afterDatasetsDraw = function(chartInstance, easing) {};

/**
 * @param {!Chart} chartInstance
 * @return {void}
 */
PluginServiceRegistrationOptions.prototype.destroy = function(chartInstance) {};

/**
 * @param {!Chart} chartInstance
 * @param {!Event} event
 * @return {void}
 */
PluginServiceRegistrationOptions.prototype.beforeEvent = function(chartInstance, event) {};

/**
 * @param {!Chart} chartInstance
 * @param {!Event} event
 * @return {void}
 */
PluginServiceRegistrationOptions.prototype.afterEvent = function(chartInstance, event) {};
/**
 * @record
 * @struct
 */
function Size() {}
 /** @type {number} */
Size.prototype.height;
 /** @type {number} */
Size.prototype.width;

/** @typedef {string} */
Chart.ChartType;

/** @typedef {string} */
Chart.TimeUnit;

/** @typedef {string} */
Chart.ScaleType;

/** @typedef {string} */
Chart.PositionType;
/**
 * @record
 * @struct
 */
Chart.ChartArea = function() {};
 /** @type {number} */
Chart.ChartArea.prototype.top;
 /** @type {number} */
Chart.ChartArea.prototype.right;
 /** @type {number} */
Chart.ChartArea.prototype.bottom;
 /** @type {number} */
Chart.ChartArea.prototype.left;
/**
 * @record
 * @struct
 */
Chart.ChartLegendItem = function() {};
 /** @type {string} */
Chart.ChartLegendItem.prototype.text;
 /** @type {string} */
Chart.ChartLegendItem.prototype.fillStyle;
 /** @type {boolean} */
Chart.ChartLegendItem.prototype.hidden;
 /** @type {string} */
Chart.ChartLegendItem.prototype.lineCap;
 /** @type {!Array<number>} */
Chart.ChartLegendItem.prototype.lineDash;
 /** @type {number} */
Chart.ChartLegendItem.prototype.lineDashOffset;
 /** @type {string} */
Chart.ChartLegendItem.prototype.lineJoin;
 /** @type {number} */
Chart.ChartLegendItem.prototype.lineWidth;
 /** @type {string} */
Chart.ChartLegendItem.prototype.strokeStyle;
/**
 * @record
 * @struct
 */
Chart.ChartTooltipItem = function() {};
 /** @type {string} */
Chart.ChartTooltipItem.prototype.xLabel;
 /** @type {string} */
Chart.ChartTooltipItem.prototype.yLabel;
 /** @type {number} */
Chart.ChartTooltipItem.prototype.datasetIndex;
 /** @type {number} */
Chart.ChartTooltipItem.prototype.index;
/**
 * @record
 * @struct
 */
Chart.ChartTooltipCallback = function() {};

/**
 * @param {!Array<!Chart.ChartTooltipItem>=} item
 * @param {?=} data
 * @return {void}
 */
Chart.ChartTooltipCallback.prototype.beforeTitle = function(item, data) {};

/**
 * @param {!Array<!Chart.ChartTooltipItem>=} item
 * @param {?=} data
 * @return {void}
 */
Chart.ChartTooltipCallback.prototype.title = function(item, data) {};

/**
 * @param {!Array<!Chart.ChartTooltipItem>=} item
 * @param {?=} data
 * @return {void}
 */
Chart.ChartTooltipCallback.prototype.afterTitle = function(item, data) {};

/**
 * @param {!Array<!Chart.ChartTooltipItem>=} item
 * @param {?=} data
 * @return {void}
 */
Chart.ChartTooltipCallback.prototype.beforeBody = function(item, data) {};

/**
 * @param {!Chart.ChartTooltipItem=} tooltipItem
 * @param {?=} data
 * @return {void}
 */
Chart.ChartTooltipCallback.prototype.beforeLabel = function(tooltipItem, data) {};

/**
 * @param {!Chart.ChartTooltipItem=} tooltipItem
 * @param {?=} data
 * @return {void}
 */
Chart.ChartTooltipCallback.prototype.label = function(tooltipItem, data) {};

/**
 * @param {!Chart.ChartTooltipItem=} tooltipItem
 * @param {?=} data
 * @return {void}
 */
Chart.ChartTooltipCallback.prototype.afterLabel = function(tooltipItem, data) {};

/**
 * @param {!Array<!Chart.ChartTooltipItem>=} item
 * @param {?=} data
 * @return {void}
 */
Chart.ChartTooltipCallback.prototype.afterBody = function(item, data) {};

/**
 * @param {!Array<!Chart.ChartTooltipItem>=} item
 * @param {?=} data
 * @return {void}
 */
Chart.ChartTooltipCallback.prototype.beforeFooter = function(item, data) {};

/**
 * @param {!Array<!Chart.ChartTooltipItem>=} item
 * @param {?=} data
 * @return {void}
 */
Chart.ChartTooltipCallback.prototype.footer = function(item, data) {};

/**
 * @param {!Array<!Chart.ChartTooltipItem>=} item
 * @param {?=} data
 * @return {void}
 */
Chart.ChartTooltipCallback.prototype.afterFooter = function(item, data) {};
/**
 * @record
 * @struct
 */
Chart.ChartAnimationParameter = function() {};
 /** @type {?} */
Chart.ChartAnimationParameter.prototype.chartInstance;
 /** @type {?} */
Chart.ChartAnimationParameter.prototype.animationObject;
/**
 * @record
 * @struct
 */
Chart.ChartPoint = function() {};
 /** @type {(string|number|!Date)} */
Chart.ChartPoint.prototype.x;
 /** @type {number} */
Chart.ChartPoint.prototype.y;
/**
 * @record
 * @struct
 */
Chart.ChartConfiguration = function() {};
 /** @type {string} */
Chart.ChartConfiguration.prototype.type;
 /** @type {!Chart.ChartData} */
Chart.ChartConfiguration.prototype.data;
 /** @type {!Chart.ChartOptions} */
Chart.ChartConfiguration.prototype.options;
/**
 * @record
 * @struct
 */
Chart.ChartData = function() {};
 /** @type {!Array<(string|!Array<string>)>} */
Chart.ChartData.prototype.labels;
 /** @type {!Array<!Chart.ChartDataSets>} */
Chart.ChartData.prototype.datasets;
/**
 * @record
 * @struct
 */
Chart.ChartOptions = function() {};
 /** @type {boolean} */
Chart.ChartOptions.prototype.responsive;
 /** @type {number} */
Chart.ChartOptions.prototype.responsiveAnimationDuration;
 /** @type {boolean} */
Chart.ChartOptions.prototype.maintainAspectRatio;
 /** @type {!Array<string>} */
Chart.ChartOptions.prototype.events;
 /** @type {!Chart.ChartTitleOptions} */
Chart.ChartOptions.prototype.title;
 /** @type {!Chart.ChartLegendOptions} */
Chart.ChartOptions.prototype.legend;
 /** @type {!Chart.ChartTooltipOptions} */
Chart.ChartOptions.prototype.tooltips;
 /** @type {!Chart.ChartHoverOptions} */
Chart.ChartOptions.prototype.hover;
 /** @type {!Chart.ChartAnimationOptions} */
Chart.ChartOptions.prototype.animation;
 /** @type {!Chart.ChartElementsOptions} */
Chart.ChartOptions.prototype.elements;
 /** @type {!Chart.ChartScales} */
Chart.ChartOptions.prototype.scales;
 /** @type {boolean} */
Chart.ChartOptions.prototype.showLines;
 /** @type {boolean} */
Chart.ChartOptions.prototype.spanGaps;
 /** @type {number} */
Chart.ChartOptions.prototype.cutoutPercentage;
 /** @type {number} */
Chart.ChartOptions.prototype.circumference;
 /** @type {number} */
Chart.ChartOptions.prototype.rotation;

/**
 * @param {?=} any
 * @return {?}
 */
Chart.ChartOptions.prototype.onClick = function(any) {};
/**
 * @record
 * @struct
 */
Chart.ChartFontOptions = function() {};
 /** @type {(string|!Array<string>|!CanvasGradient|!CanvasPattern)} */
Chart.ChartFontOptions.prototype.defaultFontColor;
 /** @type {string} */
Chart.ChartFontOptions.prototype.defaultFontFamily;
 /** @type {number} */
Chart.ChartFontOptions.prototype.defaultFontSize;
 /** @type {string} */
Chart.ChartFontOptions.prototype.defaultFontStyle;
/**
 * @record
 * @struct
 */
Chart.ChartTitleOptions = function() {};
 /** @type {boolean} */
Chart.ChartTitleOptions.prototype.display;
 /** @type {string} */
Chart.ChartTitleOptions.prototype.position;
 /** @type {boolean} */
Chart.ChartTitleOptions.prototype.fullWdith;
 /** @type {number} */
Chart.ChartTitleOptions.prototype.fontSize;
 /** @type {string} */
Chart.ChartTitleOptions.prototype.fontFamily;
 /** @type {(string|!Array<string>|!CanvasGradient|!CanvasPattern)} */
Chart.ChartTitleOptions.prototype.fontColor;
 /** @type {string} */
Chart.ChartTitleOptions.prototype.fontStyle;
 /** @type {number} */
Chart.ChartTitleOptions.prototype.padding;
 /** @type {string} */
Chart.ChartTitleOptions.prototype.text;
/**
 * @record
 * @struct
 */
Chart.ChartLegendOptions = function() {};
 /** @type {boolean} */
Chart.ChartLegendOptions.prototype.display;
 /** @type {string} */
Chart.ChartLegendOptions.prototype.position;
 /** @type {boolean} */
Chart.ChartLegendOptions.prototype.fullWidth;
 /** @type {!Chart.ChartLegendLabelOptions} */
Chart.ChartLegendOptions.prototype.labels;

/**
 * @param {?} event
 * @param {?} legendItem
 * @return {void}
 */
Chart.ChartLegendOptions.prototype.onClick = function(event, legendItem) {};
/**
 * @record
 * @struct
 */
Chart.ChartLegendLabelOptions = function() {};
 /** @type {number} */
Chart.ChartLegendLabelOptions.prototype.boxWidth;
 /** @type {number} */
Chart.ChartLegendLabelOptions.prototype.fontSize;
 /** @type {number} */
Chart.ChartLegendLabelOptions.prototype.fontStyle;
 /** @type {(string|!Array<string>|!CanvasGradient|!CanvasPattern)} */
Chart.ChartLegendLabelOptions.prototype.fontColor;
 /** @type {string} */
Chart.ChartLegendLabelOptions.prototype.fontFamily;
 /** @type {number} */
Chart.ChartLegendLabelOptions.prototype.padding;

/**
 * @param {?} chart
 * @return {?}
 */
Chart.ChartLegendLabelOptions.prototype.generateLabels = function(chart) {};
/**
 * @record
 * @struct
 */
Chart.ChartTooltipOptions = function() {};
 /** @type {boolean} */
Chart.ChartTooltipOptions.prototype.enabled;
 /** @type {string} */
Chart.ChartTooltipOptions.prototype.mode;
 /** @type {boolean} */
Chart.ChartTooltipOptions.prototype.intersect;
 /** @type {(string|!Array<string>|!CanvasGradient|!CanvasPattern)} */
Chart.ChartTooltipOptions.prototype.backgroundColor;
 /** @type {string} */
Chart.ChartTooltipOptions.prototype.titleFontFamily;
 /** @type {number} */
Chart.ChartTooltipOptions.prototype.titleFontSize;
 /** @type {string} */
Chart.ChartTooltipOptions.prototype.titleFontStyle;
 /** @type {(string|!Array<string>|!CanvasGradient|!CanvasPattern)} */
Chart.ChartTooltipOptions.prototype.titleFontColor;
 /** @type {number} */
Chart.ChartTooltipOptions.prototype.titleSpacing;
 /** @type {number} */
Chart.ChartTooltipOptions.prototype.titleMarginBottom;
 /** @type {string} */
Chart.ChartTooltipOptions.prototype.bodyFontFamily;
 /** @type {number} */
Chart.ChartTooltipOptions.prototype.bodyFontSize;
 /** @type {string} */
Chart.ChartTooltipOptions.prototype.bodyFontStyle;
 /** @type {(string|!Array<string>|!CanvasGradient|!CanvasPattern)} */
Chart.ChartTooltipOptions.prototype.bodyFontColor;
 /** @type {number} */
Chart.ChartTooltipOptions.prototype.bodySpacing;
 /** @type {string} */
Chart.ChartTooltipOptions.prototype.footerFontFamily;
 /** @type {number} */
Chart.ChartTooltipOptions.prototype.footerFontSize;
 /** @type {string} */
Chart.ChartTooltipOptions.prototype.footerFontStyle;
 /** @type {(string|!Array<string>|!CanvasGradient|!CanvasPattern)} */
Chart.ChartTooltipOptions.prototype.footerFontColor;
 /** @type {number} */
Chart.ChartTooltipOptions.prototype.footerSpacing;
 /** @type {number} */
Chart.ChartTooltipOptions.prototype.footerMarginTop;
 /** @type {number} */
Chart.ChartTooltipOptions.prototype.xPadding;
 /** @type {number} */
Chart.ChartTooltipOptions.prototype.yPadding;
 /** @type {number} */
Chart.ChartTooltipOptions.prototype.caretSize;
 /** @type {number} */
Chart.ChartTooltipOptions.prototype.cornerRadius;
 /** @type {string} */
Chart.ChartTooltipOptions.prototype.multiKeyBackground;
 /** @type {!Chart.ChartTooltipCallback} */
Chart.ChartTooltipOptions.prototype.callbacks;
 /** @type {string} */
Chart.ChartTooltipOptions.prototype.position;
 /** @type {number} */
Chart.ChartTooltipOptions.prototype.caretPadding;
 /** @type {boolean} */
Chart.ChartTooltipOptions.prototype.displayColors;
 /** @type {(string|!Array<string>|!CanvasGradient|!CanvasPattern)} */
Chart.ChartTooltipOptions.prototype.borderColor;
 /** @type {number} */
Chart.ChartTooltipOptions.prototype.borderWidth;

/**
 * @param {?} a
 * @return {void}
 */
Chart.ChartTooltipOptions.prototype.custom = function(a) {};

/**
 * @param {!Chart.ChartTooltipItem} item
 * @return {boolean}
 */
Chart.ChartTooltipOptions.prototype.filter = function(item) {};

/**
 * @param {!Chart.ChartTooltipItem} itemA
 * @param {!Chart.ChartTooltipItem} itemB
 * @return {number}
 */
Chart.ChartTooltipOptions.prototype.itemSort = function(itemA, itemB) {};
/**
 * @record
 * @struct
 */
Chart.ChartHoverOptions = function() {};
 /** @type {string} */
Chart.ChartHoverOptions.prototype.mode;
 /** @type {number} */
Chart.ChartHoverOptions.prototype.animationDuration;
 /** @type {boolean} */
Chart.ChartHoverOptions.prototype.intersect;

/**
 * @param {?} active
 * @return {void}
 */
Chart.ChartHoverOptions.prototype.onHover = function(active) {};
/**
 * @record
 * @struct
 */
Chart.ChartAnimationObject = function() {};
 /** @type {number} */
Chart.ChartAnimationObject.prototype.currentStep;
 /** @type {number} */
Chart.ChartAnimationObject.prototype.numSteps;
 /** @type {string} */
Chart.ChartAnimationObject.prototype.easing;

/**
 * @param {?} arg
 * @return {void}
 */
Chart.ChartAnimationObject.prototype.render = function(arg) {};

/**
 * @param {?} arg
 * @return {void}
 */
Chart.ChartAnimationObject.prototype.onAnimationProgress = function(arg) {};

/**
 * @param {?} arg
 * @return {void}
 */
Chart.ChartAnimationObject.prototype.onAnimationComplete = function(arg) {};
/**
 * @record
 * @struct
 */
Chart.ChartAnimationOptions = function() {};
 /** @type {number} */
Chart.ChartAnimationOptions.prototype.duration;
 /** @type {string} */
Chart.ChartAnimationOptions.prototype.easing;

/**
 * @param {?} chart
 * @return {void}
 */
Chart.ChartAnimationOptions.prototype.onProgress = function(chart) {};

/**
 * @param {?} chart
 * @return {void}
 */
Chart.ChartAnimationOptions.prototype.onComplete = function(chart) {};
/**
 * @record
 * @struct
 */
Chart.ChartElementsOptions = function() {};
 /** @type {!Chart.ChartPointOptions} */
Chart.ChartElementsOptions.prototype.point;
 /** @type {!Chart.ChartLineOptions} */
Chart.ChartElementsOptions.prototype.line;
 /** @type {!Chart.ChartArcOptions} */
Chart.ChartElementsOptions.prototype.arc;
 /** @type {!Chart.ChartRectangleOptions} */
Chart.ChartElementsOptions.prototype.rectangle;
/**
 * @record
 * @struct
 */
Chart.ChartArcOptions = function() {};
 /** @type {(string|!Array<string>|!CanvasGradient|!CanvasPattern)} */
Chart.ChartArcOptions.prototype.backgroundColor;
 /** @type {(string|!Array<string>|!CanvasGradient|!CanvasPattern)} */
Chart.ChartArcOptions.prototype.borderColor;
 /** @type {number} */
Chart.ChartArcOptions.prototype.borderWidth;
/**
 * @record
 * @struct
 */
Chart.ChartLineOptions = function() {};
 /** @type {number} */
Chart.ChartLineOptions.prototype.tension;
 /** @type {(string|!Array<string>|!CanvasGradient|!CanvasPattern)} */
Chart.ChartLineOptions.prototype.backgroundColor;
 /** @type {number} */
Chart.ChartLineOptions.prototype.borderWidth;
 /** @type {(string|!Array<string>|!CanvasGradient|!CanvasPattern)} */
Chart.ChartLineOptions.prototype.borderColor;
 /** @type {string} */
Chart.ChartLineOptions.prototype.borderCapStyle;
 /** @type {!Array<?>} */
Chart.ChartLineOptions.prototype.borderDash;
 /** @type {number} */
Chart.ChartLineOptions.prototype.borderDashOffset;
 /** @type {string} */
Chart.ChartLineOptions.prototype.borderJoinStyle;
 /** @type {boolean} */
Chart.ChartLineOptions.prototype.capBezierPoints;
 /** @type {(boolean|string)} */
Chart.ChartLineOptions.prototype.fill;
 /** @type {boolean} */
Chart.ChartLineOptions.prototype.stepped;
/**
 * @record
 * @struct
 */
Chart.ChartPointOptions = function() {};
 /** @type {number} */
Chart.ChartPointOptions.prototype.radius;
 /** @type {string} */
Chart.ChartPointOptions.prototype.pointStyle;
 /** @type {(string|!Array<string>|!CanvasGradient|!CanvasPattern)} */
Chart.ChartPointOptions.prototype.backgroundColor;
 /** @type {number} */
Chart.ChartPointOptions.prototype.borderWidth;
 /** @type {(string|!Array<string>|!CanvasGradient|!CanvasPattern)} */
Chart.ChartPointOptions.prototype.borderColor;
 /** @type {number} */
Chart.ChartPointOptions.prototype.hitRadius;
 /** @type {number} */
Chart.ChartPointOptions.prototype.hoverRadius;
 /** @type {number} */
Chart.ChartPointOptions.prototype.hoverBorderWidth;
/**
 * @record
 * @struct
 */
Chart.ChartRectangleOptions = function() {};
 /** @type {(string|!Array<string>|!CanvasGradient|!CanvasPattern)} */
Chart.ChartRectangleOptions.prototype.backgroundColor;
 /** @type {number} */
Chart.ChartRectangleOptions.prototype.borderWidth;
 /** @type {(string|!Array<string>|!CanvasGradient|!CanvasPattern)} */
Chart.ChartRectangleOptions.prototype.borderColor;
 /** @type {string} */
Chart.ChartRectangleOptions.prototype.borderSkipped;
/**
 * @record
 * @struct
 */
Chart.GridLineOptions = function() {};
 /** @type {boolean} */
Chart.GridLineOptions.prototype.display;
 /** @type {(string|!Array<string>|!CanvasGradient|!CanvasPattern)} */
Chart.GridLineOptions.prototype.color;
 /** @type {number} */
Chart.GridLineOptions.prototype.lineWidth;
 /** @type {boolean} */
Chart.GridLineOptions.prototype.drawBorder;
 /** @type {boolean} */
Chart.GridLineOptions.prototype.drawOnChartArea;
 /** @type {boolean} */
Chart.GridLineOptions.prototype.drawticks;
 /** @type {number} */
Chart.GridLineOptions.prototype.tickMarkLength;
 /** @type {number} */
Chart.GridLineOptions.prototype.zeroLineWidth;
 /** @type {(string|!Array<string>|!CanvasGradient|!CanvasPattern)} */
Chart.GridLineOptions.prototype.zeroLineColor;
 /** @type {boolean} */
Chart.GridLineOptions.prototype.offsetGridLines;
/**
 * @record
 * @struct
 */
Chart.ScaleTitleOptions = function() {};
 /** @type {boolean} */
Chart.ScaleTitleOptions.prototype.display;
 /** @type {string} */
Chart.ScaleTitleOptions.prototype.labelString;
 /** @type {(string|!Array<string>|!CanvasGradient|!CanvasPattern)} */
Chart.ScaleTitleOptions.prototype.fontColor;
 /** @type {string} */
Chart.ScaleTitleOptions.prototype.fontFamily;
 /** @type {number} */
Chart.ScaleTitleOptions.prototype.fontSize;
 /** @type {string} */
Chart.ScaleTitleOptions.prototype.fontStyle;
/**
 * @record
 * @struct
 */
Chart.TickOptions = function() {};
 /** @type {boolean} */
Chart.TickOptions.prototype.autoSkip;
 /** @type {boolean} */
Chart.TickOptions.prototype.display;
 /** @type {(string|!Array<string>|!CanvasGradient|!CanvasPattern)} */
Chart.TickOptions.prototype.fontColor;
 /** @type {string} */
Chart.TickOptions.prototype.fontFamily;
 /** @type {number} */
Chart.TickOptions.prototype.fontSize;
 /** @type {string} */
Chart.TickOptions.prototype.fontStyle;
 /** @type {number} */
Chart.TickOptions.prototype.labelOffset;
 /** @type {number} */
Chart.TickOptions.prototype.maxRotation;
 /** @type {number} */
Chart.TickOptions.prototype.minRotation;
 /** @type {boolean} */
Chart.TickOptions.prototype.mirror;
 /** @type {number} */
Chart.TickOptions.prototype.padding;
 /** @type {boolean} */
Chart.TickOptions.prototype.reverse;
 /** @type {?} */
Chart.TickOptions.prototype.min;
 /** @type {?} */
Chart.TickOptions.prototype.max;

/**
 * @param {?} value
 * @param {?} index
 * @param {?} values
 * @return {(string|number)}
 */
Chart.TickOptions.prototype.callback = function(value, index, values) {};
/**
 * @record
 * @struct
 */
Chart.AngleLineOptions = function() {};
 /** @type {boolean} */
Chart.AngleLineOptions.prototype.display;
 /** @type {(string|!Array<string>|!CanvasGradient|!CanvasPattern)} */
Chart.AngleLineOptions.prototype.color;
 /** @type {number} */
Chart.AngleLineOptions.prototype.lineWidth;
/**
 * @record
 * @struct
 */
Chart.PointLabelOptions = function() {};
 /** @type {(string|!Array<string>|!CanvasGradient|!CanvasPattern)} */
Chart.PointLabelOptions.prototype.fontColor;
 /** @type {string} */
Chart.PointLabelOptions.prototype.fontFamily;
 /** @type {number} */
Chart.PointLabelOptions.prototype.fontSize;
 /** @type {string} */
Chart.PointLabelOptions.prototype.fontStyle;

/**
 * @param {?} arg
 * @return {?}
 */
Chart.PointLabelOptions.prototype.callback = function(arg) {};
 /** @type {(string|!Array<string>|!CanvasGradient|!CanvasPattern)} */
Chart.TickOptions.prototype.backdropColor;
 /** @type {number} */
Chart.TickOptions.prototype.backdropPaddingX;
 /** @type {number} */
Chart.TickOptions.prototype.backdropPaddingY;
 /** @type {number} */
Chart.TickOptions.prototype.maxTicksLimit;
 /** @type {boolean} */
Chart.TickOptions.prototype.showLabelBackdrop;
/**
 * @extends {Chart.TickOptions}
 * @record
 * @struct
 */
Chart.LinearTickOptions = function() {};
 /** @type {boolean} */
Chart.LinearTickOptions.prototype.beginAtZero;
 /** @type {number} */
Chart.LinearTickOptions.prototype.min;
 /** @type {number} */
Chart.LinearTickOptions.prototype.max;
 /** @type {number} */
Chart.LinearTickOptions.prototype.maxTicksLimit;
 /** @type {number} */
Chart.LinearTickOptions.prototype.stepSize;
 /** @type {number} */
Chart.LinearTickOptions.prototype.suggestedMin;
 /** @type {number} */
Chart.LinearTickOptions.prototype.suggestedMax;
/**
 * @extends {Chart.TickOptions}
 * @record
 * @struct
 */
Chart.LogarithmicTickOptions = function() {};
 /** @type {number} */
Chart.LogarithmicTickOptions.prototype.min;
 /** @type {number} */
Chart.LogarithmicTickOptions.prototype.max;

/** @typedef {(string|!Array<string>|!CanvasGradient|!CanvasPattern)} */
Chart.ChartColor;
/**
 * @record
 * @struct
 */
Chart.ChartDataSets = function() {};
 /** @type {string} */
Chart.ChartDataSets.prototype.cubicInterpolationMode;
 /** @type {(string|!Array<string>|!CanvasGradient|!CanvasPattern|!Array<(string|!Array<string>|!CanvasGradient|!CanvasPattern)>)} */
Chart.ChartDataSets.prototype.backgroundColor;
 /** @type {number} */
Chart.ChartDataSets.prototype.borderWidth;
 /** @type {(string|!Array<string>|!CanvasGradient|!CanvasPattern)} */
Chart.ChartDataSets.prototype.borderColor;
 /** @type {string} */
Chart.ChartDataSets.prototype.borderCapStyle;
 /** @type {!Array<number>} */
Chart.ChartDataSets.prototype.borderDash;
 /** @type {number} */
Chart.ChartDataSets.prototype.borderDashOffset;
 /** @type {string} */
Chart.ChartDataSets.prototype.borderJoinStyle;
 /** @type {(!Array<number>|!Array<!Chart.ChartPoint>)} */
Chart.ChartDataSets.prototype.data;
 /** @type {boolean} */
Chart.ChartDataSets.prototype.fill;
 /** @type {string} */
Chart.ChartDataSets.prototype.label;
 /** @type {number} */
Chart.ChartDataSets.prototype.lineTension;
 /** @type {(string|!Array<string>|!CanvasGradient|!CanvasPattern|!Array<(string|!Array<string>|!CanvasGradient|!CanvasPattern)>)} */
Chart.ChartDataSets.prototype.pointBorderColor;
 /** @type {(string|!Array<string>|!CanvasGradient|!CanvasPattern|!Array<(string|!Array<string>|!CanvasGradient|!CanvasPattern)>)} */
Chart.ChartDataSets.prototype.pointBackgroundColor;
 /** @type {(number|!Array<number>)} */
Chart.ChartDataSets.prototype.pointBorderWidth;
 /** @type {(number|!Array<number>)} */
Chart.ChartDataSets.prototype.pointRadius;
 /** @type {(number|!Array<number>)} */
Chart.ChartDataSets.prototype.pointHoverRadius;
 /** @type {(number|!Array<number>)} */
Chart.ChartDataSets.prototype.pointHitRadius;
 /** @type {(string|!Array<string>|!CanvasGradient|!CanvasPattern|!Array<(string|!Array<string>|!CanvasGradient|!CanvasPattern)>)} */
Chart.ChartDataSets.prototype.pointHoverBackgroundColor;
 /** @type {(string|!Array<string>|!CanvasGradient|!CanvasPattern|!Array<(string|!Array<string>|!CanvasGradient|!CanvasPattern)>)} */
Chart.ChartDataSets.prototype.pointHoverBorderColor;
 /** @type {(number|!Array<number>)} */
Chart.ChartDataSets.prototype.pointHoverBorderWidth;
 /** @type {(string|!Array<string>|!HTMLImageElement|!Array<!HTMLImageElement>)} */
Chart.ChartDataSets.prototype.pointStyle;
 /** @type {string} */
Chart.ChartDataSets.prototype.xAxisID;
 /** @type {string} */
Chart.ChartDataSets.prototype.yAxisID;
 /** @type {string} */
Chart.ChartDataSets.prototype.type;
 /** @type {boolean} */
Chart.ChartDataSets.prototype.hidden;
 /** @type {boolean} */
Chart.ChartDataSets.prototype.hideInLegendAndTooltip;
 /** @type {string} */
Chart.ChartDataSets.prototype.stack;
 /** @type {string} */
Chart.ChartDataSets.prototype.spanGaps;
/**
 * @record
 * @struct
 */
Chart.ChartScales = function() {};
 /** @type {string} */
Chart.ChartScales.prototype.type;
 /** @type {boolean} */
Chart.ChartScales.prototype.display;
 /** @type {string} */
Chart.ChartScales.prototype.position;
 /** @type {!Chart.GridLineOptions} */
Chart.ChartScales.prototype.gridLines;
 /** @type {!Chart.ScaleTitleOptions} */
Chart.ChartScales.prototype.scaleLabel;
 /** @type {!Chart.TickOptions} */
Chart.ChartScales.prototype.ticks;
 /** @type {!Array<!Chart.ChartXAxe>} */
Chart.ChartScales.prototype.xAxes;
 /** @type {!Array<!Chart.ChartYAxe>} */
Chart.ChartScales.prototype.yAxes;

/**
 * @param {?=} scale
 * @return {void}
 */
Chart.ChartScales.prototype.beforeUpdate = function(scale) {};

/**
 * @param {?=} scale
 * @return {void}
 */
Chart.ChartScales.prototype.beforeSetDimension = function(scale) {};

/**
 * @param {?=} scale
 * @return {void}
 */
Chart.ChartScales.prototype.beforeDataLimits = function(scale) {};

/**
 * @param {?=} scale
 * @return {void}
 */
Chart.ChartScales.prototype.beforeBuildTicks = function(scale) {};

/**
 * @param {?=} scale
 * @return {void}
 */
Chart.ChartScales.prototype.beforeTickToLabelConversion = function(scale) {};

/**
 * @param {?=} scale
 * @return {void}
 */
Chart.ChartScales.prototype.beforeCalculateTickRotation = function(scale) {};

/**
 * @param {?=} scale
 * @return {void}
 */
Chart.ChartScales.prototype.beforeFit = function(scale) {};

/**
 * @param {?=} scale
 * @return {void}
 */
Chart.ChartScales.prototype.afterUpdate = function(scale) {};

/**
 * @param {?=} scale
 * @return {void}
 */
Chart.ChartScales.prototype.afterSetDimension = function(scale) {};

/**
 * @param {?=} scale
 * @return {void}
 */
Chart.ChartScales.prototype.afterDataLimits = function(scale) {};

/**
 * @param {?=} scale
 * @return {void}
 */
Chart.ChartScales.prototype.afterBuildTicks = function(scale) {};

/**
 * @param {?=} scale
 * @return {void}
 */
Chart.ChartScales.prototype.afterTickToLabelConversion = function(scale) {};

/**
 * @param {?=} scale
 * @return {void}
 */
Chart.ChartScales.prototype.afterCalculateTickRotation = function(scale) {};

/**
 * @param {?=} scale
 * @return {void}
 */
Chart.ChartScales.prototype.afterFit = function(scale) {};
/**
 * @record
 * @struct
 */
Chart.CommonAxe = function() {};
 /** @type {string} */
Chart.CommonAxe.prototype.type;
 /** @type {boolean} */
Chart.CommonAxe.prototype.display;
 /** @type {string} */
Chart.CommonAxe.prototype.id;
 /** @type {boolean} */
Chart.CommonAxe.prototype.stacked;
 /** @type {string} */
Chart.CommonAxe.prototype.position;
 /** @type {!Chart.TickOptions} */
Chart.CommonAxe.prototype.ticks;
 /** @type {!Chart.GridLineOptions} */
Chart.CommonAxe.prototype.gridLines;
 /** @type {number} */
Chart.CommonAxe.prototype.barThickness;
 /** @type {!Chart.ScaleTitleOptions} */
Chart.CommonAxe.prototype.scaleLabel;
/**
 * @extends {Chart.CommonAxe}
 * @record
 * @struct
 */
Chart.ChartXAxe = function() {};
 /** @type {number} */
Chart.ChartXAxe.prototype.categoryPercentage;
 /** @type {number} */
Chart.ChartXAxe.prototype.barPercentage;
 /** @type {!Chart.TimeScale} */
Chart.ChartXAxe.prototype.time;
/**
 * @extends {Chart.CommonAxe}
 * @record
 * @struct
 */
Chart.ChartYAxe = function() {};
/**
 * @extends {Chart.ChartScales}
 * @record
 * @struct
 */
Chart.LinearScale = function() {};
 /** @type {!Chart.LinearTickOptions} */
Chart.LinearScale.prototype.ticks;
/**
 * @extends {Chart.ChartScales}
 * @record
 * @struct
 */
Chart.LogarithmicScale = function() {};
 /** @type {!Chart.LogarithmicTickOptions} */
Chart.LogarithmicScale.prototype.ticks;
/**
 * @record
 * @struct
 */
Chart.TimeDisplayFormat = function() {};
 /** @type {string} */
Chart.TimeDisplayFormat.prototype.millisecond;
 /** @type {string} */
Chart.TimeDisplayFormat.prototype.second;
 /** @type {string} */
Chart.TimeDisplayFormat.prototype.minute;
 /** @type {string} */
Chart.TimeDisplayFormat.prototype.hour;
 /** @type {string} */
Chart.TimeDisplayFormat.prototype.day;
 /** @type {string} */
Chart.TimeDisplayFormat.prototype.week;
 /** @type {string} */
Chart.TimeDisplayFormat.prototype.month;
 /** @type {string} */
Chart.TimeDisplayFormat.prototype.quarter;
 /** @type {string} */
Chart.TimeDisplayFormat.prototype.year;
/**
 * @extends {Chart.ChartScales}
 * @record
 * @struct
 */
Chart.TimeScale = function() {};
 /** @type {!Chart.TimeDisplayFormat} */
Chart.TimeScale.prototype.displayFormats;
 /** @type {boolean} */
Chart.TimeScale.prototype.isoWeekday;
 /** @type {string} */
Chart.TimeScale.prototype.max;
 /** @type {string} */
Chart.TimeScale.prototype.min;
 /** @type {(string|function(?): ?)} */
Chart.TimeScale.prototype.parser;
 /** @type {string} */
Chart.TimeScale.prototype.round;
 /** @type {string} */
Chart.TimeScale.prototype.tooltipFormat;
 /** @type {string} */
Chart.TimeScale.prototype.unit;
 /** @type {number} */
Chart.TimeScale.prototype.unitStepSize;
 /** @type {string} */
Chart.TimeScale.prototype.minUnit;
/**
 * @record
 * @struct
 */
Chart.RadialLinearScale = function() {};
 /** @type {boolean} */
Chart.RadialLinearScale.prototype.lineArc;
 /** @type {!Chart.AngleLineOptions} */
Chart.RadialLinearScale.prototype.angleLines;
 /** @type {!Chart.PointLabelOptions} */
Chart.RadialLinearScale.prototype.pointLabels;
 /** @type {!Chart.TickOptions} */
Chart.RadialLinearScale.prototype.ticks;

/* TODO: ExportAssignment in  */

/* TODO: NamespaceExportDeclaration in  */
