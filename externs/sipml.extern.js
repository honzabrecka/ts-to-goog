/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/sipml/index.d.ts:
/** @const */
var SIPml = {};
/**
 * @constructor
 * @struct
 */
SIPml.Event = function() {};
 /** @type {string} */
SIPml.Event.prototype.description;
 /** @type {string} */
SIPml.Event.prototype.type;

/**
 * @return {!Object}
 */
SIPml.Event.prototype.getContent = function() {};

/**
 * @return {string}
 */
SIPml.Event.prototype.getContentString = function() {};

/**
 * @return {!Object}
 */
SIPml.Event.prototype.getContentType = function() {};

/**
 * @return {number}
 */
SIPml.Event.prototype.getSipResponseCode = function() {};
/**
 * @constructor
 * @struct
 */
SIPml.EventTarget = function() {};

/**
 * @param {EventSubscriptionType} type
 * @param {function(EventType): void} listener
 * @return {void}
 */
SIPml.EventTarget.prototype.addEventListener = function(type, listener) {};

/**
 * @param {EventSubscriptionType} type
 * @return {void}
 */
SIPml.EventTarget.prototype.removeEventListener = function(type) {};
/**
 * @extends {SIPml.EventTarget}
 * @constructor
 * @struct
 */
SIPml.Session = function() {};

/**
 * @param {!SIPml.Session.Configuration=} configuration
 * @return {number}
 */
SIPml.Session.prototype.accept = function(configuration) {};

/**
 * @return {number}
 */
SIPml.Session.prototype.getId = function() {};

/**
 * @return {string}
 */
SIPml.Session.prototype.getRemoteFriendlyName = function() {};

/**
 * @return {string}
 */
SIPml.Session.prototype.getRemoteUri = function() {};

/**
 * @param {!SIPml.Session.Configuration=} configuration
 * @return {number}
 */
SIPml.Session.prototype.reject = function(configuration) {};

/**
 * @param {!SIPml.Session.Configuration=} configuration
 * @return {void}
 */
SIPml.Session.prototype.setConfiguration = function(configuration) {};

/** @typedef {string} */
SIPml.Session.EventSubscriptionType;
/**
 * @record
 * @struct
 */
SIPml.Session.Configuration = function() {};
 /** @type {!HTMLElement} */
SIPml.Session.Configuration.prototype.audio_remote;
 /** @type {{audio: number, video: number}} */
SIPml.Session.Configuration.prototype.bandwidth;
 /** @type {{events: (string|!Array<string>), listener: function(!SIPml.Session.Event): void}} */
SIPml.Session.Configuration.prototype.events_listener;
 /** @type {number} */
SIPml.Session.Configuration.prototype.expires;
 /** @type {string} */
SIPml.Session.Configuration.prototype.from;
 /** @type {!Array<!Object>} */
SIPml.Session.Configuration.prototype.sip_caps;
 /** @type {!Array<!Object>} */
SIPml.Session.Configuration.prototype.sip_headers;
 /** @type {!HTMLElement} */
SIPml.Session.Configuration.prototype.video_local;
 /** @type {!HTMLElement} */
SIPml.Session.Configuration.prototype.video_remote;
 /** @type {{minWidth: number, maxWidth: number, minHeight: number, maxHeight: number}} */
SIPml.Session.Configuration.prototype.video_size;
/**
 * @extends {SIPml.Session}
 * @extends {SIPml.EventTarget}
 * @constructor
 * @struct
 */
SIPml.Session.Call = function() {};

/**
 * @param {!SIPml.Session.Configuration=} configuration
 * @return {number}
 */
SIPml.Session.Call.prototype.acceptTransfer = function(configuration) {};

/**
 * @param {string} to
 * @param {!SIPml.Session.Configuration=} configuration
 * @return {number}
 */
SIPml.Session.Call.prototype.call = function(to, configuration) {};

/**
 * @return {number}
 */
SIPml.Session.Call.prototype.dtmf = function() {};

/**
 * @param {!SIPml.Session.Configuration=} configuration
 * @return {number}
 */
SIPml.Session.Call.prototype.hangup = function(configuration) {};

/**
 * @param {!SIPml.Session.Configuration=} configuration
 * @return {number}
 */
SIPml.Session.Call.prototype.hold = function(configuration) {};

/**
 * @return {number}
 */
SIPml.Session.Call.prototype.info = function() {};

/**
 * @return {number}
 */
SIPml.Session.Call.prototype.rejectTransfer = function() {};

/**
 * @return {number}
 */
SIPml.Session.Call.prototype.resume = function() {};

/**
 * @return {number}
 */
SIPml.Session.Call.prototype.transfer = function() {};

/** @typedef {string} */
SIPml.Session.Call.EventSubscriptionType;
/**
 * @extends {SIPml.Event}
 * @constructor
 * @struct
 */
SIPml.Session.Event = function() {};
 /** @type {!SIPml.Session} */
SIPml.Session.Event.prototype.session;

/**
 * @return {string}
 */
SIPml.Session.Event.prototype.getTransferDestinationFriendlyName = function() {};
/**
 * @extends {SIPml.Session}
 * @constructor
 * @struct
 */
SIPml.Session.Message = function() {};

/**
 * @param {string} to
 * @param {?=} content
 * @param {string=} contentType
 * @param {!SIPml.Session.Configuration=} configuration
 * @return {number}
 */
SIPml.Session.Message.prototype.send = function(to, content, contentType, configuration) {};
/**
 * @extends {SIPml.Session}
 * @constructor
 * @struct
 */
SIPml.Session.Publish = function() {};

/**
 * @param {?=} content
 * @param {string=} contentType
 * @param {!SIPml.Session.Configuration=} configuration
 * @return {number}
 */
SIPml.Session.Publish.prototype.publish = function(content, contentType, configuration) {};

/**
 * @param {!SIPml.Session.Configuration=} configuration
 * @return {void}
 */
SIPml.Session.Publish.prototype.unpublish = function(configuration) {};
/**
 * @extends {SIPml.Session}
 * @constructor
 * @struct
 */
SIPml.Session.Registration = function() {};

/**
 * @param {!SIPml.Session.Configuration=} configuration
 * @return {void}
 */
SIPml.Session.Registration.prototype.register = function(configuration) {};

/**
 * @param {!SIPml.Session.Configuration=} configuration
 * @return {void}
 */
SIPml.Session.Registration.prototype.unregister = function(configuration) {};
/**
 * @extends {SIPml.Session}
 * @extends {SIPml.EventTarget}
 * @constructor
 * @struct
 */
SIPml.Session.Subscribe = function() {};

/**
 * @param {string} to
 * @param {!SIPml.Session.Configuration=} configuration
 * @return {number}
 */
SIPml.Session.Subscribe.prototype.subscribe = function(to, configuration) {};

/**
 * @param {!SIPml.Session.Configuration=} configuration
 * @return {number}
 */
SIPml.Session.Subscribe.prototype.unsubscribe = function(configuration) {};

/** @typedef {string} */
SIPml.Session.Subscribe.EventSubscriptionType;

/**
 * @constructor
 * @struct
 * @param {!SIPml.Stack.Configuration=} configuration
 */
SIPml.Stack = function(configuration) {};

/**
 * @param {!SIPml.Stack.Configuration} configuration
 * @return {number}
 */
SIPml.Stack.prototype.setConfiguration = function(configuration) {};

/**
 * @param {string} type
 * @param {!SIPml.Session.Configuration=} configuration
 * @return {?}
 */
SIPml.Stack.prototype.newSession = function(type, configuration) {};

/**
 * @return {number}
 */
SIPml.Stack.prototype.start = function() {};

/**
 * @param {number=} timeout
 * @return {number}
 */
SIPml.Stack.prototype.stop = function(timeout) {};

/** @typedef {string} */
SIPml.Stack.EventSubscriptionType;
/**
 * @record
 * @struct
 */
SIPml.Stack.Configuration = function() {};
 /** @type {{audio: number, video: number}} */
SIPml.Stack.Configuration.prototype.bandwidth;
 /** @type {string} */
SIPml.Stack.Configuration.prototype.display_name;
 /** @type {boolean} */
SIPml.Stack.Configuration.prototype.enable_click2call;
 /** @type {boolean} */
SIPml.Stack.Configuration.prototype.enable_early_ims;
 /** @type {boolean} */
SIPml.Stack.Configuration.prototype.enable_media_stream_cache;
 /** @type {boolean} */
SIPml.Stack.Configuration.prototype.enable_rtcweb_breaker;
 /** @type {{events: (string|!Array<string>), listener: function(!SIPml.Stack.Event): void}} */
SIPml.Stack.Configuration.prototype.events_listener;
 /** @type {!Array<!Object>} */
SIPml.Stack.Configuration.prototype.ice_servers;
 /** @type {string} */
SIPml.Stack.Configuration.prototype.impi;
 /** @type {string} */
SIPml.Stack.Configuration.prototype.impu;
 /** @type {string} */
SIPml.Stack.Configuration.prototype.outbound_proxy_url;
 /** @type {string} */
SIPml.Stack.Configuration.prototype.password;
 /** @type {string} */
SIPml.Stack.Configuration.prototype.realm;
 /** @type {!Array<!Object>} */
SIPml.Stack.Configuration.prototype.sip_headers;
 /** @type {{minWidth: number, maxWidth: number, minHeight: number, maxHeight: number}} */
SIPml.Stack.Configuration.prototype.video_size;
 /** @type {string} */
SIPml.Stack.Configuration.prototype.websocket_proxy_url;
/**
 * @extends {SIPml.Event}
 * @constructor
 * @struct
 */
SIPml.Stack.Event = function() {};
 /** @type {string} */
SIPml.Stack.Event.prototype.description;
 /** @type {!SIPml.Session} */
SIPml.Stack.Event.prototype.newSession;
 /** @type {string} */
SIPml.Stack.Event.prototype.type;

/**
 * @return {string}
 */
SIPml.getNavigatorFriendlyName = function() {};

/**
 * @return {string}
 */
SIPml.getNavigatorVersion = function() {};

/**
 * @return {string}
 */
SIPml.getSystemFriendlyName = function() {};

/**
 * @return {string}
 */
SIPml.getWebRtc4AllVersion = function() {};

/**
 * @return {boolean}
 */
SIPml.haveMediaStream = function() {};

/**
 * @param {function(?): ?=} readyCallback
 * @param {function(?): ?=} errorCallback
 * @return {boolean}
 */
SIPml.init = function(readyCallback, errorCallback) {};

/**
 * @return {boolean}
 */
SIPml.isInitialized = function() {};

/**
 * @return {boolean}
 */
SIPml.isNavigatorOutdated = function() {};

/**
 * @return {boolean}
 */
SIPml.isReady = function() {};

/**
 * @return {boolean}
 */
SIPml.isScreenShareSupported = function() {};

/**
 * @return {boolean}
 */
SIPml.isWebRtcPluginOutdated = function() {};

/**
 * @return {boolean}
 */
SIPml.isWebRtc4AllSupported = function() {};

/**
 * @return {boolean}
 */
SIPml.isWebRtcSupported = function() {};

/**
 * @return {boolean}
 */
SIPml.isWebSocketSupported = function() {};

/**
 * @param {string} level
 * @return {void}
 */
SIPml.setDebugLevel = function(level) {};

/**
 * @param {string} type
 * @return {boolean}
 */
SIPml.setWebRtcType = function(type) {};
