/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/formidable/index.d.ts:

/* TODO: ImportEqualsDeclaration in  */

/* TODO: ImportEqualsDeclaration in  */

/* TODO: ImportEqualsDeclaration in  */
/**
 * @extends {internal.EventEmitter}
 * @constructor
 * @struct
 */
function IncomingForm() {}
 /** @type {string} */
IncomingForm.prototype.encoding;
 /** @type {string} */
IncomingForm.prototype.uploadDir;
 /** @type {boolean} */
IncomingForm.prototype.keepExtensions;
 /** @type {number} */
IncomingForm.prototype.maxFieldsSize;
 /** @type {number} */
IncomingForm.prototype.maxFields;
 /** @type {(string|boolean)} */
IncomingForm.prototype.hash;
 /** @type {boolean} */
IncomingForm.prototype.multiples;
 /** @type {string} */
IncomingForm.prototype.type;
 /** @type {number} */
IncomingForm.prototype.bytesReceived;
 /** @type {number} */
IncomingForm.prototype.bytesExpected;
 /** @type {function(?): void} */
IncomingForm.prototype.onPart;

/**
 * @param {?} part
 * @return {void}
 */
IncomingForm.prototype.handlePart = function(part) {};

/**
 * @param {!IncomingMessage} req
 * @param {function(?, ?, ?): ?=} callback
 * @return {void}
 */
IncomingForm.prototype.parse = function(req, callback) {};
/**
 * @record
 * @struct
 */
function Fields() {}

/* TODO: IndexSignature:  */
/**
 * @record
 * @struct
 */
function Files() {}

/* TODO: IndexSignature:  */
/**
 * @record
 * @struct
 */
function Part() {}
 /** @type {?} */
Part.prototype.headers;
 /** @type {string} */
Part.prototype.name;
 /** @type {string} */
Part.prototype.filename;
 /** @type {string} */
Part.prototype.mime;
/**
 * @record
 * @struct
 */
function File() {}
 /** @type {number} */
File.prototype.size;
 /** @type {string} */
File.prototype.path;
 /** @type {string} */
File.prototype.name;
 /** @type {string} */
File.prototype.type;
 /** @type {!Date} */
File.prototype.lastModifiedDate;
 /** @type {string} */
File.prototype.hash;

/**
 * @return {!Object}
 */
File.prototype.toJSON = function() {};
