/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/angulartics/index.d.ts:

/* TODO: ImportDeclaration in  */
/** @const */
var angulartics = {};
/**
 * @record
 * @struct
 */
angulartics.IAngularticsStatic = function() {};

/**
 * @param {string} objectName
 * @param {number} delay
 * @param {?=} containsField
 * @param {?=} registerFn
 * @param {boolean=} onTimeout
 * @return {void}
 */
angulartics.IAngularticsStatic.prototype.waitForVendorApi = function(objectName, delay, containsField, registerFn, onTimeout) {};
/**
 * @record
 * @struct
 */
angulartics.IAnalyticsService = function() {};

/**
 * @param {string} eventName
 * @param {?=} properties
 * @return {?}
 */
angulartics.IAnalyticsService.prototype.eventTrack = function(eventName, properties) {};

/**
 * @return {boolean}
 */
angulartics.IAnalyticsService.prototype.getOptOut = function() {};

/**
 * @param {string} path
 * @param {!angular.ILocationService=} location
 * @return {?}
 */
angulartics.IAnalyticsService.prototype.pageTrack = function(path, location) {};

/**
 * @param {string} alias
 * @return {?}
 */
angulartics.IAnalyticsService.prototype.setAlias = function(alias) {};

/**
 * @param {boolean} value
 * @return {void}
 */
angulartics.IAnalyticsService.prototype.setOptOut = function(value) {};

/**
 * @param {string} username
 * @return {?}
 */
angulartics.IAnalyticsService.prototype.setUsername = function(username) {};

/**
 * @param {?} properties
 * @return {?}
 */
angulartics.IAnalyticsService.prototype.setUserProperties = function(properties) {};

/**
 * @param {?} properties
 * @return {?}
 */
angulartics.IAnalyticsService.prototype.setSuperProperties = function(properties) {};
/**
 * @extends {angular.IServiceProvider}
 * @record
 * @struct
 */
angulartics.IAnalyticsServiceProvider = function() {};
 /** @type {{pageTracking: {autoTrackingVirtualPages: boolean, autoTrackingFirstPage: boolean, basePath: string, autoBasePath: boolean}, developerMode: boolean}} */
angulartics.IAnalyticsServiceProvider.prototype.settings;

/**
 * @param {boolean} value
 * @return {void}
 */
angulartics.IAnalyticsServiceProvider.prototype.virtualPageviews = function(value) {};

/**
 * @param {!Array<string>} value
 * @return {void}
 */
angulartics.IAnalyticsServiceProvider.prototype.excludeRoutes = function(value) {};

/**
 * @param {boolean} value
 * @return {void}
 */
angulartics.IAnalyticsServiceProvider.prototype.firstPageview = function(value) {};

/**
 * @param {boolean} value
 * @return {void}
 */
angulartics.IAnalyticsServiceProvider.prototype.withBase = function(value) {};

/**
 * @param {boolean} value
 * @return {void}
 */
angulartics.IAnalyticsServiceProvider.prototype.withAutoBase = function(value) {};

/**
 * @param {boolean} value
 * @return {void}
 */
angulartics.IAnalyticsServiceProvider.prototype.developerMode = function(value) {};

/**
 * @param {boolean} value
 * @return {void}
 */
angulartics.IAnalyticsServiceProvider.prototype.trackExceptions = function(value) {};

/**
 * @param {boolean} value
 * @return {void}
 */
angulartics.IAnalyticsServiceProvider.prototype.trackRoutes = function(value) {};

/**
 * @param {boolean} value
 * @return {void}
 */
angulartics.IAnalyticsServiceProvider.prototype.trackStates = function(value) {};

/**
 * @param {function(string, !angular.ILocationService): ?} callback
 * @return {void}
 */
angulartics.IAnalyticsServiceProvider.prototype.registerPageTrack = function(callback) {};

/**
 * @param {function(string, ?): ?} callback
 * @return {void}
 */
angulartics.IAnalyticsServiceProvider.prototype.registerEventTrack = function(callback) {};

/**
 * @param {function(string): ?} callback
 * @return {void}
 */
angulartics.IAnalyticsServiceProvider.prototype.registerSetAlias = function(callback) {};

/**
 * @param {function(string): ?} callback
 * @return {void}
 */
angulartics.IAnalyticsServiceProvider.prototype.registerSetUsername = function(callback) {};

/**
 * @param {function(?): ?} callback
 * @return {void}
 */
angulartics.IAnalyticsServiceProvider.prototype.registerSetUserProperties = function(callback) {};

/**
 * @param {function(?): ?} callback
 * @return {void}
 */
angulartics.IAnalyticsServiceProvider.prototype.registerSetSuperProperties = function(callback) {};
 /** @type {!angulartics.IAngularticsStatic} */
var angulartics;
