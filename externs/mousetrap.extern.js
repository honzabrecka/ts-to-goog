/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/mousetrap/index.d.ts:
/**
 * @record
 * @struct
 */
function ExtendedKeyboardEvent() {}
 /** @type {boolean} */
ExtendedKeyboardEvent.prototype.returnValue;
/**
 * @record
 * @struct
 */
function MousetrapStatic() {}

/* TODO: CallSignature:  */

/* TODO: ConstructSignature:  */
 /** @type {function(!ExtendedKeyboardEvent, !Element, string): boolean} */
MousetrapStatic.prototype.stopCallback;

/**
 * @param {(string|!Array<string>)} keys
 * @param {function(!ExtendedKeyboardEvent, string): ?} callback
 * @param {string=} action
 * @return {void}
 */
MousetrapStatic.prototype.bind = function(keys, callback, action) {};

/**
 * @param {(string|!Array<string>)} keys
 * @param {string=} action
 * @return {void}
 */
MousetrapStatic.prototype.unbind = function(keys, action) {};

/**
 * @param {string} keys
 * @param {string=} action
 * @return {void}
 */
MousetrapStatic.prototype.trigger = function(keys, action) {};

/**
 * @return {void}
 */
MousetrapStatic.prototype.reset = function() {};

/**
 * https://craig.is/killing/mice#extensions.global
 * @param {(string|!Array<string>)} keyArray
 * @param {function(!ExtendedKeyboardEvent, string): ?} callback
 * @param {string=} action
 * @return {void}
 */
MousetrapStatic.prototype.bindGlobal = function(keyArray, callback, action) {};
/**
 * @record
 * @struct
 */
function MousetrapInstance() {}
 /** @type {function(!ExtendedKeyboardEvent, !Element, string): boolean} */
MousetrapInstance.prototype.stopCallback;

/**
 * @param {(string|!Array<string>)} keys
 * @param {function(!ExtendedKeyboardEvent, string): ?} callback
 * @param {string=} action
 * @return {void}
 */
MousetrapInstance.prototype.bind = function(keys, callback, action) {};

/**
 * @param {(string|!Array<string>)} keys
 * @param {string=} action
 * @return {void}
 */
MousetrapInstance.prototype.unbind = function(keys, action) {};

/**
 * @param {string} keys
 * @param {string=} action
 * @return {void}
 */
MousetrapInstance.prototype.trigger = function(keys, action) {};

/**
 * @return {void}
 */
MousetrapInstance.prototype.reset = function() {};
 /** @type {!MousetrapStatic} */
var Mousetrap;
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "mousetrap"
/** @const */
tsickle_declare_module.mousetrap = {};

/* TODO: ExportAssignment in tsickle_declare_module.mousetrap */
