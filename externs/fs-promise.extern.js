/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/fs-promise/index.d.ts:

/* TODO: ExportDeclaration in  */
/**
 * @record
 * @struct
 */
function WriteOptions() {}
 /** @type {string} */
WriteOptions.prototype.encoding;
 /** @type {number} */
WriteOptions.prototype.mode;
 /** @type {string} */
WriteOptions.prototype.flag;

/** @typedef {!Array<(string|number)>} */
var JsonReplacerArray;

/** @typedef {?} */
var JsonReplacerFunction;

/** @typedef {(!Array<(string|number)>|?)} */
var JsonReplacer;
/**
 * @extends {WriteOptions}
 * @record
 * @struct
 */
function WriteJsonOptions() {}
 /** @type {number} */
WriteJsonOptions.prototype.spaces;
 /** @type {(!Array<(string|number)>|?)} */
WriteJsonOptions.prototype.replacer;
/**
 * @record
 * @struct
 */
function ReadJsonOptions() {}
 /** @type {string} */
ReadJsonOptions.prototype.encoding;
 /** @type {string} */
ReadJsonOptions.prototype.flag;

/**
 * @param {?} key
 * @param {?} value
 * @return {?}
 */
ReadJsonOptions.prototype.reviver = function(key, value) {};

/**
 * @param {string} src
 * @param {string} dst
 * @return {!Promise<void>}
 */
function copy(src, dst) {}

/**
 * @param {string} dir
 * @return {!Promise<void>}
 */
function emptyDir(dir) {}

/**
 * @param {string} file
 * @return {!Promise<void>}
 */
function ensureFile(file) {}

/**
 * @param {string} dir
 * @return {!Promise<void>}
 */
function ensureDir(dir) {}

/**
 * @param {string} srcpath
 * @param {string} dstpath
 * @return {!Promise<void>}
 */
function ensureLink(srcpath, dstpath) {}

/**
 * @param {string} srcpath
 * @param {string} dstpath
 * @param {string=} type
 * @return {!Promise<void>}
 */
function ensureSymlink(srcpath, dstpath, type) {}

/**
 * @param {string} dir
 * @return {!Promise<void>}
 */
function mkdirs(dir) {}

/**
 * @param {string} src
 * @param {string} dst
 * @return {!Promise<void>}
 */
function move(src, dst) {}

/**
 * @param {string} file
 * @param {(string|?)} data
 * @param {?=} options
 * @return {!Promise<void>}
 */
function outputFile(file, data, options) {}

/**
 * @param {string} file
 * @param {?} data
 * @param {?=} options
 * @return {!Promise<void>}
 */
function outputJson(file, data, options) {}

/**
 * @param {string} file
 * @param {?=} options
 * @return {!Promise<?>}
 */
function readJson(file, options) {}

/**
 * @param {string} path
 * @return {!Promise<void>}
 */
function remove(path) {}

/**
 * @param {string} dir
 * @return {!Promise<!Array<string>>}
 */
function walk(dir) {}

/**
 * @param {string} file
 * @param {?} data
 * @param {?=} options
 * @return {!Promise<void>}
 */
function writeJson(file, data, options) {}

/* TODO: ExportDeclaration in  */
