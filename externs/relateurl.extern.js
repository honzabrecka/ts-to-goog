/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/relateurl/index.d.ts:
/** @const */
var RelateUrl = {};
/**
 * @record
 * @struct
 */
RelateUrl.Options = function() {};
 /** @type {!Object} */
RelateUrl.Options.prototype.defaultPorts;
 /** @type {!Array<string>} */
RelateUrl.Options.prototype.directoryIndexes;
 /** @type {boolean} */
RelateUrl.Options.prototype.ignore_www;
 /** @type {string} */
RelateUrl.Options.prototype.output;
 /** @type {!Array<string>} */
RelateUrl.Options.prototype.rejectedSchemes;
 /** @type {boolean} */
RelateUrl.Options.prototype.removeAuth;
 /** @type {boolean} */
RelateUrl.Options.prototype.removeDirectoryIndexes;
 /** @type {boolean} */
RelateUrl.Options.prototype.removeEmptyQueries;
 /** @type {boolean} */
RelateUrl.Options.prototype.removeRootTrailingSlash;
 /** @type {boolean} */
RelateUrl.Options.prototype.schemeRelative;
 /** @type {string} */
RelateUrl.Options.prototype.site;
 /** @type {boolean} */
RelateUrl.Options.prototype.slashesDenoteHost;
 /** @type {string} */
RelateUrl.ABSOLUTE;
 /** @type {string} */
RelateUrl.PATH_RELATIVE;
 /** @type {string} */
RelateUrl.ROOT_RELATIVE;
 /** @type {string} */
RelateUrl.SHORTEST;

/**
 * @param {string} from
 * @param {string} to
 * @param {!RelateUrl.Options=} options
 * @return {string}
 */
RelateUrl.relate = function(from, to, options) {};

/**
 * @param {string} to
 * @param {!RelateUrl.Options=} options
 * @return {string}
 */
RelateUrl.prototype.relate = function(to, options) {};

/* TODO: ExportAssignment in  */
