/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/bootpag/index.d.ts:
/** @const */
var JqueryBootpag = {};
/**
 * @record
 * @struct
 */
JqueryBootpag.Options = function() {};
 /** @type {number} */
JqueryBootpag.Options.prototype.total;
 /** @type {number} */
JqueryBootpag.Options.prototype.maxVisible;
 /** @type {number} */
JqueryBootpag.Options.prototype.page;
 /** @type {boolean} */
JqueryBootpag.Options.prototype.leaps;
 /** @type {string} */
JqueryBootpag.Options.prototype.next;
 /** @type {string} */
JqueryBootpag.Options.prototype.prev;
 /** @type {string} */
JqueryBootpag.Options.prototype.href;
 /** @type {string} */
JqueryBootpag.Options.prototype.hrefVariable;
 /** @type {boolean} */
JqueryBootpag.Options.prototype.firstLastUse;
 /** @type {string} */
JqueryBootpag.Options.prototype.first;
 /** @type {string} */
JqueryBootpag.Options.prototype.last;
 /** @type {string} */
JqueryBootpag.Options.prototype.wrapClass;
 /** @type {string} */
JqueryBootpag.Options.prototype.activeClass;
 /** @type {string} */
JqueryBootpag.Options.prototype.disabledClass;
 /** @type {string} */
JqueryBootpag.Options.prototype.nextClass;
 /** @type {string} */
JqueryBootpag.Options.prototype.prevClass;
 /** @type {string} */
JqueryBootpag.Options.prototype.lastClass;
 /** @type {string} */
JqueryBootpag.Options.prototype.firstClass;
/**
 * @record
 * @struct
 */
JqueryBootpag.PageEventHandler = function() {};

/* TODO: CallSignature: JqueryBootpag */

/**
 * jQuery Bootpag plugin main method
 * @param {!JqueryBootpag.Options} options
 * @return {?<!HTMLElement>}
 */
JQuery.prototype.bootpag = function(options) {};

/**
 * jQuery Bootpag "page" event occurring on page click.
 * @param {string} eventName : always "page"
 * @param {!JqueryBootpag.PageEventHandler} handler : A function to execute when the event is triggered. The value false is also allowed as a shorthand for a function that simply does return false.
 * @return {?<!HTMLElement>}
 */
JQuery.prototype.on = function(eventName, handler) {};
