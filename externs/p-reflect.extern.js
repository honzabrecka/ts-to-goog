/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/p-reflect/index.d.ts:

/* TODO: ExportAssignment in  */

/**
 * @template T
 * @param {!PromiseLike<T>} promise
 * @return {!Promise<(!pReflect.PromiseRejectedResult|!pReflect.PromiseFulfilledResult<T>)>}
 */
function pReflect(promise) {}

/** @typedef {(!pReflect.PromiseFulfilledResult<T>|!pReflect.PromiseRejectedResult)} */
pReflect.PromiseResult;
/**
 * @record
 * @struct
 */
pReflect.PromiseFulfilledResult = function() {};
 /** @type {boolean} */
pReflect.PromiseFulfilledResult.prototype.isFulfilled;
 /** @type {boolean} */
pReflect.PromiseFulfilledResult.prototype.isRejected;
 /** @type {T} */
pReflect.PromiseFulfilledResult.prototype.value;
/**
 * @record
 * @struct
 */
pReflect.PromiseRejectedResult = function() {};
 /** @type {boolean} */
pReflect.PromiseRejectedResult.prototype.isFulfilled;
 /** @type {boolean} */
pReflect.PromiseRejectedResult.prototype.isRejected;
 /** @type {?} */
pReflect.PromiseRejectedResult.prototype.reason;
