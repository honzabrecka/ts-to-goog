/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/leaflet.pm/index.d.ts:
 /** @type {!L.PM.Map} */
L.Map.prototype.pm;
 /** @type {!L.PM.Edit.Line} */
L.Polygon.prototype.pm;
 /** @type {!L.PM.Edit.Line} */
L.Polyline.prototype.pm;
 /** @type {!L.PM.Edit.Marker} */
L.Marker.prototype.pm;
 /** @type {!L.PM.Edit.LayerGroup} */
L.LayerGroup.prototype.pm;
/** @const */
L.PM = {};
/**
 * @record
 * @struct
 */
L.PM.Map = function() {};
 /** @type {!L.PM.Draw} */
L.PM.Map.prototype.Draw;

/**
 * @param {!L.PM.ToolbarOptions=} options
 * @return {void}
 */
L.PM.Map.prototype.addControls = function(options) {};

/**
 * @param {string} shape
 * @param {!L.PM.DrawOptions=} options
 * @return {void}
 */
L.PM.Map.prototype.enableDraw = function(shape, options) {};

/**
 * @param {string} shape
 * @return {void}
 */
L.PM.Map.prototype.disableDraw = function(shape) {};

/**
 * @param {!L.PathOptions} options
 * @return {void}
 */
L.PM.Map.prototype.setPathOptions = function(options) {};

/**
 * @param {boolean} enabled
 * @return {void}
 */
L.PM.Map.prototype.toggleRemoval = function(enabled) {};

/**
 * @return {boolean}
 */
L.PM.Map.prototype.globalEditEnabled = function() {};

/**
 * @param {!L.PM.EditOptions=} options
 * @return {void}
 */
L.PM.Map.prototype.toggleGlobalEditMode = function(options) {};
/**
 * @record
 * @struct
 */
L.PM.Draw = function() {};

/**
 * @return {!Array<string>}
 */
L.PM.Draw.prototype.getShapes = function() {};
/**
 * @record
 * @struct
 */
L.PM.ToolbarOptions = function() {};
 /** @type {string} */
L.PM.ToolbarOptions.prototype.position;
 /** @type {boolean} */
L.PM.ToolbarOptions.prototype.drawMarker;
 /** @type {boolean} */
L.PM.ToolbarOptions.prototype.drawPolygon;
 /** @type {boolean} */
L.PM.ToolbarOptions.prototype.drawPolyline;
 /** @type {boolean} */
L.PM.ToolbarOptions.prototype.editPolygon;
 /** @type {boolean} */
L.PM.ToolbarOptions.prototype.deleteLayer;
/**
 * @record
 * @struct
 */
L.PM.DrawOptions = function() {};
 /** @type {!L.PathOptions} */
L.PM.DrawOptions.prototype.templineStyle;
 /** @type {!L.PathOptions} */
L.PM.DrawOptions.prototype.hintlineStyle;
 /** @type {!L.PathOptions} */
L.PM.DrawOptions.prototype.pathOptions;
/**
 * @record
 * @struct
 */
L.PM.EditOptions = function() {};
 /** @type {boolean} */
L.PM.EditOptions.prototype.draggable;
 /** @type {boolean} */
L.PM.EditOptions.prototype.snappable;
 /** @type {number} */
L.PM.EditOptions.prototype.snapDistance;
/** @const */
L.PM.Edit = {};
/**
 * @record
 * @struct
 */
L.PM.Edit.Line = function() {};

/**
 * @param {!L.PM.EditOptions=} options
 * @return {void}
 */
L.PM.Edit.Line.prototype.enable = function(options) {};

/**
 * @param {!L.Layer=} poly
 * @return {void}
 */
L.PM.Edit.Line.prototype.disable = function(poly) {};

/**
 * @param {!L.PM.EditOptions=} options
 * @return {void}
 */
L.PM.Edit.Line.prototype.toggleEdit = function(options) {};

/**
 * @return {boolean}
 */
L.PM.Edit.Line.prototype.enabled = function() {};
/**
 * @record
 * @struct
 */
L.PM.Edit.Marker = function() {};

/**
 * @param {!L.PM.EditOptions=} options
 * @return {void}
 */
L.PM.Edit.Marker.prototype.enable = function(options) {};

/**
 * @return {void}
 */
L.PM.Edit.Marker.prototype.disable = function() {};

/**
 * @param {!L.PM.EditOptions=} options
 * @return {void}
 */
L.PM.Edit.Marker.prototype.toggleEdit = function(options) {};

/**
 * @return {boolean}
 */
L.PM.Edit.Marker.prototype.enabled = function() {};
/**
 * @record
 * @struct
 */
L.PM.Edit.LayerGroup = function() {};

/**
 * @param {!L.PM.EditOptions=} options
 * @return {void}
 */
L.PM.Edit.LayerGroup.prototype.enable = function(options) {};

/**
 * @return {void}
 */
L.PM.Edit.LayerGroup.prototype.disable = function() {};

/**
 * @param {!L.PM.EditOptions=} options
 * @return {void}
 */
L.PM.Edit.LayerGroup.prototype.toggleEdit = function(options) {};

/**
 * @return {boolean}
 */
L.PM.Edit.LayerGroup.prototype.enabled = function() {};

/**
 * @return {!Array<!L.Layer>}
 */
L.PM.Edit.LayerGroup.prototype.findLayers = function() {};

/**
 * @return {boolean}
 */
L.PM.Edit.LayerGroup.prototype.dragging = function() {};

/**
 * @return {!L.PM.EditOptions}
 */
L.PM.Edit.LayerGroup.prototype.getOptions = function() {};
