/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/torrent-stream/index.d.ts:
/** @const */
var TorrentStream = {};
/**
 * @record
 * @struct
 */
TorrentStream.TorrentEngine = function() {};
 /** @type {!Array<!TorrentStream.TorrentFile>} */
TorrentStream.TorrentEngine.prototype.files;
 /** @type {!TorrentStream.Swarm} */
TorrentStream.TorrentEngine.prototype.swarm;
 /** @type {string} */
TorrentStream.TorrentEngine.prototype.infoHash;

/**
 * @param {function(): void} callback
 * @return {void}
 */
TorrentStream.TorrentEngine.prototype.destroy = function(callback) {};

/**
 * @param {string} peer
 * @return {void}
 */
TorrentStream.TorrentEngine.prototype.connect = function(peer) {};

/**
 * @param {string} peer
 * @return {void}
 */
TorrentStream.TorrentEngine.prototype.disconnect = function(peer) {};

/**
 * @param {string} peer
 * @return {void}
 */
TorrentStream.TorrentEngine.prototype.block = function(peer) {};

/**
 * @param {boolean} keepPieces
 * @param {function(): void} callback
 * @return {void}
 */
TorrentStream.TorrentEngine.prototype.remove = function(keepPieces, callback) {};

/**
 * @param {number} port
 * @param {function(): void} callback
 * @return {void}
 */
TorrentStream.TorrentEngine.prototype.listen = function(port, callback) {};

/**
 * @param {string} event
 * @param {!Function|function(number): void|function(number, number, number): void} callback
 * @return {void}
 */
TorrentStream.TorrentEngine.prototype.on = function(event, callback) {};
/**
 * @record
 * @struct
 */
TorrentStream.TorrentEngineOptions = function() {};
 /** @type {number} */
TorrentStream.TorrentEngineOptions.prototype.connections;
 /** @type {number} */
TorrentStream.TorrentEngineOptions.prototype.uploads;
 /** @type {string} */
TorrentStream.TorrentEngineOptions.prototype.tmp;
 /** @type {string} */
TorrentStream.TorrentEngineOptions.prototype.path;
 /** @type {boolean} */
TorrentStream.TorrentEngineOptions.prototype.verify;
 /** @type {boolean} */
TorrentStream.TorrentEngineOptions.prototype.dht;
 /** @type {boolean} */
TorrentStream.TorrentEngineOptions.prototype.tracker;
 /** @type {!Array<string>} */
TorrentStream.TorrentEngineOptions.prototype.trackers;
 /** @type {?} */
TorrentStream.TorrentEngineOptions.prototype.storage;
/**
 * @record
 * @struct
 */
TorrentStream.Swarm = function() {};
 /** @type {number} */
TorrentStream.Swarm.prototype.downloaded;
/**
 * @record
 * @struct
 */
TorrentStream.TorrentFile = function() {};
 /** @type {string} */
TorrentStream.TorrentFile.prototype.name;
 /** @type {string} */
TorrentStream.TorrentFile.prototype.path;
 /** @type {number} */
TorrentStream.TorrentFile.prototype.length;

/**
 * @return {void}
 */
TorrentStream.TorrentFile.prototype.select = function() {};

/**
 * @return {void}
 */
TorrentStream.TorrentFile.prototype.deselect = function() {};

/**
 * @param {!TorrentStream.ReadStreamOptions=} options
 * @return {?}
 */
TorrentStream.TorrentFile.prototype.createReadStream = function(options) {};
/**
 * @record
 * @struct
 */
TorrentStream.ReadStreamOptions = function() {};
 /** @type {number} */
TorrentStream.ReadStreamOptions.prototype.start;
 /** @type {number} */
TorrentStream.ReadStreamOptions.prototype.end;
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "torrent-stream"
/** @const */
tsickle_declare_module.torrent_stream = {};

/**
 * @param {(string|?)} magnet
 * @param {!TorrentStream.TorrentEngineOptions=} options
 * @return {!TorrentStream.TorrentEngine}
 */
tsickle_declare_module.torrent_stream.s = function(magnet, options) {};

/* TODO: ExportAssignment in tsickle_declare_module.torrent_stream */
