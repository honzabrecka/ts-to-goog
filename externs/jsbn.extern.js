/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/jsbn/index.d.ts:
/** @const */
var jsbn = {};
/**
 * @record
 * @struct
 */
jsbn.RandomGenerator = function() {};

/**
 * @param {!Array<number>} bytes
 * @return {void}
 */
jsbn.RandomGenerator.prototype.nextBytes = function(bytes) {};

/**
 * @constructor
 * @struct
 * @param {number|string|!Array<number>|!jsbn.BigInteger} a
 * @param {!jsbn.RandomGenerator|number=} c_or_b
 * @param {!jsbn.RandomGenerator=} c
 */
jsbn.BigInteger = function(a, c_or_b, c) {};
 /** @type {number} */
jsbn.BigInteger.prototype.s;
 /** @type {number} */
jsbn.BigInteger.prototype.t;
 /** @type {!Array<number>} */
jsbn.BigInteger.prototype.data;
 /** @type {number} */
jsbn.BigInteger.prototype.DB;
 /** @type {number} */
jsbn.BigInteger.prototype.DM;
 /** @type {number} */
jsbn.BigInteger.prototype.DV;
 /** @type {number} */
jsbn.BigInteger.prototype.FV;
 /** @type {number} */
jsbn.BigInteger.prototype.F1;
 /** @type {number} */
jsbn.BigInteger.prototype.F2;
 /** @type {!jsbn.BigInteger} */
jsbn.BigInteger.ZERO;
 /** @type {!jsbn.BigInteger} */
jsbn.BigInteger.ONE;

/**
 * @param {number} i
 * @param {number} x
 * @param {!jsbn.BigInteger} w
 * @param {number} j
 * @param {number} c
 * @param {number} n
 * @return {number}
 */
jsbn.BigInteger.prototype.am = function(i, x, w, j, c, n) {};

/**
 * @param {!jsbn.BigInteger} r
 * @return {void}
 */
jsbn.BigInteger.prototype.copyTo = function(r) {};

/**
 * @param {number} x
 * @return {void}
 */
jsbn.BigInteger.prototype.fromInt = function(x) {};

/**
 * @param {string} x
 * @param {number} b
 * @return {void}
 */
jsbn.BigInteger.prototype.fromString = function(x, b) {};

/**
 * @return {void}
 */
jsbn.BigInteger.prototype.clamp = function() {};

/**
 * @param {number=} b
 * @return {string}
 */
jsbn.BigInteger.prototype.toString = function(b) {};

/**
 * @return {!jsbn.BigInteger}
 */
jsbn.BigInteger.prototype.negate = function() {};

/**
 * @return {!jsbn.BigInteger}
 */
jsbn.BigInteger.prototype.abs = function() {};

/**
 * @param {!jsbn.BigInteger} a
 * @return {number}
 */
jsbn.BigInteger.prototype.compareTo = function(a) {};

/**
 * @return {number}
 */
jsbn.BigInteger.prototype.bitLength = function() {};

/**
 * @param {number} n
 * @param {!jsbn.BigInteger} r
 * @return {void}
 */
jsbn.BigInteger.prototype.dlShiftTo = function(n, r) {};

/**
 * @param {number} n
 * @param {!jsbn.BigInteger} r
 * @return {void}
 */
jsbn.BigInteger.prototype.drShiftTo = function(n, r) {};

/**
 * @param {number} n
 * @param {!jsbn.BigInteger} r
 * @return {void}
 */
jsbn.BigInteger.prototype.lShiftTo = function(n, r) {};

/**
 * @param {number} n
 * @param {!jsbn.BigInteger} r
 * @return {void}
 */
jsbn.BigInteger.prototype.rShiftTo = function(n, r) {};

/**
 * @param {!jsbn.BigInteger} a
 * @param {!jsbn.BigInteger} r
 * @return {void}
 */
jsbn.BigInteger.prototype.subTo = function(a, r) {};

/**
 * @param {!jsbn.BigInteger} a
 * @param {!jsbn.BigInteger} r
 * @return {void}
 */
jsbn.BigInteger.prototype.multiplyTo = function(a, r) {};

/**
 * @param {!jsbn.BigInteger} r
 * @return {void}
 */
jsbn.BigInteger.prototype.squareTo = function(r) {};

/**
 * @param {!jsbn.BigInteger} m
 * @param {!jsbn.BigInteger} q
 * @param {!jsbn.BigInteger} r
 * @return {void}
 */
jsbn.BigInteger.prototype.divRemTo = function(m, q, r) {};

/**
 * @param {!jsbn.BigInteger} a
 * @return {!jsbn.BigInteger}
 */
jsbn.BigInteger.prototype.mod = function(a) {};

/**
 * @return {number}
 */
jsbn.BigInteger.prototype.invDigit = function() {};

/**
 * @return {boolean}
 */
jsbn.BigInteger.prototype.isEven = function() {};

/**
 * @param {number} e
 * @param {!jsbn.Reduction} z
 * @return {!jsbn.BigInteger}
 */
jsbn.BigInteger.prototype.exp = function(e, z) {};

/**
 * @param {number} e
 * @param {!jsbn.BigInteger} m
 * @return {!jsbn.BigInteger}
 */
jsbn.BigInteger.prototype.modPowInt = function(e, m) {};

/**
 * @return {!jsbn.BigInteger}
 */
jsbn.BigInteger.prototype.clone = function() {};

/**
 * @return {number}
 */
jsbn.BigInteger.prototype.intValue = function() {};

/**
 * @return {number}
 */
jsbn.BigInteger.prototype.byteValue = function() {};

/**
 * @return {number}
 */
jsbn.BigInteger.prototype.shortValue = function() {};

/**
 * @param {number} r
 * @return {number}
 */
jsbn.BigInteger.prototype.chunkSize = function(r) {};

/**
 * @return {number}
 */
jsbn.BigInteger.prototype.signum = function() {};

/**
 * @param {number} b
 * @return {string}
 */
jsbn.BigInteger.prototype.toRadix = function(b) {};

/**
 * @param {string} s
 * @param {number} b
 * @return {void}
 */
jsbn.BigInteger.prototype.fromRadix = function(s, b) {};

/**
 * @param {number} a
 * @param {number=} b
 * @param {number=} c
 * @return {void}
 */
jsbn.BigInteger.prototype.fromNumber = function(a, b, c) {};

/**
 * @return {!Array<number>}
 */
jsbn.BigInteger.prototype.toByteArray = function() {};

/**
 * @param {!jsbn.BigInteger} a
 * @return {boolean}
 */
jsbn.BigInteger.prototype.equals = function(a) {};

/**
 * @param {!jsbn.BigInteger} a
 * @return {!jsbn.BigInteger}
 */
jsbn.BigInteger.prototype.min = function(a) {};

/**
 * @param {!jsbn.BigInteger} a
 * @return {!jsbn.BigInteger}
 */
jsbn.BigInteger.prototype.max = function(a) {};

/**
 * @param {!jsbn.BigInteger} a
 * @param {function(number, number): number} op
 * @param {!jsbn.BigInteger} r
 * @return {void}
 */
jsbn.BigInteger.prototype.bitwiseTo = function(a, op, r) {};

/**
 * @param {!jsbn.BigInteger} a
 * @return {!jsbn.BigInteger}
 */
jsbn.BigInteger.prototype.and = function(a) {};

/**
 * @param {!jsbn.BigInteger} a
 * @return {!jsbn.BigInteger}
 */
jsbn.BigInteger.prototype.or = function(a) {};

/**
 * @param {!jsbn.BigInteger} a
 * @return {!jsbn.BigInteger}
 */
jsbn.BigInteger.prototype.xor = function(a) {};

/**
 * @param {!jsbn.BigInteger} a
 * @return {!jsbn.BigInteger}
 */
jsbn.BigInteger.prototype.andNot = function(a) {};

/**
 * @return {!jsbn.BigInteger}
 */
jsbn.BigInteger.prototype.not = function() {};

/**
 * @param {number} n
 * @return {!jsbn.BigInteger}
 */
jsbn.BigInteger.prototype.shiftLeft = function(n) {};

/**
 * @param {number} n
 * @return {!jsbn.BigInteger}
 */
jsbn.BigInteger.prototype.shiftRight = function(n) {};

/**
 * @return {number}
 */
jsbn.BigInteger.prototype.getLowestSetBit = function() {};

/**
 * @return {number}
 */
jsbn.BigInteger.prototype.bitCount = function() {};

/**
 * @param {number} n
 * @return {boolean}
 */
jsbn.BigInteger.prototype.testBit = function(n) {};

/**
 * @param {number} n
 * @param {function(number, number): number} op
 * @return {!jsbn.BigInteger}
 */
jsbn.BigInteger.prototype.changeBit = function(n, op) {};

/**
 * @param {number} n
 * @return {!jsbn.BigInteger}
 */
jsbn.BigInteger.prototype.setBit = function(n) {};

/**
 * @param {number} n
 * @return {!jsbn.BigInteger}
 */
jsbn.BigInteger.prototype.clearBit = function(n) {};

/**
 * @param {number} n
 * @return {!jsbn.BigInteger}
 */
jsbn.BigInteger.prototype.flipBit = function(n) {};

/**
 * @param {!jsbn.BigInteger} a
 * @param {!jsbn.BigInteger} r
 * @return {void}
 */
jsbn.BigInteger.prototype.addTo = function(a, r) {};

/**
 * @param {!jsbn.BigInteger} a
 * @return {!jsbn.BigInteger}
 */
jsbn.BigInteger.prototype.add = function(a) {};

/**
 * @param {!jsbn.BigInteger} a
 * @return {!jsbn.BigInteger}
 */
jsbn.BigInteger.prototype.subtract = function(a) {};

/**
 * @param {!jsbn.BigInteger} a
 * @return {!jsbn.BigInteger}
 */
jsbn.BigInteger.prototype.multiply = function(a) {};

/**
 * @return {!jsbn.BigInteger}
 */
jsbn.BigInteger.prototype.square = function() {};

/**
 * @param {!jsbn.BigInteger} a
 * @return {!jsbn.BigInteger}
 */
jsbn.BigInteger.prototype.divide = function(a) {};

/**
 * @param {!jsbn.BigInteger} a
 * @return {!jsbn.BigInteger}
 */
jsbn.BigInteger.prototype.remainder = function(a) {};

/**
 * @param {!jsbn.BigInteger} a
 * @return {!Array<!jsbn.BigInteger>}
 */
jsbn.BigInteger.prototype.divideAndRemainder = function(a) {};

/**
 * @param {number} n
 * @return {void}
 */
jsbn.BigInteger.prototype.dMultiply = function(n) {};

/**
 * @param {number} n
 * @param {number} w
 * @return {void}
 */
jsbn.BigInteger.prototype.dAddOffset = function(n, w) {};

/**
 * @param {number} e
 * @return {!jsbn.BigInteger}
 */
jsbn.BigInteger.prototype.pow = function(e) {};

/**
 * @param {!jsbn.BigInteger} a
 * @param {number} n
 * @param {!jsbn.BigInteger} r
 * @return {void}
 */
jsbn.BigInteger.prototype.multiplyLowerTo = function(a, n, r) {};

/**
 * @param {!jsbn.BigInteger} a
 * @param {number} n
 * @param {!jsbn.BigInteger} r
 * @return {void}
 */
jsbn.BigInteger.prototype.multiplyUpperTo = function(a, n, r) {};

/**
 * @param {!jsbn.BigInteger} e
 * @param {!jsbn.BigInteger} m
 * @return {!jsbn.BigInteger}
 */
jsbn.BigInteger.prototype.modPow = function(e, m) {};

/**
 * @param {!jsbn.BigInteger} a
 * @return {!jsbn.BigInteger}
 */
jsbn.BigInteger.prototype.gcd = function(a) {};

/**
 * @param {number} n
 * @return {number}
 */
jsbn.BigInteger.prototype.modInt = function(n) {};

/**
 * @param {!jsbn.BigInteger} m
 * @return {!jsbn.BigInteger}
 */
jsbn.BigInteger.prototype.modInverse = function(m) {};

/**
 * @param {number} t
 * @return {boolean}
 */
jsbn.BigInteger.prototype.isProbablePrime = function(t) {};

/**
 * @param {number} t
 * @return {boolean}
 */
jsbn.BigInteger.prototype.millerRabin = function(t) {};
/**
 * @record
 * @struct
 */
jsbn.Reduction = function() {};

/**
 * @param {!jsbn.BigInteger} x
 * @return {!jsbn.BigInteger}
 */
jsbn.Reduction.prototype.convert = function(x) {};

/**
 * @param {!jsbn.BigInteger} x
 * @return {!jsbn.BigInteger}
 */
jsbn.Reduction.prototype.revert = function(x) {};

/**
 * @param {!jsbn.BigInteger} x
 * @return {void}
 */
jsbn.Reduction.prototype.reduce = function(x) {};

/**
 * @param {!jsbn.BigInteger} x
 * @param {!jsbn.BigInteger} y
 * @param {!jsbn.BigInteger} r
 * @return {void}
 */
jsbn.Reduction.prototype.mulTo = function(x, y, r) {};

/**
 * @param {!jsbn.BigInteger} x
 * @param {!jsbn.BigInteger} r
 * @return {void}
 */
jsbn.Reduction.prototype.sqrTo = function(x, r) {};
