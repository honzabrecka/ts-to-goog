/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/iscroll/index.d.ts:
/**
 * @record
 * @struct
 */
function IScrollOptions() {}
 /** @type {number} */
IScrollOptions.prototype.x;
 /** @type {number} */
IScrollOptions.prototype.y;
 /** @type {boolean} */
IScrollOptions.prototype.bounce;
 /** @type {boolean} */
IScrollOptions.prototype.bounceLock;
 /** @type {boolean} */
IScrollOptions.prototype.momentum;
 /** @type {boolean} */
IScrollOptions.prototype.lockDirection;
 /** @type {boolean} */
IScrollOptions.prototype.useTransform;
 /** @type {boolean} */
IScrollOptions.prototype.useTransition;
 /** @type {number} */
IScrollOptions.prototype.topOffset;
 /** @type {boolean} */
IScrollOptions.prototype.checkDOMChanges;
 /** @type {boolean} */
IScrollOptions.prototype.handleClick;
 /** @type {boolean} */
IScrollOptions.prototype.hScrollbar;
 /** @type {boolean} */
IScrollOptions.prototype.vScrollbar;
 /** @type {boolean} */
IScrollOptions.prototype.fixedScrollbar;
 /** @type {boolean} */
IScrollOptions.prototype.hideScrollbar;
 /** @type {boolean} */
IScrollOptions.prototype.fadeScrollbar;
 /** @type {string} */
IScrollOptions.prototype.scrollbarClass;
 /** @type {boolean} */
IScrollOptions.prototype.zoom;
 /** @type {number} */
IScrollOptions.prototype.zoomMin;
 /** @type {number} */
IScrollOptions.prototype.zoomMax;
 /** @type {number} */
IScrollOptions.prototype.doubleTapZoom;
 /** @type {boolean} */
IScrollOptions.prototype.mouseWheel;
 /** @type {string} */
IScrollOptions.prototype.wheelAction;
 /** @type {(string|boolean)} */
IScrollOptions.prototype.snap;
 /** @type {number} */
IScrollOptions.prototype.snapThreshold;
 /** @type {boolean} */
IScrollOptions.prototype.resizeIndicator;
 /** @type {number} */
IScrollOptions.prototype.mouseWheelSpeed;
 /** @type {number} */
IScrollOptions.prototype.startX;
 /** @type {number} */
IScrollOptions.prototype.startY;
 /** @type {boolean} */
IScrollOptions.prototype.scrollX;
 /** @type {boolean} */
IScrollOptions.prototype.scrollY;
 /** @type {(string|boolean)} */
IScrollOptions.prototype.scrollbars;
 /** @type {string} */
IScrollOptions.prototype.shrinkScrollbars;
 /** @type {boolean} */
IScrollOptions.prototype.interactiveScrollbars;
 /** @type {boolean} */
IScrollOptions.prototype.releaseScroll;
 /** @type {boolean} */
IScrollOptions.prototype.fadeScrollbars;
 /** @type {number} */
IScrollOptions.prototype.directionLockThreshold;
 /** @type {number} */
IScrollOptions.prototype.bounceTime;
 /** @type {(string|{style: string, fn: function(?): ?})} */
IScrollOptions.prototype.bounceEasing;
 /** @type {boolean} */
IScrollOptions.prototype.preventDefault;
 /** @type {(!Object|!Array<!RegExp>)} */
IScrollOptions.prototype.preventDefaultException;
 /** @type {boolean} */
IScrollOptions.prototype.HWCompositing;
 /** @type {boolean} */
IScrollOptions.prototype.freeScroll;
 /** @type {number} */
IScrollOptions.prototype.resizePolling;
 /** @type {boolean} */
IScrollOptions.prototype.tap;
 /** @type {boolean} */
IScrollOptions.prototype.click;
 /** @type {boolean} */
IScrollOptions.prototype.invertWheelDirection;
 /** @type {(string|boolean)} */
IScrollOptions.prototype.eventPassthrough;
 /** @type {number} */
IScrollOptions.prototype.probeType;
 /** @type {boolean} */
IScrollOptions.prototype.disableMouse;
 /** @type {boolean} */
IScrollOptions.prototype.disablePointer;
 /** @type {boolean} */
IScrollOptions.prototype.disableTouch;

/**
 * @constructor
 * @struct
 * @param {string|!HTMLElement} element
 * @param {!IScrollOptions=} options
 */
function IScroll(element, options) {}
 /** @type {number} */
IScroll.prototype.x;
 /** @type {number} */
IScroll.prototype.y;

/**
 * @return {void}
 */
IScroll.prototype.destroy = function() {};

/**
 * @return {void}
 */
IScroll.prototype.refresh = function() {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number=} time
 * @param {boolean=} relative
 * @return {void}
 */
IScroll.prototype.scrollTo = function(x, y, time, relative) {};

/**
 * @param {string|!HTMLElement} element
 * @param {number=} time
 * @param {(number|boolean)=} offsetX
 * @param {(number|boolean)=} offsetY
 * @param {!Function=} easing
 * @return {void}
 */
IScroll.prototype.scrollToElement = function(element, time, offsetX, offsetY, easing) {};

/**
 * @param {number} pageX
 * @param {number} pageY
 * @param {number=} time
 * @return {void}
 */
IScroll.prototype.goToPage = function(pageX, pageY, time) {};

/**
 * @return {void}
 */
IScroll.prototype.disable = function() {};

/**
 * @return {void}
 */
IScroll.prototype.enable = function() {};

/**
 * @return {void}
 */
IScroll.prototype.stop = function() {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} scale
 * @param {number=} time
 * @return {void}
 */
IScroll.prototype.zoom = function(x, y, scale, time) {};

/**
 * @return {boolean}
 */
IScroll.prototype.isReady = function() {};

/**
 * @param {string} type
 * @param {function(?): void} fn
 * @return {void}
 */
IScroll.prototype.on = function(type, fn) {};

/**
 * @param {string} type
 * @param {function(?): void=} fn
 * @return {void}
 */
IScroll.prototype.off = function(type, fn) {};
