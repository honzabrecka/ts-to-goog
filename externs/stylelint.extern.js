/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/stylelint/index.d.ts:

/** @typedef {string} */
var FormatterType;

/** @typedef {string} */
var SyntaxType;
/**
 * @record
 * @struct
 */
function LinterOptions() {}
 /** @type {string} */
LinterOptions.prototype.code;
 /** @type {string} */
LinterOptions.prototype.codeFilename;
 /** @type {!JSON} */
LinterOptions.prototype.config;
 /** @type {string} */
LinterOptions.prototype.configBasedir;
 /** @type {string} */
LinterOptions.prototype.configFile;
 /** @type {!JSON} */
LinterOptions.prototype.configOverrides;
 /** @type {boolean} */
LinterOptions.prototype.cache;
 /** @type {string} */
LinterOptions.prototype.cacheLocation;
 /** @type {(string|!Array<string>)} */
LinterOptions.prototype.files;
 /** @type {string} */
LinterOptions.prototype.formatter;
 /** @type {boolean} */
LinterOptions.prototype.ignoreDisables;
 /** @type {boolean} */
LinterOptions.prototype.reportNeedlessDisables;
 /** @type {boolean} */
LinterOptions.prototype.ignorePath;
 /** @type {string} */
LinterOptions.prototype.syntax;
 /** @type {string} */
LinterOptions.prototype.customSyntax;
/**
 * @record
 * @struct
 */
function LinterResult() {}
 /** @type {boolean} */
LinterResult.prototype.errored;
 /** @type {string} */
LinterResult.prototype.output;
 /** @type {!Array<?>} */
LinterResult.prototype.postcssResults;
 /** @type {!Array<?>} */
LinterResult.prototype.results;
/**
 * @record
 * @struct
 */
function LintResult() {}
 /** @type {string} */
LintResult.prototype.source;
 /** @type {boolean} */
LintResult.prototype.errored;
 /** @type {boolean} */
LintResult.prototype.ignored;
 /** @type {!Array<string>} */
LintResult.prototype.warnings;
 /** @type {!Array<string>} */
LintResult.prototype.deprecations;
 /** @type {!Array<?>} */
LintResult.prototype.invalidOptionWarnings;
/** @const */
var formatters = {};

/**
 * @param {!Array<?>} results
 * @return {string}
 */
formatters.json = function(results) {};

/**
 * @param {!Array<?>} results
 * @return {string}
 */
formatters.string = function(results) {};

/**
 * @param {!Array<?>} results
 * @return {string}
 */
formatters.verbose = function(results) {};

/**
 * @param {?=} options
 * @return {!Promise<?>}
 */
function lint(options) {}
