/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/bootstrap.v3.datetimepicker v3/index.d.ts:

/* TODO: ImportDeclaration in  */

/* TODO: NamespaceExportDeclaration in  */
/**
 * @extends {DatetimepickerEventObject}
 * @record
 * @struct
 */
function DatetimepickerChangeEventObject() {}
 /** @type {!moment.Moment} */
DatetimepickerChangeEventObject.prototype.oldDate;
/**
 * @extends {JQueryEventObject}
 * @record
 * @struct
 */
function DatetimepickerEventObject() {}
 /** @type {!moment.Moment} */
DatetimepickerEventObject.prototype.date;
/**
 * @record
 * @struct
 */
function DatetimepickerIcons() {}
 /** @type {string} */
DatetimepickerIcons.prototype.time;
 /** @type {string} */
DatetimepickerIcons.prototype.date;
 /** @type {string} */
DatetimepickerIcons.prototype.up;
 /** @type {string} */
DatetimepickerIcons.prototype.down;
/**
 * @record
 * @struct
 */
function DatetimepickerOptions() {}
 /** @type {boolean} */
DatetimepickerOptions.prototype.pickDate;
 /** @type {boolean} */
DatetimepickerOptions.prototype.pickTime;
 /** @type {boolean} */
DatetimepickerOptions.prototype.useMinutes;
 /** @type {boolean} */
DatetimepickerOptions.prototype.useSeconds;
 /** @type {boolean} */
DatetimepickerOptions.prototype.useCurrent;
 /** @type {number} */
DatetimepickerOptions.prototype.minuteStepping;
 /** @type {(string|!moment.Moment|!Date)} */
DatetimepickerOptions.prototype.minDate;
 /** @type {(string|!moment.Moment|!Date)} */
DatetimepickerOptions.prototype.maxDate;
 /** @type {boolean} */
DatetimepickerOptions.prototype.showToday;
 /** @type {boolean} */
DatetimepickerOptions.prototype.collapse;
 /** @type {string} */
DatetimepickerOptions.prototype.language;
 /** @type {(string|!moment.Moment|!Date)} */
DatetimepickerOptions.prototype.defaultDate;
 /** @type {!Array<(string|!moment.Moment|!Date)>} */
DatetimepickerOptions.prototype.disabledDates;
 /** @type {!Array<(string|!moment.Moment|!Date)>} */
DatetimepickerOptions.prototype.enabledDates;
 /** @type {?} */
DatetimepickerOptions.prototype.icons;
 /** @type {boolean} */
DatetimepickerOptions.prototype.useStrict;
 /** @type {string} */
DatetimepickerOptions.prototype.direction;
 /** @type {boolean} */
DatetimepickerOptions.prototype.sideBySide;
 /** @type {!Array<number>} */
DatetimepickerOptions.prototype.daysOfWeekDisabled;
 /** @type {boolean} */
DatetimepickerOptions.prototype.calendarWeeks;
 /** @type {(string|boolean)} */
DatetimepickerOptions.prototype.format;
 /** @type {string} */
DatetimepickerOptions.prototype.locale;
 /** @type {boolean} */
DatetimepickerOptions.prototype.showTodayButton;
 /** @type {string} */
DatetimepickerOptions.prototype.viewMode;
 /** @type {boolean} */
DatetimepickerOptions.prototype.inline;
 /** @type {string} */
DatetimepickerOptions.prototype.toolbarPlacement;
 /** @type {boolean} */
DatetimepickerOptions.prototype.showClear;
 /** @type {boolean} */
DatetimepickerOptions.prototype.ignoreReadonly;
/**
 * @record
 * @struct
 */
function Datetimepicker() {}

/**
 * @param {(string|!moment.Moment|!Date)=} date
 * @return {void|!moment.Moment}
 */
Datetimepicker.prototype.date = function(date) {};

/**
 * @param {(string|!moment.Moment|!Date)=} date
 * @return {void|(boolean|!moment.Moment)}
 */
Datetimepicker.prototype.minDate = function(date) {};

/**
 * @param {(string|!moment.Moment|!Date)=} date
 * @return {void|(boolean|!moment.Moment)}
 */
Datetimepicker.prototype.maxDate = function(date) {};

/**
 * @return {void}
 */
Datetimepicker.prototype.show = function() {};

/**
 * @return {void}
 */
Datetimepicker.prototype.disable = function() {};

/**
 * @return {void}
 */
Datetimepicker.prototype.enable = function() {};

/**
 * @return {void}
 */
Datetimepicker.prototype.destroy = function() {};

/**
 * @return {void}
 */
Datetimepicker.prototype.toggle = function() {};

/**
 * @param {?=} options
 * @return {?<!HTMLElement>}
 */
JQuery.prototype.datetimepicker = function(options) {};

/**
 * @param {string} events
 * @param {string|function(?): ?=} selector_or_handler
 * @param {function(?): ?=} handler
 * @return {?<!HTMLElement>}
 */
JQuery.prototype.off = function(events, selector_or_handler, handler) {};

/**
 * @param {string} events
 * @param {string|function(?): ?} selector_or_handler
 * @param {?|function(?): ?=} data_or_handler
 * @param {function(?): ?=} handler
 * @return {?<!HTMLElement>}
 */
JQuery.prototype.on = function(events, selector_or_handler, data_or_handler, handler) {};

/**
 * @param {string} key
 * @return {?}
 */
JQuery.prototype.data = function(key) {};
