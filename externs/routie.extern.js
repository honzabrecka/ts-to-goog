/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/routie/index.d.ts:
/** @const */
var routie = {};
/**
 * @record
 * @struct
 */
routie.Route = function() {};

/**
 * @param {string} path
 * @param {string} name
 * @return {!routie.Route}
 */
routie.Route.prototype.constructor = function(path, name) {};

/**
 * @param {!Function} fn
 * @return {void}
 */
routie.Route.prototype.addHandler = function(fn) {};

/**
 * @param {!Function} fn
 * @return {void}
 */
routie.Route.prototype.removeHandler = function(fn) {};

/**
 * @param {?} params
 * @return {void}
 */
routie.Route.prototype.run = function(params) {};

/**
 * @param {string} path
 * @param {?} params
 * @return {boolean}
 */
routie.Route.prototype.match = function(path, params) {};

/**
 * @param {?} params
 * @return {string}
 */
routie.Route.prototype.toURL = function(params) {};
/**
 * @extends {routie.RoutieStatic}
 * @record
 * @struct
 */
routie.Routie = function() {};

/* TODO: CallSignature: routie */

/* TODO: CallSignature: routie */

/* TODO: CallSignature: routie */
/**
 * @record
 * @struct
 */
routie.RoutieStatic = function() {};

/**
 * @param {string} name
 * @param {!Function} fn
 * @return {string}
 */
routie.RoutieStatic.prototype.lookup = function(name, fn) {};

/**
 * @param {string} path
 * @param {!Function} fn
 * @return {void}
 */
routie.RoutieStatic.prototype.remove = function(path, fn) {};

/**
 * @return {void}
 */
routie.RoutieStatic.prototype.removeAll = function() {};

/**
 * @param {string} path
 * @param {!routie.RouteOptions=} options
 * @return {void}
 */
routie.RoutieStatic.prototype.navigate = function(path, options) {};

/**
 * @return {!routie.Routie}
 */
routie.RoutieStatic.prototype.noConflict = function() {};
/**
 * @record
 * @struct
 */
routie.RouteOptions = function() {};
 /** @type {boolean} */
routie.RouteOptions.prototype.silent;
 /** @type {!routie.Routie} */
var routie;
