/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/d3-polygon/index.d.ts:

/**
 * Returns the signed area of the specified polygon. If the vertices of the polygon are in counterclockwise order (
 * assuming a coordinate system where the origin ⟨0,0⟩ is in the top-left corner), the returned area is positive;
 * otherwise it is negative, or zero.
 * 
 * @param {!Array<!Array<?>>} polygon Array of coordinates <x0, y0>, <x1, y1> and so on.
 * @return {number}
 */
function polygonArea(polygon) {}

/**
 * Returns the centroid of the specified polygon.
 * 
 * @param {!Array<!Array<?>>} polygon Array of coordinates <x0, y0>, <x1, y1> and so on.
 * @return {!Array<?>}
 */
function polygonCentroid(polygon) {}

/**
 * Returns the convex hull of the specified points using Andrew’s monotone chain algorithm.
 * The returned hull is represented as an array containing a subset of the input points arranged in
 * counterclockwise order. Returns null if points has fewer than three elements.
 * 
 * @param {!Array<!Array<?>>} points Array of coordinates <x0, y0>, <x1, y1> and so on.
 * @return {!Array<!Array<?>>}
 */
function polygonHull(points) {}

/**
 * Returns true if and only if the specified point is inside the specified polygon.
 * 
 * @param {!Array<!Array<?>>} polygon Array of coordinates <x0, y0>, <x1, y1> and so on.
 * @param {!Array<?>} point Coordinates of point <x, y>
 * @return {boolean}
 */
function polygonContains(polygon, point) {}

/**
 * Returns the length of the perimeter of the specified polygon.
 * 
 * @param {!Array<!Array<?>>} polygon Array of coordinates <x0, y0>, <x1, y1> and so on.
 * @return {number}
 */
function polygonLength(polygon) {}
