/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/simple-peer/index.d.ts:

/* TODO: ImportDeclaration in  */
 /** @type {!SimplePeer.SimplePeer} */
var SimplePeer;
/**
 * @record
 * @struct
 */
SimplePeer.Options = function() {};
 /** @type {boolean} */
SimplePeer.Options.prototype.initiator;
 /** @type {!Object} */
SimplePeer.Options.prototype.channelConfig;
 /** @type {string} */
SimplePeer.Options.prototype.channelName;
 /** @type {!Object} */
SimplePeer.Options.prototype.config;
 /** @type {!Object} */
SimplePeer.Options.prototype.constraints;
 /** @type {!Object} */
SimplePeer.Options.prototype.offerConstraints;
 /** @type {!Object} */
SimplePeer.Options.prototype.answerConstraints;
 /** @type {(number|boolean)} */
SimplePeer.Options.prototype.reconnectTimer;
 /** @type {boolean} */
SimplePeer.Options.prototype.stream;
 /** @type {boolean} */
SimplePeer.Options.prototype.trickle;
 /** @type {!Object} */
SimplePeer.Options.prototype.wrtc;

/**
 * @template T
 * @param {T} sdp
 * @return {T}
 */
SimplePeer.Options.prototype.sdpTransform = function(sdp) {};
/**
 * @record
 * @struct
 */
SimplePeer.SimplePeer = function() {};

/* TODO: ConstructSignature: SimplePeer */

/* TODO: CallSignature: SimplePeer */
 /** @type {boolean} */
SimplePeer.SimplePeer.prototype.WEBRTC_SUPPORT;

/** @typedef {(!Int8Array|!Uint8Array|!Uint8ClampedArray|!Int16Array|!Uint16Array|!Int32Array|!Uint32Array|!Float32Array|!Float64Array)} */
SimplePeer.TypedArray;

/** @typedef {(string|!Int8Array|!Uint8Array|!Uint8ClampedArray|!Int16Array|!Uint16Array|!Int32Array|!Uint32Array|!Float32Array|!Float64Array|?|!ArrayBuffer|!Blob)} */
SimplePeer.SimplePeerData;
/**
 * @record
 * @struct
 */
SimplePeer.SignalData = function() {};
 /** @type {?} */
SimplePeer.SignalData.prototype.sdp;
 /** @type {?} */
SimplePeer.SignalData.prototype.candidate;
/**
 * @record
 * @struct
 */
SimplePeer.Instance = function() {};
 /** @type {number} */
SimplePeer.Instance.prototype.bufferSize;

/**
 * @param {(string|!SimplePeer.SignalData)} data
 * @return {void}
 */
SimplePeer.Instance.prototype.signal = function(data) {};

/**
 * @param {(string|!Int8Array|!Uint8Array|!Uint8ClampedArray|!Int16Array|!Uint16Array|!Int32Array|!Uint32Array|!Float32Array|!Float64Array|?|!ArrayBuffer|!Blob)} data
 * @return {void}
 */
SimplePeer.Instance.prototype.send = function(data) {};

/**
 * @param {!Error=} error
 * @return {void}
 */
SimplePeer.Instance.prototype.destroy = function(error) {};

/**
 * @return {{port: string, family: string, address: string}}
 */
SimplePeer.Instance.prototype.address = function() {};

/* TODO: ExportAssignment in  */
