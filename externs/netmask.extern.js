/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/netmask/index.d.ts:

/**
 * @param {number} long
 * @return {string}
 */
function long2ip(long) {}

/**
 * @param {string} ip
 * @return {number}
 */
function ip2long(ip) {}

/**
 * @constructor
 * @struct
 * @param {string} netmask_or_net
 * @param {string=} mask
 */
function Netmask(netmask_or_net, mask) {}
 /** @type {number} */
Netmask.prototype.maskLong;
 /** @type {number} */
Netmask.prototype.bitmask;
 /** @type {number} */
Netmask.prototype.netLong;
 /** @type {number} */
Netmask.prototype.size;
 /** @type {string} */
Netmask.prototype.base;
 /** @type {string} */
Netmask.prototype.mask;
 /** @type {string} */
Netmask.prototype.hostmask;
 /** @type {string} */
Netmask.prototype.first;
 /** @type {string} */
Netmask.prototype.last;
 /** @type {string} */
Netmask.prototype.broadcast;

/**
 * @param {(string|number|!Netmask)} ip
 * @return {boolean}
 */
Netmask.prototype.contains = function(ip) {};

/**
 * @param {number=} count
 * @return {!Netmask}
 */
Netmask.prototype.next = function(count) {};

/**
 * @param {function(string, number, number): void} fn
 * @return {void}
 */
Netmask.prototype.forEach = function(fn) {};

/**
 * @return {string}
 */
Netmask.prototype.toString = function() {};
