/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/elasticsearch/index.d.ts:
/** @const */
var Elasticsearch = {};

/**
 * @constructor
 * @struct
 * @param {!Elasticsearch.ConfigOptions} params
 */
Elasticsearch.Client = function(params) {};
 /** @type {!Elasticsearch.Cat} */
Elasticsearch.Client.prototype.cat;
 /** @type {!Elasticsearch.Cluster} */
Elasticsearch.Client.prototype.cluster;
 /** @type {!Elasticsearch.Indices} */
Elasticsearch.Client.prototype.indices;
 /** @type {!Elasticsearch.Ingest} */
Elasticsearch.Client.prototype.ingest;
 /** @type {!Elasticsearch.Nodes} */
Elasticsearch.Client.prototype.nodes;
 /** @type {!Elasticsearch.Snapshot} */
Elasticsearch.Client.prototype.snapshot;
 /** @type {!Elasticsearch.Tasks} */
Elasticsearch.Client.prototype.tasks;

/**
 * @param {!Elasticsearch.BulkIndexDocumentsParams} params
 * @param {function(?, ?): void=} callback
 * @return {!Promise<?>|void}
 */
Elasticsearch.Client.prototype.bulk = function(params, callback) {};

/**
 * @param {!Elasticsearch.ClearScrollParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Client.prototype.clearScroll = function(params, callback) {};

/**
 * @param {!Elasticsearch.CountParams} params
 * @param {function(?, !Elasticsearch.CountResponse): void=} callback
 * @return {void|!Promise<!Elasticsearch.CountResponse>}
 */
Elasticsearch.Client.prototype.count = function(params, callback) {};

/**
 * @param {!Elasticsearch.CreateDocumentParams} params
 * @param {function(?, !Elasticsearch.CreateDocumentResponse, ?): void=} callback
 * @return {!Promise<!Elasticsearch.CreateDocumentResponse>|void}
 */
Elasticsearch.Client.prototype.create = function(params, callback) {};

/**
 * @param {!Elasticsearch.DeleteDocumentParams} params
 * @param {function(?, !Elasticsearch.DeleteDocumentResponse): void=} callback
 * @return {!Promise<!Elasticsearch.DeleteDocumentResponse>|void}
 */
Elasticsearch.Client.prototype.delete = function(params, callback) {};

/**
 * @param {!Elasticsearch.DeleteDocumentByQueryParams} params
 * @param {function(?, !Elasticsearch.DeleteDocumentByQueryResponse): void=} callback
 * @return {!Promise<!Elasticsearch.DeleteDocumentByQueryResponse>|void}
 */
Elasticsearch.Client.prototype.deleteByQuery = function(params, callback) {};

/**
 * @param {!Elasticsearch.DeleteScriptParams} params
 * @param {function(?, ?): void=} callback
 * @return {!Promise<?>|void}
 */
Elasticsearch.Client.prototype.deleteScript = function(params, callback) {};

/**
 * @param {!Elasticsearch.DeleteTemplateParams} params
 * @param {function(?, ?): void=} callback
 * @return {!Promise<?>|void}
 */
Elasticsearch.Client.prototype.deleteTemplate = function(params, callback) {};

/**
 * @param {!Elasticsearch.ExistsParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {!Promise<?>|void}
 */
Elasticsearch.Client.prototype.exists = function(params, callback) {};

/**
 * @param {!Elasticsearch.ExplainParams} params
 * @param {function(?, !Elasticsearch.ExplainResponse): void=} callback
 * @return {!Promise<!Elasticsearch.ExplainResponse>|void}
 */
Elasticsearch.Client.prototype.explain = function(params, callback) {};

/**
 * @param {!Elasticsearch.FieldStatsParams} params
 * @param {function(?, !Elasticsearch.FieldStatsResponse): void=} callback
 * @return {!Promise<!Elasticsearch.FieldStatsResponse>|void}
 */
Elasticsearch.Client.prototype.fieldStats = function(params, callback) {};

/**
 * @template T
 * @param {!Elasticsearch.GetParams} params
 * @param {function(?, !Elasticsearch.GetResponse<T>): void=} callback
 * @return {void|!Promise<!Elasticsearch.GetResponse<T>>}
 */
Elasticsearch.Client.prototype.get = function(params, callback) {};

/**
 * @param {!Elasticsearch.GetScriptParams} params
 * @param {function(?, ?): void=} callback
 * @return {!Promise<?>|void}
 */
Elasticsearch.Client.prototype.getScript = function(params, callback) {};

/**
 * @param {!Elasticsearch.GetSourceParams} params
 * @param {function(?, ?): void=} callback
 * @return {!Promise<?>|void}
 */
Elasticsearch.Client.prototype.getSource = function(params, callback) {};

/**
 * @param {!Elasticsearch.GetTemplateParams} params
 * @param {function(?, ?): void=} callback
 * @return {!Promise<?>|void}
 */
Elasticsearch.Client.prototype.getTemplate = function(params, callback) {};

/**
 * @template T
 * @param {!Elasticsearch.IndexDocumentParams<T>} params
 * @param {function(?, ?): void=} callback
 * @return {!Promise<?>|void}
 */
Elasticsearch.Client.prototype.index = function(params, callback) {};

/**
 * @param {!Elasticsearch.InfoParams} params
 * @param {function(?, ?): void=} callback
 * @return {!Promise<?>|void}
 */
Elasticsearch.Client.prototype.info = function(params, callback) {};

/**
 * @template T
 * @param {!Elasticsearch.MGetParams} params
 * @param {function(?, !Elasticsearch.MGetResponse<T>): void=} callback
 * @return {void|!Promise<!Elasticsearch.MGetResponse<T>>}
 */
Elasticsearch.Client.prototype.mget = function(params, callback) {};

/**
 * @template T
 * @param {!Elasticsearch.MSearchParams} params
 * @param {function(?, !Elasticsearch.MSearchResponse<T>): void=} callback
 * @return {void|!Promise<!Elasticsearch.MSearchResponse<T>>}
 */
Elasticsearch.Client.prototype.msearch = function(params, callback) {};

/**
 * @template T
 * @param {!Elasticsearch.MSearchTemplateParams} params
 * @param {function(?, !Elasticsearch.MSearchResponse<T>): void=} callback
 * @return {void|!Promise<!Elasticsearch.MSearchResponse<T>>}
 */
Elasticsearch.Client.prototype.msearchTemplate = function(params, callback) {};

/**
 * @param {!Elasticsearch.MTermVectorsParams} params
 * @param {function(?, ?): void=} callback
 * @return {!Promise<?>|void}
 */
Elasticsearch.Client.prototype.mtermvectors = function(params, callback) {};

/**
 * @param {!Elasticsearch.PingParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {!Promise<?>|void}
 */
Elasticsearch.Client.prototype.ping = function(params, callback) {};

/**
 * @param {!Elasticsearch.PutScriptParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {!Promise<?>|void}
 */
Elasticsearch.Client.prototype.putScript = function(params, callback) {};

/**
 * @param {!Elasticsearch.PutTemplateParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {!Promise<?>|void}
 */
Elasticsearch.Client.prototype.putTemplate = function(params, callback) {};

/**
 * @param {!Elasticsearch.ReindexParams} params
 * @param {function(?, !Elasticsearch.ReindexResponse): void=} callback
 * @return {!Promise<!Elasticsearch.ReindexResponse>|void}
 */
Elasticsearch.Client.prototype.reindex = function(params, callback) {};

/**
 * @param {!Elasticsearch.ReindexRethrottleParams} params
 * @param {function(?, ?): void=} callback
 * @return {!Promise<?>|void}
 */
Elasticsearch.Client.prototype.reindexRethrottle = function(params, callback) {};

/**
 * @param {!Elasticsearch.RenderSearchTemplateParams} params
 * @param {function(?, ?): void=} callback
 * @return {!Promise<?>|void}
 */
Elasticsearch.Client.prototype.renderSearchTemplate = function(params, callback) {};

/**
 * @template T
 * @param {!Elasticsearch.ScrollParams} params
 * @param {function(?, !Elasticsearch.SearchResponse<T>): void=} callback
 * @return {!Promise<!Elasticsearch.SearchResponse<T>>|void}
 */
Elasticsearch.Client.prototype.scroll = function(params, callback) {};

/**
 * @template T
 * @param {!Elasticsearch.SearchParams} params
 * @param {function(?, !Elasticsearch.SearchResponse<T>): void=} callback
 * @return {!Promise<!Elasticsearch.SearchResponse<T>>|void}
 */
Elasticsearch.Client.prototype.search = function(params, callback) {};

/**
 * @param {!Elasticsearch.SearchShardsParams} params
 * @param {function(?, !Elasticsearch.SearchShardsResponse): void=} callback
 * @return {!Promise<!Elasticsearch.SearchShardsResponse>|void}
 */
Elasticsearch.Client.prototype.searchShards = function(params, callback) {};

/**
 * @param {!Elasticsearch.SearchTemplateParams} params
 * @param {function(?, ?): void=} callback
 * @return {!Promise<?>|void}
 */
Elasticsearch.Client.prototype.searchTemplate = function(params, callback) {};

/**
 * @param {!Elasticsearch.SuggestParams} params
 * @param {function(?, ?): void=} callback
 * @return {!Promise<?>|void}
 */
Elasticsearch.Client.prototype.suggest = function(params, callback) {};

/**
 * @param {!Elasticsearch.TermvectorsParams} params
 * @param {function(?, ?): void=} callback
 * @return {!Promise<?>|void}
 */
Elasticsearch.Client.prototype.termvectors = function(params, callback) {};

/**
 * @param {!Elasticsearch.UpdateDocumentParams} params
 * @param {function(?, ?): void=} callback
 * @return {!Promise<?>|void}
 */
Elasticsearch.Client.prototype.update = function(params, callback) {};

/**
 * @param {!Elasticsearch.UpdateDocumentByQueryParams} params
 * @param {function(?, ?): void=} callback
 * @return {!Promise<?>|void}
 */
Elasticsearch.Client.prototype.updateByQuery = function(params, callback) {};
/**
 * @record
 * @struct
 */
Elasticsearch.ConfigOptions = function() {};
 /** @type {?} */
Elasticsearch.ConfigOptions.prototype.host;
 /** @type {?} */
Elasticsearch.ConfigOptions.prototype.hosts;
 /** @type {string} */
Elasticsearch.ConfigOptions.prototype.httpAuth;
 /** @type {?} */
Elasticsearch.ConfigOptions.prototype.log;
 /** @type {string} */
Elasticsearch.ConfigOptions.prototype.apiVersion;
 /** @type {?} */
Elasticsearch.ConfigOptions.prototype.plugins;
 /** @type {boolean} */
Elasticsearch.ConfigOptions.prototype.sniffOnStart;
 /** @type {number} */
Elasticsearch.ConfigOptions.prototype.sniffInterval;
 /** @type {boolean} */
Elasticsearch.ConfigOptions.prototype.sniffOnConnectionFault;
 /** @type {number} */
Elasticsearch.ConfigOptions.prototype.maxRetries;
 /** @type {number} */
Elasticsearch.ConfigOptions.prototype.requestTimeout;
 /** @type {number} */
Elasticsearch.ConfigOptions.prototype.deadTimeout;
 /** @type {number} */
Elasticsearch.ConfigOptions.prototype.pingTimeout;
 /** @type {boolean} */
Elasticsearch.ConfigOptions.prototype.keepAlive;
 /** @type {number} */
Elasticsearch.ConfigOptions.prototype.maxSockets;
 /** @type {boolean} */
Elasticsearch.ConfigOptions.prototype.suggestCompression;
 /** @type {string} */
Elasticsearch.ConfigOptions.prototype.connectionClass;
 /** @type {string} */
Elasticsearch.ConfigOptions.prototype.sniffedNodesProtocol;
 /** @type {!Object} */
Elasticsearch.ConfigOptions.prototype.ssl;
 /** @type {?} */
Elasticsearch.ConfigOptions.prototype.selector;
 /** @type {function(): void} */
Elasticsearch.ConfigOptions.prototype.defer;
 /** @type {?} */
Elasticsearch.ConfigOptions.prototype.nodesToHostCallback;
 /** @type {?} */
Elasticsearch.ConfigOptions.prototype.createNodeAgent;
/**
 * @record
 * @struct
 */
Elasticsearch.Explanation = function() {};
 /** @type {number} */
Elasticsearch.Explanation.prototype.value;
 /** @type {string} */
Elasticsearch.Explanation.prototype.description;
 /** @type {!Array<!Elasticsearch.Explanation>} */
Elasticsearch.Explanation.prototype.details;
/**
 * @record
 * @struct
 */
Elasticsearch.GenericParams = function() {};
 /** @type {number} */
Elasticsearch.GenericParams.prototype.requestTimeout;
 /** @type {number} */
Elasticsearch.GenericParams.prototype.maxRetries;
 /** @type {string} */
Elasticsearch.GenericParams.prototype.method;
 /** @type {?} */
Elasticsearch.GenericParams.prototype.body;
 /** @type {(number|!Array<number>)} */
Elasticsearch.GenericParams.prototype.ignore;
 /** @type {(string|!Array<string>)} */
Elasticsearch.GenericParams.prototype.filterPath;
/**
 * @record
 * @struct
 */
Elasticsearch.ShardsResponse = function() {};
 /** @type {number} */
Elasticsearch.ShardsResponse.prototype.total;
 /** @type {number} */
Elasticsearch.ShardsResponse.prototype.successful;
 /** @type {number} */
Elasticsearch.ShardsResponse.prototype.failed;

/** @typedef {string} */
Elasticsearch.TimeSpan;

/** @typedef {(string|boolean|!Array<string>)} */
Elasticsearch.NameList;

/** @typedef {(boolean|string)} */
Elasticsearch.Refresh;

/** @typedef {string} */
Elasticsearch.VersionType;

/** @typedef {string} */
Elasticsearch.ExpandWildcards;

/** @typedef {string} */
Elasticsearch.DefaultOperator;

/** @typedef {string} */
Elasticsearch.Conflicts;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.BulkIndexDocumentsParams = function() {};
 /** @type {string} */
Elasticsearch.BulkIndexDocumentsParams.prototype.waitForActiveShards;
 /** @type {(boolean|string)} */
Elasticsearch.BulkIndexDocumentsParams.prototype.refresh;
 /** @type {string} */
Elasticsearch.BulkIndexDocumentsParams.prototype.routing;
 /** @type {string} */
Elasticsearch.BulkIndexDocumentsParams.prototype.timeout;
 /** @type {string} */
Elasticsearch.BulkIndexDocumentsParams.prototype.type;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.BulkIndexDocumentsParams.prototype.fields;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.BulkIndexDocumentsParams.prototype._source;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.BulkIndexDocumentsParams.prototype._sourceExclude;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.BulkIndexDocumentsParams.prototype._sourceInclude;
 /** @type {string} */
Elasticsearch.BulkIndexDocumentsParams.prototype.pipeline;
 /** @type {string} */
Elasticsearch.BulkIndexDocumentsParams.prototype.index;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.ClearScrollParams = function() {};
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.ClearScrollParams.prototype.scrollId;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.CountParams = function() {};
 /** @type {boolean} */
Elasticsearch.CountParams.prototype.ignoreUnavailable;
 /** @type {boolean} */
Elasticsearch.CountParams.prototype.allowNoIndices;
 /** @type {string} */
Elasticsearch.CountParams.prototype.expandWildcards;
 /** @type {number} */
Elasticsearch.CountParams.prototype.minScore;
 /** @type {string} */
Elasticsearch.CountParams.prototype.preference;
 /** @type {string} */
Elasticsearch.CountParams.prototype.routing;
 /** @type {string} */
Elasticsearch.CountParams.prototype.q;
 /** @type {string} */
Elasticsearch.CountParams.prototype.analyzer;
 /** @type {boolean} */
Elasticsearch.CountParams.prototype.analyzeWildcard;
 /** @type {string} */
Elasticsearch.CountParams.prototype.defaultOperator;
 /** @type {string} */
Elasticsearch.CountParams.prototype.df;
 /** @type {boolean} */
Elasticsearch.CountParams.prototype.lenient;
 /** @type {boolean} */
Elasticsearch.CountParams.prototype.lowercaseExpandedTerms;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.CountParams.prototype.index;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.CountParams.prototype.type;
/**
 * @record
 * @struct
 */
Elasticsearch.CountResponse = function() {};
 /** @type {number} */
Elasticsearch.CountResponse.prototype.count;
 /** @type {!Elasticsearch.ShardsResponse} */
Elasticsearch.CountResponse.prototype._shards;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.CreateDocumentParams = function() {};
 /** @type {string} */
Elasticsearch.CreateDocumentParams.prototype.waitForActiveShards;
 /** @type {string} */
Elasticsearch.CreateDocumentParams.prototype.parent;
 /** @type {(boolean|string)} */
Elasticsearch.CreateDocumentParams.prototype.refresh;
 /** @type {string} */
Elasticsearch.CreateDocumentParams.prototype.timeout;
 /** @type {(number|!Date)} */
Elasticsearch.CreateDocumentParams.prototype.timestamp;
 /** @type {string} */
Elasticsearch.CreateDocumentParams.prototype.ttl;
 /** @type {number} */
Elasticsearch.CreateDocumentParams.prototype.version;
 /** @type {string} */
Elasticsearch.CreateDocumentParams.prototype.versionType;
 /** @type {string} */
Elasticsearch.CreateDocumentParams.prototype.pipeline;
 /** @type {string} */
Elasticsearch.CreateDocumentParams.prototype.id;
 /** @type {string} */
Elasticsearch.CreateDocumentParams.prototype.index;
 /** @type {string} */
Elasticsearch.CreateDocumentParams.prototype.type;
/**
 * @record
 * @struct
 */
Elasticsearch.CreateDocumentResponse = function() {};
 /** @type {!Elasticsearch.ShardsResponse} */
Elasticsearch.CreateDocumentResponse.prototype._shards;
 /** @type {string} */
Elasticsearch.CreateDocumentResponse.prototype._index;
 /** @type {string} */
Elasticsearch.CreateDocumentResponse.prototype._type;
 /** @type {string} */
Elasticsearch.CreateDocumentResponse.prototype._id;
 /** @type {number} */
Elasticsearch.CreateDocumentResponse.prototype._version;
 /** @type {boolean} */
Elasticsearch.CreateDocumentResponse.prototype.created;
 /** @type {string} */
Elasticsearch.CreateDocumentResponse.prototype.result;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.DeleteDocumentParams = function() {};
 /** @type {string} */
Elasticsearch.DeleteDocumentParams.prototype.waitForActiveShards;
 /** @type {string} */
Elasticsearch.DeleteDocumentParams.prototype.parent;
 /** @type {(boolean|string)} */
Elasticsearch.DeleteDocumentParams.prototype.refresh;
 /** @type {string} */
Elasticsearch.DeleteDocumentParams.prototype.routing;
 /** @type {string} */
Elasticsearch.DeleteDocumentParams.prototype.timeout;
 /** @type {number} */
Elasticsearch.DeleteDocumentParams.prototype.version;
 /** @type {string} */
Elasticsearch.DeleteDocumentParams.prototype.versionType;
 /** @type {string} */
Elasticsearch.DeleteDocumentParams.prototype.index;
 /** @type {string} */
Elasticsearch.DeleteDocumentParams.prototype.type;
 /** @type {string} */
Elasticsearch.DeleteDocumentParams.prototype.id;
/**
 * @record
 * @struct
 */
Elasticsearch.DeleteDocumentResponse = function() {};
 /** @type {!Elasticsearch.ShardsResponse} */
Elasticsearch.DeleteDocumentResponse.prototype._shards;
 /** @type {boolean} */
Elasticsearch.DeleteDocumentResponse.prototype.found;
 /** @type {string} */
Elasticsearch.DeleteDocumentResponse.prototype._index;
 /** @type {string} */
Elasticsearch.DeleteDocumentResponse.prototype._type;
 /** @type {string} */
Elasticsearch.DeleteDocumentResponse.prototype._id;
 /** @type {number} */
Elasticsearch.DeleteDocumentResponse.prototype._version;
 /** @type {string} */
Elasticsearch.DeleteDocumentResponse.prototype.result;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.DeleteDocumentByQueryParams = function() {};
 /** @type {string} */
Elasticsearch.DeleteDocumentByQueryParams.prototype.analyzer;
 /** @type {boolean} */
Elasticsearch.DeleteDocumentByQueryParams.prototype.analyzeWildcard;
 /** @type {string} */
Elasticsearch.DeleteDocumentByQueryParams.prototype.defaultOperator;
 /** @type {string} */
Elasticsearch.DeleteDocumentByQueryParams.prototype.df;
 /** @type {number} */
Elasticsearch.DeleteDocumentByQueryParams.prototype.from;
 /** @type {boolean} */
Elasticsearch.DeleteDocumentByQueryParams.prototype.ignoreUnavailable;
 /** @type {boolean} */
Elasticsearch.DeleteDocumentByQueryParams.prototype.allowNoIndices;
 /** @type {string} */
Elasticsearch.DeleteDocumentByQueryParams.prototype.conflicts;
 /** @type {string} */
Elasticsearch.DeleteDocumentByQueryParams.prototype.expandWildcards;
 /** @type {boolean} */
Elasticsearch.DeleteDocumentByQueryParams.prototype.lenient;
 /** @type {boolean} */
Elasticsearch.DeleteDocumentByQueryParams.prototype.lowercaseExpandedTerms;
 /** @type {string} */
Elasticsearch.DeleteDocumentByQueryParams.prototype.preference;
 /** @type {string} */
Elasticsearch.DeleteDocumentByQueryParams.prototype.q;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.DeleteDocumentByQueryParams.prototype.routing;
 /** @type {string} */
Elasticsearch.DeleteDocumentByQueryParams.prototype.scroll;
 /** @type {string} */
Elasticsearch.DeleteDocumentByQueryParams.prototype.searchType;
 /** @type {string} */
Elasticsearch.DeleteDocumentByQueryParams.prototype.searchTimeout;
 /** @type {number} */
Elasticsearch.DeleteDocumentByQueryParams.prototype.size;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.DeleteDocumentByQueryParams.prototype.sort;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.DeleteDocumentByQueryParams.prototype._source;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.DeleteDocumentByQueryParams.prototype._sourceExclude;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.DeleteDocumentByQueryParams.prototype._sourceInclude;
 /** @type {number} */
Elasticsearch.DeleteDocumentByQueryParams.prototype.terminateAfter;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.DeleteDocumentByQueryParams.prototype.stats;
 /** @type {number} */
Elasticsearch.DeleteDocumentByQueryParams.prototype.version;
 /** @type {boolean} */
Elasticsearch.DeleteDocumentByQueryParams.prototype.requestCache;
 /** @type {(boolean|string)} */
Elasticsearch.DeleteDocumentByQueryParams.prototype.refresh;
 /** @type {string} */
Elasticsearch.DeleteDocumentByQueryParams.prototype.timeout;
 /** @type {string} */
Elasticsearch.DeleteDocumentByQueryParams.prototype.waitForActiveShards;
 /** @type {number} */
Elasticsearch.DeleteDocumentByQueryParams.prototype.scrollSize;
 /** @type {boolean} */
Elasticsearch.DeleteDocumentByQueryParams.prototype.waitForCompletion;
 /** @type {number} */
Elasticsearch.DeleteDocumentByQueryParams.prototype.requestsPerSecond;
 /** @type {string} */
Elasticsearch.DeleteDocumentByQueryParams.prototype.index;
 /** @type {string} */
Elasticsearch.DeleteDocumentByQueryParams.prototype.type;
/**
 * @record
 * @struct
 */
Elasticsearch.DeleteDocumentByQueryResponse = function() {};
 /** @type {number} */
Elasticsearch.DeleteDocumentByQueryResponse.prototype.took;
 /** @type {boolean} */
Elasticsearch.DeleteDocumentByQueryResponse.prototype.timed_out;
 /** @type {number} */
Elasticsearch.DeleteDocumentByQueryResponse.prototype.deleted;
 /** @type {number} */
Elasticsearch.DeleteDocumentByQueryResponse.prototype.batches;
 /** @type {number} */
Elasticsearch.DeleteDocumentByQueryResponse.prototype.version_conflicts;
 /** @type {number} */
Elasticsearch.DeleteDocumentByQueryResponse.prototype.noops;
 /** @type {{bulk: number, search: number}} */
Elasticsearch.DeleteDocumentByQueryResponse.prototype.retries;
 /** @type {number} */
Elasticsearch.DeleteDocumentByQueryResponse.prototype.throttled_millis;
 /** @type {number} */
Elasticsearch.DeleteDocumentByQueryResponse.prototype.requests_per_second;
 /** @type {number} */
Elasticsearch.DeleteDocumentByQueryResponse.prototype.throttled_until_millis;
 /** @type {number} */
Elasticsearch.DeleteDocumentByQueryResponse.prototype.total;
 /** @type {!Array<?>} */
Elasticsearch.DeleteDocumentByQueryResponse.prototype.failures;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.DeleteScriptParams = function() {};
 /** @type {string} */
Elasticsearch.DeleteScriptParams.prototype.id;
 /** @type {string} */
Elasticsearch.DeleteScriptParams.prototype.lang;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.DeleteTemplateParams = function() {};
 /** @type {string} */
Elasticsearch.DeleteTemplateParams.prototype.id;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.ExistsParams = function() {};
 /** @type {string} */
Elasticsearch.ExistsParams.prototype.parent;
 /** @type {string} */
Elasticsearch.ExistsParams.prototype.preference;
 /** @type {boolean} */
Elasticsearch.ExistsParams.prototype.realtime;
 /** @type {boolean} */
Elasticsearch.ExistsParams.prototype.refresh;
 /** @type {string} */
Elasticsearch.ExistsParams.prototype.routing;
 /** @type {string} */
Elasticsearch.ExistsParams.prototype.id;
 /** @type {string} */
Elasticsearch.ExistsParams.prototype.index;
 /** @type {string} */
Elasticsearch.ExistsParams.prototype.type;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.ExplainParams = function() {};
 /** @type {boolean} */
Elasticsearch.ExplainParams.prototype.analyzeWildcard;
 /** @type {string} */
Elasticsearch.ExplainParams.prototype.analyzer;
 /** @type {string} */
Elasticsearch.ExplainParams.prototype.defaultOperator;
 /** @type {string} */
Elasticsearch.ExplainParams.prototype.df;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.ExplainParams.prototype.storedFields;
 /** @type {boolean} */
Elasticsearch.ExplainParams.prototype.lenient;
 /** @type {boolean} */
Elasticsearch.ExplainParams.prototype.lowercaseExpandedTerms;
 /** @type {string} */
Elasticsearch.ExplainParams.prototype.parent;
 /** @type {string} */
Elasticsearch.ExplainParams.prototype.preference;
 /** @type {string} */
Elasticsearch.ExplainParams.prototype.q;
 /** @type {string} */
Elasticsearch.ExplainParams.prototype.routing;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.ExplainParams.prototype._source;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.ExplainParams.prototype._sourceExclude;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.ExplainParams.prototype._sourceInclude;
 /** @type {string} */
Elasticsearch.ExplainParams.prototype.id;
 /** @type {string} */
Elasticsearch.ExplainParams.prototype.index;
 /** @type {string} */
Elasticsearch.ExplainParams.prototype.type;
/**
 * @record
 * @struct
 */
Elasticsearch.ExplainResponse = function() {};
 /** @type {string} */
Elasticsearch.ExplainResponse.prototype._index;
 /** @type {string} */
Elasticsearch.ExplainResponse.prototype._type;
 /** @type {string} */
Elasticsearch.ExplainResponse.prototype._id;
 /** @type {boolean} */
Elasticsearch.ExplainResponse.prototype.matched;
 /** @type {!Elasticsearch.ExplainResponseDetails} */
Elasticsearch.ExplainResponse.prototype.explanation;
/**
 * @record
 * @struct
 */
Elasticsearch.ExplainResponseDetails = function() {};
 /** @type {number} */
Elasticsearch.ExplainResponseDetails.prototype.value;
 /** @type {string} */
Elasticsearch.ExplainResponseDetails.prototype.description;
 /** @type {!Array<!Elasticsearch.ExplainResponseDetails>} */
Elasticsearch.ExplainResponseDetails.prototype.details;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.FieldStatsParams = function() {};
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.FieldStatsParams.prototype.fields;
 /** @type {string} */
Elasticsearch.FieldStatsParams.prototype.level;
 /** @type {boolean} */
Elasticsearch.FieldStatsParams.prototype.ignoreUnavailable;
 /** @type {boolean} */
Elasticsearch.FieldStatsParams.prototype.allowNoIndices;
 /** @type {string} */
Elasticsearch.FieldStatsParams.prototype.expandWildcards;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.FieldStatsParams.prototype.index;
/**
 * @record
 * @struct
 */
Elasticsearch.FieldStatsResponse = function() {};
 /** @type {!Elasticsearch.ShardsResponse} */
Elasticsearch.FieldStatsResponse.prototype._shards;
 /** @type {!Object<string,!Elasticsearch.FieldStatsResponseIndex>} */
Elasticsearch.FieldStatsResponse.prototype.indices;
 /** @type {!Object<string,string>} */
Elasticsearch.FieldStatsResponse.prototype.conflicts;
/**
 * @record
 * @struct
 */
Elasticsearch.FieldStatsResponseIndex = function() {};
 /** @type {!Object<string,!Elasticsearch.FieldStatsResponseField>} */
Elasticsearch.FieldStatsResponseIndex.prototype.fields;
/**
 * @record
 * @struct
 */
Elasticsearch.FieldStatsResponseField = function() {};
 /** @type {number} */
Elasticsearch.FieldStatsResponseField.prototype.max_doc;
 /** @type {number} */
Elasticsearch.FieldStatsResponseField.prototype.doc_count;
 /** @type {number} */
Elasticsearch.FieldStatsResponseField.prototype.density;
 /** @type {number} */
Elasticsearch.FieldStatsResponseField.prototype.sum_doc_freq;
 /** @type {number} */
Elasticsearch.FieldStatsResponseField.prototype.sum_total_term_freq;
 /** @type {?} */
Elasticsearch.FieldStatsResponseField.prototype.min_value;
 /** @type {?} */
Elasticsearch.FieldStatsResponseField.prototype.max_value;
 /** @type {string} */
Elasticsearch.FieldStatsResponseField.prototype.is_searchable;
 /** @type {string} */
Elasticsearch.FieldStatsResponseField.prototype.is_aggregatable;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.GetParams = function() {};
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.GetParams.prototype.storedFields;
 /** @type {string} */
Elasticsearch.GetParams.prototype.parent;
 /** @type {string} */
Elasticsearch.GetParams.prototype.preference;
 /** @type {boolean} */
Elasticsearch.GetParams.prototype.realtime;
 /** @type {boolean} */
Elasticsearch.GetParams.prototype.refresh;
 /** @type {string} */
Elasticsearch.GetParams.prototype.routing;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.GetParams.prototype._source;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.GetParams.prototype._sourceExclude;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.GetParams.prototype._sourceInclude;
 /** @type {number} */
Elasticsearch.GetParams.prototype.version;
 /** @type {string} */
Elasticsearch.GetParams.prototype.versionType;
 /** @type {string} */
Elasticsearch.GetParams.prototype.id;
 /** @type {string} */
Elasticsearch.GetParams.prototype.index;
 /** @type {string} */
Elasticsearch.GetParams.prototype.type;
/**
 * @record
 * @struct
 */
Elasticsearch.GetResponse = function() {};
 /** @type {string} */
Elasticsearch.GetResponse.prototype._index;
 /** @type {string} */
Elasticsearch.GetResponse.prototype._type;
 /** @type {string} */
Elasticsearch.GetResponse.prototype._id;
 /** @type {number} */
Elasticsearch.GetResponse.prototype._version;
 /** @type {boolean} */
Elasticsearch.GetResponse.prototype.found;
 /** @type {T} */
Elasticsearch.GetResponse.prototype._source;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.GetScriptParams = function() {};
 /** @type {string} */
Elasticsearch.GetScriptParams.prototype.id;
 /** @type {string} */
Elasticsearch.GetScriptParams.prototype.lang;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.GetSourceParams = function() {};
 /** @type {string} */
Elasticsearch.GetSourceParams.prototype.preference;
 /** @type {boolean} */
Elasticsearch.GetSourceParams.prototype.realtime;
 /** @type {boolean} */
Elasticsearch.GetSourceParams.prototype.refresh;
 /** @type {string} */
Elasticsearch.GetSourceParams.prototype.routing;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.GetSourceParams.prototype._source;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.GetSourceParams.prototype._sourceExclude;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.GetSourceParams.prototype._sourceInclude;
 /** @type {number} */
Elasticsearch.GetSourceParams.prototype.version;
 /** @type {string} */
Elasticsearch.GetSourceParams.prototype.versionType;
 /** @type {string} */
Elasticsearch.GetSourceParams.prototype.id;
 /** @type {string} */
Elasticsearch.GetSourceParams.prototype.index;
 /** @type {string} */
Elasticsearch.GetSourceParams.prototype.type;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.GetTemplateParams = function() {};
 /** @type {string} */
Elasticsearch.GetTemplateParams.prototype.id;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndexDocumentParams = function() {};
 /** @type {string} */
Elasticsearch.IndexDocumentParams.prototype.waitForActiveShards;
 /** @type {string} */
Elasticsearch.IndexDocumentParams.prototype.opType;
 /** @type {string} */
Elasticsearch.IndexDocumentParams.prototype.parent;
 /** @type {string} */
Elasticsearch.IndexDocumentParams.prototype.refresh;
 /** @type {string} */
Elasticsearch.IndexDocumentParams.prototype.routing;
 /** @type {string} */
Elasticsearch.IndexDocumentParams.prototype.timeout;
 /** @type {(number|!Date)} */
Elasticsearch.IndexDocumentParams.prototype.timestamp;
 /** @type {string} */
Elasticsearch.IndexDocumentParams.prototype.ttl;
 /** @type {number} */
Elasticsearch.IndexDocumentParams.prototype.version;
 /** @type {string} */
Elasticsearch.IndexDocumentParams.prototype.versionType;
 /** @type {string} */
Elasticsearch.IndexDocumentParams.prototype.pipeline;
 /** @type {string} */
Elasticsearch.IndexDocumentParams.prototype.id;
 /** @type {string} */
Elasticsearch.IndexDocumentParams.prototype.index;
 /** @type {string} */
Elasticsearch.IndexDocumentParams.prototype.type;
 /** @type {T} */
Elasticsearch.IndexDocumentParams.prototype.body;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.InfoParams = function() {};
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.MGetParams = function() {};
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.MGetParams.prototype.storedFields;
 /** @type {string} */
Elasticsearch.MGetParams.prototype.preference;
 /** @type {!Boolean} */
Elasticsearch.MGetParams.prototype.realtime;
 /** @type {!Boolean} */
Elasticsearch.MGetParams.prototype.refresh;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.MGetParams.prototype.source;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.MGetParams.prototype._sourceExclude;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.MGetParams.prototype._sourceInclude;
 /** @type {string} */
Elasticsearch.MGetParams.prototype.index;
 /** @type {string} */
Elasticsearch.MGetParams.prototype.type;
/**
 * @record
 * @struct
 */
Elasticsearch.MGetResponse = function() {};
 /** @type {!Array<!Elasticsearch.GetResponse<T>>} */
Elasticsearch.MGetResponse.prototype.docs;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.MSearchParams = function() {};
 /** @type {string} */
Elasticsearch.MSearchParams.prototype.search_type;
 /** @type {number} */
Elasticsearch.MSearchParams.prototype.maxConcurrentSearches;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.MSearchParams.prototype.index;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.MSearchParams.prototype.type;
/**
 * @record
 * @struct
 */
Elasticsearch.MSearchResponse = function() {};
 /** @type {!Array<!Elasticsearch.SearchResponse<T>>} */
Elasticsearch.MSearchResponse.prototype.responses;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.MSearchTemplateParams = function() {};
 /** @type {string} */
Elasticsearch.MSearchTemplateParams.prototype.search_type;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.MSearchTemplateParams.prototype.index;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.MSearchTemplateParams.prototype.type;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.MTermVectorsParams = function() {};
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.MTermVectorsParams.prototype.ids;
 /** @type {boolean} */
Elasticsearch.MTermVectorsParams.prototype.termStatistics;
 /** @type {boolean} */
Elasticsearch.MTermVectorsParams.prototype.fieldStatistics;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.MTermVectorsParams.prototype.fields;
 /** @type {boolean} */
Elasticsearch.MTermVectorsParams.prototype.offsets;
 /** @type {boolean} */
Elasticsearch.MTermVectorsParams.prototype.positions;
 /** @type {boolean} */
Elasticsearch.MTermVectorsParams.prototype.payloads;
 /** @type {string} */
Elasticsearch.MTermVectorsParams.prototype.preference;
 /** @type {string} */
Elasticsearch.MTermVectorsParams.prototype.routing;
 /** @type {string} */
Elasticsearch.MTermVectorsParams.prototype.parent;
 /** @type {boolean} */
Elasticsearch.MTermVectorsParams.prototype.realtime;
 /** @type {number} */
Elasticsearch.MTermVectorsParams.prototype.version;
 /** @type {string} */
Elasticsearch.MTermVectorsParams.prototype.versionType;
 /** @type {string} */
Elasticsearch.MTermVectorsParams.prototype.index;
 /** @type {string} */
Elasticsearch.MTermVectorsParams.prototype.type;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.PingParams = function() {};
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.PutScriptParams = function() {};
 /** @type {string} */
Elasticsearch.PutScriptParams.prototype.id;
 /** @type {string} */
Elasticsearch.PutScriptParams.prototype.lang;
 /** @type {?} */
Elasticsearch.PutScriptParams.prototype.body;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.PutTemplateParams = function() {};
 /** @type {string} */
Elasticsearch.PutTemplateParams.prototype.id;
 /** @type {?} */
Elasticsearch.PutTemplateParams.prototype.body;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.ReindexParams = function() {};
 /** @type {boolean} */
Elasticsearch.ReindexParams.prototype.refresh;
 /** @type {string} */
Elasticsearch.ReindexParams.prototype.timeout;
 /** @type {string} */
Elasticsearch.ReindexParams.prototype.waitForActiveShards;
 /** @type {boolean} */
Elasticsearch.ReindexParams.prototype.waitForCompletion;
 /** @type {number} */
Elasticsearch.ReindexParams.prototype.requestsPerSecond;
 /** @type {{conflicts: string, source: {index: (string|!Array<string>), type: (string|!Array<string>), query: ?, sort: ?, size: number, remote: {host: string, username: string, password: string}}, dest: {index: string, version_type: string, op_type: string, routing: string, pipeline: string}, script: {inline: string, lang: string}}} */
Elasticsearch.ReindexParams.prototype.body;
/**
 * @record
 * @struct
 */
Elasticsearch.ReindexResponse = function() {};
 /** @type {number} */
Elasticsearch.ReindexResponse.prototype.took;
 /** @type {number} */
Elasticsearch.ReindexResponse.prototype.updated;
 /** @type {number} */
Elasticsearch.ReindexResponse.prototype.created;
 /** @type {number} */
Elasticsearch.ReindexResponse.prototype.batches;
 /** @type {number} */
Elasticsearch.ReindexResponse.prototype.version_conflicts;
 /** @type {{bulk: number, search: number}} */
Elasticsearch.ReindexResponse.prototype.retries;
 /** @type {number} */
Elasticsearch.ReindexResponse.prototype.throttled_millis;
 /** @type {!Array<?>} */
Elasticsearch.ReindexResponse.prototype.failures;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.ReindexRethrottleParams = function() {};
 /** @type {number} */
Elasticsearch.ReindexRethrottleParams.prototype.requestsPerSecond;
 /** @type {string} */
Elasticsearch.ReindexRethrottleParams.prototype.taskId;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.RenderSearchTemplateParams = function() {};
 /** @type {string} */
Elasticsearch.RenderSearchTemplateParams.prototype.id;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.ScrollParams = function() {};
 /** @type {string} */
Elasticsearch.ScrollParams.prototype.scroll;
 /** @type {string} */
Elasticsearch.ScrollParams.prototype.scrollId;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.SearchParams = function() {};
 /** @type {string} */
Elasticsearch.SearchParams.prototype.analyzer;
 /** @type {boolean} */
Elasticsearch.SearchParams.prototype.analyzeWildcard;
 /** @type {string} */
Elasticsearch.SearchParams.prototype.defaultOperator;
 /** @type {string} */
Elasticsearch.SearchParams.prototype.df;
 /** @type {boolean} */
Elasticsearch.SearchParams.prototype.explain;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.SearchParams.prototype.storedFields;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.SearchParams.prototype.docvalueFields;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.SearchParams.prototype.fielddataFields;
 /** @type {number} */
Elasticsearch.SearchParams.prototype.from;
 /** @type {boolean} */
Elasticsearch.SearchParams.prototype.ignoreUnavailable;
 /** @type {boolean} */
Elasticsearch.SearchParams.prototype.allowNoIndices;
 /** @type {string} */
Elasticsearch.SearchParams.prototype.expandWildcards;
 /** @type {boolean} */
Elasticsearch.SearchParams.prototype.lenient;
 /** @type {boolean} */
Elasticsearch.SearchParams.prototype.lowercaseExpandedTerms;
 /** @type {string} */
Elasticsearch.SearchParams.prototype.preference;
 /** @type {string} */
Elasticsearch.SearchParams.prototype.q;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.SearchParams.prototype.routing;
 /** @type {string} */
Elasticsearch.SearchParams.prototype.scroll;
 /** @type {string} */
Elasticsearch.SearchParams.prototype.searchType;
 /** @type {number} */
Elasticsearch.SearchParams.prototype.size;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.SearchParams.prototype.sort;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.SearchParams.prototype._source;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.SearchParams.prototype._sourceExclude;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.SearchParams.prototype._sourceInclude;
 /** @type {number} */
Elasticsearch.SearchParams.prototype.terminateAfter;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.SearchParams.prototype.stats;
 /** @type {string} */
Elasticsearch.SearchParams.prototype.suggestField;
 /** @type {string} */
Elasticsearch.SearchParams.prototype.suggestMode;
 /** @type {number} */
Elasticsearch.SearchParams.prototype.suggestSize;
 /** @type {string} */
Elasticsearch.SearchParams.prototype.suggestText;
 /** @type {string} */
Elasticsearch.SearchParams.prototype.timeout;
 /** @type {boolean} */
Elasticsearch.SearchParams.prototype.trackScores;
 /** @type {boolean} */
Elasticsearch.SearchParams.prototype.version;
 /** @type {boolean} */
Elasticsearch.SearchParams.prototype.requestCache;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.SearchParams.prototype.index;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.SearchParams.prototype.type;
/**
 * @record
 * @struct
 */
Elasticsearch.SearchResponse = function() {};
 /** @type {number} */
Elasticsearch.SearchResponse.prototype.took;
 /** @type {boolean} */
Elasticsearch.SearchResponse.prototype.timed_out;
 /** @type {string} */
Elasticsearch.SearchResponse.prototype._scroll_id;
 /** @type {!Elasticsearch.ShardsResponse} */
Elasticsearch.SearchResponse.prototype._shards;
 /** @type {{total: number, max_score: number, hits: !Array<{_index: string, _type: string, _id: string, _score: number, _source: T, _version: number, _explanation: !Elasticsearch.Explanation, fields: ?, highlight: ?, inner_hits: ?}>}} */
Elasticsearch.SearchResponse.prototype.hits;
 /** @type {?} */
Elasticsearch.SearchResponse.prototype.aggregations;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.SearchShardsParams = function() {};
 /** @type {string} */
Elasticsearch.SearchShardsParams.prototype.preference;
 /** @type {string} */
Elasticsearch.SearchShardsParams.prototype.routing;
 /** @type {boolean} */
Elasticsearch.SearchShardsParams.prototype.local;
 /** @type {boolean} */
Elasticsearch.SearchShardsParams.prototype.ignoreUnavailable;
 /** @type {boolean} */
Elasticsearch.SearchShardsParams.prototype.allowNoIndices;
 /** @type {string} */
Elasticsearch.SearchShardsParams.prototype.expandWildcards;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.SearchShardsParams.prototype.index;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.SearchShardsParams.prototype.type;
/**
 * @record
 * @struct
 */
Elasticsearch.SearchShardsResponse = function() {};
 /** @type {?} */
Elasticsearch.SearchShardsResponse.prototype.nodes;
 /** @type {!Array<!Array<!Elasticsearch.SearchShardsResponseShard>>} */
Elasticsearch.SearchShardsResponse.prototype.shards;
/**
 * @record
 * @struct
 */
Elasticsearch.SearchShardsResponseShard = function() {};
 /** @type {string} */
Elasticsearch.SearchShardsResponseShard.prototype.index;
 /** @type {string} */
Elasticsearch.SearchShardsResponseShard.prototype.node;
 /** @type {boolean} */
Elasticsearch.SearchShardsResponseShard.prototype.primary;
 /** @type {number} */
Elasticsearch.SearchShardsResponseShard.prototype.share;
 /** @type {string} */
Elasticsearch.SearchShardsResponseShard.prototype.state;
 /** @type {{id: string}} */
Elasticsearch.SearchShardsResponseShard.prototype.allocation_id;
 /** @type {?} */
Elasticsearch.SearchShardsResponseShard.prototype.relocating_node;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.SearchTemplateParams = function() {};
 /** @type {boolean} */
Elasticsearch.SearchTemplateParams.prototype.ignoreUnavailable;
 /** @type {boolean} */
Elasticsearch.SearchTemplateParams.prototype.allowNoIndices;
 /** @type {string} */
Elasticsearch.SearchTemplateParams.prototype.expandWildcards;
 /** @type {string} */
Elasticsearch.SearchTemplateParams.prototype.preference;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.SearchTemplateParams.prototype.routing;
 /** @type {string} */
Elasticsearch.SearchTemplateParams.prototype.scroll;
 /** @type {string} */
Elasticsearch.SearchTemplateParams.prototype.searchType;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.SearchTemplateParams.prototype.index;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.SearchTemplateParams.prototype.type;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.SuggestParams = function() {};
 /** @type {boolean} */
Elasticsearch.SuggestParams.prototype.ignoreUnavailable;
 /** @type {boolean} */
Elasticsearch.SuggestParams.prototype.allowNoIndices;
 /** @type {string} */
Elasticsearch.SuggestParams.prototype.expandWildcards;
 /** @type {string} */
Elasticsearch.SuggestParams.prototype.preference;
 /** @type {string} */
Elasticsearch.SuggestParams.prototype.routing;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.SuggestParams.prototype.index;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.TermvectorsParams = function() {};
 /** @type {boolean} */
Elasticsearch.TermvectorsParams.prototype.termStatistics;
 /** @type {boolean} */
Elasticsearch.TermvectorsParams.prototype.fieldStatistics;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.TermvectorsParams.prototype.fields;
 /** @type {boolean} */
Elasticsearch.TermvectorsParams.prototype.offsets;
 /** @type {boolean} */
Elasticsearch.TermvectorsParams.prototype.positions;
 /** @type {boolean} */
Elasticsearch.TermvectorsParams.prototype.payloads;
 /** @type {string} */
Elasticsearch.TermvectorsParams.prototype.preference;
 /** @type {string} */
Elasticsearch.TermvectorsParams.prototype.routing;
 /** @type {string} */
Elasticsearch.TermvectorsParams.prototype.parent;
 /** @type {boolean} */
Elasticsearch.TermvectorsParams.prototype.realtime;
 /** @type {number} */
Elasticsearch.TermvectorsParams.prototype.version;
 /** @type {string} */
Elasticsearch.TermvectorsParams.prototype.versionType;
 /** @type {string} */
Elasticsearch.TermvectorsParams.prototype.index;
 /** @type {string} */
Elasticsearch.TermvectorsParams.prototype.type;
 /** @type {string} */
Elasticsearch.TermvectorsParams.prototype.id;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.UpdateDocumentParams = function() {};
 /** @type {string} */
Elasticsearch.UpdateDocumentParams.prototype.waitForActiveShards;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.UpdateDocumentParams.prototype.fields;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.UpdateDocumentParams.prototype._source;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.UpdateDocumentParams.prototype._sourceExclude;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.UpdateDocumentParams.prototype._sourceInclude;
 /** @type {string} */
Elasticsearch.UpdateDocumentParams.prototype.lang;
 /** @type {string} */
Elasticsearch.UpdateDocumentParams.prototype.parent;
 /** @type {(boolean|string)} */
Elasticsearch.UpdateDocumentParams.prototype.refresh;
 /** @type {number} */
Elasticsearch.UpdateDocumentParams.prototype.retryOnConflict;
 /** @type {string} */
Elasticsearch.UpdateDocumentParams.prototype.routing;
 /** @type {string} */
Elasticsearch.UpdateDocumentParams.prototype.timeout;
 /** @type {(number|!Date)} */
Elasticsearch.UpdateDocumentParams.prototype.timestamp;
 /** @type {string} */
Elasticsearch.UpdateDocumentParams.prototype.ttl;
 /** @type {number} */
Elasticsearch.UpdateDocumentParams.prototype.version;
 /** @type {string} */
Elasticsearch.UpdateDocumentParams.prototype.versionType;
 /** @type {string} */
Elasticsearch.UpdateDocumentParams.prototype.id;
 /** @type {string} */
Elasticsearch.UpdateDocumentParams.prototype.index;
 /** @type {string} */
Elasticsearch.UpdateDocumentParams.prototype.type;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.UpdateDocumentByQueryParams = function() {};
 /** @type {string} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.analyzer;
 /** @type {boolean} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.analyzeWildcard;
 /** @type {string} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.defaultOperator;
 /** @type {string} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.df;
 /** @type {boolean} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.explain;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.storedFields;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.docvalueFields;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.fielddataFields;
 /** @type {number} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.from;
 /** @type {boolean} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.ignoreUnavailable;
 /** @type {boolean} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.allowNoIndices;
 /** @type {string} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.conflicts;
 /** @type {string} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.expandWildcards;
 /** @type {boolean} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.lenient;
 /** @type {boolean} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.lowercaseExpandedTerms;
 /** @type {string} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.pipeline;
 /** @type {string} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.preference;
 /** @type {string} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.q;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.routing;
 /** @type {string} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.scroll;
 /** @type {string} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.searchType;
 /** @type {string} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.searchTimeout;
 /** @type {number} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.size;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.sort;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.UpdateDocumentByQueryParams.prototype._source;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.UpdateDocumentByQueryParams.prototype._sourceExclude;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.UpdateDocumentByQueryParams.prototype._sourceInclude;
 /** @type {number} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.terminateAfter;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.stats;
 /** @type {string} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.suggestField;
 /** @type {string} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.suggestMode;
 /** @type {number} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.suggestSize;
 /** @type {string} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.suggestText;
 /** @type {string} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.timeout;
 /** @type {boolean} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.trackScores;
 /** @type {boolean} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.version;
 /** @type {boolean} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.versionType;
 /** @type {boolean} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.requestCache;
 /** @type {boolean} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.refresh;
 /** @type {string} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.waitForActiveShards;
 /** @type {number} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.scrollSize;
 /** @type {boolean} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.waitForCompletion;
 /** @type {number} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.requestsPerSecond;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.index;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.UpdateDocumentByQueryParams.prototype.type;
/**
 * @record
 * @struct
 */
Elasticsearch.Cat = function() {};

/**
 * @param {!Elasticsearch.CatAliasesParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Cat.prototype.aliases = function(params, callback) {};

/**
 * @param {!Elasticsearch.CatAllocationParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Cat.prototype.allocation = function(params, callback) {};

/**
 * @param {!Elasticsearch.CatCountParams|!Elasticsearch.CatAllocationParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Cat.prototype.count = function(params, callback) {};

/**
 * @param {!Elasticsearch.CatFielddataParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Cat.prototype.fielddata = function(params, callback) {};

/**
 * @param {!Elasticsearch.CatHealthParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Cat.prototype.health = function(params, callback) {};

/**
 * @param {!Elasticsearch.CatHelpParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Cat.prototype.help = function(params, callback) {};

/**
 * @param {!Elasticsearch.CatIndicesParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Cat.prototype.indices = function(params, callback) {};

/**
 * @param {!Elasticsearch.CatCommonParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Cat.prototype.master = function(params, callback) {};

/**
 * @param {!Elasticsearch.CatCommonParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Cat.prototype.nodeattrs = function(params, callback) {};

/**
 * @param {!Elasticsearch.CatCommonParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Cat.prototype.nodes = function(params, callback) {};

/**
 * @param {!Elasticsearch.CatCommonParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Cat.prototype.pendingTasks = function(params, callback) {};

/**
 * @param {!Elasticsearch.CatCommonParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Cat.prototype.plugins = function(params, callback) {};

/**
 * @param {!Elasticsearch.CatRecoveryParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Cat.prototype.recovery = function(params, callback) {};

/**
 * @param {!Elasticsearch.CatCommonParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Cat.prototype.repositories = function(params, callback) {};

/**
 * @param {!Elasticsearch.CatSegmentsParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Cat.prototype.segments = function(params, callback) {};

/**
 * @param {!Elasticsearch.CatShardsParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Cat.prototype.shards = function(params, callback) {};

/**
 * @param {!Elasticsearch.CatSnapshotsParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Cat.prototype.snapshots = function(params, callback) {};

/**
 * @param {!Elasticsearch.CatTasksParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Cat.prototype.tasks = function(params, callback) {};

/**
 * @param {!Elasticsearch.CatThreadPoolParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Cat.prototype.threadPool = function(params, callback) {};

/** @typedef {string} */
Elasticsearch.CatBytes;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.CatCommonParams = function() {};
 /** @type {string} */
Elasticsearch.CatCommonParams.prototype.format;
 /** @type {boolean} */
Elasticsearch.CatCommonParams.prototype.local;
 /** @type {string} */
Elasticsearch.CatCommonParams.prototype.masterTimeout;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.CatCommonParams.prototype.h;
 /** @type {boolean} */
Elasticsearch.CatCommonParams.prototype.help;
 /** @type {boolean} */
Elasticsearch.CatCommonParams.prototype.v;
/**
 * @extends {Elasticsearch.CatCommonParams}
 * @record
 * @struct
 */
Elasticsearch.CatAliasesParams = function() {};
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.CatAliasesParams.prototype.name;
/**
 * @extends {Elasticsearch.CatCommonParams}
 * @record
 * @struct
 */
Elasticsearch.CatAllocationParams = function() {};
 /** @type {string} */
Elasticsearch.CatAllocationParams.prototype.bytes;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.CatAllocationParams.prototype.nodeId;
/**
 * @extends {Elasticsearch.CatCommonParams}
 * @record
 * @struct
 */
Elasticsearch.CatCountParams = function() {};
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.CatCountParams.prototype.index;
/**
 * @extends {Elasticsearch.CatCommonParams}
 * @record
 * @struct
 */
Elasticsearch.CatFielddataParams = function() {};
 /** @type {string} */
Elasticsearch.CatFielddataParams.prototype.bytes;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.CatFielddataParams.prototype.fields;
/**
 * @extends {Elasticsearch.CatCommonParams}
 * @record
 * @struct
 */
Elasticsearch.CatHealthParams = function() {};
 /** @type {boolean} */
Elasticsearch.CatHealthParams.prototype.ts;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.CatHelpParams = function() {};
 /** @type {boolean} */
Elasticsearch.CatHelpParams.prototype.help;
/**
 * @extends {Elasticsearch.CatCommonParams}
 * @record
 * @struct
 */
Elasticsearch.CatIndicesParams = function() {};
 /** @type {string} */
Elasticsearch.CatIndicesParams.prototype.bytes;
 /** @type {string} */
Elasticsearch.CatIndicesParams.prototype.health;
 /** @type {boolean} */
Elasticsearch.CatIndicesParams.prototype.pri;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.CatIndicesParams.prototype.index;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.CatRecoveryParams = function() {};
 /** @type {string} */
Elasticsearch.CatRecoveryParams.prototype.format;
 /** @type {string} */
Elasticsearch.CatRecoveryParams.prototype.bytes;
 /** @type {string} */
Elasticsearch.CatRecoveryParams.prototype.masterTimeout;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.CatRecoveryParams.prototype.h;
 /** @type {boolean} */
Elasticsearch.CatRecoveryParams.prototype.help;
 /** @type {boolean} */
Elasticsearch.CatRecoveryParams.prototype.v;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.CatSegmentsParams = function() {};
 /** @type {string} */
Elasticsearch.CatSegmentsParams.prototype.format;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.CatSegmentsParams.prototype.h;
 /** @type {boolean} */
Elasticsearch.CatSegmentsParams.prototype.help;
 /** @type {boolean} */
Elasticsearch.CatSegmentsParams.prototype.v;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.CatSegmentsParams.prototype.index;
/**
 * @extends {Elasticsearch.CatCommonParams}
 * @record
 * @struct
 */
Elasticsearch.CatShardsParams = function() {};
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.CatShardsParams.prototype.index;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.CatSnapshotsParams = function() {};
 /** @type {string} */
Elasticsearch.CatSnapshotsParams.prototype.format;
 /** @type {boolean} */
Elasticsearch.CatSnapshotsParams.prototype.ignoreUnavailable;
 /** @type {string} */
Elasticsearch.CatSnapshotsParams.prototype.masterTimeout;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.CatSnapshotsParams.prototype.h;
 /** @type {boolean} */
Elasticsearch.CatSnapshotsParams.prototype.help;
 /** @type {boolean} */
Elasticsearch.CatSnapshotsParams.prototype.v;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.CatSnapshotsParams.prototype.repository;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.CatTasksParams = function() {};
 /** @type {string} */
Elasticsearch.CatTasksParams.prototype.format;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.CatTasksParams.prototype.nodeId;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.CatTasksParams.prototype.actions;
 /** @type {boolean} */
Elasticsearch.CatTasksParams.prototype.detailed;
 /** @type {string} */
Elasticsearch.CatTasksParams.prototype.parentNode;
 /** @type {number} */
Elasticsearch.CatTasksParams.prototype.parentTask;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.CatTasksParams.prototype.h;
 /** @type {boolean} */
Elasticsearch.CatTasksParams.prototype.help;
 /** @type {boolean} */
Elasticsearch.CatTasksParams.prototype.v;
/**
 * @extends {Elasticsearch.CatCommonParams}
 * @record
 * @struct
 */
Elasticsearch.CatThreadPoolParams = function() {};
 /** @type {string} */
Elasticsearch.CatThreadPoolParams.prototype.size;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.CatThreadPoolParams.prototype.threadPoolPatterns;
/**
 * @record
 * @struct
 */
Elasticsearch.Cluster = function() {};

/**
 * @param {!Elasticsearch.ClusterAllocationExplainParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Cluster.prototype.allocationExplain = function(params, callback) {};

/**
 * @param {!Elasticsearch.ClusterGetSettingsParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Cluster.prototype.getSettings = function(params, callback) {};

/**
 * @param {!Elasticsearch.ClusterHealthParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Cluster.prototype.health = function(params, callback) {};

/**
 * @param {!Elasticsearch.ClusterPendingTasksParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Cluster.prototype.pendingTasks = function(params, callback) {};

/**
 * @param {!Elasticsearch.ClusterPutSettingsParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Cluster.prototype.putSettings = function(params, callback) {};

/**
 * @param {!Elasticsearch.ClusterRerouteParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Cluster.prototype.reroute = function(params, callback) {};

/**
 * @param {!Elasticsearch.ClusterStateParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Cluster.prototype.state = function(params, callback) {};

/**
 * @param {!Elasticsearch.ClusterStatsParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Cluster.prototype.stats = function(params, callback) {};
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.ClusterAllocationExplainParams = function() {};
 /** @type {boolean} */
Elasticsearch.ClusterAllocationExplainParams.prototype.includeYesDecisions;
 /** @type {boolean} */
Elasticsearch.ClusterAllocationExplainParams.prototype.includeDiskInfo;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.ClusterGetSettingsParams = function() {};
 /** @type {boolean} */
Elasticsearch.ClusterGetSettingsParams.prototype.flatSettings;
 /** @type {string} */
Elasticsearch.ClusterGetSettingsParams.prototype.masterTimeout;
 /** @type {string} */
Elasticsearch.ClusterGetSettingsParams.prototype.timeout;
 /** @type {boolean} */
Elasticsearch.ClusterGetSettingsParams.prototype.includeDefaults;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.ClusterHealthParams = function() {};
 /** @type {string} */
Elasticsearch.ClusterHealthParams.prototype.level;
 /** @type {boolean} */
Elasticsearch.ClusterHealthParams.prototype.local;
 /** @type {string} */
Elasticsearch.ClusterHealthParams.prototype.masterTimeout;
 /** @type {string} */
Elasticsearch.ClusterHealthParams.prototype.waitForActiveShards;
 /** @type {string} */
Elasticsearch.ClusterHealthParams.prototype.waitForNodes;
 /** @type {string} */
Elasticsearch.ClusterHealthParams.prototype.waitForEvents;
 /** @type {boolean} */
Elasticsearch.ClusterHealthParams.prototype.waitForRelocatingShards;
 /** @type {string} */
Elasticsearch.ClusterHealthParams.prototype.waitForStatus;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.ClusterHealthParams.prototype.index;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.ClusterPendingTasksParams = function() {};
 /** @type {boolean} */
Elasticsearch.ClusterPendingTasksParams.prototype.local;
 /** @type {string} */
Elasticsearch.ClusterPendingTasksParams.prototype.masterTimeout;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.ClusterPutSettingsParams = function() {};
 /** @type {boolean} */
Elasticsearch.ClusterPutSettingsParams.prototype.flatSettings;
 /** @type {string} */
Elasticsearch.ClusterPutSettingsParams.prototype.masterTimeout;
 /** @type {string} */
Elasticsearch.ClusterPutSettingsParams.prototype.timeout;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.ClusterRerouteParams = function() {};
 /** @type {boolean} */
Elasticsearch.ClusterRerouteParams.prototype.dryRun;
 /** @type {boolean} */
Elasticsearch.ClusterRerouteParams.prototype.explain;
 /** @type {boolean} */
Elasticsearch.ClusterRerouteParams.prototype.retryFailed;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.ClusterRerouteParams.prototype.metric;
 /** @type {string} */
Elasticsearch.ClusterRerouteParams.prototype.masterTimeout;
 /** @type {string} */
Elasticsearch.ClusterRerouteParams.prototype.timeout;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.ClusterStateParams = function() {};
 /** @type {boolean} */
Elasticsearch.ClusterStateParams.prototype.local;
 /** @type {string} */
Elasticsearch.ClusterStateParams.prototype.masterTimeout;
 /** @type {boolean} */
Elasticsearch.ClusterStateParams.prototype.flatSettings;
 /** @type {boolean} */
Elasticsearch.ClusterStateParams.prototype.ignoreUnavailable;
 /** @type {boolean} */
Elasticsearch.ClusterStateParams.prototype.allowNoIndices;
 /** @type {string} */
Elasticsearch.ClusterStateParams.prototype.expandWildcards;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.ClusterStateParams.prototype.index;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.ClusterStateParams.prototype.metric;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.ClusterStatsParams = function() {};
 /** @type {boolean} */
Elasticsearch.ClusterStatsParams.prototype.flatSettings;
 /** @type {boolean} */
Elasticsearch.ClusterStatsParams.prototype.human;
 /** @type {string} */
Elasticsearch.ClusterStatsParams.prototype.timeout;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.ClusterStatsParams.prototype.nodeId;
/**
 * @constructor
 * @struct
 */
Elasticsearch.Indices = function() {};

/**
 * @param {!Elasticsearch.IndicesAnalyzeParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.analyze = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesClearCacheParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.clearCache = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesCloseParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.close = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesCreateParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.create = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesDeleteParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.delete = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesDeleteAliasParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.deleteAlias = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesDeleteTemplateParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.deleteTemplate = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesExistsParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.exists = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesExistsAliasParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.existsAlias = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesExistsTemplateParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.existsTemplate = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesExistsTypeParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.existsType = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesFlushParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.flush = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesFlushSyncedParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.flushSynced = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesForcemergeParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.forcemerge = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesGetParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.get = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesGetAliasParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.getAlias = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesGetFieldMappingParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.getFieldMapping = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesGetMappingParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.getMapping = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesGetSettingsParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.getSettings = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesGetTemplateParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.getTemplate = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesGetUpgradeParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.getUpgrade = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesOpenParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.open = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesPutAliasParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.putAlias = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesPutMappingParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.putMapping = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesPutSettingsParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.putSettings = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesPutTemplateParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.putTemplate = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesRecoveryParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.recovery = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesRefreshParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.refresh = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesRolloverParams} params
 * @param {function(?, !Elasticsearch.IndicesRolloverResponse): void=} callback
 * @return {void|!Promise<!Elasticsearch.IndicesRolloverResponse>}
 */
Elasticsearch.Indices.prototype.rollover = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesSegmentsParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.segments = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesShardStoresParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.shardStores = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesShrinkParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.shrink = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesStatsParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.stats = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesUpdateAliasesParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.updateAliases = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesUpgradeParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.upgrade = function(params, callback) {};

/**
 * @param {!Elasticsearch.IndicesValidateQueryParams} params
 * @param {function(?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Indices.prototype.validateQuery = function(params, callback) {};
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesAnalyzeParams = function() {};
 /** @type {string} */
Elasticsearch.IndicesAnalyzeParams.prototype.analyzer;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesAnalyzeParams.prototype.charFilter;
 /** @type {string} */
Elasticsearch.IndicesAnalyzeParams.prototype.field;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesAnalyzeParams.prototype.filter;
 /** @type {string} */
Elasticsearch.IndicesAnalyzeParams.prototype.index;
 /** @type {boolean} */
Elasticsearch.IndicesAnalyzeParams.prototype.perferLocal;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesAnalyzeParams.prototype.text;
 /** @type {string} */
Elasticsearch.IndicesAnalyzeParams.prototype.tokenizer;
 /** @type {boolean} */
Elasticsearch.IndicesAnalyzeParams.prototype.explain;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesAnalyzeParams.prototype.attributes;
 /** @type {string} */
Elasticsearch.IndicesAnalyzeParams.prototype.format;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesClearCacheParams = function() {};
 /** @type {boolean} */
Elasticsearch.IndicesClearCacheParams.prototype.fieldData;
 /** @type {boolean} */
Elasticsearch.IndicesClearCacheParams.prototype.fielddata;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesClearCacheParams.prototype.fields;
 /** @type {boolean} */
Elasticsearch.IndicesClearCacheParams.prototype.query;
 /** @type {boolean} */
Elasticsearch.IndicesClearCacheParams.prototype.ignoreUnavailable;
 /** @type {boolean} */
Elasticsearch.IndicesClearCacheParams.prototype.allowNoIndices;
 /** @type {string} */
Elasticsearch.IndicesClearCacheParams.prototype.expandWildcards;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesClearCacheParams.prototype.index;
 /** @type {boolean} */
Elasticsearch.IndicesClearCacheParams.prototype.recycler;
 /** @type {boolean} */
Elasticsearch.IndicesClearCacheParams.prototype.request;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesCloseParams = function() {};
 /** @type {string} */
Elasticsearch.IndicesCloseParams.prototype.timeout;
 /** @type {string} */
Elasticsearch.IndicesCloseParams.prototype.masterTimeout;
 /** @type {boolean} */
Elasticsearch.IndicesCloseParams.prototype.ignoreUnavailable;
 /** @type {boolean} */
Elasticsearch.IndicesCloseParams.prototype.allowNoIndices;
 /** @type {string} */
Elasticsearch.IndicesCloseParams.prototype.expandWildcards;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesCloseParams.prototype.index;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesCreateParams = function() {};
 /** @type {string} */
Elasticsearch.IndicesCreateParams.prototype.waitForActiveShards;
 /** @type {string} */
Elasticsearch.IndicesCreateParams.prototype.timeout;
 /** @type {string} */
Elasticsearch.IndicesCreateParams.prototype.masterTimeout;
 /** @type {boolean} */
Elasticsearch.IndicesCreateParams.prototype.updateAllTypes;
 /** @type {string} */
Elasticsearch.IndicesCreateParams.prototype.index;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesDeleteParams = function() {};
 /** @type {string} */
Elasticsearch.IndicesDeleteParams.prototype.timeout;
 /** @type {string} */
Elasticsearch.IndicesDeleteParams.prototype.masterTimeout;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesDeleteParams.prototype.index;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesDeleteAliasParams = function() {};
 /** @type {string} */
Elasticsearch.IndicesDeleteAliasParams.prototype.timeout;
 /** @type {string} */
Elasticsearch.IndicesDeleteAliasParams.prototype.masterTimeout;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesDeleteAliasParams.prototype.index;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesDeleteAliasParams.prototype.name;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesDeleteTemplateParams = function() {};
 /** @type {string} */
Elasticsearch.IndicesDeleteTemplateParams.prototype.timeout;
 /** @type {string} */
Elasticsearch.IndicesDeleteTemplateParams.prototype.masterTimeout;
 /** @type {string} */
Elasticsearch.IndicesDeleteTemplateParams.prototype.name;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesExistsParams = function() {};
 /** @type {boolean} */
Elasticsearch.IndicesExistsParams.prototype.ignoreUnavailable;
 /** @type {boolean} */
Elasticsearch.IndicesExistsParams.prototype.allowNoIndices;
 /** @type {string} */
Elasticsearch.IndicesExistsParams.prototype.expandWildcards;
 /** @type {boolean} */
Elasticsearch.IndicesExistsParams.prototype.local;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesExistsParams.prototype.index;
/**
 * @extends {Elasticsearch.IndicesExistsParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesExistsAliasParams = function() {};
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesExistsAliasParams.prototype.name;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesExistsTemplateParams = function() {};
 /** @type {string} */
Elasticsearch.IndicesExistsTemplateParams.prototype.timeout;
 /** @type {string} */
Elasticsearch.IndicesExistsTemplateParams.prototype.masterTimeout;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesExistsTemplateParams.prototype.name;
/**
 * @extends {Elasticsearch.IndicesExistsParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesExistsTypeParams = function() {};
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesExistsTypeParams.prototype.type;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesFlushParams = function() {};
 /** @type {boolean} */
Elasticsearch.IndicesFlushParams.prototype.force;
 /** @type {boolean} */
Elasticsearch.IndicesFlushParams.prototype.waitIfOngoing;
 /** @type {boolean} */
Elasticsearch.IndicesFlushParams.prototype.ignoreUnavailable;
 /** @type {boolean} */
Elasticsearch.IndicesFlushParams.prototype.allowNoIndices;
 /** @type {string} */
Elasticsearch.IndicesFlushParams.prototype.expandWildcards;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesFlushParams.prototype.index;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesFlushSyncedParams = function() {};
 /** @type {boolean} */
Elasticsearch.IndicesFlushSyncedParams.prototype.ignoreUnavailable;
 /** @type {boolean} */
Elasticsearch.IndicesFlushSyncedParams.prototype.allowNoIndices;
 /** @type {string} */
Elasticsearch.IndicesFlushSyncedParams.prototype.expandWildcards;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesFlushSyncedParams.prototype.index;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesForcemergeParams = function() {};
 /** @type {boolean} */
Elasticsearch.IndicesForcemergeParams.prototype.flush;
 /** @type {boolean} */
Elasticsearch.IndicesForcemergeParams.prototype.ignoreUnavailable;
 /** @type {boolean} */
Elasticsearch.IndicesForcemergeParams.prototype.allowNoIndices;
 /** @type {string} */
Elasticsearch.IndicesForcemergeParams.prototype.expandWildcards;
 /** @type {number} */
Elasticsearch.IndicesForcemergeParams.prototype.maxNumSegments;
 /** @type {boolean} */
Elasticsearch.IndicesForcemergeParams.prototype.onlyExpungeDeletes;
 /** @type {?} */
Elasticsearch.IndicesForcemergeParams.prototype.operationThreading;
 /** @type {boolean} */
Elasticsearch.IndicesForcemergeParams.prototype.waitForMerge;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesForcemergeParams.prototype.index;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesGetParams = function() {};
 /** @type {boolean} */
Elasticsearch.IndicesGetParams.prototype.local;
 /** @type {boolean} */
Elasticsearch.IndicesGetParams.prototype.ignoreUnavailable;
 /** @type {boolean} */
Elasticsearch.IndicesGetParams.prototype.allowNoIndices;
 /** @type {string} */
Elasticsearch.IndicesGetParams.prototype.expandWildcards;
 /** @type {boolean} */
Elasticsearch.IndicesGetParams.prototype.flatSettings;
 /** @type {boolean} */
Elasticsearch.IndicesGetParams.prototype.human;
 /** @type {boolean} */
Elasticsearch.IndicesGetParams.prototype.includeDefaults;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesGetParams.prototype.index;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesGetParams.prototype.feature;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesGetAliasParams = function() {};
 /** @type {boolean} */
Elasticsearch.IndicesGetAliasParams.prototype.ignoreUnavailable;
 /** @type {boolean} */
Elasticsearch.IndicesGetAliasParams.prototype.allowNoIndices;
 /** @type {string} */
Elasticsearch.IndicesGetAliasParams.prototype.expandWildcards;
 /** @type {boolean} */
Elasticsearch.IndicesGetAliasParams.prototype.local;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesGetAliasParams.prototype.index;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesGetAliasParams.prototype.name;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesGetFieldMappingParams = function() {};
 /** @type {boolean} */
Elasticsearch.IndicesGetFieldMappingParams.prototype.includeDefaults;
 /** @type {boolean} */
Elasticsearch.IndicesGetFieldMappingParams.prototype.ignoreUnavailable;
 /** @type {boolean} */
Elasticsearch.IndicesGetFieldMappingParams.prototype.allowNoIndices;
 /** @type {string} */
Elasticsearch.IndicesGetFieldMappingParams.prototype.expandWildcards;
 /** @type {boolean} */
Elasticsearch.IndicesGetFieldMappingParams.prototype.local;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesGetFieldMappingParams.prototype.index;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesGetFieldMappingParams.prototype.type;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesGetFieldMappingParams.prototype.fields;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesGetMappingParams = function() {};
 /** @type {boolean} */
Elasticsearch.IndicesGetMappingParams.prototype.ignoreUnavailable;
 /** @type {boolean} */
Elasticsearch.IndicesGetMappingParams.prototype.allowNoIndices;
 /** @type {string} */
Elasticsearch.IndicesGetMappingParams.prototype.expandWildcards;
 /** @type {boolean} */
Elasticsearch.IndicesGetMappingParams.prototype.local;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesGetMappingParams.prototype.index;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesGetMappingParams.prototype.type;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesGetSettingsParams = function() {};
 /** @type {boolean} */
Elasticsearch.IndicesGetSettingsParams.prototype.ignoreUnavailable;
 /** @type {boolean} */
Elasticsearch.IndicesGetSettingsParams.prototype.allowNoIndices;
 /** @type {string} */
Elasticsearch.IndicesGetSettingsParams.prototype.expandWildcards;
 /** @type {boolean} */
Elasticsearch.IndicesGetSettingsParams.prototype.flatSettings;
 /** @type {boolean} */
Elasticsearch.IndicesGetSettingsParams.prototype.local;
 /** @type {boolean} */
Elasticsearch.IndicesGetSettingsParams.prototype.human;
 /** @type {boolean} */
Elasticsearch.IndicesGetSettingsParams.prototype.includeDefaults;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesGetSettingsParams.prototype.index;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesGetSettingsParams.prototype.name;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesGetTemplateParams = function() {};
 /** @type {boolean} */
Elasticsearch.IndicesGetTemplateParams.prototype.flatSettings;
 /** @type {string} */
Elasticsearch.IndicesGetTemplateParams.prototype.masterTimeout;
 /** @type {boolean} */
Elasticsearch.IndicesGetTemplateParams.prototype.local;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesGetTemplateParams.prototype.name;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesGetUpgradeParams = function() {};
 /** @type {boolean} */
Elasticsearch.IndicesGetUpgradeParams.prototype.ignoreUnavailable;
 /** @type {boolean} */
Elasticsearch.IndicesGetUpgradeParams.prototype.allowNoIndices;
 /** @type {string} */
Elasticsearch.IndicesGetUpgradeParams.prototype.expandWildcards;
 /** @type {boolean} */
Elasticsearch.IndicesGetUpgradeParams.prototype.human;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesGetUpgradeParams.prototype.index;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesOpenParams = function() {};
 /** @type {string} */
Elasticsearch.IndicesOpenParams.prototype.timeout;
 /** @type {string} */
Elasticsearch.IndicesOpenParams.prototype.masterTimeout;
 /** @type {boolean} */
Elasticsearch.IndicesOpenParams.prototype.ignoreUnavailable;
 /** @type {boolean} */
Elasticsearch.IndicesOpenParams.prototype.allowNoIndices;
 /** @type {string} */
Elasticsearch.IndicesOpenParams.prototype.expandWildcards;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesOpenParams.prototype.index;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesPutAliasParams = function() {};
 /** @type {string} */
Elasticsearch.IndicesPutAliasParams.prototype.timeout;
 /** @type {string} */
Elasticsearch.IndicesPutAliasParams.prototype.masterTimeout;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesPutAliasParams.prototype.index;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesPutAliasParams.prototype.name;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesPutMappingParams = function() {};
 /** @type {string} */
Elasticsearch.IndicesPutMappingParams.prototype.timeout;
 /** @type {string} */
Elasticsearch.IndicesPutMappingParams.prototype.masterTimeout;
 /** @type {boolean} */
Elasticsearch.IndicesPutMappingParams.prototype.ignoreUnavailable;
 /** @type {boolean} */
Elasticsearch.IndicesPutMappingParams.prototype.allowNoIndices;
 /** @type {string} */
Elasticsearch.IndicesPutMappingParams.prototype.expandWildcards;
 /** @type {boolean} */
Elasticsearch.IndicesPutMappingParams.prototype.updateAllTypes;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesPutMappingParams.prototype.index;
 /** @type {string} */
Elasticsearch.IndicesPutMappingParams.prototype.type;
 /** @type {?} */
Elasticsearch.IndicesPutMappingParams.prototype.body;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesPutSettingsParams = function() {};
 /** @type {string} */
Elasticsearch.IndicesPutSettingsParams.prototype.masterTimeout;
 /** @type {boolean} */
Elasticsearch.IndicesPutSettingsParams.prototype.preserveExisting;
 /** @type {boolean} */
Elasticsearch.IndicesPutSettingsParams.prototype.ignoreUnavailable;
 /** @type {boolean} */
Elasticsearch.IndicesPutSettingsParams.prototype.allowNoIndices;
 /** @type {string} */
Elasticsearch.IndicesPutSettingsParams.prototype.expandWildcards;
 /** @type {boolean} */
Elasticsearch.IndicesPutSettingsParams.prototype.flatSettings;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesPutSettingsParams.prototype.index;
 /** @type {?} */
Elasticsearch.IndicesPutSettingsParams.prototype.body;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesPutTemplateParams = function() {};
 /** @type {number} */
Elasticsearch.IndicesPutTemplateParams.prototype.order;
 /** @type {boolean} */
Elasticsearch.IndicesPutTemplateParams.prototype.create;
 /** @type {string} */
Elasticsearch.IndicesPutTemplateParams.prototype.timeout;
 /** @type {string} */
Elasticsearch.IndicesPutTemplateParams.prototype.masterTimeout;
 /** @type {boolean} */
Elasticsearch.IndicesPutTemplateParams.prototype.flatSettings;
 /** @type {string} */
Elasticsearch.IndicesPutTemplateParams.prototype.name;
 /** @type {?} */
Elasticsearch.IndicesPutTemplateParams.prototype.body;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesRecoveryParams = function() {};
 /** @type {boolean} */
Elasticsearch.IndicesRecoveryParams.prototype.detailed;
 /** @type {boolean} */
Elasticsearch.IndicesRecoveryParams.prototype.activeOnly;
 /** @type {boolean} */
Elasticsearch.IndicesRecoveryParams.prototype.human;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesRecoveryParams.prototype.index;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesRefreshParams = function() {};
 /** @type {boolean} */
Elasticsearch.IndicesRefreshParams.prototype.ignoreUnavailable;
 /** @type {boolean} */
Elasticsearch.IndicesRefreshParams.prototype.allowNoIndices;
 /** @type {string} */
Elasticsearch.IndicesRefreshParams.prototype.expandWildcards;
 /** @type {boolean} */
Elasticsearch.IndicesRefreshParams.prototype.force;
 /** @type {?} */
Elasticsearch.IndicesRefreshParams.prototype.operationThreading;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesRefreshParams.prototype.index;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesRolloverParams = function() {};
 /** @type {string} */
Elasticsearch.IndicesRolloverParams.prototype.timeout;
 /** @type {string} */
Elasticsearch.IndicesRolloverParams.prototype.masterTimeout;
 /** @type {(string|number)} */
Elasticsearch.IndicesRolloverParams.prototype.waitForActiveShards;
 /** @type {string} */
Elasticsearch.IndicesRolloverParams.prototype.alias;
 /** @type {string} */
Elasticsearch.IndicesRolloverParams.prototype.newIndex;
/**
 * @record
 * @struct
 */
Elasticsearch.IndicesRolloverResponse = function() {};
 /** @type {boolean} */
Elasticsearch.IndicesRolloverResponse.prototype.acknowledged;
 /** @type {boolean} */
Elasticsearch.IndicesRolloverResponse.prototype.shards_acknowledged;
 /** @type {string} */
Elasticsearch.IndicesRolloverResponse.prototype.old_index;
 /** @type {string} */
Elasticsearch.IndicesRolloverResponse.prototype.new_index;
 /** @type {boolean} */
Elasticsearch.IndicesRolloverResponse.prototype.rolled_over;
 /** @type {boolean} */
Elasticsearch.IndicesRolloverResponse.prototype.dry_run;
 /** @type {!Object<string,boolean>} */
Elasticsearch.IndicesRolloverResponse.prototype.conditions;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesSegmentsParams = function() {};
 /** @type {boolean} */
Elasticsearch.IndicesSegmentsParams.prototype.ignoreUnavailable;
 /** @type {boolean} */
Elasticsearch.IndicesSegmentsParams.prototype.allowNoIndices;
 /** @type {string} */
Elasticsearch.IndicesSegmentsParams.prototype.expandWildcards;
 /** @type {boolean} */
Elasticsearch.IndicesSegmentsParams.prototype.human;
 /** @type {?} */
Elasticsearch.IndicesSegmentsParams.prototype.operationThreading;
 /** @type {boolean} */
Elasticsearch.IndicesSegmentsParams.prototype.verbose;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesSegmentsParams.prototype.index;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesShardStoresParams = function() {};
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesShardStoresParams.prototype.status;
 /** @type {boolean} */
Elasticsearch.IndicesShardStoresParams.prototype.ignoreUnavailable;
 /** @type {boolean} */
Elasticsearch.IndicesShardStoresParams.prototype.allowNoIndices;
 /** @type {string} */
Elasticsearch.IndicesShardStoresParams.prototype.expandWildcards;
 /** @type {?} */
Elasticsearch.IndicesShardStoresParams.prototype.operationThreading;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesShardStoresParams.prototype.index;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesShrinkParams = function() {};
 /** @type {string} */
Elasticsearch.IndicesShrinkParams.prototype.timeout;
 /** @type {string} */
Elasticsearch.IndicesShrinkParams.prototype.masterTimeout;
 /** @type {(string|number)} */
Elasticsearch.IndicesShrinkParams.prototype.waitForActiveShards;
 /** @type {string} */
Elasticsearch.IndicesShrinkParams.prototype.index;
 /** @type {string} */
Elasticsearch.IndicesShrinkParams.prototype.target;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesStatsParams = function() {};
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesStatsParams.prototype.completionFields;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesStatsParams.prototype.fielddataFields;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesStatsParams.prototype.fields;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesStatsParams.prototype.groups;
 /** @type {boolean} */
Elasticsearch.IndicesStatsParams.prototype.human;
 /** @type {string} */
Elasticsearch.IndicesStatsParams.prototype.level;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesStatsParams.prototype.types;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesStatsParams.prototype.index;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesStatsParams.prototype.metric;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesUpdateAliasesParams = function() {};
 /** @type {string} */
Elasticsearch.IndicesUpdateAliasesParams.prototype.timeout;
 /** @type {string} */
Elasticsearch.IndicesUpdateAliasesParams.prototype.masterTimeout;
 /** @type {{actions: !Array<!Elasticsearch.IndicesUpdateAliasesParamsAction>}} */
Elasticsearch.IndicesUpdateAliasesParams.prototype.body;
/**
 * @record
 * @struct
 */
Elasticsearch.IndicesUpdateAliasesParamsAction = function() {};
 /** @type {{index: string, indices: !Array<string>, alias: string}} */
Elasticsearch.IndicesUpdateAliasesParamsAction.prototype.add;
 /** @type {{index: string, indices: !Array<string>, alias: string}} */
Elasticsearch.IndicesUpdateAliasesParamsAction.prototype.remove;
 /** @type {{index: string}} */
Elasticsearch.IndicesUpdateAliasesParamsAction.prototype.remove_index;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesUpgradeParams = function() {};
 /** @type {string} */
Elasticsearch.IndicesUpgradeParams.prototype.expandWildcards;
 /** @type {boolean} */
Elasticsearch.IndicesUpgradeParams.prototype.ignoreUnavailable;
 /** @type {boolean} */
Elasticsearch.IndicesUpgradeParams.prototype.waitForCompletion;
 /** @type {boolean} */
Elasticsearch.IndicesUpgradeParams.prototype.onlyAncientSegments;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesUpgradeParams.prototype.index;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IndicesValidateQueryParams = function() {};
 /** @type {boolean} */
Elasticsearch.IndicesValidateQueryParams.prototype.explain;
 /** @type {boolean} */
Elasticsearch.IndicesValidateQueryParams.prototype.ignoreUnavailable;
 /** @type {boolean} */
Elasticsearch.IndicesValidateQueryParams.prototype.allowNoIndices;
 /** @type {string} */
Elasticsearch.IndicesValidateQueryParams.prototype.expandWildcards;
 /** @type {?} */
Elasticsearch.IndicesValidateQueryParams.prototype.operationThreading;
 /** @type {string} */
Elasticsearch.IndicesValidateQueryParams.prototype.q;
 /** @type {string} */
Elasticsearch.IndicesValidateQueryParams.prototype.analyzer;
 /** @type {boolean} */
Elasticsearch.IndicesValidateQueryParams.prototype.analyzeWildcard;
 /** @type {string} */
Elasticsearch.IndicesValidateQueryParams.prototype.defaultOperator;
 /** @type {string} */
Elasticsearch.IndicesValidateQueryParams.prototype.df;
 /** @type {boolean} */
Elasticsearch.IndicesValidateQueryParams.prototype.lenient;
 /** @type {boolean} */
Elasticsearch.IndicesValidateQueryParams.prototype.lowercaseExpandedTerms;
 /** @type {boolean} */
Elasticsearch.IndicesValidateQueryParams.prototype.rewrite;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesValidateQueryParams.prototype.index;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.IndicesValidateQueryParams.prototype.type;
/**
 * @constructor
 * @struct
 */
Elasticsearch.Ingest = function() {};

/**
 * @param {!Elasticsearch.IngestDeletePipelineParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Ingest.prototype.deletePipeline = function(params, callback) {};

/**
 * @param {!Elasticsearch.IngestGetPipelineParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Ingest.prototype.getPipeline = function(params, callback) {};

/**
 * @param {!Elasticsearch.IngestPutPipelineParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Ingest.prototype.putPipeline = function(params, callback) {};

/**
 * @param {!Elasticsearch.IngestSimulateParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Ingest.prototype.simulate = function(params, callback) {};
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IngestDeletePipelineParams = function() {};
 /** @type {number} */
Elasticsearch.IngestDeletePipelineParams.prototype.masterTimeout;
 /** @type {number} */
Elasticsearch.IngestDeletePipelineParams.prototype.timeout;
 /** @type {string} */
Elasticsearch.IngestDeletePipelineParams.prototype.id;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IngestGetPipelineParams = function() {};
 /** @type {number} */
Elasticsearch.IngestGetPipelineParams.prototype.masterTimeout;
 /** @type {string} */
Elasticsearch.IngestGetPipelineParams.prototype.id;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IngestPutPipelineParams = function() {};
 /** @type {number} */
Elasticsearch.IngestPutPipelineParams.prototype.masterTimeout;
 /** @type {number} */
Elasticsearch.IngestPutPipelineParams.prototype.timeout;
 /** @type {string} */
Elasticsearch.IngestPutPipelineParams.prototype.id;
 /** @type {?} */
Elasticsearch.IngestPutPipelineParams.prototype.body;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.IngestSimulateParams = function() {};
 /** @type {boolean} */
Elasticsearch.IngestSimulateParams.prototype.verbose;
 /** @type {string} */
Elasticsearch.IngestSimulateParams.prototype.id;
/**
 * @constructor
 * @struct
 */
Elasticsearch.Nodes = function() {};

/**
 * @param {!Elasticsearch.NodesHotThreadsParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Nodes.prototype.hotThreads = function(params, callback) {};

/**
 * @param {!Elasticsearch.NodesInfoParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Nodes.prototype.info = function(params, callback) {};

/**
 * @param {!Elasticsearch.NodesStatsParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Nodes.prototype.stats = function(params, callback) {};
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.NodesHotThreadsParams = function() {};
 /** @type {string} */
Elasticsearch.NodesHotThreadsParams.prototype.interval;
 /** @type {number} */
Elasticsearch.NodesHotThreadsParams.prototype.snapshots;
 /** @type {number} */
Elasticsearch.NodesHotThreadsParams.prototype.threads;
 /** @type {boolean} */
Elasticsearch.NodesHotThreadsParams.prototype.ignoreIdleThreads;
 /** @type {string} */
Elasticsearch.NodesHotThreadsParams.prototype.type;
 /** @type {string} */
Elasticsearch.NodesHotThreadsParams.prototype.timeout;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.NodesHotThreadsParams.prototype.nodeId;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.NodesInfoParams = function() {};
 /** @type {boolean} */
Elasticsearch.NodesInfoParams.prototype.flatSettings;
 /** @type {boolean} */
Elasticsearch.NodesInfoParams.prototype.human;
 /** @type {string} */
Elasticsearch.NodesInfoParams.prototype.timeout;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.NodesInfoParams.prototype.nodeId;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.NodesInfoParams.prototype.metric;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.NodesStatsParams = function() {};
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.NodesStatsParams.prototype.completionFields;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.NodesStatsParams.prototype.fielddataFields;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.NodesStatsParams.prototype.fields;
 /** @type {boolean} */
Elasticsearch.NodesStatsParams.prototype.groups;
 /** @type {boolean} */
Elasticsearch.NodesStatsParams.prototype.human;
 /** @type {string} */
Elasticsearch.NodesStatsParams.prototype.level;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.NodesStatsParams.prototype.types;
 /** @type {string} */
Elasticsearch.NodesStatsParams.prototype.timeout;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.NodesStatsParams.prototype.metric;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.NodesStatsParams.prototype.indexMetric;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.NodesStatsParams.prototype.nodeId;
/**
 * @constructor
 * @struct
 */
Elasticsearch.Snapshot = function() {};

/**
 * @param {!Elasticsearch.SnapshotCreateParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Snapshot.prototype.create = function(params, callback) {};

/**
 * @param {!Elasticsearch.SnapshotCreateRepositoryParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Snapshot.prototype.createRepository = function(params, callback) {};

/**
 * @param {!Elasticsearch.SnapshotDeleteParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Snapshot.prototype.delete = function(params, callback) {};

/**
 * @param {!Elasticsearch.SnapshotDeleteRepositoryParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Snapshot.prototype.deleteRepository = function(params, callback) {};

/**
 * @param {!Elasticsearch.SnapshotGetParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Snapshot.prototype.get = function(params, callback) {};

/**
 * @param {!Elasticsearch.SnapshotGetRepositoryParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Snapshot.prototype.getRepository = function(params, callback) {};

/**
 * @param {!Elasticsearch.SnapshotRestoreParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Snapshot.prototype.restore = function(params, callback) {};

/**
 * @param {!Elasticsearch.SnapshotStatusParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Snapshot.prototype.status = function(params, callback) {};

/**
 * @param {!Elasticsearch.SnapshotVerifyRepositoryParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Snapshot.prototype.verifyRepository = function(params, callback) {};
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.SnapshotCreateParams = function() {};
 /** @type {string} */
Elasticsearch.SnapshotCreateParams.prototype.masterTimeout;
 /** @type {boolean} */
Elasticsearch.SnapshotCreateParams.prototype.waitForCompletion;
 /** @type {string} */
Elasticsearch.SnapshotCreateParams.prototype.repository;
 /** @type {string} */
Elasticsearch.SnapshotCreateParams.prototype.snapshot;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.SnapshotCreateRepositoryParams = function() {};
 /** @type {string} */
Elasticsearch.SnapshotCreateRepositoryParams.prototype.masterTimeout;
 /** @type {string} */
Elasticsearch.SnapshotCreateRepositoryParams.prototype.timeout;
 /** @type {boolean} */
Elasticsearch.SnapshotCreateRepositoryParams.prototype.verify;
 /** @type {string} */
Elasticsearch.SnapshotCreateRepositoryParams.prototype.repository;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.SnapshotDeleteParams = function() {};
 /** @type {string} */
Elasticsearch.SnapshotDeleteParams.prototype.masterTimeout;
 /** @type {string} */
Elasticsearch.SnapshotDeleteParams.prototype.repository;
 /** @type {string} */
Elasticsearch.SnapshotDeleteParams.prototype.snapshot;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.SnapshotDeleteRepositoryParams = function() {};
 /** @type {string} */
Elasticsearch.SnapshotDeleteRepositoryParams.prototype.masterTimeout;
 /** @type {string} */
Elasticsearch.SnapshotDeleteRepositoryParams.prototype.timeout;
 /** @type {string} */
Elasticsearch.SnapshotDeleteRepositoryParams.prototype.repository;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.SnapshotGetParams = function() {};
 /** @type {string} */
Elasticsearch.SnapshotGetParams.prototype.masterTimeout;
 /** @type {boolean} */
Elasticsearch.SnapshotGetParams.prototype.ignoreUnavailable;
 /** @type {string} */
Elasticsearch.SnapshotGetParams.prototype.repository;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.SnapshotGetParams.prototype.snapshot;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.SnapshotGetRepositoryParams = function() {};
 /** @type {string} */
Elasticsearch.SnapshotGetRepositoryParams.prototype.masterTimeout;
 /** @type {boolean} */
Elasticsearch.SnapshotGetRepositoryParams.prototype.local;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.SnapshotGetRepositoryParams.prototype.repository;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.SnapshotRestoreParams = function() {};
 /** @type {string} */
Elasticsearch.SnapshotRestoreParams.prototype.masterTimeout;
 /** @type {boolean} */
Elasticsearch.SnapshotRestoreParams.prototype.waitForCompletion;
 /** @type {string} */
Elasticsearch.SnapshotRestoreParams.prototype.repository;
 /** @type {string} */
Elasticsearch.SnapshotRestoreParams.prototype.snapshot;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.SnapshotStatusParams = function() {};
 /** @type {string} */
Elasticsearch.SnapshotStatusParams.prototype.masterTimeout;
 /** @type {boolean} */
Elasticsearch.SnapshotStatusParams.prototype.ignoreUnavailable;
 /** @type {string} */
Elasticsearch.SnapshotStatusParams.prototype.repository;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.SnapshotStatusParams.prototype.snapshot;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.SnapshotVerifyRepositoryParams = function() {};
 /** @type {string} */
Elasticsearch.SnapshotVerifyRepositoryParams.prototype.masterTimeout;
 /** @type {string} */
Elasticsearch.SnapshotVerifyRepositoryParams.prototype.timeout;
 /** @type {string} */
Elasticsearch.SnapshotVerifyRepositoryParams.prototype.repository;
/**
 * @constructor
 * @struct
 */
Elasticsearch.Tasks = function() {};

/**
 * @param {!Elasticsearch.TasksCancelParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Tasks.prototype.cancel = function(params, callback) {};

/**
 * @param {!Elasticsearch.TasksGetParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Tasks.prototype.get = function(params, callback) {};

/**
 * @param {!Elasticsearch.TasksListParams} params
 * @param {function(?, ?, ?): void=} callback
 * @return {void|!Promise<?>}
 */
Elasticsearch.Tasks.prototype.list = function(params, callback) {};
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.TasksCancelParams = function() {};
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.TasksCancelParams.prototype.nodeId;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.TasksCancelParams.prototype.actions;
 /** @type {string} */
Elasticsearch.TasksCancelParams.prototype.parentNode;
 /** @type {string} */
Elasticsearch.TasksCancelParams.prototype.parentTask;
 /** @type {string} */
Elasticsearch.TasksCancelParams.prototype.taskId;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.TasksGetParams = function() {};
 /** @type {boolean} */
Elasticsearch.TasksGetParams.prototype.waitForCompletion;
 /** @type {string} */
Elasticsearch.TasksGetParams.prototype.taskId;
/**
 * @extends {Elasticsearch.GenericParams}
 * @record
 * @struct
 */
Elasticsearch.TasksListParams = function() {};
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.TasksListParams.prototype.nodeId;
 /** @type {(string|boolean|!Array<string>)} */
Elasticsearch.TasksListParams.prototype.actions;
 /** @type {boolean} */
Elasticsearch.TasksListParams.prototype.detailed;
 /** @type {string} */
Elasticsearch.TasksListParams.prototype.parentNode;
 /** @type {string} */
Elasticsearch.TasksListParams.prototype.parentTask;
 /** @type {boolean} */
Elasticsearch.TasksListParams.prototype.waitForCompletion;
 /** @type {string} */
Elasticsearch.TasksListParams.prototype.groupBy;
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "elasticsearch"
/** @const */
tsickle_declare_module.elasticsearch = {};

/* TODO: ExportAssignment in tsickle_declare_module.elasticsearch */
