/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/codependency/index.d.ts:

/* TODO: NamespaceExportDeclaration in  */
/**
 * @record
 * @struct
 */
function DependencyInfo() {}
 /** @type {string} */
DependencyInfo.prototype.supportedRange;
 /** @type {string} */
DependencyInfo.prototype.installedVersion;
 /** @type {boolean} */
DependencyInfo.prototype.isInstalled;
 /** @type {boolean} */
DependencyInfo.prototype.isValid;
 /** @type {string} */
DependencyInfo.prototype.pkgPath;
/**
 * @record
 * @struct
 */
function RequirePeerFunctionOptions() {}
 /** @type {boolean} */
RequirePeerFunctionOptions.prototype.optional;
 /** @type {boolean} */
RequirePeerFunctionOptions.prototype.dontThrow;
/**
 * @record
 * @struct
 */
function RequirePeerFunction() {}

/* TODO: CallSignature:  */

/**
 * @param {string} name
 * @return {?}
 */
RequirePeerFunction.prototype.resolve = function(name) {};

/**
 * @param {!NodeModule} baseModule
 * @param {?=} options
 * @return {?}
 */
function register(baseModule, options) {}

/**
 * @param {string} middlewareName
 * @return {?}
 */
function get(middlewareName) {}
