/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/angular-ui-bootstrap/index.d.ts:

/* TODO: ImportDeclaration in  */

/** @typedef {!ui.bootstrap.IAccordionConfig} */
var IAccordionConfig;

/** @typedef {!ui.bootstrap.IButtonConfig} */
var IButtonConfig;

/** @typedef {!ui.bootstrap.IDatepickerConfig} */
var IDatepickerConfig;

/** @typedef {!ui.bootstrap.IDatepickerPopupConfig} */
var IDatepickerPopupConfig;

/** @typedef {!ui.bootstrap.IDropdownConfig} */
var IDropdownConfig;

/** @typedef {!ui.bootstrap.IModalProvider} */
var IModalProvider;

/** @typedef {!ui.bootstrap.IModalService} */
var IModalService;

/** @typedef {!ui.bootstrap.IModalServiceInstance} */
var IModalServiceInstance;

/** @typedef {!ui.bootstrap.IModalInstanceService} */
var IModalInstanceService;

/** @typedef {!ui.bootstrap.IModalScope} */
var IModalScope;

/** @typedef {!ui.bootstrap.IModalSettings} */
var IModalSettings;

/** @typedef {!ui.bootstrap.IModalStackService} */
var IModalStackService;

/** @typedef {!ui.bootstrap.IModalStackedMapKeyValuePair} */
var IModalStackedMapKeyValuePair;

/** @typedef {!ui.bootstrap.IPaginationConfig} */
var IPaginationConfig;

/** @typedef {!ui.bootstrap.IPagerConfig} */
var IPagerConfig;

/** @typedef {!ui.bootstrap.IPositionCoordinates} */
var IPositionCoordinates;

/** @typedef {!ui.bootstrap.IPositionService} */
var IPositionService;

/** @typedef {!ui.bootstrap.IProgressConfig} */
var IProgressConfig;

/** @typedef {!ui.bootstrap.IRatingConfig} */
var IRatingConfig;

/** @typedef {!ui.bootstrap.ITimepickerConfig} */
var ITimepickerConfig;

/** @typedef {!ui.bootstrap.ITooltipOptions} */
var ITooltipOptions;

/** @typedef {!ui.bootstrap.ITooltipProvider} */
var ITooltipProvider;

/** @typedef {!ui.bootstrap.ITransitionService} */
var ITransitionService;

/** @typedef {!ui.bootstrap.ITransitionServiceOptions} */
var ITransitionServiceOptions;
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "angular"
/** @const */
tsickle_declare_module.angular.ui = {};
/** @const */
tsickle_declare_module.angular.ui.bootstrap = {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.angular.ui.bootstrap.IAccordionConfig = function() {};
 /** @type {boolean} */
tsickle_declare_module.angular.ui.bootstrap.IAccordionConfig.prototype.closeOthers;
/**
 * @record
 * @struct
 */
tsickle_declare_module.angular.ui.bootstrap.IButtonConfig = function() {};
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IButtonConfig.prototype.activeClass;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IButtonConfig.prototype.toggleEvent;
/**
 * @extends {angular.INgModelOptions}
 * @record
 * @struct
 */
tsickle_declare_module.angular.ui.bootstrap.IDropdownConfigNgOptions = function() {};
 /** @type {boolean} */
tsickle_declare_module.angular.ui.bootstrap.IDropdownConfigNgOptions.prototype.allowInvalid;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IDropdownConfigNgOptions.prototype.timezone;
/**
 * @record
 * @struct
 */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerConfig = function() {};
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerConfig.prototype.formatDay;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerConfig.prototype.formatMonth;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerConfig.prototype.formatYear;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerConfig.prototype.formatDayHeader;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerConfig.prototype.formatDayTitle;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerConfig.prototype.formatMonthTitle;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerConfig.prototype.datepickerMode;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerConfig.prototype.minMode;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerConfig.prototype.maxMode;
 /** @type {boolean} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerConfig.prototype.showWeeks;
 /** @type {number} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerConfig.prototype.startingDay;
 /** @type {number} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerConfig.prototype.yearRange;
 /** @type {?} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerConfig.prototype.minDate;
 /** @type {?} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerConfig.prototype.maxDate;
 /** @type {?} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerConfig.prototype.initDate;
 /** @type {boolean} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerConfig.prototype.shortcutPropagation;
 /** @type {number} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerConfig.prototype.monthColumns;
 /** @type {number} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerConfig.prototype.yearColumns;
 /** @type {number} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerConfig.prototype.yearRows;
 /** @type {!ui.bootstrap.IDropdownConfigNgOptions} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerConfig.prototype.ngModelOptions;
/**
 * @record
 * @struct
 */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerPopupConfig = function() {};
 /** @type {!Array<string>} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerPopupConfig.prototype.altInputFormats;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerPopupConfig.prototype.datepickerPopup;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerPopupConfig.prototype.datepickerPopupTemplateUrl;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerPopupConfig.prototype.datepickerTemplateUrl;
 /** @type {{date: string, datetime-local: string, month: string}} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerPopupConfig.prototype.html5Types;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerPopupConfig.prototype.currentText;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerPopupConfig.prototype.clearText;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerPopupConfig.prototype.closeText;
 /** @type {boolean} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerPopupConfig.prototype.closeOnDateSelection;
 /** @type {boolean} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerPopupConfig.prototype.appendToBody;
 /** @type {boolean} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerPopupConfig.prototype.showButtonBar;
 /** @type {boolean} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerPopupConfig.prototype.onOpenFocus;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IDatepickerPopupConfig.prototype.placement;
/**
 * @record
 * @struct
 */
tsickle_declare_module.angular.ui.bootstrap.IDropdownConfig = function() {};
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IDropdownConfig.prototype.appendToOpenClass;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IDropdownConfig.prototype.openClass;
/**
 * @extends {angular.IServiceProvider}
 * @record
 * @struct
 */
tsickle_declare_module.angular.ui.bootstrap.IModalProvider = function() {};
 /** @type {!ui.bootstrap.IModalSettings} */
tsickle_declare_module.angular.ui.bootstrap.IModalProvider.prototype.options;
/**
 * @record
 * @struct
 */
tsickle_declare_module.angular.ui.bootstrap.IModalService = function() {};

/**
 * @param {!ui.bootstrap.IModalSettings} options
 * @return {!ui.bootstrap.IModalInstanceService}
 */
tsickle_declare_module.angular.ui.bootstrap.IModalService.prototype.open = function(options) {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.angular.ui.bootstrap.IModalInstanceService = function() {};
 /** @type {!angular.IPromise<?>} */
tsickle_declare_module.angular.ui.bootstrap.IModalInstanceService.prototype.result;
 /** @type {!angular.IPromise<?>} */
tsickle_declare_module.angular.ui.bootstrap.IModalInstanceService.prototype.opened;
 /** @type {!angular.IPromise<?>} */
tsickle_declare_module.angular.ui.bootstrap.IModalInstanceService.prototype.rendered;
 /** @type {!angular.IPromise<?>} */
tsickle_declare_module.angular.ui.bootstrap.IModalInstanceService.prototype.closed;

/**
 * A method that can be used to close a modal, passing a result. If `preventDefault` is called on the `modal.closing` event then the modal will remain open.
 * @param {?=} result
 * @return {void}
 */
tsickle_declare_module.angular.ui.bootstrap.IModalInstanceService.prototype.close = function(result) {};

/**
 * A method that can be used to dismiss a modal, passing a reason. If `preventDefault` is called on the `modal.closing` event then the modal will remain open.
 * @param {?=} reason
 * @return {void}
 */
tsickle_declare_module.angular.ui.bootstrap.IModalInstanceService.prototype.dismiss = function(reason) {};
/**
 * @extends {ui.bootstrap.IModalInstanceService}
 * @record
 * @struct
 */
tsickle_declare_module.angular.ui.bootstrap.IModalServiceInstance = function() {};
/**
 * @extends {angular.IScope}
 * @record
 * @struct
 */
tsickle_declare_module.angular.ui.bootstrap.IModalScope = function() {};

/**
 * Dismiss the dialog without assigning a value to the promise output. If `preventDefault` is called on the `modal.closing` event then the modal will remain open.
 * 
 * @param {?=} reason
 * @return {boolean} true if the modal was closed; otherwise false
 */
tsickle_declare_module.angular.ui.bootstrap.IModalScope.prototype.$dismiss = function(reason) {};

/**
 * Close the dialog resolving the promise to the given value. If `preventDefault` is called on the `modal.closing` event then the modal will remain open.
 * 
 * @param {?=} result
 * @return {boolean} true if the modal was closed; otherwise false
 */
tsickle_declare_module.angular.ui.bootstrap.IModalScope.prototype.$close = function(result) {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.angular.ui.bootstrap.IModalSettings = function() {};
 /** @type {(string|function(): string)} */
tsickle_declare_module.angular.ui.bootstrap.IModalSettings.prototype.templateUrl;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IModalSettings.prototype.template;
 /** @type {(!ui.bootstrap.IModalScope|!angular.IScope)} */
tsickle_declare_module.angular.ui.bootstrap.IModalSettings.prototype.scope;
 /** @type {(string|!Function|!Array<(string|!Function)>)} */
tsickle_declare_module.angular.ui.bootstrap.IModalSettings.prototype.controller;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IModalSettings.prototype.controllerAs;
 /** @type {boolean} */
tsickle_declare_module.angular.ui.bootstrap.IModalSettings.prototype.bindToController;
 /** @type {!Object<string,(string|!Object|!Function|!Array<(string|!Function)>)>} */
tsickle_declare_module.angular.ui.bootstrap.IModalSettings.prototype.resolve;
 /** @type {boolean} */
tsickle_declare_module.angular.ui.bootstrap.IModalSettings.prototype.animation;
 /** @type {(string|boolean)} */
tsickle_declare_module.angular.ui.bootstrap.IModalSettings.prototype.backdrop;
 /** @type {boolean} */
tsickle_declare_module.angular.ui.bootstrap.IModalSettings.prototype.keyboard;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IModalSettings.prototype.backdropClass;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IModalSettings.prototype.windowClass;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IModalSettings.prototype.size;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IModalSettings.prototype.windowTemplateUrl;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IModalSettings.prototype.openedClass;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IModalSettings.prototype.windowTopClass;
 /** @type {!angular.IAugmentedJQuery} */
tsickle_declare_module.angular.ui.bootstrap.IModalSettings.prototype.appendTo;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IModalSettings.prototype.component;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IModalSettings.prototype.ariaDescribedBy;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IModalSettings.prototype.ariaLabelledBy;
/**
 * @record
 * @struct
 */
tsickle_declare_module.angular.ui.bootstrap.IModalStackService = function() {};

/**
 * Opens a new modal instance.
 * @param {!ui.bootstrap.IModalInstanceService} modalInstance
 * @param {?} modal
 * @return {void}
 */
tsickle_declare_module.angular.ui.bootstrap.IModalStackService.prototype.open = function(modalInstance, modal) {};

/**
 * Closes a modal instance with an optional result.
 * @param {!ui.bootstrap.IModalInstanceService} modalInstance
 * @param {?=} result
 * @return {void}
 */
tsickle_declare_module.angular.ui.bootstrap.IModalStackService.prototype.close = function(modalInstance, result) {};

/**
 * Dismisses a modal instance with an optional reason.
 * @param {!ui.bootstrap.IModalInstanceService} modalInstance
 * @param {?=} reason
 * @return {void}
 */
tsickle_declare_module.angular.ui.bootstrap.IModalStackService.prototype.dismiss = function(modalInstance, reason) {};

/**
 * Dismiss all open modal instances with an optional reason that will be passed to each instance.
 * @param {?=} reason
 * @return {void}
 */
tsickle_declare_module.angular.ui.bootstrap.IModalStackService.prototype.dismissAll = function(reason) {};

/**
 * Gets the topmost modal instance that is open.
 * @return {!ui.bootstrap.IModalStackedMapKeyValuePair}
 */
tsickle_declare_module.angular.ui.bootstrap.IModalStackService.prototype.getTop = function() {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.angular.ui.bootstrap.IModalStackedMapKeyValuePair = function() {};
 /** @type {!ui.bootstrap.IModalInstanceService} */
tsickle_declare_module.angular.ui.bootstrap.IModalStackedMapKeyValuePair.prototype.key;
 /** @type {?} */
tsickle_declare_module.angular.ui.bootstrap.IModalStackedMapKeyValuePair.prototype.value;
/**
 * @record
 * @struct
 */
tsickle_declare_module.angular.ui.bootstrap.IPaginationConfig = function() {};
 /** @type {number} */
tsickle_declare_module.angular.ui.bootstrap.IPaginationConfig.prototype.totalItems;
 /** @type {number} */
tsickle_declare_module.angular.ui.bootstrap.IPaginationConfig.prototype.itemsPerPage;
 /** @type {number} */
tsickle_declare_module.angular.ui.bootstrap.IPaginationConfig.prototype.maxSize;
 /** @type {number} */
tsickle_declare_module.angular.ui.bootstrap.IPaginationConfig.prototype.numPages;
 /** @type {boolean} */
tsickle_declare_module.angular.ui.bootstrap.IPaginationConfig.prototype.rotate;
 /** @type {boolean} */
tsickle_declare_module.angular.ui.bootstrap.IPaginationConfig.prototype.directionLinks;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IPaginationConfig.prototype.previousText;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IPaginationConfig.prototype.nextText;
 /** @type {boolean} */
tsickle_declare_module.angular.ui.bootstrap.IPaginationConfig.prototype.boundaryLinks;
 /** @type {boolean} */
tsickle_declare_module.angular.ui.bootstrap.IPaginationConfig.prototype.boundaryLinkNumbers;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IPaginationConfig.prototype.firstText;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IPaginationConfig.prototype.lastText;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IPaginationConfig.prototype.templateUrl;
 /** @type {boolean} */
tsickle_declare_module.angular.ui.bootstrap.IPaginationConfig.prototype.forceEllipses;
/**
 * @record
 * @struct
 */
tsickle_declare_module.angular.ui.bootstrap.IPagerConfig = function() {};
 /** @type {boolean} */
tsickle_declare_module.angular.ui.bootstrap.IPagerConfig.prototype.align;
 /** @type {number} */
tsickle_declare_module.angular.ui.bootstrap.IPagerConfig.prototype.itemsPerPage;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IPagerConfig.prototype.previousText;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IPagerConfig.prototype.nextText;
/**
 * @record
 * @struct
 */
tsickle_declare_module.angular.ui.bootstrap.IPositionCoordinates = function() {};
 /** @type {number} */
tsickle_declare_module.angular.ui.bootstrap.IPositionCoordinates.prototype.width;
 /** @type {number} */
tsickle_declare_module.angular.ui.bootstrap.IPositionCoordinates.prototype.height;
 /** @type {number} */
tsickle_declare_module.angular.ui.bootstrap.IPositionCoordinates.prototype.top;
 /** @type {number} */
tsickle_declare_module.angular.ui.bootstrap.IPositionCoordinates.prototype.left;
/**
 * @record
 * @struct
 */
tsickle_declare_module.angular.ui.bootstrap.IPositionService = function() {};

/**
 * Provides a read-only equivalent of jQuery's position function.
 * @param {!JQuery} element
 * @return {!ui.bootstrap.IPositionCoordinates}
 */
tsickle_declare_module.angular.ui.bootstrap.IPositionService.prototype.position = function(element) {};

/**
 * Provides a read-only equivalent of jQuery's offset function.
 * @param {!JQuery} element
 * @return {!ui.bootstrap.IPositionCoordinates}
 */
tsickle_declare_module.angular.ui.bootstrap.IPositionService.prototype.offset = function(element) {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.angular.ui.bootstrap.IProgressConfig = function() {};
 /** @type {boolean} */
tsickle_declare_module.angular.ui.bootstrap.IProgressConfig.prototype.animate;
 /** @type {number} */
tsickle_declare_module.angular.ui.bootstrap.IProgressConfig.prototype.max;
/**
 * @record
 * @struct
 */
tsickle_declare_module.angular.ui.bootstrap.IRatingConfig = function() {};
 /** @type {number} */
tsickle_declare_module.angular.ui.bootstrap.IRatingConfig.prototype.max;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IRatingConfig.prototype.stateOn;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.IRatingConfig.prototype.stateOff;
 /** @type {!Array<string>} */
tsickle_declare_module.angular.ui.bootstrap.IRatingConfig.prototype.titles;
/**
 * @record
 * @struct
 */
tsickle_declare_module.angular.ui.bootstrap.ITimepickerConfig = function() {};
 /** @type {number} */
tsickle_declare_module.angular.ui.bootstrap.ITimepickerConfig.prototype.hourStep;
 /** @type {number} */
tsickle_declare_module.angular.ui.bootstrap.ITimepickerConfig.prototype.minuteStep;
 /** @type {number} */
tsickle_declare_module.angular.ui.bootstrap.ITimepickerConfig.prototype.secondStep;
 /** @type {boolean} */
tsickle_declare_module.angular.ui.bootstrap.ITimepickerConfig.prototype.showMeridian;
 /** @type {!Array<string>} */
tsickle_declare_module.angular.ui.bootstrap.ITimepickerConfig.prototype.meridians;
 /** @type {boolean} */
tsickle_declare_module.angular.ui.bootstrap.ITimepickerConfig.prototype.readonlyInput;
 /** @type {boolean} */
tsickle_declare_module.angular.ui.bootstrap.ITimepickerConfig.prototype.mousewheel;
 /** @type {boolean} */
tsickle_declare_module.angular.ui.bootstrap.ITimepickerConfig.prototype.arrowkeys;
 /** @type {boolean} */
tsickle_declare_module.angular.ui.bootstrap.ITimepickerConfig.prototype.showSpinners;
 /** @type {boolean} */
tsickle_declare_module.angular.ui.bootstrap.ITimepickerConfig.prototype.showSeconds;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.ITimepickerConfig.prototype.templateUrl;
/**
 * @record
 * @struct
 */
tsickle_declare_module.angular.ui.bootstrap.ITooltipOptions = function() {};
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.ITooltipOptions.prototype.placement;
 /** @type {boolean} */
tsickle_declare_module.angular.ui.bootstrap.ITooltipOptions.prototype.animation;
 /** @type {number} */
tsickle_declare_module.angular.ui.bootstrap.ITooltipOptions.prototype.popupDelay;
 /** @type {number} */
tsickle_declare_module.angular.ui.bootstrap.ITooltipOptions.prototype.popupCloseDelay;
 /** @type {boolean} */
tsickle_declare_module.angular.ui.bootstrap.ITooltipOptions.prototype.appendToBody;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.ITooltipOptions.prototype.trigger;
 /** @type {boolean} */
tsickle_declare_module.angular.ui.bootstrap.ITooltipOptions.prototype.useContentExp;
/**
 * @extends {angular.IServiceProvider}
 * @record
 * @struct
 */
tsickle_declare_module.angular.ui.bootstrap.ITooltipProvider = function() {};

/**
 * Provide a set of defaults for certain tooltip and popover attributes.
 * @param {!ui.bootstrap.ITooltipOptions} value
 * @return {void}
 */
tsickle_declare_module.angular.ui.bootstrap.ITooltipProvider.prototype.options = function(value) {};

/**
 * Extends the default trigger mappings with mappings of your own. E.g. `{ 'openTrigger': 'closeTrigger' }`.
 * @param {!Object} triggers
 * @return {void}
 */
tsickle_declare_module.angular.ui.bootstrap.ITooltipProvider.prototype.setTriggers = function(triggers) {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.angular.ui.bootstrap.ITransitionService = function() {};
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.ITransitionService.prototype.animationEndEventName;
 /** @type {string} */
tsickle_declare_module.angular.ui.bootstrap.ITransitionService.prototype.transitionEndEventName;

/* TODO: CallSignature: tsickle_declare_module.angular.ui.bootstrap */
/**
 * @record
 * @struct
 */
tsickle_declare_module.angular.ui.bootstrap.ITransitionServiceOptions = function() {};
 /** @type {boolean} */
tsickle_declare_module.angular.ui.bootstrap.ITransitionServiceOptions.prototype.animation;
