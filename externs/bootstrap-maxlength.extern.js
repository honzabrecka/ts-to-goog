/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/bootstrap-maxlength/index.d.ts:
/** @const */
var BootstrapMaxlength = {};
/**
 * @record
 * @struct
 */
BootstrapMaxlength.PlacementOptions = function() {};
 /** @type {(string|!Number)} */
BootstrapMaxlength.PlacementOptions.prototype.top;
 /** @type {(string|!Number)} */
BootstrapMaxlength.PlacementOptions.prototype.right;
 /** @type {(string|!Number)} */
BootstrapMaxlength.PlacementOptions.prototype.bottom;
 /** @type {(string|!Number)} */
BootstrapMaxlength.PlacementOptions.prototype.left;
 /** @type {string} */
BootstrapMaxlength.PlacementOptions.prototype.position;
/**
 * @record
 * @struct
 */
BootstrapMaxlength.PositionParam = function() {};
 /** @type {!Number} */
BootstrapMaxlength.PositionParam.prototype.top;
 /** @type {!Number} */
BootstrapMaxlength.PositionParam.prototype.right;
 /** @type {!Number} */
BootstrapMaxlength.PositionParam.prototype.bottom;
 /** @type {!Number} */
BootstrapMaxlength.PositionParam.prototype.left;
 /** @type {!Number} */
BootstrapMaxlength.PositionParam.prototype.width;
 /** @type {!Number} */
BootstrapMaxlength.PositionParam.prototype.height;
/**
 * @record
 * @struct
 */
BootstrapMaxlength.Options = function() {};
 /** @type {!Boolean} */
BootstrapMaxlength.Options.prototype.alwaysShow;
 /** @type {!Number} */
BootstrapMaxlength.Options.prototype.threshold;
 /** @type {string} */
BootstrapMaxlength.Options.prototype.warningClass;
 /** @type {string} */
BootstrapMaxlength.Options.prototype.limitReachedClass;
 /** @type {string} */
BootstrapMaxlength.Options.prototype.separator;
 /** @type {string} */
BootstrapMaxlength.Options.prototype.preText;
 /** @type {string} */
BootstrapMaxlength.Options.prototype.postText;
 /** @type {!Boolean} */
BootstrapMaxlength.Options.prototype.showMaxLength;
 /** @type {!Boolean} */
BootstrapMaxlength.Options.prototype.showCharsTyped;
 /** @type {(string|!BootstrapMaxlength.PlacementOptions|function(?<!HTMLElement>, ?<!HTMLElement>, !BootstrapMaxlength.PositionParam): void)} */
BootstrapMaxlength.Options.prototype.placement;
 /** @type {boolean} */
BootstrapMaxlength.Options.prototype.appendToParent;
 /** @type {(string|function(string, !Number): string)} */
BootstrapMaxlength.Options.prototype.message;
 /** @type {boolean} */
BootstrapMaxlength.Options.prototype.utf8;
 /** @type {boolean} */
BootstrapMaxlength.Options.prototype.showOnReady;
 /** @type {boolean} */
BootstrapMaxlength.Options.prototype.twoCharLinebreak;
 /** @type {string} */
BootstrapMaxlength.Options.prototype.customMaxAttribute;
 /** @type {boolean} */
BootstrapMaxlength.Options.prototype.allowOverMax;
 /** @type {boolean} */
BootstrapMaxlength.Options.prototype.validate;

/**
 * Apply the maxlength plugin on the selected elemens
 * @param {!BootstrapMaxlength.Options=} options
 * @return {?<!HTMLElement>}
 */
JQuery.prototype.maxlength = function(options) {};

/**
 * @param {string} events
 * @param {function(!JQueryEventObject, !Array<?>): ?} handler
 * @return {?<!HTMLElement>}
 */
JQuery.prototype.on = function(events, handler) {};

/**
 * @param {string} eventType
 * @param {(!Object|!Array<?>)=} extraParameters
 * @return {?<!HTMLElement>}
 */
JQuery.prototype.trigger = function(eventType, extraParameters) {};
