/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/soundjs/index.d.ts:
/**
 * @constructor
 * @struct
 */
createjs.AbstractPlugin = function() {};

/**
 * @param {string} src
 * @param {number} startTime
 * @param {number} duration
 * @return {!createjs.AbstractSoundInstance}
 */
createjs.AbstractPlugin.prototype.create = function(src, startTime, duration) {};

/**
 * @return {number}
 */
createjs.AbstractPlugin.prototype.getVolume = function() {};

/**
 * @param {string} src
 * @return {boolean}
 */
createjs.AbstractPlugin.prototype.isPreloadComplete = function(src) {};

/**
 * @param {string} src
 * @return {boolean}
 */
createjs.AbstractPlugin.prototype.isPreloadStarted = function(src) {};

/**
 * @return {boolean}
 */
createjs.AbstractPlugin.prototype.isSupported = function() {};

/**
 * @param {!Object} loader
 * @return {void}
 */
createjs.AbstractPlugin.prototype.preload = function(loader) {};

/**
 * @param {string} loadItem
 * @param {number} instances
 * @return {!Object}
 */
createjs.AbstractPlugin.prototype.register = function(loadItem, instances) {};

/**
 * @param {string} src
 * @return {void}
 */
createjs.AbstractPlugin.prototype.removeAllSounds = function(src) {};

/**
 * @param {string} src
 * @return {void}
 */
createjs.AbstractPlugin.prototype.removeSound = function(src) {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
createjs.AbstractPlugin.prototype.setMute = function(value) {};

/**
 * @param {number} value
 * @return {boolean}
 */
createjs.AbstractPlugin.prototype.setVolume = function(value) {};

/**
 * @constructor
 * @struct
 * @param {string} src
 * @param {number} startTime
 * @param {number} duration
 * @param {!Object} playbackResource
 */
createjs.AbstractSoundInstance = function(src, startTime, duration, playbackResource) {};
 /** @type {number} */
createjs.AbstractSoundInstance.prototype.duration;
 /** @type {number} */
createjs.AbstractSoundInstance.prototype.loop;
 /** @type {boolean} */
createjs.AbstractSoundInstance.prototype.muted;
 /** @type {number} */
createjs.AbstractSoundInstance.prototype.pan;
 /** @type {boolean} */
createjs.AbstractSoundInstance.prototype.paused;
 /** @type {!Object} */
createjs.AbstractSoundInstance.prototype.playbackResource;
 /** @type {string} */
createjs.AbstractSoundInstance.prototype.playState;
 /** @type {number} */
createjs.AbstractSoundInstance.prototype.position;
 /** @type {string} */
createjs.AbstractSoundInstance.prototype.src;
 /** @type {(string|number)} */
createjs.AbstractSoundInstance.prototype.uniqueId;
 /** @type {number} */
createjs.AbstractSoundInstance.prototype.volume;

/**
 * @return {void}
 */
createjs.AbstractSoundInstance.prototype.destroy = function() {};

/**
 * @return {number}
 */
createjs.AbstractSoundInstance.prototype.getDuration = function() {};

/**
 * @return {number}
 */
createjs.AbstractSoundInstance.prototype.getLoop = function() {};

/**
 * @return {boolean}
 */
createjs.AbstractSoundInstance.prototype.getMute = function() {};

/**
 * @return {number}
 */
createjs.AbstractSoundInstance.prototype.getPan = function() {};

/**
 * @return {boolean}
 */
createjs.AbstractSoundInstance.prototype.getPaused = function() {};

/**
 * @return {number}
 */
createjs.AbstractSoundInstance.prototype.getPosition = function() {};

/**
 * @return {number}
 */
createjs.AbstractSoundInstance.prototype.getVolume = function() {};

/**
 * @param {(string|!Object)=} interrupt
 * @param {number=} delay
 * @param {number=} offset
 * @param {number=} loop
 * @param {number=} volume
 * @param {number=} pan
 * @return {!createjs.AbstractSoundInstance}
 */
createjs.AbstractSoundInstance.prototype.play = function(interrupt, delay, offset, loop, volume, pan) {};

/**
 * @param {number} value
 * @return {!createjs.AbstractSoundInstance}
 */
createjs.AbstractSoundInstance.prototype.setDuration = function(value) {};

/**
 * @param {number} value
 * @return {void}
 */
createjs.AbstractSoundInstance.prototype.setLoop = function(value) {};

/**
 * @param {boolean} value
 * @return {!createjs.AbstractSoundInstance}
 */
createjs.AbstractSoundInstance.prototype.setMute = function(value) {};

/**
 * @param {number} value
 * @return {!createjs.AbstractSoundInstance}
 */
createjs.AbstractSoundInstance.prototype.setPan = function(value) {};

/**
 * @param {!Object} value
 * @return {!createjs.AbstractSoundInstance}
 */
createjs.AbstractSoundInstance.prototype.setPlayback = function(value) {};

/**
 * @param {number} value
 * @return {!createjs.AbstractSoundInstance}
 */
createjs.AbstractSoundInstance.prototype.setPosition = function(value) {};

/**
 * @param {number} value
 * @return {!createjs.AbstractSoundInstance}
 */
createjs.AbstractSoundInstance.prototype.setVolume = function(value) {};

/**
 * @return {!createjs.AbstractSoundInstance}
 */
createjs.AbstractSoundInstance.prototype.stop = function() {};
/**
 * @extends {createjs.AbstractLoader}
 * @constructor
 * @struct
 */
createjs.FlashAudioLoader = function() {};
 /** @type {string} */
createjs.FlashAudioLoader.prototype.flashId;

/**
 * @param {!Object} flash
 * @return {void}
 */
createjs.FlashAudioLoader.prototype.setFlash = function(flash) {};
/**
 * @extends {createjs.AbstractPlugin}
 * @constructor
 * @struct
 */
createjs.FlashAudioPlugin = function() {};
 /** @type {boolean} */
createjs.FlashAudioPlugin.prototype.flashReady;
 /** @type {boolean} */
createjs.FlashAudioPlugin.prototype.showOutput;
 /** @type {string} */
createjs.FlashAudioPlugin.swfPath;

/**
 * @return {boolean}
 */
createjs.FlashAudioPlugin.isSupported = function() {};

/**
 * @constructor
 * @struct
 * @param {string} src
 * @param {number} startTime
 * @param {number} duration
 * @param {!Object} playbackResource
 */
createjs.FlashAudioSoundInstance = function(src, startTime, duration, playbackResource) {};

/**
 * @constructor
 * @struct
 */
createjs.FlashPlugin = function() {};
 /** @type {string} */
createjs.FlashPlugin.buildDate;
 /** @type {boolean} */
createjs.FlashPlugin.prototype.flashReady;
 /** @type {boolean} */
createjs.FlashPlugin.prototype.showOutput;
 /** @type {string} */
createjs.FlashPlugin.swfPath;
 /** @type {string} */
createjs.FlashPlugin.version;

/**
 * @param {string} src
 * @return {!createjs.AbstractSoundInstance}
 */
createjs.FlashPlugin.prototype.create = function(src) {};

/**
 * @return {number}
 */
createjs.FlashPlugin.prototype.getVolume = function() {};

/**
 * @param {string} src
 * @return {boolean}
 */
createjs.FlashPlugin.prototype.isPreloadStarted = function(src) {};

/**
 * @return {boolean}
 */
createjs.FlashPlugin.isSupported = function() {};

/**
 * @param {string} src
 * @param {!Object} instance
 * @return {void}
 */
createjs.FlashPlugin.prototype.preload = function(src, instance) {};

/**
 * @param {string} src
 * @param {number} instances
 * @return {!Object}
 */
createjs.FlashPlugin.prototype.register = function(src, instances) {};

/**
 * @return {void}
 */
createjs.FlashPlugin.prototype.removeAllSounds = function() {};

/**
 * @param {string} src
 * @return {void}
 */
createjs.FlashPlugin.prototype.removeSound = function(src) {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
createjs.FlashPlugin.prototype.setMute = function(value) {};

/**
 * @param {number} value
 * @return {boolean}
 */
createjs.FlashPlugin.prototype.setVolume = function(value) {};

/**
 * @constructor
 * @struct
 */
createjs.HTMLAudioPlugin = function() {};
 /** @type {number} */
createjs.HTMLAudioPlugin.prototype.defaultNumChannels;
 /** @type {boolean} */
createjs.HTMLAudioPlugin.prototype.enableIOS;
 /** @type {number} */
createjs.HTMLAudioPlugin.MAX_INSTANCES;

/**
 * @return {boolean}
 */
createjs.HTMLAudioPlugin.isSupported = function() {};

/**
 * @constructor
 * @struct
 * @param {string} src
 * @param {number} startTime
 * @param {number} duration
 * @param {!Object} playbackResource
 */
createjs.HTMLAudioSoundInstance = function(src, startTime, duration, playbackResource) {};
/**
 * @constructor
 * @struct
 */
createjs.HTMLAudioTagPool = function() {};
/**
 * @constructor
 * @struct
 */
createjs.PlayPropsConfig = function() {};
 /** @type {number} */
createjs.PlayPropsConfig.prototype.delay;
 /** @type {number} */
createjs.PlayPropsConfig.prototype.duration;
 /** @type {string} */
createjs.PlayPropsConfig.prototype.interrupt;
 /** @type {number} */
createjs.PlayPropsConfig.prototype.loop;
 /** @type {number} */
createjs.PlayPropsConfig.prototype.offset;
 /** @type {number} */
createjs.PlayPropsConfig.prototype.pan;
 /** @type {number} */
createjs.PlayPropsConfig.prototype.startTime;
 /** @type {number} */
createjs.PlayPropsConfig.prototype.volume;

/**
 * @param {?} value
 * @return {!createjs.PlayPropsConfig}
 */
createjs.PlayPropsConfig.create = function(value) {};

/**
 * @param {?} props
 * @return {!createjs.PlayPropsConfig}
 */
createjs.PlayPropsConfig.prototype.set = function(props) {};
/**
 * @extends {createjs.EventDispatcher}
 * @constructor
 * @struct
 */
createjs.Sound = function() {};
 /** @type {!Object} */
createjs.Sound.activePlugin;
 /** @type {!Array<?>} */
createjs.Sound.alternateExtensions;
 /** @type {string} */
createjs.Sound.defaultInterruptBehavior;
 /** @type {!Object} */
createjs.Sound.EXTENSION_MAP;
 /** @type {string} */
createjs.Sound.INTERRUPT_ANY;
 /** @type {string} */
createjs.Sound.INTERRUPT_EARLY;
 /** @type {string} */
createjs.Sound.INTERRUPT_LATE;
 /** @type {string} */
createjs.Sound.INTERRUPT_NONE;
 /** @type {string} */
createjs.Sound.PLAY_FAILED;
 /** @type {string} */
createjs.Sound.PLAY_FINISHED;
 /** @type {string} */
createjs.Sound.PLAY_INITED;
 /** @type {string} */
createjs.Sound.PLAY_INTERRUPTED;
 /** @type {string} */
createjs.Sound.PLAY_SUCCEEDED;
 /** @type {!Array<string>} */
createjs.Sound.SUPPORTED_EXTENSIONS;
 /** @type {boolean} */
createjs.Sound.muted;
 /** @type {number} */
createjs.Sound.volume;
 /** @type {?} */
createjs.Sound.capabilities;

/**
 * @param {string} src
 * @return {!createjs.AbstractSoundInstance}
 */
createjs.Sound.createInstance = function(src) {};

/**
 * @return {!Object}
 */
createjs.Sound.getCapabilities = function() {};

/**
 * @param {string} key
 * @return {(number|boolean)}
 */
createjs.Sound.getCapability = function(key) {};

/**
 * @return {boolean}
 */
createjs.Sound.getMute = function() {};

/**
 * @return {number}
 */
createjs.Sound.getVolume = function() {};

/**
 * @return {boolean}
 */
createjs.Sound.initializeDefaultPlugins = function() {};

/**
 * @return {boolean}
 */
createjs.Sound.isReady = function() {};

/**
 * @param {string} src
 * @return {boolean}
 */
createjs.Sound.loadComplete = function(src) {};

/**
 * @param {string} src
 * @param {?=} interrupt
 * @param {number=} delay
 * @param {number=} offset
 * @param {number=} loop
 * @param {number=} volume
 * @param {number=} pan
 * @return {!createjs.AbstractSoundInstance}
 */
createjs.Sound.play = function(src, interrupt, delay, offset, loop, volume, pan) {};

/**
 * @param {!Array<!Object>} manifest
 * @param {string} basePath
 * @return {!Object}
 */
createjs.Sound.registerManifest = function(manifest, basePath) {};

/**
 * @param {!Array<?>} plugins
 * @return {boolean}
 */
createjs.Sound.registerPlugins = function(plugins) {};

/**
 * @param {(string|!Object)} src
 * @param {string=} id
 * @param {(number|!Object)=} data
 * @param {string=} basePath
 * @return {!Object}
 */
createjs.Sound.registerSound = function(src, id, data, basePath) {};

/**
 * @param {!Array<!Object>} sounds
 * @param {string=} basePath
 * @return {!Array<!Object>}
 */
createjs.Sound.registerSounds = function(sounds, basePath) {};

/**
 * @return {void}
 */
createjs.Sound.removeAllSounds = function() {};

/**
 * @param {!Array<?>} manifest
 * @param {string} basePath
 * @return {!Object}
 */
createjs.Sound.removeManifest = function(manifest, basePath) {};

/**
 * @param {(string|!Object)} src
 * @param {string} basePath
 * @return {boolean}
 */
createjs.Sound.removeSound = function(src, basePath) {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
createjs.Sound.setMute = function(value) {};

/**
 * @param {number} value
 * @return {void}
 */
createjs.Sound.setVolume = function(value) {};

/**
 * @return {void}
 */
createjs.Sound.stop = function() {};

/**
 * @param {string} type
 * @param {function(!Object): boolean|function(!Object): void|{handleEvent: function(!Object): boolean}|{handleEvent: function(!Object): void}} listener
 * @param {boolean=} useCapture
 * @return {!Function|!Object}
 */
createjs.Sound.addEventListener = function(type, listener, useCapture) {};

/**
 * @param {(string|!Object|!createjs.Event)} eventObj
 * @param {!Object=} target
 * @return {boolean}
 */
createjs.Sound.dispatchEvent = function(eventObj, target) {};

/**
 * @param {string} type
 * @return {boolean}
 */
createjs.Sound.hasEventListener = function(type) {};

/**
 * @param {string} type
 * @param {function(!Object): boolean|function(!Object): void|{handleEvent: function(!Object): boolean}|{handleEvent: function(!Object): void}|!Function} listener
 * @param {boolean=} useCapture
 * @return {void}
 */
createjs.Sound.off = function(type, listener, useCapture) {};

/**
 * @param {string} type
 * @param {function(!Object): boolean|function(!Object): void|{handleEvent: function(!Object): boolean}|{handleEvent: function(!Object): void}} listener
 * @param {!Object=} scope
 * @param {boolean=} once
 * @param {?=} data
 * @param {boolean=} useCapture
 * @return {!Function|!Object}
 */
createjs.Sound.on = function(type, listener, scope, once, data, useCapture) {};

/**
 * @param {string=} type
 * @return {void}
 */
createjs.Sound.removeAllEventListeners = function(type) {};

/**
 * @param {string} type
 * @param {function(!Object): boolean|function(!Object): void|{handleEvent: function(!Object): boolean}|{handleEvent: function(!Object): void}|!Function} listener
 * @param {boolean=} useCapture
 * @return {void}
 */
createjs.Sound.removeEventListener = function(type, listener, useCapture) {};

/**
 * @return {string}
 */
createjs.Sound.toString = function() {};

/**
 * @param {string} type
 * @return {boolean}
 */
createjs.Sound.willTrigger = function(type) {};
/**
 * @constructor
 * @struct
 */
createjs.SoundJS = function() {};
 /** @type {string} */
createjs.SoundJS.buildDate;
 /** @type {string} */
createjs.SoundJS.version;
/**
 * @constructor
 * @struct
 */
createjs.WebAudioLoader = function() {};
 /** @type {!AudioContext} */
createjs.WebAudioLoader.context;

/**
 * @constructor
 * @struct
 */
createjs.WebAudioPlugin = function() {};
 /** @type {!AudioContext} */
createjs.WebAudioPlugin.context;
 /** @type {!AudioContext} */
createjs.WebAudioPlugin.prototype.context;
 /** @type {!DynamicsCompressorNode} */
createjs.WebAudioPlugin.prototype.dynamicsCompressorNode;
 /** @type {!GainNode} */
createjs.WebAudioPlugin.prototype.gainNode;

/**
 * @return {boolean}
 */
createjs.WebAudioPlugin.isSupported = function() {};

/**
 * @return {void}
 */
createjs.WebAudioPlugin.playEmptySound = function() {};

/**
 * @constructor
 * @struct
 * @param {string} src
 * @param {number} startTime
 * @param {number} duration
 * @param {!Object} playbackResource
 */
createjs.WebAudioSoundInstance = function(src, startTime, duration, playbackResource) {};
 /** @type {!AudioContext} */
createjs.WebAudioSoundInstance.context;
 /** @type {!AudioNode} */
createjs.WebAudioSoundInstance.destinationNode;
 /** @type {!GainNode} */
createjs.WebAudioSoundInstance.prototype.gainNode;
 /** @type {!PannerNode} */
createjs.WebAudioSoundInstance.prototype.panNode;
 /** @type {!AudioNode} */
createjs.WebAudioSoundInstance.prototype.sourceNode;
