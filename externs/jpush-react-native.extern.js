/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/jpush-react-native/index.d.ts:
/**
 * @constructor
 * @struct
 */
function JPush() {}

/**
 * Android only
 * 初始化JPush 必须先初始化才能执行其他操作
 * @return {void}
 */
JPush.initPush = function() {};

/**
 * Android
 * @return {void}
 */
JPush.stopPush = function() {};

/**
 * Android
 * @return {void}
 */
JPush.resumePush = function() {};

/**
 * Android
 * @return {void}
 */
JPush.clearAllNotifications = function() {};

/**
 * Android
 * @param {string} id
 * @return {void}
 */
JPush.clearNotificationById = function(id) {};

/**
 * Android
 * @param {?} cb
 * @return {void}
 */
JPush.getInfo = function(cb) {};

/**
 * @param {!Array<string>} tags
 * @param {?} successCallback
 * @param {?} failedCallback
 * @return {void}
 */
JPush.setTags = function(tags, successCallback, failedCallback) {};

/**
 * @param {string} alias
 * @param {?} successCallback
 * @param {?} failedCallback
 * @return {void}
 */
JPush.setAlias = function(alias, successCallback, failedCallback) {};

/**
 * @param {string} alias
 * @param {!Array<string>} tag
 * @param {?} successCallback
 * @param {?} failedCallback
 * @return {void}
 */
JPush.setAliasAndTags = function(alias, tag, successCallback, failedCallback) {};

/**
 * Android
 * @return {void}
 */
JPush.setStyleBasic = function() {};

/**
 * Android
 * @return {void}
 */
JPush.setStyleCustom = function() {};

/**
 * Android
 * @param {?} cb
 * @return {void}
 */
JPush.addReceiveCustomMsgListener = function(cb) {};

/**
 * Android
 * @param {?} cb
 * @return {void}
 */
JPush.removeReceiveCustomMsgListener = function(cb) {};

/**
 * Android
 * @param {?} cb
 * @return {void}
 */
JPush.addReceiveNotificationListener = function(cb) {};

/**
 * Android
 * @param {?} cb
 * @return {void}
 */
JPush.removeReceiveNotificationListener = function(cb) {};

/**
 * Android
 * @param {?} cb
 * @return {void}
 */
JPush.addReceiveOpenNotificationListener = function(cb) {};

/**
 * Android
 * @param {?} cb
 * @return {void}
 */
JPush.removeReceiveOpenNotificationListener = function(cb) {};

/**
 * Android
 * If device register succeed, the server will return registrationId
 * @param {?} cb
 * @return {void}
 */
JPush.addGetRegistrationIdListener = function(cb) {};

/**
 * @param {?} cb
 * @return {void}
 */
JPush.removeGetRegistrationIdListener = function(cb) {};

/**
 * iOS,  Android
 * @param {?} cb
 * @return {void}
 */
JPush.getRegistrationID = function(cb) {};

/**
 * iOS
 * @return {void}
 */
JPush.setupPush = function() {};

/**
 * iOS
 * @param {?} cb
 * @return {void}
 */
JPush.getAppkeyWithcallback = function(cb) {};

/**
 * @param {!Date} date
 * @param {string} alertBody
 * @param {number=} badge
 * @param {string=} alertAction
 * @param {string=} notificationKey
 * @param {?=} userInfo
 * @param {string=} soundName
 * @return {void}
 */
JPush.setLocalNotification = function(date, alertBody, badge, alertAction, notificationKey, userInfo, soundName) {};

/**
 * iOS
 * @param {number} badge
 * @param {?} callback
 * @return {void}
 */
JPush.setBadge = function(badge, callback) {};
