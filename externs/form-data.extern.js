/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/form-data/index.d.ts:

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: ExportAssignment in  */
/**
 * @extends {internal.Readable}
 * @constructor
 * @struct
 */
function FormData() {}

/**
 * @param {string} key
 * @param {?} value
 * @param {(string|!FormData.AppendOptions)=} options
 * @return {void}
 */
FormData.prototype.append = function(key, value, options) {};

/**
 * @return {!FormData.Headers}
 */
FormData.prototype.getHeaders = function() {};

/**
 * @param {(string|!FormData.SubmitOptions)} params
 * @param {function(!Error, !IncomingMessage): void=} callback
 * @return {!ClientRequest}
 */
FormData.prototype.submit = function(params, callback) {};

/**
 * @return {string}
 */
FormData.prototype.getBoundary = function() {};

/**
 * @param {function(!Error, number): void} callback
 * @return {void}
 */
FormData.prototype.getLength = function(callback) {};

/**
 * @return {number}
 */
FormData.prototype.getLengthSync = function() {};

/**
 * @return {boolean}
 */
FormData.prototype.hasKnownLength = function() {};
/**
 * @record
 * @struct
 */
FormData.Headers = function() {};

/* TODO: IndexSignature: FormData */
/**
 * @record
 * @struct
 */
FormData.AppendOptions = function() {};
 /** @type {(string|!FormData.Headers)} */
FormData.AppendOptions.prototype.header;
 /** @type {number} */
FormData.AppendOptions.prototype.knownLength;
 /** @type {string} */
FormData.AppendOptions.prototype.filename;
 /** @type {string} */
FormData.AppendOptions.prototype.filepath;
 /** @type {string} */
FormData.AppendOptions.prototype.contentType;
/**
 * @extends {RequestOptions}
 * @record
 * @struct
 */
FormData.SubmitOptions = function() {};
 /** @type {string} */
FormData.SubmitOptions.prototype.protocol;
