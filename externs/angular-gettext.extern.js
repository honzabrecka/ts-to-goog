/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/angular-gettext/index.d.ts:

/* TODO: ImportDeclaration in  */
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "angular"
/** @const */
tsickle_declare_module.angular.gettext = {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.angular.gettext.gettextCatalog = function() {};
 /** @type {boolean} */
tsickle_declare_module.angular.gettext.gettextCatalog.prototype.debug;
 /** @type {string} */
tsickle_declare_module.angular.gettext.gettextCatalog.prototype.debugPrefix;
 /** @type {boolean} */
tsickle_declare_module.angular.gettext.gettextCatalog.prototype.showTranslatedMarkers;
 /** @type {string} */
tsickle_declare_module.angular.gettext.gettextCatalog.prototype.translatedMarkerPrefix;
 /** @type {string} */
tsickle_declare_module.angular.gettext.gettextCatalog.prototype.translatedMarkerSuffix;
 /** @type {!Object} */
tsickle_declare_module.angular.gettext.gettextCatalog.prototype.strings;
 /** @type {string} */
tsickle_declare_module.angular.gettext.gettextCatalog.prototype.baseLanguage;

/**
 * Sets the current language and makes sure that all translations get updated correctly.
 * @param {string} lang
 * @return {void}
 */
tsickle_declare_module.angular.gettext.gettextCatalog.prototype.setCurrentLanguage = function(lang) {};

/**
 * Returns the current language.
 * @return {string}
 */
tsickle_declare_module.angular.gettext.gettextCatalog.prototype.getCurrentLanguage = function() {};

/**
 * Processes an object of string definitions. More details https://angular-gettext.rocketeer.be/dev-guide/manual-setstrings/
 * @param {string} language A language code.
 * @param {!Object<string,(string|!Array<string>)>} strings A dictionary of strings. The format of this dictionary is:
 *                   - Keys: Singular English strings (as defined in the source files)
 *                   - Values: Either a single string for signular-only strings or an array of plural forms.
 * @return {void}
 */
tsickle_declare_module.angular.gettext.gettextCatalog.prototype.setStrings = function(language, strings) {};

/**
 * Get the correct pluralized (but untranslated) string for the value of n.
 * @param {string} string
 * @param {number} n
 * @return {string}
 */
tsickle_declare_module.angular.gettext.gettextCatalog.prototype.getStringForm = function(string, n) {};

/**
 * Translate a string with the given scope. Uses Angular.JS interpolation, so something like this will do what you expect:
 * var hello = gettextCatalog.getString("Hello {{name}}!", { name: "Ruben" });
 * // var hello will be "Hallo Ruben!" in Dutch.
 * The scope parameter is optional: pass null (or don't pass anything) if you're not using it: this skips interpolation and is a lot faster.
 * @param {string} string
 * @param {?=} scope
 * @param {string=} context
 * @return {string}
 */
tsickle_declare_module.angular.gettext.gettextCatalog.prototype.getString = function(string, scope, context) {};

/**
 * Translate a plural string with the given context.
 * @param {number} n
 * @param {string} string
 * @param {string} stringPlural
 * @param {?=} context
 * @return {string}
 */
tsickle_declare_module.angular.gettext.gettextCatalog.prototype.getPlural = function(n, string, stringPlural, context) {};

/**
 * Load a set of translation strings from a given URL.This should be a JSON catalog generated with grunt-angular-gettext. More details https://angular-gettext.rocketeer.be/dev-guide/lazy-loading/
 * @param {string} url
 * @return {!angular.IHttpPromise<?>}
 */
tsickle_declare_module.angular.gettext.gettextCatalog.prototype.loadRemote = function(url) {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.angular.gettext.gettextFunction = function() {};

/* TODO: CallSignature: tsickle_declare_module.angular.gettext */
