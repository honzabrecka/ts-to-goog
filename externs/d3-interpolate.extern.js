/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/d3-interpolate/index.d.ts:

/* TODO: ImportDeclaration in  */
/**
 * @record
 * @struct
 */
function ZoomInterpolator() {}

/* TODO: CallSignature:  */
 /** @type {number} */
ZoomInterpolator.prototype.duration;
/**
 * @record
 * @struct
 */
function ColorGammaInterpolationFactory() {}

/* TODO: CallSignature:  */

/**
 * @param {number} g
 * @return {?}
 */
ColorGammaInterpolationFactory.prototype.gamma = function(g) {};

/** @typedef {!Array<?>} */
var ZoomView;

/**
 * @template U
 * @param {?|(number|?)|!Date|(string|?)|!Array<?>} a
 * @param {null|number|?|!Date|string} b
 * @return {?}
 */
function interpolate(a, b) {}

/**
 * @param {(number|?)} a
 * @param {(number|?)} b
 * @return {?}
 */
function interpolateNumber(a, b) {}

/**
 * @param {(number|?)} a
 * @param {(number|?)} b
 * @return {?}
 */
function interpolateRound(a, b) {}

/**
 * @param {(string|?)} a
 * @param {(string|?)} b
 * @return {?}
 */
function interpolateString(a, b) {}

/**
 * @param {!Date} a
 * @param {!Date} b
 * @return {?}
 */
function interpolateDate(a, b) {}

/**
 * @template A
 * @param {!Array<?>} a
 * @param {?} b
 * @return {?}
 */
function interpolateArray(a, b) {}

/**
 * @template U
 * @param {?} a
 * @param {?} b
 * @return {?}
 */
function interpolateObject(a, b) {}

/**
 * @param {string} a
 * @param {string} b
 * @return {?}
 */
function interpolateTransformCss(a, b) {}

/**
 * @param {string} a
 * @param {string} b
 * @return {?}
 */
function interpolateTransformSvg(a, b) {}

/**
 * Create Interpolator for zoom views
 * @param {!Array<?>} a
 * @param {!Array<?>} b
 * @return {?}
 */
function interpolateZoom(a, b) {}

/**
 * @template T
 * @param {?} interpolator
 * @param {number} n
 * @return {!Array<?>}
 */
function quantize(interpolator, n) {}
 /** @type {?} */
var interpolateRgb;

/**
 * @param {!Array<(string|?)>} colors
 * @return {?}
 */
function interpolateRgbBasis(colors) {}

/**
 * @param {!Array<(string|?)>} colors
 * @return {?}
 */
function interpolateRgbBasisClosed(colors) {}

/**
 * @param {(string|?)} a
 * @param {(string|?)} b
 * @return {?}
 */
function interpolateHsl(a, b) {}

/**
 * @param {(string|?)} a
 * @param {(string|?)} b
 * @return {?}
 */
function interpolateHslLong(a, b) {}

/**
 * @param {(string|?)} a
 * @param {(string|?)} b
 * @return {?}
 */
function interpolateLab(a, b) {}

/**
 * @param {(string|?)} a
 * @param {(string|?)} b
 * @return {?}
 */
function interpolateHcl(a, b) {}

/**
 * @param {(string|?)} a
 * @param {(string|?)} b
 * @return {?}
 */
function interpolateHclLong(a, b) {}
 /** @type {?} */
var interpolateCubehelix;
 /** @type {?} */
var interpolateCubehelixLong;

/**
 * @param {!Array<number>} splineNodes
 * @return {?}
 */
function interpolateBasis(splineNodes) {}

/**
 * @param {!Array<number>} splineNodes
 * @return {?}
 */
function interpolateBasisClosed(splineNodes) {}
