/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/java/index.d.ts:
 /** @type {!NodeJavaCore.NodeAPI} */
var NodeJavaCore;

/* TODO: ExportAssignment in  */
/**
 * @record
 * @struct
 */
NodeJavaCore.Callback = function() {};

/* TODO: CallSignature: NodeJavaCore */
/**
 * @record
 * @struct
 */
NodeJavaCore.Promisify = function() {};

/* TODO: CallSignature: NodeJavaCore */
/**
 * @record
 * @struct
 */
NodeJavaCore.AsyncOptions = function() {};
 /** @type {string} */
NodeJavaCore.AsyncOptions.prototype.syncSuffix;
 /** @type {string} */
NodeJavaCore.AsyncOptions.prototype.asyncSuffix;
 /** @type {string} */
NodeJavaCore.AsyncOptions.prototype.promiseSuffix;
 /** @type {!NodeJavaCore.Promisify} */
NodeJavaCore.AsyncOptions.prototype.promisify;
/**
 * @record
 * @struct
 */
NodeJavaCore.ProxyFunctions = function() {};

/* TODO: IndexSignature: NodeJavaCore */
/**
 * @record
 * @struct
 */
NodeJavaCore.NodeAPI = function() {};
 /** @type {!Array<string>} */
NodeJavaCore.NodeAPI.prototype.classpath;
 /** @type {!Array<string>} */
NodeJavaCore.NodeAPI.prototype.options;
 /** @type {!NodeJavaCore.AsyncOptions} */
NodeJavaCore.NodeAPI.prototype.asyncOptions;
 /** @type {string} */
NodeJavaCore.NodeAPI.prototype.nativeBindingLocation;

/**
 * @param {?} instance
 * @param {string} className
 * @param {string} methodName
 * @param {!Array<?>} args
 * @param {!NodeJavaCore.Callback<?>} callback
 * @return {void}
 */
NodeJavaCore.NodeAPI.prototype.callMethod = function(instance, className, methodName, args, callback) {};

/**
 * @param {?} instance
 * @param {string} className
 * @param {string} methodName
 * @param {...?} args
 * @return {?}
 */
NodeJavaCore.NodeAPI.prototype.callMethodSync = function(instance, className, methodName, args) {};

/**
 * @param {string} className
 * @param {string} methodName
 * @param {...?} args
 * @return {void}
 */
NodeJavaCore.NodeAPI.prototype.callStaticMethod = function(className, methodName, args) {};

/**
 * @param {string} className
 * @param {string} methodName
 * @param {...?} args
 * @return {?}
 */
NodeJavaCore.NodeAPI.prototype.callStaticMethodSync = function(className, methodName, args) {};

/**
 * @param {string} className
 * @param {string} fieldName
 * @return {?}
 */
NodeJavaCore.NodeAPI.prototype.getStaticFieldValue = function(className, fieldName) {};

/**
 * @param {string} className
 * @param {string} fieldName
 * @param {?} newValue
 * @return {void}
 */
NodeJavaCore.NodeAPI.prototype.setStaticFieldValue = function(className, fieldName, newValue) {};

/**
 * @param {?} javaObject
 * @param {string} className
 * @return {boolean}
 */
NodeJavaCore.NodeAPI.prototype.instanceOf = function(javaObject, className) {};

/**
 * @param {function(!NodeJavaCore.Callback<void>): void} before
 * @param {function(!NodeJavaCore.Callback<void>): void=} after
 * @return {void}
 */
NodeJavaCore.NodeAPI.prototype.registerClient = function(before, after) {};

/**
 * @param {function(): !Promise<void>} beforeP
 * @param {function(): !Promise<void>=} afterP
 * @return {void}
 */
NodeJavaCore.NodeAPI.prototype.registerClientP = function(beforeP, afterP) {};

/**
 * @param {!NodeJavaCore.Callback<void>=} done
 * @return {void|!Promise<void>}
 */
NodeJavaCore.NodeAPI.prototype.ensureJvm = function(done) {};

/**
 * @return {boolean}
 */
NodeJavaCore.NodeAPI.prototype.isJvmCreated = function() {};

/**
 * @param {number} val
 * @return {?}
 */
NodeJavaCore.NodeAPI.prototype.newByte = function(val) {};

/**
 * @param {(string|number)} val
 * @return {?}
 */
NodeJavaCore.NodeAPI.prototype.newChar = function(val) {};

/**
 * @param {number} val
 * @return {?}
 */
NodeJavaCore.NodeAPI.prototype.newDouble = function(val) {};

/**
 * @param {number} val
 * @return {?}
 */
NodeJavaCore.NodeAPI.prototype.newShort = function(val) {};

/**
 * @param {number} val
 * @return {?}
 */
NodeJavaCore.NodeAPI.prototype.newLong = function(val) {};

/**
 * @param {number} val
 * @return {?}
 */
NodeJavaCore.NodeAPI.prototype.newFloat = function(val) {};

/**
 * @param {string} className
 * @return {?}
 */
NodeJavaCore.NodeAPI.prototype.import = function(className) {};

/**
 * @param {string} className
 * @param {...?} args
 * @return {void}
 */
NodeJavaCore.NodeAPI.prototype.newInstance = function(className, args) {};

/**
 * @param {string} className
 * @param {...?} args
 * @return {?}
 */
NodeJavaCore.NodeAPI.prototype.newInstanceSync = function(className, args) {};

/**
 * @param {string} className
 * @param {...?} args
 * @return {!Promise<?>}
 */
NodeJavaCore.NodeAPI.prototype.newInstanceP = function(className, args) {};

/**
 * @template T
 * @param {string} className
 * @param {!Array<?>} arg
 * @return {?}
 */
NodeJavaCore.NodeAPI.prototype.newArray = function(className, arg) {};

/**
 * @return {?}
 */
NodeJavaCore.NodeAPI.prototype.getClassLoader = function() {};

/**
 * @param {string} interfaceName
 * @param {!NodeJavaCore.ProxyFunctions} functions
 * @return {?}
 */
NodeJavaCore.NodeAPI.prototype.newProxy = function(interfaceName, functions) {};
