/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/react-router-redux v3/index.d.ts:

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */
 /** @type {string} */
var TRANSITION;
 /** @type {string} */
var UPDATE_LOCATION;
 /** @type {?} */
var push;
 /** @type {?} */
var replace;
 /** @type {?} */
var go;
 /** @type {?} */
var goBack;
 /** @type {?} */
var goForward;
 /** @type {?} */
var routeActions;

/** @typedef {(string|?)} */
var LocationDescriptor;

/** @typedef {?} */
var PushAction;

/** @typedef {?} */
var ReplaceAction;

/** @typedef {?} */
var GoAction;

/** @typedef {?} */
var GoForwardAction;

/** @typedef {?} */
var GoBackAction;
/**
 * @record
 * @struct
 */
function RouteActions() {}
 /** @type {?} */
RouteActions.prototype.push;
 /** @type {?} */
RouteActions.prototype.replace;
 /** @type {?} */
RouteActions.prototype.go;
 /** @type {?} */
RouteActions.prototype.goForward;
 /** @type {?} */
RouteActions.prototype.goBack;
/**
 * @extends {Middleware}
 * @record
 * @struct
 */
function HistoryMiddleware() {}

/**
 * @param {?} store
 * @param {!Function=} selectLocationState
 * @return {void}
 */
HistoryMiddleware.prototype.listenForReplays = function(store, selectLocationState) {};

/**
 * @return {void}
 */
HistoryMiddleware.prototype.unsubscribe = function() {};

/**
 * @param {?=} state
 * @param {?=} options
 * @return {?}
 */
function routeReducer(state, options) {}

/**
 * @param {?} history
 * @return {?}
 */
function syncHistory(history) {}
