/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/watch/index.d.ts:

/* TODO: ImportEqualsDeclaration in  */

/* TODO: ImportEqualsDeclaration in  */

/** @typedef {(!Stats|?)} */
var FileOrFiles;
/**
 * @record
 * @struct
 */
function Monitor() {}
 /** @type {?} */
Monitor.prototype.files;

/**
 * @param {string|(string|symbol)} event
 * @param {?} listener
 * @return {?}
 */
Monitor.prototype.on = function(event, listener) {};

/**
 * @return {void}
 */
Monitor.prototype.stop = function() {};
/**
 * @record
 * @struct
 */
function Options() {}
 /** @type {boolean} */
Options.prototype.ignoreDotFiles;
 /** @type {number} */
Options.prototype.interval;
 /** @type {boolean} */
Options.prototype.ignoreUnreadableDir;
 /** @type {boolean} */
Options.prototype.ignoreNotPermitted;
 /** @type {boolean} */
Options.prototype.ignoreDirectoryPattern;

/**
 * @param {string} path
 * @param {!Stats} stat
 * @return {boolean}
 */
Options.prototype.filter = function(path, stat) {};

/**
 * @param {string} root
 * @param {?} callback_or_options
 * @param {?=} callback
 * @return {void}
 */
function watchTree(root, callback_or_options, callback) {}

/**
 * @param {string} root
 * @return {void}
 */
function unwatchTree(root) {}

/**
 * @param {string} root
 * @param {?} callback_or_options
 * @param {?=} callback
 * @return {void}
 */
function createMonitor(root, callback_or_options, callback) {}
