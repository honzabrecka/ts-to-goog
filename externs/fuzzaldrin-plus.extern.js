/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/fuzzaldrin-plus/index.d.ts:

/* TODO: NamespaceExportDeclaration in  */
/**
 * @record
 * @struct
 */
function IQueryOptions() {}
 /** @type {string} */
IQueryOptions.prototype.pathSeparator;
 /** @type {!RegExp} */
IQueryOptions.prototype.optCharRegEx;
/**
 * @extends {IQueryOptions}
 * @record
 * @struct
 */
function IScoringOptions() {}
 /** @type {boolean} */
IScoringOptions.prototype.allowErrors;
 /** @type {boolean} */
IScoringOptions.prototype.isPath;
 /** @type {boolean} */
IScoringOptions.prototype.useExtensionBonus;
/**
 * @extends {IScoringOptions}
 * @record
 * @struct
 */
function IFilterOptions() {}
 /** @type {string} */
IFilterOptions.prototype.key;
 /** @type {number} */
IFilterOptions.prototype.maxResults;

/** @typedef {?} */
var PreparedQuery;

/**
 * @template T
 * @param {!Array<?>} data
 * @param {string} query
 * @param {?=} options
 * @return {!Array<?>}
 */
function filter(data, query, options) {}

/**
 * @param {string} str
 * @param {string} query
 * @param {?=} preparedQuery
 * @param {?=} options
 * @return {number}
 */
function score(str, query, preparedQuery, options) {}

/**
 * @param {string} str
 * @param {string} query
 * @param {?=} preparedQuery
 * @param {?=} options
 * @return {!Array<number>}
 */
function match(str, query, preparedQuery, options) {}

/**
 * @param {string} query
 * @param {?=} options
 * @return {?}
 */
function prepQuery(query, options) {}
