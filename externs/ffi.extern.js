/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/ffi/index.d.ts:

/* TODO: ImportEqualsDeclaration in  */

/* TODO: ImportEqualsDeclaration in  */
 /** @type {?} */
var Library;

/**
 * Get value of errno.
 * @return {number}
 */
function errno() {}
/**
 * @extends {Type}
 * @record
 * @struct
 */
function Function() {}
 /** @type {?} */
Function.prototype.retType;
 /** @type {!Array<?>} */
Function.prototype.argTypes;
 /** @type {?} */
Function.prototype.ffi_type;
 /** @type {number} */
Function.prototype.abi;

/**
 * Get a `Callback` pointer of this function type.
 * @param {?} fn
 * @return {?}
 */
Function.prototype.toPointer = function(fn) {};

/**
 * Get a `ForeignFunction` of this function type.
 * @param {?} buf
 * @return {?}
 */
Function.prototype.toFunction = function(buf) {};
 /** @type {?} */
var Function;
/**
 * @record
 * @struct
 */
function ForeignFunction() {}

/* TODO: CallSignature:  */

/**
 * @param {...?} args
 * @return {void}
 */
ForeignFunction.prototype.async = function(args) {};
 /** @type {?} */
var ForeignFunction;
/**
 * @record
 * @struct
 */
function VariadicForeignFunction() {}

/* TODO: CallSignature:  */
 /** @type {?} */
VariadicForeignFunction.prototype.returnType;
 /** @type {?} */
var VariadicForeignFunction;
/**
 * @record
 * @struct
 */
function DynamicLibrary() {}

/**
 * Close library, returns the result of the `dlclose` system function.
 * @return {number}
 */
DynamicLibrary.prototype.close = function() {};

/**
 * Get a symbol from this library.
 * @param {string} symbol
 * @return {?}
 */
DynamicLibrary.prototype.get = function(symbol) {};

/**
 * Get the result of the `dlerror` system function.
 * @return {string}
 */
DynamicLibrary.prototype.error = function() {};
 /** @type {?} */
var DynamicLibrary;
 /** @type {?} */
var Callback;
 /** @type {?} */
var ffiType;
 /** @type {?} */
var CIF;
 /** @type {?} */
var CIF_var;
 /** @type {boolean} */
var HAS_OBJC;
 /** @type {?} */
var FFI_TYPES;
 /** @type {number} */
var FFI_OK;
 /** @type {number} */
var FFI_BAD_TYPEDEF;
 /** @type {number} */
var FFI_BAD_ABI;
 /** @type {number} */
var FFI_DEFAULT_ABI;
 /** @type {number} */
var FFI_FIRST_ABI;
 /** @type {number} */
var FFI_LAST_ABI;
 /** @type {number} */
var FFI_SYSV;
 /** @type {number} */
var FFI_UNIX64;
 /** @type {number} */
var RTLD_LAZY;
 /** @type {number} */
var RTLD_NOW;
 /** @type {number} */
var RTLD_LOCAL;
 /** @type {number} */
var RTLD_GLOBAL;
 /** @type {number} */
var RTLD_NOLOAD;
 /** @type {number} */
var RTLD_NODELETE;
 /** @type {?} */
var RTLD_NEXT;
 /** @type {?} */
var RTLD_DEFAULT;
 /** @type {string} */
var LIB_EXT;
 /** @type {?} */
var FFI_TYPE;
 /** @type {?} */
var types;
