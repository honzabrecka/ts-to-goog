/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/pug/index.d.ts:
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "pug"
/** @const */
tsickle_declare_module.pug = {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.pug.Options = function() {};
 /** @type {string} */
tsickle_declare_module.pug.Options.prototype.filename;
 /** @type {string} */
tsickle_declare_module.pug.Options.prototype.basedir;
 /** @type {string} */
tsickle_declare_module.pug.Options.prototype.doctype;
 /** @type {(string|boolean)} */
tsickle_declare_module.pug.Options.prototype.pretty;
 /** @type {?} */
tsickle_declare_module.pug.Options.prototype.filters;
 /** @type {boolean} */
tsickle_declare_module.pug.Options.prototype.self;
 /** @type {boolean} */
tsickle_declare_module.pug.Options.prototype.debug;
 /** @type {boolean} */
tsickle_declare_module.pug.Options.prototype.compileDebug;
 /** @type {!Array<string>} */
tsickle_declare_module.pug.Options.prototype.globals;
 /** @type {boolean} */
tsickle_declare_module.pug.Options.prototype.cache;
 /** @type {boolean} */
tsickle_declare_module.pug.Options.prototype.inlineRuntimeFunctions;
 /** @type {string} */
tsickle_declare_module.pug.Options.prototype.name;

/**
 * Compile a Pug template to a function which can be rendered multiple times with different locals.
 * @param {string} template
 * @param {!Options=} options
 * @return {function(!LocalsObject): string}
 */
tsickle_declare_module.pug.compile = function(template, options) {};

/**
 * Compile a Pug template from a file to a function which can be rendered multiple times with different locals.
 * @param {string} path
 * @param {!Options=} options
 * @return {function(!LocalsObject): string}
 */
tsickle_declare_module.pug.compileFile = function(path, options) {};

/**
 * Compile a Pug template to a string of JavaScript that can be used client side along with the Pug runtime.
 * @param {string} template
 * @param {!Options=} options
 * @return {string}
 */
tsickle_declare_module.pug.compileClient = function(template, options) {};

/**
 * Compile a Pug template to an object of the form:
 * {
 *   'body': 'function (locals) {...}',
 *   'dependencies': ['filename.pug']
 * }
 * that can be used client side along with the Pug runtime.
 * You should only use this method if you need dependencies to implement something like watching for changes to the Pug files.
 * @param {string} template
 * @param {!Options=} options
 * @return {{body: string, dependencies: !Array<string>}}
 */
tsickle_declare_module.pug.compileClientWithDependenciesTracked = function(template, options) {};

/**
 * Compile a Pug template file to a string of JavaScript that can be used client side along with the Pug runtime.
 * @param {string} path
 * @param {!Options=} options
 * @return {string}
 */
tsickle_declare_module.pug.compileFileClient = function(path, options) {};

/**
 * Compile a Pug template and render it without locals to html string.
 * Compile a Pug template and render it with locals to html string.
 * Compile a Pug template and render it without locals to html string.
 * Compile a Pug template and render it with locals to html string.
 * @param {string} template
 * @param {?|function(!Error, string): void=} options_or_callback
 * @param {function(!Error, string): void=} callback
 * @return {string|void}
 */
tsickle_declare_module.pug.render = function(template, options_or_callback, callback) {};

/**
 * Compile a Pug template from a file and render it without locals to html string.
 * Compile a Pug template from a file and render it with locals to html string.
 * Compile a Pug template from a file and render it without locals to html string.
 * Compile a Pug template from a file and render it with locals to html string.
 * @param {string} path
 * @param {?|function(!Error, string): void=} options_or_callback
 * @param {function(!Error, string): void=} callback
 * @return {string|void}
 */
tsickle_declare_module.pug.renderFile = function(path, options_or_callback, callback) {};

/** @typedef {function(!LocalsObject): string} */
tsickle_declare_module.pug.compileTemplate;
/**
 * @record
 * @struct
 */
tsickle_declare_module.pug.LocalsObject = function() {};

/* TODO: IndexSignature: tsickle_declare_module.pug */
