/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/client-sessions/index.d.ts:

/* TODO: ImportDeclaration in  */
/** @const */
var client_sessions = {};

/** @typedef {function(!Error): void} */
client_sessions.NextFunction;

/** @typedef {function(?, ?, function(!Error): void): ?} */
client_sessions.RequestHandler;
/**
 * @record
 * @struct
 */
client_sessions.SessionOptions = function() {};
 /** @type {string} */
client_sessions.SessionOptions.prototype.secret;
 /** @type {string} */
client_sessions.SessionOptions.prototype.cookieName;
 /** @type {number} */
client_sessions.SessionOptions.prototype.duration;
 /** @type {number} */
client_sessions.SessionOptions.prototype.activeDuration;
 /** @type {string} */
client_sessions.SessionOptions.prototype.requestKey;
 /** @type {!Cookies.SetOption} */
client_sessions.SessionOptions.prototype.cookie;
/**
 * @record
 * @struct
 */
client_sessions.DecodeResult = function() {};
 /** @type {?} */
client_sessions.DecodeResult.prototype.content;
 /** @type {number} */
client_sessions.DecodeResult.prototype.createdAt;
 /** @type {number} */
client_sessions.DecodeResult.prototype.duration;
/**
 * @record
 * @struct
 */
client_sessions.ComputeHmacOptions = function() {};
 /** @type {string} */
client_sessions.ComputeHmacOptions.prototype.signatureAlgorithm;
 /** @type {?} */
client_sessions.ComputeHmacOptions.prototype.signatureKey;
/**
 * @record
 * @struct
 */
client_sessions.Util = function() {};

/**
 * @param {?} options
 * @param {string} iv
 * @param {string} ciphertext
 * @param {number} duration
 * @param {number} createdAt
 * @return {?}
 */
client_sessions.Util.prototype.computeHmac = function(options, iv, ciphertext, duration, createdAt) {};

/**
 * @param {!client_sessions.SessionOptions} options
 * @param {?} content
 * @param {number=} duration
 * @param {number=} createdAt
 * @return {string}
 */
client_sessions.Util.prototype.encode = function(options, content, duration, createdAt) {};

/**
 * @param {!client_sessions.SessionOptions} options
 * @param {string} encoded
 * @return {!client_sessions.DecodeResult}
 */
client_sessions.Util.prototype.decode = function(options, encoded) {};
/**
 * @record
 * @struct
 */
client_sessions.Sessions = function() {};

/* TODO: CallSignature: client_sessions */
 /** @type {!client_sessions.Util} */
client_sessions.Sessions.prototype.util;
 /** @type {!client_sessions.Sessions} */
var client_sessions;

/* TODO: ExportAssignment in  */

/* TODO: NamespaceExportDeclaration in  */
