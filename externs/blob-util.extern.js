/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/blob-util/index.d.ts:

/**
 * @param {!Array<?>} parts
 * @param {?=} options
 * @return {!Blob}
 */
function createBlob(parts, options) {}

/**
 * @param {!Blob} blob
 * @return {string}
 */
function createObjectURL(blob) {}

/**
 * @param {string} url
 * @return {void}
 */
function revokeObjectURL(url) {}

/**
 * @param {!Blob} blob
 * @return {!Promise<string>}
 */
function blobToBinaryString(blob) {}

/**
 * @param {string} binary
 * @param {string=} type
 * @return {!Promise<!Blob>}
 */
function binaryStringToBlob(binary, type) {}

/**
 * @param {!Blob} blob
 * @return {!Promise<string>}
 */
function blobToBase64String(blob) {}

/**
 * @param {string} base64
 * @param {string=} type
 * @return {!Promise<!Blob>}
 */
function base64StringToBlob(base64, type) {}

/**
 * @param {string} dataURL
 * @return {!Promise<!Blob>}
 */
function dataURLToBlob(dataURL) {}

/**
 * @param {string} src
 * @param {string=} type
 * @param {string=} crossOrigin
 * @return {!Promise<string>}
 */
function imgSrcToDataURL(src, type, crossOrigin) {}

/**
 * @param {!HTMLCanvasElement} canvas
 * @param {string=} type
 * @return {!Promise<!Blob>}
 */
function canvasToBlob(canvas, type) {}

/**
 * @param {string} src
 * @param {string=} type
 * @param {string=} crossOrigin
 * @return {!Promise<!Blob>}
 */
function imgSrcToBlob(src, type, crossOrigin) {}

/**
 * @param {!ArrayBuffer} arrayBuff
 * @param {string=} type
 * @return {!Promise<!Blob>}
 */
function arrayBufferToBlob(arrayBuff, type) {}

/**
 * @param {!Blob} blob
 * @return {!Promise<!ArrayBuffer>}
 */
function blobToArrayBuffer(blob) {}
