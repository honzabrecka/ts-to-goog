/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/rtree/index.d.ts:
/**
 * @record
 * @struct
 */
function Rectangle() {}
 /** @type {number} */
Rectangle.prototype.x;
 /** @type {number} */
Rectangle.prototype.y;
 /** @type {number} */
Rectangle.prototype.w;
 /** @type {number} */
Rectangle.prototype.h;
/**
 * @record
 * @struct
 */
function RTreeStatic() {}

/**
 * @param {!Rectangle} bounds
 * @param {!Object} element
 * @return {boolean}
 */
RTreeStatic.prototype.insert = function(bounds, element) {};

/**
 * @param {!Rectangle} area
 * @param {!Object=} element
 * @return {!Array<?>}
 */
RTreeStatic.prototype.remove = function(area, element) {};

/**
 * @param {?} geoJSON
 * @return {void}
 */
RTreeStatic.prototype.geoJSON = function(geoJSON) {};

/**
 * @param {?} arg1
 * @param {?=} arg2
 * @param {number=} arg3
 * @param {number=} arg4
 * @return {!Array<?>}
 */
RTreeStatic.prototype.bbox = function(arg1, arg2, arg3, arg4) {};

/**
 * @param {!Rectangle} area
 * @param {boolean=} return_node
 * @param {!Array<?>=} return_array
 * @return {!Array<?>}
 */
RTreeStatic.prototype.search = function(area, return_node, return_array) {};
/**
 * @record
 * @struct
 */
function RTreeFactory() {}

/* TODO: CallSignature:  */
 /** @type {!RTreeFactory} */
var RTree;
