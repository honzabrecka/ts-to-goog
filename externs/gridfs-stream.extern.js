/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/gridfs-stream/index.d.ts:
/** @const */
var GridFSStream = {};
/**
 * @record
 * @struct
 */
GridFSStream.Range = function() {};
 /** @type {number} */
GridFSStream.Range.prototype.startPos;
 /** @type {number} */
GridFSStream.Range.prototype.endPos;
/**
 * @record
 * @struct
 */
GridFSStream.Options = function() {};
 /** @type {string} */
GridFSStream.Options.prototype._id;
 /** @type {string} */
GridFSStream.Options.prototype.filename;
 /** @type {string} */
GridFSStream.Options.prototype.mode;
 /** @type {!GridFSStream.Range} */
GridFSStream.Options.prototype.range;
 /** @type {number} */
GridFSStream.Options.prototype.chunkSize;
 /** @type {string} */
GridFSStream.Options.prototype.content_type;
 /** @type {string} */
GridFSStream.Options.prototype.root;
 /** @type {?} */
GridFSStream.Options.prototype.metadata;
/**
 * @extends {NodeJS.WritableStream}
 * @record
 * @struct
 */
GridFSStream.WriteStream = function() {};
 /** @type {boolean} */
GridFSStream.WriteStream.prototype.writable;
 /** @type {string} */
GridFSStream.WriteStream.prototype.name;
 /** @type {string} */
GridFSStream.WriteStream.prototype.id;
 /** @type {!GridFSStream.Options} */
GridFSStream.WriteStream.prototype.options;
 /** @type {string} */
GridFSStream.WriteStream.prototype.mode;
/**
 * @extends {NodeJS.ReadableStream}
 * @record
 * @struct
 */
GridFSStream.ReadStream = function() {};
 /** @type {boolean} */
GridFSStream.ReadStream.prototype.readable;
 /** @type {boolean} */
GridFSStream.ReadStream.prototype.paused;

/* TODO: ImportEqualsDeclaration in  */

/**
 * @param {?} db
 * @param {?} mongo
 * @return {!g.Grid}
 */
function g(db, mongo) {}
/**
 * @constructor
 * @struct
 */
g.Grid = function() {};
 /** @type {?} */
g.Grid.prototype.files;
 /** @type {string} */
g.Grid.prototype.curCol;

/**
 * @param {string=} name
 * @return {?}
 */
g.Grid.prototype.collection = function(name) {};

/**
 * @param {!GridFSStream.Options|string=} options
 * @return {!GridFSStream.WriteStream}
 */
g.Grid.prototype.createWriteStream = function(options) {};

/**
 * @param {!GridFSStream.Options|string=} options
 * @return {!GridFSStream.ReadStream}
 */
g.Grid.prototype.createReadStream = function(options) {};

/**
 * @param {!GridFSStream.Options} options
 * @param {function(!Error): void} callback
 * @return {void}
 */
g.Grid.prototype.remove = function(options, callback) {};

/**
 * @param {!GridFSStream.Options} options
 * @param {function(!Error, boolean): void} callback
 * @return {void}
 */
g.Grid.prototype.exist = function(options, callback) {};

/**
 * @param {!GridFSStream.Options} options
 * @param {function(!Error, ?): void} callback
 * @return {void}
 */
g.Grid.prototype.findOne = function(options, callback) {};

/* TODO: ExportAssignment in  */
