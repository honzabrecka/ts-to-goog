/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/royalslider/index.d.ts:
/** @const */
var RoyalSlider = {};
/**
 * @record
 * @struct
 */
RoyalSlider.RoyalSliderThumbsOptions = function() {};
 /** @type {boolean} */
RoyalSlider.RoyalSliderThumbsOptions.prototype.drag;
 /** @type {boolean} */
RoyalSlider.RoyalSliderThumbsOptions.prototype.touch;
 /** @type {string} */
RoyalSlider.RoyalSliderThumbsOptions.prototype.orientation;
 /** @type {boolean} */
RoyalSlider.RoyalSliderThumbsOptions.prototype.arrows;
 /** @type {number} */
RoyalSlider.RoyalSliderThumbsOptions.prototype.spacing;
 /** @type {boolean} */
RoyalSlider.RoyalSliderThumbsOptions.prototype.arrowsAutoHide;
 /** @type {boolean} */
RoyalSlider.RoyalSliderThumbsOptions.prototype.autoCenter;
 /** @type {number} */
RoyalSlider.RoyalSliderThumbsOptions.prototype.transitionSpeed;
 /** @type {boolean} */
RoyalSlider.RoyalSliderThumbsOptions.prototype.fitInViewport;
 /** @type {boolean} */
RoyalSlider.RoyalSliderThumbsOptions.prototype.firstMargin;
 /** @type {?<!HTMLElement>} */
RoyalSlider.RoyalSliderThumbsOptions.prototype.arrowLeft;
 /** @type {?<!HTMLElement>} */
RoyalSlider.RoyalSliderThumbsOptions.prototype.arrowRight;
 /** @type {boolean} */
RoyalSlider.RoyalSliderThumbsOptions.prototype.appendSpan;
/**
 * @record
 * @struct
 */
RoyalSlider.RoyalSliderFullscreenOptions = function() {};
 /** @type {boolean} */
RoyalSlider.RoyalSliderFullscreenOptions.prototype.enabled;
 /** @type {boolean} */
RoyalSlider.RoyalSliderFullscreenOptions.prototype.keyboardNav;
 /** @type {boolean} */
RoyalSlider.RoyalSliderFullscreenOptions.prototype.buttonFS;
 /** @type {boolean} */
RoyalSlider.RoyalSliderFullscreenOptions.prototype.nativeFS;
/**
 * @record
 * @struct
 */
RoyalSlider.RoyalSliderDeeplinkingOptions = function() {};
 /** @type {boolean} */
RoyalSlider.RoyalSliderDeeplinkingOptions.prototype.enabled;
 /** @type {boolean} */
RoyalSlider.RoyalSliderDeeplinkingOptions.prototype.change;
 /** @type {string} */
RoyalSlider.RoyalSliderDeeplinkingOptions.prototype.prefix;
/**
 * @record
 * @struct
 */
RoyalSlider.RoyalSliderAutoplayOptions = function() {};
 /** @type {boolean} */
RoyalSlider.RoyalSliderAutoplayOptions.prototype.enabled;
 /** @type {boolean} */
RoyalSlider.RoyalSliderAutoplayOptions.prototype.stopAtAction;
 /** @type {boolean} */
RoyalSlider.RoyalSliderAutoplayOptions.prototype.pauseOnHover;
 /** @type {number} */
RoyalSlider.RoyalSliderAutoplayOptions.prototype.delay;
/**
 * @record
 * @struct
 */
RoyalSlider.RoyalSliderVideoOptions = function() {};
 /** @type {boolean} */
RoyalSlider.RoyalSliderVideoOptions.prototype.autoHideArrows;
 /** @type {boolean} */
RoyalSlider.RoyalSliderVideoOptions.prototype.autoHideControlNav;
 /** @type {boolean} */
RoyalSlider.RoyalSliderVideoOptions.prototype.autoHideBlocks;
 /** @type {string} */
RoyalSlider.RoyalSliderVideoOptions.prototype.youTubeCode;
 /** @type {string} */
RoyalSlider.RoyalSliderVideoOptions.prototype.vimeoCode;
/**
 * @record
 * @struct
 */
RoyalSlider.RoyalSliderBlockOptions = function() {};
 /** @type {boolean} */
RoyalSlider.RoyalSliderBlockOptions.prototype.fadeEffect;
 /** @type {string} */
RoyalSlider.RoyalSliderBlockOptions.prototype.moveEffect;
 /** @type {number} */
RoyalSlider.RoyalSliderBlockOptions.prototype.moveOffset;
 /** @type {number} */
RoyalSlider.RoyalSliderBlockOptions.prototype.speed;
 /** @type {string} */
RoyalSlider.RoyalSliderBlockOptions.prototype.easing;
 /** @type {number} */
RoyalSlider.RoyalSliderBlockOptions.prototype.delay;
/**
 * @record
 * @struct
 */
RoyalSlider.RoyalSliderVisibleOptions = function() {};
 /** @type {boolean} */
RoyalSlider.RoyalSliderVisibleOptions.prototype.enabled;
 /** @type {number} */
RoyalSlider.RoyalSliderVisibleOptions.prototype.centerArea;
 /** @type {boolean} */
RoyalSlider.RoyalSliderVisibleOptions.prototype.center;
 /** @type {boolean} */
RoyalSlider.RoyalSliderVisibleOptions.prototype.navigateByCenterClick;
 /** @type {number} */
RoyalSlider.RoyalSliderVisibleOptions.prototype.breakpoint;
 /** @type {number} */
RoyalSlider.RoyalSliderVisibleOptions.prototype.breakpointCenterArea;
/**
 * @record
 * @struct
 */
RoyalSlider.RoyalSliderOptions = function() {};
 /** @type {boolean} */
RoyalSlider.RoyalSliderOptions.prototype.autoScaleSlider;
 /** @type {number} */
RoyalSlider.RoyalSliderOptions.prototype.autoScaleSliderWidth;
 /** @type {number} */
RoyalSlider.RoyalSliderOptions.prototype.autoScaleSliderHeight;
 /** @type {string} */
RoyalSlider.RoyalSliderOptions.prototype.imageScaleMode;
 /** @type {boolean} */
RoyalSlider.RoyalSliderOptions.prototype.imageAlignCenter;
 /** @type {number} */
RoyalSlider.RoyalSliderOptions.prototype.imageScalePadding;
 /** @type {string} */
RoyalSlider.RoyalSliderOptions.prototype.controlNavigation;
 /** @type {boolean} */
RoyalSlider.RoyalSliderOptions.prototype.arrowsNav;
 /** @type {boolean} */
RoyalSlider.RoyalSliderOptions.prototype.arrowsNavAutoHide;
 /** @type {boolean} */
RoyalSlider.RoyalSliderOptions.prototype.arrowsNavHideOnTouch;
 /** @type {number} */
RoyalSlider.RoyalSliderOptions.prototype.imgWidth;
 /** @type {number} */
RoyalSlider.RoyalSliderOptions.prototype.imgHeight;
 /** @type {number} */
RoyalSlider.RoyalSliderOptions.prototype.slidesSpacing;
 /** @type {number} */
RoyalSlider.RoyalSliderOptions.prototype.startSlideId;
 /** @type {boolean} */
RoyalSlider.RoyalSliderOptions.prototype.loop;
 /** @type {boolean} */
RoyalSlider.RoyalSliderOptions.prototype.loopRewind;
 /** @type {boolean} */
RoyalSlider.RoyalSliderOptions.prototype.randomizeSlides;
 /** @type {number} */
RoyalSlider.RoyalSliderOptions.prototype.numImagesToPreload;
 /** @type {boolean} */
RoyalSlider.RoyalSliderOptions.prototype.usePreloader;
 /** @type {string} */
RoyalSlider.RoyalSliderOptions.prototype.slidesOrientation;
 /** @type {string} */
RoyalSlider.RoyalSliderOptions.prototype.transitionType;
 /** @type {number} */
RoyalSlider.RoyalSliderOptions.prototype.transitionSpeed;
 /** @type {string} */
RoyalSlider.RoyalSliderOptions.prototype.easeInOut;
 /** @type {string} */
RoyalSlider.RoyalSliderOptions.prototype.easeOut;
 /** @type {boolean} */
RoyalSlider.RoyalSliderOptions.prototype.controlsInside;
 /** @type {boolean} */
RoyalSlider.RoyalSliderOptions.prototype.navigateByClick;
 /** @type {boolean} */
RoyalSlider.RoyalSliderOptions.prototype.sliderDrag;
 /** @type {boolean} */
RoyalSlider.RoyalSliderOptions.prototype.sliderTouch;
 /** @type {boolean} */
RoyalSlider.RoyalSliderOptions.prototype.keyboardNavEnabled;
 /** @type {boolean} */
RoyalSlider.RoyalSliderOptions.prototype.fadeinLoadedSlide;
 /** @type {boolean} */
RoyalSlider.RoyalSliderOptions.prototype.allowCSS3;
 /** @type {boolean} */
RoyalSlider.RoyalSliderOptions.prototype.globalCaption;
 /** @type {boolean} */
RoyalSlider.RoyalSliderOptions.prototype.addActiveClass;
 /** @type {number} */
RoyalSlider.RoyalSliderOptions.prototype.minSlideOffset;
 /** @type {boolean} */
RoyalSlider.RoyalSliderOptions.prototype.autoHeight;
 /** @type {!Element} */
RoyalSlider.RoyalSliderOptions.prototype.slides;
 /** @type {!RoyalSlider.RoyalSliderThumbsOptions} */
RoyalSlider.RoyalSliderOptions.prototype.thumbs;
 /** @type {!RoyalSlider.RoyalSliderFullscreenOptions} */
RoyalSlider.RoyalSliderOptions.prototype.fullscreen;
 /** @type {!RoyalSlider.RoyalSliderDeeplinkingOptions} */
RoyalSlider.RoyalSliderOptions.prototype.deeplinking;
 /** @type {!RoyalSlider.RoyalSliderAutoplayOptions} */
RoyalSlider.RoyalSliderOptions.prototype.autoplay;
 /** @type {!RoyalSlider.RoyalSliderVideoOptions} */
RoyalSlider.RoyalSliderOptions.prototype.video;
 /** @type {!RoyalSlider.RoyalSliderBlockOptions} */
RoyalSlider.RoyalSliderOptions.prototype.block;
 /** @type {!RoyalSlider.RoyalSliderVisibleOptions} */
RoyalSlider.RoyalSliderOptions.prototype.visibleNearby;
/**
 * @record
 * @struct
 */
RoyalSlider.RoyalSlider = function() {};
 /** @type {number} */
RoyalSlider.RoyalSlider.prototype.currSlideId;
 /** @type {?<!HTMLElement>} */
RoyalSlider.RoyalSlider.prototype.currSlide;
 /** @type {number} */
RoyalSlider.RoyalSlider.prototype.numSlides;
 /** @type {boolean} */
RoyalSlider.RoyalSlider.prototype.isFullscreen;
 /** @type {boolean} */
RoyalSlider.RoyalSlider.prototype.nativeFS;
 /** @type {number} */
RoyalSlider.RoyalSlider.prototype.width;
 /** @type {number} */
RoyalSlider.RoyalSlider.prototype.height;
 /** @type {boolean} */
RoyalSlider.RoyalSlider.prototype.dragSuccess;
 /** @type {!Array<?>} */
RoyalSlider.RoyalSlider.prototype.slides;
 /** @type {!Array<?<!HTMLElement>>} */
RoyalSlider.RoyalSlider.prototype.slidesJQ;
 /** @type {!RoyalSlider.RoyalSliderOptions} */
RoyalSlider.RoyalSlider.prototype.st;
 /** @type {?<!HTMLElement>} */
RoyalSlider.RoyalSlider.prototype.ev;

/**
 * go to slide with id
 * @param {number} id
 * @return {void}
 */
RoyalSlider.RoyalSlider.prototype.goTo = function(id) {};

/**
 * next slide
 * @return {void}
 */
RoyalSlider.RoyalSlider.prototype.next = function() {};

/**
 * prev slide
 * @return {void}
 */
RoyalSlider.RoyalSlider.prototype.prev = function() {};

/**
 * removes all events and clears all slider data (use on ajax sites to avoid memory leaks)
 * @return {void}
 */
RoyalSlider.RoyalSlider.prototype.destroy = function() {};

/**
 * Dynamic slides adding/removing
 * @param {?<!HTMLElement>} element
 * @param {number=} index
 * @return {void}
 */
RoyalSlider.RoyalSlider.prototype.appendSlide = function(element, index) {};

/**
 * Remove slide
 * @param {number=} index
 * @return {void}
 */
RoyalSlider.RoyalSlider.prototype.removeSlide = function(index) {};

/**
 * updates size of slider.  Use after you resize slider with js.
 * @param {boolean=} forceResize
 * @return {void}
 */
RoyalSlider.RoyalSlider.prototype.updateSliderSize = function(forceResize) {};

/**
 * changes orientation of thumbnails
 * @param {string} orientation
 * @return {void}
 */
RoyalSlider.RoyalSlider.prototype.setThumbsOrientation = function(orientation) {};

/**
 * updates size of thumbnails
 * @return {void}
 */
RoyalSlider.RoyalSlider.prototype.updateThumbsSize = function() {};

/**
 * Enter Fullscreen mode
 * @return {void}
 */
RoyalSlider.RoyalSlider.prototype.enterFullscreen = function() {};

/**
 * Exit Fullscreen mode
 * @return {void}
 */
RoyalSlider.RoyalSlider.prototype.exitFullscreen = function() {};

/**
 * Start autoplay
 * @return {void}
 */
RoyalSlider.RoyalSlider.prototype.startAutoPlay = function() {};

/**
 * Stop autoplay
 * @return {void}
 */
RoyalSlider.RoyalSlider.prototype.stopAutoPlay = function() {};

/**
 * Toggle autoplay between start and stop
 * @return {void}
 */
RoyalSlider.RoyalSlider.prototype.toggleAutoPlay = function() {};

/**
 * Toggle video between start and stop
 * @return {void}
 */
RoyalSlider.RoyalSlider.prototype.toggleVideo = function() {};

/**
 * Play video
 * @return {void}
 */
RoyalSlider.RoyalSlider.prototype.playVideo = function() {};

/**
 * Stop video
 * @return {void}
 */
RoyalSlider.RoyalSlider.prototype.stopVideo = function() {};

/**
 * Creates a new royal-slider with the specified, or default, options.
 * 
 * @param {!RoyalSlider.RoyalSliderOptions=} options The options
 * @return {?<!HTMLElement>}
 */
JQuery.prototype.royalSlider = function(options) {};
