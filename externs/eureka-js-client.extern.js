/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/eureka-js-client/index.d.ts:

/**
 * @constructor
 * @struct
 * @param {?} config
 */
function Eureka(config) {}

/**
 * @return {void}
 */
Eureka.prototype.start = function() {};

/**
 * @return {void}
 */
Eureka.prototype.stop = function() {};

/**
 * @param {string} appId
 * @return {!Array<string>}
 */
Eureka.prototype.getInstancesByAppId = function(appId) {};

/**
 * @param {string} vidAddress
 * @return {!Array<string>}
 */
Eureka.prototype.getInstancesByVipAddress = function(vidAddress) {};
/** @const */
var EurekaClient = {};

/** @typedef {string} */
EurekaClient.InstanceStatus;

/** @typedef {string} */
EurekaClient.ActionType;

/** @typedef {string} */
EurekaClient.DataCenterName;
/**
 * @record
 * @struct
 */
EurekaClient.EurekaConfig = function() {};
 /** @type {?} */
EurekaClient.EurekaConfig.prototype.instance;
 /** @type {?} */
EurekaClient.EurekaConfig.prototype.eureka;
/**
 * @record
 * @struct
 */
EurekaClient.EurekaInstanceConfig = function() {};
 /** @type {string} */
EurekaClient.EurekaInstanceConfig.prototype.app;
 /** @type {string} */
EurekaClient.EurekaInstanceConfig.prototype.hostName;
 /** @type {string} */
EurekaClient.EurekaInstanceConfig.prototype.ipAddr;
 /** @type {string} */
EurekaClient.EurekaInstanceConfig.prototype.vipAddress;
 /** @type {?} */
EurekaClient.EurekaInstanceConfig.prototype.dataCenterInfo;
 /** @type {number} */
EurekaClient.EurekaInstanceConfig.prototype.port;
 /** @type {string} */
EurekaClient.EurekaInstanceConfig.prototype.instanceId;
 /** @type {string} */
EurekaClient.EurekaInstanceConfig.prototype.appGroupName;
 /** @type {string} */
EurekaClient.EurekaInstanceConfig.prototype.sid;
 /** @type {?} */
EurekaClient.EurekaInstanceConfig.prototype.securePort;
 /** @type {string} */
EurekaClient.EurekaInstanceConfig.prototype.homePageUrl;
 /** @type {string} */
EurekaClient.EurekaInstanceConfig.prototype.statusPageUrl;
 /** @type {string} */
EurekaClient.EurekaInstanceConfig.prototype.healthCheckUrl;
 /** @type {string} */
EurekaClient.EurekaInstanceConfig.prototype.secureHealthCheckUrl;
 /** @type {string} */
EurekaClient.EurekaInstanceConfig.prototype.secureVipAddress;
 /** @type {number} */
EurekaClient.EurekaInstanceConfig.prototype.countryId;
 /** @type {string} */
EurekaClient.EurekaInstanceConfig.prototype.status;
 /** @type {string} */
EurekaClient.EurekaInstanceConfig.prototype.overriddenstatus;
 /** @type {?} */
EurekaClient.EurekaInstanceConfig.prototype.leaseInfo;
 /** @type {boolean} */
EurekaClient.EurekaInstanceConfig.prototype.isCoordinatingDiscoveryServer;
/**
 * @record
 * @struct
 */
EurekaClient.EurekaClientConfig = function() {};
 /** @type {string} */
EurekaClient.EurekaClientConfig.prototype.host;
 /** @type {number} */
EurekaClient.EurekaClientConfig.prototype.port;
 /** @type {number} */
EurekaClient.EurekaClientConfig.prototype.heartbeatInterval;
 /** @type {number} */
EurekaClient.EurekaClientConfig.prototype.registryFetchInterval;
 /** @type {number} */
EurekaClient.EurekaClientConfig.prototype.maxRetries;
 /** @type {number} */
EurekaClient.EurekaClientConfig.prototype.requestRetryDelay;
 /** @type {boolean} */
EurekaClient.EurekaClientConfig.prototype.fetchRegistry;
 /** @type {boolean} */
EurekaClient.EurekaClientConfig.prototype.filterUpInstances;
 /** @type {string} */
EurekaClient.EurekaClientConfig.prototype.servicePath;
 /** @type {boolean} */
EurekaClient.EurekaClientConfig.prototype.ssl;
 /** @type {boolean} */
EurekaClient.EurekaClientConfig.prototype.useDns;
 /** @type {boolean} */
EurekaClient.EurekaClientConfig.prototype.preferSameZone;
 /** @type {boolean} */
EurekaClient.EurekaClientConfig.prototype.clusterRefreshInterval;
 /** @type {boolean} */
EurekaClient.EurekaClientConfig.prototype.fetchMetadata;
 /** @type {boolean} */
EurekaClient.EurekaClientConfig.prototype.registerWithEureka;
 /** @type {boolean} */
EurekaClient.EurekaClientConfig.prototype.useLocalMetadata;
 /** @type {boolean} */
EurekaClient.EurekaClientConfig.prototype.preferIpAddress;
/**
 * @record
 * @struct
 */
EurekaClient.PortWrapper = function() {};
 /** @type {boolean} */
EurekaClient.PortWrapper.prototype.enabled;
 /** @type {number} */
EurekaClient.PortWrapper.prototype.port;
/**
 * @record
 * @struct
 */
EurekaClient.LeaseInfo = function() {};
 /** @type {number} */
EurekaClient.LeaseInfo.prototype.renewalIntervalInSecs;
 /** @type {number} */
EurekaClient.LeaseInfo.prototype.durationInSecs;
/**
 * @record
 * @struct
 */
EurekaClient.DataCenterInfo = function() {};
 /** @type {string} */
EurekaClient.DataCenterInfo.prototype.name;
