/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/web-animations-js/index.d.ts:

/** @typedef {string} */
var AnimationEffectTimingFillMode;

/** @typedef {string} */
var AnimationEffectTimingPlaybackDirection;

/** @typedef {string} */
var AnimationPlayState;

/**
 * @constructor
 * @struct
 * @param {!Animation} target
 * @param {number} currentTime
 * @param {number} timelineTime
 */
function AnimationPlaybackEvent(target, currentTime, timelineTime) {}
 /** @type {!Animation} */
AnimationPlaybackEvent.prototype.target;
 /** @type {number} */
AnimationPlaybackEvent.prototype.currentTime;
 /** @type {number} */
AnimationPlaybackEvent.prototype.timelineTime;
 /** @type {string} */
AnimationPlaybackEvent.prototype.type;
 /** @type {boolean} */
AnimationPlaybackEvent.prototype.bubbles;
 /** @type {boolean} */
AnimationPlaybackEvent.prototype.cancelable;
 /** @type {!Animation} */
AnimationPlaybackEvent.prototype.currentTarget;
 /** @type {boolean} */
AnimationPlaybackEvent.prototype.defaultPrevented;
 /** @type {number} */
AnimationPlaybackEvent.prototype.eventPhase;
 /** @type {number} */
AnimationPlaybackEvent.prototype.timeStamp;
/**
 * @record
 * @struct
 */
function AnimationKeyFrame() {}
 /** @type {string} */
AnimationKeyFrame.prototype.easing;
 /** @type {number} */
AnimationKeyFrame.prototype.offset;

/* TODO: IndexSignature:  */
/**
 * @record
 * @struct
 */
function AnimationTimeline() {}
 /** @type {number} */
AnimationTimeline.prototype.currentTime;

/**
 * @return {!Array<!Animation>}
 */
AnimationTimeline.prototype.getAnimations = function() {};

/**
 * @param {!KeyframeEffect} effect
 * @return {!Animation}
 */
AnimationTimeline.prototype.play = function(effect) {};
/**
 * @record
 * @struct
 */
function AnimationEffectTiming() {}
 /** @type {number} */
AnimationEffectTiming.prototype.delay;
 /** @type {string} */
AnimationEffectTiming.prototype.direction;
 /** @type {number} */
AnimationEffectTiming.prototype.duration;
 /** @type {string} */
AnimationEffectTiming.prototype.easing;
 /** @type {number} */
AnimationEffectTiming.prototype.endDelay;
 /** @type {string} */
AnimationEffectTiming.prototype.fill;
 /** @type {number} */
AnimationEffectTiming.prototype.iterationStart;
 /** @type {number} */
AnimationEffectTiming.prototype.iterations;
 /** @type {number} */
AnimationEffectTiming.prototype.playbackRate;

/**
 * @constructor
 * @struct
 * @param {!HTMLElement} target
 * @param {(!AnimationKeyFrame|!Array<!AnimationKeyFrame>)} effect
 * @param {(number|!AnimationEffectTiming)} timing
 * @param {string=} id
 */
function KeyframeEffect(target, effect, timing, id) {}
 /** @type {number} */
KeyframeEffect.prototype.activeDuration;
 /** @type {function(number, !KeyframeEffect, !Animation): void} */
KeyframeEffect.prototype.onsample;
 /** @type {!KeyframeEffect} */
KeyframeEffect.prototype.parent;
 /** @type {!HTMLElement} */
KeyframeEffect.prototype.target;
 /** @type {!AnimationEffectTiming} */
KeyframeEffect.prototype.timing;

/**
 * @return {!Array<!AnimationKeyFrame>}
 */
KeyframeEffect.prototype.getFrames = function() {};

/**
 * @return {void}
 */
KeyframeEffect.prototype.remove = function() {};

/** @typedef {function(!AnimationPlaybackEvent): void} */
var AnimationEventListener;

/**
 * @constructor
 * @struct
 * @param {!KeyframeEffect} effect
 * @param {!AnimationTimeline=} timeline
 */
function Animation(effect, timeline) {}
 /** @type {number} */
Animation.prototype.currentTime;
 /** @type {string} */
Animation.prototype.id;
 /** @type {function(!AnimationPlaybackEvent): void} */
Animation.prototype.oncancel;
 /** @type {function(!AnimationPlaybackEvent): void} */
Animation.prototype.onfinish;
 /** @type {string} */
Animation.prototype.playState;
 /** @type {number} */
Animation.prototype.playbackRate;
 /** @type {number} */
Animation.prototype.startTime;
 /** @type {!KeyframeEffect} */
Animation.prototype.effect;
 /** @type {!Promise<!Animation>} */
Animation.prototype.finished;
 /** @type {!Promise<!Animation>} */
Animation.prototype.ready;
 /** @type {!AnimationTimeline} */
Animation.prototype.timeline;

/**
 * @return {void}
 */
Animation.prototype.cancel = function() {};

/**
 * @return {void}
 */
Animation.prototype.finish = function() {};

/**
 * @return {void}
 */
Animation.prototype.pause = function() {};

/**
 * @return {void}
 */
Animation.prototype.play = function() {};

/**
 * @return {void}
 */
Animation.prototype.reverse = function() {};

/**
 * @param {string} type
 * @param {function(!AnimationPlaybackEvent): void} handler
 * @return {void}
 */
Animation.prototype.addEventListener = function(type, handler) {};

/**
 * @param {string} type
 * @param {function(!AnimationPlaybackEvent): void} handler
 * @return {void}
 */
Animation.prototype.removeEventListener = function(type, handler) {};

/**
 * @constructor
 * @struct
 * @param {!Array<!KeyframeEffect>} effects
 */
function SequenceEffect(effects) {}

/**
 * @constructor
 * @struct
 * @param {!Array<!KeyframeEffect>} effects
 */
function GroupEffect(effects) {}

/**
 * @param {(!AnimationKeyFrame|!Array<!AnimationKeyFrame>)} effect
 * @param {(number|!AnimationEffectTiming)} timing
 * @return {!Animation}
 */
Element.prototype.animate = function(effect, timing) {};

/**
 * @return {!Array<!Animation>}
 */
Element.prototype.getAnimations = function() {};
 /** @type {!AnimationTimeline} */
Document.prototype.timeline;
