/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/http-status/index.d.ts:
/**
 * @record
 * @struct
 */
function HttpStatus() {}

/* TODO: PropertySignature: 100 */

/* TODO: PropertySignature: 101 */

/* TODO: PropertySignature: 200 */

/* TODO: PropertySignature: 201 */

/* TODO: PropertySignature: 202 */

/* TODO: PropertySignature: 203 */

/* TODO: PropertySignature: 204 */

/* TODO: PropertySignature: 205 */

/* TODO: PropertySignature: 206 */

/* TODO: PropertySignature: 300 */

/* TODO: PropertySignature: 301 */

/* TODO: PropertySignature: 302 */

/* TODO: PropertySignature: 303 */

/* TODO: PropertySignature: 304 */

/* TODO: PropertySignature: 305 */

/* TODO: PropertySignature: 307 */

/* TODO: PropertySignature: 400 */

/* TODO: PropertySignature: 401 */

/* TODO: PropertySignature: 402 */

/* TODO: PropertySignature: 403 */

/* TODO: PropertySignature: 404 */

/* TODO: PropertySignature: 405 */

/* TODO: PropertySignature: 406 */

/* TODO: PropertySignature: 407 */

/* TODO: PropertySignature: 408 */

/* TODO: PropertySignature: 409 */

/* TODO: PropertySignature: 410 */

/* TODO: PropertySignature: 411 */

/* TODO: PropertySignature: 412 */

/* TODO: PropertySignature: 413 */

/* TODO: PropertySignature: 414 */

/* TODO: PropertySignature: 415 */

/* TODO: PropertySignature: 416 */

/* TODO: PropertySignature: 417 */

/* TODO: PropertySignature: 422 */

/* TODO: PropertySignature: 429 */

/* TODO: PropertySignature: 451 */

/* TODO: PropertySignature: 500 */

/* TODO: PropertySignature: 501 */

/* TODO: PropertySignature: 502 */

/* TODO: PropertySignature: 503 */

/* TODO: PropertySignature: 504 */

/* TODO: PropertySignature: 505 */
 /** @type {number} */
HttpStatus.prototype.CONTINUE;
 /** @type {number} */
HttpStatus.prototype.SWITCHING_PROTOCOLS;
 /** @type {number} */
HttpStatus.prototype.OK;
 /** @type {number} */
HttpStatus.prototype.CREATED;
 /** @type {number} */
HttpStatus.prototype.ACCEPTED;
 /** @type {number} */
HttpStatus.prototype.NON_AUTHORITATIVE_INFORMATION;
 /** @type {number} */
HttpStatus.prototype.NO_CONTENT;
 /** @type {number} */
HttpStatus.prototype.RESET_CONTENT;
 /** @type {number} */
HttpStatus.prototype.PARTIAL_CONTENT;
 /** @type {number} */
HttpStatus.prototype.MULTIPLE_CHOICES;
 /** @type {number} */
HttpStatus.prototype.MOVED_PERMANENTLY;
 /** @type {number} */
HttpStatus.prototype.FOUND;
 /** @type {number} */
HttpStatus.prototype.SEE_OTHER;
 /** @type {number} */
HttpStatus.prototype.NOT_MODIFIED;
 /** @type {number} */
HttpStatus.prototype.USE_PROXY;
 /** @type {number} */
HttpStatus.prototype.TEMPORARY_REDIRECT;
 /** @type {number} */
HttpStatus.prototype.BAD_REQUEST;
 /** @type {number} */
HttpStatus.prototype.UNAUTHORIZED;
 /** @type {number} */
HttpStatus.prototype.PAYMENT_REQUIRED;
 /** @type {number} */
HttpStatus.prototype.FORBIDDEN;
 /** @type {number} */
HttpStatus.prototype.NOT_FOUND;
 /** @type {number} */
HttpStatus.prototype.METHOD_NOT_ALLOWED;
 /** @type {number} */
HttpStatus.prototype.NOT_ACCEPTABLE;
 /** @type {number} */
HttpStatus.prototype.PROXY_AUTHENTICATION_REQUIRED;
 /** @type {number} */
HttpStatus.prototype.REQUEST_TIMEOUT;
 /** @type {number} */
HttpStatus.prototype.CONFLICT;
 /** @type {number} */
HttpStatus.prototype.GONE;
 /** @type {number} */
HttpStatus.prototype.LENGTH_REQUIRED;
 /** @type {number} */
HttpStatus.prototype.PRECONDITION_FAILED;
 /** @type {number} */
HttpStatus.prototype.REQUEST_ENTITY_TOO_LARGE;
 /** @type {number} */
HttpStatus.prototype.REQUEST_URI_TOO_LONG;
 /** @type {number} */
HttpStatus.prototype.UNSUPPORTED_MEDIA_TYPE;
 /** @type {number} */
HttpStatus.prototype.REQUESTED_RANGE_NOT_SATISFIABLE;
 /** @type {number} */
HttpStatus.prototype.EXPECTATION_FAILED;
 /** @type {number} */
HttpStatus.prototype.UNPROCESSABLE_ENTITY;
 /** @type {number} */
HttpStatus.prototype.TOO_MANY_REQUESTS;
 /** @type {number} */
HttpStatus.prototype.UNAVAILABLE_FOR_LEGAL_REASONS;
 /** @type {number} */
HttpStatus.prototype.INTERNAL_SERVER_ERROR;
 /** @type {number} */
HttpStatus.prototype.NOT_IMPLEMENTED;
 /** @type {number} */
HttpStatus.prototype.BAD_GATEWAY;
 /** @type {number} */
HttpStatus.prototype.SERVICE_UNAVAILABLE;
 /** @type {number} */
HttpStatus.prototype.GATEWAY_TIMEOUT;
 /** @type {number} */
HttpStatus.prototype.HTTP_VERSION_NOT_SUPPORTED;
 /** @type {!HttpStatus} */
var httpStatus;
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "http-status"
/** @const */
tsickle_declare_module.http_status = {};

/* TODO: ExportAssignment in tsickle_declare_module.http_status */
