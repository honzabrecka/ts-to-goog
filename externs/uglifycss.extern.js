/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/uglifycss/index.d.ts:
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "uglifycss"
/** @const */
tsickle_declare_module.uglifycss = {};
/** @const */
tsickle_declare_module.uglifycss.UglifyCSS = {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.uglifycss.UglifyCSS.UglifyCSSOptions = function() {};
 /** @type {number} */
tsickle_declare_module.uglifycss.UglifyCSS.UglifyCSSOptions.prototype.maxLineLen;
 /** @type {boolean} */
tsickle_declare_module.uglifycss.UglifyCSS.UglifyCSSOptions.prototype.expandVars;
 /** @type {boolean} */
tsickle_declare_module.uglifycss.UglifyCSS.UglifyCSSOptions.prototype.uglyComments;
 /** @type {boolean} */
tsickle_declare_module.uglifycss.UglifyCSS.UglifyCSSOptions.prototype.cuteComments;

/**
 * Uglify a string
 * @param {string} content
 * @param {!UglifyCSS.UglifyCSSOptions=} options
 * @return {string}
 */
tsickle_declare_module.uglifycss.UglifyCSS.processString = function(content, options) {};

/**
 * Uglify one or more files
 * @param {!Array<string>} filenames
 * @param {!UglifyCSS.UglifyCSSOptions=} options
 * @return {string}
 */
tsickle_declare_module.uglifycss.UglifyCSS.processFiles = function(filenames, options) {};

/* TODO: ExportAssignment in tsickle_declare_module.uglifycss */
