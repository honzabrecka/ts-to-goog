/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/intl-tel-input/index.d.ts:
/** @const */
var IntlTelInput = {};
/**
 * @record
 * @struct
 */
IntlTelInput.Plugin = function() {};

/* TODO: CallSignature: IntlTelInput */

/* TODO: CallSignature: IntlTelInput */

/* TODO: CallSignature: IntlTelInput */

/* TODO: CallSignature: IntlTelInput */

/* TODO: CallSignature: IntlTelInput */

/* TODO: CallSignature: IntlTelInput */

/* TODO: CallSignature: IntlTelInput */

/* TODO: CallSignature: IntlTelInput */

/* TODO: CallSignature: IntlTelInput */

/* TODO: CallSignature: IntlTelInput */

/* TODO: CallSignature: IntlTelInput */

/* TODO: CallSignature: IntlTelInput */

/* TODO: CallSignature: IntlTelInput */

/* TODO: CallSignature: IntlTelInput */

/**
 * Get all of the plugin's country data - either to re-use elsewhere
 * e.g. to populate a country dropdown.
 * @return {!Array<!IntlTelInput.CountryData>}
 */
IntlTelInput.Plugin.prototype.getCountryData = function() {};

/**
 * Load the utils.js script (included in the lib directory) to enable
 * formatting/validation etc.
 * @param {string} path
 * @param {boolean=} utilsScriptDeferred
 * @return {void}
 */
IntlTelInput.Plugin.prototype.loadUtils = function(path, utilsScriptDeferred) {};
/**
 * @record
 * @struct
 */
IntlTelInput.Options = function() {};
 /** @type {boolean} */
IntlTelInput.Options.prototype.allowDropdown;
 /** @type {boolean} */
IntlTelInput.Options.prototype.autoHideDialCode;
 /** @type {boolean} */
IntlTelInput.Options.prototype.autoPlaceholder;
 /** @type {function(string, !IntlTelInput.CountryData): string} */
IntlTelInput.Options.prototype.customPlaceholder;
 /** @type {string} */
IntlTelInput.Options.prototype.dropdownContainer;
 /** @type {!Array<string>} */
IntlTelInput.Options.prototype.excludeCountries;
 /** @type {boolean} */
IntlTelInput.Options.prototype.formatOnInit;
 /** @type {function(function(string): void): void} */
IntlTelInput.Options.prototype.geoIpLookup;
 /** @type {string} */
IntlTelInput.Options.prototype.initialCountry;
 /** @type {boolean} */
IntlTelInput.Options.prototype.nationalMode;
 /** @type {string} */
IntlTelInput.Options.prototype.numberType;
 /** @type {!Array<string>} */
IntlTelInput.Options.prototype.onlyCountries;
 /** @type {!Array<string>} */
IntlTelInput.Options.prototype.preferredCountries;
 /** @type {boolean} */
IntlTelInput.Options.prototype.separateDialCode;
 /** @type {string} */
IntlTelInput.Options.prototype.utilsScript;
/**
 * @record
 * @struct
 */
IntlTelInput.CountryData = function() {};
 /** @type {string} */
IntlTelInput.CountryData.prototype.name;
 /** @type {string} */
IntlTelInput.CountryData.prototype.iso2;
 /** @type {string} */
IntlTelInput.CountryData.prototype.dialCode;
/** @const */
var intlTelInputUtils = {};

/** @const */
intlTelInputUtils.numberFormat = {};
/** @const {number} */
intlTelInputUtils.numberFormat.E164;
/** @const {number} */
intlTelInputUtils.numberFormat.INTERNATIONAL;
/** @const {number} */
intlTelInputUtils.numberFormat.NATIONAL;
/** @const {number} */
intlTelInputUtils.numberFormat.RFC3966;

/** @const */
intlTelInputUtils.numberType = {};
/** @const {number} */
intlTelInputUtils.numberType.FIXED_LINE;
/** @const {number} */
intlTelInputUtils.numberType.MOBILE;
/** @const {number} */
intlTelInputUtils.numberType.FIXED_LINE_OR_MOBILE;
/** @const {number} */
intlTelInputUtils.numberType.TOLL_FREE;
/** @const {number} */
intlTelInputUtils.numberType.PREMIUM_RATE;
/** @const {number} */
intlTelInputUtils.numberType.SHARED_COST;
/** @const {number} */
intlTelInputUtils.numberType.VOIP;
/** @const {number} */
intlTelInputUtils.numberType.PERSONAL_NUMBER;
/** @const {number} */
intlTelInputUtils.numberType.PAGER;
/** @const {number} */
intlTelInputUtils.numberType.UAN;
/** @const {number} */
intlTelInputUtils.numberType.VOICEMAIL;
/** @const {number} */
intlTelInputUtils.numberType.UNKNOWN;

/** @const */
intlTelInputUtils.validationError = {};
/** @const {number} */
intlTelInputUtils.validationError.IS_POSSIBLE;
/** @const {number} */
intlTelInputUtils.validationError.INVALID_COUNTRY_CODE;
/** @const {number} */
intlTelInputUtils.validationError.TOO_SHORT;
/** @const {number} */
intlTelInputUtils.validationError.TOO_LONG;
/** @const {number} */
intlTelInputUtils.validationError.NOT_A_NUMBER;
 /** @type {!IntlTelInput.Plugin} */
JQuery.prototype.intlTelInput;
