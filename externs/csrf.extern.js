/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/csrf/index.d.ts:

/** @typedef {?} */
var SecretCallback;
/**
 * @record
 * @struct
 */
function TokensOptions() {}
 /** @type {number} */
TokensOptions.prototype.saltLength;
 /** @type {number} */
TokensOptions.prototype.secretLength;

/**
 * @constructor
 * @struct
 * Token generation/verification class.
 * 
 * @param {?=} options
 */
function Tokens(options) {}

/**
 * Create a new CSRF token.
 * 
 * @param {string} secret
 * @return {string}
 */
Tokens.prototype.create = function(secret) {};

/**
 * Create a new secret key.
 * 
 * @param {?=} callback
 * @return {!Promise<string>}
 */
Tokens.prototype.secret = function(callback) {};

/**
 * Create a new secret key synchronously.
 * @return {string}
 */
Tokens.prototype.secretSync = function() {};

/**
 * Verify if a given token is valid for a given secret.
 * 
 * @param {string} secret
 * @param {string} token
 * @return {boolean}
 */
Tokens.prototype.verify = function(secret, token) {};

/* TODO: ExportAssignment in  */
