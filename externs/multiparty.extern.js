/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/multiparty/index.d.ts:

/* TODO: ImportEqualsDeclaration in  */

/* TODO: ImportEqualsDeclaration in  */

/* TODO: ImportEqualsDeclaration in  */

/**
 * @constructor
 * @struct
 * @param {?=} options
 */
function Form(options) {}

/**
 * Parses an incoming node.js request containing form data.
 * This will cause form to emit events based off the incoming request
 * @param {!IncomingMessage} request
 * @param {function(!Error, ?, ?): ?=} callback
 * @return {void}
 */
Form.prototype.parse = function(request, callback) {};
/**
 * @record
 * @struct
 */
function File() {}
 /** @type {string} */
File.prototype.fieldName;
 /** @type {string} */
File.prototype.originalFileName;
 /** @type {string} */
File.prototype.path;
 /** @type {?} */
File.prototype.headers;
 /** @type {number} */
File.prototype.size;
/**
 * @record
 * @struct
 */
function Part() {}
 /** @type {?} */
Part.prototype.headers;
 /** @type {string} */
Part.prototype.name;
 /** @type {string} */
Part.prototype.filename;
 /** @type {number} */
Part.prototype.byteOffset;
 /** @type {number} */
Part.prototype.byteCount;
/**
 * @record
 * @struct
 */
function FormOptions() {}
 /** @type {string} */
FormOptions.prototype.encoding;
 /** @type {number} */
FormOptions.prototype.maxFieldsSize;
 /** @type {number} */
FormOptions.prototype.maxFields;
 /** @type {number} */
FormOptions.prototype.maxFilesSize;
 /** @type {boolean} */
FormOptions.prototype.autoFields;
 /** @type {boolean} */
FormOptions.prototype.autoFiles;
 /** @type {string} */
FormOptions.prototype.uploadDir;
