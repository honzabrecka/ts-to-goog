/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/oidc-token-manager/index.d.ts:
/** @const */
var Oidc = {};
/**
 * @constructor
 * @struct
 */
Oidc.DefaultHttpRequest = function() {};

/**
 * @param {string} url
 * @param {?} config
 * @return {!Oidc.DefaultPromise}
 */
Oidc.DefaultHttpRequest.prototype.getJSON = function(url, config) {};

/**
 * @constructor
 * @struct
 * @param {?} promise
 */
Oidc.DefaultPromise = function(promise) {};

/**
 * @param {function(?): void} successCallback
 * @param {function(?): void} errorCallback
 * @return {!Oidc.DefaultPromise}
 */
Oidc.DefaultPromise.prototype.then = function(successCallback, errorCallback) {};

/**
 * @param {function(): void} errorCallback
 * @return {!Oidc.DefaultPromise}
 */
Oidc.DefaultPromise.prototype.catch = function(errorCallback) {};
/**
 * @constructor
 * @struct
 */
Oidc.DefaultPromiseFactory = function() {};

/**
 * @param {?} value
 * @return {!Oidc.DefaultPromise}
 */
Oidc.DefaultPromiseFactory.prototype.resolve = function(value) {};

/**
 * @param {?} reason
 * @return {!Oidc.DefaultPromise}
 */
Oidc.DefaultPromiseFactory.prototype.reject = function(reason) {};

/**
 * @param {?} callback
 * @return {!Oidc.DefaultPromise}
 */
Oidc.DefaultPromiseFactory.prototype.create = function(callback) {};
/**
 * @record
 * @struct
 */
Oidc.OidcClientSettings = function() {};
 /** @type {string} */
Oidc.OidcClientSettings.prototype.request_state_key;
 /** @type {?} */
Oidc.OidcClientSettings.prototype.request_state_store;
 /** @type {boolean} */
Oidc.OidcClientSettings.prototype.load_user_profile;
 /** @type {boolean} */
Oidc.OidcClientSettings.prototype.filter_protocol_claims;
 /** @type {string} */
Oidc.OidcClientSettings.prototype.authority;
 /** @type {string} */
Oidc.OidcClientSettings.prototype.response_type;
/**
 * @record
 * @struct
 */
Oidc.OidcClient_Static = function() {};

/* TODO: ConstructSignature: Oidc */
/**
 * @record
 * @struct
 */
Oidc.OidcClient = function() {};
 /** @type {boolean} */
Oidc.OidcClient.prototype.isOidc;
 /** @type {boolean} */
Oidc.OidcClient.prototype.isOAuth;

/**
 * @return {!Oidc.DefaultPromise}
 */
Oidc.OidcClient.prototype.loadMetadataAsync = function() {};

/**
 * @return {!Oidc.DefaultPromise}
 */
Oidc.OidcClient.prototype.loadX509SigningKeyAsync = function() {};

/**
 * @param {string} access_token
 * @return {!Oidc.DefaultPromise}
 */
Oidc.OidcClient.prototype.loadUserProfile = function(access_token) {};

/**
 * @return {void}
 */
Oidc.OidcClient.prototype.loadAuthorizationEndpoint = function() {};

/**
 * @return {!Oidc.DefaultPromise}
 */
Oidc.OidcClient.prototype.createTokenRequestAsync = function() {};

/**
 * @param {string} id_token_hint
 * @return {!Oidc.DefaultPromise}
 */
Oidc.OidcClient.prototype.createLogoutRequestAsync = function(id_token_hint) {};

/**
 * @param {string} id_token
 * @param {string} nonce
 * @param {string} access_token
 * @return {!Oidc.DefaultPromise}
 */
Oidc.OidcClient.prototype.validateIdTokenAsync = function(id_token, nonce, access_token) {};

/**
 * @param {string} id_token_contents
 * @param {string} access_token
 * @return {!Oidc.DefaultPromise}
 */
Oidc.OidcClient.prototype.validateAccessTokenAsync = function(id_token_contents, access_token) {};

/**
 * @param {string} id_token
 * @param {string} nonce
 * @param {string} access_token
 * @return {!Oidc.DefaultPromise}
 */
Oidc.OidcClient.prototype.validateIdTokenAndAccessTokenAsync = function(id_token, nonce, access_token) {};

/**
 * @param {string} queryString
 * @return {!Oidc.DefaultPromise}
 */
Oidc.OidcClient.prototype.processResponseAsync = function(queryString) {};
/**
 * @record
 * @struct
 */
Oidc.OidcTokenManagerSettings = function() {};
 /** @type {boolean} */
Oidc.OidcTokenManagerSettings.prototype.load_user_profile;
 /** @type {boolean} */
Oidc.OidcTokenManagerSettings.prototype.persist;
 /** @type {!Storage} */
Oidc.OidcTokenManagerSettings.prototype.store;
 /** @type {string} */
Oidc.OidcTokenManagerSettings.prototype.persistKey;
 /** @type {string} */
Oidc.OidcTokenManagerSettings.prototype.client_id;
 /** @type {string} */
Oidc.OidcTokenManagerSettings.prototype.redirect_uri;
 /** @type {string} */
Oidc.OidcTokenManagerSettings.prototype.post_logout_redirect_uri;
 /** @type {string} */
Oidc.OidcTokenManagerSettings.prototype.response_type;
 /** @type {string} */
Oidc.OidcTokenManagerSettings.prototype.scope;
 /** @type {string} */
Oidc.OidcTokenManagerSettings.prototype.authority;
 /** @type {string} */
Oidc.OidcTokenManagerSettings.prototype.popup_redirect_uri;
 /** @type {string} */
Oidc.OidcTokenManagerSettings.prototype.silent_redirect_uri;
 /** @type {boolean} */
Oidc.OidcTokenManagerSettings.prototype.silent_renew;
 /** @type {!Storage} */
Oidc.OidcTokenManagerSettings.prototype.request_state_store;
 /** @type {string} */
Oidc.OidcTokenManagerSettings.prototype.request_state_key;
 /** @type {?} */
Oidc.OidcTokenManagerSettings.prototype.metadata;
 /** @type {string} */
Oidc.OidcTokenManagerSettings.prototype.authorization_endpoint;
 /** @type {string} */
Oidc.OidcTokenManagerSettings.prototype.jwks_uri;
 /** @type {?} */
Oidc.OidcTokenManagerSettings.prototype.jwks;
 /** @type {string} */
Oidc.OidcTokenManagerSettings.prototype.userinfo_endpoint;
 /** @type {string} */
Oidc.OidcTokenManagerSettings.prototype.end_session_endpoint;
/**
 * @record
 * @struct
 */
Oidc.PopupSettings = function() {};
 /** @type {string} */
Oidc.PopupSettings.prototype.features;
 /** @type {string} */
Oidc.PopupSettings.prototype.target;
/**
 * @record
 * @struct
 */
Oidc.OidcTokenManager_Static = function() {};

/* TODO: ConstructSignature: Oidc */

/**
 * @param {!Oidc.DefaultPromiseFactory} promiseFactory
 * @return {void}
 */
Oidc.OidcTokenManager_Static.prototype.setPromiseFactory = function(promiseFactory) {};

/**
 * @param {!Oidc.DefaultHttpRequest} httpRequest
 * @return {void}
 */
Oidc.OidcTokenManager_Static.prototype.setHttpRequest = function(httpRequest) {};
/**
 * @record
 * @struct
 */
Oidc.OidcToken = function() {};
 /** @type {string} */
Oidc.OidcToken.prototype.profile;
 /** @type {string} */
Oidc.OidcToken.prototype.id_token;
 /** @type {string} */
Oidc.OidcToken.prototype.access_token;
 /** @type {number} */
Oidc.OidcToken.prototype.expires_at;
 /** @type {string} */
Oidc.OidcToken.prototype.scope;
 /** @type {!Array<string>} */
Oidc.OidcToken.prototype.scopes;
 /** @type {?} */
Oidc.OidcToken.prototype.session_state;
 /** @type {boolean} */
Oidc.OidcToken.prototype.expired;
 /** @type {number} */
Oidc.OidcToken.prototype.expires_in;

/**
 * @return {string}
 */
Oidc.OidcToken.prototype.toJSON = function() {};
/**
 * @record
 * @struct
 */
Oidc.OidcTokenManager = function() {};
 /** @type {?} */
Oidc.OidcTokenManager.prototype.profile;
 /** @type {string} */
Oidc.OidcTokenManager.prototype.id_token;
 /** @type {string} */
Oidc.OidcTokenManager.prototype.access_token;
 /** @type {boolean} */
Oidc.OidcTokenManager.prototype.expired;
 /** @type {number} */
Oidc.OidcTokenManager.prototype.expires_in;
 /** @type {number} */
Oidc.OidcTokenManager.prototype.expires_at;
 /** @type {string} */
Oidc.OidcTokenManager.prototype.scope;
 /** @type {!Array<string>} */
Oidc.OidcTokenManager.prototype.scopes;
 /** @type {?} */
Oidc.OidcTokenManager.prototype.session_state;

/**
 * @param {!Oidc.OidcToken} token
 * @return {void}
 */
Oidc.OidcTokenManager.prototype.saveToken = function(token) {};

/**
 * @param {function(): void} cb
 * @return {void}
 */
Oidc.OidcTokenManager.prototype.addOnTokenRemoved = function(cb) {};

/**
 * @param {function(): void} cb
 * @return {void}
 */
Oidc.OidcTokenManager.prototype.addOnTokenObtained = function(cb) {};

/**
 * @param {function(): void} cb
 * @return {void}
 */
Oidc.OidcTokenManager.prototype.addOnTokenExpiring = function(cb) {};

/**
 * @param {function(): void} cb
 * @return {void}
 */
Oidc.OidcTokenManager.prototype.addOnTokenExpired = function(cb) {};

/**
 * @param {function(): void} cb
 * @return {void}
 */
Oidc.OidcTokenManager.prototype.addOnSilentTokenRenewFailed = function(cb) {};

/**
 * @return {void}
 */
Oidc.OidcTokenManager.prototype.removeToken = function() {};

/**
 * @return {!Oidc.DefaultPromise}
 */
Oidc.OidcTokenManager.prototype.redirectForToken = function() {};

/**
 * @return {!Oidc.DefaultPromise}
 */
Oidc.OidcTokenManager.prototype.redirectForLogout = function() {};

/**
 * @param {string=} queryString
 * @return {!Oidc.DefaultPromise}
 */
Oidc.OidcTokenManager.prototype.processTokenCallbackAsync = function(queryString) {};

/**
 * @return {!Oidc.DefaultPromise}
 */
Oidc.OidcTokenManager.prototype.renewTokenSilentAsync = function() {};

/**
 * @param {string=} hash
 * @return {void}
 */
Oidc.OidcTokenManager.prototype.processTokenCallbackSilent = function(hash) {};

/**
 * @param {!Oidc.PopupSettings=} popupSettings
 * @return {!Oidc.DefaultPromise}
 */
Oidc.OidcTokenManager.prototype.openPopupForTokenAsync = function(popupSettings) {};

/**
 * @param {string=} hash
 * @return {void}
 */
Oidc.OidcTokenManager.prototype.processTokenPopup = function(hash) {};
 /** @type {!Oidc.OidcTokenManager_Static} */
var OidcTokenManager;
 /** @type {!Oidc.OidcClient_Static} */
var OidcClient;
