/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/rheostat/index.d.ts:

/* TODO: ImportDeclaration in  */

/** @typedef {string} */
var Orientation;
/**
 * @record
 * @struct
 */
function Algorithm() {}

/**
 * @param {number} value
 * @param {number} min
 * @param {number} max
 * @return {number}
 */
Algorithm.prototype.getPosition = function(value, min, max) {};

/**
 * @param {number} pos
 * @param {number} min
 * @param {number} max
 * @return {number}
 */
Algorithm.prototype.getValue = function(pos, min, max) {};
/**
 * @record
 * @struct
 */
function PublicState() {}
 /** @type {number} */
PublicState.prototype.max;
 /** @type {number} */
PublicState.prototype.min;
 /** @type {!Array<number>} */
PublicState.prototype.values;
/**
 * @record
 * @struct
 */
function Events() {}

/**
 * @return {?}
 */
Events.prototype.onClick = function() {};

/**
 * @param {?} publicState
 * @return {?}
 */
Events.prototype.onChange = function(publicState) {};

/**
 * @return {?}
 */
Events.prototype.onKeyPress = function() {};

/**
 * @return {?}
 */
Events.prototype.onSliderDragEnd = function() {};

/**
 * @return {?}
 */
Events.prototype.onSliderDragMove = function() {};

/**
 * @return {?}
 */
Events.prototype.onSliderDragStart = function() {};

/**
 * @param {?} publicState
 * @return {?}
 */
Events.prototype.onValuesUpdated = function(publicState) {};
/**
 * @extends {Events}
 * @record
 * @struct
 */
function Props() {}
 /** @type {?} */
Props.prototype.algorithm;
 /** @type {string} */
Props.prototype.className;
 /** @type {boolean} */
Props.prototype.disabled;
 /** @type {(string|!React.ComponentClass<?>|!React.StatelessComponent<?>)} */
Props.prototype.handle;
 /** @type {number} */
Props.prototype.max;
 /** @type {number} */
Props.prototype.min;
 /** @type {string} */
Props.prototype.orientation;
 /** @type {(string|!React.ComponentClass<?>|!React.StatelessComponent<?>)} */
Props.prototype.pitComponent;
 /** @type {!Array<number>} */
Props.prototype.pitPoints;
 /** @type {(string|!React.ComponentClass<?>|!React.StatelessComponent<?>)} */
Props.prototype.progressBar;
 /** @type {boolean} */
Props.prototype.snap;
 /** @type {!Array<number>} */
Props.prototype.snapPoints;
 /** @type {!Array<number>} */
Props.prototype.values;
/**
 * @constructor
 * @struct
 */
function Rheostat() {}
