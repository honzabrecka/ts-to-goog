/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/color v0/index.d.ts:
/** @const */
var Color = {};
/**
 * @record
 * @struct
 */
Color.RGBColor = function() {};
 /** @type {number} */
Color.RGBColor.prototype.r;
 /** @type {number} */
Color.RGBColor.prototype.g;
 /** @type {number} */
Color.RGBColor.prototype.b;
 /** @type {number} */
Color.RGBColor.prototype.a;
/**
 * @record
 * @struct
 */
Color.FullRGBColor = function() {};
 /** @type {number} */
Color.FullRGBColor.prototype.red;
 /** @type {number} */
Color.FullRGBColor.prototype.green;
 /** @type {number} */
Color.FullRGBColor.prototype.blue;
 /** @type {number} */
Color.FullRGBColor.prototype.alpha;
/**
 * @record
 * @struct
 */
Color.HSLColor = function() {};
 /** @type {number} */
Color.HSLColor.prototype.h;
 /** @type {number} */
Color.HSLColor.prototype.s;
 /** @type {number} */
Color.HSLColor.prototype.l;
 /** @type {number} */
Color.HSLColor.prototype.a;
/**
 * @record
 * @struct
 */
Color.FullHSLColor = function() {};
 /** @type {number} */
Color.FullHSLColor.prototype.hue;
 /** @type {number} */
Color.FullHSLColor.prototype.saturation;
 /** @type {number} */
Color.FullHSLColor.prototype.lightness;
 /** @type {number} */
Color.FullHSLColor.prototype.alpha;
/**
 * @record
 * @struct
 */
Color.HSVColor = function() {};
 /** @type {number} */
Color.HSVColor.prototype.h;
 /** @type {number} */
Color.HSVColor.prototype.s;
 /** @type {number} */
Color.HSVColor.prototype.v;
/**
 * @record
 * @struct
 */
Color.FullHSVColor = function() {};
 /** @type {number} */
Color.FullHSVColor.prototype.hue;
 /** @type {number} */
Color.FullHSVColor.prototype.saturation;
 /** @type {number} */
Color.FullHSVColor.prototype.value;
/**
 * @record
 * @struct
 */
Color.HBWColor = function() {};
 /** @type {number} */
Color.HBWColor.prototype.h;
 /** @type {number} */
Color.HBWColor.prototype.b;
 /** @type {number} */
Color.HBWColor.prototype.w;
/**
 * @record
 * @struct
 */
Color.FullHBWColor = function() {};
 /** @type {number} */
Color.FullHBWColor.prototype.hue;
 /** @type {number} */
Color.FullHBWColor.prototype.whiteness;
 /** @type {number} */
Color.FullHBWColor.prototype.blackness;
/**
 * @record
 * @struct
 */
Color.CMYKColor = function() {};
 /** @type {number} */
Color.CMYKColor.prototype.c;
 /** @type {number} */
Color.CMYKColor.prototype.m;
 /** @type {number} */
Color.CMYKColor.prototype.y;
 /** @type {number} */
Color.CMYKColor.prototype.k;
/**
 * @record
 * @struct
 */
Color.FullCMYKColor = function() {};
 /** @type {number} */
Color.FullCMYKColor.prototype.cyan;
 /** @type {number} */
Color.FullCMYKColor.prototype.magenta;
 /** @type {number} */
Color.FullCMYKColor.prototype.yellow;
 /** @type {number} */
Color.FullCMYKColor.prototype.black;

/** @typedef {(string|!Color.RGBColor|!Color.FullRGBColor|!Color.HSLColor|!Color.FullHSLColor|!Color.HSVColor|!Color.FullHSVColor|!Color.HBWColor|!Color.FullHBWColor|!Color.CMYKColor|!Color.FullCMYKColor)} */
Color.ColorParam;
/**
 * @record
 * @struct
 */
Color.Color = function() {};

/* TODO: CallSignature: Color */

/**
 * @param {!Array<number>|number|!Color.RGBColor|!Color.FullRGBColor=} values_or_r
 * @param {number=} g
 * @param {number=} b
 * @param {number=} a
 * @return {!Color.Color|!Color.RGBColor}
 */
Color.Color.prototype.rgb = function(values_or_r, g, b, a) {};

/**
 * @return {!Array<number>}
 */
Color.Color.prototype.rgbArray = function() {};

/**
 * @return {string}
 */
Color.Color.prototype.rgbString = function() {};

/**
 * @return {string}
 */
Color.Color.prototype.rgbaString = function() {};

/**
 * @return {number}
 */
Color.Color.prototype.rgbNumber = function() {};

/**
 * @param {!Array<number>=} values
 * @return {!Color.Color|!Color.HSLColor}
 */
Color.Color.prototype.hsl = function(values) {};

/**
 * @return {!Array<number>}
 */
Color.Color.prototype.hslArray = function() {};

/**
 * @return {string}
 */
Color.Color.prototype.hslString = function() {};

/**
 * @return {string}
 */
Color.Color.prototype.hslaString = function() {};

/**
 * @param {!Array<number>=} values
 * @return {!Color.Color|!Color.HSVColor}
 */
Color.Color.prototype.hsv = function(values) {};

/**
 * @return {!Array<number>}
 */
Color.Color.prototype.hsvArray = function() {};

/**
 * @return {string}
 */
Color.Color.prototype.hsvString = function() {};

/**
 * @param {!Array<number>=} values
 * @return {!Color.Color|!Color.HBWColor}
 */
Color.Color.prototype.hbw = function(values) {};

/**
 * @return {!Array<number>}
 */
Color.Color.prototype.hbwArray = function() {};

/**
 * @return {string}
 */
Color.Color.prototype.hbwString = function() {};

/**
 * @param {!Array<number>=} values
 * @return {!Color.Color|!Color.CMYKColor}
 */
Color.Color.prototype.cmyk = function(values) {};

/**
 * @return {!Array<number>}
 */
Color.Color.prototype.cmykArray = function() {};

/**
 * @return {string}
 */
Color.Color.prototype.cmykString = function() {};

/**
 * @return {string}
 */
Color.Color.prototype.hexString = function() {};

/**
 * @return {string}
 */
Color.Color.prototype.percentString = function() {};

/**
 * @return {(string|void)}
 */
Color.Color.prototype.keyword = function() {};

/**
 * @param {number=} alpha
 * @return {!Color.Color|number}
 */
Color.Color.prototype.alpha = function(alpha) {};

/**
 * @param {number=} red
 * @return {!Color.Color|number}
 */
Color.Color.prototype.red = function(red) {};

/**
 * @param {number=} green
 * @return {!Color.Color|number}
 */
Color.Color.prototype.green = function(green) {};

/**
 * @param {number=} blue
 * @return {!Color.Color|number}
 */
Color.Color.prototype.blue = function(blue) {};

/**
 * @param {number=} hue
 * @return {!Color.Color|number}
 */
Color.Color.prototype.hue = function(hue) {};

/**
 * @param {number=} saturation
 * @return {!Color.Color|number}
 */
Color.Color.prototype.saturation = function(saturation) {};

/**
 * @param {number=} lightness
 * @return {!Color.Color|number}
 */
Color.Color.prototype.lightness = function(lightness) {};

/**
 * @param {number=} saturationv
 * @return {!Color.Color|number}
 */
Color.Color.prototype.saturationv = function(saturationv) {};

/**
 * @param {number=} value
 * @return {!Color.Color|number}
 */
Color.Color.prototype.value = function(value) {};

/**
 * @param {number=} whiteness
 * @return {!Color.Color|number}
 */
Color.Color.prototype.whiteness = function(whiteness) {};

/**
 * @param {number=} blackness
 * @return {!Color.Color|number}
 */
Color.Color.prototype.blackness = function(blackness) {};

/**
 * @param {number=} cyan
 * @return {!Color.Color|number}
 */
Color.Color.prototype.cyan = function(cyan) {};

/**
 * @param {number=} magenta
 * @return {!Color.Color|number}
 */
Color.Color.prototype.magenta = function(magenta) {};

/**
 * @param {number=} yellow
 * @return {!Color.Color|number}
 */
Color.Color.prototype.yellow = function(yellow) {};

/**
 * @param {number=} black
 * @return {!Color.Color|number}
 */
Color.Color.prototype.black = function(black) {};

/**
 * @return {number}
 */
Color.Color.prototype.luminosity = function() {};

/**
 * @param {!Color.Color} color
 * @return {number}
 */
Color.Color.prototype.contrast = function(color) {};

/**
 * @return {boolean}
 */
Color.Color.prototype.dark = function() {};

/**
 * @return {boolean}
 */
Color.Color.prototype.light = function() {};

/**
 * @return {!Color.Color}
 */
Color.Color.prototype.negate = function() {};

/**
 * @param {number} value
 * @return {!Color.Color}
 */
Color.Color.prototype.lighten = function(value) {};

/**
 * @param {number} value
 * @return {!Color.Color}
 */
Color.Color.prototype.darken = function(value) {};

/**
 * @param {number} value
 * @return {!Color.Color}
 */
Color.Color.prototype.saturate = function(value) {};

/**
 * @param {number} value
 * @return {!Color.Color}
 */
Color.Color.prototype.desaturate = function(value) {};

/**
 * @return {!Color.Color}
 */
Color.Color.prototype.greyscale = function() {};

/**
 * @param {number} value
 * @return {!Color.Color}
 */
Color.Color.prototype.whiten = function(value) {};

/**
 * @param {number} value
 * @return {!Color.Color}
 */
Color.Color.prototype.blacken = function(value) {};

/**
 * @param {number} value
 * @return {!Color.Color}
 */
Color.Color.prototype.clearer = function(value) {};

/**
 * @param {number} value
 * @return {!Color.Color}
 */
Color.Color.prototype.opaquer = function(value) {};

/**
 * @param {number} value
 * @return {!Color.Color}
 */
Color.Color.prototype.rotate = function(value) {};

/**
 * @param {!Color.Color} color
 * @param {number=} value
 * @return {!Color.Color}
 */
Color.Color.prototype.mix = function(color, value) {};

/**
 * @param {!Color.Color} color
 * @return {string}
 */
Color.Color.prototype.level = function(color) {};

/**
 * @return {!Color.Color}
 */
Color.Color.prototype.clone = function() {};
 /** @type {!Color.Color} */
var Color;

/* TODO: ExportAssignment in  */

/* TODO: NamespaceExportDeclaration in  */
