/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/interact.js/index.d.ts:
/** @const */
var Interact = {};
/**
 * @record
 * @struct
 */
Interact.Interactable = function() {};

/**
 * @param {!Element|string=} newValue
 * @return {?|!Interact.Interactable}
 */
Interact.Interactable.prototype.accept = function(newValue) {};

/**
 * @param {!Function=} checker
 * @return {!Function|!Interact.Interactable}
 */
Interact.Interactable.prototype.actionChecker = function(checker) {};

/**
 * @param {boolean|!Object<string,?>=} options
 * @return {?|!Interact.Interactable}
 */
Interact.Interactable.prototype.autoScroll = function(options) {};

/**
 * @return {!Node}
 */
Interact.Interactable.prototype.context = function() {};

/**
 * @param {?} event
 * @return {string}
 */
Interact.Interactable.prototype.defaultActionChecker = function(event) {};

/**
 * @param {!String=} newValue
 * @return {string|!Interact.Interactable}
 */
Interact.Interactable.prototype.deltaSource = function(newValue) {};

/**
 * @param {boolean|!Object<string,?>=} options
 * @return {boolean|!Interact.Interactable}
 */
Interact.Interactable.prototype.draggable = function(options) {};

/**
 * @param {!MouseEvent|!Interact.TouchEvent} event
 * @return {boolean}
 */
Interact.Interactable.prototype.dropCheck = function(event) {};

/**
 * @param {!Function=} checker
 * @return {!Function|!Interact.Interactable}
 */
Interact.Interactable.prototype.dropChecker = function(checker) {};

/**
 * @param {boolean|!Object<string,?>=} options
 * @return {?|!Interact.Interactable}
 */
Interact.Interactable.prototype.dropzone = function(options) {};

/**
 * @return {!Element}
 */
Interact.Interactable.prototype.element = function() {};

/**
 * @param {!Interact.InteractEvent} iEvent
 * @return {!Interact.Interactable}
 */
Interact.Interactable.prototype.fire = function(iEvent) {};

/**
 * @param {boolean|!Object<string,?>=} options
 * @return {?|!Interact.Interactable}
 */
Interact.Interactable.prototype.gesturable = function(options) {};

/**
 * @return {!ClientRect}
 */
Interact.Interactable.prototype.getRect = function() {};

/**
 * @param {string|!Element=} newValue
 * @return {?|!Interact.Interactable}
 */
Interact.Interactable.prototype.ignoreFrom = function(newValue) {};

/**
 * @param {boolean|!Object<string,?>=} options
 * @return {?|!Interact.Interactable}
 */
Interact.Interactable.prototype.inertia = function(options) {};

/**
 * @param {string} eventType
 * @param {!Function} listener
 * @param {boolean=} useCapture
 * @return {!Interact.Interactable}
 */
Interact.Interactable.prototype.off = function(eventType, listener, useCapture) {};

/**
 * @param {string} eventType
 * @param {!Function} listener
 * @param {boolean=} useCapture
 * @return {!Interact.Interactable}
 */
Interact.Interactable.prototype.on = function(eventType, listener, useCapture) {};

/**
 * @param {!HTMLElement|!SVGElement|!Interact.Point=} newValue
 * @return {!Interact.Point|!Interact.Interactable}
 */
Interact.Interactable.prototype.origin = function(newValue) {};

/**
 * @param {(string|boolean)} newValue
 * @return {!Interact.Interactable}
 */
Interact.Interactable.prototype.preventDefault = function(newValue) {};

/**
 * @param {!Function=} newValue
 * @return {!Function|!Interact.Interactable}
 */
Interact.Interactable.prototype.rectChecker = function(newValue) {};

/**
 * @param {boolean|!Object<string,?>=} options
 * @return {!Interact.Interactable}
 */
Interact.Interactable.prototype.resizable = function(options) {};

/**
 * @param {!Interact.Restrict=} newValue
 * @return {!Interact.Restrict|!Interact.Interactable}
 */
Interact.Interactable.prototype.restrict = function(newValue) {};

/**
 * @param {!Object<string,?>} options
 * @return {!Interact.Interactable}
 */
Interact.Interactable.prototype.set = function(options) {};

/**
 * @param {boolean|!Object<string,?>=} options
 * @return {?|!Interact.Interactable}
 */
Interact.Interactable.prototype.snap = function(options) {};

/**
 * @param {boolean=} newValue
 * @return {boolean|!Interact.Interactable}
 */
Interact.Interactable.prototype.squareResize = function(newValue) {};

/**
 * @param {boolean=} newValue
 * @return {boolean|!Interact.Interactable}
 */
Interact.Interactable.prototype.styleCursor = function(newValue) {};

/**
 * @return {!Interact.InteractStatic}
 */
Interact.Interactable.prototype.unset = function() {};

/**
 * @param {string} context
 * @param {string} option
 * @param {?} value
 * @return {?}
 */
Interact.Interactable.prototype.validateSetting = function(context, option, value) {};
/**
 * @record
 * @struct
 */
Interact.Coordinates = function() {};
 /** @type {number} */
Interact.Coordinates.prototype.clientX;
 /** @type {number} */
Interact.Coordinates.prototype.clientY;
 /** @type {number} */
Interact.Coordinates.prototype.pageX;
 /** @type {number} */
Interact.Coordinates.prototype.pageY;
 /** @type {number} */
Interact.Coordinates.prototype.timeStamp;
/**
 * @record
 * @struct
 */
Interact.Debug = function() {};
 /** @type {?} */
Interact.Debug.prototype.target;
 /** @type {?} */
Interact.Debug.prototype.dragging;
 /** @type {?} */
Interact.Debug.prototype.resizing;
 /** @type {?} */
Interact.Debug.prototype.gesturing;
 /** @type {?} */
Interact.Debug.prototype.prepared;
 /** @type {!Interact.Coordinates} */
Interact.Debug.prototype.prevCoords;
 /** @type {!Interact.Coordinates} */
Interact.Debug.prototype.downCoords;
 /** @type {!Array<?>} */
Interact.Debug.prototype.pointerIds;
 /** @type {!Array<?>} */
Interact.Debug.prototype.pointerMoves;
 /** @type {?} */
Interact.Debug.prototype.addPointer;
 /** @type {?} */
Interact.Debug.prototype.removePointer;
 /** @type {?} */
Interact.Debug.prototype.recordPointers;
 /** @type {!Interact.InertiaStatus} */
Interact.Debug.prototype.inertia;
 /** @type {?} */
Interact.Debug.prototype.downTime;
 /** @type {?} */
Interact.Debug.prototype.downEvent;
 /** @type {?} */
Interact.Debug.prototype.prevEvent;
 /** @type {?} */
Interact.Debug.prototype.Interactable;
 /** @type {?} */
Interact.Debug.prototype.IOptions;
 /** @type {?} */
Interact.Debug.prototype.interactables;
 /** @type {?} */
Interact.Debug.prototype.dropzones;
 /** @type {?} */
Interact.Debug.prototype.pointerIsDown;
 /** @type {?} */
Interact.Debug.prototype.defaultOptions;
 /** @type {?} */
Interact.Debug.prototype.defaultActionChecker;
 /** @type {?} */
Interact.Debug.prototype.actions;
 /** @type {?} */
Interact.Debug.prototype.dragMove;
 /** @type {?} */
Interact.Debug.prototype.resizeMove;
 /** @type {?} */
Interact.Debug.prototype.gestureMove;
 /** @type {?} */
Interact.Debug.prototype.pointerUp;
 /** @type {?} */
Interact.Debug.prototype.pointerDown;
 /** @type {?} */
Interact.Debug.prototype.pointerMove;
 /** @type {?} */
Interact.Debug.prototype.pointerHover;
 /** @type {?} */
Interact.Debug.prototype.events;
 /** @type {?} */
Interact.Debug.prototype.globalEvents;
 /** @type {?} */
Interact.Debug.prototype.delegatedEvents;
/**
 * @record
 * @struct
 */
Interact.InertiaStatus = function() {};
 /** @type {boolean} */
Interact.InertiaStatus.prototype.active;
 /** @type {?} */
Interact.InertiaStatus.prototype.target;
 /** @type {?} */
Interact.InertiaStatus.prototype.targetElement;
 /** @type {?} */
Interact.InertiaStatus.prototype.startEvent;
 /** @type {?} */
Interact.InertiaStatus.prototype.pointerUp;
 /** @type {number} */
Interact.InertiaStatus.prototype.xe;
 /** @type {number} */
Interact.InertiaStatus.prototype.ye;
 /** @type {number} */
Interact.InertiaStatus.prototype.duration;
 /** @type {number} */
Interact.InertiaStatus.prototype.t0;
 /** @type {number} */
Interact.InertiaStatus.prototype.vx0;
 /** @type {number} */
Interact.InertiaStatus.prototype.vys;
 /** @type {number} */
Interact.InertiaStatus.prototype.lambda_v0;
 /** @type {number} */
Interact.InertiaStatus.prototype.one_ve_v0;
 /** @type {?} */
Interact.InertiaStatus.prototype.i;
/**
 * @record
 * @struct
 */
Interact.Point = function() {};
 /** @type {number} */
Interact.Point.prototype.x;
 /** @type {number} */
Interact.Point.prototype.y;
/**
 * @record
 * @struct
 */
Interact.Restrict = function() {};
 /** @type {?} */
Interact.Restrict.prototype.drag;
 /** @type {?} */
Interact.Restrict.prototype.gesture;
 /** @type {?} */
Interact.Restrict.prototype.resize;
 /** @type {!Object<string,number>} */
Interact.Restrict.prototype.elementRect;
/**
 * @record
 * @struct
 */
Interact.InteractEvent = function() {};
 /** @type {boolean} */
Interact.InteractEvent.prototype.altKey;
 /** @type {string} */
Interact.InteractEvent.prototype.axes;
 /** @type {number} */
Interact.InteractEvent.prototype.button;
 /** @type {number} */
Interact.InteractEvent.prototype.clientX0;
 /** @type {number} */
Interact.InteractEvent.prototype.clientX;
 /** @type {number} */
Interact.InteractEvent.prototype.clientY0;
 /** @type {number} */
Interact.InteractEvent.prototype.clientY;
 /** @type {boolean} */
Interact.InteractEvent.prototype.ctrlKey;
 /** @type {number} */
Interact.InteractEvent.prototype.dt;
 /** @type {number} */
Interact.InteractEvent.prototype.duration;
 /** @type {number} */
Interact.InteractEvent.prototype.dx;
 /** @type {number} */
Interact.InteractEvent.prototype.dy;
 /** @type {boolean} */
Interact.InteractEvent.prototype.metaKey;
 /** @type {number} */
Interact.InteractEvent.prototype.pageX;
 /** @type {number} */
Interact.InteractEvent.prototype.pageY;
 /** @type {boolean} */
Interact.InteractEvent.prototype.shiftKey;
 /** @type {number} */
Interact.InteractEvent.prototype.speed;
 /** @type {number} */
Interact.InteractEvent.prototype.t0;
 /** @type {?} */
Interact.InteractEvent.prototype.target;
 /** @type {number} */
Interact.InteractEvent.prototype.timeStamp;
 /** @type {string} */
Interact.InteractEvent.prototype.type;
 /** @type {number} */
Interact.InteractEvent.prototype.velocityX;
 /** @type {number} */
Interact.InteractEvent.prototype.velocityY;
 /** @type {number} */
Interact.InteractEvent.prototype.x0;
 /** @type {number} */
Interact.InteractEvent.prototype.y0;
/**
 * @record
 * @struct
 */
Interact.TouchEvent = function() {};
 /** @type {number} */
Interact.TouchEvent.prototype.pageX;
 /** @type {number} */
Interact.TouchEvent.prototype.pageY;
 /** @type {string} */
Interact.TouchEvent.prototype.type;
/**
 * @record
 * @struct
 */
Interact.InteractStatic = function() {};

/* TODO: CallSignature: Interact */

/* TODO: CallSignature: Interact */

/* TODO: CallSignature: Interact */

/* TODO: CallSignature: Interact */

/**
 * @param {boolean|!Object<string,?>=} options
 * @return {?|!Interact.InteractStatic}
 */
Interact.InteractStatic.prototype.autoScroll = function(options) {};

/**
 * @return {string}
 */
Interact.InteractStatic.prototype.currentAction = function() {};

/**
 * @return {!Interact.Debug}
 */
Interact.InteractStatic.prototype.debug = function() {};

/**
 * @param {string=} newValue
 * @return {string|!Interact.InteractStatic}
 */
Interact.InteractStatic.prototype.deltaSource = function(newValue) {};

/**
 * @param {boolean=} newValue
 * @return {boolean|!Interact.InteractStatic}
 */
Interact.InteractStatic.prototype.dynamicDrop = function(newValue) {};

/**
 * @param {boolean=} newValue
 * @return {boolean|!Interact.InteractStatic}
 */
Interact.InteractStatic.prototype.enableDragging = function(newValue) {};

/**
 * @param {boolean=} newValue
 * @return {boolean|!Interact.InteractStatic}
 */
Interact.InteractStatic.prototype.enableGesturing = function(newValue) {};

/**
 * @param {boolean=} newValue
 * @return {boolean|!Interact.InteractStatic}
 */
Interact.InteractStatic.prototype.enableResizing = function(newValue) {};

/**
 * @param {boolean|!Object<string,?>=} options
 * @return {?|!Interact.InteractStatic}
 */
Interact.InteractStatic.prototype.inertia = function(options) {};

/**
 * @param {!Element} element
 * @return {boolean}
 */
Interact.InteractStatic.prototype.isSet = function(element) {};

/**
 * @param {number=} newvalue
 * @return {number|!Interact.InteractStatic}
 */
Interact.InteractStatic.prototype.margin = function(newvalue) {};

/**
 * @param {string} type
 * @param {!Function} listener
 * @param {boolean=} useCapture
 * @return {!Interact.InteractStatic}
 */
Interact.InteractStatic.prototype.off = function(type, listener, useCapture) {};

/**
 * @param {string} type
 * @param {!Function} listener
 * @param {boolean=} useCapture
 * @return {!Interact.InteractStatic}
 */
Interact.InteractStatic.prototype.on = function(type, listener, useCapture) {};

/**
 * @param {!Interact.Restrict=} newValue
 * @return {!Interact.Restrict|!Interact.InteractStatic}
 */
Interact.InteractStatic.prototype.restrict = function(newValue) {};

/**
 * @param {string} action
 * @param {!Element} element
 * @param {?=} pointerEvent
 * @return {!Interact.InteractStatic}
 */
Interact.InteractStatic.prototype.simulate = function(action, element, pointerEvent) {};

/**
 * @param {boolean|!Object<string,?>=} options
 * @return {?|!Interact.InteractStatic}
 */
Interact.InteractStatic.prototype.snap = function(options) {};

/**
 * @param {!Event} event
 * @return {!Interact.InteractStatic}
 */
Interact.InteractStatic.prototype.stop = function(event) {};

/**
 * @param {boolean=} newValue
 * @return {boolean|!Interact.InteractStatic}
 */
Interact.InteractStatic.prototype.styleCursor = function(newValue) {};

/**
 * @return {boolean}
 */
Interact.InteractStatic.prototype.supportsTouch = function() {};
 /** @type {!Interact.InteractStatic} */
var interact;
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "interact.js"
/** @const */
tsickle_declare_module.interact_js = {};

/* TODO: ExportAssignment in tsickle_declare_module.interact_js */
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "interactjs"
/** @const */
tsickle_declare_module.interactjs = {};

/* TODO: ExportAssignment in tsickle_declare_module.interactjs */
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "interact"
/** @const */
tsickle_declare_module.interact = {};

/* TODO: ExportAssignment in tsickle_declare_module.interact */
