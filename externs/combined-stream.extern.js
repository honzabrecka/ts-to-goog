/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/combined-stream/index.d.ts:

/* TODO: ImportDeclaration in  */
/**
 * @extends {Stream}
 * @implements {CombinedStream.Options}
 * @constructor
 * @struct
 */
function CombinedStream() {}
 /** @type {boolean} */
CombinedStream.prototype.writable;
 /** @type {boolean} */
CombinedStream.prototype.readable;
 /** @type {number} */
CombinedStream.prototype.dataSize;
 /** @type {number} */
CombinedStream.prototype.maxDataSize;
 /** @type {boolean} */
CombinedStream.prototype.pauseStreams;
 /** @type {boolean} */
CombinedStream.prototype._released;
 /** @type {!Array<(string|!internal.Stream|?)>} */
CombinedStream.prototype._streams;
 /** @type {(string|!internal.Stream|?)} */
CombinedStream.prototype._currentStream;

/**
 * @param {(string|?|!NodeJS.ReadableStream|!NodeJS.WritableStream)} stream
 * @return {CombinedStream}
 */
CombinedStream.prototype.append = function(stream) {};

/**
 * @param {?} data
 * @return {void}
 */
CombinedStream.prototype.write = function(data) {};

/**
 * @return {void}
 */
CombinedStream.prototype.pause = function() {};

/**
 * @return {void}
 */
CombinedStream.prototype.resume = function() {};

/**
 * @return {void}
 */
CombinedStream.prototype.end = function() {};

/**
 * @return {void}
 */
CombinedStream.prototype.destroy = function() {};

/**
 * @return {void}
 */
CombinedStream.prototype._getNext = function() {};

/**
 * @return {void}
 */
CombinedStream.prototype._pipeNext = function() {};

/**
 * @param {!NodeJS.EventEmitter} stream
 * @return {void}
 */
CombinedStream.prototype._handleErrors = function(stream) {};

/**
 * @return {void}
 */
CombinedStream.prototype._reset = function() {};

/**
 * @return {void}
 */
CombinedStream.prototype._checkDataSize = function() {};

/**
 * @return {void}
 */
CombinedStream.prototype._updateDataSize = function() {};

/**
 * @param {!Error} error
 * @return {void}
 */
CombinedStream.prototype._emitError = function(error) {};

/**
 * @param {string} event
 * @param {function(): void|function(!Error): void|function(?): void} cb
 * @return {CombinedStream}
 */
CombinedStream.prototype.on = function(event, cb) {};

/**
 * @param {string} event
 * @param {function(): void|function(!Error): void|function(?): void} cb
 * @return {CombinedStream}
 */
CombinedStream.prototype.once = function(event, cb) {};
/**
 * @record
 * @struct
 */
CombinedStream.Options = function() {};
 /** @type {number} */
CombinedStream.Options.prototype.maxDataSize;
 /** @type {boolean} */
CombinedStream.Options.prototype.pauseStreams;

/**
 * @param {!CombinedStream.Options=} options
 * @return {!CombinedStream}
 */
CombinedStream.create = function(options) {};

/**
 * @param {?} stream
 * @return {boolean}
 */
CombinedStream.isStreamLike = function(stream) {};

/* TODO: ExportAssignment in  */
