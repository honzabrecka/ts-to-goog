/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/gamepad/index.d.ts:
/**
 * @record
 * @struct
 */
Gamepad.Gamepad = function() {};
 /** @type {string} */
Gamepad.Gamepad.prototype.id;
 /** @type {number} */
Gamepad.Gamepad.prototype.index;
 /** @type {number} */
Gamepad.Gamepad.prototype.timestamp;
 /** @type {!Array<number>} */
Gamepad.Gamepad.prototype.axes;
 /** @type {!Array<!Gamepad.GamepadButton>} */
Gamepad.Gamepad.prototype.buttons;
 /** @type {boolean} */
Gamepad.Gamepad.prototype.connected;
 /** @type {string} */
Gamepad.Gamepad.prototype.mapping;
/**
 * @record
 * @struct
 */
Gamepad.GamepadEvent = function() {};
 /** @type {!Gamepad.Gamepad} */
Gamepad.GamepadEvent.prototype.gamepad;
/**
 * @record
 * @struct
 */
Gamepad.GamepadList = function() {};

/* TODO: IndexSignature: Gamepad */
 /** @type {number} */
Gamepad.GamepadList.prototype.length;
/**
 * @record
 * @struct
 */
Gamepad.GamepadButton = function() {};
 /** @type {boolean} */
Gamepad.GamepadButton.prototype.pressed;
 /** @type {number} */
Gamepad.GamepadButton.prototype.value;

/**
 * The currently connected and interacted-with gamepads. Gamepads must only appear in the list if they are currently connected to the user agent, and have been interacted with by the user. Otherwise, they must not appear in the list to avoid a malicious page from fingerprinting the user based on connected devices.
 * \@readonly
 * @return {!Array<!Gamepad.Gamepad>}
 */
Navigator.prototype.getGamepads = function() {};

/**
 * @return {!Gamepad.GamepadList}
 */
Navigator.prototype.webkitGetGamepads = function() {};
