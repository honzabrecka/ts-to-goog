/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/mitm/index.d.ts:
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "mitm"
/** @const */
tsickle_declare_module.mitm = {};

/* TODO: ImportDeclaration in tsickle_declare_module.mitm */

/* TODO: ImportDeclaration in tsickle_declare_module.mitm */
/**
 * @record
 * @struct
 */
tsickle_declare_module.mitm.SocketOptions = function() {};
 /** @type {number} */
tsickle_declare_module.mitm.SocketOptions.prototype.port;
 /** @type {string} */
tsickle_declare_module.mitm.SocketOptions.prototype.host;
 /** @type {string} */
tsickle_declare_module.mitm.SocketOptions.prototype.localAddress;
 /** @type {string} */
tsickle_declare_module.mitm.SocketOptions.prototype.localPort;
 /** @type {number} */
tsickle_declare_module.mitm.SocketOptions.prototype.family;
 /** @type {boolean} */
tsickle_declare_module.mitm.SocketOptions.prototype.allowHalfOpen;
/**
 * @record
 * @struct
 */
tsickle_declare_module.mitm.BypassableSocket = function() {};

/**
 * @return {void}
 */
tsickle_declare_module.mitm.BypassableSocket.prototype.bypass = function() {};

/** @typedef {function(!BypassableSocket, !SocketOptions): void} */
tsickle_declare_module.mitm.SocketConnectCallback;

/** @typedef {function(?, !SocketOptions): void} */
tsickle_declare_module.mitm.SocketConnectionCallback;

/** @typedef {function(!IncomingMessage, !ServerResponse): void} */
tsickle_declare_module.mitm.HttpCallback;

/** @typedef {string} */
tsickle_declare_module.mitm.Event;

/** @typedef {(function(!BypassableSocket, !SocketOptions): void|function(?, !SocketOptions): void|function(!IncomingMessage, !ServerResponse): void)} */
tsickle_declare_module.mitm.Callback;
/**
 * @record
 * @struct
 */
tsickle_declare_module.mitm.Mitm = function() {};

/**
 * @return {void}
 */
tsickle_declare_module.mitm.Mitm.prototype.disable = function() {};

/**
 * @param {string} event
 * @param {(function(!BypassableSocket, !SocketOptions): void|function(?, !SocketOptions): void|function(!IncomingMessage, !ServerResponse): void)|function(!BypassableSocket, !SocketOptions): void|function(?, !SocketOptions): void|function(!IncomingMessage, !ServerResponse): void} callback
 * @return {void}
 */
tsickle_declare_module.mitm.Mitm.prototype.on = function(event, callback) {};

/**
 * @return {!Mitm}
 */
tsickle_declare_module.mitm._ = function() {};

/* TODO: ExportAssignment in tsickle_declare_module.mitm */
