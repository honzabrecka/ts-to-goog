/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/spin.js/index.d.ts:
/**
 * @record
 * @struct
 */
function SpinnerOptions() {}
 /** @type {number} */
SpinnerOptions.prototype.lines;
 /** @type {number} */
SpinnerOptions.prototype.length;
 /** @type {number} */
SpinnerOptions.prototype.width;
 /** @type {number} */
SpinnerOptions.prototype.radius;
 /** @type {number} */
SpinnerOptions.prototype.corners;
 /** @type {number} */
SpinnerOptions.prototype.rotate;
 /** @type {number} */
SpinnerOptions.prototype.direction;
 /** @type {?} */
SpinnerOptions.prototype.color;
 /** @type {number} */
SpinnerOptions.prototype.speed;
 /** @type {number} */
SpinnerOptions.prototype.trail;
 /** @type {boolean} */
SpinnerOptions.prototype.shadow;
 /** @type {boolean} */
SpinnerOptions.prototype.hwaccel;
 /** @type {string} */
SpinnerOptions.prototype.className;
 /** @type {number} */
SpinnerOptions.prototype.zIndex;
 /** @type {string} */
SpinnerOptions.prototype.top;
 /** @type {string} */
SpinnerOptions.prototype.left;
 /** @type {number} */
SpinnerOptions.prototype.scale;
 /** @type {number} */
SpinnerOptions.prototype.opacity;
 /** @type {number} */
SpinnerOptions.prototype.fps;
 /** @type {string} */
SpinnerOptions.prototype.position;

/**
 * @constructor
 * @struct
 * @param {!SpinnerOptions=} options
 */
function Spinner(options) {}
 /** @type {!HTMLElement} */
Spinner.prototype.el;

/**
 * Adds the spinner to the given target element. If this instance is already
 * spinning, it is automatically removed from its previous target by calling
 * stop() internally.
 * @param {!HTMLElement=} target
 * @return {!Spinner}
 */
Spinner.prototype.spin = function(target) {};

/**
 * Stops and removes the Spinner.
 * Stopped spinners may be reused by calling spin() again.
 * @return {!Spinner}
 */
Spinner.prototype.stop = function() {};

/**
 * @param {!HTMLElement} el
 * @param {!SpinnerOptions} o
 * @return {!HTMLElement}
 */
Spinner.prototype.lines = function(el, o) {};

/**
 * @param {!HTMLElement} el
 * @param {number} i
 * @param {number} val
 * @param {!SpinnerOptions} o
 * @return {void}
 */
Spinner.prototype.opacity = function(el, i, val, o) {};
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "spin.js"
/** @const */
tsickle_declare_module.spin_js = {};

/* TODO: ExportAssignment in tsickle_declare_module.spin_js */
