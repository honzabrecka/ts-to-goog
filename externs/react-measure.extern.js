/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/react-measure/index.d.ts:

/* TODO: ImportDeclaration in  */

/** @typedef {string} */
var MeasurementType;
/**
 * @record
 * @struct
 */
function TopLeft() {}
 /** @type {number} */
TopLeft.prototype.top;
 /** @type {number} */
TopLeft.prototype.left;
/**
 * @record
 * @struct
 */
function BottomRight() {}
 /** @type {number} */
BottomRight.prototype.bottom;
 /** @type {number} */
BottomRight.prototype.right;
/**
 * @record
 * @struct
 */
function Dimensions() {}
 /** @type {number} */
Dimensions.prototype.width;
 /** @type {number} */
Dimensions.prototype.height;

/** @typedef {?} */
var Margin;

/** @typedef {?} */
var Rect;

/** @typedef {?} */
var BoundingRect;
/**
 * @record
 * @struct
 */
function ContentRect() {}
 /** @type {?} */
ContentRect.prototype.client;
 /** @type {?} */
ContentRect.prototype.offset;
 /** @type {?} */
ContentRect.prototype.scroll;
 /** @type {?} */
ContentRect.prototype.bounds;
 /** @type {?} */
ContentRect.prototype.margin;
 /** @type {?} */
ContentRect.prototype.entry;
/**
 * @record
 * @struct
 */
function ChildrenOpts() {}
 /** @type {?} */
ChildrenOpts.prototype.contentRect;

/**
 * @param {!Element} ref
 * @return {void}
 */
ChildrenOpts.prototype.measureRef = function(ref) {};

/**
 * @return {void}
 */
ChildrenOpts.prototype.measure = function() {};
/**
 * @record
 * @struct
 */
function MeasureProps() {}
 /** @type {boolean} */
MeasureProps.prototype.client;
 /** @type {boolean} */
MeasureProps.prototype.offset;
 /** @type {boolean} */
MeasureProps.prototype.scroll;
 /** @type {boolean} */
MeasureProps.prototype.bounds;
 /** @type {boolean} */
MeasureProps.prototype.margin;

/**
 * @param {!Element} ref
 * @return {void}
 */
MeasureProps.prototype.innerRef = function(ref) {};

/**
 * @param {?} contentRect
 * @return {void}
 */
MeasureProps.prototype.onResize = function(contentRect) {};

/**
 * @param {?} arg
 * @return {!React.ReactElement<?>}
 */
MeasureProps.prototype.children = function(arg) {};

/**
 * @param {(string|!Array<string>)} types
 * @return {function(function(?): !React.ReactElement<T>): !React.ComponentClass<T>}
 */
function withContentRect(types) {}
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
function Measure() {}

/* TODO: ExportAssignment in  */
