/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/web-bluetooth/index.d.ts:

/** @typedef {(string|number)} */
var BluetoothServiceUUID;

/** @typedef {(string|number)} */
var BluetoothCharacteristicUUID;

/** @typedef {(string|number)} */
var BluetoothDescriptorUUID;
/**
 * @record
 * @struct
 */
function BluetoothRequestDeviceFilter() {}
 /** @type {!Array<(string|number)>} */
BluetoothRequestDeviceFilter.prototype.services;
 /** @type {string} */
BluetoothRequestDeviceFilter.prototype.name;
 /** @type {string} */
BluetoothRequestDeviceFilter.prototype.namePrefix;
 /** @type {number} */
BluetoothRequestDeviceFilter.prototype.manufacturerId;
 /** @type {(string|number)} */
BluetoothRequestDeviceFilter.prototype.serviceDataUUID;
/**
 * @record
 * @struct
 */
function RequestDeviceOptions() {}
 /** @type {!Array<!BluetoothRequestDeviceFilter>} */
RequestDeviceOptions.prototype.filters;
 /** @type {!Array<(string|number)>} */
RequestDeviceOptions.prototype.optionalServices;
 /** @type {boolean} */
RequestDeviceOptions.prototype.acceptAllDevices;
/**
 * @record
 * @struct
 */
function BluetoothRemoteGATTDescriptor() {}
 /** @type {!BluetoothRemoteGATTCharacteristic} */
BluetoothRemoteGATTDescriptor.prototype.characteristic;
 /** @type {string} */
BluetoothRemoteGATTDescriptor.prototype.uuid;
 /** @type {!DataView} */
BluetoothRemoteGATTDescriptor.prototype.value;

/**
 * @return {!Promise<!DataView>}
 */
BluetoothRemoteGATTDescriptor.prototype.readValue = function() {};

/**
 * @param {(!ArrayBuffer|!ArrayBufferView)} value
 * @return {!Promise<void>}
 */
BluetoothRemoteGATTDescriptor.prototype.writeValue = function(value) {};
/**
 * @record
 * @struct
 */
function BluetoothCharacteristicProperties() {}
 /** @type {boolean} */
BluetoothCharacteristicProperties.prototype.broadcast;
 /** @type {boolean} */
BluetoothCharacteristicProperties.prototype.read;
 /** @type {boolean} */
BluetoothCharacteristicProperties.prototype.writeWithoutResponse;
 /** @type {boolean} */
BluetoothCharacteristicProperties.prototype.write;
 /** @type {boolean} */
BluetoothCharacteristicProperties.prototype.notify;
 /** @type {boolean} */
BluetoothCharacteristicProperties.prototype.indicate;
 /** @type {boolean} */
BluetoothCharacteristicProperties.prototype.authenticatedSignedWrites;
 /** @type {boolean} */
BluetoothCharacteristicProperties.prototype.reliableWrite;
 /** @type {boolean} */
BluetoothCharacteristicProperties.prototype.writableAuxiliaries;
/**
 * @record
 * @struct
 */
function CharacteristicEventHandlers() {}
 /** @type {function(!Event): ?} */
CharacteristicEventHandlers.prototype.oncharacteristicvaluechanged;
/**
 * @extends {CharacteristicEventHandlers}
 * @record
 * @struct
 */
function BluetoothRemoteGATTCharacteristic() {}
 /** @type {!BluetoothRemoteGATTService} */
BluetoothRemoteGATTCharacteristic.prototype.service;
 /** @type {string} */
BluetoothRemoteGATTCharacteristic.prototype.uuid;
 /** @type {!BluetoothCharacteristicProperties} */
BluetoothRemoteGATTCharacteristic.prototype.properties;
 /** @type {!DataView} */
BluetoothRemoteGATTCharacteristic.prototype.value;

/**
 * @param {(string|number)} descriptor
 * @return {!Promise<!BluetoothRemoteGATTDescriptor>}
 */
BluetoothRemoteGATTCharacteristic.prototype.getDescriptor = function(descriptor) {};

/**
 * @param {(string|number)=} descriptor
 * @return {!Promise<!Array<!BluetoothRemoteGATTDescriptor>>}
 */
BluetoothRemoteGATTCharacteristic.prototype.getDescriptors = function(descriptor) {};

/**
 * @return {!Promise<!DataView>}
 */
BluetoothRemoteGATTCharacteristic.prototype.readValue = function() {};

/**
 * @param {(!ArrayBuffer|!ArrayBufferView)} value
 * @return {!Promise<void>}
 */
BluetoothRemoteGATTCharacteristic.prototype.writeValue = function(value) {};

/**
 * @return {!Promise<!BluetoothRemoteGATTCharacteristic>}
 */
BluetoothRemoteGATTCharacteristic.prototype.startNotifications = function() {};

/**
 * @return {!Promise<!BluetoothRemoteGATTCharacteristic>}
 */
BluetoothRemoteGATTCharacteristic.prototype.stopNotifications = function() {};

/**
 * @param {string} type
 * @param {function(!Event): ?|(!EventListener|!EventListenerObject)} listener
 * @param {boolean=} useCapture
 * @return {void}
 */
BluetoothRemoteGATTCharacteristic.prototype.addEventListener = function(type, listener, useCapture) {};
/**
 * @record
 * @struct
 */
function ServiceEventHandlers() {}
 /** @type {function(!Event): ?} */
ServiceEventHandlers.prototype.onserviceadded;
 /** @type {function(!Event): ?} */
ServiceEventHandlers.prototype.onservicechanged;
 /** @type {function(!Event): ?} */
ServiceEventHandlers.prototype.onserviceremoved;
/**
 * @extends {CharacteristicEventHandlers}
 * @extends {ServiceEventHandlers}
 * @record
 * @struct
 */
function BluetoothRemoteGATTService() {}
 /** @type {!BluetoothDevice} */
BluetoothRemoteGATTService.prototype.device;
 /** @type {string} */
BluetoothRemoteGATTService.prototype.uuid;
 /** @type {boolean} */
BluetoothRemoteGATTService.prototype.isPrimary;

/**
 * @param {(string|number)} characteristic
 * @return {!Promise<!BluetoothRemoteGATTCharacteristic>}
 */
BluetoothRemoteGATTService.prototype.getCharacteristic = function(characteristic) {};

/**
 * @param {(string|number)=} characteristic
 * @return {!Promise<!Array<!BluetoothRemoteGATTCharacteristic>>}
 */
BluetoothRemoteGATTService.prototype.getCharacteristics = function(characteristic) {};

/**
 * @param {(string|number)} service
 * @return {!Promise<!BluetoothRemoteGATTService>}
 */
BluetoothRemoteGATTService.prototype.getIncludedService = function(service) {};

/**
 * @param {(string|number)=} service
 * @return {!Promise<!Array<!BluetoothRemoteGATTService>>}
 */
BluetoothRemoteGATTService.prototype.getIncludedServices = function(service) {};

/**
 * @param {string} type
 * @param {function(!Event): ?|(!EventListener|!EventListenerObject)} listener
 * @param {boolean=} useCapture
 * @return {void}
 */
BluetoothRemoteGATTService.prototype.addEventListener = function(type, listener, useCapture) {};
/**
 * @record
 * @struct
 */
function BluetoothRemoteGATTServer() {}
 /** @type {!BluetoothDevice} */
BluetoothRemoteGATTServer.prototype.device;
 /** @type {boolean} */
BluetoothRemoteGATTServer.prototype.connected;

/**
 * @return {!Promise<!BluetoothRemoteGATTServer>}
 */
BluetoothRemoteGATTServer.prototype.connect = function() {};

/**
 * @return {void}
 */
BluetoothRemoteGATTServer.prototype.disconnect = function() {};

/**
 * @param {(string|number)} service
 * @return {!Promise<!BluetoothRemoteGATTService>}
 */
BluetoothRemoteGATTServer.prototype.getPrimaryService = function(service) {};

/**
 * @param {(string|number)=} service
 * @return {!Promise<!Array<!BluetoothRemoteGATTService>>}
 */
BluetoothRemoteGATTServer.prototype.getPrimaryServices = function(service) {};
/**
 * @record
 * @struct
 */
function BluetoothDeviceEventHandlers() {}
 /** @type {function(!Event): ?} */
BluetoothDeviceEventHandlers.prototype.ongattserverdisconnected;
/**
 * @extends {BluetoothDeviceEventHandlers}
 * @extends {CharacteristicEventHandlers}
 * @extends {ServiceEventHandlers}
 * @record
 * @struct
 */
function BluetoothDevice() {}
 /** @type {string} */
BluetoothDevice.prototype.id;
 /** @type {string} */
BluetoothDevice.prototype.name;
 /** @type {!BluetoothRemoteGATTServer} */
BluetoothDevice.prototype.gatt;
 /** @type {!Array<string>} */
BluetoothDevice.prototype.uuids;
 /** @type {boolean} */
BluetoothDevice.prototype.watchingAdvertisements;

/**
 * @return {!Promise<void>}
 */
BluetoothDevice.prototype.watchAdvertisements = function() {};

/**
 * @return {void}
 */
BluetoothDevice.prototype.unwatchAdvertisements = function() {};

/**
 * @param {string} type
 * @param {function(!Event): ?|(!EventListener|!EventListenerObject)} listener
 * @param {boolean=} useCapture
 * @return {void}
 */
BluetoothDevice.prototype.addEventListener = function(type, listener, useCapture) {};
/**
 * @extends {BluetoothDeviceEventHandlers}
 * @extends {CharacteristicEventHandlers}
 * @extends {ServiceEventHandlers}
 * @record
 * @struct
 */
function Bluetooth() {}
 /** @type {function(!Event): ?} */
Bluetooth.prototype.onavailabilitychanged;
 /** @type {!BluetoothDevice} */
Bluetooth.prototype.referringDevice;

/**
 * @return {!Promise<boolean>}
 */
Bluetooth.prototype.getAvailability = function() {};

/**
 * @param {!RequestDeviceOptions=} options
 * @return {!Promise<!BluetoothDevice>}
 */
Bluetooth.prototype.requestDevice = function(options) {};

/**
 * @param {string} type
 * @param {function(!Event): ?|(!EventListener|!EventListenerObject)} listener
 * @param {boolean=} useCapture
 * @return {void}
 */
Bluetooth.prototype.addEventListener = function(type, listener, useCapture) {};
 /** @type {!Bluetooth} */
Navigator.prototype.bluetooth;
