/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/griddle-react/index.d.ts:

/* TODO: ImportDeclaration in  */

/** @typedef {(!React.ComponentClass<?>|!React.StatelessComponent<?>)} */
var ReactClass;
/**
 * @record
 * @struct
 */
function CustomColumnComponentProps() {}
 /** @type {?} */
CustomColumnComponentProps.prototype.data;
 /** @type {?} */
CustomColumnComponentProps.prototype.rowData;
 /** @type {?} */
CustomColumnComponentProps.prototype.metaData;
/**
 * @record
 * @struct
 */
function CustomRowComponentProps() {}
 /** @type {?} */
CustomRowComponentProps.prototype.data;
/**
 * @record
 * @struct
 */
function CustomGridComponentProps() {}
 /** @type {!Array<?>} */
CustomGridComponentProps.prototype.data;
/**
 * @record
 * @struct
 */
function CustomPagerComponentProps() {}
 /** @type {number} */
CustomPagerComponentProps.prototype.currentPage;
 /** @type {number} */
CustomPagerComponentProps.prototype.maxPage;
 /** @type {string} */
CustomPagerComponentProps.prototype.nextText;
 /** @type {string} */
CustomPagerComponentProps.prototype.previousText;

/**
 * @return {void}
 */
CustomPagerComponentProps.prototype.next = function() {};

/**
 * @return {void}
 */
CustomPagerComponentProps.prototype.previous = function() {};

/**
 * @param {number} number
 * @return {void}
 */
CustomPagerComponentProps.prototype.setPage = function(number) {};
/**
 * @record
 * @struct
 */
function CustomHeaderComponentProps() {}
 /** @type {string} */
CustomHeaderComponentProps.prototype.columnName;
 /** @type {string} */
CustomHeaderComponentProps.prototype.displayName;

/**
 * @param {string} filter
 * @param {string} columnName
 * @return {void}
 */
CustomHeaderComponentProps.prototype.filterByColumn = function(filter, columnName) {};
/**
 * @record
 * @struct
 */
function CustomFilterComponentProps() {}
 /** @type {string} */
CustomFilterComponentProps.prototype.placeholderText;

/**
 * @param {?} val
 * @return {void}
 */
CustomFilterComponentProps.prototype.changeFilter = function(val) {};
/**
 * @record
 * @struct
 */
function ColumnMetaData() {}
 /** @type {string} */
ColumnMetaData.prototype.columnName;
 /** @type {string} */
ColumnMetaData.prototype.cssClassName;
 /** @type {(!React.ComponentClass<?>|!React.StatelessComponent<?>)} */
ColumnMetaData.prototype.customComponent;
 /** @type {(!React.ComponentClass<?>|!React.StatelessComponent<?>)} */
ColumnMetaData.prototype.customHeaderComponent;
 /** @type {!Object} */
ColumnMetaData.prototype.customHeaderComponentProps;
 /** @type {string} */
ColumnMetaData.prototype.displayName;
 /** @type {boolean} */
ColumnMetaData.prototype.locked;
 /** @type {number} */
ColumnMetaData.prototype.order;
 /** @type {boolean} */
ColumnMetaData.prototype.sortable;
 /** @type {boolean} */
ColumnMetaData.prototype.visible;

/** @typedef {?} */
var BodyCssClassNameFunction;
/**
 * @record
 * @struct
 */
function RowMetaData() {}
 /** @type {(string|?)} */
RowMetaData.prototype.bodyCssClassName;
/**
 * @record
 * @struct
 */
function GriddleProps() {}
 /** @type {!Array<string>} */
GriddleProps.prototype.columns;
 /** @type {!Array<?>} */
GriddleProps.prototype.columnMetadata;
 /** @type {?} */
GriddleProps.prototype.rowMetadata;
 /** @type {!Array<?>} */
GriddleProps.prototype.results;
 /** @type {number} */
GriddleProps.prototype.resultsPerPage;
 /** @type {string} */
GriddleProps.prototype.initialSort;
 /** @type {boolean} */
GriddleProps.prototype.initialSortAscending;
 /** @type {string} */
GriddleProps.prototype.gridClassName;
 /** @type {string} */
GriddleProps.prototype.tableClassName;
 /** @type {string} */
GriddleProps.prototype.customFormatClassName;
 /** @type {string} */
GriddleProps.prototype.settingsText;
 /** @type {string} */
GriddleProps.prototype.filterPlaceholderText;
 /** @type {string} */
GriddleProps.prototype.nextText;
 /** @type {string} */
GriddleProps.prototype.previousText;
 /** @type {string} */
GriddleProps.prototype.maxRowsText;
 /** @type {string} */
GriddleProps.prototype.enableCustomFormatText;
 /** @type {string} */
GriddleProps.prototype.childrenColumnName;
 /** @type {!Array<string>} */
GriddleProps.prototype.metadataColumns;
 /** @type {boolean} */
GriddleProps.prototype.showFilter;
 /** @type {boolean} */
GriddleProps.prototype.showSettings;
 /** @type {boolean} */
GriddleProps.prototype.useCustomRowComponent;
 /** @type {boolean} */
GriddleProps.prototype.useCustomGridComponent;
 /** @type {boolean} */
GriddleProps.prototype.useCustomPagerComponent;
 /** @type {boolean} */
GriddleProps.prototype.useCustomFilterer;
 /** @type {boolean} */
GriddleProps.prototype.useCustomFilterComponent;
 /** @type {boolean} */
GriddleProps.prototype.useGriddleStyles;
 /** @type {(!React.ComponentClass<?>|!React.StatelessComponent<?>)} */
GriddleProps.prototype.customRowComponent;
 /** @type {(!React.ComponentClass<?>|!React.StatelessComponent<?>)} */
GriddleProps.prototype.customGridComponent;
 /** @type {(!React.ComponentClass<?>|!React.StatelessComponent<?>)} */
GriddleProps.prototype.customPagerComponent;
 /** @type {(!React.ComponentClass<?>|!React.StatelessComponent<?>)} */
GriddleProps.prototype.customFilterComponent;
 /** @type {boolean} */
GriddleProps.prototype.enableToggleCustom;
 /** @type {string} */
GriddleProps.prototype.noDataMessage;
 /** @type {string} */
GriddleProps.prototype.noDataClassName;
 /** @type {(!React.ComponentClass<void>|!React.StatelessComponent<void>)} */
GriddleProps.prototype.customNoDataComponent;
 /** @type {boolean} */
GriddleProps.prototype.showTableHeading;
 /** @type {boolean} */
GriddleProps.prototype.showPager;
 /** @type {boolean} */
GriddleProps.prototype.useFixedHeader;
 /** @type {boolean} */
GriddleProps.prototype.useExternal;
 /** @type {number} */
GriddleProps.prototype.externalMaxPage;
 /** @type {number} */
GriddleProps.prototype.externalCurrentPage;
 /** @type {string} */
GriddleProps.prototype.externalSortColumn;
 /** @type {boolean} */
GriddleProps.prototype.externalSortAscending;
 /** @type {(!React.ComponentClass<void>|!React.StatelessComponent<void>)} */
GriddleProps.prototype.externalLoadingComponent;
 /** @type {boolean} */
GriddleProps.prototype.externalIsLoading;
 /** @type {boolean} */
GriddleProps.prototype.enableInfiniteScroll;
 /** @type {number} */
GriddleProps.prototype.bodyHeight;
 /** @type {number} */
GriddleProps.prototype.paddingHeight;
 /** @type {number} */
GriddleProps.prototype.rowHeight;
 /** @type {number} */
GriddleProps.prototype.infiniteScrollLoadTreshold;
 /** @type {boolean} */
GriddleProps.prototype.useFixedLayout;
 /** @type {boolean} */
GriddleProps.prototype.isSubGriddle;
 /** @type {boolean} */
GriddleProps.prototype.enableSort;
 /** @type {string} */
GriddleProps.prototype.sortAscendingClassName;
 /** @type {string} */
GriddleProps.prototype.sortDescendingClassName;
 /** @type {string} */
GriddleProps.prototype.parentRowCollapsedClassName;
 /** @type {string} */
GriddleProps.prototype.parentRowExpandedClassName;
 /** @type {string} */
GriddleProps.prototype.settingsToggleClassName;
 /** @type {string} */
GriddleProps.prototype.nextClassName;
 /** @type {string} */
GriddleProps.prototype.previousClassName;
 /** @type {(string|!React.ReactElement<?>)} */
GriddleProps.prototype.sortAscendingComponent;
 /** @type {(string|!React.ReactElement<?>)} */
GriddleProps.prototype.sortDescendingComponent;
 /** @type {(string|!React.ReactElement<?>)} */
GriddleProps.prototype.sortDefaultComponent;
 /** @type {(string|!React.ReactElement<?>)} */
GriddleProps.prototype.parentRowCollapsedComponent;
 /** @type {(string|!React.ReactElement<?>)} */
GriddleProps.prototype.parentRowExpandedComponent;
 /** @type {(string|!React.ReactElement<?>)} */
GriddleProps.prototype.settingsIconComponent;
 /** @type {(string|!React.ReactElement<?>)} */
GriddleProps.prototype.nextIconComponent;
 /** @type {(string|!React.ReactElement<?>)} */
GriddleProps.prototype.previousIconComponent;

/**
 * @param {!Array<?>} items
 * @param {?} query
 * @return {!Array<?>}
 */
GriddleProps.prototype.customFilterer = function(items, query) {};

/**
 * @param {number} index
 * @return {void}
 */
GriddleProps.prototype.externalSetPage = function(index) {};

/**
 * @param {string} sort
 * @param {boolean} sortAscending
 * @return {void}
 */
GriddleProps.prototype.externalChangeSort = function(sort, sortAscending) {};

/**
 * @param {string} filter
 * @return {void}
 */
GriddleProps.prototype.externalSetFilter = function(filter) {};

/**
 * @param {number} size
 * @return {void}
 */
GriddleProps.prototype.externalSetPageSize = function(size) {};

/**
 * @return {void}
 */
GriddleProps.prototype.onRowClick = function() {};
/**
 * @extends {React.Component}
 * @constructor
 * @struct
 */
function Griddle() {}

/* TODO: ExportAssignment in  */
