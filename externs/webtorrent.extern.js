/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/webtorrent/index.d.ts:

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */
 /** @type {!WebTorrent.WebTorrent} */
var WebTorrent;
/**
 * @record
 * @struct
 */
WebTorrent.WebTorrent = function() {};

/* TODO: ConstructSignature: WebTorrent */

/* TODO: CallSignature: WebTorrent */
 /** @type {boolean} */
WebTorrent.WebTorrent.prototype.WEBRTC_SUPPORT;
/**
 * @record
 * @struct
 */
WebTorrent.Options = function() {};
 /** @type {number} */
WebTorrent.Options.prototype.maxConns;
 /** @type {(string|?)} */
WebTorrent.Options.prototype.nodeId;
 /** @type {(string|?)} */
WebTorrent.Options.prototype.peerId;
 /** @type {(boolean|!Object)} */
WebTorrent.Options.prototype.tracker;
 /** @type {(boolean|!Object)} */
WebTorrent.Options.prototype.dht;
 /** @type {boolean} */
WebTorrent.Options.prototype.webSeeds;
/**
 * @record
 * @struct
 */
WebTorrent.TorrentOptions = function() {};
 /** @type {!Array<?>} */
WebTorrent.TorrentOptions.prototype.announce;
 /** @type {number} */
WebTorrent.TorrentOptions.prototype.maxWebConns;
 /** @type {string} */
WebTorrent.TorrentOptions.prototype.path;
 /** @type {string} */
WebTorrent.TorrentOptions.prototype.name;

/**
 * @return {void}
 */
WebTorrent.TorrentOptions.prototype.getAnnounceOpts = function() {};

/**
 * @param {number} chunkLength
 * @param {{length: number, files: !Array<!File>, torrent: !WebTorrent.Torrent}} storeOpts
 * @return {?}
 */
WebTorrent.TorrentOptions.prototype.store = function(chunkLength, storeOpts) {};
/**
 * @record
 * @struct
 */
WebTorrent.Instance = function() {};
 /** @type {!Array<!WebTorrent.Torrent>} */
WebTorrent.Instance.prototype.torrents;
 /** @type {number} */
WebTorrent.Instance.prototype.downloadSpeed;
 /** @type {number} */
WebTorrent.Instance.prototype.uploadSpeed;
 /** @type {number} */
WebTorrent.Instance.prototype.progress;
 /** @type {number} */
WebTorrent.Instance.prototype.ratio;

/**
 * @param {string} event
 * @param {function(!WebTorrent.Torrent): void|function((string|!Error)): void} callback
 * @return {Instance}
 */
WebTorrent.Instance.prototype.on = function(event, callback) {};

/**
 * @param {(string|?|!ParseTorrent.Instance)} torrent
 * @param {!WebTorrent.TorrentOptions|function(!WebTorrent.Torrent): ?=} opts_or_cb
 * @param {function(!WebTorrent.Torrent): ?=} cb
 * @return {!WebTorrent.Torrent}
 */
WebTorrent.Instance.prototype.add = function(torrent, opts_or_cb, cb) {};

/**
 * @param {(string|?|!File|!Array<!File>|!Array<string>|!FileList|!Array<?>|!NodeJS.ReadableStream|!Array<!NodeJS.ReadableStream>)} input
 * @param {!WebTorrent.TorrentOptions|function(!WebTorrent.Torrent): ?=} opts_or_cb
 * @param {function(!WebTorrent.Torrent): ?=} cb
 * @return {!WebTorrent.Torrent}
 */
WebTorrent.Instance.prototype.seed = function(input, opts_or_cb, cb) {};

/**
 * @param {(string|?|!WebTorrent.Torrent)} torrentId
 * @param {function((string|!Error)): void=} callback
 * @return {void}
 */
WebTorrent.Instance.prototype.remove = function(torrentId, callback) {};

/**
 * @param {function((string|!Error)): void=} callback
 * @return {void}
 */
WebTorrent.Instance.prototype.destroy = function(callback) {};

/**
 * @param {(string|?|!WebTorrent.Torrent)} torrentId
 * @return {(void|!WebTorrent.Torrent)}
 */
WebTorrent.Instance.prototype.get = function(torrentId) {};
/**
 * @record
 * @struct
 */
WebTorrent.Torrent = function() {};
 /** @type {string} */
WebTorrent.Torrent.prototype.infoHash;
 /** @type {string} */
WebTorrent.Torrent.prototype.magnetURI;
 /** @type {?} */
WebTorrent.Torrent.prototype.torrentFile;
 /** @type {string} */
WebTorrent.Torrent.prototype.torrentFileBlobURL;
 /** @type {!Array<!WebTorrent.TorrentFile>} */
WebTorrent.Torrent.prototype.files;
 /** @type {number} */
WebTorrent.Torrent.prototype.timeRemaining;
 /** @type {number} */
WebTorrent.Torrent.prototype.received;
 /** @type {number} */
WebTorrent.Torrent.prototype.downloaded;
 /** @type {number} */
WebTorrent.Torrent.prototype.uploaded;
 /** @type {number} */
WebTorrent.Torrent.prototype.downloadSpeed;
 /** @type {number} */
WebTorrent.Torrent.prototype.uploadSpeed;
 /** @type {number} */
WebTorrent.Torrent.prototype.progress;
 /** @type {number} */
WebTorrent.Torrent.prototype.ratio;
 /** @type {number} */
WebTorrent.Torrent.prototype.numPeers;
 /** @type {string} */
WebTorrent.Torrent.prototype.path;
 /** @type {boolean} */
WebTorrent.Torrent.prototype.ready;
 /** @type {string} */
WebTorrent.Torrent.prototype.name;

/**
 * @param {function((string|!Error)): void=} cb
 * @return {void}
 */
WebTorrent.Torrent.prototype.destroy = function(cb) {};

/**
 * @param {(string|!SimplePeer.Instance)} peer
 * @return {boolean}
 */
WebTorrent.Torrent.prototype.addPeer = function(peer) {};

/**
 * @param {string} url
 * @return {void}
 */
WebTorrent.Torrent.prototype.addWebSeed = function(url) {};

/**
 * @param {(string|!SimplePeer.Instance)} peer
 * @return {void}
 */
WebTorrent.Torrent.prototype.removePeer = function(peer) {};

/**
 * @param {number} start
 * @param {number} end
 * @param {number=} priority
 * @param {function(): void=} notify
 * @return {void}
 */
WebTorrent.Torrent.prototype.select = function(start, end, priority, notify) {};

/**
 * @param {number} start
 * @param {number} end
 * @param {number} priority
 * @return {void}
 */
WebTorrent.Torrent.prototype.deselect = function(start, end, priority) {};

/**
 * @param {!RequestOptions=} opts
 * @return {!Server}
 */
WebTorrent.Torrent.prototype.createServer = function(opts) {};

/**
 * @return {void}
 */
WebTorrent.Torrent.prototype.pause = function() {};

/**
 * @return {void}
 */
WebTorrent.Torrent.prototype.resume = function() {};

/**
 * @param {string} event
 * @param {function(): void|function((string|!Error)): void|function(number): void|function(!BittorrentProtocol.Wire, string): void|function(string): void} callback
 * @return {Torrent}
 */
WebTorrent.Torrent.prototype.on = function(event, callback) {};
/**
 * @record
 * @struct
 */
WebTorrent.TorrentFile = function() {};
 /** @type {string} */
WebTorrent.TorrentFile.prototype.name;
 /** @type {string} */
WebTorrent.TorrentFile.prototype.path;
 /** @type {number} */
WebTorrent.TorrentFile.prototype.length;
 /** @type {number} */
WebTorrent.TorrentFile.prototype.downloaded;

/**
 * @return {void}
 */
WebTorrent.TorrentFile.prototype.select = function() {};

/**
 * @return {void}
 */
WebTorrent.TorrentFile.prototype.deselect = function() {};

/**
 * @param {{start: number, end: number}=} opts
 * @return {!NodeJS.ReadableStream}
 */
WebTorrent.TorrentFile.prototype.createReadStream = function(opts) {};

/**
 * @param {function((string|!Error), ?): void} callback
 * @return {void}
 */
WebTorrent.TorrentFile.prototype.getBuffer = function(callback) {};

/**
 * @param {(string|!HTMLElement)} rootElement
 * @param {{autoplay: boolean, controls: boolean, maxBlobLength: number}|function(!Error, !HTMLMediaElement): void=} opts_or_callback
 * @param {function(!Error, !HTMLMediaElement): void=} callback
 * @return {void}
 */
WebTorrent.TorrentFile.prototype.appendTo = function(rootElement, opts_or_callback, callback) {};

/**
 * @param {(string|!HTMLMediaElement)} rootElement
 * @param {{autoplay: boolean, controls: boolean, maxBlobLength: number}|function(!Error, !HTMLMediaElement): void=} opts_or_callback
 * @param {function(!Error, !HTMLMediaElement): void=} callback
 * @return {void}
 */
WebTorrent.TorrentFile.prototype.renderTo = function(rootElement, opts_or_callback, callback) {};

/**
 * @param {function((string|!Error), !Blob): void} callback
 * @return {void}
 */
WebTorrent.TorrentFile.prototype.getBlob = function(callback) {};

/**
 * @param {function((string|!Error), string): void} callback
 * @return {void}
 */
WebTorrent.TorrentFile.prototype.getBlobURL = function(callback) {};

/* TODO: ExportAssignment in  */
