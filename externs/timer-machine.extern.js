/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/timer-machine/index.d.ts:

/* TODO: NamespaceExportDeclaration in  */

/* TODO: ExportAssignment in  */
/** @const */
var Timer = {};

/** @typedef {string} */
Timer.TimerEvent;

/**
 * @param {string} reference
 * @return {!Timer}
 */
Timer.get = function(reference) {};

/**
 * @param {string} reference
 * @return {!Timer}
 */
Timer.destroy = function(reference) {};

/**
 * @return {boolean}
 */
Timer.prototype.isStarted = function() {};

/**
 * @return {boolean}
 */
Timer.prototype.isStopped = function() {};

/**
 * @return {void}
 */
Timer.prototype.start = function() {};

/**
 * @return {number}
 */
Timer.prototype.timeFromStart = function() {};

/**
 * @return {void}
 */
Timer.prototype.stop = function() {};

/**
 * @return {number}
 */
Timer.prototype.time = function() {};

/**
 * @return {void}
 */
Timer.prototype.toggle = function() {};

/**
 * @return {void}
 */
Timer.prototype.emitTime = function() {};

/**
 * @return {number}
 */
Timer.prototype.valueOf = function() {};

/**
 * @param {string} event
 * @param {function(): void=} callback
 * @return {void}
 */
Timer.prototype.on = function(event, callback) {};
