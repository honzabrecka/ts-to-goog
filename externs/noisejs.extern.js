/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/noisejs/index.d.ts:

/* TODO: ExportAssignment in  */

/* TODO: NamespaceExportDeclaration in  */

/**
 * @constructor
 * @struct
 * Passing in seed will seed this Noise instance
 * @param {number=} seed
 */
function Noise(seed) {}

/**
 * 2D simplex noise
 * @param {number} x
 * @param {number} y
 * @return {number}
 */
Noise.prototype.simplex2 = function(x, y) {};

/**
 * 3D simplex noise
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {number}
 */
Noise.prototype.simplex3 = function(x, y, z) {};

/**
 * 2D Perlin Noise
 * @param {number} x
 * @param {number} y
 * @return {number}
 */
Noise.prototype.perlin2 = function(x, y) {};

/**
 * 3D Perlin Noise
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {number}
 */
Noise.prototype.perlin3 = function(x, y, z) {};

/**
 * This isn't a very good seeding function, but it works ok. It supports 2^16
 * different seed values. Write something better if you need more seeds.
 * @param {number} seed
 * @return {void}
 */
Noise.prototype.seed = function(seed) {};
