/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/jquery-steps/index.d.ts:

/**
 * @param {!JQuerySteps.Settings=} param
 * @return {!JQuerySteps.JQuerySteps}
 */
JQuery.prototype.steps = function(param) {};
/** @const */
var JQuerySteps = {};
/**
 * @record
 * @struct
 */
JQuerySteps.JQuerySteps = function() {};

/**
 * Adds a new step. (chainable)
 * @param {!JQuerySteps.Step} step
 * @return {!JQuerySteps.JQuerySteps}
 */
JQuerySteps.JQuerySteps.prototype.add = function(step) {};

/**
 * Inserts a new step to a specific position. (chainable)
 * @param {number} index
 * @param {!JQuerySteps.Step} step
 * @return {!JQuerySteps.JQuerySteps}
 */
JQuerySteps.JQuerySteps.prototype.insert = function(index, step) {};

/**
 * Removes a specific step by an given index.
 * @param {number} index
 * @return {boolean}
 */
JQuerySteps.JQuerySteps.prototype.remove = function(index) {};

/**
 * Gets the current step object.
 * @return {!JQuerySteps.Step}
 */
JQuerySteps.JQuerySteps.prototype.getCurrentStep = function() {};

/**
 * Gets the current step index.
 * @return {number}
 */
JQuerySteps.JQuerySteps.prototype.getCurrentIndex = function() {};

/**
 * Gets a specific step object by index.
 * @param {number} index
 * @return {!JQuerySteps.Step}
 */
JQuerySteps.JQuerySteps.prototype.getStep = function(index) {};

/**
 * Routes to the previous step.
 * @return {boolean}
 */
JQuerySteps.JQuerySteps.prototype.next = function() {};

/**
 * Routes to the next step.
 * @return {boolean}
 */
JQuerySteps.JQuerySteps.prototype.previous = function() {};

/**
 * Triggers the onFinishing and onFinished event.
 * @return {void}
 */
JQuerySteps.JQuerySteps.prototype.finish = function() {};

/**
 * Removes the control functionality completely and transforms the current state to the initial HTML structure.
 * @return {void}
 */
JQuerySteps.JQuerySteps.prototype.destroy = function() {};

/**
 * Skips a certain amount of steps. Not yet implemented!
 * @param {number} count
 * @return {boolean}
 */
JQuerySteps.JQuerySteps.prototype.skip = function(count) {};
/**
 * @record
 * @struct
 */
JQuerySteps.Settings = function() {};
 /** @type {string} */
JQuerySteps.Settings.prototype.headerTag;
 /** @type {string} */
JQuerySteps.Settings.prototype.bodyTag;
 /** @type {string} */
JQuerySteps.Settings.prototype.contentContainerTag;
 /** @type {string} */
JQuerySteps.Settings.prototype.actionContainerTag;
 /** @type {string} */
JQuerySteps.Settings.prototype.stepsContainerTag;
 /** @type {string} */
JQuerySteps.Settings.prototype.cssClass;
 /** @type {(string|number)} */
JQuerySteps.Settings.prototype.stepsOrientation;
 /** @type {string} */
JQuerySteps.Settings.prototype.titleTemplate;
 /** @type {string} */
JQuerySteps.Settings.prototype.loadingTemplate;
 /** @type {boolean} */
JQuerySteps.Settings.prototype.autoFocus;
 /** @type {boolean} */
JQuerySteps.Settings.prototype.enableAllSteps;
 /** @type {boolean} */
JQuerySteps.Settings.prototype.enableKeyNavigation;
 /** @type {boolean} */
JQuerySteps.Settings.prototype.enablePagination;
 /** @type {boolean} */
JQuerySteps.Settings.prototype.suppressPaginationOnFocus;
 /** @type {boolean} */
JQuerySteps.Settings.prototype.enableContentCache;
 /** @type {boolean} */
JQuerySteps.Settings.prototype.enableCancelButton;
 /** @type {boolean} */
JQuerySteps.Settings.prototype.enableFinishButton;
 /** @type {boolean} */
JQuerySteps.Settings.prototype.showFinishButtonAlways;
 /** @type {boolean} */
JQuerySteps.Settings.prototype.forceMoveForward;
 /** @type {boolean} */
JQuerySteps.Settings.prototype.saveState;
 /** @type {number} */
JQuerySteps.Settings.prototype.startIndex;
 /** @type {(string|number)} */
JQuerySteps.Settings.prototype.transitionEffect;
 /** @type {number} */
JQuerySteps.Settings.prototype.transitionEffectSpeed;
 /** @type {!JQuerySteps.FunctionOnStepChanging} */
JQuerySteps.Settings.prototype.onStepChanging;
 /** @type {!JQuerySteps.FunctionOnStepChanged} */
JQuerySteps.Settings.prototype.onStepChanged;
 /** @type {!JQuerySteps.FunctionOnCancelled} */
JQuerySteps.Settings.prototype.onCanceled;
 /** @type {!JQuerySteps.FunctionOnFinishing} */
JQuerySteps.Settings.prototype.onFinishing;
 /** @type {!JQuerySteps.FunctionOnFinished} */
JQuerySteps.Settings.prototype.onFinished;
 /** @type {!JQuerySteps.FunctionOnInit} */
JQuerySteps.Settings.prototype.onInit;
 /** @type {!JQuerySteps.FunctionOnContentLoaded} */
JQuerySteps.Settings.prototype.onContentLoaded;
 /** @type {!JQuerySteps.LabelSettings} */
JQuerySteps.Settings.prototype.labels;
/**
 * @record
 * @struct
 */
JQuerySteps.LabelSettings = function() {};
 /** @type {string} */
JQuerySteps.LabelSettings.prototype.cancel;
 /** @type {string} */
JQuerySteps.LabelSettings.prototype.current;
 /** @type {string} */
JQuerySteps.LabelSettings.prototype.pagination;
 /** @type {string} */
JQuerySteps.LabelSettings.prototype.finish;
 /** @type {string} */
JQuerySteps.LabelSettings.prototype.next;
 /** @type {string} */
JQuerySteps.LabelSettings.prototype.previous;
 /** @type {string} */
JQuerySteps.LabelSettings.prototype.loading;
/**
 * @record
 * @struct
 */
JQuerySteps.FunctionOnStepChanging = function() {};

/* TODO: CallSignature: JQuerySteps */
/**
 * @record
 * @struct
 */
JQuerySteps.FunctionOnStepChanged = function() {};

/* TODO: CallSignature: JQuerySteps */
/**
 * @record
 * @struct
 */
JQuerySteps.FunctionOnCancelled = function() {};

/* TODO: CallSignature: JQuerySteps */
/**
 * @record
 * @struct
 */
JQuerySteps.FunctionOnFinishing = function() {};

/* TODO: CallSignature: JQuerySteps */
/**
 * @record
 * @struct
 */
JQuerySteps.FunctionOnFinished = function() {};

/* TODO: CallSignature: JQuerySteps */
/**
 * @record
 * @struct
 */
JQuerySteps.FunctionOnInit = function() {};

/* TODO: CallSignature: JQuerySteps */
/**
 * @record
 * @struct
 */
JQuerySteps.FunctionOnContentLoaded = function() {};

/* TODO: CallSignature: JQuerySteps */
/**
 * @record
 * @struct
 */
JQuerySteps.Step = function() {};
 /** @type {string} */
JQuerySteps.Step.prototype.title;
 /** @type {string} */
JQuerySteps.Step.prototype.content;
 /** @type {(string|number)} */
JQuerySteps.Step.prototype.contentMode;
 /** @type {string} */
JQuerySteps.Step.prototype.contentUrl;
