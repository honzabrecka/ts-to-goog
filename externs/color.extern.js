/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/color/index.d.ts:

/* TODO: ImportEqualsDeclaration in  */

/** @typedef {(string|number|?|!ArrayLike<number>)} */
var ColorParam;
/**
 * @record
 * @struct
 */
function Color() {}

/**
 * @return {string}
 */
Color.prototype.toString = function() {};

/**
 * @return {?}
 */
Color.prototype.toJSON = function() {};

/**
 * @param {number=} places
 * @return {string}
 */
Color.prototype.string = function(places) {};

/**
 * @param {number=} places
 * @return {string}
 */
Color.prototype.percentString = function(places) {};

/**
 * @return {!Array<number>}
 */
Color.prototype.array = function() {};

/**
 * @return {?}
 */
Color.prototype.object = function() {};

/**
 * @return {!Array<number>}
 */
Color.prototype.unitArray = function() {};

/**
 * @return {?}
 */
Color.prototype.unitObject = function() {};

/**
 * @param {number=} places
 * @return {?}
 */
Color.prototype.round = function(places) {};

/**
 * @param {number=} val
 * @return {number|?}
 */
Color.prototype.alpha = function(val) {};

/**
 * @param {number=} val
 * @return {number|?}
 */
Color.prototype.red = function(val) {};

/**
 * @param {number=} val
 * @return {number|?}
 */
Color.prototype.green = function(val) {};

/**
 * @param {number=} val
 * @return {number|?}
 */
Color.prototype.blue = function(val) {};

/**
 * @param {number=} val
 * @return {number|?}
 */
Color.prototype.hue = function(val) {};

/**
 * @param {number=} val
 * @return {number|?}
 */
Color.prototype.saturationl = function(val) {};

/**
 * @param {number=} val
 * @return {number|?}
 */
Color.prototype.lightness = function(val) {};

/**
 * @param {number=} val
 * @return {number|?}
 */
Color.prototype.saturationv = function(val) {};

/**
 * @param {number=} val
 * @return {number|?}
 */
Color.prototype.value = function(val) {};

/**
 * @param {number=} val
 * @return {number|?}
 */
Color.prototype.chroma = function(val) {};

/**
 * @param {number=} val
 * @return {number|?}
 */
Color.prototype.gray = function(val) {};

/**
 * @param {number=} val
 * @return {number|?}
 */
Color.prototype.white = function(val) {};

/**
 * @param {number=} val
 * @return {number|?}
 */
Color.prototype.wblack = function(val) {};

/**
 * @param {number=} val
 * @return {number|?}
 */
Color.prototype.cyan = function(val) {};

/**
 * @param {number=} val
 * @return {number|?}
 */
Color.prototype.magenta = function(val) {};

/**
 * @param {number=} val
 * @return {number|?}
 */
Color.prototype.yellow = function(val) {};

/**
 * @param {number=} val
 * @return {number|?}
 */
Color.prototype.black = function(val) {};

/**
 * @param {number=} val
 * @return {number|?}
 */
Color.prototype.x = function(val) {};

/**
 * @param {number=} val
 * @return {number|?}
 */
Color.prototype.y = function(val) {};

/**
 * @param {number=} val
 * @return {number|?}
 */
Color.prototype.z = function(val) {};

/**
 * @param {number=} val
 * @return {number|?}
 */
Color.prototype.l = function(val) {};

/**
 * @param {number=} val
 * @return {number|?}
 */
Color.prototype.a = function(val) {};

/**
 * @param {number=} val
 * @return {number|?}
 */
Color.prototype.b = function(val) {};

/**
 * @param {string=} val
 * @return {string|?}
 */
Color.prototype.keyword = function(val) {};

/**
 * @param {string=} val
 * @return {string|?}
 */
Color.prototype.hex = function(val) {};

/**
 * @return {number}
 */
Color.prototype.rgbNumber = function() {};

/**
 * @return {number}
 */
Color.prototype.luminosity = function() {};

/**
 * @param {?} color2
 * @return {number}
 */
Color.prototype.contrast = function(color2) {};

/**
 * @param {?} color2
 * @return {string}
 */
Color.prototype.level = function(color2) {};

/**
 * @return {boolean}
 */
Color.prototype.dark = function() {};

/**
 * @return {boolean}
 */
Color.prototype.light = function() {};

/**
 * @return {?}
 */
Color.prototype.negate = function() {};

/**
 * @param {number} ratio
 * @return {?}
 */
Color.prototype.lighten = function(ratio) {};

/**
 * @param {number} ratio
 * @return {?}
 */
Color.prototype.darken = function(ratio) {};

/**
 * @param {number} ratio
 * @return {?}
 */
Color.prototype.saturate = function(ratio) {};

/**
 * @param {number} ratio
 * @return {?}
 */
Color.prototype.desaturate = function(ratio) {};

/**
 * @param {number} ratio
 * @return {?}
 */
Color.prototype.whiten = function(ratio) {};

/**
 * @param {number} ratio
 * @return {?}
 */
Color.prototype.blacken = function(ratio) {};

/**
 * @return {?}
 */
Color.prototype.grayscale = function() {};

/**
 * @param {number} ratio
 * @return {?}
 */
Color.prototype.fade = function(ratio) {};

/**
 * @param {number} ratio
 * @return {?}
 */
Color.prototype.opaquer = function(ratio) {};

/**
 * @param {number} degrees
 * @return {?}
 */
Color.prototype.rotate = function(degrees) {};

/**
 * @param {?} mixinColor
 * @param {number=} weight
 * @return {?}
 */
Color.prototype.mix = function(mixinColor, weight) {};

/**
 * @param {...number} args
 * @return {?}
 */
Color.prototype.rgb = function(args) {};

/**
 * @param {...number} args
 * @return {?}
 */
Color.prototype.hsl = function(args) {};

/**
 * @param {...number} args
 * @return {?}
 */
Color.prototype.hsv = function(args) {};

/**
 * @param {...number} args
 * @return {?}
 */
Color.prototype.hwb = function(args) {};

/**
 * @param {...number} args
 * @return {?}
 */
Color.prototype.cmyk = function(args) {};

/**
 * @param {...number} args
 * @return {?}
 */
Color.prototype.xyz = function(args) {};

/**
 * @param {...number} args
 * @return {?}
 */
Color.prototype.lab = function(args) {};

/**
 * @param {...number} args
 * @return {?}
 */
Color.prototype.lch = function(args) {};

/**
 * @param {...number} args
 * @return {?}
 */
Color.prototype.ansi16 = function(args) {};

/**
 * @param {...number} args
 * @return {?}
 */
Color.prototype.ansi256 = function(args) {};

/**
 * @param {...number} args
 * @return {?}
 */
Color.prototype.hcg = function(args) {};

/**
 * @param {...number} args
 * @return {?}
 */
Color.prototype.apple = function(args) {};
/**
 * @record
 * @struct
 */
function ColorConstructor() {}

/* TODO: CallSignature:  */

/* TODO: ConstructSignature:  */

/**
 * @param {...number|(string|number|?|!ArrayLike<number>)} val_or_color
 * @return {?}
 */
ColorConstructor.prototype.rgb = function(val_or_color) {};

/**
 * @param {...number|(string|number|?|!ArrayLike<number>)} val_or_color
 * @return {?}
 */
ColorConstructor.prototype.hsl = function(val_or_color) {};

/**
 * @param {...number|(string|number|?|!ArrayLike<number>)} val_or_color
 * @return {?}
 */
ColorConstructor.prototype.hsv = function(val_or_color) {};

/**
 * @param {...number|(string|number|?|!ArrayLike<number>)} val_or_color
 * @return {?}
 */
ColorConstructor.prototype.hwb = function(val_or_color) {};

/**
 * @param {...number|(string|number|?|!ArrayLike<number>)} val_or_color
 * @return {?}
 */
ColorConstructor.prototype.cmyk = function(val_or_color) {};

/**
 * @param {...number|(string|number|?|!ArrayLike<number>)} val_or_color
 * @return {?}
 */
ColorConstructor.prototype.xyz = function(val_or_color) {};

/**
 * @param {...number|(string|number|?|!ArrayLike<number>)} val_or_color
 * @return {?}
 */
ColorConstructor.prototype.lab = function(val_or_color) {};

/**
 * @param {...number|(string|number|?|!ArrayLike<number>)} val_or_color
 * @return {?}
 */
ColorConstructor.prototype.lch = function(val_or_color) {};

/**
 * @param {...number|(string|number|?|!ArrayLike<number>)} val_or_color
 * @return {?}
 */
ColorConstructor.prototype.ansi16 = function(val_or_color) {};

/**
 * @param {...number|(string|number|?|!ArrayLike<number>)} val_or_color
 * @return {?}
 */
ColorConstructor.prototype.ansi256 = function(val_or_color) {};

/**
 * @param {...number|(string|number|?|!ArrayLike<number>)} val_or_color
 * @return {?}
 */
ColorConstructor.prototype.hcg = function(val_or_color) {};

/**
 * @param {...number|(string|number|?|!ArrayLike<number>)} val_or_color
 * @return {?}
 */
ColorConstructor.prototype.apple = function(val_or_color) {};
 /** @type {?} */
var Color;

/* TODO: ExportAssignment in  */
