/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/shopify-buy/index.d.ts:
/** @const */
var ShopifyBuy = {};

/**
 * Create a ShopClient. This is the main entry point to the SDK.
 * @param {!ShopifyBuy.Shopify.Config} configAttrs
 * @return {!ShopifyBuy.Shopify.ShopClient}
 */
ShopifyBuy.buildClient = function(configAttrs) {};
/**
 * @record
 * @struct
 */
ShopifyBuy.Image = function() {};
 /** @type {(string|number)} */
ShopifyBuy.Image.prototype.id;
 /** @type {string} */
ShopifyBuy.Image.prototype.created_at;
 /** @type {number} */
ShopifyBuy.Image.prototype.position;
 /** @type {string} */
ShopifyBuy.Image.prototype.updated_at;
 /** @type {string} */
ShopifyBuy.Image.prototype.product_id;
 /** @type {string} */
ShopifyBuy.Image.prototype.src;
 /** @type {!Array<string>} */
ShopifyBuy.Image.prototype.variant_ids;
/**
 * @record
 * @struct
 */
ShopifyBuy.ImageVariant = function() {};
 /** @type {string} */
ShopifyBuy.ImageVariant.prototype.name;
 /** @type {string} */
ShopifyBuy.ImageVariant.prototype.dimensions;
 /** @type {string} */
ShopifyBuy.ImageVariant.prototype.src;
/**
 * @record
 * @struct
 */
ShopifyBuy.OptionValue = function() {};
 /** @type {string} */
ShopifyBuy.OptionValue.prototype.name;
 /** @type {(string|number)} */
ShopifyBuy.OptionValue.prototype.option_id;
 /** @type {?} */
ShopifyBuy.OptionValue.prototype.value;

/**
 * @constructor
 * @struct
 * @param {?} attrs
 * @param {?} metaAttrs
 */
ShopifyBuy.BaseModel = function(attrs, metaAttrs) {};
 /** @type {?} */
ShopifyBuy.BaseModel.prototype.attrs;
 /** @type {?} */
ShopifyBuy.BaseModel.prototype.serializer;
 /** @type {?} */
ShopifyBuy.BaseModel.prototype.adapter;
 /** @type {?} */
ShopifyBuy.BaseModel.prototype.shopClient;
 /** @type {string} */
ShopifyBuy.NO_IMAGE_URI;
/** @const */
ShopifyBuy.Shopify = {};
/**
 * @record
 * @struct
 */
ShopifyBuy.Shopify.Config = function() {};
 /** @type {string} */
ShopifyBuy.Shopify.Config.prototype.apiKey;
 /** @type {string} */
ShopifyBuy.Shopify.Config.prototype.appId;
 /** @type {string} */
ShopifyBuy.Shopify.Config.prototype.domain;
/**
 * @record
 * @struct
 */
ShopifyBuy.Shopify.CartModelItem = function() {};
 /** @type {!ShopifyBuy.Shopify.ProductVariantModel} */
ShopifyBuy.Shopify.CartModelItem.prototype.variant;
 /** @type {number} */
ShopifyBuy.Shopify.CartModelItem.prototype.quantity;

/**
 * @constructor
 * @struct
 * Config data to be used throughout all API interaction
 * @param {!ShopifyBuy.Shopify.Config=} config
 */
ShopifyBuy.Shopify.ShopClient = function(config) {};

/**
 * Creates a CartModel instance.
 * @return {!Promise<!ShopifyBuy.Shopify.CartModel>}
 */
ShopifyBuy.Shopify.ShopClient.prototype.createCart = function() {};

/**
 * This function will return an Array of collections from your store
 * @return {!Promise<!Array<?>>}
 */
ShopifyBuy.Shopify.ShopClient.prototype.fetchAllCollections = function() {};

/**
 * This function will return an Array of products from your store
 * @return {!Promise<!Array<!ShopifyBuy.Shopify.ProductModel>>}
 */
ShopifyBuy.Shopify.ShopClient.prototype.fetchAllProducts = function() {};

/**
 * Retrieve a previously created cart by its key.
 * @param {string} id
 * @return {!Promise<!ShopifyBuy.Shopify.CartModel>}
 */
ShopifyBuy.Shopify.ShopClient.prototype.fetchCart = function(id) {};

/**
 * Fetch one collection by its ID.
 * @param {(string|number)} id
 * @return {!Promise<?>}
 */
ShopifyBuy.Shopify.ShopClient.prototype.fetchCollection = function(id) {};

/**
 * Fetch one product by its ID.
 * @param {(string|number)} id
 * @return {!Promise<!ShopifyBuy.Shopify.ProductModel>}
 */
ShopifyBuy.Shopify.ShopClient.prototype.fetchProduct = function(id) {};

/**
 * Fetches a list of collections matching a specified query.
 * @param {?=} query
 * @return {!Promise<!Array<?>>}
 */
ShopifyBuy.Shopify.ShopClient.prototype.fetchQueryCollections = function(query) {};

/**
 * Fetches a list of products matching a specified query.
 * @param {?=} query
 * @return {!Promise<!Array<!ShopifyBuy.Shopify.ProductModel>>}
 */
ShopifyBuy.Shopify.ShopClient.prototype.fetchQueryProducts = function(query) {};

/**
 * This method looks up a reference in localStorage to the most recent cart.
 * If one is not found, creates one. If the cart the reference points to doesn't exist,
 * create one and store the new reference.
 * @return {!Promise<!ShopifyBuy.Shopify.CartModel>}
 */
ShopifyBuy.Shopify.ShopClient.prototype.fetchRecentCart = function() {};

/**
 * @constructor
 * @struct
 */
ShopifyBuy.Shopify.ProductModel = function() {};
 /** @type {string} */
ShopifyBuy.Shopify.ProductModel.prototype.description;
 /** @type {(string|number)} */
ShopifyBuy.Shopify.ProductModel.prototype.id;
 /** @type {!Array<!ShopifyBuy.Image>} */
ShopifyBuy.Shopify.ProductModel.prototype.images;
 /** @type {!Array<!ShopifyBuy.Shopify.ProductVariantModel>} */
ShopifyBuy.Shopify.ProductModel.prototype.variants;
 /** @type {!Array<!ShopifyBuy.Shopify.ProductOptionModel>} */
ShopifyBuy.Shopify.ProductModel.prototype.options;
 /** @type {!ShopifyBuy.Shopify.ProductVariantModel} */
ShopifyBuy.Shopify.ProductModel.prototype.selectedVariant;
 /** @type {!ShopifyBuy.Image} */
ShopifyBuy.Shopify.ProductModel.prototype.selectedVariantImage;
 /** @type {!Array<string>} */
ShopifyBuy.Shopify.ProductModel.prototype.selections;
 /** @type {string} */
ShopifyBuy.Shopify.ProductModel.prototype.title;

/**
 * @constructor
 * @struct
 */
ShopifyBuy.Shopify.ProductVariantModel = function() {};
 /** @type {boolean} */
ShopifyBuy.Shopify.ProductVariantModel.prototype.available;
 /** @type {string} */
ShopifyBuy.Shopify.ProductVariantModel.prototype.compareAtPrice;
 /** @type {string} */
ShopifyBuy.Shopify.ProductVariantModel.prototype.formattedPrice;
 /** @type {number} */
ShopifyBuy.Shopify.ProductVariantModel.prototype.grams;
 /** @type {(string|number)} */
ShopifyBuy.Shopify.ProductVariantModel.prototype.id;
 /** @type {!ShopifyBuy.Image} */
ShopifyBuy.Shopify.ProductVariantModel.prototype.image;
 /** @type {!Array<!ShopifyBuy.ImageVariant>} */
ShopifyBuy.Shopify.ProductVariantModel.prototype.imageVariant;
 /** @type {!Array<!ShopifyBuy.OptionValue>} */
ShopifyBuy.Shopify.ProductVariantModel.prototype.optionValues;
 /** @type {string} */
ShopifyBuy.Shopify.ProductVariantModel.prototype.price;
 /** @type {(string|number)} */
ShopifyBuy.Shopify.ProductVariantModel.prototype.productId;
 /** @type {string} */
ShopifyBuy.Shopify.ProductVariantModel.prototype.productTitle;
 /** @type {string} */
ShopifyBuy.Shopify.ProductVariantModel.prototype.title;

/**
 * @param {number} quantitiy
 * @return {string}
 */
ShopifyBuy.Shopify.ProductVariantModel.prototype.checkoutUrl = function(quantitiy) {};

/**
 * @constructor
 * @struct
 */
ShopifyBuy.Shopify.ProductOptionModel = function() {};
 /** @type {string} */
ShopifyBuy.Shopify.ProductOptionModel.prototype.name;
 /** @type {string} */
ShopifyBuy.Shopify.ProductOptionModel.prototype.selected;
 /** @type {!Array<?>} */
ShopifyBuy.Shopify.ProductOptionModel.prototype.values;

/**
 * @constructor
 * @struct
 */
ShopifyBuy.Shopify.CartModel = function() {};
 /** @type {string} */
ShopifyBuy.Shopify.CartModel.prototype.checkoutUrl;
 /** @type {(string|number)} */
ShopifyBuy.Shopify.CartModel.prototype.id;
 /** @type {number} */
ShopifyBuy.Shopify.CartModel.prototype.lineItemCount;
 /** @type {!Array<!ShopifyBuy.Shopify.CartLineItemModel>} */
ShopifyBuy.Shopify.CartModel.prototype.lineItems;
 /** @type {string} */
ShopifyBuy.Shopify.CartModel.prototype.subtotal;

/**
 * Remove all line items from cart
 * @return {!Promise<!ShopifyBuy.Shopify.CartModel>}
 */
ShopifyBuy.Shopify.CartModel.prototype.clearLineItems = function() {};

/**
 * Add items to cart. Updates cart's lineItems
 * @param {!ShopifyBuy.Shopify.CartModelItem} item
 * @param {!Array<!ShopifyBuy.Shopify.CartModelItem>=} nextItem
 * @return {!Promise<!ShopifyBuy.Shopify.CartModel>}
 */
ShopifyBuy.Shopify.CartModel.prototype.addVariants = function(item, nextItem) {};

/**
 * Add items to the cart. Updates cart's lineItems based on variants passed in.
 * @param {...!ShopifyBuy.Shopify.CartModelItem} items
 * @return {!Promise<!ShopifyBuy.Shopify.CartModel>}
 */
ShopifyBuy.Shopify.CartModel.prototype.createLineItemsFromVariants = function(items) {};

/**
 * Remove a line item from cart based on line item id
 * @param {(string|number)} id
 * @return {!Promise<!ShopifyBuy.Shopify.CartModel>}
 */
ShopifyBuy.Shopify.CartModel.prototype.removeLineItem = function(id) {};

/**
 * Update a line item quantity based on line item id
 * @param {(string|number)} id
 * @param {number} quantitiy
 * @return {!Promise<!ShopifyBuy.Shopify.CartModel>}
 */
ShopifyBuy.Shopify.CartModel.prototype.updateLineItem = function(id, quantitiy) {};

/**
 * Force update of cart model on server. This function will only be used in advanced
 * situations and does not need to be called explicitly to update line items.
 * It is automatically called after createLineItemsFromVariants, updateLineItem,
 * removeLineItem, and removeLineItem
 * @return {!Promise<!ShopifyBuy.Shopify.CartModel>}
 */
ShopifyBuy.Shopify.CartModel.prototype.updateModel = function() {};

/**
 * @constructor
 * @struct
 */
ShopifyBuy.Shopify.CartLineItemModel = function() {};
 /** @type {string} */
ShopifyBuy.Shopify.CartLineItemModel.prototype.compare_at_price;
 /** @type {number} */
ShopifyBuy.Shopify.CartLineItemModel.prototype.grams;
 /** @type {(string|number)} */
ShopifyBuy.Shopify.CartLineItemModel.prototype.id;
 /** @type {!ShopifyBuy.Image} */
ShopifyBuy.Shopify.CartLineItemModel.prototype.image;
 /** @type {string} */
ShopifyBuy.Shopify.CartLineItemModel.prototype.line_price;
 /** @type {string} */
ShopifyBuy.Shopify.CartLineItemModel.prototype.price;
 /** @type {(string|number)} */
ShopifyBuy.Shopify.CartLineItemModel.prototype.product_id;
 /** @type {number} */
ShopifyBuy.Shopify.CartLineItemModel.prototype.quantity;
 /** @type {string} */
ShopifyBuy.Shopify.CartLineItemModel.prototype.title;
 /** @type {(string|number)} */
ShopifyBuy.Shopify.CartLineItemModel.prototype.variant_id;
 /** @type {string} */
ShopifyBuy.Shopify.CartLineItemModel.prototype.variant_title;
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "shopify-buy"
/** @const */
tsickle_declare_module.shopify_buy = {};

/* TODO: ExportAssignment in tsickle_declare_module.shopify_buy */
