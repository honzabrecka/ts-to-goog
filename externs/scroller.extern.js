/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/scroller/index.d.ts:
/**
 * @record
 * @struct
 */
function ScrollerOptions() {}
 /** @type {boolean} */
ScrollerOptions.prototype.scrollingX;
 /** @type {boolean} */
ScrollerOptions.prototype.scrollingY;
 /** @type {boolean} */
ScrollerOptions.prototype.animating;
 /** @type {number} */
ScrollerOptions.prototype.animationDuration;
 /** @type {boolean} */
ScrollerOptions.prototype.bouncing;
 /** @type {boolean} */
ScrollerOptions.prototype.locking;
 /** @type {boolean} */
ScrollerOptions.prototype.paging;
 /** @type {boolean} */
ScrollerOptions.prototype.snapping;
 /** @type {boolean} */
ScrollerOptions.prototype.zooming;
 /** @type {number} */
ScrollerOptions.prototype.minZoom;
 /** @type {number} */
ScrollerOptions.prototype.maxZoom;
 /** @type {number} */
ScrollerOptions.prototype.speedMultiplier;
/**
 * @record
 * @struct
 */
function ScrollValues() {}
 /** @type {number} */
ScrollValues.prototype.left;
 /** @type {number} */
ScrollValues.prototype.top;
/**
 * @extends {ScrollValues}
 * @record
 * @struct
 */
function ScrollValuesWithZoom() {}
 /** @type {number} */
ScrollValuesWithZoom.prototype.zoom;

/**
 * @constructor
 * @struct
 * @param {function(number, number, number): void} callback
 * @param {!ScrollerOptions} options
 */
function Scroller(callback, options) {}

/**
 * @param {number} clientWidth
 * @param {number} clientHeight
 * @param {number} contentWidth
 * @param {number} contentHeight
 * @return {void}
 */
Scroller.prototype.setDimensions = function(clientWidth, clientHeight, contentWidth, contentHeight) {};

/**
 * @param {number} left
 * @param {number} top
 * @return {void}
 */
Scroller.prototype.setPosition = function(left, top) {};

/**
 * @param {number} width
 * @param {number} height
 * @return {void}
 */
Scroller.prototype.setSnapSize = function(width, height) {};

/**
 * @param {number} height
 * @param {!Function} activateCallback
 * @param {!Function} deactivateCallback
 * @param {!Function} startCallback
 * @return {void}
 */
Scroller.prototype.activatePullToRefresh = function(height, activateCallback, deactivateCallback, startCallback) {};

/**
 * @return {void}
 */
Scroller.prototype.finishPullToRefresh = function() {};

/**
 * @return {!ScrollValuesWithZoom}
 */
Scroller.prototype.getValues = function() {};

/**
 * @return {!ScrollValues}
 */
Scroller.prototype.getScrollMax = function() {};

/**
 * @param {number} level
 * @param {boolean=} animate
 * @param {number=} originLeft
 * @param {number=} originTop
 * @param {!Function=} callback
 * @return {void}
 */
Scroller.prototype.zoomTo = function(level, animate, originLeft, originTop, callback) {};

/**
 * @param {number} factor
 * @param {boolean=} animate
 * @param {number=} originLeft
 * @param {number=} originTop
 * @param {!Function=} callback
 * @return {void}
 */
Scroller.prototype.zoomBy = function(factor, animate, originLeft, originTop, callback) {};

/**
 * @param {number=} left
 * @param {number=} top
 * @param {boolean=} animate
 * @param {number=} zoom
 * @return {void}
 */
Scroller.prototype.scrollTo = function(left, top, animate, zoom) {};

/**
 * @param {number=} left
 * @param {number=} top
 * @param {boolean=} animate
 * @return {void}
 */
Scroller.prototype.scrollBy = function(left, top, animate) {};

/**
 * @param {number} wheelDelta
 * @param {number} timeStamp
 * @param {number} pageX
 * @param {number} pageY
 * @return {void}
 */
Scroller.prototype.doMouseZoom = function(wheelDelta, timeStamp, pageX, pageY) {};

/**
 * @param {!Array<?>} touches
 * @param {number} timeStamp
 * @return {void}
 */
Scroller.prototype.doTouchStart = function(touches, timeStamp) {};

/**
 * @param {!Array<?>} touches
 * @param {number} timeStamp
 * @param {number=} scale
 * @return {void}
 */
Scroller.prototype.doTouchMove = function(touches, timeStamp, scale) {};

/**
 * @param {number} timeStamp
 * @return {void}
 */
Scroller.prototype.doTouchEnd = function(timeStamp) {};

/**
 * @constructor
 * @struct
 * @param {?} content
 * @param {!ScrollerOptions} options
 */
function EasyScroller(content, options) {}

/**
 * @return {void}
 */
EasyScroller.prototype.render = function() {};

/**
 * @return {void}
 */
EasyScroller.prototype.reflow = function() {};

/**
 * @return {void}
 */
EasyScroller.prototype.bindEvents = function() {};
