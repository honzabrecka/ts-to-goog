/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/hellosign-embedded/index.d.ts:
/** @const */
var HelloSign = {};
/**
 * @record
 * @struct
 */
HelloSign.SignedMessageEvent = function() {};
 /** @type {string} */
HelloSign.SignedMessageEvent.prototype.event;
 /** @type {string} */
HelloSign.SignedMessageEvent.prototype.signature_id;
/**
 * @record
 * @struct
 */
HelloSign.DeclinedMessageEvent = function() {};
 /** @type {string} */
HelloSign.DeclinedMessageEvent.prototype.event;
 /** @type {string} */
HelloSign.DeclinedMessageEvent.prototype.signature_id;
/**
 * @record
 * @struct
 */
HelloSign.CanceledMessageEvent = function() {};
 /** @type {string} */
HelloSign.CanceledMessageEvent.prototype.event;
/**
 * @record
 * @struct
 */
HelloSign.SentMessageEvent = function() {};
 /** @type {string} */
HelloSign.SentMessageEvent.prototype.event;
 /** @type {string} */
HelloSign.SentMessageEvent.prototype.signature_request_id;
 /** @type {{title: string, message: string, signatures: !Array<{signature_id: string, signer_email_address: string, signer_name: string, order: number, status_code: string, signed_at: number, last_viewed_at: number, last_reminded_at: number, has_pin: boolean}>, cc_email_addresses: !Array<string>}} */
HelloSign.SentMessageEvent.prototype.signature_request_info;
/**
 * @record
 * @struct
 */
HelloSign.TemplateCreatedMessageEvent = function() {};
 /** @type {string} */
HelloSign.TemplateCreatedMessageEvent.prototype.event;
 /** @type {string} */
HelloSign.TemplateCreatedMessageEvent.prototype.template_id;
 /** @type {{title: string, message: string, signer_roles: !Array<{name: string, order: number}>, cc_roles: !Array<{name: string}>}} */
HelloSign.TemplateCreatedMessageEvent.prototype.template_info;
/**
 * @record
 * @struct
 */
HelloSign.ErrorMessageEvent = function() {};
 /** @type {string} */
HelloSign.ErrorMessageEvent.prototype.event;
 /** @type {string} */
HelloSign.ErrorMessageEvent.prototype.description;

/** @typedef {(!HelloSign.SignedMessageEvent|!HelloSign.DeclinedMessageEvent|!HelloSign.CanceledMessageEvent|!HelloSign.SentMessageEvent|!HelloSign.TemplateCreatedMessageEvent|!HelloSign.ErrorMessageEvent)} */
HelloSign.MessageEvent;
/**
 * @record
 * @struct
 */
HelloSign.ClientCultures = function() {};
 /** @type {string} */
HelloSign.ClientCultures.prototype.EN_US;
 /** @type {string} */
HelloSign.ClientCultures.prototype.FR_FR;
 /** @type {string} */
HelloSign.ClientCultures.prototype.DE_DE;
 /** @type {string} */
HelloSign.ClientCultures.prototype.SV_SE;
 /** @type {string} */
HelloSign.ClientCultures.prototype.ZH_CN;
 /** @type {string} */
HelloSign.ClientCultures.prototype.DA_DK;
 /** @type {string} */
HelloSign.ClientCultures.prototype.NL_NL;
 /** @type {!Array<string>} */
HelloSign.ClientCultures.prototype.supportedCultures;
/**
 * @record
 * @struct
 */
HelloSign.OpenParameters = function() {};
 /** @type {string} */
HelloSign.OpenParameters.prototype.url;
 /** @type {string} */
HelloSign.OpenParameters.prototype.redirectUrl;
 /** @type {boolean} */
HelloSign.OpenParameters.prototype.allowCancel;
 /** @type {function((!HelloSign.SignedMessageEvent|!HelloSign.DeclinedMessageEvent|!HelloSign.CanceledMessageEvent|!HelloSign.SentMessageEvent|!HelloSign.TemplateCreatedMessageEvent|!HelloSign.ErrorMessageEvent)): void} */
HelloSign.OpenParameters.prototype.messageListener;
 /** @type {string} */
HelloSign.OpenParameters.prototype.userCulture;
 /** @type {boolean} */
HelloSign.OpenParameters.prototype.debug;
 /** @type {boolean} */
HelloSign.OpenParameters.prototype.skipDomainVerification;
 /** @type {!Element} */
HelloSign.OpenParameters.prototype.container;
 /** @type {number} */
HelloSign.OpenParameters.prototype.height;
 /** @type {boolean} */
HelloSign.OpenParameters.prototype.hideHeader;
 /** @type {number} */
HelloSign.OpenParameters.prototype.uxVersion;
 /** @type {string} */
HelloSign.OpenParameters.prototype.requester;
 /** @type {!Object} */
HelloSign.OpenParameters.prototype.whiteLabelingOptions;
/**
 * @record
 * @struct
 */
HelloSign.HelloSignStatic = function() {};
 /** @type {!HelloSign.ClientCultures} */
HelloSign.HelloSignStatic.prototype.CULTURES;
 /** @type {string} */
HelloSign.HelloSignStatic.prototype.EVENT_SIGNED;
 /** @type {string} */
HelloSign.HelloSignStatic.prototype.EVENT_DECLINED;
 /** @type {string} */
HelloSign.HelloSignStatic.prototype.EVENT_CANCELED;
 /** @type {string} */
HelloSign.HelloSignStatic.prototype.EVENT_SENT;
 /** @type {string} */
HelloSign.HelloSignStatic.prototype.EVENT_TEMPLATE_CREATED;
 /** @type {string} */
HelloSign.HelloSignStatic.prototype.EVENT_ERROR;

/**
 * Initialize using your HelloSign API client ID.
 * 
 * @param {string} appClientId The API client ID the request is for.
 * @return {void}
 */
HelloSign.HelloSignStatic.prototype.init = function(appClientId) {};

/**
 * Open the signing window.
 * 
 * @param {!HelloSign.OpenParameters} params The options to use when opening the signing window.
 * @return {void}
 */
HelloSign.HelloSignStatic.prototype.open = function(params) {};

/**
 * Close the signing window.
 * @return {void}
 */
HelloSign.HelloSignStatic.prototype.close = function() {};
 /** @type {!HelloSign.HelloSignStatic} */
var HelloSign;

/* TODO: NamespaceExportDeclaration in  */
