/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/jsplumb/index.d.ts:
 /** @type {!jsPlumbInstance} */
var jsPlumb;
/**
 * @record
 * @struct
 */
function jsPlumbInstance() {}
 /** @type {!Defaults} */
jsPlumbInstance.prototype.Defaults;
 /** @type {string} */
jsPlumbInstance.prototype.SVG;
 /** @type {string} */
jsPlumbInstance.prototype.CANVAS;
 /** @type {string} */
jsPlumbInstance.prototype.VML;

/**
 * @param {string} renderMode
 * @return {string}
 */
jsPlumbInstance.prototype.setRenderMode = function(renderMode) {};

/**
 * @param {string} event
 * @param {function(?): void} callback
 * @return {void}
 */
jsPlumbInstance.prototype.bind = function(event, callback) {};

/**
 * @param {string=} event
 * @return {void}
 */
jsPlumbInstance.prototype.unbind = function(event) {};

/**
 * @param {function(): void} callback
 * @return {void}
 */
jsPlumbInstance.prototype.ready = function(callback) {};

/**
 * @param {!Defaults} defaults
 * @return {void}
 */
jsPlumbInstance.prototype.importDefaults = function(defaults) {};

/**
 * @return {void}
 */
jsPlumbInstance.prototype.restoreDefaults = function() {};

/**
 * @param {?} el
 * @param {string} clazz
 * @return {void}
 */
jsPlumbInstance.prototype.addClass = function(el, clazz) {};

/**
 * @param {string} ep
 * @return {?}
 */
jsPlumbInstance.prototype.addEndpoint = function(ep) {};

/**
 * @param {?} el
 * @param {string} clazz
 * @return {void}
 */
jsPlumbInstance.prototype.removeClass = function(el, clazz) {};

/**
 * @param {?} el
 * @param {string} clazz
 * @return {void}
 */
jsPlumbInstance.prototype.hasClass = function(el, clazz) {};

/**
 * @param {string|!Array<string>} el_or_ids
 * @param {!DragOptions=} options
 * @return {!jsPlumbInstance}
 */
jsPlumbInstance.prototype.draggable = function(el_or_ids, options) {};

/**
 * @param {!ConnectParams} connection
 * @param {!ConnectParams=} referenceParams
 * @return {!Connection}
 */
jsPlumbInstance.prototype.connect = function(connection, referenceParams) {};

/**
 * @param {string} el
 * @param {!SourceOptions} options
 * @return {void}
 */
jsPlumbInstance.prototype.makeSource = function(el, options) {};

/**
 * @param {string} el
 * @param {!TargetOptions} options
 * @return {void}
 */
jsPlumbInstance.prototype.makeTarget = function(el, options) {};

/**
 * @return {void}
 */
jsPlumbInstance.prototype.repaintEverything = function() {};

/**
 * @return {void}
 */
jsPlumbInstance.prototype.detachEveryConnection = function() {};

/**
 * @param {string} el
 * @return {void}
 */
jsPlumbInstance.prototype.detachAllConnections = function(el) {};

/**
 * @param {string|!Element} el
 * @param {boolean=} recurse
 * @return {!jsPlumbInstance}
 */
jsPlumbInstance.prototype.removeAllEndpoints = function(el, recurse) {};

/**
 * @param {!SelectParams} params
 * @return {!Connections}
 */
jsPlumbInstance.prototype.select = function(params) {};

/**
 * @param {?=} options
 * @param {?=} flat
 * @return {!Array<?>}
 */
jsPlumbInstance.prototype.getConnections = function(options, flat) {};

/**
 * @param {string|!Endpoint} uuid_or_endpoint
 * @param {boolean=} doNotRepaintAfterwards
 * @return {!jsPlumbInstance}
 */
jsPlumbInstance.prototype.deleteEndpoint = function(uuid_or_endpoint, doNotRepaintAfterwards) {};

/**
 * @param {string|!Element} el
 * @return {!jsPlumbInstance}
 */
jsPlumbInstance.prototype.repaint = function(el) {};

/**
 * @param {!Defaults=} defaults
 * @return {!jsPlumbInstance}
 */
jsPlumbInstance.prototype.getInstance = function(defaults) {};

/**
 * @return {number}
 */
jsPlumbInstance.prototype.getInstanceIndex = function() {};
/**
 * @record
 * @struct
 */
function Defaults() {}
 /** @type {!Array<?>} */
Defaults.prototype.Endpoint;
 /** @type {!PaintStyle} */
Defaults.prototype.PaintStyle;
 /** @type {!PaintStyle} */
Defaults.prototype.HoverPaintStyle;
 /** @type {boolean} */
Defaults.prototype.ConnectionsDetachable;
 /** @type {boolean} */
Defaults.prototype.ReattachConnections;
 /** @type {!Array<!Array<?>>} */
Defaults.prototype.ConnectionOverlays;
 /** @type {?} */
Defaults.prototype.Container;
 /** @type {!DragOptions} */
Defaults.prototype.DragOptions;
/**
 * @record
 * @struct
 */
function PaintStyle() {}
 /** @type {string} */
PaintStyle.prototype.strokeStyle;
 /** @type {number} */
PaintStyle.prototype.lineWidth;
/**
 * @record
 * @struct
 */
function ArrowOverlay() {}
 /** @type {number} */
ArrowOverlay.prototype.location;
 /** @type {string} */
ArrowOverlay.prototype.id;
 /** @type {number} */
ArrowOverlay.prototype.length;
 /** @type {number} */
ArrowOverlay.prototype.foldback;
/**
 * @record
 * @struct
 */
function LabelOverlay() {}
 /** @type {string} */
LabelOverlay.prototype.label;
 /** @type {string} */
LabelOverlay.prototype.id;
 /** @type {number} */
LabelOverlay.prototype.location;
/**
 * @record
 * @struct
 */
function Connections() {}
 /** @type {number} */
Connections.prototype.length;

/**
 * @return {void}
 */
Connections.prototype.detach = function() {};
/**
 * @record
 * @struct
 */
function ConnectParams() {}
 /** @type {?} */
ConnectParams.prototype.source;
 /** @type {?} */
ConnectParams.prototype.target;
 /** @type {boolean} */
ConnectParams.prototype.detachable;
 /** @type {boolean} */
ConnectParams.prototype.deleteEndpointsOnDetach;
 /** @type {string} */
ConnectParams.prototype.endPoint;
 /** @type {string} */
ConnectParams.prototype.anchor;
 /** @type {!Array<?>} */
ConnectParams.prototype.anchors;
 /** @type {string} */
ConnectParams.prototype.label;
/**
 * @record
 * @struct
 */
function DragOptions() {}
 /** @type {string} */
DragOptions.prototype.containment;
/**
 * @record
 * @struct
 */
function SourceOptions() {}
 /** @type {string} */
SourceOptions.prototype.parent;
 /** @type {string} */
SourceOptions.prototype.endpoint;
 /** @type {string} */
SourceOptions.prototype.anchor;
 /** @type {!Array<?>} */
SourceOptions.prototype.connector;
 /** @type {!PaintStyle} */
SourceOptions.prototype.connectorStyle;
/**
 * @record
 * @struct
 */
function TargetOptions() {}
 /** @type {boolean} */
TargetOptions.prototype.isTarget;
 /** @type {number} */
TargetOptions.prototype.maxConnections;
 /** @type {boolean} */
TargetOptions.prototype.uniqueEndpoint;
 /** @type {boolean} */
TargetOptions.prototype.deleteEndpointsOnDetach;
 /** @type {string} */
TargetOptions.prototype.endpoint;
 /** @type {!DropOptions} */
TargetOptions.prototype.dropOptions;
 /** @type {?} */
TargetOptions.prototype.anchor;
/**
 * @record
 * @struct
 */
function DropOptions() {}
 /** @type {string} */
DropOptions.prototype.hoverClass;
/**
 * @record
 * @struct
 */
function SelectParams() {}
 /** @type {string} */
SelectParams.prototype.scope;
 /** @type {string} */
SelectParams.prototype.source;
 /** @type {string} */
SelectParams.prototype.target;
/**
 * @record
 * @struct
 */
function Connection() {}
 /** @type {!Array<!Endpoint>} */
Connection.prototype.endpoints;

/**
 * @param {boolean} detachable
 * @return {void}
 */
Connection.prototype.setDetachable = function(detachable) {};

/**
 * @template T
 * @param {string} name
 * @param {T} value
 * @return {void}
 */
Connection.prototype.setParameter = function(name, value) {};
/**
 * @record
 * @struct
 */
function Endpoint() {}
