/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/node-vault/index.d.ts:

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */
/** @const */
var NodeVault = {};
/**
 * @record
 * @struct
 */
NodeVault.Option = function() {};

/* TODO: IndexSignature: NodeVault */
/**
 * @extends {NodeVault.Option}
 * @record
 * @struct
 */
NodeVault.RequestOption = function() {};
 /** @type {string} */
NodeVault.RequestOption.prototype.path;
 /** @type {string} */
NodeVault.RequestOption.prototype.method;
/**
 * @record
 * @struct
 */
NodeVault.functionConf = function() {};
 /** @type {string} */
NodeVault.functionConf.prototype.method;
 /** @type {string} */
NodeVault.functionConf.prototype.path;
 /** @type {{req: !NodeVault.Option, query: !NodeVault.Option, res: !NodeVault.Option}} */
NodeVault.functionConf.prototype.schema;
/**
 * @record
 * @struct
 */
NodeVault.client = function() {};
 /** @type {string} */
NodeVault.client.prototype.apiVersion;
 /** @type {string} */
NodeVault.client.prototype.endpoint;
 /** @type {string} */
NodeVault.client.prototype.token;

/**
 * @param {{statusCode: number, request: !NodeVault.Option, body: ?}=} res
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.handleVaultResponse = function(res) {};

/**
 * @param {!NodeVault.RequestOption} requestOptions
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.request = function(requestOptions) {};

/**
 * @param {string} path
 * @param {!NodeVault.Option=} requestOptions
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.help = function(path, requestOptions) {};

/**
 * @param {string} path
 * @param {?} data
 * @param {!NodeVault.Option=} requestOptions
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.write = function(path, data, requestOptions) {};

/**
 * @param {string} path
 * @param {!NodeVault.Option=} requestOptions
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.read = function(path, requestOptions) {};

/**
 * @param {string} path
 * @param {!NodeVault.Option=} requestOptions
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.list = function(path, requestOptions) {};

/**
 * @param {string} path
 * @param {!NodeVault.Option=} requestOptions
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.delete = function(path, requestOptions) {};

/**
 * @param {string} name
 * @param {!NodeVault.functionConf} conf
 * @return {void}
 */
NodeVault.client.prototype.generateFunction = function(name, conf) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.status = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.initialized = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.init = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.unseal = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.seal = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.generateRootStatus = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.generateRootInit = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.generateRootCancel = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.generateRootUpdate = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.mounts = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.mount = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.unmount = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.remount = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.policies = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.addPolicy = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.getPolicy = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.removePolicy = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.auths = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.enableAuth = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.disableAuth = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.audits = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.enableAudit = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.disableAudit = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.renew = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.revoke = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.revokePrefix = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.rotate = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.githubLogin = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.userpassLogin = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.tokenAccessors = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.tokenCreate = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.tokenCreateOrphan = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.tokenCreateRole = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.tokenLookup = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.tokenLookupAccessor = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.tokenLookupSelf = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.tokenRenew = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.tokenRenewSelf = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.tokenRevoke = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.tokenRevokeAccessor = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.tokenRevokeOrphan = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.tokenRevokeSelf = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.tokenRoles = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.addTokenRole = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.getTokenRole = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.removeTokenRole = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.approleRoles = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.addApproleRole = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.getApproleRole = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.deleteApproleRole = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.getApproleRoleId = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.updateApproleRoleId = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.getApproleRoleSecret = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.approleSecretAccessors = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.approleSecretLookup = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.approleSecretDestroy = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.approleSecretAccessorLookup = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.approleSecretAccessorDestroy = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.approleLogin = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.health = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.leader = function(options) {};

/**
 * @param {!NodeVault.Option=} options
 * @return {!Promise<?>}
 */
NodeVault.client.prototype.stepDown = function(options) {};
/**
 * @record
 * @struct
 */
NodeVault.VaultOptions = function() {};
 /** @type {!Array<{method: string, path: string, scheme: ?}>} */
NodeVault.VaultOptions.prototype.commands;
 /** @type {!MustacheStatic} */
NodeVault.VaultOptions.prototype.mustache;

/* TODO: PropertySignature: NodeVault."request-promise" */
 /** @type {!PromiseConstructor} */
NodeVault.VaultOptions.prototype.Promise;
 /** @type {string} */
NodeVault.VaultOptions.prototype.apiVersion;
 /** @type {string} */
NodeVault.VaultOptions.prototype.endpoint;
 /** @type {string} */
NodeVault.VaultOptions.prototype.token;
 /** @type {!request.CoreOptions} */
NodeVault.VaultOptions.prototype.requestOptions;

/**
 * @param {...?} args
 * @return {?}
 */
NodeVault.VaultOptions.prototype.debug = function(args) {};

/**
 * @param {...?} args
 * @return {?}
 */
NodeVault.VaultOptions.prototype.tv4 = function(args) {};

/** @typedef {?} */
var GetClient;
 /** @type {?} */
var getClient;

/* TODO: ExportAssignment in  */
