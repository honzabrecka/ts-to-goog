/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/revalidate/index.d.ts:
/**
 * @record
 * @struct
 */
function CombineValidatorsOptions() {}

/**
 * @param {?} values
 * @return {?}
 */
CombineValidatorsOptions.prototype.serializeValues = function(values) {};
/**
 * @record
 * @struct
 */
function Config() {}
 /** @type {?} */
Config.prototype.field;
 /** @type {string} */
Config.prototype.message;
/**
 * @record
 * @struct
 */
function Multiple() {}
 /** @type {boolean} */
Multiple.prototype.multiple;

/** @typedef {?} */
var ComposeConfig;
/**
 * @record
 * @struct
 */
function ParsedField() {}
 /** @type {boolean} */
ParsedField.prototype.isArray;
 /** @type {string} */
ParsedField.prototype.baseName;
 /** @type {string} */
ParsedField.prototype.fullName;

/** @typedef {(string|?)} */
var MessageCreator;

/** @typedef {?} */
var ValidatorImpl;

/** @typedef {?} */
var Comparer;

/** @typedef {?} */
var ConfiguredValidator;

/** @typedef {?} */
var UnconfiguredValidator;

/** @typedef {?} */
var ConfiguredCombinedValidator;

/** @typedef {?} */
var CurryableValidator;

/** @typedef {?} */
var ComposedCurryableValidator;

/** @typedef {?} */
var ConfigurableValidator;

/** @typedef {?} */
var Validator;

/**
 * @param {?} curriedDefinition
 * @param {(string|?)=} defaultMessageCreator
 * @return {?}
 */
function createValidator(curriedDefinition, defaultMessageCreator) {}

/**
 * @param {?} firstValidator
 * @param {...?} validators
 * @return {?}
 */
function composeValidators(firstValidator, validators) {}

/**
 * @param {?} validators
 * @param {?=} options
 * @return {?}
 */
function combineValidators(validators, options) {}

/**
 * @param {number} min
 * @param {number} max
 * @return {?}
 */
function hasLengthBetween(min, max) {}

/**
 * @param {number} min
 * @return {?}
 */
function hasLengthGreaterThan(min) {}

/**
 * @param {number} max
 * @return {?}
 */
function hasLengthLessThan(max) {}

/**
 * @param {(string|?)=} config
 * @param {?=} value
 * @param {?=} allValues
 * @return {?}
 */
function isAlphabetic(config, value, allValues) {}

/**
 * @param {(string|?)=} config
 * @param {?=} value
 * @param {?=} allValues
 * @return {?}
 */
function isAlphaNumeric(config, value, allValues) {}

/**
 * @param {(string|?)=} config
 * @param {?=} value
 * @param {?=} allValues
 * @return {?}
 */
function isNumeric(config, value, allValues) {}

/**
 * @param {(string|?)=} config
 * @param {?=} value
 * @param {?=} allValues
 * @return {?}
 */
function isOneOf(config, value, allValues) {}

/**
 * @param {(string|?)=} config
 * @param {?=} value
 * @param {?=} allValues
 * @return {?}
 */
function isRequired(config, value, allValues) {}

/**
 * @param {(string|?)=} config
 * @param {?=} value
 * @param {?=} allValues
 * @return {?}
 */
function isRequiredIf(config, value, allValues) {}

/**
 * @param {string} otherField
 * @param {string} otherFieldLabel
 * @return {?}
 */
function matchesField(otherField, otherFieldLabel) {}

/**
 * @param {!RegExp} regex
 * @return {?}
 */
function matchesPattern(regex) {}
