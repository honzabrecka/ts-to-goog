/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/stat-mode/index.d.ts:

/* TODO: ExportAssignment in  */

/**
 * @constructor
 * @struct
 * @param {{mode: number}} stat
 */
function Mode(stat) {}
 /** @type {!Mode.Permissions} */
Mode.prototype.owner;
 /** @type {!Mode.Permissions} */
Mode.prototype.group;
 /** @type {!Mode.Permissions} */
Mode.prototype.others;
 /** @type {boolean} */
Mode.prototype.setuid;
 /** @type {boolean} */
Mode.prototype.setgid;
 /** @type {boolean} */
Mode.prototype.sticky;

/**
 * @param {boolean=} isBlockDevice
 * @return {boolean}
 */
Mode.prototype.isBlockDevice = function(isBlockDevice) {};

/**
 * @param {boolean=} isCharacterDevice
 * @return {boolean}
 */
Mode.prototype.isCharacterDevice = function(isCharacterDevice) {};

/**
 * @param {boolean=} isDirectory
 * @return {boolean}
 */
Mode.prototype.isDirectory = function(isDirectory) {};

/**
 * @param {boolean=} isFIFO
 * @return {boolean}
 */
Mode.prototype.isFIFO = function(isFIFO) {};

/**
 * @param {boolean=} isFile
 * @return {boolean}
 */
Mode.prototype.isFile = function(isFile) {};

/**
 * @param {boolean=} isSocket
 * @return {boolean}
 */
Mode.prototype.isSocket = function(isSocket) {};

/**
 * @param {boolean=} isSymbolicLink
 * @return {boolean}
 */
Mode.prototype.isSymbolicLink = function(isSymbolicLink) {};

/**
 * @return {number}
 */
Mode.prototype.valueOf = function() {};

/**
 * @return {string}
 */
Mode.prototype.toOctal = function() {};
/**
 * @record
 * @struct
 */
Mode.Permissions = function() {};
 /** @type {boolean} */
Mode.Permissions.prototype.read;
 /** @type {boolean} */
Mode.Permissions.prototype.write;
 /** @type {boolean} */
Mode.Permissions.prototype.execute;
