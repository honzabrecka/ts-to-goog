/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/react-bootstrap-table/index.d.ts:

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */
/**
 * @extends {Props}
 * @record
 * @struct
 */
function BootstrapTableProps() {}
 /** @type {!Array<?>} */
BootstrapTableProps.prototype.data;
 /** @type {boolean} */
BootstrapTableProps.prototype.remote;
 /** @type {string} */
BootstrapTableProps.prototype.keyField;
 /** @type {string} */
BootstrapTableProps.prototype.height;
 /** @type {string} */
BootstrapTableProps.prototype.maxHeight;
 /** @type {boolean} */
BootstrapTableProps.prototype.striped;
 /** @type {boolean} */
BootstrapTableProps.prototype.hover;
 /** @type {boolean} */
BootstrapTableProps.prototype.condensed;
 /** @type {boolean} */
BootstrapTableProps.prototype.bordered;
 /** @type {boolean} */
BootstrapTableProps.prototype.pagination;
 /** @type {(string|?)} */
BootstrapTableProps.prototype.trClassName;
 /** @type {boolean} */
BootstrapTableProps.prototype.insertRow;
 /** @type {boolean} */
BootstrapTableProps.prototype.deleteRow;
 /** @type {boolean} */
BootstrapTableProps.prototype.columnFilter;
 /** @type {boolean} */
BootstrapTableProps.prototype.search;
 /** @type {string} */
BootstrapTableProps.prototype.searchPlaceholder;
 /** @type {boolean} */
BootstrapTableProps.prototype.multiColumnSearch;
 /** @type {boolean} */
BootstrapTableProps.prototype.exportCSV;
 /** @type {string} */
BootstrapTableProps.prototype.csvFileName;
 /** @type {?} */
BootstrapTableProps.prototype.selectRow;
 /** @type {?} */
BootstrapTableProps.prototype.cellEdit;
 /** @type {?} */
BootstrapTableProps.prototype.options;
 /** @type {?} */
BootstrapTableProps.prototype.fetchInfo;
 /** @type {boolean} */
BootstrapTableProps.prototype.printable;
 /** @type {?} */
BootstrapTableProps.prototype.tableStyle;
 /** @type {?} */
BootstrapTableProps.prototype.containerStyle;
 /** @type {?} */
BootstrapTableProps.prototype.headerStyle;
 /** @type {?} */
BootstrapTableProps.prototype.bodyStyle;
 /** @type {boolean} */
BootstrapTableProps.prototype.ignoreSinglePage;
 /** @type {string} */
BootstrapTableProps.prototype.containerClass;
 /** @type {string} */
BootstrapTableProps.prototype.tableContainerClass;
 /** @type {string} */
BootstrapTableProps.prototype.headerContainerClass;
 /** @type {string} */
BootstrapTableProps.prototype.bodyContainerClass;
 /** @type {?} */
BootstrapTableProps.prototype.expandableRow;
 /** @type {?} */
BootstrapTableProps.prototype.expandComponent;

/** @typedef {string} */
var SelectRowMode;
/**
 * @record
 * @struct
 */
function SelectRow() {}
 /** @type {string} */
SelectRow.prototype.mode;
 /** @type {boolean} */
SelectRow.prototype.clickToSelect;
 /** @type {boolean} */
SelectRow.prototype.clickToSelectAndEditCell;
 /** @type {string} */
SelectRow.prototype.bgColor;
 /** @type {string} */
SelectRow.prototype.className;
 /** @type {(!Array<string>|!Array<number>)} */
SelectRow.prototype.selected;
 /** @type {boolean} */
SelectRow.prototype.hideSelectColumn;
 /** @type {boolean} */
SelectRow.prototype.showOnlySelected;
 /** @type {?} */
SelectRow.prototype.onSelect;
 /** @type {?} */
SelectRow.prototype.onSelectAll;
 /** @type {!Array<number>} */
SelectRow.prototype.unselectable;

/** @typedef {string} */
var CellEditClickMode;
/**
 * @record
 * @struct
 */
function CellEdit() {}
 /** @type {string} */
CellEdit.prototype.mode;
 /** @type {boolean} */
CellEdit.prototype.blurToSave;
 /** @type {?} */
CellEdit.prototype.beforeSaveCell;
 /** @type {?} */
CellEdit.prototype.afterSaveCell;

/** @typedef {string} */
var SortOrder;
/**
 * @record
 * @struct
 */
function Options() {}
 /** @type {string} */
Options.prototype.sortName;
 /** @type {string} */
Options.prototype.sortOrder;
 /** @type {string} */
Options.prototype.defaultSortName;
 /** @type {string} */
Options.prototype.defaultSortOrder;
 /** @type {boolean} */
Options.prototype.sortIndicator;
 /** @type {(string|!React.ReactElement<?>)} */
Options.prototype.noDataText;
 /** @type {number} */
Options.prototype.searchDelayTime;
 /** @type {string} */
Options.prototype.exportCSVText;
 /** @type {boolean} */
Options.prototype.ignoreEditable;
 /** @type {boolean} */
Options.prototype.clearSearch;
 /** @type {!Function} */
Options.prototype.afterTableComplete;
 /** @type {?} */
Options.prototype.afterDeleteRow;
 /** @type {?} */
Options.prototype.afterInsertRow;
 /** @type {string} */
Options.prototype.prePage;
 /** @type {string} */
Options.prototype.nextPage;
 /** @type {string} */
Options.prototype.firstPage;
 /** @type {string} */
Options.prototype.lastPage;
 /** @type {number} */
Options.prototype.page;
 /** @type {!Array<number>} */
Options.prototype.sizePerPageList;
 /** @type {number} */
Options.prototype.sizePerPage;
 /** @type {number} */
Options.prototype.paginationSize;
 /** @type {number} */
Options.prototype.pageStartIndex;
 /** @type {?} */
Options.prototype.onPageChange;
 /** @type {?} */
Options.prototype.onSizePerPageList;
 /** @type {?} */
Options.prototype.onSortChange;
 /** @type {?} */
Options.prototype.afterSearch;
 /** @type {?} */
Options.prototype.afterColumnFilter;
 /** @type {?} */
Options.prototype.onRowClick;
 /** @type {?} */
Options.prototype.onRowDoubleClick;
 /** @type {string} */
Options.prototype.expandRowBgColor;
 /** @type {!Function} */
Options.prototype.onMouseEnter;
 /** @type {!Function} */
Options.prototype.onMouseLeave;
 /** @type {!Function} */
Options.prototype.onRowMouseOver;
 /** @type {!Function} */
Options.prototype.onRowMouseOut;
 /** @type {?} */
Options.prototype.handleConfirmDeleteRow;
 /** @type {(boolean|!React.ReactElement<?>)} */
Options.prototype.paginationShowsTotal;
 /** @type {!Function} */
Options.prototype.onSearchChange;
 /** @type {!Function} */
Options.prototype.onAddRow;
 /** @type {!Function} */
Options.prototype.onExportToCSV;
 /** @type {string} */
Options.prototype.insertText;
 /** @type {string} */
Options.prototype.deleteText;
 /** @type {string} */
Options.prototype.saveText;
 /** @type {string} */
Options.prototype.closeText;
/**
 * @record
 * @struct
 */
function FetchInfo() {}
 /** @type {number} */
FetchInfo.prototype.dataTotalSize;
/**
 * @extends {ComponentClass}
 * @record
 * @struct
 */
function BootstrapTable() {}

/**
 * Call this function to insert an new row to table.
 * @param {?} row
 * @return {void}
 */
BootstrapTable.prototype.handleAddRow = function(row) {};

/**
 * Call this function to insert an new row as first row on table.
 * @param {?} row
 * @return {void}
 */
BootstrapTable.prototype.handleAddRowAtBegin = function(row) {};

/**
 * Call this function to drop rows in table.
 * @param {!Array<?>} rowKeys
 * @return {void}
 */
BootstrapTable.prototype.handleDropRow = function(rowKeys) {};

/**
 * Call this function to do column filtering on table.
 * @param {?} filter
 * @return {void}
 */
BootstrapTable.prototype.handleFilterData = function(filter) {};

/**
 * Call this function with search text for fully searching.
 * @param {string} search
 * @return {void}
 */
BootstrapTable.prototype.handleSearch = function(search) {};

/**
 * Call this function to sort table.
 * @param {string} order
 * @param {string} field
 * @return {void}
 */
BootstrapTable.prototype.handleSort = function(order, field) {};

/**
 * Call this function to get the page by a rowkey
 * @param {string} rowKey
 * @return {?}
 */
BootstrapTable.prototype.getPageByRowKey = function(rowKey) {};

/**
 * Call this function to export table as csv.
 * @return {void}
 */
BootstrapTable.prototype.handleExportCSV = function() {};

/**
 * Clean all the selection state on table.
 * @return {void}
 */
BootstrapTable.prototype.cleanSelected = function() {};
 /** @type {?} */
var BootstrapTable;

/** @typedef {string} */
var DataAlignType;
/**
 * @extends {Props}
 * @record
 * @struct
 */
function TableHeaderColumnProps() {}
 /** @type {string} */
TableHeaderColumnProps.prototype.dataField;
 /** @type {boolean} */
TableHeaderColumnProps.prototype.isKey;
 /** @type {string} */
TableHeaderColumnProps.prototype.width;
 /** @type {string} */
TableHeaderColumnProps.prototype.dataAlign;
 /** @type {string} */
TableHeaderColumnProps.prototype.headerAlign;
 /** @type {boolean} */
TableHeaderColumnProps.prototype.dataSort;
 /** @type {string} */
TableHeaderColumnProps.prototype.defaultSearch;
 /** @type {!Function} */
TableHeaderColumnProps.prototype.caretRender;
 /** @type {?} */
TableHeaderColumnProps.prototype.customEditor;
 /** @type {?} */
TableHeaderColumnProps.prototype.dataFormat;
 /** @type {boolean} */
TableHeaderColumnProps.prototype.filterFormatted;
 /** @type {boolean} */
TableHeaderColumnProps.prototype.hidden;
 /** @type {boolean} */
TableHeaderColumnProps.prototype.hideSizePerPage;
 /** @type {boolean} */
TableHeaderColumnProps.prototype.searchable;
 /** @type {?} */
TableHeaderColumnProps.prototype.sortFunc;
 /** @type {?} */
TableHeaderColumnProps.prototype.sortFuncExtraData;
 /** @type {(string|?)} */
TableHeaderColumnProps.prototype.className;
 /** @type {(!String|?)} */
TableHeaderColumnProps.prototype.columnClassName;
 /** @type {(boolean|?)} */
TableHeaderColumnProps.prototype.editable;
 /** @type {boolean} */
TableHeaderColumnProps.prototype.autoValue;
 /** @type {?} */
TableHeaderColumnProps.prototype.filter;
 /** @type {!Function} */
TableHeaderColumnProps.prototype.onSort;
 /** @type {string} */
TableHeaderColumnProps.prototype.csvHeader;
 /** @type {!Function} */
TableHeaderColumnProps.prototype.csvFormat;
 /** @type {boolean} */
TableHeaderColumnProps.prototype.columnTitle;
 /** @type {string} */
TableHeaderColumnProps.prototype.sort;
 /** @type {?} */
TableHeaderColumnProps.prototype.formatExtraData;
 /** @type {number} */
TableHeaderColumnProps.prototype.row;
 /** @type {number} */
TableHeaderColumnProps.prototype.rowSpan;
 /** @type {number} */
TableHeaderColumnProps.prototype.colSpan;
/**
 * @record
 * @struct
 */
function Editable() {}
 /** @type {string} */
Editable.prototype.type;
 /** @type {?} */
Editable.prototype.validator;
 /** @type {?} */
Editable.prototype.options;
 /** @type {number} */
Editable.prototype.cols;
 /** @type {number} */
Editable.prototype.rows;

/** @typedef {?} */
var SetFilterCallback;
/**
 * @record
 * @struct
 */
function ApplyFilterParameter() {}
 /** @type {?} */
ApplyFilterParameter.prototype.callback;

/** @typedef {string} */
var FilterType;
/**
 * @record
 * @struct
 */
function Filter() {}
 /** @type {string} */
Filter.prototype.type;
 /** @type {?} */
Filter.prototype.defaultValue;
 /** @type {number} */
Filter.prototype.delay;
 /** @type {(string|!RegExp)} */
Filter.prototype.placeholder;
 /** @type {!Array<string>} */
Filter.prototype.numberComparators;
 /** @type {?} */
Filter.prototype.options;
 /** @type {string} */
Filter.prototype.condition;
 /** @type {?} */
Filter.prototype.getElement;
 /** @type {?} */
Filter.prototype.customFilterParameters;
/**
 * @extends {ComponentClass}
 * @record
 * @struct
 */
function TableHeaderColumn() {}
 /** @type {?} */
var TableHeaderColumn;

/**
 * @constructor
 * @struct
 * @param {?} data
 */
function TableDataSet(data) {}

/**
 * @param {?} data
 * @return {void}
 */
TableDataSet.prototype.setData = function(data) {};

/**
 * @return {void}
 */
TableDataSet.prototype.clear = function() {};

/**
 * @return {?}
 */
TableDataSet.prototype.getData = function() {};
