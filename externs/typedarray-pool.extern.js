/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/typedarray-pool/index.d.ts:

/** @typedef {string} */
var DataType;

/**
 * @param {number} n
 * @param {string=} dtype
 * @return {?}
 */
function malloc(n, dtype) {}

/**
 * @param {number} n
 * @return {!Uint8Array}
 */
function mallocUint8(n) {}

/**
 * @param {number} n
 * @return {!Uint16Array}
 */
function mallocUint16(n) {}

/**
 * @param {number} n
 * @return {!Uint32Array}
 */
function mallocUint32(n) {}

/**
 * @param {number} n
 * @return {!Uint8ClampedArray}
 */
function mallocUint8Clamped(n) {}

/**
 * @param {number} n
 * @return {!Int8Array}
 */
function mallocInt8(n) {}

/**
 * @param {number} n
 * @return {!Int16Array}
 */
function mallocInt16(n) {}

/**
 * @param {number} n
 * @return {!Int32Array}
 */
function mallocInt32(n) {}

/**
 * @param {number} n
 * @return {!Float32Array}
 */
function mallocFloat(n) {}

/**
 * @param {number} n
 * @return {!Float64Array}
 */
function mallocDouble(n) {}

/**
 * @param {number} n
 * @return {!ArrayBuffer}
 */
function mallocArrayBuffer(n) {}

/**
 * @param {number} n
 * @return {!DataView}
 */
function mallocDataView(n) {}

/**
 * @param {number} n
 * @return {?}
 */
function mallocBuffer(n) {}

/**
 * @param {?} array
 * @return {void}
 */
function free(array) {}

/**
 * @param {!Uint8Array} array
 * @return {void}
 */
function freeUint8(array) {}

/**
 * @param {!Uint16Array} array
 * @return {void}
 */
function freeUint16(array) {}

/**
 * @param {!Uint32Array} array
 * @return {void}
 */
function freeUint32(array) {}

/**
 * @param {!Uint8ClampedArray} array
 * @return {void}
 */
function freeUint8Clamped(array) {}

/**
 * @param {!Int8Array} array
 * @return {void}
 */
function freeInt8(array) {}

/**
 * @param {!Int16Array} array
 * @return {void}
 */
function freeInt16(array) {}

/**
 * @param {!Int32Array} array
 * @return {void}
 */
function freeInt32(array) {}

/**
 * @param {!Float32Array} array
 * @return {void}
 */
function freeFloat(array) {}

/**
 * @param {!Float64Array} array
 * @return {void}
 */
function freeDouble(array) {}

/**
 * @param {!ArrayBuffer} buffer
 * @return {void}
 */
function freeArrayBuffer(buffer) {}

/**
 * @param {!DataView} view
 * @return {void}
 */
function freeDataView(view) {}

/**
 * @param {?} buffer
 * @return {void}
 */
function freeBuffer(buffer) {}

/**
 * @return {void}
 */
function clearCache() {}
