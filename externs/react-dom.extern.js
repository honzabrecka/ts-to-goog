/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/react-dom/index.d.ts:

/* TODO: NamespaceExportDeclaration in  */

/* TODO: ImportDeclaration in  */

/**
 * @template E
 * @param {(!React.Component<?, !Object>|!Element)} instance
 * @return {?|!Element}
 */
function findDOMNode(instance) {}

/**
 * @template P, T
 * @param {!React.DOMElement<?, ?>|!React.SFCElement<?>|!React.ComponentElement<?, ?>|!React.ReactElement<?>|!React.Component<?, !Object>} element_or_parentComponent
 * @param {!Element|!React.SFCElement<?>} container_or_element
 * @param {?|!Element=} callback_or_container
 * @param {?=} callback
 * @return {?|void|(void|!Element|!React.Component<?, !Object>)}
 */
function render(element_or_parentComponent, container_or_element, callback_or_container, callback) {}

/**
 * @param {!Element} container
 * @return {boolean}
 */
function unmountComponentAtNode(container) {}
 /** @type {string} */
var version;

/**
 * @template A, B
 * @param {?} callback
 * @param {?=} a
 * @param {?=} b
 * @return {void}
 */
function unstable_batchedUpdates(callback, a, b) {}

/**
 * @template P, T
 * @param {!React.Component<?, !Object>} parentComponent
 * @param {!React.DOMElement<?, ?>|!React.ComponentElement<?, ?>|!React.ReactElement<?>} element
 * @param {!Element} container
 * @param {?=} callback
 * @return {?|(void|!Element|!React.Component<?, !Object>)}
 */
function unstable_renderSubtreeIntoContainer(parentComponent, element, container, callback) {}
