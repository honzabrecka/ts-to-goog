/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/verror/index.d.ts:

/**
 * @constructor
 * @struct
 * @param {(!VError.Options|!Error)|string} options_or_message
 * @param {...string|?} message_or_params
 */
function VError(options_or_message, message_or_params) {}
 /** @type {?} */
VError.VError;

/**
 * @param {!Error} err
 * @return {!Error}
 */
VError.cause = function(err) {};

/**
 * @param {!Error} err
 * @return {!VError.Info}
 */
VError.info = function(err) {};

/**
 * @param {!Error} err
 * @return {string}
 */
VError.fullStack = function(err) {};

/**
 * @param {!Error} err
 * @param {string} name
 * @return {!Error}
 */
VError.findCauseByName = function(err, name) {};

/**
 * @param {!Error} err
 * @param {string} name
 * @return {boolean}
 */
VError.hasCauseWithName = function(err, name) {};

/**
 * @template T
 * @param {!Array<T>} errors
 * @return {(T|!VError.MultiError)}
 */
VError.errorFromList = function(errors) {};

/**
 * @param {!Error} err
 * @param {function(!Error): void} func
 * @return {void}
 */
VError.errorForEach = function(err, func) {};

/**
 * @return {!Error}
 */
VError.prototype.cause = function() {};
/**
 * @record
 * @struct
 */
VError.Info = function() {};

/* TODO: IndexSignature: VError */
/**
 * @record
 * @struct
 */
VError.Options = function() {};
 /** @type {!Error} */
VError.Options.prototype.cause;
 /** @type {string} */
VError.Options.prototype.name;
 /** @type {boolean} */
VError.Options.prototype.strict;
 /** @type {!VError.Info} */
VError.Options.prototype.info;

/**
 * @param {...?} args
 * @return {void}
 */
VError.Options.prototype.constructorOpt = function(args) {};
/**
 * @extends {VError}
 * @constructor
 * @struct
 */
VError.SError = function() {};

/**
 * @constructor
 * @struct
 * @param {!Array<!Error>} errors
 */
VError.MultiError = function(errors) {};

/**
 * @return {!Array<!Error>}
 */
VError.MultiError.prototype.errors = function() {};
/**
 * @extends {VError}
 * @constructor
 * @struct
 */
VError.WError = function() {};

/* TODO: ExportAssignment in  */
