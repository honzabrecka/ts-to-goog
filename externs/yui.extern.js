/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/yui/index.d.ts:
/**
 * @record
 * @struct
 */
function YUI() {}
 /** @type {!YUITest.YUITestStatic} */
YUI.prototype.Test;
 /** @type {!YUITest.IAssert} */
YUI.prototype.Assert;

/**
 * @param {string} name
 * @param {function(?, string): ?} fn
 * @param {string} version
 * @param {!Y.IConfig=} details
 * @return {?}
 */
YUI.prototype.add = function(name, fn, version, details) {};

/**
 * @param {!Function|!Object} receiver
 * @param {!Function|!Object} supplier
 * @param {boolean=} overwrite
 * @param {!Array<string>=} whitelist
 * @param {number=} mode
 * @param {boolean=} merge
 * @return {?}
 */
YUI.prototype.mix = function(receiver, supplier, overwrite, whitelist, mode, merge) {};
/** @const */
var Y = {};
/**
 * @record
 * @struct
 */
Y.IConfig = function() {};
 /** @type {!Array<string>} */
Y.IConfig.prototype.requires;
 /** @type {!Array<string>} */
Y.IConfig.prototype.optional;
 /** @type {!Array<string>} */
Y.IConfig.prototype.use;
 /** @type {?} */
var Y;
 /** @type {?} */
var YUI;
