/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/uuidjs/index.d.ts:
/**
 * @record
 * @struct
 */
function UUID() {}
 /** @type {?} */
UUID.prototype.intFields;
 /** @type {?} */
UUID.prototype.bitFields;
 /** @type {?} */
UUID.prototype.hexFields;
 /** @type {number} */
UUID.prototype.version;
 /** @type {string} */
UUID.prototype.bitString;
 /** @type {string} */
UUID.prototype.hexString;
 /** @type {string} */
UUID.prototype.urn;

/**
 * Tests if two {\@link UUID} objects are equal.
 * @param {?} uuid
 * @return {boolean}
 */
UUID.prototype.equals = function(uuid) {};

/**
 * Returns UUID string representation.
 * @return {string}
 */
UUID.prototype.toString = function() {};
/**
 * @record
 * @struct
 */
function UUIDArray() {}
 /** @type {string} */
UUIDArray.prototype.timeLow;
 /** @type {string} */
UUIDArray.prototype.timeMid;
 /** @type {string} */
UUIDArray.prototype.timeHiAndVersion;
 /** @type {string} */
UUIDArray.prototype.clockSeqHiAndReserved;
 /** @type {string} */
UUIDArray.prototype.clockSeqLow;
 /** @type {string} */
UUIDArray.prototype.node;

/**
 * The simplest function to get an UUID string.
 * @return {string}
 */
function generate() {}

/**
 * Generates a version 4 {\@link UUID}.
 * \@since 3.0
 * @return {?}
 */
function genV4() {}

/**
 * Generates a version 1 {\@link UUID}.
 * \@since 3.0
 * @return {?}
 */
function genV1() {}

/**
 * Converts hexadecimal UUID string to an {\@link UUID} object.
 * \@since 3.0
 * @param {string} uuid
 * @return {?}
 */
function parse(uuid) {}

/**
 * Re-initializes version 1 UUID state.
 * \@since 3.0
 * @return {void}
 */
function resetState() {}

/**
 * Reinstalls {\@link UUID.generate} method to emulate the interface of UUID.js version 2.x.
 * \@since 3.1
 * @deprecated Version 2.x. compatible interface is not recommended.
 * @return {void}
 */
function makeBackwardCompatible() {}
