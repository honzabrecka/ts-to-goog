/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/rimraf/index.d.ts:

/* TODO: ImportEqualsDeclaration in  */

/* TODO: ImportEqualsDeclaration in  */

/**
 * @param {string} path
 * @param {!rimraf.Options|function(!Error): void} options_or_callback
 * @param {function(!Error): void=} callback
 * @return {void}
 */
function rimraf(path, options_or_callback, callback) {}

/**
 * @param {string} path
 * @param {!rimraf.Options=} options
 * @return {!Promise<void>}
 */
rimraf.__promisify__ = function(path, options) {};

/**
 * @param {string} path
 * @param {!rimraf.Options=} options
 * @return {void}
 */
rimraf.sync = function(path, options) {};
 /** @type {number} */
rimraf.EMFILE_MAX;
 /** @type {number} */
rimraf.BUSYTRIES_MAX;
/**
 * @record
 * @struct
 */
rimraf.Options = function() {};
 /** @type {number} */
rimraf.Options.prototype.maxBusyTries;
 /** @type {boolean} */
rimraf.Options.prototype.emfileWait;
 /** @type {boolean} */
rimraf.Options.prototype.disableGlob;
 /** @type {(boolean|!G.IOptions)} */
rimraf.Options.prototype.glob;
 /** @type {function((string|?|!URL), function(!NodeJS.ErrnoException): void): void} */
rimraf.Options.prototype.unlink;
 /** @type {function((string|?|!URL), (string|number), function(!NodeJS.ErrnoException): void): void} */
rimraf.Options.prototype.chmod;
 /** @type {function((string|?|!URL), function(!NodeJS.ErrnoException, !Stats): void): void} */
rimraf.Options.prototype.stat;
 /** @type {function((string|?|!URL), function(!NodeJS.ErrnoException, !Stats): void): void} */
rimraf.Options.prototype.lstat;
 /** @type {function((string|?|!URL), function(!NodeJS.ErrnoException): void): void} */
rimraf.Options.prototype.rmdir;
 /** @type {?} */
rimraf.Options.prototype.readdir;
 /** @type {function((string|?|!URL)): void} */
rimraf.Options.prototype.unlinkSync;
 /** @type {function((string|?|!URL), (string|number)): void} */
rimraf.Options.prototype.chmodSync;
 /** @type {function((string|?|!URL)): !Stats} */
rimraf.Options.prototype.statSync;
 /** @type {function((string|?|!URL)): !Stats} */
rimraf.Options.prototype.lstatSync;
 /** @type {function((string|?|!URL)): void} */
rimraf.Options.prototype.rmdirSync;
 /** @type {?} */
rimraf.Options.prototype.readdirSync;

/* TODO: ExportAssignment in  */
