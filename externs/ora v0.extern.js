/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/ora v0/index.d.ts:

/** @typedef {string} */
var Color;
/**
 * @record
 * @struct
 */
function Options() {}
 /** @type {string} */
Options.prototype.text;
 /** @type {(string|?)} */
Options.prototype.spinner;
 /** @type {string} */
Options.prototype.color;
 /** @type {number} */
Options.prototype.interval;
 /** @type {!NodeJS.WritableStream} */
Options.prototype.stream;
 /** @type {boolean} */
Options.prototype.enabled;
/**
 * @record
 * @struct
 */
function Spinner() {}
 /** @type {number} */
Spinner.prototype.interval;
 /** @type {!Array<string>} */
Spinner.prototype.frames;
/**
 * @record
 * @struct
 */
function Instance() {}
 /** @type {string} */
Instance.prototype.text;
 /** @type {string} */
Instance.prototype.color;

/**
 * @return {?}
 */
Instance.prototype.start = function() {};

/**
 * @return {?}
 */
Instance.prototype.stop = function() {};

/**
 * @return {?}
 */
Instance.prototype.succeed = function() {};

/**
 * @return {?}
 */
Instance.prototype.fail = function() {};

/**
 * @param {string=} symbol
 * @return {?}
 */
Instance.prototype.stopAndPersist = function(symbol) {};

/**
 * @return {?}
 */
Instance.prototype.clear = function() {};

/**
 * @return {?}
 */
Instance.prototype.render = function() {};

/**
 * @return {?}
 */
Instance.prototype.frame = function() {};

/**
 * @param {(string|?)} options
 * @return {?}
 */
function ora(options) {}

/* TODO: ExportAssignment in  */
