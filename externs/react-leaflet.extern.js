/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/react-leaflet/index.d.ts:

/* TODO: ImportDeclaration in  */

/* TODO: ImportDeclaration in  */

/** @typedef {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>|!Array<(string|number|boolean|?|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)>)} */
var Children;
/**
 * @record
 * @struct
 */
function MapEvents() {}

/**
 * @param {!L.MouseEvent} event
 * @return {void}
 */
MapEvents.prototype.onclick = function(event) {};

/**
 * @param {!L.MouseEvent} event
 * @return {void}
 */
MapEvents.prototype.ondblclick = function(event) {};

/**
 * @param {!L.MouseEvent} event
 * @return {void}
 */
MapEvents.prototype.onmousedown = function(event) {};

/**
 * @param {!L.MouseEvent} event
 * @return {void}
 */
MapEvents.prototype.onmouseup = function(event) {};

/**
 * @param {!L.MouseEvent} event
 * @return {void}
 */
MapEvents.prototype.onmouseover = function(event) {};

/**
 * @param {!L.MouseEvent} event
 * @return {void}
 */
MapEvents.prototype.onmouseout = function(event) {};

/**
 * @param {!L.MouseEvent} event
 * @return {void}
 */
MapEvents.prototype.onmousemove = function(event) {};

/**
 * @param {!L.MouseEvent} event
 * @return {void}
 */
MapEvents.prototype.oncontextmenu = function(event) {};

/**
 * @param {!L.Event} event
 * @return {void}
 */
MapEvents.prototype.onfocus = function(event) {};

/**
 * @param {!L.Event} event
 * @return {void}
 */
MapEvents.prototype.onblur = function(event) {};

/**
 * @param {!L.MouseEvent} event
 * @return {void}
 */
MapEvents.prototype.onpreclick = function(event) {};

/**
 * @param {!L.Event} event
 * @return {void}
 */
MapEvents.prototype.onload = function(event) {};

/**
 * @param {!L.Event} event
 * @return {void}
 */
MapEvents.prototype.onunload = function(event) {};

/**
 * @param {!L.Event} event
 * @return {void}
 */
MapEvents.prototype.onviewreset = function(event) {};

/**
 * @param {!L.Event} event
 * @return {void}
 */
MapEvents.prototype.onmove = function(event) {};

/**
 * @param {!L.Event} event
 * @return {void}
 */
MapEvents.prototype.onmovestart = function(event) {};

/**
 * @param {!L.Event} event
 * @return {void}
 */
MapEvents.prototype.onmoveend = function(event) {};

/**
 * @param {!L.Event} event
 * @return {void}
 */
MapEvents.prototype.ondragstart = function(event) {};

/**
 * @param {!L.Event} event
 * @return {void}
 */
MapEvents.prototype.ondrag = function(event) {};

/**
 * @param {!L.DragEndEvent} event
 * @return {void}
 */
MapEvents.prototype.ondragend = function(event) {};

/**
 * @param {!L.Event} event
 * @return {void}
 */
MapEvents.prototype.onzoomstart = function(event) {};

/**
 * @param {!L.Event} event
 * @return {void}
 */
MapEvents.prototype.onzoomend = function(event) {};

/**
 * @param {!L.Event} event
 * @return {void}
 */
MapEvents.prototype.onzoomlevelschange = function(event) {};

/**
 * @param {!L.ResizeEvent} event
 * @return {void}
 */
MapEvents.prototype.onresize = function(event) {};

/**
 * @param {!L.Event} event
 * @return {void}
 */
MapEvents.prototype.onautopanstart = function(event) {};

/**
 * @param {!L.LayerEvent} event
 * @return {void}
 */
MapEvents.prototype.onlayeradd = function(event) {};

/**
 * @param {!L.LayerEvent} event
 * @return {void}
 */
MapEvents.prototype.onlayerremove = function(event) {};

/**
 * @param {!L.LayersControlEvent} event
 * @return {void}
 */
MapEvents.prototype.onbaselayerchange = function(event) {};

/**
 * @param {!L.LayersControlEvent} event
 * @return {void}
 */
MapEvents.prototype.onoverlayadd = function(event) {};

/**
 * @param {!L.LayersControlEvent} event
 * @return {void}
 */
MapEvents.prototype.onoverlayremove = function(event) {};

/**
 * @param {!L.LocationEvent} event
 * @return {void}
 */
MapEvents.prototype.onlocationfound = function(event) {};

/**
 * @param {!L.ErrorEvent} event
 * @return {void}
 */
MapEvents.prototype.onlocationerror = function(event) {};

/**
 * @param {!L.PopupEvent} event
 * @return {void}
 */
MapEvents.prototype.onpopupopen = function(event) {};

/**
 * @param {!L.PopupEvent} event
 * @return {void}
 */
MapEvents.prototype.onpopupclose = function(event) {};
/**
 * @record
 * @struct
 */
function MarkerEvents() {}

/**
 * @param {!L.MouseEvent} event
 * @return {void}
 */
MarkerEvents.prototype.onclick = function(event) {};

/**
 * @param {!L.MouseEvent} event
 * @return {void}
 */
MarkerEvents.prototype.ondblclick = function(event) {};

/**
 * @param {!L.MouseEvent} event
 * @return {void}
 */
MarkerEvents.prototype.onmousedown = function(event) {};

/**
 * @param {!L.MouseEvent} event
 * @return {void}
 */
MarkerEvents.prototype.onmouseover = function(event) {};

/**
 * @param {!L.MouseEvent} event
 * @return {void}
 */
MarkerEvents.prototype.onmouseout = function(event) {};

/**
 * @param {!L.MouseEvent} event
 * @return {void}
 */
MarkerEvents.prototype.oncontextmenu = function(event) {};

/**
 * @param {!L.Event} event
 * @return {void}
 */
MarkerEvents.prototype.ondragstart = function(event) {};

/**
 * @param {!L.Event} event
 * @return {void}
 */
MarkerEvents.prototype.ondrag = function(event) {};

/**
 * @param {!L.DragEndEvent} event
 * @return {void}
 */
MarkerEvents.prototype.ondragend = function(event) {};

/**
 * @param {!L.Event} event
 * @return {void}
 */
MarkerEvents.prototype.onmove = function(event) {};

/**
 * @param {!L.Event} event
 * @return {void}
 */
MarkerEvents.prototype.onadd = function(event) {};

/**
 * @param {!L.Event} event
 * @return {void}
 */
MarkerEvents.prototype.onremove = function(event) {};

/**
 * @param {!L.PopupEvent} event
 * @return {void}
 */
MarkerEvents.prototype.onpopupopen = function(event) {};

/**
 * @param {!L.PopupEvent} event
 * @return {void}
 */
MarkerEvents.prototype.onpopupclose = function(event) {};
/**
 * @record
 * @struct
 */
function TileLayerEvents() {}

/**
 * @param {!L.Event} event
 * @return {void}
 */
TileLayerEvents.prototype.onloading = function(event) {};

/**
 * @param {!L.Event} event
 * @return {void}
 */
TileLayerEvents.prototype.onload = function(event) {};

/**
 * @param {!L.TileEvent} event
 * @return {void}
 */
TileLayerEvents.prototype.ontileloadstart = function(event) {};

/**
 * @param {!L.TileEvent} event
 * @return {void}
 */
TileLayerEvents.prototype.ontileload = function(event) {};

/**
 * @param {!L.TileEvent} event
 * @return {void}
 */
TileLayerEvents.prototype.ontileunload = function(event) {};

/**
 * @param {!L.TileEvent} event
 * @return {void}
 */
TileLayerEvents.prototype.ontileerror = function(event) {};
/**
 * @record
 * @struct
 */
function PathEvents() {}

/**
 * @param {!L.MouseEvent} event
 * @return {void}
 */
PathEvents.prototype.onclick = function(event) {};

/**
 * @param {!L.MouseEvent} event
 * @return {void}
 */
PathEvents.prototype.ondblclick = function(event) {};

/**
 * @param {!L.MouseEvent} event
 * @return {void}
 */
PathEvents.prototype.onmousedown = function(event) {};

/**
 * @param {!L.MouseEvent} event
 * @return {void}
 */
PathEvents.prototype.onmouseover = function(event) {};

/**
 * @param {!L.MouseEvent} event
 * @return {void}
 */
PathEvents.prototype.onmouseout = function(event) {};

/**
 * @param {!L.MouseEvent} event
 * @return {void}
 */
PathEvents.prototype.oncontextmenu = function(event) {};

/**
 * @param {!L.Event} event
 * @return {void}
 */
PathEvents.prototype.onadd = function(event) {};

/**
 * @param {!L.Event} event
 * @return {void}
 */
PathEvents.prototype.onremove = function(event) {};

/**
 * @param {!L.PopupEvent} event
 * @return {void}
 */
PathEvents.prototype.onpopupopen = function(event) {};

/**
 * @param {!L.PopupEvent} event
 * @return {void}
 */
PathEvents.prototype.onpopupclose = function(event) {};
/**
 * @record
 * @struct
 */
function FeatureGroupEvents() {}

/**
 * @param {!L.MouseEvent} event
 * @return {void}
 */
FeatureGroupEvents.prototype.onclick = function(event) {};

/**
 * @param {!L.MouseEvent} event
 * @return {void}
 */
FeatureGroupEvents.prototype.ondblclick = function(event) {};

/**
 * @param {!L.MouseEvent} event
 * @return {void}
 */
FeatureGroupEvents.prototype.onmouseover = function(event) {};

/**
 * @param {!L.MouseEvent} event
 * @return {void}
 */
FeatureGroupEvents.prototype.onmouseout = function(event) {};

/**
 * @param {!L.MouseEvent} event
 * @return {void}
 */
FeatureGroupEvents.prototype.oncontextmenu = function(event) {};

/**
 * @param {!L.LayerEvent} event
 * @return {void}
 */
FeatureGroupEvents.prototype.onlayeradd = function(event) {};

/**
 * @param {!L.LayerEvent} event
 * @return {void}
 */
FeatureGroupEvents.prototype.onlayerremove = function(event) {};
/**
 * @record
 * @struct
 */
function LayersControlEvents() {}

/**
 * @param {!L.LayersControlEvent} event
 * @return {void}
 */
LayersControlEvents.prototype.onbaselayerchange = function(event) {};

/**
 * @param {!L.LayersControlEvent} event
 * @return {void}
 */
LayersControlEvents.prototype.onoverlayadd = function(event) {};

/**
 * @param {!L.LayersControlEvent} event
 * @return {void}
 */
LayersControlEvents.prototype.onoverlayremove = function(event) {};

/** @typedef {?} */
var LeafletEvents;
/**
 * @constructor
 * @struct
 */
function MapComponent() {}
 /** @type {?} */
MapComponent.prototype._leafletEvents;
 /** @type {?} */
MapComponent.prototype.leafletElement;

/**
 * @param {?} props
 * @return {?}
 */
MapComponent.prototype.extractLeafletEvents = function(props) {};

/**
 * @param {?} next
 * @param {?} prev
 * @return {?}
 */
MapComponent.prototype.bindLeafletEvents = function(next, prev) {};

/**
 * @param {string} type
 * @param {?} data
 * @return {void}
 */
MapComponent.prototype.fireLeafletEvent = function(type, data) {};

/**
 * @param {?} props
 * @return {?}
 */
MapComponent.prototype.getOptions = function(props) {};
/**
 * @extends {MapEvents}
 * @extends {L.MapOptions}
 * @extends {L.LocateOptions}
 * @extends {L.FitBoundsOptions}
 * @record
 * @struct
 */
function MapProps() {}
 /** @type {boolean} */
MapProps.prototype.animate;
 /** @type {(!L.LatLngBounds|!Array<!Array<?>>)} */
MapProps.prototype.bounds;
 /** @type {!L.FitBoundsOptions} */
MapProps.prototype.boundsOptions;
 /** @type {(!Array<?>|!L.LatLng|!L.LatLngLiteral)} */
MapProps.prototype.center;
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>|!Array<(string|number|boolean|?|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)>)} */
MapProps.prototype.children;
 /** @type {string} */
MapProps.prototype.className;
 /** @type {string} */
MapProps.prototype.id;
 /** @type {(!L.LatLngBounds|!Array<!Array<?>>)} */
MapProps.prototype.maxBounds;
 /** @type {number} */
MapProps.prototype.maxZoom;
 /** @type {number} */
MapProps.prototype.minZoom;
 /** @type {!React.CSSProperties} */
MapProps.prototype.style;
 /** @type {boolean} */
MapProps.prototype.useFlyTo;
 /** @type {number} */
MapProps.prototype.zoom;
/**
 * @constructor
 * @struct
 */
function Map() {}
 /** @type {string} */
Map.prototype.className;
 /** @type {!HTMLDivElement} */
Map.prototype.container;

/**
 * @return {?}
 */
Map.prototype.getChildContext = function() {};

/**
 * @param {?} props
 * @return {?}
 */
Map.prototype.createLeafletElement = function(props) {};

/**
 * @param {?} fromProps
 * @param {?} toProps
 * @return {void}
 */
Map.prototype.updateLeafletElement = function(fromProps, toProps) {};

/**
 * @param {!HTMLDivElement} container
 * @return {void}
 */
Map.prototype.bindContainer = function(container) {};

/**
 * @param {(!Array<?>|!L.LatLng|!L.LatLngLiteral)} next
 * @param {(!Array<?>|!L.LatLng|!L.LatLngLiteral)} prev
 * @return {boolean}
 */
Map.prototype.shouldUpdateCenter = function(next, prev) {};

/**
 * @param {(!L.LatLngBounds|!Array<!Array<?>>)} next
 * @param {(!L.LatLngBounds|!Array<!Array<?>>)} prev
 * @return {boolean}
 */
Map.prototype.shouldUpdateBounds = function(next, prev) {};
/**
 * @record
 * @struct
 */
function PaneProps() {}
 /** @type {string} */
PaneProps.prototype.name;
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>|!Array<(string|number|boolean|?|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)>)} */
PaneProps.prototype.children;
 /** @type {!L.Map} */
PaneProps.prototype.map;
 /** @type {string} */
PaneProps.prototype.className;
 /** @type {!React.CSSProperties} */
PaneProps.prototype.style;
 /** @type {string} */
PaneProps.prototype.pane;
/**
 * @record
 * @struct
 */
function PaneState() {}
 /** @type {string} */
PaneState.prototype.name;
/**
 * @constructor
 * @struct
 */
function Pane() {}

/**
 * @return {?}
 */
Pane.prototype.getChildContext = function() {};

/**
 * @param {?} props
 * @return {void}
 */
Pane.prototype.createPane = function(props) {};

/**
 * @return {void}
 */
Pane.prototype.removePane = function() {};

/**
 * @param {?} arg
 * @return {void}
 */
Pane.prototype.setStyle = function(arg) {};

/**
 * @return {!HTMLElement}
 */
Pane.prototype.getParentPane = function() {};

/**
 * @param {string} name
 * @return {!HTMLElement}
 */
Pane.prototype.getPane = function(name) {};
/**
 * @record
 * @struct
 */
function MapLayerProps() {}
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>|!Array<(string|number|boolean|?|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)>)} */
MapLayerProps.prototype.children;
/**
 * @record
 * @struct
 */
function LayerContainer() {}

/**
 * @param {!L.Layer} layer
 * @return {?}
 */
LayerContainer.prototype.addLayer = function(layer) {};

/**
 * @param {(number|!L.Layer)} layer
 * @return {?}
 */
LayerContainer.prototype.removeLayer = function(layer) {};
/**
 * @constructor
 * @struct
 */
function MapLayer() {}
 /** @type {(!L.Map|?)} */
MapLayer.prototype.layerContainer;

/**
 * @param {?} props
 * @return {?}
 */
MapLayer.prototype.createLeafletElement = function(props) {};

/**
 * @param {?} fromProps
 * @param {?} toProps
 * @return {void}
 */
MapLayer.prototype.updateLeafletElement = function(fromProps, toProps) {};
/**
 * @extends {L.GridLayerOptions}
 * @record
 * @struct
 */
function GridLayerProps() {}
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>|!Array<(string|number|boolean|?|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)>)} */
GridLayerProps.prototype.children;
/**
 * @constructor
 * @struct
 */
function GridLayer() {}
/**
 * @extends {TileLayerEvents}
 * @extends {L.TileLayerOptions}
 * @record
 * @struct
 */
function TileLayerProps() {}
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>|!Array<(string|number|boolean|?|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)>)} */
TileLayerProps.prototype.children;
 /** @type {string} */
TileLayerProps.prototype.url;
/**
 * @constructor
 * @struct
 */
function TileLayer() {}
/**
 * @extends {TileLayerEvents}
 * @extends {L.WMSOptions}
 * @record
 * @struct
 */
function WMSTileLayerProps() {}
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>|!Array<(string|number|boolean|?|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)>)} */
WMSTileLayerProps.prototype.children;
 /** @type {string} */
WMSTileLayerProps.prototype.url;
/**
 * @constructor
 * @struct
 */
function WMSTileLayer() {}
/**
 * @extends {L.ImageOverlayOptions}
 * @record
 * @struct
 */
function ImageOverlayProps() {}
 /** @type {(!L.LatLngBounds|!Array<!Array<?>>)} */
ImageOverlayProps.prototype.bounds;
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>|!Array<(string|number|boolean|?|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)>)} */
ImageOverlayProps.prototype.children;
 /** @type {string} */
ImageOverlayProps.prototype.url;
/**
 * @constructor
 * @struct
 */
function ImageOverlay() {}

/**
 * @return {?}
 */
ImageOverlay.prototype.getChildContext = function() {};
/**
 * @record
 * @struct
 */
function LayerGroupProps() {}
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>|!Array<(string|number|boolean|?|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)>)} */
LayerGroupProps.prototype.children;
/**
 * @constructor
 * @struct
 */
function LayerGroup() {}

/**
 * @return {?}
 */
LayerGroup.prototype.getChildContext = function() {};
/**
 * @extends {MarkerEvents}
 * @extends {L.MarkerOptions}
 * @record
 * @struct
 */
function MarkerProps() {}
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>|!Array<(string|number|boolean|?|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)>)} */
MarkerProps.prototype.children;
 /** @type {(!Array<?>|!L.LatLng|!L.LatLngLiteral)} */
MarkerProps.prototype.position;
/**
 * @constructor
 * @struct
 */
function Marker() {}

/**
 * @return {?}
 */
Marker.prototype.getChildContext = function() {};
/**
 * @extends {PathEvents}
 * @extends {L.PathOptions}
 * @extends {MapLayerProps}
 * @record
 * @struct
 */
function PathProps() {}
/**
 * @constructor
 * @struct
 */
function Path() {}

/**
 * @return {?}
 */
Path.prototype.getChildContext = function() {};

/**
 * @param {?} props
 * @return {!L.PathOptions}
 */
Path.prototype.getPathOptions = function(props) {};

/**
 * @param {!L.PathOptions} options
 * @return {void}
 */
Path.prototype.setStyle = function(options) {};

/**
 * @param {?} fromProps
 * @param {?} toProps
 * @return {void}
 */
Path.prototype.setStyleIfChanged = function(fromProps, toProps) {};
/**
 * @extends {PathEvents}
 * @extends {L.CircleMarkerOptions}
 * @record
 * @struct
 */
function CircleProps() {}
 /** @type {(!Array<?>|!L.LatLng|!L.LatLngLiteral)} */
CircleProps.prototype.center;
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>|!Array<(string|number|boolean|?|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)>)} */
CircleProps.prototype.children;
 /** @type {number} */
CircleProps.prototype.radius;
/**
 * @constructor
 * @struct
 */
function Circle() {}
/**
 * @extends {PathEvents}
 * @extends {L.CircleMarkerOptions}
 * @record
 * @struct
 */
function CircleMarkerProps() {}
 /** @type {(!Array<?>|!L.LatLng|!L.LatLngLiteral)} */
CircleMarkerProps.prototype.center;
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>|!Array<(string|number|boolean|?|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)>)} */
CircleMarkerProps.prototype.children;
 /** @type {number} */
CircleMarkerProps.prototype.radius;
/**
 * @constructor
 * @struct
 */
function CircleMarker() {}
/**
 * @extends {FeatureGroupEvents}
 * @extends {L.PathOptions}
 * @record
 * @struct
 */
function FeatureGroupProps() {}
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>|!Array<(string|number|boolean|?|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)>)} */
FeatureGroupProps.prototype.children;
/**
 * @constructor
 * @struct
 */
function FeatureGroup() {}

/**
 * @return {?}
 */
FeatureGroup.prototype.getChildContext = function() {};
/**
 * @extends {FeatureGroupEvents}
 * @extends {L.GeoJSONOptions}
 * @record
 * @struct
 */
function GeoJSONProps() {}
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>|!Array<(string|number|boolean|?|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)>)} */
GeoJSONProps.prototype.children;
 /** @type {?} */
GeoJSONProps.prototype.data;
 /** @type {function(?): !L.PathOptions} */
GeoJSONProps.prototype.style;
/**
 * @constructor
 * @struct
 */
function GeoJSON() {}
/**
 * @extends {PathEvents}
 * @extends {L.PolylineOptions}
 * @record
 * @struct
 */
function PolylineProps() {}
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>|!Array<(string|number|boolean|?|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)>)} */
PolylineProps.prototype.children;
 /** @type {(!Array<(!Array<?>|!L.LatLng|!L.LatLngLiteral)>|!Array<!Array<(!Array<?>|!L.LatLng|!L.LatLngLiteral)>>)} */
PolylineProps.prototype.positions;
/**
 * @constructor
 * @struct
 */
function Polyline() {}
/**
 * @extends {PathEvents}
 * @extends {L.PolylineOptions}
 * @record
 * @struct
 */
function PolygonProps() {}
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>|!Array<(string|number|boolean|?|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)>)} */
PolygonProps.prototype.children;
 /** @type {!L.FeatureGroup} */
PolygonProps.prototype.popupContainer;
 /** @type {(!Array<(!Array<?>|!L.LatLng|!L.LatLngLiteral)>|!Array<!Array<(!Array<?>|!L.LatLng|!L.LatLngLiteral)>>|!Array<!Array<!Array<(!Array<?>|!L.LatLng|!L.LatLngLiteral)>>>)} */
PolygonProps.prototype.positions;
/**
 * @constructor
 * @struct
 */
function Polygon() {}
/**
 * @extends {PathEvents}
 * @extends {L.PolylineOptions}
 * @record
 * @struct
 */
function RectangleProps() {}
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>|!Array<(string|number|boolean|?|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)>)} */
RectangleProps.prototype.children;
 /** @type {(!L.LatLngBounds|!Array<!Array<?>>)} */
RectangleProps.prototype.bounds;
 /** @type {!L.FeatureGroup} */
RectangleProps.prototype.popupContainer;
/**
 * @constructor
 * @struct
 */
function Rectangle() {}
/**
 * @extends {L.PopupOptions}
 * @record
 * @struct
 */
function PopupProps() {}
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>|!Array<(string|number|boolean|?|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)>)} */
PopupProps.prototype.children;
 /** @type {(!Array<?>|!L.LatLng|!L.LatLngLiteral)} */
PopupProps.prototype.position;
/**
 * @constructor
 * @struct
 */
function Popup() {}

/**
 * @param {?} arg
 * @return {void}
 */
Popup.prototype.onPopupOpen = function(arg) {};

/**
 * @param {?} arg
 * @return {void}
 */
Popup.prototype.onPopupClose = function(arg) {};

/**
 * @return {void}
 */
Popup.prototype.renderPopupContent = function() {};

/**
 * @return {void}
 */
Popup.prototype.removePopupContent = function() {};
/**
 * @extends {L.TooltipOptions}
 * @record
 * @struct
 */
function TooltipProps() {}
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>|!Array<(string|number|boolean|?|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)>)} */
TooltipProps.prototype.children;
/**
 * @constructor
 * @struct
 */
function Tooltip() {}

/**
 * @param {?} arg
 * @return {void}
 */
Tooltip.prototype.onTooltipOpen = function(arg) {};

/**
 * @param {?} arg
 * @return {void}
 */
Tooltip.prototype.onTooltipClose = function(arg) {};

/**
 * @return {void}
 */
Tooltip.prototype.renderTooltipContent = function() {};

/**
 * @return {void}
 */
Tooltip.prototype.removeTooltipContent = function() {};

/** @typedef {!L.ControlOptions} */
var MapControlProps;
/**
 * @constructor
 * @struct
 */
function MapControl() {}
 /** @type {?} */
MapControl.prototype.leafletElement;

/**
 * @param {?} props
 * @return {?}
 */
MapControl.prototype.createLeafletElement = function(props) {};

/**
 * @param {?} fromProps
 * @param {?} toProps
 * @return {void}
 */
MapControl.prototype.updateLeafletElement = function(fromProps, toProps) {};

/** @typedef {!L.Control.AttributionOptions} */
var AttributionControlProps;
/**
 * @constructor
 * @struct
 */
function AttributionControl() {}
/**
 * @extends {LayersControlEvents}
 * @extends {L.Control.LayersOptions}
 * @record
 * @struct
 */
function LayersControlProps() {}
 /** @type {!L.Control.LayersObject} */
LayersControlProps.prototype.baseLayers;
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>|!Array<(string|number|boolean|?|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)>)} */
LayersControlProps.prototype.children;
 /** @type {!L.Control.LayersObject} */
LayersControlProps.prototype.overlays;
/**
 * @constructor
 * @struct
 */
function LayersControl() {}
/**
 * @record
 * @struct
 */
LayersControl.BaseControlledLayerProps = function() {};
 /** @type {boolean} */
LayersControl.BaseControlledLayerProps.prototype.checked;
 /** @type {(string|number|boolean|!Object|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>|!Array<(string|number|boolean|?|!React.ReactElement<?>|!Array<(string|number|boolean|!Array<?>|!React.ReactElement<?>)>)>)} */
LayersControl.BaseControlledLayerProps.prototype.children;

/**
 * @param {!L.Layer} layer
 * @return {void}
 */
LayersControl.BaseControlledLayerProps.prototype.removeLayer = function(layer) {};

/**
 * @param {!L.Layer} layer
 * @return {void}
 */
LayersControl.BaseControlledLayerProps.prototype.removeLayerControl = function(layer) {};
/**
 * @extends {LayersControl.BaseControlledLayerProps}
 * @record
 * @struct
 */
LayersControl.ControlledLayerProps = function() {};
 /** @type {string} */
LayersControl.ControlledLayerProps.prototype.name;

/**
 * @param {!L.Layer} layer
 * @param {string} name
 * @param {boolean} checked
 * @return {void}
 */
LayersControl.ControlledLayerProps.prototype.addBaseLayer = function(layer, name, checked) {};

/**
 * @param {!L.Layer} layer
 * @param {string} name
 * @param {boolean} checked
 * @return {void}
 */
LayersControl.ControlledLayerProps.prototype.addOverlay = function(layer, name, checked) {};
/**
 * @constructor
 * @struct
 */
LayersControl.ControlledLayer = function() {};
 /** @type {!L.Layer} */
LayersControl.ControlledLayer.prototype.layer;

/**
 * @return {?}
 */
LayersControl.ControlledLayer.prototype.getChildContext = function() {};

/**
 * @return {void}
 */
LayersControl.ControlledLayer.prototype.addLayer = function() {};

/**
 * @param {!L.Layer} layer
 * @return {void}
 */
LayersControl.ControlledLayer.prototype.removeLayer = function(layer) {};
/**
 * @constructor
 * @struct
 */
LayersControl.BaseLayer = function() {};
/**
 * @constructor
 * @struct
 */
LayersControl.Overlay = function() {};

/** @typedef {!L.Control.ScaleOptions} */
var ScaleControlProps;
/**
 * @constructor
 * @struct
 */
function ScaleControl() {}

/** @typedef {!L.Control.ZoomOptions} */
var ZoomControlProps;
/**
 * @constructor
 * @struct
 */
function ZoomControl() {}
