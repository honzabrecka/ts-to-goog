/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/ejs/index.d.ts:
/** @const */
var Ejs = {};

/** @typedef {!Object<string,?>} */
Ejs.Data;

/** @typedef {!Array<string>} */
Ejs.Dependencies;
 /** @type {!Ejs.Cache} */
Ejs.cache;
 /** @type {string} */
Ejs.localsName;

/**
 * @param {string} name
 * @param {string} filename
 * @return {string}
 */
Ejs.resolveInclude = function(name, filename) {};

/**
 * @param {string} template
 * @param {!Ejs.Options=} opts
 * @return {!Ejs.TemplateFunction}
 */
Ejs.compile = function(template, opts) {};

/**
 * @param {string} template
 * @param {!Object<string,?>=} data
 * @param {!Ejs.Options=} opts
 * @return {string}
 */
Ejs.render = function(template, data, opts) {};

/** @typedef {function(!Error, string): T} */
Ejs.RenderFileCallback;

/**
 * @template T
 * @param {string} path
 * @param {function(!Error, string): T|!Object<string,?>} cb_or_data
 * @param {function(!Error, string): T|!Ejs.Options=} cb_or_opts
 * @param {function(!Error, string): T=} cb
 * @return {T}
 */
Ejs.renderFile = function(path, cb_or_data, cb_or_opts, cb) {};

/**
 * @return {?}
 */
Ejs.clearCache = function() {};
/**
 * @record
 * @struct
 */
Ejs.TemplateFunction = function() {};

/* TODO: CallSignature: Ejs */
/**
 * @record
 * @struct
 */
Ejs.Options = function() {};
 /** @type {?} */
Ejs.Options.prototype.cache;
 /** @type {string} */
Ejs.Options.prototype.filename;
 /** @type {?} */
Ejs.Options.prototype.context;
 /** @type {boolean} */
Ejs.Options.prototype.compileDebug;
 /** @type {boolean} */
Ejs.Options.prototype.client;
 /** @type {string} */
Ejs.Options.prototype.delimiter;
 /** @type {?} */
Ejs.Options.prototype.debug;
 /** @type {boolean} */
Ejs.Options.prototype._with;

/**
 * @constructor
 * @struct
 * @param {string} text
 * @param {!Ejs.Options} opts
 */
Ejs.Template = function(text, opts) {};
 /** @type {!Ejs.Options} */
Ejs.Template.prototype.opts;
 /** @type {string} */
Ejs.Template.prototype.templateText;
 /** @type {string} */
Ejs.Template.prototype.mode;
 /** @type {boolean} */
Ejs.Template.prototype.truncate;
 /** @type {number} */
Ejs.Template.prototype.currentLine;
 /** @type {string} */
Ejs.Template.prototype.source;
 /** @type {!Array<string>} */
Ejs.Template.prototype.dependencies;

/**
 * @return {!RegExp}
 */
Ejs.Template.prototype.createRegex = function() {};

/**
 * @return {!Ejs.TemplateFunction}
 */
Ejs.Template.prototype.compile = function() {};

/**
 * @return {?}
 */
Ejs.Template.prototype.generateSource = function() {};

/**
 * @return {!Array<string>}
 */
Ejs.Template.prototype.parseTemplateText = function() {};

/**
 * @param {string} line
 * @return {?}
 */
Ejs.Template.prototype.scanLine = function(line) {};
/**
 * @record
 * @struct
 */
Ejs.Template.MODES = function() {};
 /** @type {string} */
Ejs.Template.MODES.prototype.EVAL;
 /** @type {string} */
Ejs.Template.MODES.prototype.ESCAPED;
 /** @type {string} */
Ejs.Template.MODES.prototype.RAW;
 /** @type {string} */
Ejs.Template.MODES.prototype.COMMENT;
 /** @type {string} */
Ejs.Template.MODES.prototype.LITERAL;

/**
 * @param {string} s
 * @return {string}
 */
Ejs.escapeRegexChars = function(s) {};

/**
 * @param {string} markup
 * @return {string}
 */
Ejs.escapeXML = function(markup) {};

/**
 * @template T1
 * @param {T1} to
 * @param {?} fro
 * @return {T1}
 */
Ejs.shallowCopy = function(to, fro) {};
/**
 * @record
 * @struct
 */
Ejs.Cache = function() {};
 /** @type {!Object<string,?>} */
Ejs.Cache.prototype._data;

/**
 * @param {string} key
 * @param {?} val
 * @return {?}
 */
Ejs.Cache.prototype.set = function(key, val) {};

/**
 * @param {string} key
 * @return {?}
 */
Ejs.Cache.prototype.get = function(key) {};

/**
 * @param {...string} from1_or_args
 * @return {string}
 */
Ejs.resolve = function(from1_or_args) {};

/**
 * @param {string} path
 * @return {string}
 */
Ejs.normalize = function(path) {};

/**
 * @param {string} path
 * @return {boolean}
 */
Ejs.isAbsolute = function(path) {};

/**
 * @param {...string} args
 * @return {string}
 */
Ejs.join = function(args) {};

/**
 * @param {string} from
 * @param {string} to
 * @return {string}
 */
Ejs.relative = function(from, to) {};
 /** @type {string} */
Ejs.sep;
 /** @type {string} */
Ejs.delimiter;

/**
 * @param {string} path
 * @return {string}
 */
Ejs.dirname = function(path) {};

/**
 * @param {string} path
 * @return {string}
 */
Ejs.basename = function(path) {};

/**
 * @param {string} path
 * @return {string}
 */
Ejs.extname = function(path) {};

/**
 * @param {?} xs
 * @param {?} f
 * @return {?}
 */
Ejs.filter = function(xs, f) {};

/* TODO: ExportAssignment in  */
