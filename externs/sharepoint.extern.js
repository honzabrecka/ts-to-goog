/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/sharepoint/index.d.ts:
 /** @type {!Array<function(): void>} */
var _spBodyOnLoadFunctions;
 /** @type {!Array<string>} */
var _spBodyOnLoadFunctionNames;
 /** @type {boolean} */
var _spBodyOnLoadCalled;

/**
 * @param {function(): void} initFunc
 * @return {void}
 */
function ExecuteOrDelayUntilBodyLoaded(initFunc) {}

/**
 * @param {function(): void} func
 * @param {string} depScriptFileName
 * @return {boolean}
 */
function ExecuteOrDelayUntilScriptLoaded(func, depScriptFileName) {}

/**
 * @param {function(!Array<?>): void} func
 * @param {string} eventName
 * @return {boolean}
 */
function ExecuteOrDelayUntilEventNotified(func, eventName) {}
 /** @type {?} */
var Strings;
/** @const */
var SP = {};
/**
 * @constructor
 * @struct
 */
SP.SOD = function() {};

/**
 * @param {string} fileName
 * @param {string} functionName
 * @param {...?} args
 * @return {void}
 */
SP.SOD.execute = function(fileName, functionName, args) {};

/**
 * @param {string} fileName
 * @param {string} typeName
 * @param {function(): void} fn
 * @return {void}
 */
SP.SOD.executeFunc = function(fileName, typeName, fn) {};

/**
 * @param {function(!Array<?>): void} func
 * @param {string} eventName
 * @return {boolean}
 */
SP.SOD.executeOrDelayUntilEventNotified = function(func, eventName) {};

/**
 * @param {function(): void} func
 * @param {string} depScriptFileName
 * @return {boolean}
 */
SP.SOD.executeOrDelayUntilScriptLoaded = function(func, depScriptFileName) {};

/**
 * @param {string} scriptFileName
 * @return {void}
 */
SP.SOD.notifyScriptLoadedAndExecuteWaitingJobs = function(scriptFileName) {};

/**
 * @param {string} eventName
 * @param {!Array<?>=} args
 * @return {void}
 */
SP.SOD.notifyEventAndExecuteWaitingJobs = function(eventName, args) {};

/**
 * @param {string} fileName
 * @param {string} url
 * @return {void}
 */
SP.SOD.registerSod = function(fileName, url) {};

/**
 * @param {string} fileName
 * @param {string} dependentFileName
 * @return {void}
 */
SP.SOD.registerSodDep = function(fileName, dependentFileName) {};

/**
 * @param {!Array<string>} keys
 * @param {function(): void} fn
 * @param {boolean=} bSync
 * @return {void}
 */
SP.SOD.loadMultiple = function(keys, fn, bSync) {};

/**
 * @param {function(!Array<?>): void} func
 * @param {string} eventName
 * @return {void}
 */
SP.SOD.delayUntilEventNotified = function(func, eventName) {};

/**
 * @return {boolean}
 */
SP.SOD.get_prefetch = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.SOD.set_prefetch = function(value) {};

/**
 * @return {boolean}
 */
SP.SOD.get_ribbonImagePrefetchEnabled = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.SOD.set_ribbonImagePrefetchEnabled = function(value) {};

/** @const */
SP.ListLevelPermissionMask = {};
/** @const {number} */
SP.ListLevelPermissionMask.viewListItems;
/** @const {number} */
SP.ListLevelPermissionMask.insertListItems;
/** @const {number} */
SP.ListLevelPermissionMask.editListItems;
/** @const {number} */
SP.ListLevelPermissionMask.deleteListItems;
/** @const {number} */
SP.ListLevelPermissionMask.approveItems;
/** @const {number} */
SP.ListLevelPermissionMask.openItems;
/** @const {number} */
SP.ListLevelPermissionMask.viewVersions;
/** @const {number} */
SP.ListLevelPermissionMask.deleteVersions;
/** @const {number} */
SP.ListLevelPermissionMask.breakCheckout;
/** @const {number} */
SP.ListLevelPermissionMask.managePersonalViews;
/** @const {number} */
SP.ListLevelPermissionMask.manageLists;

/**
 * @constructor
 * @struct
 */
SP.HtmlBuilder = function() {};

/**
 * @param {string} name
 * @param {string} value
 * @return {void}
 */
SP.HtmlBuilder.prototype.addAttribute = function(name, value) {};

/**
 * @param {string} cssClassName
 * @return {void}
 */
SP.HtmlBuilder.prototype.addCssClass = function(cssClassName) {};

/**
 * @param {string} cssClassName
 * @return {void}
 */
SP.HtmlBuilder.prototype.addCommunitiesCssClass = function(cssClassName) {};

/**
 * @param {string} tagName
 * @return {void}
 */
SP.HtmlBuilder.prototype.renderBeginTag = function(tagName) {};

/**
 * @return {void}
 */
SP.HtmlBuilder.prototype.renderEndTag = function() {};

/**
 * @param {string} s
 * @return {void}
 */
SP.HtmlBuilder.prototype.write = function(s) {};

/**
 * @param {string} s
 * @return {void}
 */
SP.HtmlBuilder.prototype.writeEncoded = function(s) {};

/**
 * @return {string}
 */
SP.HtmlBuilder.prototype.toString = function() {};
/**
 * @constructor
 * @struct
 */
SP.ScriptHelpers = function() {};

/**
 * @param {!SPClientTemplates.RenderContext} context
 * @return {void}
 */
SP.ScriptHelpers.disableWebpartSelection = function(context) {};

/**
 * @return {!Object<string,string>}
 */
SP.ScriptHelpers.getDocumentQueryPairs = function() {};

/**
 * @param {!SPClientTemplates.ListSchema} schema
 * @param {string} fieldName
 * @return {!SPClientTemplates.FieldSchema}
 */
SP.ScriptHelpers.getFieldFromSchema = function(schema, fieldName) {};

/**
 * @param {string} pageName
 * @param {string} webServerRelativeUrl
 * @return {string}
 */
SP.ScriptHelpers.getLayoutsPageUrl = function(pageName, webServerRelativeUrl) {};

/**
 * @param {string} jsonItem
 * @return {number}
 */
SP.ScriptHelpers.getListLevelPermissionMask = function(jsonItem) {};

/**
 * @param {!HTMLTextAreaElement} textAreaElement
 * @return {string}
 */
SP.ScriptHelpers.getTextAreaElementValue = function(textAreaElement) {};

/**
 * @param {string} docUrl
 * @return {!Object<string,string>}
 */
SP.ScriptHelpers.getUrlQueryPairs = function(docUrl) {};

/**
 * @param {!SP.ListItem<?>} item
 * @param {string} fieldName
 * @param {string} propertyName
 * @return {?}
 */
SP.ScriptHelpers.getUserFieldProperty = function(item, fieldName, propertyName) {};

/**
 * @param {number} listPermissionMask
 * @param {SP.ListLevelPermissionMask} listPermission
 * @return {boolean}
 */
SP.ScriptHelpers.hasPermission = function(listPermissionMask, listPermission) {};

/**
 * @return {!SP.Guid}
 */
SP.ScriptHelpers.newGuid = function() {};

/**
 * @param {string} str
 * @return {boolean}
 */
SP.ScriptHelpers.isNullOrEmptyString = function(str) {};

/**
 * @param {?} obj
 * @return {boolean}
 */
SP.ScriptHelpers.isNullOrUndefined = function(obj) {};

/**
 * @param {string} str
 * @return {boolean}
 */
SP.ScriptHelpers.isNullOrUndefinedOrEmpty = function(str) {};

/**
 * @param {?} obj
 * @return {boolean}
 */
SP.ScriptHelpers.isUndefined = function(obj) {};

/**
 * @param {string} url
 * @param {string} key
 * @param {string} value
 * @return {string}
 */
SP.ScriptHelpers.replaceOrAddQueryString = function(url, key, value) {};

/**
 * @param {string} str
 * @return {string}
 */
SP.ScriptHelpers.removeHtml = function(str) {};

/**
 * @param {!HTMLElement} element
 * @return {void}
 */
SP.ScriptHelpers.removeStyleChildren = function(element) {};

/**
 * @param {string} str
 * @param {number} maxLength
 * @return {string}
 */
SP.ScriptHelpers.removeHtmlAndTrimStringWithEllipsis = function(str, maxLength) {};

/**
 * @param {!HTMLTextAreaElement} textAreaElement
 * @param {string} newValue
 * @return {void}
 */
SP.ScriptHelpers.setTextAreaElementValue = function(textAreaElement, newValue) {};

/**
 * @param {number} n
 * @return {number}
 */
SP.ScriptHelpers.truncateToInt = function(n) {};

/**
 * @param {string} path1
 * @param {string} path2
 * @return {string}
 */
SP.ScriptHelpers.urlCombine = function(path1, path2) {};

/**
 * @param {!HTMLImageElement} imgElement
 * @param {number} squareLength
 * @return {void}
 */
SP.ScriptHelpers.resizeImageToSquareLength = function(imgElement, squareLength) {};
/**
 * @constructor
 * @struct
 */
SP.PageContextInfo = function() {};

/**
 * @return {string}
 */
SP.PageContextInfo.get_siteServerRelativeUrl = function() {};

/**
 * @return {string}
 */
SP.PageContextInfo.get_webServerRelativeUrl = function() {};

/**
 * @return {string}
 */
SP.PageContextInfo.get_webAbsoluteUrl = function() {};

/**
 * @return {string}
 */
SP.PageContextInfo.get_serverRequestPath = function() {};

/**
 * @return {string}
 */
SP.PageContextInfo.get_siteAbsoluteUrl = function() {};

/**
 * @return {string}
 */
SP.PageContextInfo.get_webTitle = function() {};

/**
 * @return {string}
 */
SP.PageContextInfo.get_tenantAppVersion = function() {};

/**
 * @return {string}
 */
SP.PageContextInfo.get_webLogoUrl = function() {};

/**
 * @return {number}
 */
SP.PageContextInfo.get_webLanguage = function() {};

/**
 * @return {number}
 */
SP.PageContextInfo.get_currentLanguage = function() {};

/**
 * @return {number}
 */
SP.PageContextInfo.get_pageItemId = function() {};

/**
 * @return {string}
 */
SP.PageContextInfo.get_pageListId = function() {};

/**
 * @return {{High: number, Low: number}}
 */
SP.PageContextInfo.get_webPermMasks = function() {};

/**
 * @return {string}
 */
SP.PageContextInfo.get_currentCultureName = function() {};

/**
 * @return {string}
 */
SP.PageContextInfo.get_currentUICultureName = function() {};

/**
 * @return {number}
 */
SP.PageContextInfo.get_clientServerTimeDelta = function() {};

/**
 * @return {string}
 */
SP.PageContextInfo.get_userLoginName = function() {};

/**
 * @return {string}
 */
SP.PageContextInfo.get_webTemplate = function() {};

/**
 * @return {string}
 */
SP.PageContextInfo.prototype.get_pagePersonalizationScope = function() {};
/**
 * @constructor
 * @struct
 */
SP.ContextPermissions = function() {};

/**
 * @param {number} perm
 * @return {boolean}
 */
SP.ContextPermissions.prototype.has = function(perm) {};

/**
 * @param {number} high
 * @param {number} low
 * @return {boolean}
 */
SP.ContextPermissions.prototype.hasPermissions = function(high, low) {};

/**
 * @param {{High: number, Low: number}} json
 * @return {void}
 */
SP.ContextPermissions.prototype.fromJson = function(json) {};
/** @const */
SP.ListOperation = {};
/** @const */
SP.ListOperation.ViewOperation = {};

/**
 * @return {string}
 */
SP.ListOperation.ViewOperation.getSelectedView = function() {};

/**
 * @param {string} viewId
 * @return {void}
 */
SP.ListOperation.ViewOperation.navigateUp = function(viewId) {};

/**
 * @param {string} viewId
 * @return {void}
 */
SP.ListOperation.ViewOperation.refreshView = function(viewId) {};
/** @const */
SP.ListOperation.Selection = {};

/**
 * @param {string} iid
 * @param {boolean} bSelect
 * @return {void}
 */
SP.ListOperation.Selection.selectListItem = function(iid, bSelect) {};

/**
 * @return {!Array<{id: number, fsObjType: SP.FileSystemObjectType}>}
 */
SP.ListOperation.Selection.getSelectedItems = function() {};

/**
 * @return {string}
 */
SP.ListOperation.Selection.getSelectedList = function() {};

/**
 * @return {string}
 */
SP.ListOperation.Selection.getSelectedView = function() {};

/**
 * @param {string} viewId
 * @return {void}
 */
SP.ListOperation.Selection.navigateUp = function(viewId) {};

/**
 * @param {string} iid
 * @return {void}
 */
SP.ListOperation.Selection.deselectAllListItems = function(iid) {};
/** @const */
SP.ListOperation.Overrides = {};

/**
 * @param {string} listId
 * @param {string} overrideText
 * @return {void}
 */
SP.ListOperation.Overrides.overrideDeleteConfirmation = function(listId, overrideText) {};

/**
 * Register function to rerun on partial update in MDS-enabled site.
 * @param {string} scriptFileName
 * @param {function(): void} initFunc
 * @return {void}
 */
function RegisterModuleInit(scriptFileName, initFunc) {}
/**
 * @constructor
 * @struct
 */
function JSRequest() {}
 /** @type {!Object<string,string>} */
JSRequest.QueryString;
 /** @type {string} */
JSRequest.FileName;
 /** @type {string} */
JSRequest.PathName;

/**
 * initializes class.
 * @return {void}
 */
JSRequest.EnsureSetup = function() {};
/**
 * @constructor
 * @struct
 */
function _spPageContextInfo() {}
 /** @type {boolean} */
_spPageContextInfo.alertsEnabled;
 /** @type {string} */
_spPageContextInfo.allowSilverlightPrompt;
 /** @type {boolean} */
_spPageContextInfo.blockDownloadsExperienceEnabled;
 /** @type {boolean} */
_spPageContextInfo.canUserCreateMicrosoftForm;
 /** @type {string} */
_spPageContextInfo.cdnPrefix;
 /** @type {number} */
_spPageContextInfo.clientServerTimeDelta;
 /** @type {string} */
_spPageContextInfo.CorrelationId;
 /** @type {boolean} */
_spPageContextInfo.crossDomainPhotosEnabled;
 /** @type {string} */
_spPageContextInfo.currentCultureName;
 /** @type {number} */
_spPageContextInfo.currentLanguage;
 /** @type {string} */
_spPageContextInfo.currentUICultureName;
 /** @type {boolean} */
_spPageContextInfo.disableAppViews;
 /** @type {boolean} */
_spPageContextInfo.disableFlows;
 /** @type {string} */
_spPageContextInfo.env;
 /** @type {string} */
_spPageContextInfo.farmLabel;
 /** @type {string} */
_spPageContextInfo.formDigestValue;
 /** @type {number} */
_spPageContextInfo.formDigestTimeoutSeconds;
 /** @type {string} */
_spPageContextInfo.groupColor;
 /** @type {boolean} */
_spPageContextInfo.groupHasHomepage;
 /** @type {string} */
_spPageContextInfo.groupId;
 /** @type {boolean} */
_spPageContextInfo.guestsEnabled;
 /** @type {boolean} */
_spPageContextInfo.hasManageWebPermissions;
 /** @type {boolean} */
_spPageContextInfo.isAnonymousGuestUser;
 /** @type {boolean} */
_spPageContextInfo.isAppWeb;
 /** @type {boolean} */
_spPageContextInfo.isExternalGuestUser;
 /** @type {boolean} */
_spPageContextInfo.isNoScriptEnabled;
 /** @type {boolean} */
_spPageContextInfo.isSiteAdmin;
 /** @type {boolean} */
_spPageContextInfo.isSPO;
 /** @type {boolean} */
_spPageContextInfo.isTenantDevSite;
 /** @type {boolean} */
_spPageContextInfo.isWebWelcomePage;
 /** @type {string} */
_spPageContextInfo.layoutsUrl;
 /** @type {number} */
_spPageContextInfo.listBaseTemplate;
 /** @type {string} */
_spPageContextInfo.listId;
 /** @type {{High: number, Low: number}} */
_spPageContextInfo.listPermsMask;
 /** @type {string} */
_spPageContextInfo.listTitle;
 /** @type {string} */
_spPageContextInfo.listUrl;
 /** @type {number} */
_spPageContextInfo.maximumFileSize;
 /** @type {boolean} */
_spPageContextInfo.openInClient;
 /** @type {string} */
_spPageContextInfo.pageListId;
 /** @type {number} */
_spPageContextInfo.pageItemId;
 /** @type {{High: number, Low: number}} */
_spPageContextInfo.pagePermsMask;
 /** @type {string} */
_spPageContextInfo.pagePersonalizationScope;
 /** @type {boolean} */
_spPageContextInfo.PreviewFeaturesEnabled;
 /** @type {boolean} */
_spPageContextInfo.preferUserTimeZone;
 /** @type {string} */
_spPageContextInfo.ProfileUrl;
 /** @type {boolean} */
_spPageContextInfo.PublishingFeatureOn;
 /** @type {number} */
_spPageContextInfo.RecycleBinItemCount;
 /** @type {string} */
_spPageContextInfo.serverRedirectedUrl;
 /** @type {string} */
_spPageContextInfo.serverRequestPath;
 /** @type {string} */
_spPageContextInfo.serverTime;
 /** @type {string} */
_spPageContextInfo.siteAbsoluteUrl;
 /** @type {string} */
_spPageContextInfo.siteClassification;
 /** @type {string} */
_spPageContextInfo.siteClientTag;
 /** @type {string} */
_spPageContextInfo.siteColor;
 /** @type {string} */
_spPageContextInfo.siteId;
 /** @type {boolean} */
_spPageContextInfo.sitePagesEnabled;
 /** @type {string} */
_spPageContextInfo.siteServerRelativeUrl;
 /** @type {string} */
_spPageContextInfo.siteSubscriptionId;
 /** @type {boolean} */
_spPageContextInfo.supportPoundStorePath;
 /** @type {boolean} */
_spPageContextInfo.supportPercentStorePath;
 /** @type {string} */
_spPageContextInfo.systemUserKey;
 /** @type {string} */
_spPageContextInfo.tenantAppVersion;
 /** @type {string} */
_spPageContextInfo.themeCacheToken;
 /** @type {string} */
_spPageContextInfo.themedCssFolderUrl;
 /** @type {string} */
_spPageContextInfo.themedImageFileNames;
 /** @type {string} */
_spPageContextInfo.updateFormDigestPageLoaded;
 /** @type {string} */
_spPageContextInfo.userDisplayName;
 /** @type {string} */
_spPageContextInfo.userEmail;
 /** @type {number} */
_spPageContextInfo.userId;
 /** @type {string} */
_spPageContextInfo.userLoginName;
 /** @type {boolean} */
_spPageContextInfo.viewOnlyExperienceEnabled;
 /** @type {string} */
_spPageContextInfo.viewId;
 /** @type {string} */
_spPageContextInfo.webAbsoluteUrl;
 /** @type {string} */
_spPageContextInfo.webDescription;
 /** @type {string} */
_spPageContextInfo.webId;
 /** @type {number} */
_spPageContextInfo.webLanguage;
 /** @type {string} */
_spPageContextInfo.webLogoUrl;
 /** @type {{High: number, Low: number}} */
_spPageContextInfo.webPermMasks;
 /** @type {string} */
_spPageContextInfo.webServerRelativeUrl;
 /** @type {string} */
_spPageContextInfo.webTemplate;
 /** @type {string} */
_spPageContextInfo.webTitle;
 /** @type {number} */
_spPageContextInfo.webUIVersion;
/**
 * @constructor
 * @struct
 */
function _spFriendlyUrlPageContextInfo() {}
 /** @type {string} */
_spFriendlyUrlPageContextInfo.termId;
 /** @type {string} */
_spFriendlyUrlPageContextInfo.termSetId;
 /** @type {string} */
_spFriendlyUrlPageContextInfo.termStoreId;
 /** @type {string} */
_spFriendlyUrlPageContextInfo.title;

/**
 * @param {string} value
 * @return {string}
 */
function STSHtmlEncode(value) {}

/**
 * @param {string} value
 * @return {string}
 */
function STSHtmlDecode(value) {}

/**
 * @param {!HTMLElement} element
 * @param {string} event
 * @param {!EventListener} func
 * @return {void}
 */
function AddEvtHandler(element, event, func) {}

/**
 * Gets query string parameter
 * @param {string} key
 * @return {string}
 */
function GetUrlKeyValue(key) {}
/**
 * @constructor
 * @struct
 */
function AjaxNavigate() {}

/**
 * @param {string} url
 * @param {!Object<string,(string|number)>} updateParts
 * @param {boolean} fullNavigate
 * @param {string} anchorName
 * @return {void}
 */
AjaxNavigate.prototype.update = function(url, updateParts, fullNavigate, anchorName) {};

/**
 * @param {function(?, ?): void} handler
 * @return {void}
 */
AjaxNavigate.prototype.add_navigate = function(handler) {};

/**
 * @param {function(?, ?): void} handler
 * @return {void}
 */
AjaxNavigate.prototype.remove_navigate = function(handler) {};

/**
 * @param {!HTMLFormElement} formToSubmit
 * @return {void}
 */
AjaxNavigate.prototype.submit = function(formToSubmit) {};

/**
 * @param {string} paramName
 * @return {string}
 */
AjaxNavigate.prototype.getParam = function(paramName) {};

/**
 * @return {string}
 */
AjaxNavigate.prototype.getSavedFormAction = function() {};

/**
 * @return {string}
 */
AjaxNavigate.prototype.get_href = function() {};

/**
 * @return {string}
 */
AjaxNavigate.prototype.get_hash = function() {};

/**
 * @return {string}
 */
AjaxNavigate.prototype.get_search = function() {};

/**
 * @param {string} mdsPath
 * @return {string}
 */
AjaxNavigate.prototype.convertMDSURLtoRegularURL = function(mdsPath) {};
 /** @type {!AjaxNavigate} */
var ajaxNavigate;
/**
 * @constructor
 * @struct
 */
function Browseris() {}
 /** @type {boolean} */
Browseris.prototype.firefox;
 /** @type {boolean} */
Browseris.prototype.firefox36up;
 /** @type {boolean} */
Browseris.prototype.firefox3up;
 /** @type {boolean} */
Browseris.prototype.firefox4up;
 /** @type {boolean} */
Browseris.prototype.ie;
 /** @type {boolean} */
Browseris.prototype.ie55up;
 /** @type {boolean} */
Browseris.prototype.ie5up;
 /** @type {boolean} */
Browseris.prototype.ie7down;
 /** @type {boolean} */
Browseris.prototype.ie8down;
 /** @type {boolean} */
Browseris.prototype.ie9down;
 /** @type {boolean} */
Browseris.prototype.ie8standard;
 /** @type {boolean} */
Browseris.prototype.ie8standardUp;
 /** @type {boolean} */
Browseris.prototype.ie9standardUp;
 /** @type {boolean} */
Browseris.prototype.ipad;
 /** @type {boolean} */
Browseris.prototype.windowsphone;
 /** @type {boolean} */
Browseris.prototype.chrome;
 /** @type {boolean} */
Browseris.prototype.chrome7up;
 /** @type {boolean} */
Browseris.prototype.chrome8up;
 /** @type {boolean} */
Browseris.prototype.chrome9up;
 /** @type {boolean} */
Browseris.prototype.iever;
 /** @type {boolean} */
Browseris.prototype.mac;
 /** @type {boolean} */
Browseris.prototype.major;
 /** @type {boolean} */
Browseris.prototype.msTouch;
 /** @type {boolean} */
Browseris.prototype.isTouch;
 /** @type {boolean} */
Browseris.prototype.nav;
 /** @type {boolean} */
Browseris.prototype.nav6;
 /** @type {boolean} */
Browseris.prototype.nav6up;
 /** @type {boolean} */
Browseris.prototype.nav7up;
 /** @type {boolean} */
Browseris.prototype.osver;
 /** @type {boolean} */
Browseris.prototype.safari;
 /** @type {boolean} */
Browseris.prototype.safari125up;
 /** @type {boolean} */
Browseris.prototype.safari3up;
 /** @type {boolean} */
Browseris.prototype.verIEFull;
 /** @type {boolean} */
Browseris.prototype.w3c;
 /** @type {boolean} */
Browseris.prototype.webKit;
 /** @type {boolean} */
Browseris.prototype.win;
 /** @type {boolean} */
Browseris.prototype.win8AppHost;
 /** @type {boolean} */
Browseris.prototype.win32;
 /** @type {boolean} */
Browseris.prototype.win64bit;
 /** @type {boolean} */
Browseris.prototype.winnt;
 /** @type {boolean} */
Browseris.prototype.armProcessor;
 /** @type {!Browseris} */
var browseris;
/**
 * @extends {SPClientTemplates.RenderContext}
 * @record
 * @struct
 */
function ContextInfo() {}
 /** @type {boolean} */
ContextInfo.prototype.AllowGridMode;
 /** @type {?} */
ContextInfo.prototype.BasePermissions;
 /** @type {?} */
ContextInfo.prototype.BaseViewID;
 /** @type {string} */
ContextInfo.prototype.CascadeDeleteWarningMessage;
 /** @type {boolean} */
ContextInfo.prototype.ContentTypesEnabled;
 /** @type {boolean} */
ContextInfo.prototype.CurrentSelectedItems;
 /** @type {number} */
ContextInfo.prototype.CurrentUserId;
 /** @type {boolean} */
ContextInfo.prototype.EnableMinorVersions;
 /** @type {boolean} */
ContextInfo.prototype.ExternalDataList;
 /** @type {boolean} */
ContextInfo.prototype.HasRelatedCascadeLists;
 /** @type {string} */
ContextInfo.prototype.HttpPath;
 /** @type {string} */
ContextInfo.prototype.HttpRoot;
 /** @type {number} */
ContextInfo.prototype.LastSelectableRowIdx;
 /** @type {number} */
ContextInfo.prototype.LastSelectedItemIID;
 /** @type {number} */
ContextInfo.prototype.LastRowIndexSelected;
 /** @type {number} */
ContextInfo.prototype.RowFocusTimerID;
 /** @type {?} */
ContextInfo.prototype.ListData;
 /** @type {!SPClientTemplates.ListSchema} */
ContextInfo.prototype.ListSchema;
 /** @type {number} */
ContextInfo.prototype.ModerationStatus;
 /** @type {string} */
ContextInfo.prototype.PortalUrl;
 /** @type {number} */
ContextInfo.prototype.RecycleBinEnabled;
 /** @type {!HTMLElement} */
ContextInfo.prototype.SelectAllCbx;
 /** @type {string} */
ContextInfo.prototype.SendToLocationName;
 /** @type {string} */
ContextInfo.prototype.SendToLocationUrl;
 /** @type {boolean} */
ContextInfo.prototype.StateInitDone;
 /** @type {number} */
ContextInfo.prototype.TotalListItems;
 /** @type {boolean} */
ContextInfo.prototype.WorkflowsAssociated;
 /** @type {?} */
ContextInfo.prototype.clvp;
 /** @type {number} */
ContextInfo.prototype.ctxId;
 /** @type {?} */
ContextInfo.prototype.ctxType;
 /** @type {?} */
ContextInfo.prototype.dictSel;
 /** @type {string} */
ContextInfo.prototype.displayFormUrl;
 /** @type {string} */
ContextInfo.prototype.editFormUrl;
 /** @type {string} */
ContextInfo.prototype.imagesPath;
 /** @type {boolean} */
ContextInfo.prototype.inGridMode;
 /** @type {boolean} */
ContextInfo.prototype.inGridFullRender;
 /** @type {boolean} */
ContextInfo.prototype.isForceCheckout;
 /** @type {boolean} */
ContextInfo.prototype.isModerated;
 /** @type {boolean} */
ContextInfo.prototype.isPortalTemplate;
 /** @type {boolean} */
ContextInfo.prototype.isVersions;
 /** @type {boolean} */
ContextInfo.prototype.isWebEditorPreview;
 /** @type {boolean} */
ContextInfo.prototype.leavingGridMode;
 /** @type {boolean} */
ContextInfo.prototype.loadingAsyncData;
 /** @type {number} */
ContextInfo.prototype.listBaseType;
 /** @type {string} */
ContextInfo.prototype.listName;
 /** @type {string} */
ContextInfo.prototype.listTemplate;
 /** @type {string} */
ContextInfo.prototype.listUrlDir;
 /** @type {string} */
ContextInfo.prototype.newFormUrl;
 /** @type {string} */
ContextInfo.prototype.overrideDeleteConfirmation;
 /** @type {string} */
ContextInfo.prototype.overrideFilterQstring;
 /** @type {boolean} */
ContextInfo.prototype.recursiveView;
 /** @type {string} */
ContextInfo.prototype.rootFolderForDisplay;
 /** @type {string} */
ContextInfo.prototype.serverUrl;
 /** @type {boolean} */
ContextInfo.prototype.verEnabled;
 /** @type {string} */
ContextInfo.prototype.view;
 /** @type {string} */
ContextInfo.prototype.queryString;
 /** @type {boolean} */
ContextInfo.prototype.IsClientRendering;
 /** @type {string} */
ContextInfo.prototype.wpq;
 /** @type {string} */
ContextInfo.prototype.rootFolder;
 /** @type {boolean} */
ContextInfo.prototype.IsAppWeb;
 /** @type {boolean} */
ContextInfo.prototype.NewWOPIDocumentEnabled;
 /** @type {string} */
ContextInfo.prototype.NewWOPIDocumentUrl;
 /** @type {boolean} */
ContextInfo.prototype.AllowCreateFolder;
 /** @type {boolean} */
ContextInfo.prototype.CanShareLinkForNewDocument;
 /** @type {boolean} */
ContextInfo.prototype.noGroupCollapse;
 /** @type {number} */
ContextInfo.prototype.SiteTemplateId;
 /** @type {boolean} */
ContextInfo.prototype.ExcludeFromOfflineClient;

/**
 * @param {?} instance
 * @param {?} eventArgs
 * @return {void}
 */
ContextInfo.prototype.TableCbxFocusHandler = function(instance, eventArgs) {};

/**
 * @param {?} instance
 * @param {?} eventArgs
 * @return {void}
 */
ContextInfo.prototype.TableMouseoverHandler = function(instance, eventArgs) {};

/**
 * @param {?} context
 * @param {?} requrest
 * @param {?} response
 * @return {void}
 */
ContextInfo.prototype.onRefreshFailed = function(context, requrest, response) {};

/**
 * @return {!ContextInfo}
 */
function GetCurrentCtx() {}

/**
 * @param {boolean} fullscreen
 * @return {void}
 */
function SetFullScreenMode(fullscreen) {}

/** @const */
SP.RequestExecutorErrors = {};
/** @const {number} */
SP.RequestExecutorErrors.requestAbortedOrTimedout;
/** @const {number} */
SP.RequestExecutorErrors.unexpectedResponse;
/** @const {number} */
SP.RequestExecutorErrors.httpError;
/** @const {number} */
SP.RequestExecutorErrors.noAppWeb;
/** @const {number} */
SP.RequestExecutorErrors.domainDoesNotMatch;
/** @const {number} */
SP.RequestExecutorErrors.noTrustedOrigins;
/** @const {number} */
SP.RequestExecutorErrors.iFrameLoadError;

/**
 * @constructor
 * @struct
 * @param {string} url
 * @param {?=} options
 */
SP.RequestExecutor = function(url, options) {};

/**
 * @return {boolean}
 */
SP.RequestExecutor.prototype.get_formDigestHandlingEnabled = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.RequestExecutor.prototype.set_formDigestHandlingEnabled = function(value) {};

/**
 * @return {string}
 */
SP.RequestExecutor.prototype.get_iFrameSourceUrl = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.RequestExecutor.prototype.set_iFrameSourceUrl = function(value) {};

/**
 * @param {!SP.RequestInfo} requestInfo
 * @return {void}
 */
SP.RequestExecutor.prototype.executeAsync = function(requestInfo) {};

/**
 * @param {string} returnUrl
 * @param {function(!SP.ResponseInfo): void} success
 * @param {function(!SP.ResponseInfo, SP.RequestExecutorErrors, string): void=} error
 * @return {void}
 */
SP.RequestExecutor.prototype.attemptLogin = function(returnUrl, success, error) {};
/**
 * @record
 * @struct
 */
SP.RequestInfo = function() {};
 /** @type {string} */
SP.RequestInfo.prototype.url;
 /** @type {string} */
SP.RequestInfo.prototype.method;
 /** @type {!Object<string,string>} */
SP.RequestInfo.prototype.headers;
 /** @type {(string|!Uint8Array)} */
SP.RequestInfo.prototype.body;
 /** @type {boolean} */
SP.RequestInfo.prototype.binaryStringRequestBody;
 /** @type {boolean} */
SP.RequestInfo.prototype.binaryStringResponseBody;
 /** @type {number} */
SP.RequestInfo.prototype.timeout;
 /** @type {?} */
SP.RequestInfo.prototype.state;

/**
 * @param {!SP.ResponseInfo} response
 * @return {void}
 */
SP.RequestInfo.prototype.success = function(response) {};

/**
 * @param {!SP.ResponseInfo} response
 * @param {SP.RequestExecutorErrors} error
 * @param {string} statusText
 * @return {void}
 */
SP.RequestInfo.prototype.error = function(response, error, statusText) {};
/**
 * @record
 * @struct
 */
SP.ResponseInfo = function() {};
 /** @type {number} */
SP.ResponseInfo.prototype.statusCode;
 /** @type {string} */
SP.ResponseInfo.prototype.statusText;
 /** @type {boolean} */
SP.ResponseInfo.prototype.responseAvailable;
 /** @type {string} */
SP.ResponseInfo.prototype.allResponseHeaders;
 /** @type {!Object<string,string>} */
SP.ResponseInfo.prototype.headers;
 /** @type {string} */
SP.ResponseInfo.prototype.contentType;
 /** @type {(string|!Uint8Array)} */
SP.ResponseInfo.prototype.body;
 /** @type {?} */
SP.ResponseInfo.prototype.state;

/**
 * @constructor
 * @struct
 * @param {string} url
 * @param {?=} options
 */
SP.ProxyWebRequestExecutor = function(url, options) {};

/**
 * @constructor
 * @struct
 * @param {string} url
 * @param {?=} options
 */
SP.ProxyWebRequestExecutorFactory = function(url, options) {};

/**
 * @return {!SP.ProxyWebRequestExecutor}
 */
SP.ProxyWebRequestExecutorFactory.prototype.createWebRequestExecutor = function() {};
/**
 * @record
 * @struct
 */
function MQuery() {}

/* TODO: CallSignature:  */

/* TODO: CallSignature:  */

/* TODO: CallSignature:  */

/**
 * @template T
 * @param {T} fn
 * @param {number} interval
 * @param {boolean} shouldOverrideThrottle
 * @return {T}
 */
MQuery.prototype.throttle = function(fn, interval, shouldOverrideThrottle) {};

/**
 * @param {?|boolean} target_or_deep
 * @param {...?} objs_or_target
 * @return {?}
 */
MQuery.prototype.extend = function(target_or_deep, objs_or_target) {};

/**
 * @template T
 * @param {?} obj
 * @return {!Array<?>}
 */
MQuery.prototype.makeArray = function(obj) {};

/**
 * @param {?} obj
 * @return {boolean}
 */
MQuery.prototype.isDefined = function(obj) {};

/**
 * @param {?} obj
 * @return {boolean}
 */
MQuery.prototype.isNotNull = function(obj) {};

/**
 * @param {?} obj
 * @return {boolean}
 */
MQuery.prototype.isUndefined = function(obj) {};

/**
 * @param {?} obj
 * @return {boolean}
 */
MQuery.prototype.isNull = function(obj) {};

/**
 * @param {?} obj
 * @return {boolean}
 */
MQuery.prototype.isUndefinedOrNull = function(obj) {};

/**
 * @param {?} obj
 * @return {boolean}
 */
MQuery.prototype.isDefinedAndNotNull = function(obj) {};

/**
 * @param {?} obj
 * @return {boolean}
 */
MQuery.prototype.isString = function(obj) {};

/**
 * @param {?} obj
 * @return {boolean}
 */
MQuery.prototype.isBoolean = function(obj) {};

/**
 * @param {?} obj
 * @return {boolean}
 */
MQuery.prototype.isFunction = function(obj) {};

/**
 * @param {?} obj
 * @return {boolean}
 */
MQuery.prototype.isArray = function(obj) {};

/**
 * @param {?} obj
 * @return {boolean}
 */
MQuery.prototype.isNode = function(obj) {};

/**
 * @param {?} obj
 * @return {boolean}
 */
MQuery.prototype.isElement = function(obj) {};

/**
 * @param {?} obj
 * @return {boolean}
 */
MQuery.prototype.isMQueryResultSet = function(obj) {};

/**
 * @param {?} obj
 * @return {boolean}
 */
MQuery.prototype.isNumber = function(obj) {};

/**
 * @param {?} obj
 * @return {boolean}
 */
MQuery.prototype.isObject = function(obj) {};

/**
 * @param {?} obj
 * @return {boolean}
 */
MQuery.prototype.isEmptyObject = function(obj) {};

/**
 * @param {function(): void} callback
 * @return {void}
 */
MQuery.prototype.ready = function(callback) {};

/**
 * @param {!HTMLElement} container
 * @param {!HTMLElement} contained
 * @return {boolean}
 */
MQuery.prototype.contains = function(container, contained) {};

/**
 * @param {function(!Array<?>): ?|?} fn_or_context
 * @param {?|string} context_or_name
 * @param {...?} args
 * @return {function(!Array<?>): ?|?}
 */
MQuery.prototype.proxy = function(fn_or_context, context_or_name, args) {};

/**
 * @template T
 * @param {(!Array<T>|!MQueryResultSet<T>)} obj
 * @param {function(T, number): boolean} fn
 * @param {?=} context
 * @return {boolean}
 */
MQuery.prototype.every = function(obj, fn, context) {};

/**
 * @template T
 * @param {(!Array<T>|!MQueryResultSet<T>)} obj
 * @param {function(T, number): boolean} fn
 * @param {?=} context
 * @return {boolean}
 */
MQuery.prototype.some = function(obj, fn, context) {};

/**
 * @template T
 * @param {!Array<T>|!MQueryResultSet<T>} obj
 * @param {function(T, number): boolean} fn
 * @param {?=} context
 * @return {!Array<T>|!MQueryResultSet<T>}
 */
MQuery.prototype.filter = function(obj, fn, context) {};

/**
 * @template T
 * @param {(!Array<T>|!MQueryResultSet<T>)} obj
 * @param {function(T, number): void} fn
 * @param {?=} context
 * @return {void}
 */
MQuery.prototype.forEach = function(obj, fn, context) {};

/**
 * @template T, U
 * @param {!Array<T>|!MQueryResultSet<T>} array
 * @param {function(T, number): U} callback
 * @return {!Array<U>|!MQueryResultSet<U>}
 */
MQuery.prototype.map = function(array, callback) {};

/**
 * @template T
 * @param {!Array<T>} obj
 * @param {T} object
 * @param {number=} startIndex
 * @return {number}
 */
MQuery.prototype.indexOf = function(obj, object, startIndex) {};

/**
 * @template T
 * @param {!Array<T>} obj
 * @param {T} object
 * @param {number=} startIndex
 * @return {number}
 */
MQuery.prototype.lastIndexOf = function(obj, object, startIndex) {};

/**
 * @param {!HTMLElement} element
 * @param {string=} key
 * @param {?=} value
 * @return {?}
 */
MQuery.prototype.data = function(element, key, value) {};

/**
 * @param {!HTMLElement} element
 * @param {string=} name
 * @return {!MQueryResultSetElements}
 */
MQuery.prototype.removeData = function(element, name) {};

/**
 * @param {!HTMLElement} element
 * @return {boolean}
 */
MQuery.prototype.hasData = function(element) {};
/**
 * @extends {MQueryResultSet}
 * @record
 * @struct
 */
function MQueryResultSetElements() {}

/**
 * @param {(string|!HTMLElement|!MQueryResultSetElements)} node
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.append = function(node) {};

/**
 * @param {string} eventType
 * @param {function(!MQueryEvent): ?} handler
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.bind = function(eventType, handler) {};

/**
 * @param {string} eventType
 * @param {function(!MQueryEvent): ?} handler
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.unbind = function(eventType, handler) {};

/**
 * @param {string} eventType
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.trigger = function(eventType) {};

/**
 * @param {string} eventType
 * @param {function(!MQueryEvent): ?} handler
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.one = function(eventType, handler) {};

/**
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.detach = function() {};

/**
 * @param {string} selector
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.find = function(selector) {};

/**
 * @param {string} selector
 * @param {?=} context
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.closest = function(selector, context) {};

/**
 * @param {{left: ?, top: ?}=} coordinates
 * @return {{left: number, top: number}|!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.offset = function(coordinates) {};

/**
 * @param {string|function(!HTMLElement, number): boolean} selector_or_fn
 * @param {?=} context
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.filter = function(selector_or_fn, context) {};

/**
 * @param {string} selector
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.not = function(selector) {};

/**
 * @param {string=} selector
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.parent = function(selector) {};

/**
 * @param {string=} selector
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.offsetParent = function(selector) {};

/**
 * @param {string=} selector
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.parents = function(selector) {};

/**
 * @param {(string|!HTMLElement)=} selectorOrElement
 * @param {string=} filter
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.parentsUntil = function(selectorOrElement, filter) {};

/**
 * @return {{top: number, left: number}}
 */
MQueryResultSetElements.prototype.position = function() {};

/**
 * @param {string|!Object<string,?>} attributeName_or_map
 * @param {?|function(number, ?): ?=} valueOrDelegate_or_func
 * @return {string|!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.attr = function(attributeName_or_map, valueOrDelegate_or_func) {};

/**
 * @param {string} classNames
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.addClass = function(classNames) {};

/**
 * @param {string} classNames
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.removeClass = function(classNames) {};

/**
 * @param {(string|!Array<string>)|?} propertyName_or_properties
 * @param {?=} value
 * @return {string|!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.css = function(propertyName_or_properties, value) {};

/**
 * @param {string=} selector
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.remove = function(selector) {};

/**
 * @param {string=} selector
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.children = function(selector) {};

/**
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.empty = function() {};

/**
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.first = function() {};

/**
 * @param {string|!Object<string,?>} key_or_obj
 * @param {?=} value
 * @return {!MQueryResultSetElements|?}
 */
MQueryResultSetElements.prototype.data = function(key_or_obj, value) {};

/**
 * @param {string} key
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.removeData = function(key) {};

/**
 * @param {function(!HTMLElement, number): ?=} callback
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.map = function(callback) {};

/**
 * @param {function(!MQueryEvent): ?=} handler
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.blur = function(handler) {};

/**
 * @param {function(!MQueryEvent): ?=} handler
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.change = function(handler) {};

/**
 * @param {function(!MQueryEvent): ?=} handler
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.click = function(handler) {};

/**
 * @param {function(!MQueryEvent): ?=} handler
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.dblclick = function(handler) {};

/**
 * @param {function(!MQueryEvent): ?=} handler
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.error = function(handler) {};

/**
 * @param {function(!MQueryEvent): ?} handler
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.focus = function(handler) {};

/**
 * @param {function(!MQueryEvent): ?=} handler
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.focusin = function(handler) {};

/**
 * @param {function(!MQueryEvent): ?=} handler
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.focusout = function(handler) {};

/**
 * @param {function(!MQueryEvent): ?=} handler
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.keydown = function(handler) {};

/**
 * @param {function(!MQueryEvent): ?=} handler
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.keypress = function(handler) {};

/**
 * @param {function(!MQueryEvent): ?=} handler
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.keyup = function(handler) {};

/**
 * @param {function(!MQueryEvent): ?=} handler
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.load = function(handler) {};

/**
 * @param {function(!MQueryEvent): ?=} handler
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.mousedown = function(handler) {};

/**
 * @param {function(!MQueryEvent): ?=} handler
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.mouseenter = function(handler) {};

/**
 * @param {function(!MQueryEvent): ?=} handler
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.mouseleave = function(handler) {};

/**
 * @param {function(!MQueryEvent): ?=} handler
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.mousemove = function(handler) {};

/**
 * @param {function(!MQueryEvent): ?=} handler
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.mouseout = function(handler) {};

/**
 * @param {function(!MQueryEvent): ?=} handler
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.mouseover = function(handler) {};

/**
 * @param {function(!MQueryEvent): ?=} handler
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.mouseup = function(handler) {};

/**
 * @param {function(!MQueryEvent): ?=} handler
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.resize = function(handler) {};

/**
 * @param {function(!MQueryEvent): ?=} handler
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.scroll = function(handler) {};

/**
 * @param {function(!MQueryEvent): ?=} handler
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.select = function(handler) {};

/**
 * @param {function(!MQueryEvent): ?=} handler
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.submit = function(handler) {};

/**
 * @param {function(!MQueryEvent): ?=} handler
 * @return {!MQueryResultSetElements}
 */
MQueryResultSetElements.prototype.unload = function(handler) {};
/**
 * @record
 * @struct
 */
function MQueryResultSet() {}

/* TODO: IndexSignature:  */

/**
 * @param {T} contained
 * @return {boolean}
 */
MQueryResultSet.prototype.contains = function(contained) {};

/**
 * @param {function(T, number): boolean} fn
 * @param {?=} context
 * @return {!MQueryResultSet}
 */
MQueryResultSet.prototype.filter = function(fn, context) {};

/**
 * @param {function(T, number): boolean} fn
 * @param {?=} context
 * @return {boolean}
 */
MQueryResultSet.prototype.every = function(fn, context) {};

/**
 * @param {function(T, number): boolean} fn
 * @param {?=} context
 * @return {boolean}
 */
MQueryResultSet.prototype.some = function(fn, context) {};

/**
 * @param {function(T, number): ?} callback
 * @return {!MQueryResultSet}
 */
MQueryResultSet.prototype.map = function(callback) {};

/**
 * @param {function(T, number): void} fn
 * @param {?=} context
 * @return {void}
 */
MQueryResultSet.prototype.forEach = function(fn, context) {};

/**
 * @param {?} object
 * @param {number=} startIndex
 * @return {number}
 */
MQueryResultSet.prototype.indexOf = function(object, startIndex) {};

/**
 * @param {?} object
 * @param {number=} startIndex
 * @return {number}
 */
MQueryResultSet.prototype.lastIndexOf = function(object, startIndex) {};
/**
 * @record
 * @struct
 */
function MQueryEvent() {}
 /** @type {boolean} */
MQueryEvent.prototype.altKey;
 /** @type {number} */
MQueryEvent.prototype.attrChange;
 /** @type {string} */
MQueryEvent.prototype.attrName;
 /** @type {boolean} */
MQueryEvent.prototype.bubbles;
 /** @type {number} */
MQueryEvent.prototype.button;
 /** @type {boolean} */
MQueryEvent.prototype.cancelable;
 /** @type {boolean} */
MQueryEvent.prototype.ctrlKey;
 /** @type {boolean} */
MQueryEvent.prototype.defaultPrevented;
 /** @type {number} */
MQueryEvent.prototype.detail;
 /** @type {number} */
MQueryEvent.prototype.eventPhase;
 /** @type {string} */
MQueryEvent.prototype.newValue;
 /** @type {string} */
MQueryEvent.prototype.prevValue;
 /** @type {!HTMLElement} */
MQueryEvent.prototype.relatedNode;
 /** @type {number} */
MQueryEvent.prototype.screenX;
 /** @type {number} */
MQueryEvent.prototype.screenY;
 /** @type {boolean} */
MQueryEvent.prototype.shiftKey;
 /** @type {?} */
MQueryEvent.prototype.view;
 /** @type {!MQuery} */
var m$;
/**
 * @constructor
 * @struct
 */
function CalloutActionOptions() {}
 /** @type {string} */
CalloutActionOptions.prototype.text;
 /** @type {string} */
CalloutActionOptions.prototype.tooltip;
 /** @type {string} */
CalloutActionOptions.prototype.disabledTooltip;
 /** @type {function(!Event, !CalloutAction): ?} */
CalloutActionOptions.prototype.onClickCallback;
 /** @type {function(!CalloutAction): boolean} */
CalloutActionOptions.prototype.isEnabledCallback;
 /** @type {function(!CalloutAction): boolean} */
CalloutActionOptions.prototype.isVisibleCallback;
 /** @type {!Array<!CalloutActionMenuEntry>} */
CalloutActionOptions.prototype.menuEntries;

/**
 * @constructor
 * @struct
 * Creates a callout action menu entry
 * @param {string} text Text to be displayed as the menu item text
 * @param {function(!CalloutActionMenuEntry, number): void} onClickCallback Callback that will be fired when the item is clicked
 * @param {string} wzISrc Url of the icon
 * @param {string} wzIAlt Alternative text for the icon image
 * @param {number} wzISeq Sequence for the menu item
 * @param {string} wzDesc Description of the menu item
 */
function CalloutActionMenuEntry(text, onClickCallback, wzISrc, wzIAlt, wzISeq, wzDesc) {}

/**
 * @constructor
 * @struct
 * @param {?} actionsId
 */
function CalloutActionMenu(actionsId) {}

/**
 * @param {!CalloutAction} action
 * @return {void}
 */
CalloutActionMenu.prototype.addAction = function(action) {};

/**
 * @return {!Array<!CalloutAction>}
 */
CalloutActionMenu.prototype.getActions = function() {};

/**
 * @return {void}
 */
CalloutActionMenu.prototype.render = function() {};

/**
 * @return {void}
 */
CalloutActionMenu.prototype.refreshActions = function() {};

/**
 * @return {void}
 */
CalloutActionMenu.prototype.calculateActionWidth = function() {};

/**
 * @constructor
 * @struct
 * @param {!CalloutActionOptions} options
 */
function CalloutAction(options) {}

/**
 * @return {string}
 */
CalloutAction.prototype.getText = function() {};

/**
 * @return {string}
 */
CalloutAction.prototype.getToolTop = function() {};

/**
 * @return {string}
 */
CalloutAction.prototype.getDisabledToolTip = function() {};

/**
 * @param {?} event
 * @param {!CalloutAction} action
 * @return {?}
 */
CalloutAction.prototype.getOnClickCallback = function(event, action) {};

/**
 * @param {!CalloutAction} action
 * @return {boolean}
 */
CalloutAction.prototype.getIsDisabledCallback = function(action) {};

/**
 * @param {!CalloutAction} action
 * @return {boolean}
 */
CalloutAction.prototype.getIsVisibleCallback = function(action) {};

/**
 * @return {boolean}
 */
CalloutAction.prototype.getIsMenu = function() {};

/**
 * @return {!Array<!CalloutActionMenuEntry>}
 */
CalloutAction.prototype.getMenuEntries = function() {};

/**
 * @return {void}
 */
CalloutAction.prototype.render = function() {};

/**
 * @return {boolean}
 */
CalloutAction.prototype.isEnabled = function() {};

/**
 * @return {boolean}
 */
CalloutAction.prototype.isVisible = function() {};

/**
 * @param {!CalloutActionOptions} options
 * @return {void}
 */
CalloutAction.prototype.set = function(options) {};
/**
 * @constructor
 * @struct
 */
function Callout() {}

/**
 * Sets options for the callout. Not all options can be changed for the callout after its creation.
 * @param {!CalloutOptions} options
 * @return {?}
 */
Callout.prototype.set = function(options) {};

/**
 * Adds event handler to the callout.
 * @param {string} eventName one of the following: "opened", "opening", "closing", "closed"
 * @param {function(!Callout): void} callback
 * @return {void}
 */
Callout.prototype.addEventCallback = function(eventName, callback) {};

/**
 * Returns the launch point element of the callout.
 * @return {!HTMLElement}
 */
Callout.prototype.getLaunchPoint = function() {};

/**
 * Returns the ID of the callout.
 * @return {string}
 */
Callout.prototype.getID = function() {};

/**
 * Returns the title of the callout.
 * @return {string}
 */
Callout.prototype.getTitle = function() {};

/**
 * Returns the contents of the callout.
 * @return {string}
 */
Callout.prototype.getContent = function() {};

/**
 * Returns the content element of the callout.
 * @return {!HTMLElement}
 */
Callout.prototype.getContentElement = function() {};

/**
 * Returns the bounding element defined for the callout during its creation.
 * @return {!HTMLElement}
 */
Callout.prototype.getBoundingBox = function() {};

/**
 * Returns the content width defined for the callout during its creation.
 * @return {number}
 */
Callout.prototype.getContentWidth = function() {};

/**
 * Returns the object that represents open behaivor defined for the callout during its creation.
 * @return {!CalloutOpenOptions}
 */
Callout.prototype.getOpenOptions = function() {};

/**
 * Returns the beak orientation defined for the callout during its creation.
 * @return {string}
 */
Callout.prototype.getBeakOrientation = function() {};

/**
 * Returns the position algorithm function defined for the callout during its creation.
 * @return {?}
 */
Callout.prototype.getPositionAlgorithm = function() {};

/**
 * Specifies wherever callout is in "Opened" state
 * @return {boolean}
 */
Callout.prototype.isOpen = function() {};

/**
 * Specifies wherever callout is in "Opening" state
 * @return {boolean}
 */
Callout.prototype.isOpening = function() {};

/**
 * Specifies wherever callout is in "Opened" or "Opening" state
 * @return {boolean}
 */
Callout.prototype.isOpenOrOpening = function() {};

/**
 * Specifies wherever callout is in "Closing" state
 * @return {boolean}
 */
Callout.prototype.isClosing = function() {};

/**
 * Specifies wherever callout is in "Closed" state
 * @return {boolean}
 */
Callout.prototype.isClosed = function() {};

/**
 * Returns the callout actions menu
 * @return {!CalloutActionMenu}
 */
Callout.prototype.getActionMenu = function() {};

/**
 * Adds a link to the actions panel in the bottom part of the callout window
 * @param {!CalloutAction} action
 * @return {void}
 */
Callout.prototype.addAction = function(action) {};

/**
 * Re-renders the actions menu. Call after the actions menu is changed.
 * @return {void}
 */
Callout.prototype.refreshActions = function() {};

/**
 * Display the callout. Animation can be used only for IE9+
 * @param {boolean} useAnimation
 * @return {void}
 */
Callout.prototype.open = function(useAnimation) {};

/**
 * Hide the callout. Animation can be used only for IE9+
 * @param {boolean} useAnimation
 * @return {void}
 */
Callout.prototype.close = function(useAnimation) {};

/**
 * Display if hidden, hide if shown.
 * @return {void}
 */
Callout.prototype.toggle = function() {};

/**
 * Do not call this directly. Instead, use CalloutManager.remove
 * @return {void}
 */
Callout.prototype.destroy = function() {};
/**
 * @constructor
 * @struct
 */
function CalloutOpenOptions() {}
 /** @type {string} */
CalloutOpenOptions.prototype.event;
 /** @type {boolean} */
CalloutOpenOptions.prototype.closeCalloutOnBlur;
 /** @type {boolean} */
CalloutOpenOptions.prototype.showCloseButton;
/**
 * @constructor
 * @struct
 */
function CalloutOptions() {}
 /** @type {string} */
CalloutOptions.prototype.ID;
 /** @type {!HTMLElement} */
CalloutOptions.prototype.launchPoint;
 /** @type {string} */
CalloutOptions.prototype.beakOrientation;
 /** @type {string} */
CalloutOptions.prototype.content;
 /** @type {string} */
CalloutOptions.prototype.title;
 /** @type {!HTMLElement} */
CalloutOptions.prototype.contentElement;
 /** @type {!HTMLElement} */
CalloutOptions.prototype.boundingBox;
 /** @type {number} */
CalloutOptions.prototype.contentWidth;
 /** @type {!CalloutOpenOptions} */
CalloutOptions.prototype.openOptions;
 /** @type {function(!Callout): void} */
CalloutOptions.prototype.onOpeningCallback;
 /** @type {function(!Callout): void} */
CalloutOptions.prototype.onOpenedCallback;
 /** @type {function(!Callout): void} */
CalloutOptions.prototype.onClosingCallback;
 /** @type {function(!Callout): void} */
CalloutOptions.prototype.onClosedCallback;
 /** @type {function(!Callout): void} */
CalloutOptions.prototype.positionAlgorithm;
/**
 * @constructor
 * @struct
 */
function CalloutManager() {}

/**
 * Creates a new callout
 * @param {!CalloutOptions} options
 * @return {!Callout}
 */
CalloutManager.createNew = function(options) {};

/**
 * Checks if callout with specified ID already exists. If it doesn't, creates it, otherwise returns the existing one.
 * @param {!CalloutOptions} options
 * @return {!Callout}
 */
CalloutManager.createNewIfNecessary = function(options) {};

/**
 * Detaches callout from the launch point and destroys it.
 * @param {!Callout} callout
 * @return {void}
 */
CalloutManager.remove = function(callout) {};

/**
 * Searches for a callout associated with the specified launch point. Throws error if not found.
 * @param {!HTMLElement} launchPoint
 * @return {!Callout}
 */
CalloutManager.getFromLaunchPoint = function(launchPoint) {};

/**
 * Searches for a callout associated with the specified launch point. Returns null if not found.
 * @param {!HTMLElement} launchPoint
 * @return {!Callout}
 */
CalloutManager.getFromLaunchPointIfExists = function(launchPoint) {};

/**
 * Gets the first launch point within the specified ancestor element, and returns true if the associated with it callout is opened or opening.
 * If the launch point is not found or the callout is hidden, returns false.
 * @param {!HTMLElement} ancestor
 * @return {boolean}
 */
CalloutManager.containsOneCalloutOpen = function(ancestor) {};

/**
 * Finds the closest launch point based on the specified descendant element, and returns callout associated with the launch point.
 * @param {!HTMLElement} descendant
 * @return {!Callout}
 */
CalloutManager.getFromCalloutDescendant = function(descendant) {};

/**
 * Perform some action for each callout on the page.
 * @param {function(!Callout): void} callback
 * @return {void}
 */
CalloutManager.forEach = function(callback) {};

/**
 * Closes all callouts on the page
 * @return {boolean}
 */
CalloutManager.closeAll = function() {};

/**
 * Returns true if at least one of the defined on page callouts is opened.
 * @return {boolean}
 */
CalloutManager.isAtLeastOneCalloutOpen = function() {};

/**
 * Returns true if at least one of the defined on page callouts is opened or opening.
 * @return {boolean}
 */
CalloutManager.isAtLeastOneCalloutOn = function() {};
/** @const */
var SPClientTemplates = {};

/** @const */
SPClientTemplates.FileSystemObjectType = {};
/** @const {number} */
SPClientTemplates.FileSystemObjectType.Invalid;
/** @const {number} */
SPClientTemplates.FileSystemObjectType.File;
/** @const {number} */
SPClientTemplates.FileSystemObjectType.Folder;
/** @const {number} */
SPClientTemplates.FileSystemObjectType.Web;

/** @const */
SPClientTemplates.ChoiceFormatType = {};
/** @const {number} */
SPClientTemplates.ChoiceFormatType.Dropdown;
/** @const {number} */
SPClientTemplates.ChoiceFormatType.Radio;

/** @const */
SPClientTemplates.ClientControlMode = {};
/** @const {number} */
SPClientTemplates.ClientControlMode.Invalid;
/** @const {number} */
SPClientTemplates.ClientControlMode.DisplayForm;
/** @const {number} */
SPClientTemplates.ClientControlMode.EditForm;
/** @const {number} */
SPClientTemplates.ClientControlMode.NewForm;
/** @const {number} */
SPClientTemplates.ClientControlMode.View;

/** @const */
SPClientTemplates.RichTextMode = {};
/** @const {number} */
SPClientTemplates.RichTextMode.Compatible;
/** @const {number} */
SPClientTemplates.RichTextMode.FullHtml;
/** @const {number} */
SPClientTemplates.RichTextMode.HtmlAsXml;
/** @const {number} */
SPClientTemplates.RichTextMode.ThemeHtml;

/** @const */
SPClientTemplates.UrlFormatType = {};
/** @const {number} */
SPClientTemplates.UrlFormatType.Hyperlink;
/** @const {number} */
SPClientTemplates.UrlFormatType.Image;

/** @const */
SPClientTemplates.DateTimeDisplayFormat = {};
/** @const {number} */
SPClientTemplates.DateTimeDisplayFormat.DateOnly;
/** @const {number} */
SPClientTemplates.DateTimeDisplayFormat.DateTime;
/** @const {number} */
SPClientTemplates.DateTimeDisplayFormat.TimeOnly;

/** @const */
SPClientTemplates.DateTimeCalendarType = {};
/** @const {number} */
SPClientTemplates.DateTimeCalendarType.None;
/** @const {number} */
SPClientTemplates.DateTimeCalendarType.Gregorian;
/** @const {number} */
SPClientTemplates.DateTimeCalendarType.Japan;
/** @const {number} */
SPClientTemplates.DateTimeCalendarType.Taiwan;
/** @const {number} */
SPClientTemplates.DateTimeCalendarType.Korea;
/** @const {number} */
SPClientTemplates.DateTimeCalendarType.Hijri;
/** @const {number} */
SPClientTemplates.DateTimeCalendarType.Thai;
/** @const {number} */
SPClientTemplates.DateTimeCalendarType.Hebrew;
/** @const {number} */
SPClientTemplates.DateTimeCalendarType.GregorianMEFrench;
/** @const {number} */
SPClientTemplates.DateTimeCalendarType.GregorianArabic;
/** @const {number} */
SPClientTemplates.DateTimeCalendarType.GregorianXLITEnglish;
/** @const {number} */
SPClientTemplates.DateTimeCalendarType.GregorianXLITFrench;
/** @const {number} */
SPClientTemplates.DateTimeCalendarType.KoreaJapanLunar;
/** @const {number} */
SPClientTemplates.DateTimeCalendarType.ChineseLunar;
/** @const {number} */
SPClientTemplates.DateTimeCalendarType.SakaEra;
/** @const {number} */
SPClientTemplates.DateTimeCalendarType.UmAlQura;

/** @const */
SPClientTemplates.UserSelectionMode = {};
/** @const {number} */
SPClientTemplates.UserSelectionMode.PeopleOnly;
/** @const {number} */
SPClientTemplates.UserSelectionMode.PeopleAndGroups;
/**
 * @extends {SPClientTemplates.FieldSchema_InForm}
 * @record
 * @struct
 */
SPClientTemplates.FieldSchema_InForm_Choice = function() {};
 /** @type {!Array<string>} */
SPClientTemplates.FieldSchema_InForm_Choice.prototype.Choices;
 /** @type {SPClientTemplates.ChoiceFormatType} */
SPClientTemplates.FieldSchema_InForm_Choice.prototype.FormatType;
/**
 * @extends {SPClientTemplates.FieldSchema_InForm}
 * @record
 * @struct
 */
SPClientTemplates.FieldSchema_InForm_Lookup = function() {};
 /** @type {boolean} */
SPClientTemplates.FieldSchema_InForm_Lookup.prototype.AllowMultipleValues;
 /** @type {string} */
SPClientTemplates.FieldSchema_InForm_Lookup.prototype.BaseDisplayFormUrl;
 /** @type {boolean} */
SPClientTemplates.FieldSchema_InForm_Lookup.prototype.DependentLookup;
 /** @type {boolean} */
SPClientTemplates.FieldSchema_InForm_Lookup.prototype.Throttled;
 /** @type {string} */
SPClientTemplates.FieldSchema_InForm_Lookup.prototype.MaxQueryResult;
 /** @type {!Array<{LookupId: number, LookupValue: string}>} */
SPClientTemplates.FieldSchema_InForm_Lookup.prototype.Choices;
 /** @type {number} */
SPClientTemplates.FieldSchema_InForm_Lookup.prototype.ChoiceCount;
 /** @type {string} */
SPClientTemplates.FieldSchema_InForm_Lookup.prototype.LookupListId;
/**
 * @extends {SPClientTemplates.FieldSchema_InForm}
 * @record
 * @struct
 */
SPClientTemplates.FieldSchema_InForm_DateTime = function() {};
 /** @type {SPClientTemplates.DateTimeCalendarType} */
SPClientTemplates.FieldSchema_InForm_DateTime.prototype.CalendarType;
 /** @type {SPClientTemplates.DateTimeDisplayFormat} */
SPClientTemplates.FieldSchema_InForm_DateTime.prototype.DisplayFormat;
 /** @type {boolean} */
SPClientTemplates.FieldSchema_InForm_DateTime.prototype.ShowWeekNumber;
 /** @type {string} */
SPClientTemplates.FieldSchema_InForm_DateTime.prototype.TimeSeparator;
 /** @type {string} */
SPClientTemplates.FieldSchema_InForm_DateTime.prototype.TimeZoneDifference;
 /** @type {number} */
SPClientTemplates.FieldSchema_InForm_DateTime.prototype.FirstDayOfWeek;
 /** @type {number} */
SPClientTemplates.FieldSchema_InForm_DateTime.prototype.FirstWeekOfYear;
 /** @type {number} */
SPClientTemplates.FieldSchema_InForm_DateTime.prototype.HijriAdjustment;
 /** @type {string} */
SPClientTemplates.FieldSchema_InForm_DateTime.prototype.WorkWeek;
 /** @type {string} */
SPClientTemplates.FieldSchema_InForm_DateTime.prototype.LocaleId;
 /** @type {string} */
SPClientTemplates.FieldSchema_InForm_DateTime.prototype.LanguageId;
 /** @type {number} */
SPClientTemplates.FieldSchema_InForm_DateTime.prototype.MinJDay;
 /** @type {number} */
SPClientTemplates.FieldSchema_InForm_DateTime.prototype.MaxJDay;
 /** @type {boolean} */
SPClientTemplates.FieldSchema_InForm_DateTime.prototype.HoursMode24;
 /** @type {!Array<string>} */
SPClientTemplates.FieldSchema_InForm_DateTime.prototype.HoursOptions;
/**
 * @extends {SPClientTemplates.FieldSchema_InForm}
 * @record
 * @struct
 */
SPClientTemplates.FieldSchema_InForm_Geolocation = function() {};
 /** @type {string} */
SPClientTemplates.FieldSchema_InForm_Geolocation.prototype.BingMapsKey;
 /** @type {boolean} */
SPClientTemplates.FieldSchema_InForm_Geolocation.prototype.IsBingMapBlockedInCurrentRegion;
/**
 * @extends {SPClientTemplates.FieldSchema_InForm}
 * @record
 * @struct
 */
SPClientTemplates.FieldSchema_InForm_MultiChoice = function() {};
 /** @type {!Array<string>} */
SPClientTemplates.FieldSchema_InForm_MultiChoice.prototype.MultiChoices;
 /** @type {boolean} */
SPClientTemplates.FieldSchema_InForm_MultiChoice.prototype.FillInChoice;
/**
 * @extends {SPClientTemplates.FieldSchema_InForm}
 * @record
 * @struct
 */
SPClientTemplates.FieldSchema_InForm_MultiLineText = function() {};
 /** @type {boolean} */
SPClientTemplates.FieldSchema_InForm_MultiLineText.prototype.RichText;
 /** @type {boolean} */
SPClientTemplates.FieldSchema_InForm_MultiLineText.prototype.AppendOnly;
 /** @type {SPClientTemplates.RichTextMode} */
SPClientTemplates.FieldSchema_InForm_MultiLineText.prototype.RichTextMode;
 /** @type {number} */
SPClientTemplates.FieldSchema_InForm_MultiLineText.prototype.NumberOfLines;
 /** @type {boolean} */
SPClientTemplates.FieldSchema_InForm_MultiLineText.prototype.AllowHyperlink;
 /** @type {string} */
SPClientTemplates.FieldSchema_InForm_MultiLineText.prototype.ScriptEditorAdderId;
/**
 * @extends {SPClientTemplates.FieldSchema_InForm}
 * @record
 * @struct
 */
SPClientTemplates.FieldSchema_InForm_Number = function() {};
 /** @type {boolean} */
SPClientTemplates.FieldSchema_InForm_Number.prototype.ShowAsPercentage;
/**
 * @extends {SPClientTemplates.FieldSchema_InForm}
 * @record
 * @struct
 */
SPClientTemplates.FieldSchema_InForm_Text = function() {};
 /** @type {number} */
SPClientTemplates.FieldSchema_InForm_Text.prototype.MaxLength;
/**
 * @extends {SPClientTemplates.FieldSchema_InForm}
 * @record
 * @struct
 */
SPClientTemplates.FieldSchema_InForm_Url = function() {};
 /** @type {SPClientTemplates.UrlFormatType} */
SPClientTemplates.FieldSchema_InForm_Url.prototype.DisplayFormat;
/**
 * @extends {SPClientTemplates.FieldSchema_InForm}
 * @record
 * @struct
 */
SPClientTemplates.FieldSchema_InForm_User = function() {};
 /** @type {boolean} */
SPClientTemplates.FieldSchema_InForm_User.prototype.Presence;
 /** @type {boolean} */
SPClientTemplates.FieldSchema_InForm_User.prototype.WithPicture;
 /** @type {boolean} */
SPClientTemplates.FieldSchema_InForm_User.prototype.DefaultRender;
 /** @type {boolean} */
SPClientTemplates.FieldSchema_InForm_User.prototype.WithPictureDetail;
 /** @type {string} */
SPClientTemplates.FieldSchema_InForm_User.prototype.ListFormUrl;
 /** @type {string} */
SPClientTemplates.FieldSchema_InForm_User.prototype.UserDisplayUrl;
 /** @type {string} */
SPClientTemplates.FieldSchema_InForm_User.prototype.EntitySeparator;
 /** @type {boolean} */
SPClientTemplates.FieldSchema_InForm_User.prototype.PictureOnly;
 /** @type {string} */
SPClientTemplates.FieldSchema_InForm_User.prototype.PictureSize;
/**
 * @record
 * @struct
 */
SPClientTemplates.FieldSchema = function() {};
 /** @type {boolean} */
SPClientTemplates.FieldSchema.prototype.AllowGridEditing;
 /** @type {string} */
SPClientTemplates.FieldSchema.prototype.FieldType;
 /** @type {string} */
SPClientTemplates.FieldSchema.prototype.Name;
 /** @type {string} */
SPClientTemplates.FieldSchema.prototype.Type;
/**
 * @extends {SPClientTemplates.FieldSchema}
 * @record
 * @struct
 */
SPClientTemplates.FieldSchema_InForm = function() {};
 /** @type {string} */
SPClientTemplates.FieldSchema_InForm.prototype.Description;
 /** @type {string} */
SPClientTemplates.FieldSchema_InForm.prototype.Direction;
 /** @type {boolean} */
SPClientTemplates.FieldSchema_InForm.prototype.Hidden;
 /** @type {string} */
SPClientTemplates.FieldSchema_InForm.prototype.Id;
 /** @type {?} */
SPClientTemplates.FieldSchema_InForm.prototype.IMEMode;
 /** @type {boolean} */
SPClientTemplates.FieldSchema_InForm.prototype.ReadOnlyField;
 /** @type {boolean} */
SPClientTemplates.FieldSchema_InForm.prototype.Required;
 /** @type {boolean} */
SPClientTemplates.FieldSchema_InForm.prototype.RestrictedMode;
 /** @type {string} */
SPClientTemplates.FieldSchema_InForm.prototype.Title;
 /** @type {boolean} */
SPClientTemplates.FieldSchema_InForm.prototype.UseMinWidth;
/**
 * @record
 * @struct
 */
SPClientTemplates.ListSchema = function() {};
 /** @type {!Array<!SPClientTemplates.FieldSchema>} */
SPClientTemplates.ListSchema.prototype.Field;
/**
 * @extends {SPClientTemplates.ListSchema}
 * @record
 * @struct
 */
SPClientTemplates.ListSchema_InForm = function() {};
 /** @type {!Array<!SPClientTemplates.FieldSchema_InForm>} */
SPClientTemplates.ListSchema_InForm.prototype.Field;
/**
 * @record
 * @struct
 */
SPClientTemplates.ListData_InForm = function() {};
 /** @type {!Array<!SPClientTemplates.Item>} */
SPClientTemplates.ListData_InForm.prototype.Items;
/**
 * @extends {SPClientTemplates.RenderContext_Form}
 * @record
 * @struct
 */
SPClientTemplates.RenderContext_FieldInForm = function() {};
 /** @type {number} */
SPClientTemplates.RenderContext_FieldInForm.prototype.CurrentGroupIdx;
 /** @type {!SPClientTemplates.Group} */
SPClientTemplates.RenderContext_FieldInForm.prototype.CurrentGroup;
 /** @type {!Array<!SPClientTemplates.Item>} */
SPClientTemplates.RenderContext_FieldInForm.prototype.CurrentItems;
 /** @type {!SPClientTemplates.FieldSchema_InForm} */
SPClientTemplates.RenderContext_FieldInForm.prototype.CurrentFieldSchema;
 /** @type {?} */
SPClientTemplates.RenderContext_FieldInForm.prototype.CurrentFieldValue;
/**
 * @extends {SPClientTemplates.RenderContext}
 * @record
 * @struct
 */
SPClientTemplates.RenderContext_Form = function() {};
 /** @type {!SPClientTemplates.Item} */
SPClientTemplates.RenderContext_Form.prototype.CurrentItem;
 /** @type {!Object<string,SPClientTemplates.ClientControlMode>} */
SPClientTemplates.RenderContext_Form.prototype.FieldControlModes;
 /** @type {!SPClientTemplates.ClientFormContext} */
SPClientTemplates.RenderContext_Form.prototype.FormContext;
 /** @type {string} */
SPClientTemplates.RenderContext_Form.prototype.FormUniqueId;
 /** @type {!SPClientTemplates.ListData_InForm} */
SPClientTemplates.RenderContext_Form.prototype.ListData;
 /** @type {!SPClientTemplates.ListSchema_InForm} */
SPClientTemplates.RenderContext_Form.prototype.ListSchema;
 /** @type {boolean} */
SPClientTemplates.RenderContext_Form.prototype.CSRCustomLayout;
/**
 * @extends {SPClientTemplates.FieldSchema_InView}
 * @record
 * @struct
 */
SPClientTemplates.FieldSchema_InView_LookupField = function() {};
 /** @type {string} */
SPClientTemplates.FieldSchema_InView_LookupField.prototype.AllowMultipleValues;
 /** @type {string} */
SPClientTemplates.FieldSchema_InView_LookupField.prototype.DispFormUrl;
 /** @type {string} */
SPClientTemplates.FieldSchema_InView_LookupField.prototype.HasPrefix;
/**
 * @extends {SPClientTemplates.FieldSchema_InView}
 * @record
 * @struct
 */
SPClientTemplates.FieldSchema_InView_UserField = function() {};
 /** @type {string} */
SPClientTemplates.FieldSchema_InView_UserField.prototype.AllowMultipleValues;
 /** @type {string} */
SPClientTemplates.FieldSchema_InView_UserField.prototype.ImnHeader;
 /** @type {string} */
SPClientTemplates.FieldSchema_InView_UserField.prototype.HasPrefix;
 /** @type {string} */
SPClientTemplates.FieldSchema_InView_UserField.prototype.HasUserLink;
 /** @type {string} */
SPClientTemplates.FieldSchema_InView_UserField.prototype.DefaultRender;
/**
 * @extends {SPClientTemplates.FieldSchema}
 * @record
 * @struct
 */
SPClientTemplates.FieldSchema_InView = function() {};
 /** @type {string} */
SPClientTemplates.FieldSchema_InView.prototype.CalloutMenu;
 /** @type {string} */
SPClientTemplates.FieldSchema_InView.prototype.ClassInfo;
 /** @type {string} */
SPClientTemplates.FieldSchema_InView.prototype.css;
 /** @type {string} */
SPClientTemplates.FieldSchema_InView.prototype.DisplayName;
 /** @type {string} */
SPClientTemplates.FieldSchema_InView.prototype.Explicit;
 /** @type {?} */
SPClientTemplates.FieldSchema_InView.prototype.fieldRenderer;
 /** @type {string} */
SPClientTemplates.FieldSchema_InView.prototype.FieldTitle;
 /** @type {string} */
SPClientTemplates.FieldSchema_InView.prototype.Filterable;
 /** @type {string} */
SPClientTemplates.FieldSchema_InView.prototype.GroupField;
 /** @type {string} */
SPClientTemplates.FieldSchema_InView.prototype.GridActiveAndReadOnly;
 /** @type {string} */
SPClientTemplates.FieldSchema_InView.prototype.ID;
 /** @type {string} */
SPClientTemplates.FieldSchema_InView.prototype.listItemMenu;
 /** @type {string} */
SPClientTemplates.FieldSchema_InView.prototype.RealFieldName;
 /** @type {string} */
SPClientTemplates.FieldSchema_InView.prototype.ReadOnly;
 /** @type {string} */
SPClientTemplates.FieldSchema_InView.prototype.ResultType;
 /** @type {string} */
SPClientTemplates.FieldSchema_InView.prototype.Sortable;
/**
 * @extends {SPClientTemplates.ListSchema}
 * @record
 * @struct
 */
SPClientTemplates.ListSchema_InView = function() {};
 /** @type {!Object<string,string>} */
SPClientTemplates.ListSchema_InView.prototype.Aggregate;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.Collapse;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.DefaultItemOpen;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.Direction;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.EffectivePresenceEnabled;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.FieldSortParam;
 /** @type {?} */
SPClientTemplates.ListSchema_InView.prototype.Filter;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.ForceCheckout;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.group1;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.group2;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.HasTitle;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.HttpVDir;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.InplaceSearchEnabled;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.IsDocLib;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.LCID;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.ListRight_AddListItems;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.NoListItem;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.NoListItemHowTo;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.PagePath;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.ParentHierarchyDisplayField;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.PresenceAlt;
 /** @type {!Object<string,string>} */
SPClientTemplates.ListSchema_InView.prototype.PropertyBag;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.RenderSaveAsNewViewButton;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.RenderViewSelectorPivotMenu;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.RenderViewSelectorPivotMenuAsync;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.RootFolderParam;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.SelectedID;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.ShowWebPart;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.StrikeThroughOnCompletedEnabled;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.TabularView;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.Toolbar;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.UIVersion;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.Userid;
 /** @type {?} */
SPClientTemplates.ListSchema_InView.prototype.UserVanilla;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.UserDispUrl;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.UseParentHierarchy;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.View;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.ViewSelectorPivotMenuOptions;
 /** @type {string} */
SPClientTemplates.ListSchema_InView.prototype.ViewSelector_ViewParameters;
/**
 * @record
 * @struct
 */
SPClientTemplates.ListData_InView = function() {};
 /** @type {string} */
SPClientTemplates.ListData_InView.prototype.FilterLink;
 /** @type {string} */
SPClientTemplates.ListData_InView.prototype.FilterFields;
 /** @type {number} */
SPClientTemplates.ListData_InView.prototype.FirstRow;
 /** @type {string} */
SPClientTemplates.ListData_InView.prototype.ForceNoHierarchy;
 /** @type {string} */
SPClientTemplates.ListData_InView.prototype.HierarchyHasIndention;
 /** @type {string} */
SPClientTemplates.ListData_InView.prototype.PrevHref;
 /** @type {string} */
SPClientTemplates.ListData_InView.prototype.NextHref;
 /** @type {string} */
SPClientTemplates.ListData_InView.prototype.SortField;
 /** @type {string} */
SPClientTemplates.ListData_InView.prototype.SortDir;
 /** @type {number} */
SPClientTemplates.ListData_InView.prototype.LastRow;
 /** @type {!Array<!SPClientTemplates.Item>} */
SPClientTemplates.ListData_InView.prototype.Row;
/**
 * @extends {SPClientTemplates.RenderContext_InView}
 * @record
 * @struct
 */
SPClientTemplates.RenderContext_GroupInView = function() {};
 /** @type {number} */
SPClientTemplates.RenderContext_GroupInView.prototype.CurrentGroupIdx;
 /** @type {!SPClientTemplates.Group} */
SPClientTemplates.RenderContext_GroupInView.prototype.CurrentGroup;
 /** @type {!Array<!SPClientTemplates.Item>} */
SPClientTemplates.RenderContext_GroupInView.prototype.CurrentItems;
/**
 * @extends {SPClientTemplates.RenderContext}
 * @record
 * @struct
 */
SPClientTemplates.RenderContext_InView = function() {};
 /** @type {boolean} */
SPClientTemplates.RenderContext_InView.prototype.AllowCreateFolder;
 /** @type {boolean} */
SPClientTemplates.RenderContext_InView.prototype.AllowGridMode;
 /** @type {!Object<string,boolean>} */
SPClientTemplates.RenderContext_InView.prototype.BasePermissions;
 /** @type {boolean} */
SPClientTemplates.RenderContext_InView.prototype.bInitialRender;
 /** @type {boolean} */
SPClientTemplates.RenderContext_InView.prototype.CanShareLinkForNewDocument;
 /** @type {string} */
SPClientTemplates.RenderContext_InView.prototype.CascadeDeleteWarningMessage;
 /** @type {!HTMLElement} */
SPClientTemplates.RenderContext_InView.prototype.clvp;
 /** @type {boolean} */
SPClientTemplates.RenderContext_InView.prototype.ContentTypesEnabled;
 /** @type {number} */
SPClientTemplates.RenderContext_InView.prototype.ctxId;
 /** @type {?} */
SPClientTemplates.RenderContext_InView.prototype.ctxType;
 /** @type {number} */
SPClientTemplates.RenderContext_InView.prototype.CurrentUserId;
 /** @type {boolean} */
SPClientTemplates.RenderContext_InView.prototype.CurrentUserIsSiteAdmin;
 /** @type {?} */
SPClientTemplates.RenderContext_InView.prototype.dictSel;
 /** @type {string} */
SPClientTemplates.RenderContext_InView.prototype.displayFormUrl;
 /** @type {string} */
SPClientTemplates.RenderContext_InView.prototype.editFormUrl;
 /** @type {boolean} */
SPClientTemplates.RenderContext_InView.prototype.EnableMinorVersions;
 /** @type {boolean} */
SPClientTemplates.RenderContext_InView.prototype.ExternalDataList;
 /** @type {boolean} */
SPClientTemplates.RenderContext_InView.prototype.enteringGridMode;
 /** @type {?} */
SPClientTemplates.RenderContext_InView.prototype.existingServerFilterHash;
 /** @type {number} */
SPClientTemplates.RenderContext_InView.prototype.HasRelatedCascadeLists;
 /** @type {string} */
SPClientTemplates.RenderContext_InView.prototype.heroId;
 /** @type {string} */
SPClientTemplates.RenderContext_InView.prototype.HttpPath;
 /** @type {string} */
SPClientTemplates.RenderContext_InView.prototype.HttpRoot;
 /** @type {string} */
SPClientTemplates.RenderContext_InView.prototype.imagesPath;
 /** @type {?} */
SPClientTemplates.RenderContext_InView.prototype.inGridFullRender;
 /** @type {boolean} */
SPClientTemplates.RenderContext_InView.prototype.inGridMode;
 /** @type {boolean} */
SPClientTemplates.RenderContext_InView.prototype.IsAppWeb;
 /** @type {boolean} */
SPClientTemplates.RenderContext_InView.prototype.IsClientRendering;
 /** @type {boolean} */
SPClientTemplates.RenderContext_InView.prototype.isForceCheckout;
 /** @type {boolean} */
SPClientTemplates.RenderContext_InView.prototype.isModerated;
 /** @type {?} */
SPClientTemplates.RenderContext_InView.prototype.isPortalTemplate;
 /** @type {number} */
SPClientTemplates.RenderContext_InView.prototype.isWebEditorPreview;
 /** @type {number} */
SPClientTemplates.RenderContext_InView.prototype.isVersions;
 /** @type {boolean} */
SPClientTemplates.RenderContext_InView.prototype.isXslView;
 /** @type {?} */
SPClientTemplates.RenderContext_InView.prototype.LastRowIndexSelected;
 /** @type {?} */
SPClientTemplates.RenderContext_InView.prototype.LastSelectableRowIdx;
 /** @type {?} */
SPClientTemplates.RenderContext_InView.prototype.LastSelectedItemId;
 /** @type {boolean} */
SPClientTemplates.RenderContext_InView.prototype.leavingGridMode;
 /** @type {number} */
SPClientTemplates.RenderContext_InView.prototype.listBaseType;
 /** @type {!SPClientTemplates.ListData_InView} */
SPClientTemplates.RenderContext_InView.prototype.ListData;
 /** @type {string} */
SPClientTemplates.RenderContext_InView.prototype.ListDataJSONItemsKey;
 /** @type {string} */
SPClientTemplates.RenderContext_InView.prototype.listName;
 /** @type {!SPClientTemplates.ListSchema_InView} */
SPClientTemplates.RenderContext_InView.prototype.ListSchema;
 /** @type {string} */
SPClientTemplates.RenderContext_InView.prototype.listTemplate;
 /** @type {string} */
SPClientTemplates.RenderContext_InView.prototype.ListTitle;
 /** @type {string} */
SPClientTemplates.RenderContext_InView.prototype.listUrlDir;
 /** @type {boolean} */
SPClientTemplates.RenderContext_InView.prototype.loadingAsyncData;
 /** @type {number} */
SPClientTemplates.RenderContext_InView.prototype.ModerationStatus;
 /** @type {boolean} */
SPClientTemplates.RenderContext_InView.prototype.NavigateForFormsPages;
 /** @type {string} */
SPClientTemplates.RenderContext_InView.prototype.newFormUrl;
 /** @type {?} */
SPClientTemplates.RenderContext_InView.prototype.NewWOPIDocumentEnabled;
 /** @type {?} */
SPClientTemplates.RenderContext_InView.prototype.NewWOPIDocumentUrl;
 /** @type {boolean} */
SPClientTemplates.RenderContext_InView.prototype.noGroupCollapse;
 /** @type {string} */
SPClientTemplates.RenderContext_InView.prototype.OfficialFileName;
 /** @type {string} */
SPClientTemplates.RenderContext_InView.prototype.OfficialFileNames;
 /** @type {string} */
SPClientTemplates.RenderContext_InView.prototype.overrideDeleteConfirmation;
 /** @type {string} */
SPClientTemplates.RenderContext_InView.prototype.overrideFilterQstring;
 /** @type {string} */
SPClientTemplates.RenderContext_InView.prototype.PortalUrl;
 /** @type {?} */
SPClientTemplates.RenderContext_InView.prototype.queryString;
 /** @type {boolean} */
SPClientTemplates.RenderContext_InView.prototype.recursiveView;
 /** @type {number} */
SPClientTemplates.RenderContext_InView.prototype.RecycleBinEnabled;
 /** @type {string} */
SPClientTemplates.RenderContext_InView.prototype.RegionalSettingsTimeZoneBias;
 /** @type {string} */
SPClientTemplates.RenderContext_InView.prototype.rootFolder;
 /** @type {?} */
SPClientTemplates.RenderContext_InView.prototype.rootFolderForDisplay;
 /** @type {?} */
SPClientTemplates.RenderContext_InView.prototype.RowFocusTimerID;
 /** @type {?} */
SPClientTemplates.RenderContext_InView.prototype.SelectAllCbx;
 /** @type {string} */
SPClientTemplates.RenderContext_InView.prototype.SendToLocationName;
 /** @type {string} */
SPClientTemplates.RenderContext_InView.prototype.SendToLocationUrl;
 /** @type {?} */
SPClientTemplates.RenderContext_InView.prototype.serverUrl;
 /** @type {string} */
SPClientTemplates.RenderContext_InView.prototype.SiteTitle;
 /** @type {boolean} */
SPClientTemplates.RenderContext_InView.prototype.StateInitDone;
 /** @type {?} */
SPClientTemplates.RenderContext_InView.prototype.TableCbxFocusHandler;
 /** @type {?} */
SPClientTemplates.RenderContext_InView.prototype.TableMouseOverHandler;
 /** @type {number} */
SPClientTemplates.RenderContext_InView.prototype.TotalListItems;
 /** @type {number} */
SPClientTemplates.RenderContext_InView.prototype.verEnabled;
 /** @type {string} */
SPClientTemplates.RenderContext_InView.prototype.view;
 /** @type {string} */
SPClientTemplates.RenderContext_InView.prototype.viewTitle;
 /** @type {boolean} */
SPClientTemplates.RenderContext_InView.prototype.WorkflowAssociated;
 /** @type {string} */
SPClientTemplates.RenderContext_InView.prototype.wpq;
 /** @type {string} */
SPClientTemplates.RenderContext_InView.prototype.WriteSecurity;
/**
 * @extends {SPClientTemplates.RenderContext_InView}
 * @record
 * @struct
 */
SPClientTemplates.RenderContext_ItemInView = function() {};
 /** @type {!SPClientTemplates.Item} */
SPClientTemplates.RenderContext_ItemInView.prototype.CurrentItem;
 /** @type {number} */
SPClientTemplates.RenderContext_ItemInView.prototype.CurrentItemIdx;
/**
 * @extends {SPClientTemplates.RenderContext_ItemInView}
 * @record
 * @struct
 */
SPClientTemplates.RenderContext_FieldInView = function() {};
 /** @type {(!SPClientTemplates.FieldSchema_InForm|!SPClientTemplates.FieldSchema_InView)} */
SPClientTemplates.RenderContext_FieldInView.prototype.CurrentFieldSchema;
 /** @type {?} */
SPClientTemplates.RenderContext_FieldInView.prototype.CurrentFieldValue;
 /** @type {!Object<string,SPClientTemplates.ClientControlMode>} */
SPClientTemplates.RenderContext_FieldInView.prototype.FieldControlsModes;
 /** @type {!SPClientTemplates.ClientFormContext} */
SPClientTemplates.RenderContext_FieldInView.prototype.FormContext;
 /** @type {string} */
SPClientTemplates.RenderContext_FieldInView.prototype.FormUniqueId;
/**
 * @record
 * @struct
 */
SPClientTemplates.Item = function() {};

/* TODO: IndexSignature: SPClientTemplates */
/**
 * @record
 * @struct
 */
SPClientTemplates.Group = function() {};
 /** @type {!Array<!SPClientTemplates.Item>} */
SPClientTemplates.Group.prototype.Items;

/** @typedef {function(!SPClientTemplates.RenderContext): void} */
SPClientTemplates.RenderCallback;
/**
 * @record
 * @struct
 */
SPClientTemplates.RenderContext = function() {};
 /** @type {number} */
SPClientTemplates.RenderContext.prototype.BaseViewID;
 /** @type {SPClientTemplates.ClientControlMode} */
SPClientTemplates.RenderContext.prototype.ControlMode;
 /** @type {string} */
SPClientTemplates.RenderContext.prototype.CurrentCultureName;
 /** @type {number} */
SPClientTemplates.RenderContext.prototype.CurrentLanguage;
 /** @type {?} */
SPClientTemplates.RenderContext.prototype.CurrentSelectedItems;
 /** @type {string} */
SPClientTemplates.RenderContext.prototype.CurrentUICultureName;
 /** @type {number} */
SPClientTemplates.RenderContext.prototype.ListTemplateType;
 /** @type {(function(!SPClientTemplates.RenderContext): void|!Array<?>)} */
SPClientTemplates.RenderContext.prototype.OnPostRender;
 /** @type {(function(!SPClientTemplates.RenderContext): void|!Array<?>)} */
SPClientTemplates.RenderContext.prototype.OnPreRender;
 /** @type {?} */
SPClientTemplates.RenderContext.prototype.onRefreshFailed;
 /** @type {string} */
SPClientTemplates.RenderContext.prototype.SiteClientTag;
 /** @type {!SPClientTemplates.Templates} */
SPClientTemplates.RenderContext.prototype.Templates;

/**
 * @param {!SPClientTemplates.RenderContext} renderContext
 * @return {string}
 */
SPClientTemplates.RenderContext.prototype.RenderBody = function(renderContext) {};

/**
 * @param {!SPClientTemplates.RenderContext} renderContext
 * @param {string} fieldName
 * @return {string}
 */
SPClientTemplates.RenderContext.prototype.RenderFieldByName = function(renderContext, fieldName) {};

/**
 * @param {!SPClientTemplates.RenderContext} renderContext
 * @return {string}
 */
SPClientTemplates.RenderContext.prototype.RenderFields = function(renderContext) {};

/**
 * @param {!SPClientTemplates.RenderContext} renderContext
 * @return {string}
 */
SPClientTemplates.RenderContext.prototype.RenderFooter = function(renderContext) {};

/**
 * @param {!SPClientTemplates.RenderContext} renderContext
 * @return {string}
 */
SPClientTemplates.RenderContext.prototype.RenderGroups = function(renderContext) {};

/**
 * @param {!SPClientTemplates.RenderContext} renderContext
 * @return {string}
 */
SPClientTemplates.RenderContext.prototype.RenderHeader = function(renderContext) {};

/**
 * @param {!SPClientTemplates.RenderContext} renderContext
 * @return {string}
 */
SPClientTemplates.RenderContext.prototype.RenderItems = function(renderContext) {};

/**
 * @param {!SPClientTemplates.RenderContext} renderContext
 * @return {string}
 */
SPClientTemplates.RenderContext.prototype.RenderView = function(renderContext) {};

/** @typedef {function(!SPClientTemplates.RenderContext_InView): string} */
SPClientTemplates.SingleTemplateCallback;

/** @typedef {function(!SPClientTemplates.RenderContext_GroupInView): string} */
SPClientTemplates.GroupCallback;

/** @typedef {function(!SPClientTemplates.RenderContext): string} */
SPClientTemplates.ItemCallback;

/** @typedef {function(!SPClientTemplates.RenderContext): string} */
SPClientTemplates.FieldCallback;

/** @typedef {function(!SPClientTemplates.RenderContext_FieldInForm): string} */
SPClientTemplates.FieldInFormCallback;

/** @typedef {function(!SPClientTemplates.RenderContext_FieldInView): string} */
SPClientTemplates.FieldInViewCallback;
/**
 * @record
 * @struct
 */
SPClientTemplates.FieldTemplateOverrides = function() {};
 /** @type {function(!SPClientTemplates.RenderContext_FieldInForm): string} */
SPClientTemplates.FieldTemplateOverrides.prototype.DisplayForm;
 /** @type {function(!SPClientTemplates.RenderContext_FieldInForm): string} */
SPClientTemplates.FieldTemplateOverrides.prototype.EditForm;
 /** @type {function(!SPClientTemplates.RenderContext_FieldInForm): string} */
SPClientTemplates.FieldTemplateOverrides.prototype.NewForm;
 /** @type {function(!SPClientTemplates.RenderContext_FieldInView): string} */
SPClientTemplates.FieldTemplateOverrides.prototype.View;
/**
 * @record
 * @struct
 */
SPClientTemplates.FieldTemplates = function() {};

/* TODO: IndexSignature: SPClientTemplates */
/**
 * @record
 * @struct
 */
SPClientTemplates.Templates = function() {};
 /** @type {(string|function(!SPClientTemplates.RenderContext): void)} */
SPClientTemplates.Templates.prototype.View;
 /** @type {(string|function(!SPClientTemplates.RenderContext): void)} */
SPClientTemplates.Templates.prototype.Body;
 /** @type {(string|function(!SPClientTemplates.RenderContext_GroupInView): string)} */
SPClientTemplates.Templates.prototype.Group;
 /** @type {(string|function(!SPClientTemplates.RenderContext): string)} */
SPClientTemplates.Templates.prototype.Item;
 /** @type {(string|function(!SPClientTemplates.RenderContext_InView): string)} */
SPClientTemplates.Templates.prototype.Header;
 /** @type {(string|function(!SPClientTemplates.RenderContext_InView): string)} */
SPClientTemplates.Templates.prototype.Footer;
 /** @type {!SPClientTemplates.FieldTemplates} */
SPClientTemplates.Templates.prototype.Fields;
/**
 * @record
 * @struct
 */
SPClientTemplates.FieldTemplateMap = function() {};

/* TODO: IndexSignature: SPClientTemplates */
/**
 * @record
 * @struct
 */
SPClientTemplates.TemplateOverrides = function() {};
 /** @type {(string|function(!SPClientTemplates.RenderContext): void)} */
SPClientTemplates.TemplateOverrides.prototype.View;
 /** @type {(string|function(!SPClientTemplates.RenderContext): void)} */
SPClientTemplates.TemplateOverrides.prototype.Body;
 /** @type {(string|function(!SPClientTemplates.RenderContext_GroupInView): string)} */
SPClientTemplates.TemplateOverrides.prototype.Group;
 /** @type {(string|function(!SPClientTemplates.RenderContext): string)} */
SPClientTemplates.TemplateOverrides.prototype.Item;
 /** @type {(string|function(!SPClientTemplates.RenderContext_InView): string)} */
SPClientTemplates.TemplateOverrides.prototype.Header;
 /** @type {(string|function(!SPClientTemplates.RenderContext_InView): string)} */
SPClientTemplates.TemplateOverrides.prototype.Footer;
 /** @type {!SPClientTemplates.FieldTemplateMap} */
SPClientTemplates.TemplateOverrides.prototype.Fields;
/**
 * @record
 * @struct
 */
SPClientTemplates.TemplateOverridesOptions = function() {};
 /** @type {!SPClientTemplates.TemplateOverrides} */
SPClientTemplates.TemplateOverridesOptions.prototype.Templates;
 /** @type {(function(!SPClientTemplates.RenderContext): void|!Array<?>)} */
SPClientTemplates.TemplateOverridesOptions.prototype.OnPreRender;
 /** @type {(function(!SPClientTemplates.RenderContext): void|!Array<?>)} */
SPClientTemplates.TemplateOverridesOptions.prototype.OnPostRender;
 /** @type {number} */
SPClientTemplates.TemplateOverridesOptions.prototype.ViewStyle;
 /** @type {number} */
SPClientTemplates.TemplateOverridesOptions.prototype.ListTemplateType;
 /** @type {(string|number)} */
SPClientTemplates.TemplateOverridesOptions.prototype.BaseViewID;
/**
 * @constructor
 * @struct
 */
SPClientTemplates.TemplateManager = function() {};

/**
 * @param {!SPClientTemplates.TemplateOverridesOptions} renderCtx
 * @return {void}
 */
SPClientTemplates.TemplateManager.RegisterTemplateOverrides = function(renderCtx) {};

/**
 * @param {!SPClientTemplates.RenderContext} renderCtx
 * @return {!SPClientTemplates.Templates}
 */
SPClientTemplates.TemplateManager.GetTemplates = function(renderCtx) {};
/**
 * @record
 * @struct
 */
SPClientTemplates.ClientUserValue = function() {};
 /** @type {number} */
SPClientTemplates.ClientUserValue.prototype.lookupId;
 /** @type {string} */
SPClientTemplates.ClientUserValue.prototype.lookupValue;
 /** @type {string} */
SPClientTemplates.ClientUserValue.prototype.displayStr;
 /** @type {string} */
SPClientTemplates.ClientUserValue.prototype.email;
 /** @type {string} */
SPClientTemplates.ClientUserValue.prototype.sip;
 /** @type {string} */
SPClientTemplates.ClientUserValue.prototype.title;
 /** @type {string} */
SPClientTemplates.ClientUserValue.prototype.picture;
 /** @type {string} */
SPClientTemplates.ClientUserValue.prototype.department;
 /** @type {string} */
SPClientTemplates.ClientUserValue.prototype.jobTitle;
/**
 * @record
 * @struct
 */
SPClientTemplates.ClientLookupValue = function() {};
 /** @type {number} */
SPClientTemplates.ClientLookupValue.prototype.LookupId;
 /** @type {string} */
SPClientTemplates.ClientLookupValue.prototype.LookupValue;
/**
 * @record
 * @struct
 */
SPClientTemplates.ClientUrlValue = function() {};
 /** @type {string} */
SPClientTemplates.ClientUrlValue.prototype.URL;
 /** @type {string} */
SPClientTemplates.ClientUrlValue.prototype.Description;
/**
 * @constructor
 * @struct
 */
SPClientTemplates.Utility = function() {};
 /** @type {string} */
SPClientTemplates.Utility.UserLookupDelimitString;
 /** @type {string} */
SPClientTemplates.Utility.UserMultiValueDelimitString;

/**
 * @param {!SPClientTemplates.TemplateOverridesOptions} renderCtx
 * @return {?}
 */
SPClientTemplates.Utility.ComputeRegisterTypeInfo = function(renderCtx) {};

/**
 * @param {SPClientTemplates.ClientControlMode} mode
 * @return {string}
 */
SPClientTemplates.Utility.ControlModeToString = function(mode) {};

/**
 * @param {SPClientTemplates.FileSystemObjectType} fileSystemObjectType
 * @return {string}
 */
SPClientTemplates.Utility.FileSystemObjectTypeToString = function(fileSystemObjectType) {};

/**
 * @param {SPClientTemplates.ChoiceFormatType} fileSystemObjectType
 * @return {string}
 */
SPClientTemplates.Utility.ChoiceFormatTypeToString = function(fileSystemObjectType) {};

/**
 * @param {SPClientTemplates.RichTextMode} fileSystemObjectType
 * @return {string}
 */
SPClientTemplates.Utility.RichTextModeToString = function(fileSystemObjectType) {};

/**
 * @param {number} mode
 * @return {boolean}
 */
SPClientTemplates.Utility.IsValidControlMode = function(mode) {};

/**
 * Removes leading and trailing spaces
 * @param {string} str
 * @return {string}
 */
SPClientTemplates.Utility.Trim = function(str) {};

/**
 * Creates SP.ClientContext based on the specified Web URL. If the SP.Runtime.js script is not loaded, returns null
 * @param {string} webUrl
 * @return {!SP.ClientContext}
 */
SPClientTemplates.Utility.InitContext = function(webUrl) {};

/**
 * @param {!HTMLElement} control
 * @return {?}
 */
SPClientTemplates.Utility.GetControlOptions = function(control) {};

/**
 * @param {string} userStr
 * @return {!Array<!SPClientTemplates.ClientUserValue>}
 */
SPClientTemplates.Utility.TryParseInitialUserValue = function(userStr) {};

/**
 * Tries to resolve user names from string. Pushes either ClientUserValue (if resolved successfully) or original string (if not) to the resulting array.
 * @param {string} userStr
 * @param {string} separator
 * @return {!Array<?>}
 */
SPClientTemplates.Utility.TryParseUserControlValue = function(userStr, separator) {};

/**
 * @param {!SPClientTemplates.RenderContext} context
 * @return {void}
 */
SPClientTemplates.Utility.GetPropertiesFromPageContextInfo = function(context) {};

/**
 * Replaces tokens "~site/", "~sitecollection/", "~sitecollectionmasterpagegallery", "{lcid}", "{locale}" and "{siteclienttag}" with appropriate context values
 * @param {string} tokenUrl
 * @return {string}
 */
SPClientTemplates.Utility.ReplaceUrlTokens = function(tokenUrl) {};

/**
 * @param {string} valueStr
 * @return {!SPClientTemplates.ClientLookupValue}
 */
SPClientTemplates.Utility.ParseLookupValue = function(valueStr) {};

/**
 * @param {string} valueStr
 * @return {!Array<!SPClientTemplates.ClientLookupValue>}
 */
SPClientTemplates.Utility.ParseMultiLookupValues = function(valueStr) {};

/**
 * Represents lookup values array in some strange format
 * @param {!Array<!SPClientTemplates.ClientLookupValue>} choiceArray
 * @param {boolean} isMultiLookup
 * @param {boolean} setGroupDesc
 * @return {string}
 */
SPClientTemplates.Utility.BuildLookupValuesAsString = function(choiceArray, isMultiLookup, setGroupDesc) {};

/**
 * @param {string} value
 * @return {!SPClientTemplates.ClientUrlValue}
 */
SPClientTemplates.Utility.ParseURLValue = function(value) {};

/**
 * @param {!SPClientTemplates.RenderContext_Form} context
 * @return {!SPClientTemplates.ClientFormContext}
 */
SPClientTemplates.Utility.GetFormContextForCurrentField = function(context) {};
/**
 * @constructor
 * @struct
 */
SPClientTemplates.ClientFormContext = function() {};
 /** @type {?} */
SPClientTemplates.ClientFormContext.prototype.fieldValue;
 /** @type {!SPClientTemplates.FieldSchema_InForm} */
SPClientTemplates.ClientFormContext.prototype.fieldSchema;
 /** @type {string} */
SPClientTemplates.ClientFormContext.prototype.fieldName;
 /** @type {number} */
SPClientTemplates.ClientFormContext.prototype.controlMode;
 /** @type {{AllowScriptableWebParts: boolean, CurrentUserId: number, EffectivePresenceEnabled: boolean, LCID: string, PermissionCustomizePages: boolean, WebUrl: string}} */
SPClientTemplates.ClientFormContext.prototype.webAttributes;
 /** @type {{ExternalListItem: boolean, FsObjType: number, Id: number, Url: string}} */
SPClientTemplates.ClientFormContext.prototype.itemAttributes;
 /** @type {{BaseType: number, DefaultItemOpen: number, Direction: string, EnableVesioning: boolean, Id: string}} */
SPClientTemplates.ClientFormContext.prototype.listAttributes;

/**
 * @param {string} fieldname
 * @param {function(): void} callback
 * @return {void}
 */
SPClientTemplates.ClientFormContext.prototype.registerInitCallback = function(fieldname, callback) {};

/**
 * @param {string} fieldname
 * @param {function(): void} callback
 * @return {void}
 */
SPClientTemplates.ClientFormContext.prototype.registerFocusCallback = function(fieldname, callback) {};

/**
 * @param {string} fieldname
 * @param {function(?): void} callback
 * @return {void}
 */
SPClientTemplates.ClientFormContext.prototype.registerValidationErrorCallback = function(fieldname, callback) {};

/**
 * @param {string} fieldname
 * @param {function(): ?} callback
 * @return {void}
 */
SPClientTemplates.ClientFormContext.prototype.registerGetValueCallback = function(fieldname, callback) {};

/**
 * @param {string} fieldname
 * @param {?} value
 * @return {void}
 */
SPClientTemplates.ClientFormContext.prototype.updateControlValue = function(fieldname, value) {};

/**
 * @param {string} fieldname
 * @param {!SPClientForms.ClientValidation.ValidatorSet} validator
 * @return {void}
 */
SPClientTemplates.ClientFormContext.prototype.registerClientValidator = function(fieldname, validator) {};

/**
 * @param {string} fieldname
 * @param {function(?): void} callback
 * @return {void}
 */
SPClientTemplates.ClientFormContext.prototype.registerHasValueChangedCallback = function(fieldname, callback) {};

/**
 * @param {!SPClientTemplates.RenderContext_ItemInView} renderCtx
 * @return {string}
 */
function GenerateIID(renderCtx) {}

/**
 * @param {!SPClientTemplates.RenderContext_InView} renderCtx
 * @param {!SPClientTemplates.Item} listItem
 * @return {string}
 */
function GenerateIIDForListItem(renderCtx, listItem) {}

/**
 * @param {string} nodeId
 * @param {?} errorResult
 * @return {void}
 */
function SPFormControl_AppendValidationErrorMessage(nodeId, errorResult) {}

/**
 * @param {?} template
 * @param {?} context
 * @return {string}
 */
function CoreRender(template, context) {}
/** @const */
var SPClientForms = {};
/** @const */
SPClientForms.ClientValidation = {};

/**
 * @constructor
 * @struct
 * @param {boolean} hasErrors
 * @param {string} errorMsg
 */
SPClientForms.ClientValidation.ValidationResult = function(hasErrors, errorMsg) {};
/**
 * @constructor
 * @struct
 */
SPClientForms.ClientValidation.ValidatorSet = function() {};

/**
 * @param {!SPClientForms.ClientValidation.IValidator} validator
 * @return {void}
 */
SPClientForms.ClientValidation.ValidatorSet.prototype.RegisterValidator = function(validator) {};
/**
 * @record
 * @struct
 */
SPClientForms.ClientValidation.IValidator = function() {};

/**
 * @param {?} value
 * @return {!SPClientForms.ClientValidation.ValidationResult}
 */
SPClientForms.ClientValidation.IValidator.prototype.Validate = function(value) {};
/**
 * @implements {SPClientForms.ClientValidation.IValidator}
 * @constructor
 * @struct
 */
SPClientForms.ClientValidation.RequiredValidator = function() {};

/**
 * @param {?} value
 * @return {!SPClientForms.ClientValidation.ValidationResult}
 */
SPClientForms.ClientValidation.RequiredValidator.prototype.Validate = function(value) {};
/**
 * @implements {SPClientForms.ClientValidation.IValidator}
 * @constructor
 * @struct
 */
SPClientForms.ClientValidation.RequiredFileValidator = function() {};

/**
 * @param {?} value
 * @return {!SPClientForms.ClientValidation.ValidationResult}
 */
SPClientForms.ClientValidation.RequiredFileValidator.prototype.Validate = function(value) {};
/**
 * @implements {SPClientForms.ClientValidation.IValidator}
 * @constructor
 * @struct
 */
SPClientForms.ClientValidation.RequiredRichTextValidator = function() {};

/**
 * @param {?} value
 * @return {!SPClientForms.ClientValidation.ValidationResult}
 */
SPClientForms.ClientValidation.RequiredRichTextValidator.prototype.Validate = function(value) {};
/**
 * @implements {SPClientForms.ClientValidation.IValidator}
 * @constructor
 * @struct
 */
SPClientForms.ClientValidation.MaxLengthUrlValidator = function() {};

/**
 * @param {?} value
 * @return {!SPClientForms.ClientValidation.ValidationResult}
 */
SPClientForms.ClientValidation.MaxLengthUrlValidator.prototype.Validate = function(value) {};

/** @const */
SPClientForms.FormManagerEvents = {};
/** @const {number} */
SPClientForms.FormManagerEvents.Event_OnControlValueChanged;
/** @const {number} */
SPClientForms.FormManagerEvents.Event_OnControlInitializedCallback;
/** @const {number} */
SPClientForms.FormManagerEvents.Event_OnControlFocusSetCallback;
/** @const {number} */
SPClientForms.FormManagerEvents.Event_GetControlValueCallback;
/** @const {number} */
SPClientForms.FormManagerEvents.Event_OnControlValidationError;
/** @const {number} */
SPClientForms.FormManagerEvents.Event_RegisterControlValidator;
/** @const {number} */
SPClientForms.FormManagerEvents.Event_GetHasValueChangedCallback;

/**
 * @constructor
 * @struct
 * @param {string} qualifier
 */
SPClientForms.ClientForm = function(qualifier) {};

/**
 * @return {void}
 */
SPClientForms.ClientForm.prototype.RenderClientForm = function() {};

/**
 * @return {boolean}
 */
SPClientForms.ClientForm.prototype.SubmitClientForm = function() {};

/**
 * @param {SPClientForms.FormManagerEvents} eventName
 * @param {string} fldName
 * @param {?} eventArg
 * @return {void}
 */
SPClientForms.ClientForm.prototype.NotifyControlEvent = function(eventName, fldName, eventArg) {};
/**
 * @constructor
 * @struct
 */
SPClientForms.ClientFormManager = function() {};

/**
 * @param {string} qualifier
 * @return {!SPClientForms.ClientForm}
 */
SPClientForms.ClientFormManager.GetClientForm = function(qualifier) {};

/**
 * @param {string} qualifier
 * @return {void}
 */
SPClientForms.ClientFormManager.RegisterClientForm = function(qualifier) {};

/**
 * @param {string} qualifier
 * @return {boolean}
 */
SPClientForms.ClientFormManager.SubmitClientForm = function(qualifier) {};
/**
 * @constructor
 * @struct
 */
function SPMgr() {}

/**
 * @param {!Object<string,?>} listItem
 * @param {string} fieldName
 * @return {boolean}
 */
SPMgr.prototype.NewGroup = function(listItem, fieldName) {};

/**
 * @param {!SPClientTemplates.RenderContext} renderCtx
 * @param {!SPClientTemplates.FieldSchema} field
 * @return {string}
 */
SPMgr.prototype.RenderHeader = function(renderCtx, field) {};

/**
 * @param {!SPClientTemplates.RenderContext} renderCtx
 * @param {!SPClientTemplates.FieldSchema} field
 * @param {!Object<string,?>} listItem
 * @param {!SPClientTemplates.ListSchema} listSchema
 * @return {string}
 */
SPMgr.prototype.RenderField = function(renderCtx, field, listItem, listSchema) {};

/**
 * @param {!SPClientTemplates.RenderContext} renderCtx
 * @param {string} fieldName
 * @param {!Object<string,?>} listItem
 * @param {!SPClientTemplates.ListSchema} listSchema
 * @return {string}
 */
SPMgr.prototype.RenderFieldByName = function(renderCtx, fieldName, listItem, listSchema) {};
 /** @type {!SPMgr} */
var spMgr;

/**
 * @param {!SPClientTemplates.RenderContext_FieldInForm} ctx
 * @return {string}
 */
function SPField_FormDisplay_Default(ctx) {}

/**
 * @param {!SPClientTemplates.RenderContext_FieldInForm} ctx
 * @return {string}
 */
function SPField_FormDisplay_DefaultNoEncode(ctx) {}

/**
 * @param {!SPClientTemplates.RenderContext_FieldInForm} ctx
 * @return {string}
 */
function SPField_FormDisplay_Empty(ctx) {}

/**
 * @param {!SPClientTemplates.RenderContext_FieldInForm} ctx
 * @return {string}
 */
function SPFieldText_Edit(ctx) {}

/**
 * @param {!SPClientTemplates.RenderContext_FieldInForm} ctx
 * @return {string}
 */
function SPFieldNumber_Edit(ctx) {}

/**
 * @param {!SPClientTemplates.RenderContext_FieldInForm} ctx
 * @return {string}
 */
function SPFieldBoolean_Edit(ctx) {}

/**
 * @param {!SPClientTemplates.RenderContext_FieldInForm} ctx
 * @return {string}
 */
function SPFieldNote_Display(ctx) {}

/**
 * @param {!SPClientTemplates.RenderContext_FieldInForm} ctx
 * @return {string}
 */
function SPFieldNote_Edit(ctx) {}

/**
 * @param {!SPClientTemplates.RenderContext_FieldInForm} ctx
 * @return {string}
 */
function SPFieldFile_Display(ctx) {}

/**
 * @param {!SPClientTemplates.RenderContext_FieldInForm} ctx
 * @return {string}
 */
function SPFieldFile_Edit(ctx) {}

/**
 * @param {!SPClientTemplates.RenderContext_FieldInForm} ctx
 * @return {string}
 */
function SPFieldChoice_Edit(ctx) {}

/**
 * @param {!SPClientTemplates.RenderContext_FieldInForm} ctx
 * @return {string}
 */
function SPFieldChoice_Dropdown_Edit(ctx) {}

/**
 * @param {!SPClientTemplates.RenderContext_FieldInForm} ctx
 * @return {string}
 */
function SPFieldChoice_Radio_Edit(ctx) {}

/**
 * @param {!SPClientTemplates.RenderContext_FieldInForm} ctx
 * @return {string}
 */
function SPFieldMultiChoice_Edit(ctx) {}

/**
 * @param {!SPClientTemplates.RenderContext_FieldInForm} ctx
 * @return {string}
 */
function SPFieldDateTime_Display(ctx) {}

/**
 * @param {!SPClientTemplates.RenderContext_FieldInForm} ctx
 * @return {string}
 */
function SPFieldDateTime_Edit(ctx) {}

/**
 * @param {!SPClientTemplates.RenderContext_FieldInForm} ctx
 * @return {string}
 */
function SPFieldUrl_Display(ctx) {}

/**
 * @param {!SPClientTemplates.RenderContext_FieldInForm} ctx
 * @return {string}
 */
function SPFieldUrl_Edit(ctx) {}

/**
 * @param {!SPClientTemplates.RenderContext_FieldInForm} ctx
 * @return {string}
 */
function SPFieldUser_Display(ctx) {}

/**
 * @param {!SPClientTemplates.RenderContext_FieldInForm} ctx
 * @return {string}
 */
function SPFieldUserMulti_Display(ctx) {}

/**
 * @param {!SPClientTemplates.RenderContext_FieldInForm} ctx
 * @return {string}
 */
function SPClientPeoplePickerCSRTemplate(ctx) {}

/**
 * @param {!SPClientTemplates.RenderContext_FieldInForm} ctx
 * @return {string}
 */
function SPFieldLookup_Display(ctx) {}

/**
 * @param {!SPClientTemplates.RenderContext_FieldInForm} ctx
 * @return {string}
 */
function SPFieldLookup_Edit(ctx) {}

/**
 * @param {!SPClientTemplates.RenderContext_FieldInForm} ctx
 * @return {string}
 */
function SPFieldLookupMulti_Edit(ctx) {}

/**
 * @param {!SPClientTemplates.RenderContext_FieldInForm} ctx
 * @return {string}
 */
function SPFieldAttachments_Default(ctx) {}
/** @const */
var SPAnimation = {};

/** @const */
SPAnimation.Attribute = {};
/** @const {number} */
SPAnimation.Attribute.PositionX;
/** @const {number} */
SPAnimation.Attribute.PositionY;
/** @const {number} */
SPAnimation.Attribute.Height;
/** @const {number} */
SPAnimation.Attribute.Width;
/** @const {number} */
SPAnimation.Attribute.Opacity;

/** @const */
SPAnimation.ID = {};
/** @const {number} */
SPAnimation.ID.Basic_Show;
/** @const {number} */
SPAnimation.ID.Basic_SlowShow;
/** @const {number} */
SPAnimation.ID.Basic_Fade;
/** @const {number} */
SPAnimation.ID.Basic_Move;
/** @const {number} */
SPAnimation.ID.Basic_Size;
/** @const {number} */
SPAnimation.ID.Content_SlideInFadeInRight;
/** @const {number} */
SPAnimation.ID.Content_SlideInFadeInRightInc;
/** @const {number} */
SPAnimation.ID.Content_SlideOutFadeOutRight;
/** @const {number} */
SPAnimation.ID.Content_SlideInFadeInLeft;
/** @const {number} */
SPAnimation.ID.Content_SlideInFadeInLeftInc;
/** @const {number} */
SPAnimation.ID.SmallObject_SlideInFadeInTop;
/** @const {number} */
SPAnimation.ID.SmallObject_SlideInFadeInLeft;
/** @const {number} */
SPAnimation.ID.Test_Instant;
/** @const {number} */
SPAnimation.ID.Test_Hold;
/** @const {number} */
SPAnimation.ID.Basic_Opacity;
/** @const {number} */
SPAnimation.ID.Basic_QuickShow;
/** @const {number} */
SPAnimation.ID.Basic_QuickFade;
/** @const {number} */
SPAnimation.ID.Content_SlideInFadeInGeneric;
/** @const {number} */
SPAnimation.ID.Basic_StrikeThrough;
/** @const {number} */
SPAnimation.ID.SmallObject_SlideInFadeInBottom;
/** @const {number} */
SPAnimation.ID.SmallObject_SlideOutFadeOutBottom;
/** @const {number} */
SPAnimation.ID.Basic_QuickSize;
/**
 * @constructor
 * @struct
 */
SPAnimation.Settings = function() {};

/**
 * @return {void}
 */
SPAnimation.Settings.DisableAnimation = function() {};

/**
 * @return {void}
 */
SPAnimation.Settings.DisableSessionAnimation = function() {};

/**
 * @return {boolean}
 */
SPAnimation.Settings.IsAnimationEnabled = function() {};
/**
 * @constructor
 * @struct
 */
SPAnimation.State = function() {};

/**
 * @param {SPAnimation.Attribute} attributeId
 * @param {number} value
 * @return {void}
 */
SPAnimation.State.prototype.SetAttribute = function(attributeId, value) {};

/**
 * @param {SPAnimation.Attribute} attributeId
 * @return {number}
 */
SPAnimation.State.prototype.GetAttribute = function(attributeId) {};

/**
 * @param {SPAnimation.Attribute} attributeId
 * @return {number}
 */
SPAnimation.State.prototype.GetDataIndex = function(attributeId) {};

/**
 * @constructor
 * @struct
 * @param {SPAnimation.ID} animationID
 * @param {number} delay
 * @param {(!HTMLElement|!Array<!HTMLElement>)} element
 * @param {!SPAnimation.State} finalState
 * @param {function(?): void=} finishFunc
 * @param {?=} data
 */
SPAnimation.Object = function(animationID, delay, element, finalState, finishFunc, data) {};

/**
 * @return {void}
 */
SPAnimation.Object.prototype.RunAnimation = function() {};
/** @const */
var SPAnimationUtility = {};
/**
 * @constructor
 * @struct
 */
SPAnimationUtility.BasicAnimator = function() {};

/**
 * @param {!HTMLElement} element
 * @param {function(?): void=} finishFunc
 * @param {?=} data
 * @return {void}
 */
SPAnimationUtility.BasicAnimator.FadeIn = function(element, finishFunc, data) {};

/**
 * @param {!HTMLElement} element
 * @param {function(?): void=} finishFunc
 * @param {?=} data
 * @return {void}
 */
SPAnimationUtility.BasicAnimator.FadeOut = function(element, finishFunc, data) {};

/**
 * @param {!HTMLElement} element
 * @param {number} posX
 * @param {number} posY
 * @param {function(?): void=} finishFunc
 * @param {?=} data
 * @return {void}
 */
SPAnimationUtility.BasicAnimator.Move = function(element, posX, posY, finishFunc, data) {};

/**
 * @param {!HTMLElement} element
 * @param {number} strikeThroughWidth
 * @param {function(?): void=} finishFunc
 * @param {?=} data
 * @return {void}
 */
SPAnimationUtility.BasicAnimator.StrikeThrough = function(element, strikeThroughWidth, finishFunc, data) {};

/**
 * @param {!HTMLElement} element
 * @param {number} newHeight
 * @param {number} newWidth
 * @param {function(?): void=} finishFunc
 * @param {?=} data
 * @return {void}
 */
SPAnimationUtility.BasicAnimator.Resize = function(element, newHeight, newWidth, finishFunc, data) {};

/**
 * @param {!HTMLElement} element
 * @param {number} newHeight
 * @param {number} newWidth
 * @param {function(?): void} finishFunc
 * @param {?} data
 * @param {SPAnimation.ID} animationId
 * @return {void}
 */
SPAnimationUtility.BasicAnimator.CommonResize = function(element, newHeight, newWidth, finishFunc, data, animationId) {};

/**
 * @param {!HTMLElement} element
 * @param {number} newHeight
 * @param {number} newWidth
 * @param {function(?): void=} finishFunc
 * @param {?=} data
 * @return {void}
 */
SPAnimationUtility.BasicAnimator.QuickResize = function(element, newHeight, newWidth, finishFunc, data) {};

/**
 * @param {!HTMLElement} element
 * @param {number} newHeight
 * @param {number} newWidth
 * @param {function(): void} finishFunc
 * @param {boolean} fAddToEnd
 * @return {void}
 */
SPAnimationUtility.BasicAnimator.ResizeContainerAndFillContent = function(element, newHeight, newWidth, finishFunc, fAddToEnd) {};

/**
 * @return {{x: number, y: number}}
 */
SPAnimationUtility.BasicAnimator.GetWindowScrollPosition = function() {};

/**
 * @param {!HTMLElement} element
 * @return {number}
 */
SPAnimationUtility.BasicAnimator.GetLeftOffset = function(element) {};

/**
 * @param {!HTMLElement} element
 * @return {number}
 */
SPAnimationUtility.BasicAnimator.GetTopOffset = function(element) {};

/**
 * @param {!HTMLElement} element
 * @return {number}
 */
SPAnimationUtility.BasicAnimator.GetRightOffset = function(element) {};

/**
 * @param {!HTMLElement} element
 * @param {number} topValue
 * @param {number} leftValue
 * @param {number} heightValue
 * @param {number} widthValue
 * @return {void}
 */
SPAnimationUtility.BasicAnimator.PositionElement = function(element, topValue, leftValue, heightValue, widthValue) {};

/**
 * @param {!HTMLElement} element
 * @return {void}
 */
SPAnimationUtility.BasicAnimator.PositionAbsolute = function(element) {};

/**
 * @param {!HTMLElement} element
 * @return {void}
 */
SPAnimationUtility.BasicAnimator.PositionRelative = function(element) {};

/**
 * @param {!HTMLElement} element
 * @param {number} topValue
 * @param {number} leftValue
 * @param {number} heightValue
 * @param {number} widthValue
 * @return {void}
 */
SPAnimationUtility.BasicAnimator.PositionRelativeExact = function(element, topValue, leftValue, heightValue, widthValue) {};

/**
 * @param {!HTMLElement} element
 * @param {number} topValue
 * @param {number} leftValue
 * @param {number} heightValue
 * @param {number} widthValue
 * @return {void}
 */
SPAnimationUtility.BasicAnimator.PositionAbsoluteExact = function(element, topValue, leftValue, heightValue, widthValue) {};

/**
 * @param {!HTMLElement} element
 * @return {boolean}
 */
SPAnimationUtility.BasicAnimator.IsPositioned = function(element) {};
/**
 * @record
 * @struct
 */
function IEnumerator() {}

/**
 * @return {T}
 */
IEnumerator.prototype.get_current = function() {};

/**
 * @return {boolean}
 */
IEnumerator.prototype.moveNext = function() {};

/**
 * @return {void}
 */
IEnumerator.prototype.reset = function() {};
/**
 * @record
 * @struct
 */
function IEnumerable() {}

/**
 * @return {!IEnumerator<T>}
 */
IEnumerable.prototype.getEnumerator = function() {};
/**
 * @constructor
 * @struct
 */
SP.ScriptUtility = function() {};

/**
 * @param {string} str
 * @return {boolean}
 */
SP.ScriptUtility.isNullOrEmptyString = function(str) {};

/**
 * @param {?} obj
 * @return {boolean}
 */
SP.ScriptUtility.isNullOrUndefined = function(obj) {};

/**
 * @param {?} obj
 * @return {boolean}
 */
SP.ScriptUtility.isUndefined = function(obj) {};

/**
 * @param {number} n
 * @return {number}
 */
SP.ScriptUtility.truncateToInt = function(n) {};

/**
 * @constructor
 * @struct
 * @param {string} guidText
 */
SP.Guid = function(guidText) {};

/**
 * @return {!SP.Guid}
 */
SP.Guid.get_empty = function() {};

/**
 * @return {!SP.Guid}
 */
SP.Guid.newGuid = function() {};

/**
 * @param {string} uuid
 * @return {boolean}
 */
SP.Guid.isValid = function(uuid) {};

/**
 * @param {string=} format
 * @return {string}
 */
SP.Guid.prototype.toString = function(format) {};

/**
 * @param {!SP.Guid} uuid
 * @return {boolean}
 */
SP.Guid.prototype.equals = function(uuid) {};

/**
 * @return {string}
 */
SP.Guid.prototype.ToSerialized = function() {};

/** @const */
SP.PermissionKind = {};
/** @const {number} */
SP.PermissionKind.emptyMask;
/** @const {number} */
SP.PermissionKind.viewListItems;
/** @const {number} */
SP.PermissionKind.addListItems;
/** @const {number} */
SP.PermissionKind.editListItems;
/** @const {number} */
SP.PermissionKind.deleteListItems;
/** @const {number} */
SP.PermissionKind.approveItems;
/** @const {number} */
SP.PermissionKind.openItems;
/** @const {number} */
SP.PermissionKind.viewVersions;
/** @const {number} */
SP.PermissionKind.deleteVersions;
/** @const {number} */
SP.PermissionKind.cancelCheckout;
/** @const {number} */
SP.PermissionKind.managePersonalViews;
/** @const {number} */
SP.PermissionKind.manageLists;
/** @const {number} */
SP.PermissionKind.viewFormPages;
/** @const {number} */
SP.PermissionKind.anonymousSearchAccessList;
/** @const {number} */
SP.PermissionKind.open;
/** @const {number} */
SP.PermissionKind.viewPages;
/** @const {number} */
SP.PermissionKind.addAndCustomizePages;
/** @const {number} */
SP.PermissionKind.applyThemeAndBorder;
/** @const {number} */
SP.PermissionKind.applyStyleSheets;
/** @const {number} */
SP.PermissionKind.viewUsageData;
/** @const {number} */
SP.PermissionKind.createSSCSite;
/** @const {number} */
SP.PermissionKind.manageSubwebs;
/** @const {number} */
SP.PermissionKind.createGroups;
/** @const {number} */
SP.PermissionKind.managePermissions;
/** @const {number} */
SP.PermissionKind.browseDirectories;
/** @const {number} */
SP.PermissionKind.browseUserInfo;
/** @const {number} */
SP.PermissionKind.addDelPrivateWebParts;
/** @const {number} */
SP.PermissionKind.updatePersonalWebParts;
/** @const {number} */
SP.PermissionKind.manageWeb;
/** @const {number} */
SP.PermissionKind.anonymousSearchAccessWebLists;
/** @const {number} */
SP.PermissionKind.useClientIntegration;
/** @const {number} */
SP.PermissionKind.useRemoteAPIs;
/** @const {number} */
SP.PermissionKind.manageAlerts;
/** @const {number} */
SP.PermissionKind.createAlerts;
/** @const {number} */
SP.PermissionKind.editMyUserInfo;
/** @const {number} */
SP.PermissionKind.enumeratePermissions;
/** @const {number} */
SP.PermissionKind.fullMask;

/**
 * @constructor
 * @struct
 */
SP.BaseCollection = function() {};

/**
 * @return {!IEnumerator<T>}
 */
SP.BaseCollection.prototype.getEnumerator = function() {};

/**
 * @return {number}
 */
SP.BaseCollection.prototype.get_count = function() {};

/**
 * @param {number} index
 * @return {T}
 */
SP.BaseCollection.prototype.itemAtIndex = function(index) {};
/**
 * @record
 * @struct
 */
SP.IFromJson = function() {};

/**
 * @param {?} initValue
 * @return {void}
 */
SP.IFromJson.prototype.fromJson = function(initValue) {};

/**
 * @param {?} initValue
 * @return {boolean}
 */
SP.IFromJson.prototype.customFromJson = function(initValue) {};

/**
 * @constructor
 * @struct
 * @param {string=} base64Str
 */
SP.Base64EncodedByteArray = function(base64Str) {};

/**
 * @return {number}
 */
SP.Base64EncodedByteArray.prototype.get_length = function() {};

/**
 * @return {string}
 */
SP.Base64EncodedByteArray.prototype.toBase64String = function() {};

/**
 * @param {?} b
 * @return {void}
 */
SP.Base64EncodedByteArray.prototype.append = function(b) {};

/**
 * @param {number} index
 * @return {?}
 */
SP.Base64EncodedByteArray.prototype.getByteAt = function(index) {};

/**
 * @param {number} index
 * @param {?} b
 * @return {void}
 */
SP.Base64EncodedByteArray.prototype.setByteAt = function(index, b) {};
/**
 * @constructor
 * @struct
 */
SP.ConditionalScopeBase = function() {};

/**
 * @return {?}
 */
SP.ConditionalScopeBase.prototype.startScope = function() {};

/**
 * @return {?}
 */
SP.ConditionalScopeBase.prototype.startIfTrue = function() {};

/**
 * @return {?}
 */
SP.ConditionalScopeBase.prototype.startIfFalse = function() {};

/**
 * @return {boolean}
 */
SP.ConditionalScopeBase.prototype.get_testResult = function() {};

/**
 * @param {?} initValue
 * @return {void}
 */
SP.ConditionalScopeBase.prototype.fromJson = function(initValue) {};

/**
 * @param {?} initValue
 * @return {boolean}
 */
SP.ConditionalScopeBase.prototype.customFromJson = function(initValue) {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientObject} clientObject
 * @param {string} propertyName
 * @param {string} comparisonOperator
 * @param {?} valueToCompare
 * @param {boolean=} allowAllActions
 */
SP.ClientObjectPropertyConditionalScope = function(clientObject, propertyName, comparisonOperator, valueToCompare, allowAllActions) {};

/**
 * @constructor
 * @struct
 */
SP.ClientResult = function() {};

/**
 * @return {T}
 */
SP.ClientResult.prototype.get_value = function() {};

/**
 * @param {T} value
 * @return {void}
 */
SP.ClientResult.prototype.setValue = function(value) {};

/**
 * @constructor
 * @struct
 */
SP.BooleanResult = function() {};

/**
 * @return {boolean}
 */
SP.BooleanResult.prototype.get_value = function() {};

/**
 * @constructor
 * @struct
 */
SP.CharResult = function() {};

/**
 * @return {?}
 */
SP.CharResult.prototype.get_value = function() {};

/**
 * @constructor
 * @struct
 */
SP.IntResult = function() {};

/**
 * @return {number}
 */
SP.IntResult.prototype.get_value = function() {};

/**
 * @constructor
 * @struct
 */
SP.DoubleResult = function() {};

/**
 * @return {number}
 */
SP.DoubleResult.prototype.get_value = function() {};

/**
 * @constructor
 * @struct
 */
SP.StringResult = function() {};

/**
 * @return {string}
 */
SP.StringResult.prototype.get_value = function() {};

/**
 * @constructor
 * @struct
 */
SP.DateTimeResult = function() {};

/**
 * @return {!Date}
 */
SP.DateTimeResult.prototype.get_value = function() {};

/**
 * @constructor
 * @struct
 */
SP.GuidResult = function() {};

/**
 * @return {!SP.Guid}
 */
SP.GuidResult.prototype.get_value = function() {};

/**
 * @constructor
 * @struct
 */
SP.JsonObjectResult = function() {};

/**
 * @return {?}
 */
SP.JsonObjectResult.prototype.get_value = function() {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientResult<T>} dict
 */
SP.ClientDictionaryResultHandler = function(dict) {};
/**
 * @constructor
 * @struct
 */
SP.ClientUtility = function() {};

/**
 * @param {string} url
 * @return {string}
 */
SP.ClientUtility.urlPathEncodeForXmlHttpRequest = function(url) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {string} typeId
 * @param {!Array<?>} args
 * @return {!SP.ObjectPath}
 */
SP.ClientUtility.getOrCreateObjectPathForConstructor = function(context, typeId, args) {};

/**
 * @constructor
 * @struct
 */
SP.XElement = function() {};

/**
 * @return {string}
 */
SP.XElement.prototype.get_name = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.XElement.prototype.set_name = function(value) {};

/**
 * @return {?}
 */
SP.XElement.prototype.get_attributes = function() {};

/**
 * @param {?} value
 * @return {void}
 */
SP.XElement.prototype.set_attributes = function(value) {};

/**
 * @return {?}
 */
SP.XElement.prototype.get_children = function() {};

/**
 * @param {?} value
 * @return {void}
 */
SP.XElement.prototype.set_children = function(value) {};

/**
 * @constructor
 * @struct
 */
SP.ClientXElement = function() {};

/**
 * @return {!SP.XElement}
 */
SP.ClientXElement.prototype.get_element = function() {};

/**
 * @param {!SP.XElement} value
 * @return {void}
 */
SP.ClientXElement.prototype.set_element = function(value) {};

/**
 * @constructor
 * @struct
 */
SP.ClientXDocument = function() {};

/**
 * @return {!SP.XElement}
 */
SP.ClientXDocument.prototype.get_root = function() {};

/**
 * @param {!SP.XElement} value
 * @return {void}
 */
SP.ClientXDocument.prototype.set_root = function(value) {};
/**
 * @constructor
 * @struct
 */
SP.DataConvert = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {?} obj
 * @param {!Array<string>} propNames
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.DataConvert.writePropertiesToXml = function(writer, obj, propNames, serializationContext) {};

/**
 * @param {?} dict
 * @param {?} parentNode
 * @return {void}
 */
SP.DataConvert.populateDictionaryFromObject = function(dict, parentNode) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {?} dict
 * @return {void}
 */
SP.DataConvert.fixupTypes = function(context, dict) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {?} dest
 * @param {?} jsonArrayFromServer
 * @return {void}
 */
SP.DataConvert.populateArray = function(context, dest, jsonArrayFromServer) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {?} obj
 * @return {?}
 */
SP.DataConvert.fixupType = function(context, obj) {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {?} dict
 * @param {string} topLevelElementTagName
 * @param {?} keys
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.DataConvert.writeDictionaryToXml = function(writer, dict, topLevelElementTagName, keys, serializationContext) {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {?} objValue
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.DataConvert.writeValueToXmlElement = function(writer, objValue, serializationContext) {};

/**
 * @param {?} obj
 * @param {string} propName
 * @param {?} propValue
 * @return {void}
 */
SP.DataConvert.invokeSetProperty = function(obj, propName, propValue) {};

/**
 * @param {?} obj
 * @param {string} propName
 * @return {?}
 */
SP.DataConvert.invokeGetProperty = function(obj, propName) {};

/**
 * @param {!Date} datetime
 * @param {SP.DateTimeKind} kind
 * @return {void}
 */
SP.DataConvert.specifyDateTimeKind = function(datetime, kind) {};

/**
 * @param {!Date} datetime
 * @return {SP.DateTimeKind}
 */
SP.DataConvert.getDateTimeKind = function(datetime) {};

/**
 * @param {number} year
 * @param {number} month
 * @param {number} day
 * @param {number} hour
 * @param {number} minute
 * @param {number} second
 * @param {number} milliseconds
 * @return {!Date}
 */
SP.DataConvert.createUnspecifiedDateTime = function(year, month, day, hour, minute, second, milliseconds) {};

/**
 * @param {number} milliseconds
 * @return {!Date}
 */
SP.DataConvert.createUtcDateTime = function(milliseconds) {};

/**
 * @param {number} milliseconds
 * @return {!Date}
 */
SP.DataConvert.createLocalDateTime = function(milliseconds) {};
/**
 * @record
 * @struct
 */
SP.IWebRequestExecutorFactory = function() {};

/**
 * @return {!Sys.Net.WebRequestExecutor}
 */
SP.IWebRequestExecutorFactory.prototype.createWebRequestExecutor = function() {};
/**
 * @extends {Sys.EventArgs}
 * @constructor
 * @struct
 */
SP.PageRequestFailedEventArgs = function() {};

/**
 * @return {!Sys.Net.WebRequestExecutor}
 */
SP.PageRequestFailedEventArgs.prototype.get_executor = function() {};

/**
 * @return {string}
 */
SP.PageRequestFailedEventArgs.prototype.get_errorMessage = function() {};

/**
 * @return {boolean}
 */
SP.PageRequestFailedEventArgs.prototype.get_isErrorPage = function() {};
/**
 * @extends {Sys.EventArgs}
 * @constructor
 * @struct
 */
SP.PageRequestSucceededEventArgs = function() {};

/**
 * @return {!Sys.Net.WebRequestExecutor}
 */
SP.PageRequestSucceededEventArgs.prototype.get_executor = function() {};

/**
 * @constructor
 * @struct
 */
SP.PageRequest = function() {};

/**
 * @return {!Sys.Net.WebRequest}
 */
SP.PageRequest.prototype.get_request = function() {};

/**
 * @return {string}
 */
SP.PageRequest.prototype.get_url = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.PageRequest.prototype.set_url = function(value) {};

/**
 * @return {string}
 */
SP.PageRequest.prototype.get_expectedContentType = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.PageRequest.prototype.set_expectedContentType = function(value) {};

/**
 * @param {string} body
 * @return {void}
 */
SP.PageRequest.prototype.post = function(body) {};

/**
 * @return {void}
 */
SP.PageRequest.prototype.get = function() {};

/**
 * @param {string} url
 * @param {string} body
 * @param {string} expectedContentType
 * @param {function(?, !SP.PageRequestSucceededEventArgs): void} succeededHandler
 * @param {function(?, !SP.PageRequestFailedEventArgs): void} failedHandler
 * @return {void}
 */
SP.PageRequest.doPost = function(url, body, expectedContentType, succeededHandler, failedHandler) {};

/**
 * @param {string} url
 * @param {string} expectedContentType
 * @param {function(?, !SP.PageRequestSucceededEventArgs): void} succeededHandler
 * @param {function(?, !SP.PageRequestFailedEventArgs): void} failedHandler
 * @return {void}
 */
SP.PageRequest.doGet = function(url, expectedContentType, succeededHandler, failedHandler) {};

/**
 * @param {function(?, !SP.PageRequestSucceededEventArgs): void} value
 * @return {void}
 */
SP.PageRequest.prototype.add_succeeded = function(value) {};

/**
 * @param {function(?, !SP.PageRequestSucceededEventArgs): void} value
 * @return {void}
 */
SP.PageRequest.prototype.remove_succeeded = function(value) {};

/**
 * @param {function(?, !SP.PageRequestFailedEventArgs): void} value
 * @return {void}
 */
SP.PageRequest.prototype.add_failed = function(value) {};

/**
 * @param {function(?, !SP.PageRequestFailedEventArgs): void} value
 * @return {void}
 */
SP.PageRequest.prototype.remove_failed = function(value) {};
/**
 * @constructor
 * @struct
 */
SP.ResResources = function() {};

/**
 * @param {string} resourceId
 * @param {!Array<?>} args
 * @return {string}
 */
SP.ResResources.getString = function(resourceId, args) {};
/**
 * @constructor
 * @struct
 */
SP.XmlWriter = function() {};

/**
 * Creates a new instance of the XmlWriter class with the specified string builder.
 * @param {!Sys.StringBuilder} sb
 * @return {!SP.XmlWriter}
 */
SP.XmlWriter.create = function(sb) {};

/**
 * Appends a start element tag with the specified name in XML format to the object?s string builder.
 * @param {string} tagName
 * @return {void}
 */
SP.XmlWriter.prototype.writeStartElement = function(tagName) {};

/**
 * Appends an element with the specified tag name and value in XML format to the string builder.
 * @param {string} tagName
 * @param {string} value
 * @return {void}
 */
SP.XmlWriter.prototype.writeElementString = function(tagName, value) {};

/**
 * Appends an end element tag in XML format to the object?s string builder. This method appends the end element tag ?/>? if the start element tag is not closed; otherwise, it appends a full end element tag ?</tagName>? to the string builder.
 * @return {void}
 */
SP.XmlWriter.prototype.writeEndElement = function() {};

/**
 * Appends an attribute with the specified name and value in XML format to the object?s string builder.
 * @param {string} localName
 * @param {string} value
 * @return {void}
 */
SP.XmlWriter.prototype.writeAttributeString = function(localName, value) {};

/**
 * This method only appends the name of the attribute. You can append the value of the attribute by calling the SP.XmlWriter.writeString(value) Method, and close the attribute by calling the SP.XmlWriter.writeEndAttribute() Method.
 * @param {string} localName
 * @return {void}
 */
SP.XmlWriter.prototype.writeStartAttribute = function(localName) {};

/**
 * Appends an end of an attribute in XML format to the object?s string builder.
 * @return {void}
 */
SP.XmlWriter.prototype.writeEndAttribute = function() {};

/**
 * Appends the specified value for an element tag or attribute to the object?s string builder.
 * @param {string} value
 * @return {void}
 */
SP.XmlWriter.prototype.writeString = function(value) {};

/**
 * Appends the specified text to the object?s string builder.
 * @param {string} xml
 * @return {void}
 */
SP.XmlWriter.prototype.writeRaw = function(xml) {};

/**
 * This member is reserved for internal use and is not intended to be used directly from your code.
 * @return {void}
 */
SP.XmlWriter.prototype.close = function() {};
/**
 * @constructor
 * @struct
 */
SP.ClientConstants = function() {};
 /** @type {string} */
SP.ClientConstants.prototype.AddExpandoFieldTypeSuffix;
 /** @type {string} */
SP.ClientConstants.prototype.Actions;
 /** @type {string} */
SP.ClientConstants.prototype.ApplicationName;
 /** @type {string} */
SP.ClientConstants.prototype.Body;
 /** @type {string} */
SP.ClientConstants.prototype.CatchScope;
 /** @type {string} */
SP.ClientConstants.prototype.ChildItemQuery;
 /** @type {string} */
SP.ClientConstants.prototype.ChildItems;
 /** @type {string} */
SP.ClientConstants.prototype.ConditionalScope;
 /** @type {string} */
SP.ClientConstants.prototype.Constructor;
 /** @type {string} */
SP.ClientConstants.prototype.Context;
 /** @type {string} */
SP.ClientConstants.prototype.ErrorInfo;
 /** @type {string} */
SP.ClientConstants.prototype.ErrorMessage;
 /** @type {string} */
SP.ClientConstants.prototype.ErrorStackTrace;
 /** @type {string} */
SP.ClientConstants.prototype.ErrorCode;
 /** @type {string} */
SP.ClientConstants.prototype.ErrorTypeName;
 /** @type {string} */
SP.ClientConstants.prototype.ErrorValue;
 /** @type {string} */
SP.ClientConstants.prototype.ErrorDetails;
 /** @type {string} */
SP.ClientConstants.prototype.ErrorTraceCorrelationId;
 /** @type {string} */
SP.ClientConstants.prototype.ExceptionHandlingScope;
 /** @type {string} */
SP.ClientConstants.prototype.ExceptionHandlingScopeSimple;
 /** @type {string} */
SP.ClientConstants.prototype.QueryableExpression;
 /** @type {string} */
SP.ClientConstants.prototype.FinallyScope;
 /** @type {string} */
SP.ClientConstants.prototype.HasException;
 /** @type {string} */
SP.ClientConstants.prototype.Id;
 /** @type {string} */
SP.ClientConstants.prototype.Identity;
 /** @type {string} */
SP.ClientConstants.prototype.IfFalseScope;
 /** @type {string} */
SP.ClientConstants.prototype.IfTrueScope;
 /** @type {string} */
SP.ClientConstants.prototype.IsNull;
 /** @type {string} */
SP.ClientConstants.prototype.LibraryVersion;
 /** @type {string} */
SP.ClientConstants.prototype.TraceCorrelationId;
 /** @type {string} */
SP.ClientConstants.prototype.Count;
 /** @type {string} */
SP.ClientConstants.prototype.Method;
 /** @type {string} */
SP.ClientConstants.prototype.Methods;
 /** @type {string} */
SP.ClientConstants.prototype.Name;
 /** @type {string} */
SP.ClientConstants.prototype.Object;
 /** @type {string} */
SP.ClientConstants.prototype.ObjectPathId;
 /** @type {string} */
SP.ClientConstants.prototype.ObjectPath;
 /** @type {string} */
SP.ClientConstants.prototype.ObjectPaths;
 /** @type {string} */
SP.ClientConstants.prototype.ObjectType;
 /** @type {string} */
SP.ClientConstants.prototype.ObjectIdentity;
 /** @type {string} */
SP.ClientConstants.prototype.ObjectIdentityQuery;
 /** @type {string} */
SP.ClientConstants.prototype.ObjectVersion;
 /** @type {string} */
SP.ClientConstants.prototype.Parameter;
 /** @type {string} */
SP.ClientConstants.prototype.Parameters;
 /** @type {string} */
SP.ClientConstants.prototype.ParentId;
 /** @type {string} */
SP.ClientConstants.prototype.Processed;
 /** @type {string} */
SP.ClientConstants.prototype.Property;
 /** @type {string} */
SP.ClientConstants.prototype.Properties;
 /** @type {string} */
SP.ClientConstants.prototype.Query;
 /** @type {string} */
SP.ClientConstants.prototype.QueryResult;
 /** @type {string} */
SP.ClientConstants.prototype.Request;
 /** @type {string} */
SP.ClientConstants.prototype.Results;
 /** @type {string} */
SP.ClientConstants.prototype.ScalarProperty;
 /** @type {string} */
SP.ClientConstants.prototype.SchemaVersion;
 /** @type {string} */
SP.ClientConstants.prototype.ScopeId;
 /** @type {string} */
SP.ClientConstants.prototype.SelectAll;
 /** @type {string} */
SP.ClientConstants.prototype.SelectAllProperties;
 /** @type {string} */
SP.ClientConstants.prototype.SetProperty;
 /** @type {string} */
SP.ClientConstants.prototype.SetStaticProperty;
 /** @type {string} */
SP.ClientConstants.prototype.StaticMethod;
 /** @type {string} */
SP.ClientConstants.prototype.StaticProperty;
 /** @type {string} */
SP.ClientConstants.prototype.SuffixChar;
 /** @type {string} */
SP.ClientConstants.prototype.SuffixByte;
 /** @type {string} */
SP.ClientConstants.prototype.SuffixInt16;
 /** @type {string} */
SP.ClientConstants.prototype.SuffixUInt16;
 /** @type {string} */
SP.ClientConstants.prototype.SuffixInt32;
 /** @type {string} */
SP.ClientConstants.prototype.SuffixUInt32;
 /** @type {string} */
SP.ClientConstants.prototype.SuffixInt64;
 /** @type {string} */
SP.ClientConstants.prototype.SuffixUInt64;
 /** @type {string} */
SP.ClientConstants.prototype.SuffixSingle;
 /** @type {string} */
SP.ClientConstants.prototype.SuffixDouble;
 /** @type {string} */
SP.ClientConstants.prototype.SuffixDecimal;
 /** @type {string} */
SP.ClientConstants.prototype.SuffixTimeSpan;
 /** @type {string} */
SP.ClientConstants.prototype.SuffixArray;
 /** @type {string} */
SP.ClientConstants.prototype.Test;
 /** @type {string} */
SP.ClientConstants.prototype.TryScope;
 /** @type {string} */
SP.ClientConstants.prototype.Type;
 /** @type {string} */
SP.ClientConstants.prototype.TypeId;
 /** @type {string} */
SP.ClientConstants.prototype.Update;
 /** @type {string} */
SP.ClientConstants.prototype.Version;
 /** @type {string} */
SP.ClientConstants.prototype.XmlElementName;
 /** @type {string} */
SP.ClientConstants.prototype.XmlElementAttributes;
 /** @type {string} */
SP.ClientConstants.prototype.XmlElementChildren;
 /** @type {string} */
SP.ClientConstants.prototype.XmlNamespace;
 /** @type {string} */
SP.ClientConstants.prototype.FieldValuesMethodName;
 /** @type {string} */
SP.ClientConstants.prototype.RequestTokenHeader;
 /** @type {string} */
SP.ClientConstants.prototype.FormDigestHeader;
 /** @type {string} */
SP.ClientConstants.prototype.useWebLanguageHeader;
 /** @type {string} */
SP.ClientConstants.prototype.useWebLanguageHeaderValue;
 /** @type {string} */
SP.ClientConstants.prototype.ClientTagHeader;
 /** @type {string} */
SP.ClientConstants.prototype.TraceCorrelationIdRequestHeader;
 /** @type {string} */
SP.ClientConstants.prototype.TraceCorrelationIdResponseHeader;
 /** @type {string} */
SP.ClientConstants.prototype.greaterThan;
 /** @type {string} */
SP.ClientConstants.prototype.lessThan;
 /** @type {string} */
SP.ClientConstants.prototype.equal;
 /** @type {string} */
SP.ClientConstants.prototype.notEqual;
 /** @type {string} */
SP.ClientConstants.prototype.greaterThanOrEqual;
 /** @type {string} */
SP.ClientConstants.prototype.lessThanOrEqual;
 /** @type {string} */
SP.ClientConstants.prototype.andAlso;
 /** @type {string} */
SP.ClientConstants.prototype.orElse;
 /** @type {string} */
SP.ClientConstants.prototype.not;
 /** @type {string} */
SP.ClientConstants.prototype.expressionParameter;
 /** @type {string} */
SP.ClientConstants.prototype.expressionProperty;
 /** @type {string} */
SP.ClientConstants.prototype.expressionStaticProperty;
 /** @type {string} */
SP.ClientConstants.prototype.expressionMethod;
 /** @type {string} */
SP.ClientConstants.prototype.expressionStaticMethod;
 /** @type {string} */
SP.ClientConstants.prototype.expressionConstant;
 /** @type {string} */
SP.ClientConstants.prototype.expressionConvert;
 /** @type {string} */
SP.ClientConstants.prototype.expressionTypeIs;
 /** @type {string} */
SP.ClientConstants.prototype.ofType;
 /** @type {string} */
SP.ClientConstants.prototype.take;
 /** @type {string} */
SP.ClientConstants.prototype.where;
 /** @type {string} */
SP.ClientConstants.prototype.orderBy;
 /** @type {string} */
SP.ClientConstants.prototype.orderByDescending;
 /** @type {string} */
SP.ClientConstants.prototype.thenBy;
 /** @type {string} */
SP.ClientConstants.prototype.thenByDescending;
 /** @type {string} */
SP.ClientConstants.prototype.queryableObject;
 /** @type {string} */
SP.ClientConstants.prototype.ServiceFileName;
 /** @type {string} */
SP.ClientConstants.prototype.ServiceMethodName;
 /** @type {string} */
SP.ClientConstants.prototype.fluidApplicationInitParamUrl;
 /** @type {string} */
SP.ClientConstants.prototype.fluidApplicationInitParamViaUrl;
 /** @type {string} */
SP.ClientConstants.prototype.fluidApplicationInitParamRequestToken;
 /** @type {string} */
SP.ClientConstants.prototype.fluidApplicationInitParamFormDigestTimeoutSeconds;
 /** @type {string} */
SP.ClientConstants.prototype.fluidApplicationInitParamFormDigest;
/**
 * @constructor
 * @struct
 */
SP.ClientSchemaVersions = function() {};
 /** @type {string} */
SP.ClientSchemaVersions.prototype.version14;
 /** @type {string} */
SP.ClientSchemaVersions.prototype.version15;
 /** @type {string} */
SP.ClientSchemaVersions.prototype.currentVersion;
/**
 * @constructor
 * @struct
 */
SP.ClientErrorCodes = function() {};
 /** @type {number} */
SP.ClientErrorCodes.prototype.genericError;
 /** @type {number} */
SP.ClientErrorCodes.prototype.accessDenied;
 /** @type {number} */
SP.ClientErrorCodes.prototype.docAlreadyExists;
 /** @type {number} */
SP.ClientErrorCodes.prototype.versionConflict;
 /** @type {number} */
SP.ClientErrorCodes.prototype.listItemDeleted;
 /** @type {number} */
SP.ClientErrorCodes.prototype.invalidFieldValue;
 /** @type {number} */
SP.ClientErrorCodes.prototype.notSupported;
 /** @type {number} */
SP.ClientErrorCodes.prototype.redirect;
 /** @type {number} */
SP.ClientErrorCodes.prototype.notSupportedRequestVersion;
 /** @type {number} */
SP.ClientErrorCodes.prototype.fieldValueFailedValidation;
 /** @type {number} */
SP.ClientErrorCodes.prototype.itemValueFailedValidation;
/**
 * @constructor
 * @struct
 */
SP.ClientAction = function() {};

/**
 * @return {number}
 */
SP.ClientAction.prototype.get_id = function() {};

/**
 * @return {!SP.ObjectPath}
 */
SP.ClientAction.prototype.get_path = function() {};

/**
 * @return {string}
 */
SP.ClientAction.prototype.get_name = function() {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientObject} obj
 * @param {string} propName
 * @param {?} propValue
 */
SP.ClientActionSetProperty = function(obj, propName, propValue) {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientRuntimeContext} context
 * @param {string} typeId
 * @param {string} propName
 * @param {?} propValue
 */
SP.ClientActionSetStaticProperty = function(context, typeId, propName, propValue) {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientObject} obj
 * @param {string} methodName
 * @param {!Array<?>} parameters
 */
SP.ClientActionInvokeMethod = function(obj, methodName, parameters) {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientRuntimeContext} context
 * @param {string} typeId
 * @param {string} methodName
 * @param {!Array<?>} parameters
 */
SP.ClientActionInvokeStaticMethod = function(context, typeId, methodName, parameters) {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.ObjectPath} objectPath
 */
SP.ClientObject = function(context, objectPath) {};

/**
 * @return {!SP.ClientRuntimeContext}
 */
SP.ClientObject.prototype.get_context = function() {};

/**
 * @return {!SP.ObjectPath}
 */
SP.ClientObject.prototype.get_path = function() {};

/**
 * @return {string}
 */
SP.ClientObject.prototype.get_objectVersion = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ClientObject.prototype.set_objectVersion = function(value) {};

/**
 * @param {?} initValue
 * @return {void}
 */
SP.ClientObject.prototype.fromJson = function(initValue) {};

/**
 * @param {?} initValue
 * @return {boolean}
 */
SP.ClientObject.prototype.customFromJson = function(initValue) {};

/**
 * @return {void}
 */
SP.ClientObject.prototype.refreshLoad = function() {};

/**
 * @param {!Array<string>=} propertyNames
 * @return {void}
 */
SP.ClientObject.prototype.retrieve = function(propertyNames) {};

/**
 * @param {string} propertyName
 * @return {boolean}
 */
SP.ClientObject.prototype.isPropertyAvailable = function(propertyName) {};

/**
 * @param {string} propertyName
 * @return {boolean}
 */
SP.ClientObject.prototype.isObjectPropertyInstantiated = function(propertyName) {};

/**
 * @return {boolean}
 */
SP.ClientObject.prototype.get_serverObjectIsNull = function() {};

/**
 * @return {!SP.ClientObject}
 */
SP.ClientObject.prototype.get_typedObject = function() {};

/**
 * @param {?} initValue
 * @return {void}
 */
SP.ClientObject.prototype.initPropertiesFromJson = function(initValue) {};

/**
 * @param {string} propName
 * @return {void}
 */
SP.ClientObject.prototype.checkUninitializedProperty = function(propName) {};

/**
 * @constructor
 * @struct
 */
SP.ClientObjectData = function() {};

/**
 * @return {?}
 */
SP.ClientObjectData.prototype.get_properties = function() {};

/**
 * @return {?}
 */
SP.ClientObjectData.prototype.get_clientObjectProperties = function() {};

/**
 * @return {?}
 */
SP.ClientObjectData.prototype.get_methodReturnObjects = function() {};
/**
 * @extends {SP.ClientObject}
 * @implements {IEnumerable}
 * @constructor
 * @struct
 */
SP.ClientObjectCollection = function() {};

/**
 * @return {boolean}
 */
SP.ClientObjectCollection.prototype.get_areItemsAvailable = function() {};

/**
 * Gets the data for all of the items in the collection.
 * @return {!SP.ClientObjectPrototype}
 */
SP.ClientObjectCollection.prototype.retrieveItems = function() {};

/**
 * Returns an enumerator that iterates through the collection.
 * @return {!IEnumerator<T>}
 */
SP.ClientObjectCollection.prototype.getEnumerator = function() {};

/**
 * Returns number of items in the collection.
 * @return {number}
 */
SP.ClientObjectCollection.prototype.get_count = function() {};

/**
 * @return {!Array<T>}
 */
SP.ClientObjectCollection.prototype.get_data = function() {};

/**
 * @param {T} obj
 * @return {void}
 */
SP.ClientObjectCollection.prototype.addChild = function(obj) {};

/**
 * @param {number} index
 * @return {T}
 */
SP.ClientObjectCollection.prototype.getItemAtIndex = function(index) {};

/**
 * @param {?} obj
 * @return {void}
 */
SP.ClientObjectCollection.prototype.fromJson = function(obj) {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.ObjectPath} objectPath
 * @param {?} childItemType
 */
SP.ClientObjectList = function(context, objectPath, childItemType) {};

/**
 * @param {?} initValue
 * @return {void}
 */
SP.ClientObjectList.prototype.fromJson = function(initValue) {};

/**
 * @param {?} initValue
 * @return {boolean}
 */
SP.ClientObjectList.prototype.customFromJson = function(initValue) {};
/**
 * @constructor
 * @struct
 */
SP.ClientObjectPrototype = function() {};

/**
 * @param {!Array<string>=} propertyNames
 * @return {void}
 */
SP.ClientObjectPrototype.prototype.retrieve = function(propertyNames) {};

/**
 * @param {string} propertyName
 * @return {!SP.ClientObjectPrototype}
 */
SP.ClientObjectPrototype.prototype.retrieveObject = function(propertyName) {};

/**
 * @param {string} propertyName
 * @return {!SP.ClientObjectCollectionPrototype}
 */
SP.ClientObjectPrototype.prototype.retrieveCollectionObject = function(propertyName) {};
/**
 * @extends {SP.ClientObjectPrototype}
 * @constructor
 * @struct
 */
SP.ClientObjectCollectionPrototype = function() {};

/**
 * @return {!SP.ClientObjectPrototype}
 */
SP.ClientObjectCollectionPrototype.prototype.retrieveItems = function() {};

/** @const */
SP.ClientRequestStatus = {};
/** @const {number} */
SP.ClientRequestStatus.active;
/** @const {number} */
SP.ClientRequestStatus.inProgress;
/** @const {number} */
SP.ClientRequestStatus.completedSuccess;
/** @const {number} */
SP.ClientRequestStatus.completedException;

/**
 * @constructor
 * @struct
 * @param {!Sys.Net.WebRequest} webRequest
 */
SP.WebRequestEventArgs = function(webRequest) {};

/**
 * @return {!Sys.Net.WebRequest}
 */
SP.WebRequestEventArgs.prototype.get_webRequest = function() {};
/**
 * @constructor
 * @struct
 */
SP.ClientRequest = function() {};

/**
 * @return {number}
 */
SP.ClientRequest.get_nextSequenceId = function() {};

/**
 * @return {!Sys.Net.WebRequest}
 */
SP.ClientRequest.prototype.get_webRequest = function() {};

/**
 * @param {function(?, !SP.ClientRequestSucceededEventArgs): void} value
 * @return {void}
 */
SP.ClientRequest.prototype.add_requestSucceeded = function(value) {};

/**
 * @param {function(?, !SP.ClientRequestSucceededEventArgs): void} value
 * @return {void}
 */
SP.ClientRequest.prototype.remove_requestSucceeded = function(value) {};

/**
 * @param {function(?, !SP.ClientRequestFailedEventArgs): void} value
 * @return {void}
 */
SP.ClientRequest.prototype.add_requestFailed = function(value) {};

/**
 * @param {function(?, !SP.ClientRequestFailedEventArgs): void} value
 * @return {void}
 */
SP.ClientRequest.prototype.remove_requestFailed = function(value) {};

/**
 * @return {boolean}
 */
SP.ClientRequest.prototype.get_navigateWhenServerRedirect = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ClientRequest.prototype.set_navigateWhenServerRedirect = function(value) {};
/**
 * @extends {Sys.EventArgs}
 * @constructor
 * @struct
 */
SP.ClientRequestEventArgs = function() {};

/**
 * @return {!SP.ClientRequest}
 */
SP.ClientRequestEventArgs.prototype.get_request = function() {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientRequest} request
 * @param {string} message
 * @param {string} stackTrace
 * @param {number} errorCode
 * @param {string} errorValue
 * @param {string} errorTypeName
 * @param {?} errorDetails
 * @param {string=} errorTraceCorrelationId
 */
SP.ClientRequestFailedEventArgs = function(request, message, stackTrace, errorCode, errorValue, errorTypeName, errorDetails, errorTraceCorrelationId) {};

/**
 * @return {string}
 */
SP.ClientRequestFailedEventArgs.prototype.get_message = function() {};

/**
 * @return {string}
 */
SP.ClientRequestFailedEventArgs.prototype.get_stackTrace = function() {};

/**
 * @return {number}
 */
SP.ClientRequestFailedEventArgs.prototype.get_errorCode = function() {};

/**
 * @return {string}
 */
SP.ClientRequestFailedEventArgs.prototype.get_errorValue = function() {};

/**
 * @return {string}
 */
SP.ClientRequestFailedEventArgs.prototype.get_errorTypeName = function() {};

/**
 * @return {?}
 */
SP.ClientRequestFailedEventArgs.prototype.get_errorDetails = function() {};

/**
 * @return {string}
 */
SP.ClientRequestFailedEventArgs.prototype.get_errorTraceCorrelationId = function() {};
/**
 * @extends {SP.ClientRequestEventArgs}
 * @constructor
 * @struct
 */
SP.ClientRequestSucceededEventArgs = function() {};

/**
 * @constructor
 * @struct
 * @param {string} serverRelativeUrlOrFullUrl
 */
SP.ClientRuntimeContext = function(serverRelativeUrlOrFullUrl) {};

/**
 * @return {string}
 */
SP.ClientRuntimeContext.prototype.get_url = function() {};

/**
 * @return {string}
 */
SP.ClientRuntimeContext.prototype.get_viaUrl = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ClientRuntimeContext.prototype.set_viaUrl = function(value) {};

/**
 * @return {boolean}
 */
SP.ClientRuntimeContext.prototype.get_formDigestHandlingEnabled = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ClientRuntimeContext.prototype.set_formDigestHandlingEnabled = function(value) {};

/**
 * @return {string}
 */
SP.ClientRuntimeContext.prototype.get_applicationName = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ClientRuntimeContext.prototype.set_applicationName = function(value) {};

/**
 * @return {string}
 */
SP.ClientRuntimeContext.prototype.get_clientTag = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ClientRuntimeContext.prototype.set_clientTag = function(value) {};

/**
 * @return {!SP.IWebRequestExecutorFactory}
 */
SP.ClientRuntimeContext.prototype.get_webRequestExecutorFactory = function() {};

/**
 * @param {!SP.IWebRequestExecutorFactory} value
 * @return {void}
 */
SP.ClientRuntimeContext.prototype.set_webRequestExecutorFactory = function(value) {};

/**
 * @return {!SP.ClientRequest}
 */
SP.ClientRuntimeContext.prototype.get_pendingRequest = function() {};

/**
 * @return {boolean}
 */
SP.ClientRuntimeContext.prototype.get_hasPendingRequest = function() {};

/**
 * @param {function(?, !SP.WebRequestEventArgs): void} value
 * @return {void}
 */
SP.ClientRuntimeContext.prototype.add_executingWebRequest = function(value) {};

/**
 * @param {function(?, !SP.WebRequestEventArgs): void} value
 * @return {void}
 */
SP.ClientRuntimeContext.prototype.remove_executingWebRequest = function(value) {};

/**
 * @param {function(?, !SP.ClientRequestSucceededEventArgs): void} value
 * @return {void}
 */
SP.ClientRuntimeContext.prototype.add_requestSucceeded = function(value) {};

/**
 * @param {function(?, !SP.ClientRequestSucceededEventArgs): void} value
 * @return {void}
 */
SP.ClientRuntimeContext.prototype.remove_requestSucceeded = function(value) {};

/**
 * @param {function(?, !SP.ClientRequestFailedEventArgs): void} value
 * @return {void}
 */
SP.ClientRuntimeContext.prototype.add_requestFailed = function(value) {};

/**
 * @param {function(?, !SP.ClientRequestFailedEventArgs): void} value
 * @return {void}
 */
SP.ClientRuntimeContext.prototype.remove_requestFailed = function(value) {};

/**
 * @param {function(?, !SP.ClientRequestEventArgs): void} value
 * @return {void}
 */
SP.ClientRuntimeContext.prototype.add_beginningRequest = function(value) {};

/**
 * @param {function(?, !SP.ClientRequestEventArgs): void} value
 * @return {void}
 */
SP.ClientRuntimeContext.prototype.remove_beginningRequest = function(value) {};

/**
 * @return {number}
 */
SP.ClientRuntimeContext.prototype.get_requestTimeout = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.ClientRuntimeContext.prototype.set_requestTimeout = function(value) {};

/**
 * @param {function(?, !SP.ClientRequestSucceededEventArgs): void=} succeededCallback
 * @param {function(?, !SP.ClientRequestFailedEventArgs): void=} failedCallback
 * @return {void}
 */
SP.ClientRuntimeContext.prototype.executeQueryAsync = function(succeededCallback, failedCallback) {};

/**
 * @return {?}
 */
SP.ClientRuntimeContext.prototype.get_staticObjects = function() {};

/**
 * @param {!SP.ClientObject} obj
 * @param {?} type
 * @return {!SP.ClientObject}
 */
SP.ClientRuntimeContext.prototype.castTo = function(obj, type) {};

/**
 * @param {!SP.ClientAction} query
 * @return {void}
 */
SP.ClientRuntimeContext.prototype.addQuery = function(query) {};

/**
 * @param {number} id
 * @param {?} obj
 * @return {void}
 */
SP.ClientRuntimeContext.prototype.addQueryIdAndResultObject = function(id, obj) {};

/**
 * @param {string} json
 * @param {boolean=} skipTypeFixup
 * @return {?}
 */
SP.ClientRuntimeContext.prototype.parseObjectFromJsonString = function(json, skipTypeFixup) {};

/**
 * @param {!SP.ClientObject} clientObject
 * @param {...string} exps
 * @return {void}
 */
SP.ClientRuntimeContext.prototype.load = function(clientObject, exps) {};

/**
 * @template T
 * @param {!SP.ClientObjectCollection<T>} clientObjectCollection
 * @param {string=} exp
 * @return {?}
 */
SP.ClientRuntimeContext.prototype.loadQuery = function(clientObjectCollection, exp) {};

/**
 * @return {string}
 */
SP.ClientRuntimeContext.prototype.get_serverSchemaVersion = function() {};

/**
 * @return {string}
 */
SP.ClientRuntimeContext.prototype.get_serverLibraryVersion = function() {};

/**
 * @return {string}
 */
SP.ClientRuntimeContext.prototype.get_traceCorrelationId = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ClientRuntimeContext.prototype.set_traceCorrelationId = function(value) {};

/**
 * @return {void}
 */
SP.ClientRuntimeContext.prototype.dispose = function() {};

/**
 * @constructor
 * @struct
 */
SP.SimpleDataTable = function() {};

/**
 * @return {!Array<?>}
 */
SP.SimpleDataTable.prototype.get_rows = function() {};
/**
 * @constructor
 * @struct
 */
SP.ClientValueObject = function() {};

/**
 * @param {?} obj
 * @return {void}
 */
SP.ClientValueObject.prototype.fromJson = function(obj) {};

/**
 * @param {?} obj
 * @return {boolean}
 */
SP.ClientValueObject.prototype.customFromJson = function(obj) {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.ClientValueObject.prototype.writeToXml = function(writer, serializationContext) {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {boolean}
 */
SP.ClientValueObject.prototype.customWriteToXml = function(writer, serializationContext) {};

/**
 * @return {string}
 */
SP.ClientValueObject.prototype.get_typeId = function() {};
/**
 * @extends {SP.ClientValueObject}
 * @implements {IEnumerable}
 * @constructor
 * @struct
 */
SP.ClientValueObjectCollection = function() {};

/**
 * @return {number}
 */
SP.ClientValueObjectCollection.prototype.get_count = function() {};

/**
 * @return {!IEnumerator<T>}
 */
SP.ClientValueObjectCollection.prototype.getEnumerator = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.ClientValueObjectCollection.prototype.writeToXml = function(writer, serializationContext) {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientRuntimeContext} context
 */
SP.ExceptionHandlingScope = function(context) {};

/**
 * @return {?}
 */
SP.ExceptionHandlingScope.prototype.startScope = function() {};

/**
 * @return {?}
 */
SP.ExceptionHandlingScope.prototype.startTry = function() {};

/**
 * @return {?}
 */
SP.ExceptionHandlingScope.prototype.startCatch = function() {};

/**
 * @return {?}
 */
SP.ExceptionHandlingScope.prototype.startFinally = function() {};

/**
 * @return {boolean}
 */
SP.ExceptionHandlingScope.prototype.get_processed = function() {};

/**
 * @return {boolean}
 */
SP.ExceptionHandlingScope.prototype.get_hasException = function() {};

/**
 * @return {string}
 */
SP.ExceptionHandlingScope.prototype.get_errorMessage = function() {};

/**
 * @return {string}
 */
SP.ExceptionHandlingScope.prototype.get_serverStackTrace = function() {};

/**
 * @return {number}
 */
SP.ExceptionHandlingScope.prototype.get_serverErrorCode = function() {};

/**
 * @return {string}
 */
SP.ExceptionHandlingScope.prototype.get_serverErrorValue = function() {};

/**
 * @return {string}
 */
SP.ExceptionHandlingScope.prototype.get_serverErrorTypeName = function() {};

/**
 * @return {?}
 */
SP.ExceptionHandlingScope.prototype.get_serverErrorDetails = function() {};

/**
 * @constructor
 * @struct
 * @param {!SP.ObjectPath} objectPath
 */
SP.ObjectIdentityQuery = function(objectPath) {};
/**
 * @constructor
 * @struct
 */
SP.ObjectPath = function() {};

/**
 * @return {void}
 */
SP.ObjectPath.prototype.setPendingReplace = function() {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.ObjectPath} parent
 * @param {string} propertyName
 */
SP.ObjectPathProperty = function(context, parent, propertyName) {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientRuntimeContext} context
 * @param {string} typeId
 * @param {string} propertyName
 */
SP.ObjectPathStaticProperty = function(context, typeId, propertyName) {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.ObjectPath} parent
 * @param {string} methodName
 * @param {!Array<?>} parameters
 */
SP.ObjectPathMethod = function(context, parent, methodName, parameters) {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientRuntimeContext} context
 * @param {string} typeId
 * @param {string} methodName
 * @param {!Array<?>} parameters
 */
SP.ObjectPathStaticMethod = function(context, typeId, methodName, parameters) {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientRuntimeContext} context
 * @param {string} typeId
 * @param {!Array<?>} parameters
 */
SP.ObjectPathConstructor = function(context, typeId, parameters) {};
/**
 * @constructor
 * @struct
 */
SP.SerializationContext = function() {};

/**
 * @param {!SP.ClientObject} obj
 * @return {void}
 */
SP.SerializationContext.prototype.addClientObject = function(obj) {};

/**
 * @param {!SP.ObjectPath} path
 * @return {void}
 */
SP.SerializationContext.prototype.addObjectPath = function(path) {};
/**
 * @constructor
 * @struct
 */
SP.ResourceStrings = function() {};
 /** @type {string} */
SP.ResourceStrings.prototype.argumentExceptionMessage;
 /** @type {string} */
SP.ResourceStrings.prototype.argumentNullExceptionMessage;
 /** @type {string} */
SP.ResourceStrings.prototype.cC_AppIconAlt;
 /** @type {string} */
SP.ResourceStrings.prototype.cC_AppWebUrlNotSet;
 /** @type {string} */
SP.ResourceStrings.prototype.cC_ArrowImageAlt;
 /** @type {string} */
SP.ResourceStrings.prototype.cC_BackToSite;
 /** @type {string} */
SP.ResourceStrings.prototype.cC_ErrorGettingThemeInfo;
 /** @type {string} */
SP.ResourceStrings.prototype.cC_HelpLinkToolTip;
 /** @type {string} */
SP.ResourceStrings.prototype.cC_HostSiteUrlNotSet;
 /** @type {string} */
SP.ResourceStrings.prototype.cC_InvalidArgument;
 /** @type {string} */
SP.ResourceStrings.prototype.cC_InvalidJSON;
 /** @type {string} */
SP.ResourceStrings.prototype.cC_InvalidOperation;
 /** @type {string} */
SP.ResourceStrings.prototype.cC_PlaceHolderElementNotFound;
 /** @type {string} */
SP.ResourceStrings.prototype.cC_RequiredScriptNotLoaded;
 /** @type {string} */
SP.ResourceStrings.prototype.cC_SendFeedback;
 /** @type {string} */
SP.ResourceStrings.prototype.cC_SettingsLinkToolTip;
 /** @type {string} */
SP.ResourceStrings.prototype.cC_TimeoutGettingThemeInfo;
 /** @type {string} */
SP.ResourceStrings.prototype.cC_Welcome;
 /** @type {string} */
SP.ResourceStrings.prototype.cannotFindContextWebServerRelativeUrl;
 /** @type {string} */
SP.ResourceStrings.prototype.collectionHasNotBeenInitialized;
 /** @type {string} */
SP.ResourceStrings.prototype.collectionModified;
 /** @type {string} */
SP.ResourceStrings.prototype.invalidUsageOfConditionalScope;
 /** @type {string} */
SP.ResourceStrings.prototype.invalidUsageOfConditionalScopeNowAllowedAction;
 /** @type {string} */
SP.ResourceStrings.prototype.invalidUsageOfExceptionHandlingScope;
 /** @type {string} */
SP.ResourceStrings.prototype.namedPropertyHasNotBeenInitialized;
 /** @type {string} */
SP.ResourceStrings.prototype.namedServerObjectIsNull;
 /** @type {string} */
SP.ResourceStrings.prototype.noObjectPathAssociatedWithObject;
 /** @type {string} */
SP.ResourceStrings.prototype.notSameClientContext;
 /** @type {string} */
SP.ResourceStrings.prototype.notSupportedQueryExpressionWithExpressionDetail;
 /** @type {string} */
SP.ResourceStrings.prototype.objectNameIdentity;
 /** @type {string} */
SP.ResourceStrings.prototype.objectNameMethod;
 /** @type {string} */
SP.ResourceStrings.prototype.objectNameProperty;
 /** @type {string} */
SP.ResourceStrings.prototype.objectNameType;
 /** @type {string} */
SP.ResourceStrings.prototype.propertyHasNotBeenInitialized;
 /** @type {string} */
SP.ResourceStrings.prototype.rE_BrowserBinaryDataNotSupported;
 /** @type {string} */
SP.ResourceStrings.prototype.rE_BrowserNotSupported;
 /** @type {string} */
SP.ResourceStrings.prototype.rE_CannotAccessSite;
 /** @type {string} */
SP.ResourceStrings.prototype.rE_CannotAccessSiteCancelled;
 /** @type {string} */
SP.ResourceStrings.prototype.rE_CannotAccessSiteOpenWindowFailed;
 /** @type {string} */
SP.ResourceStrings.prototype.rE_DismissOpenWindowMessageLinkText;
 /** @type {string} */
SP.ResourceStrings.prototype.rE_DomainDoesNotMatch;
 /** @type {string} */
SP.ResourceStrings.prototype.rE_FixitHelpMessage;
 /** @type {string} */
SP.ResourceStrings.prototype.rE_InvalidArgumentOrField;
 /** @type {string} */
SP.ResourceStrings.prototype.rE_InvalidOperation;
 /** @type {string} */
SP.ResourceStrings.prototype.rE_NoTrustedOrigins;
 /** @type {string} */
SP.ResourceStrings.prototype.rE_OpenWindowButtonText;
 /** @type {string} */
SP.ResourceStrings.prototype.rE_OpenWindowMessage;
 /** @type {string} */
SP.ResourceStrings.prototype.rE_RequestAbortedOrTimedout;
 /** @type {string} */
SP.ResourceStrings.prototype.rE_RequestUnexpectedResponse;
 /** @type {string} */
SP.ResourceStrings.prototype.rE_RequestUnexpectedResponseWithContentTypeAndStatus;
 /** @type {string} */
SP.ResourceStrings.prototype.requestAbortedOrTimedOut;
 /** @type {string} */
SP.ResourceStrings.prototype.requestEmptyQueryName;
 /** @type {string} */
SP.ResourceStrings.prototype.requestHasBeenExecuted;
 /** @type {string} */
SP.ResourceStrings.prototype.requestUnexpectedResponse;
 /** @type {string} */
SP.ResourceStrings.prototype.requestUnexpectedResponseWithContentTypeAndStatus;
 /** @type {string} */
SP.ResourceStrings.prototype.requestUnexpectedResponseWithStatus;
 /** @type {string} */
SP.ResourceStrings.prototype.requestUnknownResponse;
 /** @type {string} */
SP.ResourceStrings.prototype.serverObjectIsNull;
 /** @type {string} */
SP.ResourceStrings.prototype.unknownError;
 /** @type {string} */
SP.ResourceStrings.prototype.unknownResponseData;
/**
 * @constructor
 * @struct
 */
SP.RuntimeRes = function() {};
 /** @type {string} */
SP.RuntimeRes.prototype.cC_PlaceHolderElementNotFound;
 /** @type {string} */
SP.RuntimeRes.prototype.rE_CannotAccessSiteOpenWindowFailed;
 /** @type {string} */
SP.RuntimeRes.prototype.noObjectPathAssociatedWithObject;
 /** @type {string} */
SP.RuntimeRes.prototype.cC_TimeoutGettingThemeInfo;
 /** @type {string} */
SP.RuntimeRes.prototype.unknownResponseData;
 /** @type {string} */
SP.RuntimeRes.prototype.requestUnexpectedResponseWithStatus;
 /** @type {string} */
SP.RuntimeRes.prototype.objectNameProperty;
 /** @type {string} */
SP.RuntimeRes.prototype.requestUnknownResponse;
 /** @type {string} */
SP.RuntimeRes.prototype.rE_RequestUnexpectedResponseWithContentTypeAndStatus;
 /** @type {string} */
SP.RuntimeRes.prototype.rE_BrowserNotSupported;
 /** @type {string} */
SP.RuntimeRes.prototype.argumentExceptionMessage;
 /** @type {string} */
SP.RuntimeRes.prototype.namedServerObjectIsNull;
 /** @type {string} */
SP.RuntimeRes.prototype.objectNameType;
 /** @type {string} */
SP.RuntimeRes.prototype.requestUnexpectedResponseWithContentTypeAndStatus;
 /** @type {string} */
SP.RuntimeRes.prototype.cC_InvalidJSON;
 /** @type {string} */
SP.RuntimeRes.prototype.invalidUsageOfExceptionHandlingScope;
 /** @type {string} */
SP.RuntimeRes.prototype.serverObjectIsNull;
 /** @type {string} */
SP.RuntimeRes.prototype.cC_AppWebUrlNotSet;
 /** @type {string} */
SP.RuntimeRes.prototype.rE_OpenWindowMessage;
 /** @type {string} */
SP.RuntimeRes.prototype.argumentNullExceptionMessage;
 /** @type {string} */
SP.RuntimeRes.prototype.cC_HelpLinkToolTip;
 /** @type {string} */
SP.RuntimeRes.prototype.propertyHasNotBeenInitialized;
 /** @type {string} */
SP.RuntimeRes.prototype.rE_RequestAbortedOrTimedout;
 /** @type {string} */
SP.RuntimeRes.prototype.invalidUsageOfConditionalScope;
 /** @type {string} */
SP.RuntimeRes.prototype.cC_ErrorGettingThemeInfo;
 /** @type {string} */
SP.RuntimeRes.prototype.rE_DismissOpenWindowMessageLinkText;
 /** @type {string} */
SP.RuntimeRes.prototype.rE_CannotAccessSiteCancelled;
 /** @type {string} */
SP.RuntimeRes.prototype.objectNameIdentity;
 /** @type {string} */
SP.RuntimeRes.prototype.cC_HostSiteUrlNotSet;
 /** @type {string} */
SP.RuntimeRes.prototype.rE_FixitHelpMessage;
 /** @type {string} */
SP.RuntimeRes.prototype.notSupportedQueryExpressionWithExpressionDetail;
 /** @type {string} */
SP.RuntimeRes.prototype.rE_RequestUnexpectedResponse;
 /** @type {string} */
SP.RuntimeRes.prototype.rE_DomainDoesNotMatch;
 /** @type {string} */
SP.RuntimeRes.prototype.cC_BackToSite;
 /** @type {string} */
SP.RuntimeRes.prototype.rE_NoTrustedOrigins;
 /** @type {string} */
SP.RuntimeRes.prototype.rE_InvalidOperation;
 /** @type {string} */
SP.RuntimeRes.prototype.collectionModified;
 /** @type {string} */
SP.RuntimeRes.prototype.cC_Welcome;
 /** @type {string} */
SP.RuntimeRes.prototype.cC_AppIconAlt;
 /** @type {string} */
SP.RuntimeRes.prototype.cC_SendFeedback;
 /** @type {string} */
SP.RuntimeRes.prototype.cC_ArrowImageAlt;
 /** @type {string} */
SP.RuntimeRes.prototype.cC_InvalidOperation;
 /** @type {string} */
SP.RuntimeRes.prototype.requestAbortedOrTimedOut;
 /** @type {string} */
SP.RuntimeRes.prototype.invalidUsageOfConditionalScopeNowAllowedAction;
 /** @type {string} */
SP.RuntimeRes.prototype.cannotFindContextWebServerRelativeUrl;
 /** @type {string} */
SP.RuntimeRes.prototype.rE_OpenWindowButtonText;
 /** @type {string} */
SP.RuntimeRes.prototype.unknownError;
 /** @type {string} */
SP.RuntimeRes.prototype.cC_InvalidArgument;
 /** @type {string} */
SP.RuntimeRes.prototype.rE_InvalidArgumentOrField;
 /** @type {string} */
SP.RuntimeRes.prototype.cC_SettingsLinkToolTip;
 /** @type {string} */
SP.RuntimeRes.prototype.requestEmptyQueryName;
 /** @type {string} */
SP.RuntimeRes.prototype.cC_RequiredScriptNotLoaded;
 /** @type {string} */
SP.RuntimeRes.prototype.rE_CannotAccessSite;
 /** @type {string} */
SP.RuntimeRes.prototype.notSameClientContext;
 /** @type {string} */
SP.RuntimeRes.prototype.requestUnexpectedResponse;
 /** @type {string} */
SP.RuntimeRes.prototype.rE_BrowserBinaryDataNotSupported;
 /** @type {string} */
SP.RuntimeRes.prototype.collectionHasNotBeenInitialized;
 /** @type {string} */
SP.RuntimeRes.prototype.namedPropertyHasNotBeenInitialized;
 /** @type {string} */
SP.RuntimeRes.prototype.requestHasBeenExecuted;
 /** @type {string} */
SP.RuntimeRes.prototype.objectNameMethod;
/**
 * @constructor
 * @struct
 */
SP.ParseJSONUtil = function() {};

/**
 * @param {string} json
 * @return {?}
 */
SP.ParseJSONUtil.parseObjectFromJsonString = function(json) {};

/**
 * @param {string} text
 * @return {boolean}
 */
SP.ParseJSONUtil.validateJson = function(text) {};

/** @const */
SP.DateTimeKind = {};
/** @const {number} */
SP.DateTimeKind.unspecified;
/** @const {number} */
SP.DateTimeKind.utc;
/** @const {number} */
SP.DateTimeKind.local;
/**
 * @constructor
 * @struct
 */
SP.OfficeVersion = function() {};
 /** @type {number} */
SP.OfficeVersion.prototype.majorBuildVersion;
 /** @type {number} */
SP.OfficeVersion.prototype.previousMajorBuildVersion;
 /** @type {string} */
SP.OfficeVersion.prototype.majorVersion;
 /** @type {string} */
SP.OfficeVersion.prototype.previousVersion;
 /** @type {string} */
SP.OfficeVersion.prototype.majorVersionDotZero;
 /** @type {string} */
SP.OfficeVersion.prototype.previousVersionDotZero;
 /** @type {string} */
SP.OfficeVersion.prototype.assemblyVersion;
 /** @type {string} */
SP.OfficeVersion.prototype.wssMajorVersion;

/**
 * @constructor
 * @struct
 * @param {string=} serverRelativeUrlOrFullUrl
 */
SP.ClientContext = function(serverRelativeUrlOrFullUrl) {};

/**
 * @return {!SP.ClientContext}
 */
SP.ClientContext.get_current = function() {};

/**
 * @return {!SP.Web}
 */
SP.ClientContext.prototype.get_web = function() {};

/**
 * @return {!SP.Site}
 */
SP.ClientContext.prototype.get_site = function() {};

/**
 * @return {string}
 */
SP.ClientContext.prototype.get_serverVersion = function() {};

/** @const */
SP.ULSTraceLevel = {};
/** @const {number} */
SP.ULSTraceLevel.verbose;
/**
 * @constructor
 * @struct
 */
SP.ULS = function() {};

/**
 * Gets a value that indicates whether the Unified Logging Service (ULS) is enabled.
 * @return {boolean}
 */
SP.ULS.get_enabled = function() {};

/**
 * Sets a value that indicates whether the Unified Logging Service (ULS) is enabled.
 * @param {boolean} value
 * @return {void}
 */
SP.ULS.set_enabled = function(value) {};

/**
 * Logs the specified debug message.
 * This method logs the message with a time stamp. If any log messages are pending, this method also logs them. If the message cannot be logged, the message is added to the list of pending log messages.
 * @param {string} debugMessage
 * @return {void}
 */
SP.ULS.log = function(debugMessage) {};

/**
 * Increases the indentation for subsequent log messages.
 * @return {void}
 */
SP.ULS.increaseIndent = function() {};

/**
 * Decreases the indentation for subsequent log messages.
 * @return {void}
 */
SP.ULS.decreaseIndent = function() {};

/**
 * Traces when the function was entered.
 * @param {string} functionName
 * @param {!Array<?>=} args
 * @return {void}
 */
SP.ULS.traceApiEnter = function(functionName, args) {};

/**
 * Traces when the function has finished.
 * @return {void}
 */
SP.ULS.traceApiLeave = function() {};
/**
 * @constructor
 * @struct
 */
SP.AccessRequests = function() {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {number} itemId
 * @param {number} newStatus
 * @param {string} convStr
 * @param {string} permType
 * @param {number} permissionLevel
 * @return {void}
 */
SP.AccessRequests.changeRequestStatus = function(context, itemId, newStatus, convStr, permType, permissionLevel) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!Array<number>} requestIds
 * @param {number} newStatus
 * @return {void}
 */
SP.AccessRequests.changeRequestStatusBulk = function(context, requestIds, newStatus) {};

/** @const */
SP.AddFieldOptions = {};
/** @const {number} */
SP.AddFieldOptions.defaultValue;
/** @const {number} */
SP.AddFieldOptions.addToDefaultContentType;
/** @const {number} */
SP.AddFieldOptions.addToNoContentType;
/** @const {number} */
SP.AddFieldOptions.addToAllContentTypes;
/** @const {number} */
SP.AddFieldOptions.addFieldInternalNameHint;
/** @const {number} */
SP.AddFieldOptions.addFieldToDefaultView;
/** @const {number} */
SP.AddFieldOptions.addFieldCheckDisplayName;
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.AlternateUrl = function() {};

/**
 * @return {string}
 */
SP.AlternateUrl.prototype.get_uri = function() {};

/**
 * @return {SP.UrlZone}
 */
SP.AlternateUrl.prototype.get_urlZone = function() {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.App = function() {};

/**
 * @return {string}
 */
SP.App.prototype.get_assetId = function() {};

/**
 * @return {string}
 */
SP.App.prototype.get_contentMarket = function() {};

/**
 * @return {string}
 */
SP.App.prototype.get_versionString = function() {};
/**
 * @constructor
 * @struct
 */
SP.AppCatalog = function() {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.Web} web
 * @return {!SP.ClientObjectList<!SP.AppInstance>}
 */
SP.AppCatalog.getAppInstances = function(context, web) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.Site} site
 * @param {!Array<!SP.Guid>} appInstanceIds
 * @return {!SP.ClientObjectList<!SP.AppInstance>}
 */
SP.AppCatalog.getDeveloperSiteAppInstancesByIds = function(context, site, appInstanceIds) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @return {!SP.BooleanResult}
 */
SP.AppCatalog.isAppSideloadingEnabled = function(context) {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientRuntimeContext} context
 * @param {string} siteUrl
 */
SP.AppContextSite = function(context, siteUrl) {};

/**
 * @return {!SP.Site}
 */
SP.AppContextSite.prototype.get_site = function() {};

/**
 * @return {!SP.Web}
 */
SP.AppContextSite.prototype.get_web = function() {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {string} siteUrl
 * @return {!SP.AppContextSite}
 */
SP.AppContextSite.newObject = function(context, siteUrl) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.AppInstance = function() {};

/**
 * @return {string}
 */
SP.AppInstance.prototype.get_appPrincipalId = function() {};

/**
 * @return {string}
 */
SP.AppInstance.prototype.get_appWebFullUrl = function() {};

/**
 * @return {!SP.Guid}
 */
SP.AppInstance.prototype.get_id = function() {};

/**
 * @return {boolean}
 */
SP.AppInstance.prototype.get_inError = function() {};

/**
 * @return {string}
 */
SP.AppInstance.prototype.get_startPage = function() {};

/**
 * @return {string}
 */
SP.AppInstance.prototype.get_remoteAppUrl = function() {};

/**
 * @return {string}
 */
SP.AppInstance.prototype.get_settingsPageUrl = function() {};

/**
 * @return {!SP.Guid}
 */
SP.AppInstance.prototype.get_siteId = function() {};

/**
 * @return {SP.AppInstanceStatus}
 */
SP.AppInstance.prototype.get_status = function() {};

/**
 * @return {string}
 */
SP.AppInstance.prototype.get_title = function() {};

/**
 * @return {!SP.Guid}
 */
SP.AppInstance.prototype.get_webId = function() {};

/**
 * @return {!SP.ClientObjectList<!SP.AppInstanceErrorDetails>}
 */
SP.AppInstance.prototype.getErrorDetails = function() {};

/**
 * @return {!SP.GuidResult}
 */
SP.AppInstance.prototype.uninstall = function() {};

/**
 * @param {!SP.Base64EncodedByteArray} appPackageStream
 * @return {void}
 */
SP.AppInstance.prototype.upgrade = function(appPackageStream) {};

/**
 * @return {!SP.BooleanResult}
 */
SP.AppInstance.prototype.cancelAllJobs = function() {};

/**
 * @return {!SP.GuidResult}
 */
SP.AppInstance.prototype.install = function() {};

/**
 * @return {!SP.App}
 */
SP.AppInstance.prototype.getPreviousAppVersion = function() {};

/**
 * @return {void}
 */
SP.AppInstance.prototype.retryAllJobs = function() {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.AppInstanceErrorDetails = function() {};

/**
 * @return {!SP.Guid}
 */
SP.AppInstanceErrorDetails.prototype.get_correlationId = function() {};

/**
 * @param {!SP.Guid} value
 * @return {void}
 */
SP.AppInstanceErrorDetails.prototype.set_correlationId = function(value) {};

/**
 * @return {string}
 */
SP.AppInstanceErrorDetails.prototype.get_errorDetail = function() {};

/**
 * @return {SP.AppInstanceErrorType}
 */
SP.AppInstanceErrorDetails.prototype.get_errorType = function() {};

/**
 * @param {SP.AppInstanceErrorType} value
 * @return {void}
 */
SP.AppInstanceErrorDetails.prototype.set_errorType = function(value) {};

/**
 * @return {string}
 */
SP.AppInstanceErrorDetails.prototype.get_errorTypeName = function() {};

/**
 * @return {string}
 */
SP.AppInstanceErrorDetails.prototype.get_exceptionMessage = function() {};

/**
 * @return {SP.AppInstanceErrorSource}
 */
SP.AppInstanceErrorDetails.prototype.get_source = function() {};

/**
 * @param {SP.AppInstanceErrorSource} value
 * @return {void}
 */
SP.AppInstanceErrorDetails.prototype.set_source = function(value) {};

/**
 * @return {string}
 */
SP.AppInstanceErrorDetails.prototype.get_sourceName = function() {};

/** @const */
SP.AppInstanceErrorSource = {};
/** @const {number} */
SP.AppInstanceErrorSource.common;
/** @const {number} */
SP.AppInstanceErrorSource.appWeb;
/** @const {number} */
SP.AppInstanceErrorSource.parentWeb;
/** @const {number} */
SP.AppInstanceErrorSource.remoteWebSite;
/** @const {number} */
SP.AppInstanceErrorSource.database;
/** @const {number} */
SP.AppInstanceErrorSource.officeExtension;
/** @const {number} */
SP.AppInstanceErrorSource.eventCallouts;
/** @const {number} */
SP.AppInstanceErrorSource.finalization;

/** @const */
SP.AppInstanceErrorType = {};
/** @const {number} */
SP.AppInstanceErrorType.transient;
/** @const {number} */
SP.AppInstanceErrorType.configuration;
/** @const {number} */
SP.AppInstanceErrorType.app;

/** @const */
SP.AppInstanceStatus = {};
/** @const {number} */
SP.AppInstanceStatus.invalidStatus;
/** @const {number} */
SP.AppInstanceStatus.installing;
/** @const {number} */
SP.AppInstanceStatus.canceling;
/** @const {number} */
SP.AppInstanceStatus.uninstalling;
/** @const {number} */
SP.AppInstanceStatus.installed;
/** @const {number} */
SP.AppInstanceStatus.upgrading;
/** @const {number} */
SP.AppInstanceStatus.initialized;
/** @const {number} */
SP.AppInstanceStatus.upgradeCanceling;
/** @const {number} */
SP.AppInstanceStatus.disabling;
/** @const {number} */
SP.AppInstanceStatus.disabled;

/**
 * @constructor
 * @struct
 */
SP.AppLicense = function() {};

/**
 * @return {string}
 */
SP.AppLicense.prototype.get_rawXMLLicenseToken = function() {};

/**
 * @return {string}
 */
SP.AppLicense.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.AppLicense.prototype.writeToXml = function(writer, serializationContext) {};

/**
 * @constructor
 * @struct
 */
SP.AppLicenseCollection = function() {};

/**
 * @param {!SP.AppLicense} item
 * @return {void}
 */
SP.AppLicenseCollection.prototype.add = function(item) {};

/**
 * @param {number} index
 * @return {!SP.AppLicense}
 */
SP.AppLicenseCollection.prototype.get_item = function(index) {};

/**
 * @return {string}
 */
SP.AppLicenseCollection.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.AppLicenseCollection.prototype.writeToXml = function(writer, serializationContext) {};

/** @const */
SP.AppLicenseType = {};
/** @const {number} */
SP.AppLicenseType.perpetualMultiUser;
/** @const {number} */
SP.AppLicenseType.perpetualAllUsers;
/** @const {number} */
SP.AppLicenseType.trialMultiUser;
/** @const {number} */
SP.AppLicenseType.trialAllUsers;
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.Attachment = function() {};

/**
 * @return {string}
 */
SP.Attachment.prototype.get_fileName = function() {};

/**
 * @return {string}
 */
SP.Attachment.prototype.get_serverRelativeUrl = function() {};

/**
 * @return {void}
 */
SP.Attachment.prototype.deleteObject = function() {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.AttachmentCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.Attachment}
 */
SP.AttachmentCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.Attachment}
 */
SP.AttachmentCollection.prototype.get_item = function(index) {};

/**
 * @param {string} fileName
 * @return {!SP.Attachment}
 */
SP.AttachmentCollection.prototype.getByFileName = function(fileName) {};

/**
 * @constructor
 * @struct
 */
SP.AttachmentCreationInformation = function() {};

/**
 * @return {!SP.Base64EncodedByteArray}
 */
SP.AttachmentCreationInformation.prototype.get_contentStream = function() {};

/**
 * @param {!SP.Base64EncodedByteArray} value
 * @return {void}
 */
SP.AttachmentCreationInformation.prototype.set_contentStream = function(value) {};

/**
 * @return {string}
 */
SP.AttachmentCreationInformation.prototype.get_fileName = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.AttachmentCreationInformation.prototype.set_fileName = function(value) {};

/**
 * @return {string}
 */
SP.AttachmentCreationInformation.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.AttachmentCreationInformation.prototype.writeToXml = function(writer, serializationContext) {};

/**
 * @constructor
 * @struct
 */
SP.BasePermissions = function() {};

/**
 * @param {SP.PermissionKind} perm
 * @return {void}
 */
SP.BasePermissions.prototype.set = function(perm) {};

/**
 * @param {SP.PermissionKind} perm
 * @return {void}
 */
SP.BasePermissions.prototype.clear = function(perm) {};

/**
 * @return {void}
 */
SP.BasePermissions.prototype.clearAll = function() {};

/**
 * @param {SP.PermissionKind} perm
 * @return {boolean}
 */
SP.BasePermissions.prototype.has = function(perm) {};

/**
 * @param {!SP.BasePermissions} perm
 * @return {boolean}
 */
SP.BasePermissions.prototype.equals = function(perm) {};

/**
 * @param {number} high
 * @param {number} low
 * @return {boolean}
 */
SP.BasePermissions.prototype.hasPermissions = function(high, low) {};

/**
 * @return {string}
 */
SP.BasePermissions.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.BasePermissions.prototype.writeToXml = function(writer, serializationContext) {};

/** @const */
SP.BaseType = {};
/** @const {number} */
SP.BaseType.none;
/** @const {number} */
SP.BaseType.genericList;
/** @const {number} */
SP.BaseType.documentLibrary;
/** @const {number} */
SP.BaseType.unused;
/** @const {number} */
SP.BaseType.discussionBoard;
/** @const {number} */
SP.BaseType.survey;
/** @const {number} */
SP.BaseType.issue;

/** @const */
SP.BrowserFileHandling = {};
/** @const {number} */
SP.BrowserFileHandling.permissive;
/** @const {number} */
SP.BrowserFileHandling.strict;

/** @const */
SP.CalendarType = {};
/** @const {number} */
SP.CalendarType.none;
/** @const {number} */
SP.CalendarType.gregorian;
/** @const {number} */
SP.CalendarType.japan;
/** @const {number} */
SP.CalendarType.taiwan;
/** @const {number} */
SP.CalendarType.korea;
/** @const {number} */
SP.CalendarType.hijri;
/** @const {number} */
SP.CalendarType.thai;
/** @const {number} */
SP.CalendarType.hebrew;
/** @const {number} */
SP.CalendarType.gregorianMEFrench;
/** @const {number} */
SP.CalendarType.gregorianArabic;
/** @const {number} */
SP.CalendarType.gregorianXLITEnglish;
/** @const {number} */
SP.CalendarType.gregorianXLITFrench;
/** @const {number} */
SP.CalendarType.koreaJapanLunar;
/** @const {number} */
SP.CalendarType.chineseLunar;
/** @const {number} */
SP.CalendarType.sakaEra;
/** @const {number} */
SP.CalendarType.umAlQura;

/**
 * @constructor
 * @struct
 */
SP.CamlQuery = function() {};

/**
 * This method creates a Collaborative Application Markup Language (CAML) string
 * that can be used to recursively get all of the items in a list, including
 * the items in the subfolders.
 * @return {!SP.CamlQuery}
 */
SP.CamlQuery.createAllItemsQuery = function() {};

/**
 * This method creates a Collaborative Application Markup Language (CAML) string
 * that can be used to recursively get all of the folders in a list, including
 * the subfolders.
 * @return {!SP.CamlQuery}
 */
SP.CamlQuery.createAllFoldersQuery = function() {};

/**
 * Returns true if the query returns dates in Coordinated Universal Time (UTC) format.
 * @return {boolean}
 */
SP.CamlQuery.prototype.get_datesInUtc = function() {};

/**
 * Sets a value that indicates whether the query returns dates in Coordinated Universal Time (UTC) format.
 * @param {boolean} value
 * @return {void}
 */
SP.CamlQuery.prototype.set_datesInUtc = function(value) {};

/**
 * Server relative URL of a list folder from which results will be returned.
 * @return {string}
 */
SP.CamlQuery.prototype.get_folderServerRelativeUrl = function() {};

/**
 * Sets a value that specifies the server relative URL of a list folder from which results will be returned.
 * @param {string} value
 * @return {void}
 */
SP.CamlQuery.prototype.set_folderServerRelativeUrl = function(value) {};

/**
 * @return {!SP.ListItemCollectionPosition}
 */
SP.CamlQuery.prototype.get_listItemCollectionPosition = function() {};

/**
 * Sets a value that specifies the information required to get the next page of data for the list view.
 * @param {!SP.ListItemCollectionPosition} value
 * @return {void}
 */
SP.CamlQuery.prototype.set_listItemCollectionPosition = function(value) {};

/**
 * Gets value that specifies the XML schema that defines the list view.
 * @return {string}
 */
SP.CamlQuery.prototype.get_viewXml = function() {};

/**
 * Sets value that specifies the XML schema that defines the list view. It must be null, empty, or an XML fragment that conforms to the ViewDefinition type.
 * @param {string} value
 * @return {void}
 */
SP.CamlQuery.prototype.set_viewXml = function(value) {};

/**
 * This member is reserved for internal use and is not intended to be used directly from your code.
 * @return {string}
 */
SP.CamlQuery.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.CamlQuery.prototype.writeToXml = function(writer, serializationContext) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.Change = function() {};

/**
 * @return {!SP.ChangeToken}
 */
SP.Change.prototype.get_changeToken = function() {};

/**
 * @return {SP.ChangeType}
 */
SP.Change.prototype.get_changeType = function() {};

/**
 * @return {!SP.Guid}
 */
SP.Change.prototype.get_siteId = function() {};

/**
 * @return {!Date}
 */
SP.Change.prototype.get_time = function() {};
/**
 * @extends {SP.Change}
 * @constructor
 * @struct
 */
SP.ChangeAlert = function() {};

/**
 * @return {!SP.Guid}
 */
SP.ChangeAlert.prototype.get_alertId = function() {};

/**
 * @return {!SP.Guid}
 */
SP.ChangeAlert.prototype.get_webId = function() {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.ChangeCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.Change}
 */
SP.ChangeCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.Change}
 */
SP.ChangeCollection.prototype.get_item = function(index) {};
/**
 * @extends {SP.Change}
 * @constructor
 * @struct
 */
SP.ChangeContentType = function() {};

/**
 * @return {!SP.ContentTypeId}
 */
SP.ChangeContentType.prototype.get_contentTypeId = function() {};

/**
 * @return {!SP.Guid}
 */
SP.ChangeContentType.prototype.get_webId = function() {};
/**
 * @extends {SP.Change}
 * @constructor
 * @struct
 */
SP.ChangeField = function() {};

/**
 * @return {!SP.Guid}
 */
SP.ChangeField.prototype.get_fieldId = function() {};

/**
 * @return {!SP.Guid}
 */
SP.ChangeField.prototype.get_webId = function() {};
/**
 * @extends {SP.Change}
 * @constructor
 * @struct
 */
SP.ChangeFile = function() {};

/**
 * @return {!SP.Guid}
 */
SP.ChangeFile.prototype.get_uniqueId = function() {};

/**
 * @return {!SP.Guid}
 */
SP.ChangeFile.prototype.get_webId = function() {};
/**
 * @extends {SP.Change}
 * @constructor
 * @struct
 */
SP.ChangeFolder = function() {};

/**
 * @return {!SP.Guid}
 */
SP.ChangeFolder.prototype.get_uniqueId = function() {};

/**
 * @return {!SP.Guid}
 */
SP.ChangeFolder.prototype.get_webId = function() {};
/**
 * @extends {SP.Change}
 * @constructor
 * @struct
 */
SP.ChangeGroup = function() {};

/**
 * @return {number}
 */
SP.ChangeGroup.prototype.get_groupId = function() {};
/**
 * @extends {SP.Change}
 * @constructor
 * @struct
 */
SP.ChangeItem = function() {};

/**
 * @return {number}
 */
SP.ChangeItem.prototype.get_itemId = function() {};

/**
 * @return {!SP.Guid}
 */
SP.ChangeItem.prototype.get_listId = function() {};

/**
 * @return {!SP.Guid}
 */
SP.ChangeItem.prototype.get_webId = function() {};
/**
 * @extends {SP.Change}
 * @constructor
 * @struct
 */
SP.ChangeList = function() {};

/**
 * @return {!SP.Guid}
 */
SP.ChangeList.prototype.get_listId = function() {};

/**
 * @return {!SP.Guid}
 */
SP.ChangeList.prototype.get_webId = function() {};

/**
 * @constructor
 * @struct
 */
SP.ChangeLogItemQuery = function() {};

/**
 * @return {string}
 */
SP.ChangeLogItemQuery.prototype.get_changeToken = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ChangeLogItemQuery.prototype.set_changeToken = function(value) {};

/**
 * @return {string}
 */
SP.ChangeLogItemQuery.prototype.get_contains = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ChangeLogItemQuery.prototype.set_contains = function(value) {};

/**
 * @return {string}
 */
SP.ChangeLogItemQuery.prototype.get_query = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ChangeLogItemQuery.prototype.set_query = function(value) {};

/**
 * @return {string}
 */
SP.ChangeLogItemQuery.prototype.get_queryOptions = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ChangeLogItemQuery.prototype.set_queryOptions = function(value) {};

/**
 * @return {string}
 */
SP.ChangeLogItemQuery.prototype.get_rowLimit = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ChangeLogItemQuery.prototype.set_rowLimit = function(value) {};

/**
 * @return {string}
 */
SP.ChangeLogItemQuery.prototype.get_viewFields = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ChangeLogItemQuery.prototype.set_viewFields = function(value) {};

/**
 * @return {string}
 */
SP.ChangeLogItemQuery.prototype.get_viewName = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ChangeLogItemQuery.prototype.set_viewName = function(value) {};

/**
 * @return {string}
 */
SP.ChangeLogItemQuery.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.ChangeLogItemQuery.prototype.writeToXml = function(writer, serializationContext) {};

/**
 * @constructor
 * @struct
 * @param {boolean=} allChangeObjectTypes
 * @param {boolean=} allChangeTypes
 */
SP.ChangeQuery = function(allChangeObjectTypes, allChangeTypes) {};

/**
 * @return {boolean}
 */
SP.ChangeQuery.prototype.get_add = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ChangeQuery.prototype.set_add = function(value) {};

/**
 * @return {boolean}
 */
SP.ChangeQuery.prototype.get_alert = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ChangeQuery.prototype.set_alert = function(value) {};

/**
 * @return {!SP.ChangeToken}
 */
SP.ChangeQuery.prototype.get_changeTokenEnd = function() {};

/**
 * @param {!SP.ChangeToken} value
 * @return {void}
 */
SP.ChangeQuery.prototype.set_changeTokenEnd = function(value) {};

/**
 * @return {!SP.ChangeToken}
 */
SP.ChangeQuery.prototype.get_changeTokenStart = function() {};

/**
 * @param {!SP.ChangeToken} value
 * @return {void}
 */
SP.ChangeQuery.prototype.set_changeTokenStart = function(value) {};

/**
 * @return {boolean}
 */
SP.ChangeQuery.prototype.get_contentType = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ChangeQuery.prototype.set_contentType = function(value) {};

/**
 * @return {boolean}
 */
SP.ChangeQuery.prototype.get_deleteObject = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ChangeQuery.prototype.set_deleteObject = function(value) {};

/**
 * @return {boolean}
 */
SP.ChangeQuery.prototype.get_field = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ChangeQuery.prototype.set_field = function(value) {};

/**
 * @return {boolean}
 */
SP.ChangeQuery.prototype.get_file = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ChangeQuery.prototype.set_file = function(value) {};

/**
 * @return {boolean}
 */
SP.ChangeQuery.prototype.get_folder = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ChangeQuery.prototype.set_folder = function(value) {};

/**
 * @return {boolean}
 */
SP.ChangeQuery.prototype.get_group = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ChangeQuery.prototype.set_group = function(value) {};

/**
 * @return {boolean}
 */
SP.ChangeQuery.prototype.get_groupMembershipAdd = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ChangeQuery.prototype.set_groupMembershipAdd = function(value) {};

/**
 * @return {boolean}
 */
SP.ChangeQuery.prototype.get_groupMembershipDelete = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ChangeQuery.prototype.set_groupMembershipDelete = function(value) {};

/**
 * @return {boolean}
 */
SP.ChangeQuery.prototype.get_item = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ChangeQuery.prototype.set_item = function(value) {};

/**
 * @return {boolean}
 */
SP.ChangeQuery.prototype.get_list = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ChangeQuery.prototype.set_list = function(value) {};

/**
 * @return {boolean}
 */
SP.ChangeQuery.prototype.get_move = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ChangeQuery.prototype.set_move = function(value) {};

/**
 * @return {boolean}
 */
SP.ChangeQuery.prototype.get_navigation = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ChangeQuery.prototype.set_navigation = function(value) {};

/**
 * @return {boolean}
 */
SP.ChangeQuery.prototype.get_rename = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ChangeQuery.prototype.set_rename = function(value) {};

/**
 * @return {boolean}
 */
SP.ChangeQuery.prototype.get_restore = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ChangeQuery.prototype.set_restore = function(value) {};

/**
 * @return {boolean}
 */
SP.ChangeQuery.prototype.get_roleAssignmentAdd = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ChangeQuery.prototype.set_roleAssignmentAdd = function(value) {};

/**
 * @return {boolean}
 */
SP.ChangeQuery.prototype.get_roleAssignmentDelete = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ChangeQuery.prototype.set_roleAssignmentDelete = function(value) {};

/**
 * @return {boolean}
 */
SP.ChangeQuery.prototype.get_roleDefinitionAdd = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ChangeQuery.prototype.set_roleDefinitionAdd = function(value) {};

/**
 * @return {boolean}
 */
SP.ChangeQuery.prototype.get_roleDefinitionDelete = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ChangeQuery.prototype.set_roleDefinitionDelete = function(value) {};

/**
 * @return {boolean}
 */
SP.ChangeQuery.prototype.get_roleDefinitionUpdate = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ChangeQuery.prototype.set_roleDefinitionUpdate = function(value) {};

/**
 * @return {boolean}
 */
SP.ChangeQuery.prototype.get_securityPolicy = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ChangeQuery.prototype.set_securityPolicy = function(value) {};

/**
 * @return {boolean}
 */
SP.ChangeQuery.prototype.get_site = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ChangeQuery.prototype.set_site = function(value) {};

/**
 * @return {boolean}
 */
SP.ChangeQuery.prototype.get_systemUpdate = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ChangeQuery.prototype.set_systemUpdate = function(value) {};

/**
 * @return {boolean}
 */
SP.ChangeQuery.prototype.get_update = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ChangeQuery.prototype.set_update = function(value) {};

/**
 * @return {boolean}
 */
SP.ChangeQuery.prototype.get_user = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ChangeQuery.prototype.set_user = function(value) {};

/**
 * @return {boolean}
 */
SP.ChangeQuery.prototype.get_view = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ChangeQuery.prototype.set_view = function(value) {};

/**
 * @return {boolean}
 */
SP.ChangeQuery.prototype.get_web = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ChangeQuery.prototype.set_web = function(value) {};

/**
 * @return {string}
 */
SP.ChangeQuery.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.ChangeQuery.prototype.writeToXml = function(writer, serializationContext) {};
/**
 * @extends {SP.Change}
 * @constructor
 * @struct
 */
SP.ChangeSite = function() {};

/**
 * @constructor
 * @struct
 */
SP.ChangeToken = function() {};

/**
 * @return {string}
 */
SP.ChangeToken.prototype.get_stringValue = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ChangeToken.prototype.set_stringValue = function(value) {};

/**
 * @return {string}
 */
SP.ChangeToken.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.ChangeToken.prototype.writeToXml = function(writer, serializationContext) {};

/** @const */
SP.ChangeType = {};
/** @const {number} */
SP.ChangeType.noChange;
/** @const {number} */
SP.ChangeType.add;
/** @const {number} */
SP.ChangeType.update;
/** @const {number} */
SP.ChangeType.deleteObject;
/** @const {number} */
SP.ChangeType.rename;
/** @const {number} */
SP.ChangeType.moveAway;
/** @const {number} */
SP.ChangeType.moveInto;
/** @const {number} */
SP.ChangeType.restore;
/** @const {number} */
SP.ChangeType.roleAdd;
/** @const {number} */
SP.ChangeType.roleDelete;
/** @const {number} */
SP.ChangeType.roleUpdate;
/** @const {number} */
SP.ChangeType.assignmentAdd;
/** @const {number} */
SP.ChangeType.assignmentDelete;
/** @const {number} */
SP.ChangeType.memberAdd;
/** @const {number} */
SP.ChangeType.memberDelete;
/** @const {number} */
SP.ChangeType.systemUpdate;
/** @const {number} */
SP.ChangeType.navigation;
/** @const {number} */
SP.ChangeType.scopeAdd;
/** @const {number} */
SP.ChangeType.scopeDelete;
/** @const {number} */
SP.ChangeType.listContentTypeAdd;
/** @const {number} */
SP.ChangeType.listContentTypeDelete;
/**
 * @extends {SP.Change}
 * @constructor
 * @struct
 */
SP.ChangeUser = function() {};

/**
 * @return {boolean}
 */
SP.ChangeUser.prototype.get_activate = function() {};

/**
 * @return {number}
 */
SP.ChangeUser.prototype.get_userId = function() {};
/**
 * @extends {SP.Change}
 * @constructor
 * @struct
 */
SP.ChangeView = function() {};

/**
 * @return {!SP.Guid}
 */
SP.ChangeView.prototype.get_viewId = function() {};

/**
 * @return {!SP.Guid}
 */
SP.ChangeView.prototype.get_listId = function() {};

/**
 * @return {!SP.Guid}
 */
SP.ChangeView.prototype.get_webId = function() {};
/**
 * @extends {SP.Change}
 * @constructor
 * @struct
 */
SP.ChangeWeb = function() {};

/**
 * @return {!SP.Guid}
 */
SP.ChangeWeb.prototype.get_webId = function() {};

/** @const */
SP.CheckinType = {};
/** @const {number} */
SP.CheckinType.minorCheckIn;
/** @const {number} */
SP.CheckinType.majorCheckIn;
/** @const {number} */
SP.CheckinType.overwriteCheckIn;

/** @const */
SP.CheckOutType = {};
/** @const {number} */
SP.CheckOutType.online;
/** @const {number} */
SP.CheckOutType.offline;
/** @const {number} */
SP.CheckOutType.none;

/** @const */
SP.ChoiceFormatType = {};
/** @const {number} */
SP.ChoiceFormatType.dropdown;
/** @const {number} */
SP.ChoiceFormatType.radioButtons;
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.CompatibilityRange = function() {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.ContentType = function() {};

/**
 * @return {string}
 */
SP.ContentType.prototype.get_description = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ContentType.prototype.set_description = function(value) {};

/**
 * @return {string}
 */
SP.ContentType.prototype.get_displayFormTemplateName = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ContentType.prototype.set_displayFormTemplateName = function(value) {};

/**
 * @return {string}
 */
SP.ContentType.prototype.get_displayFormUrl = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ContentType.prototype.set_displayFormUrl = function(value) {};

/**
 * @return {string}
 */
SP.ContentType.prototype.get_documentTemplate = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ContentType.prototype.set_documentTemplate = function(value) {};

/**
 * @return {string}
 */
SP.ContentType.prototype.get_documentTemplateUrl = function() {};

/**
 * @return {string}
 */
SP.ContentType.prototype.get_editFormTemplateName = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ContentType.prototype.set_editFormTemplateName = function(value) {};

/**
 * @return {string}
 */
SP.ContentType.prototype.get_editFormUrl = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ContentType.prototype.set_editFormUrl = function(value) {};

/**
 * @return {!SP.FieldLinkCollection}
 */
SP.ContentType.prototype.get_fieldLinks = function() {};

/**
 * @return {!SP.FieldCollection}
 */
SP.ContentType.prototype.get_fields = function() {};

/**
 * @return {string}
 */
SP.ContentType.prototype.get_group = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ContentType.prototype.set_group = function(value) {};

/**
 * @return {boolean}
 */
SP.ContentType.prototype.get_hidden = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ContentType.prototype.set_hidden = function(value) {};

/**
 * @return {!SP.ContentTypeId}
 */
SP.ContentType.prototype.get_id = function() {};

/**
 * @return {string}
 */
SP.ContentType.prototype.get_jsLink = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ContentType.prototype.set_jsLink = function(value) {};

/**
 * @return {string}
 */
SP.ContentType.prototype.get_name = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ContentType.prototype.set_name = function(value) {};

/**
 * @return {string}
 */
SP.ContentType.prototype.get_newFormTemplateName = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ContentType.prototype.set_newFormTemplateName = function(value) {};

/**
 * @return {string}
 */
SP.ContentType.prototype.get_newFormUrl = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ContentType.prototype.set_newFormUrl = function(value) {};

/**
 * @return {!SP.ContentType}
 */
SP.ContentType.prototype.get_parent = function() {};

/**
 * @return {boolean}
 */
SP.ContentType.prototype.get_readOnly = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ContentType.prototype.set_readOnly = function(value) {};

/**
 * @return {string}
 */
SP.ContentType.prototype.get_schemaXml = function() {};

/**
 * @return {string}
 */
SP.ContentType.prototype.get_schemaXmlWithResourceTokens = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ContentType.prototype.set_schemaXmlWithResourceTokens = function(value) {};

/**
 * @return {string}
 */
SP.ContentType.prototype.get_scope = function() {};

/**
 * @return {boolean}
 */
SP.ContentType.prototype.get_sealed = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ContentType.prototype.set_sealed = function(value) {};

/**
 * @return {string}
 */
SP.ContentType.prototype.get_stringId = function() {};

/**
 * @return {!SP.Workflow.WorkflowAssociationCollection}
 */
SP.ContentType.prototype.get_workflowAssociations = function() {};

/**
 * @param {boolean} updateChildren
 * @return {void}
 */
SP.ContentType.prototype.update = function(updateChildren) {};

/**
 * @return {void}
 */
SP.ContentType.prototype.deleteObject = function() {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.ContentTypeCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.ContentType}
 */
SP.ContentTypeCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.ContentType}
 */
SP.ContentTypeCollection.prototype.get_item = function(index) {};

/**
 * @param {string} contentTypeId
 * @return {!SP.ContentType}
 */
SP.ContentTypeCollection.prototype.getById = function(contentTypeId) {};

/**
 * @param {!SP.ContentType} contentType
 * @return {!SP.ContentType}
 */
SP.ContentTypeCollection.prototype.addExistingContentType = function(contentType) {};

/**
 * @param {!SP.ContentTypeCreationInformation} parameters
 * @return {!SP.ContentType}
 */
SP.ContentTypeCollection.prototype.add = function(parameters) {};

/**
 * @constructor
 * @struct
 */
SP.ContentTypeCreationInformation = function() {};

/**
 * @return {string}
 */
SP.ContentTypeCreationInformation.prototype.get_description = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ContentTypeCreationInformation.prototype.set_description = function(value) {};

/**
 * @return {string}
 */
SP.ContentTypeCreationInformation.prototype.get_group = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ContentTypeCreationInformation.prototype.set_group = function(value) {};

/**
 * @return {string}
 */
SP.ContentTypeCreationInformation.prototype.get_name = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ContentTypeCreationInformation.prototype.set_name = function(value) {};

/**
 * @return {!SP.ContentType}
 */
SP.ContentTypeCreationInformation.prototype.get_parentContentType = function() {};

/**
 * @param {!SP.ContentType} value
 * @return {void}
 */
SP.ContentTypeCreationInformation.prototype.set_parentContentType = function(value) {};

/**
 * @return {string}
 */
SP.ContentTypeCreationInformation.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.ContentTypeCreationInformation.prototype.writeToXml = function(writer, serializationContext) {};

/**
 * @constructor
 * @struct
 */
SP.ContentTypeId = function() {};

/**
 * @return {string}
 */
SP.ContentTypeId.prototype.toString = function() {};

/**
 * @return {string}
 */
SP.ContentTypeId.prototype.get_stringValue = function() {};

/**
 * @return {string}
 */
SP.ContentTypeId.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.ContentTypeId.prototype.writeToXml = function(writer, serializationContext) {};

/** @const */
SP.CustomizedPageStatus = {};
/** @const {number} */
SP.CustomizedPageStatus.none;
/** @const {number} */
SP.CustomizedPageStatus.uncustomized;
/** @const {number} */
SP.CustomizedPageStatus.customized;

/** @const */
SP.DateTimeFieldFormatType = {};
/** @const {number} */
SP.DateTimeFieldFormatType.dateOnly;
/** @const {number} */
SP.DateTimeFieldFormatType.dateTime;

/** @const */
SP.DateTimeFieldFriendlyFormatType = {};
/** @const {number} */
SP.DateTimeFieldFriendlyFormatType.unspecified;
/** @const {number} */
SP.DateTimeFieldFriendlyFormatType.disabled;
/** @const {number} */
SP.DateTimeFieldFriendlyFormatType.relative;

/** @const */
SP.DraftVisibilityType = {};
/** @const {number} */
SP.DraftVisibilityType.reader;
/** @const {number} */
SP.DraftVisibilityType.author;
/** @const {number} */
SP.DraftVisibilityType.approver;
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.EventReceiverDefinition = function() {};

/**
 * @return {string}
 */
SP.EventReceiverDefinition.prototype.get_receiverAssembly = function() {};

/**
 * @return {string}
 */
SP.EventReceiverDefinition.prototype.get_receiverClass = function() {};

/**
 * @return {!SP.Guid}
 */
SP.EventReceiverDefinition.prototype.get_receiverId = function() {};

/**
 * @return {string}
 */
SP.EventReceiverDefinition.prototype.get_receiverName = function() {};

/**
 * @return {number}
 */
SP.EventReceiverDefinition.prototype.get_sequenceNumber = function() {};

/**
 * @return {SP.EventReceiverSynchronization}
 */
SP.EventReceiverDefinition.prototype.get_synchronization = function() {};

/**
 * @return {SP.EventReceiverType}
 */
SP.EventReceiverDefinition.prototype.get_eventType = function() {};

/**
 * @return {string}
 */
SP.EventReceiverDefinition.prototype.get_receiverUrl = function() {};

/**
 * @return {void}
 */
SP.EventReceiverDefinition.prototype.update = function() {};

/**
 * @return {void}
 */
SP.EventReceiverDefinition.prototype.deleteObject = function() {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.EventReceiverDefinitionCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.EventReceiverDefinition}
 */
SP.EventReceiverDefinitionCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.EventReceiverDefinition}
 */
SP.EventReceiverDefinitionCollection.prototype.get_item = function(index) {};

/**
 * @param {!SP.Guid} eventReceiverId
 * @return {!SP.EventReceiverDefinition}
 */
SP.EventReceiverDefinitionCollection.prototype.getById = function(eventReceiverId) {};

/**
 * @param {!SP.EventReceiverDefinitionCreationInformation} eventReceiverCreationInformation
 * @return {!SP.EventReceiverDefinition}
 */
SP.EventReceiverDefinitionCollection.prototype.add = function(eventReceiverCreationInformation) {};

/**
 * @constructor
 * @struct
 */
SP.EventReceiverDefinitionCreationInformation = function() {};

/**
 * @return {string}
 */
SP.EventReceiverDefinitionCreationInformation.prototype.get_receiverAssembly = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.EventReceiverDefinitionCreationInformation.prototype.set_receiverAssembly = function(value) {};

/**
 * @return {string}
 */
SP.EventReceiverDefinitionCreationInformation.prototype.get_receiverClass = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.EventReceiverDefinitionCreationInformation.prototype.set_receiverClass = function(value) {};

/**
 * @return {string}
 */
SP.EventReceiverDefinitionCreationInformation.prototype.get_receiverName = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.EventReceiverDefinitionCreationInformation.prototype.set_receiverName = function(value) {};

/**
 * @return {number}
 */
SP.EventReceiverDefinitionCreationInformation.prototype.get_sequenceNumber = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.EventReceiverDefinitionCreationInformation.prototype.set_sequenceNumber = function(value) {};

/**
 * @return {SP.EventReceiverSynchronization}
 */
SP.EventReceiverDefinitionCreationInformation.prototype.get_synchronization = function() {};

/**
 * @param {SP.EventReceiverSynchronization} value
 * @return {void}
 */
SP.EventReceiverDefinitionCreationInformation.prototype.set_synchronization = function(value) {};

/**
 * @return {SP.EventReceiverType}
 */
SP.EventReceiverDefinitionCreationInformation.prototype.get_eventType = function() {};

/**
 * @param {SP.EventReceiverType} value
 * @return {void}
 */
SP.EventReceiverDefinitionCreationInformation.prototype.set_eventType = function(value) {};

/**
 * @return {string}
 */
SP.EventReceiverDefinitionCreationInformation.prototype.get_receiverUrl = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.EventReceiverDefinitionCreationInformation.prototype.set_receiverUrl = function(value) {};

/**
 * @return {string}
 */
SP.EventReceiverDefinitionCreationInformation.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.EventReceiverDefinitionCreationInformation.prototype.writeToXml = function(writer, serializationContext) {};

/** @const */
SP.EventReceiverSynchronization = {};
/** @const {number} */
SP.EventReceiverSynchronization.defaultSynchronization;
/** @const {number} */
SP.EventReceiverSynchronization.synchronous;
/** @const {number} */
SP.EventReceiverSynchronization.asynchronous;

/** @const */
SP.EventReceiverType = {};
/** @const {number} */
SP.EventReceiverType.invalidReceiver;
/** @const {number} */
SP.EventReceiverType.itemAdding;
/** @const {number} */
SP.EventReceiverType.itemUpdating;
/** @const {number} */
SP.EventReceiverType.itemDeleting;
/** @const {number} */
SP.EventReceiverType.itemCheckingIn;
/** @const {number} */
SP.EventReceiverType.itemCheckingOut;
/** @const {number} */
SP.EventReceiverType.itemUncheckingOut;
/** @const {number} */
SP.EventReceiverType.itemAttachmentAdding;
/** @const {number} */
SP.EventReceiverType.itemAttachmentDeleting;
/** @const {number} */
SP.EventReceiverType.itemFileMoving;
/** @const {number} */
SP.EventReceiverType.itemVersionDeleting;
/** @const {number} */
SP.EventReceiverType.fieldAdding;
/** @const {number} */
SP.EventReceiverType.fieldUpdating;
/** @const {number} */
SP.EventReceiverType.fieldDeleting;
/** @const {number} */
SP.EventReceiverType.listAdding;
/** @const {number} */
SP.EventReceiverType.listDeleting;
/** @const {number} */
SP.EventReceiverType.siteDeleting;
/** @const {number} */
SP.EventReceiverType.webDeleting;
/** @const {number} */
SP.EventReceiverType.webMoving;
/** @const {number} */
SP.EventReceiverType.webAdding;
/** @const {number} */
SP.EventReceiverType.groupAdding;
/** @const {number} */
SP.EventReceiverType.groupUpdating;
/** @const {number} */
SP.EventReceiverType.groupDeleting;
/** @const {number} */
SP.EventReceiverType.groupUserAdding;
/** @const {number} */
SP.EventReceiverType.groupUserDeleting;
/** @const {number} */
SP.EventReceiverType.roleDefinitionAdding;
/** @const {number} */
SP.EventReceiverType.roleDefinitionUpdating;
/** @const {number} */
SP.EventReceiverType.roleDefinitionDeleting;
/** @const {number} */
SP.EventReceiverType.roleAssignmentAdding;
/** @const {number} */
SP.EventReceiverType.roleAssignmentDeleting;
/** @const {number} */
SP.EventReceiverType.inheritanceBreaking;
/** @const {number} */
SP.EventReceiverType.inheritanceResetting;
/** @const {number} */
SP.EventReceiverType.workflowStarting;
/** @const {number} */
SP.EventReceiverType.itemAdded;
/** @const {number} */
SP.EventReceiverType.itemUpdated;
/** @const {number} */
SP.EventReceiverType.itemDeleted;
/** @const {number} */
SP.EventReceiverType.itemCheckedIn;
/** @const {number} */
SP.EventReceiverType.itemCheckedOut;
/** @const {number} */
SP.EventReceiverType.itemUncheckedOut;
/** @const {number} */
SP.EventReceiverType.itemAttachmentAdded;
/** @const {number} */
SP.EventReceiverType.itemAttachmentDeleted;
/** @const {number} */
SP.EventReceiverType.itemFileMoved;
/** @const {number} */
SP.EventReceiverType.itemFileConverted;
/** @const {number} */
SP.EventReceiverType.itemVersionDeleted;
/** @const {number} */
SP.EventReceiverType.fieldAdded;
/** @const {number} */
SP.EventReceiverType.fieldUpdated;
/** @const {number} */
SP.EventReceiverType.fieldDeleted;
/** @const {number} */
SP.EventReceiverType.listAdded;
/** @const {number} */
SP.EventReceiverType.listDeleted;
/** @const {number} */
SP.EventReceiverType.siteDeleted;
/** @const {number} */
SP.EventReceiverType.webDeleted;
/** @const {number} */
SP.EventReceiverType.webMoved;
/** @const {number} */
SP.EventReceiverType.webProvisioned;
/** @const {number} */
SP.EventReceiverType.groupAdded;
/** @const {number} */
SP.EventReceiverType.groupUpdated;
/** @const {number} */
SP.EventReceiverType.groupDeleted;
/** @const {number} */
SP.EventReceiverType.groupUserAdded;
/** @const {number} */
SP.EventReceiverType.groupUserDeleted;
/** @const {number} */
SP.EventReceiverType.roleDefinitionAdded;
/** @const {number} */
SP.EventReceiverType.roleDefinitionUpdated;
/** @const {number} */
SP.EventReceiverType.roleDefinitionDeleted;
/** @const {number} */
SP.EventReceiverType.roleAssignmentAdded;
/** @const {number} */
SP.EventReceiverType.roleAssignmentDeleted;
/** @const {number} */
SP.EventReceiverType.inheritanceBroken;
/** @const {number} */
SP.EventReceiverType.inheritanceReset;
/** @const {number} */
SP.EventReceiverType.workflowStarted;
/** @const {number} */
SP.EventReceiverType.workflowPostponed;
/** @const {number} */
SP.EventReceiverType.workflowCompleted;
/** @const {number} */
SP.EventReceiverType.entityInstanceAdded;
/** @const {number} */
SP.EventReceiverType.entityInstanceUpdated;
/** @const {number} */
SP.EventReceiverType.entityInstanceDeleted;
/** @const {number} */
SP.EventReceiverType.appInstalled;
/** @const {number} */
SP.EventReceiverType.appUpgraded;
/** @const {number} */
SP.EventReceiverType.appUninstalling;
/** @const {number} */
SP.EventReceiverType.emailReceived;
/** @const {number} */
SP.EventReceiverType.contextEvent;
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.Feature = function() {};

/**
 * @return {!SP.Guid}
 */
SP.Feature.prototype.get_definitionId = function() {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.FeatureCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.Feature}
 */
SP.FeatureCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.Feature}
 */
SP.FeatureCollection.prototype.get_item = function(index) {};

/**
 * @param {!SP.Guid} featureId
 * @return {!SP.Feature}
 */
SP.FeatureCollection.prototype.getById = function(featureId) {};

/**
 * @param {!SP.Guid} featureId
 * @param {boolean} force
 * @param {SP.FeatureDefinitionScope} featdefScope
 * @return {!SP.Feature}
 */
SP.FeatureCollection.prototype.add = function(featureId, force, featdefScope) {};

/**
 * @param {!SP.Guid} featureId
 * @param {boolean} force
 * @return {void}
 */
SP.FeatureCollection.prototype.remove = function(featureId, force) {};

/** @const */
SP.FeatureDefinitionScope = {};
/** @const {number} */
SP.FeatureDefinitionScope.none;
/** @const {number} */
SP.FeatureDefinitionScope.farm;
/** @const {number} */
SP.FeatureDefinitionScope.site;
/** @const {number} */
SP.FeatureDefinitionScope.web;
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.Field = function() {};

/**
 * @return {boolean}
 */
SP.Field.prototype.get_canBeDeleted = function() {};

/**
 * @return {string}
 */
SP.Field.prototype.get_defaultValue = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Field.prototype.set_defaultValue = function(value) {};

/**
 * @return {string}
 */
SP.Field.prototype.get_description = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Field.prototype.set_description = function(value) {};

/**
 * @return {string}
 */
SP.Field.prototype.get_direction = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Field.prototype.set_direction = function(value) {};

/**
 * @return {boolean}
 */
SP.Field.prototype.get_enforceUniqueValues = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Field.prototype.set_enforceUniqueValues = function(value) {};

/**
 * @return {string}
 */
SP.Field.prototype.get_entityPropertyName = function() {};

/**
 * @return {boolean}
 */
SP.Field.prototype.get_filterable = function() {};

/**
 * @return {boolean}
 */
SP.Field.prototype.get_fromBaseType = function() {};

/**
 * @return {string}
 */
SP.Field.prototype.get_group = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Field.prototype.set_group = function(value) {};

/**
 * @return {boolean}
 */
SP.Field.prototype.get_hidden = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Field.prototype.set_hidden = function(value) {};

/**
 * @return {!SP.Guid}
 */
SP.Field.prototype.get_id = function() {};

/**
 * @return {boolean}
 */
SP.Field.prototype.get_indexed = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Field.prototype.set_indexed = function(value) {};

/**
 * @return {string}
 */
SP.Field.prototype.get_internalName = function() {};

/**
 * @return {string}
 */
SP.Field.prototype.get_jsLink = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Field.prototype.set_jsLink = function(value) {};

/**
 * @return {boolean}
 */
SP.Field.prototype.get_readOnlyField = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Field.prototype.set_readOnlyField = function(value) {};

/**
 * @return {boolean}
 */
SP.Field.prototype.get_required = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Field.prototype.set_required = function(value) {};

/**
 * @return {string}
 */
SP.Field.prototype.get_schemaXml = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Field.prototype.set_schemaXml = function(value) {};

/**
 * @return {string}
 */
SP.Field.prototype.get_schemaXmlWithResourceTokens = function() {};

/**
 * @return {string}
 */
SP.Field.prototype.get_scope = function() {};

/**
 * @return {boolean}
 */
SP.Field.prototype.get_sealed = function() {};

/**
 * @return {boolean}
 */
SP.Field.prototype.get_sortable = function() {};

/**
 * @return {string}
 */
SP.Field.prototype.get_staticName = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Field.prototype.set_staticName = function(value) {};

/**
 * @return {string}
 */
SP.Field.prototype.get_title = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Field.prototype.set_title = function(value) {};

/**
 * @return {SP.FieldType}
 */
SP.Field.prototype.get_fieldTypeKind = function() {};

/**
 * @param {SP.FieldType} value
 * @return {void}
 */
SP.Field.prototype.set_fieldTypeKind = function(value) {};

/**
 * @return {string}
 */
SP.Field.prototype.get_typeAsString = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Field.prototype.set_typeAsString = function(value) {};

/**
 * @return {string}
 */
SP.Field.prototype.get_typeDisplayName = function() {};

/**
 * @return {string}
 */
SP.Field.prototype.get_typeShortDescription = function() {};

/**
 * @return {string}
 */
SP.Field.prototype.get_validationFormula = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Field.prototype.set_validationFormula = function(value) {};

/**
 * @return {string}
 */
SP.Field.prototype.get_validationMessage = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Field.prototype.set_validationMessage = function(value) {};

/**
 * @param {!SP.ListItem<?>} item
 * @param {string} value
 * @return {void}
 */
SP.Field.prototype.validateSetValue = function(item, value) {};

/**
 * @param {boolean} pushChangesToLists
 * @return {void}
 */
SP.Field.prototype.updateAndPushChanges = function(pushChangesToLists) {};

/**
 * @return {void}
 */
SP.Field.prototype.update = function() {};

/**
 * @return {void}
 */
SP.Field.prototype.deleteObject = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Field.prototype.setShowInDisplayForm = function(value) {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Field.prototype.setShowInEditForm = function(value) {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Field.prototype.setShowInNewForm = function(value) {};
/**
 * @extends {SP.Field}
 * @constructor
 * @struct
 */
SP.FieldCalculated = function() {};

/**
 * @return {SP.DateTimeFieldFormatType}
 */
SP.FieldCalculated.prototype.get_dateFormat = function() {};

/**
 * @param {SP.DateTimeFieldFormatType} value
 * @return {void}
 */
SP.FieldCalculated.prototype.set_dateFormat = function(value) {};

/**
 * @return {string}
 */
SP.FieldCalculated.prototype.get_formula = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.FieldCalculated.prototype.set_formula = function(value) {};

/**
 * @return {SP.FieldType}
 */
SP.FieldCalculated.prototype.get_outputType = function() {};

/**
 * @param {SP.FieldType} value
 * @return {void}
 */
SP.FieldCalculated.prototype.set_outputType = function(value) {};

/**
 * @constructor
 * @struct
 */
SP.FieldCalculatedErrorValue = function() {};

/**
 * @return {string}
 */
SP.FieldCalculatedErrorValue.prototype.get_errorMessage = function() {};

/**
 * @return {string}
 */
SP.FieldCalculatedErrorValue.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.FieldCalculatedErrorValue.prototype.writeToXml = function(writer, serializationContext) {};
/**
 * @extends {SP.Field}
 * @constructor
 * @struct
 */
SP.FieldMultiChoice = function() {};

/**
 * @return {boolean}
 */
SP.FieldMultiChoice.prototype.get_fillInChoice = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.FieldMultiChoice.prototype.set_fillInChoice = function(value) {};

/**
 * @return {string}
 */
SP.FieldMultiChoice.prototype.get_mappings = function() {};

/**
 * @return {!Array<string>}
 */
SP.FieldMultiChoice.prototype.get_choices = function() {};

/**
 * @param {!Array<string>} value
 * @return {void}
 */
SP.FieldMultiChoice.prototype.set_choices = function(value) {};
/**
 * @extends {SP.FieldMultiChoice}
 * @constructor
 * @struct
 */
SP.FieldChoice = function() {};

/**
 * @return {SP.ChoiceFormatType}
 */
SP.FieldChoice.prototype.get_editFormat = function() {};

/**
 * @param {SP.ChoiceFormatType} value
 * @return {void}
 */
SP.FieldChoice.prototype.set_editFormat = function(value) {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.FieldCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.Field}
 */
SP.FieldCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.Field}
 */
SP.FieldCollection.prototype.get_item = function(index) {};

/**
 * @return {string}
 */
SP.FieldCollection.prototype.get_schemaXml = function() {};

/**
 * @param {string} title
 * @return {!SP.Field}
 */
SP.FieldCollection.prototype.getByTitle = function(title) {};

/**
 * @param {!SP.Guid} id
 * @return {!SP.Field}
 */
SP.FieldCollection.prototype.getById = function(id) {};

/**
 * @param {!SP.Field} field
 * @return {!SP.Field}
 */
SP.FieldCollection.prototype.add = function(field) {};

/**
 * @param {string} displayName
 * @param {!SP.Field} primaryLookupField
 * @param {string} lookupField
 * @return {!SP.Field}
 */
SP.FieldCollection.prototype.addDependentLookup = function(displayName, primaryLookupField, lookupField) {};

/**
 * @param {string} schemaXml
 * @param {boolean} addToDefaultView
 * @param {SP.AddFieldOptions} options
 * @return {!SP.Field}
 */
SP.FieldCollection.prototype.addFieldAsXml = function(schemaXml, addToDefaultView, options) {};

/**
 * @param {string} strName
 * @return {!SP.Field}
 */
SP.FieldCollection.prototype.getByInternalNameOrTitle = function(strName) {};
/**
 * @extends {SP.Field}
 * @constructor
 * @struct
 */
SP.FieldComputed = function() {};

/**
 * @return {boolean}
 */
SP.FieldComputed.prototype.get_enableLookup = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.FieldComputed.prototype.set_enableLookup = function(value) {};
/**
 * @extends {SP.Field}
 * @constructor
 * @struct
 */
SP.FieldNumber = function() {};

/**
 * @return {number}
 */
SP.FieldNumber.prototype.get_maximumValue = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.FieldNumber.prototype.set_maximumValue = function(value) {};

/**
 * @return {number}
 */
SP.FieldNumber.prototype.get_minimumValue = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.FieldNumber.prototype.set_minimumValue = function(value) {};
/**
 * @extends {SP.FieldNumber}
 * @constructor
 * @struct
 */
SP.FieldCurrency = function() {};

/**
 * @return {number}
 */
SP.FieldCurrency.prototype.get_currencyLocaleId = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.FieldCurrency.prototype.set_currencyLocaleId = function(value) {};
/**
 * @extends {SP.Field}
 * @constructor
 * @struct
 */
SP.FieldDateTime = function() {};

/**
 * @return {SP.CalendarType}
 */
SP.FieldDateTime.prototype.get_dateTimeCalendarType = function() {};

/**
 * @param {SP.CalendarType} value
 * @return {void}
 */
SP.FieldDateTime.prototype.set_dateTimeCalendarType = function(value) {};

/**
 * @return {SP.DateTimeFieldFormatType}
 */
SP.FieldDateTime.prototype.get_displayFormat = function() {};

/**
 * @param {SP.DateTimeFieldFormatType} value
 * @return {void}
 */
SP.FieldDateTime.prototype.set_displayFormat = function(value) {};

/**
 * @return {SP.DateTimeFieldFriendlyFormatType}
 */
SP.FieldDateTime.prototype.get_friendlyDisplayFormat = function() {};

/**
 * @param {SP.DateTimeFieldFriendlyFormatType} value
 * @return {void}
 */
SP.FieldDateTime.prototype.set_friendlyDisplayFormat = function(value) {};
/**
 * @extends {SP.Field}
 * @constructor
 * @struct
 */
SP.FieldGeolocation = function() {};

/**
 * @constructor
 * @struct
 */
SP.FieldGeolocationValue = function() {};

/**
 * @return {number}
 */
SP.FieldGeolocationValue.prototype.get_altitude = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.FieldGeolocationValue.prototype.set_altitude = function(value) {};

/**
 * @return {number}
 */
SP.FieldGeolocationValue.prototype.get_latitude = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.FieldGeolocationValue.prototype.set_latitude = function(value) {};

/**
 * @return {number}
 */
SP.FieldGeolocationValue.prototype.get_longitude = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.FieldGeolocationValue.prototype.set_longitude = function(value) {};

/**
 * @return {number}
 */
SP.FieldGeolocationValue.prototype.get_measure = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.FieldGeolocationValue.prototype.set_measure = function(value) {};

/**
 * @return {string}
 */
SP.FieldGeolocationValue.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.FieldGeolocationValue.prototype.writeToXml = function(writer, serializationContext) {};
/**
 * @extends {SP.Field}
 * @constructor
 * @struct
 */
SP.FieldGuid = function() {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.FieldLink = function() {};

/**
 * @return {boolean}
 */
SP.FieldLink.prototype.get_hidden = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.FieldLink.prototype.set_hidden = function(value) {};

/**
 * @return {!SP.Guid}
 */
SP.FieldLink.prototype.get_id = function() {};

/**
 * @return {string}
 */
SP.FieldLink.prototype.get_name = function() {};

/**
 * @return {boolean}
 */
SP.FieldLink.prototype.get_required = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.FieldLink.prototype.set_required = function(value) {};

/**
 * @return {void}
 */
SP.FieldLink.prototype.deleteObject = function() {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.FieldLinkCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.FieldLink}
 */
SP.FieldLinkCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.FieldLink}
 */
SP.FieldLinkCollection.prototype.get_item = function(index) {};

/**
 * @param {!SP.Guid} id
 * @return {!SP.FieldLink}
 */
SP.FieldLinkCollection.prototype.getById = function(id) {};

/**
 * @param {!SP.FieldLinkCreationInformation} parameters
 * @return {!SP.FieldLink}
 */
SP.FieldLinkCollection.prototype.add = function(parameters) {};

/**
 * @param {!Array<string>} internalNames
 * @return {void}
 */
SP.FieldLinkCollection.prototype.reorder = function(internalNames) {};

/**
 * @constructor
 * @struct
 */
SP.FieldLinkCreationInformation = function() {};

/**
 * @return {!SP.Field}
 */
SP.FieldLinkCreationInformation.prototype.get_field = function() {};

/**
 * @param {!SP.Field} value
 * @return {void}
 */
SP.FieldLinkCreationInformation.prototype.set_field = function(value) {};

/**
 * @return {string}
 */
SP.FieldLinkCreationInformation.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.FieldLinkCreationInformation.prototype.writeToXml = function(writer, serializationContext) {};
/**
 * @extends {SP.Field}
 * @constructor
 * @struct
 */
SP.FieldLookup = function() {};

/**
 * @return {boolean}
 */
SP.FieldLookup.prototype.get_allowMultipleValues = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.FieldLookup.prototype.set_allowMultipleValues = function(value) {};

/**
 * @return {boolean}
 */
SP.FieldLookup.prototype.get_isRelationship = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.FieldLookup.prototype.set_isRelationship = function(value) {};

/**
 * @return {string}
 */
SP.FieldLookup.prototype.get_lookupField = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.FieldLookup.prototype.set_lookupField = function(value) {};

/**
 * @return {string}
 */
SP.FieldLookup.prototype.get_lookupList = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.FieldLookup.prototype.set_lookupList = function(value) {};

/**
 * @return {!SP.Guid}
 */
SP.FieldLookup.prototype.get_lookupWebId = function() {};

/**
 * @param {!SP.Guid} value
 * @return {void}
 */
SP.FieldLookup.prototype.set_lookupWebId = function(value) {};

/**
 * @return {string}
 */
SP.FieldLookup.prototype.get_primaryFieldId = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.FieldLookup.prototype.set_primaryFieldId = function(value) {};

/**
 * @return {SP.RelationshipDeleteBehaviorType}
 */
SP.FieldLookup.prototype.get_relationshipDeleteBehavior = function() {};

/**
 * @param {SP.RelationshipDeleteBehaviorType} value
 * @return {void}
 */
SP.FieldLookup.prototype.set_relationshipDeleteBehavior = function(value) {};

/**
 * @constructor
 * @struct
 */
SP.FieldLookupValue = function() {};

/**
 * @return {number}
 */
SP.FieldLookupValue.prototype.get_lookupId = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.FieldLookupValue.prototype.set_lookupId = function(value) {};

/**
 * @return {string}
 */
SP.FieldLookupValue.prototype.get_lookupValue = function() {};

/**
 * @return {string}
 */
SP.FieldLookupValue.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.FieldLookupValue.prototype.writeToXml = function(writer, serializationContext) {};
/**
 * @extends {SP.Field}
 * @constructor
 * @struct
 */
SP.FieldMultiLineText = function() {};

/**
 * @return {boolean}
 */
SP.FieldMultiLineText.prototype.get_allowHyperlink = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.FieldMultiLineText.prototype.set_allowHyperlink = function(value) {};

/**
 * @return {boolean}
 */
SP.FieldMultiLineText.prototype.get_appendOnly = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.FieldMultiLineText.prototype.set_appendOnly = function(value) {};

/**
 * @return {number}
 */
SP.FieldMultiLineText.prototype.get_numberOfLines = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.FieldMultiLineText.prototype.set_numberOfLines = function(value) {};

/**
 * @return {boolean}
 */
SP.FieldMultiLineText.prototype.get_restrictedMode = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.FieldMultiLineText.prototype.set_restrictedMode = function(value) {};

/**
 * @return {boolean}
 */
SP.FieldMultiLineText.prototype.get_richText = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.FieldMultiLineText.prototype.set_richText = function(value) {};

/**
 * @return {boolean}
 */
SP.FieldMultiLineText.prototype.get_wikiLinking = function() {};
/**
 * @extends {SP.FieldMultiChoice}
 * @constructor
 * @struct
 */
SP.FieldRatingScale = function() {};

/**
 * @return {number}
 */
SP.FieldRatingScale.prototype.get_gridEndNumber = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.FieldRatingScale.prototype.set_gridEndNumber = function(value) {};

/**
 * @return {string}
 */
SP.FieldRatingScale.prototype.get_gridNAOptionText = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.FieldRatingScale.prototype.set_gridNAOptionText = function(value) {};

/**
 * @return {number}
 */
SP.FieldRatingScale.prototype.get_gridStartNumber = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.FieldRatingScale.prototype.set_gridStartNumber = function(value) {};

/**
 * @return {string}
 */
SP.FieldRatingScale.prototype.get_gridTextRangeAverage = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.FieldRatingScale.prototype.set_gridTextRangeAverage = function(value) {};

/**
 * @return {string}
 */
SP.FieldRatingScale.prototype.get_gridTextRangeHigh = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.FieldRatingScale.prototype.set_gridTextRangeHigh = function(value) {};

/**
 * @return {string}
 */
SP.FieldRatingScale.prototype.get_gridTextRangeLow = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.FieldRatingScale.prototype.set_gridTextRangeLow = function(value) {};

/**
 * @return {number}
 */
SP.FieldRatingScale.prototype.get_rangeCount = function() {};

/**
 * @constructor
 * @struct
 */
SP.FieldRatingScaleQuestionAnswer = function() {};

/**
 * @return {number}
 */
SP.FieldRatingScaleQuestionAnswer.prototype.get_answer = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.FieldRatingScaleQuestionAnswer.prototype.set_answer = function(value) {};

/**
 * @return {string}
 */
SP.FieldRatingScaleQuestionAnswer.prototype.get_question = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.FieldRatingScaleQuestionAnswer.prototype.set_question = function(value) {};

/**
 * @return {string}
 */
SP.FieldRatingScaleQuestionAnswer.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.FieldRatingScaleQuestionAnswer.prototype.writeToXml = function(writer, serializationContext) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.FieldStringValues = function() {};

/**
 * @return {?}
 */
SP.FieldStringValues.prototype.get_fieldValues = function() {};

/**
 * @param {string} fieldName
 * @return {string}
 */
SP.FieldStringValues.prototype.get_item = function(fieldName) {};

/**
 * @return {void}
 */
SP.FieldStringValues.prototype.refreshLoad = function() {};
/**
 * @extends {SP.Field}
 * @constructor
 * @struct
 */
SP.FieldText = function() {};

/**
 * @return {number}
 */
SP.FieldText.prototype.get_maxLength = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.FieldText.prototype.set_maxLength = function(value) {};

/** @const */
SP.FieldType = {};
/** @const {number} */
SP.FieldType.invalid;
/** @const {number} */
SP.FieldType.integer;
/** @const {number} */
SP.FieldType.text;
/** @const {number} */
SP.FieldType.note;
/** @const {number} */
SP.FieldType.dateTime;
/** @const {number} */
SP.FieldType.counter;
/** @const {number} */
SP.FieldType.choice;
/** @const {number} */
SP.FieldType.lookup;
/** @const {number} */
SP.FieldType.boolean;
/** @const {number} */
SP.FieldType.number;
/** @const {number} */
SP.FieldType.currency;
/** @const {number} */
SP.FieldType.URL;
/** @const {number} */
SP.FieldType.computed;
/** @const {number} */
SP.FieldType.threading;
/** @const {number} */
SP.FieldType.guid;
/** @const {number} */
SP.FieldType.multiChoice;
/** @const {number} */
SP.FieldType.gridChoice;
/** @const {number} */
SP.FieldType.calculated;
/** @const {number} */
SP.FieldType.file;
/** @const {number} */
SP.FieldType.attachments;
/** @const {number} */
SP.FieldType.user;
/** @const {number} */
SP.FieldType.recurrence;
/** @const {number} */
SP.FieldType.crossProjectLink;
/** @const {number} */
SP.FieldType.modStat;
/** @const {number} */
SP.FieldType.error;
/** @const {number} */
SP.FieldType.contentTypeId;
/** @const {number} */
SP.FieldType.pageSeparator;
/** @const {number} */
SP.FieldType.threadIndex;
/** @const {number} */
SP.FieldType.workflowStatus;
/** @const {number} */
SP.FieldType.allDayEvent;
/** @const {number} */
SP.FieldType.workflowEventType;
/** @const {number} */
SP.FieldType.geolocation;
/** @const {number} */
SP.FieldType.outcomeChoice;
/** @const {number} */
SP.FieldType.maxItems;
/**
 * @extends {SP.Field}
 * @constructor
 * @struct
 */
SP.FieldUrl = function() {};

/**
 * @return {SP.UrlFieldFormatType}
 */
SP.FieldUrl.prototype.get_displayFormat = function() {};

/**
 * @param {SP.UrlFieldFormatType} value
 * @return {void}
 */
SP.FieldUrl.prototype.set_displayFormat = function(value) {};

/**
 * @constructor
 * @struct
 */
SP.FieldUrlValue = function() {};

/**
 * @return {string}
 */
SP.FieldUrlValue.prototype.get_description = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.FieldUrlValue.prototype.set_description = function(value) {};

/**
 * @return {string}
 */
SP.FieldUrlValue.prototype.get_url = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.FieldUrlValue.prototype.set_url = function(value) {};

/**
 * @return {string}
 */
SP.FieldUrlValue.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.FieldUrlValue.prototype.writeToXml = function(writer, serializationContext) {};
/**
 * @extends {SP.FieldLookup}
 * @constructor
 * @struct
 */
SP.FieldUser = function() {};

/**
 * @return {boolean}
 */
SP.FieldUser.prototype.get_allowDisplay = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.FieldUser.prototype.set_allowDisplay = function(value) {};

/**
 * @return {boolean}
 */
SP.FieldUser.prototype.get_presence = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.FieldUser.prototype.set_presence = function(value) {};

/**
 * @return {number}
 */
SP.FieldUser.prototype.get_selectionGroup = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.FieldUser.prototype.set_selectionGroup = function(value) {};

/**
 * @return {SP.FieldUserSelectionMode}
 */
SP.FieldUser.prototype.get_selectionMode = function() {};

/**
 * @param {SP.FieldUserSelectionMode} value
 * @return {void}
 */
SP.FieldUser.prototype.set_selectionMode = function(value) {};

/** @const */
SP.FieldUserSelectionMode = {};
/** @const {number} */
SP.FieldUserSelectionMode.peopleOnly;
/** @const {number} */
SP.FieldUserSelectionMode.peopleAndGroups;

/**
 * @constructor
 * @struct
 */
SP.FieldUserValue = function() {};

/**
 * @param {string} userName
 * @return {!SP.FieldUserValue}
 */
SP.FieldUserValue.fromUser = function(userName) {};

/**
 * @return {string}
 */
SP.FieldUserValue.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.FieldUserValue.prototype.writeToXml = function(writer, serializationContext) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.File = function() {};

/**
 * @return {!SP.User}
 */
SP.File.prototype.get_author = function() {};

/**
 * Returns the user who has checked out the file.
 * @return {!SP.User}
 */
SP.File.prototype.get_checkedOutByUser = function() {};

/**
 * Returns the comment that was specified when the document was checked into the document library.
 * @return {string}
 */
SP.File.prototype.get_checkInComment = function() {};

/**
 * The type of checkout that exists on the document.
 * @return {SP.CheckOutType}
 */
SP.File.prototype.get_checkOutType = function() {};

/**
 * @return {string}
 */
SP.File.prototype.get_contentTag = function() {};

/**
 * Gets the customization(ghost) status of the SPFile.
 * @return {SP.CustomizedPageStatus}
 */
SP.File.prototype.get_customizedPageStatus = function() {};

/**
 * Gets the ETag of the file
 * @return {string}
 */
SP.File.prototype.get_eTag = function() {};

/**
 * Specifies whether the file exists
 * @return {boolean}
 */
SP.File.prototype.get_exists = function() {};

/**
 * @return {number}
 */
SP.File.prototype.get_length = function() {};

/**
 * @return {SP.FileLevel}
 */
SP.File.prototype.get_level = function() {};

/**
 * Specifies the SPListItem corresponding to this file if this file belongs to a doclib. Values for all fields are returned also.
 * @return {!SP.ListItem<?>}
 */
SP.File.prototype.get_listItemAllFields = function() {};

/**
 * Returns the user that owns the current lock on the file. MUST return null if there is no lock.
 * @return {!SP.User}
 */
SP.File.prototype.get_lockedByUser = function() {};

/**
 * Specifies the major version of the file.
 * @return {number}
 */
SP.File.prototype.get_majorVersion = function() {};

/**
 * Specifies the minor version of the file.
 * @return {number}
 */
SP.File.prototype.get_minorVersion = function() {};

/**
 * @return {!SP.User}
 */
SP.File.prototype.get_modifiedBy = function() {};

/**
 * @return {string}
 */
SP.File.prototype.get_name = function() {};

/**
 * @return {string}
 */
SP.File.prototype.get_serverRelativeUrl = function() {};

/**
 * Specifies when the file was created.
 * @return {!Date}
 */
SP.File.prototype.get_timeCreated = function() {};

/**
 * Specifies when the file was created.
 * @return {!Date}
 */
SP.File.prototype.get_timeLastModified = function() {};

/**
 * @return {string}
 */
SP.File.prototype.get_title = function() {};

/**
 * Specifies the implementation-specific version identifier of the file.
 * @return {number}
 */
SP.File.prototype.get_uIVersion = function() {};

/**
 * Specifies the implementation-specific version identifier of the file.
 * @return {string}
 */
SP.File.prototype.get_uIVersionLabel = function() {};

/**
 * Returns a collection of file version objects that represent the versions of the file.
 * @return {!SP.FileVersionCollection}
 */
SP.File.prototype.get_versions = function() {};

/**
 * Reverts an existing online or offline checkout for the file.
 * @return {void}
 */
SP.File.prototype.undoCheckOut = function() {};

/**
 * @param {string} comment
 * @param {SP.CheckinType} checkInType
 * @return {void}
 */
SP.File.prototype.checkIn = function(comment, checkInType) {};

/**
 * @param {string} comment
 * @return {void}
 */
SP.File.prototype.publish = function(comment) {};

/**
 * Removes the file from content approval with the specified comment.
 * @param {string} comment
 * @return {void}
 */
SP.File.prototype.unPublish = function(comment) {};

/**
 * Approves the file submitted for content approval with the specified comment.
 * @param {string} comment
 * @return {void}
 */
SP.File.prototype.approve = function(comment) {};

/**
 * Denies the file submitted for content approval.
 * @param {string} comment
 * @return {void}
 */
SP.File.prototype.deny = function(comment) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {string} contentTag
 * @return {!SP.IntResult}
 */
SP.File.getContentVerFromTag = function(context, contentTag) {};

/**
 * @param {SP.WebParts.PersonalizationScope} scope
 * @return {!SP.WebParts.LimitedWebPartManager}
 */
SP.File.prototype.getLimitedWebPartManager = function(scope) {};

/**
 * @param {string} newUrl
 * @param {SP.MoveOperations} flags
 * @return {void}
 */
SP.File.prototype.moveTo = function(newUrl, flags) {};

/**
 * @param {string} strNewUrl
 * @param {boolean} bOverWrite
 * @return {void}
 */
SP.File.prototype.copyTo = function(strNewUrl, bOverWrite) {};

/**
 * @param {!SP.FileSaveBinaryInformation} parameters
 * @return {void}
 */
SP.File.prototype.saveBinary = function(parameters) {};

/**
 * @return {void}
 */
SP.File.prototype.deleteObject = function() {};

/**
 * Moves the file to the recycle bin. MUST return the identifier of the new Recycle Bin item
 * @return {!SP.GuidResult}
 */
SP.File.prototype.recycle = function() {};

/**
 * @return {void}
 */
SP.File.prototype.checkOut = function() {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.FileCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.File}
 */
SP.FileCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.File}
 */
SP.FileCollection.prototype.get_item = function(index) {};

/**
 * @param {string} url
 * @return {!SP.File}
 */
SP.FileCollection.prototype.getByUrl = function(url) {};

/**
 * @param {!SP.FileCreationInformation} parameters
 * @return {!SP.File}
 */
SP.FileCollection.prototype.add = function(parameters) {};

/**
 * @param {string} urlOfFile
 * @param {SP.TemplateFileType} templateFileType
 * @return {!SP.File}
 */
SP.FileCollection.prototype.addTemplateFile = function(urlOfFile, templateFileType) {};

/**
 * @constructor
 * @struct
 */
SP.FileCreationInformation = function() {};

/**
 * @return {!SP.Base64EncodedByteArray}
 */
SP.FileCreationInformation.prototype.get_content = function() {};

/**
 * @param {!SP.Base64EncodedByteArray} value
 * @return {void}
 */
SP.FileCreationInformation.prototype.set_content = function(value) {};

/**
 * @return {boolean}
 */
SP.FileCreationInformation.prototype.get_overwrite = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.FileCreationInformation.prototype.set_overwrite = function(value) {};

/**
 * @return {string}
 */
SP.FileCreationInformation.prototype.get_url = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.FileCreationInformation.prototype.set_url = function(value) {};

/**
 * @return {string}
 */
SP.FileCreationInformation.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.FileCreationInformation.prototype.writeToXml = function(writer, serializationContext) {};

/** @const */
SP.FileLevel = {};
/** @const {number} */
SP.FileLevel.published;
/** @const {number} */
SP.FileLevel.draft;
/** @const {number} */
SP.FileLevel.checkout;

/**
 * @constructor
 * @struct
 */
SP.FileSaveBinaryInformation = function() {};

/**
 * @return {boolean}
 */
SP.FileSaveBinaryInformation.prototype.get_checkRequiredFields = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.FileSaveBinaryInformation.prototype.set_checkRequiredFields = function(value) {};

/**
 * @return {!SP.Base64EncodedByteArray}
 */
SP.FileSaveBinaryInformation.prototype.get_content = function() {};

/**
 * @param {!SP.Base64EncodedByteArray} value
 * @return {void}
 */
SP.FileSaveBinaryInformation.prototype.set_content = function(value) {};

/**
 * @return {string}
 */
SP.FileSaveBinaryInformation.prototype.get_eTag = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.FileSaveBinaryInformation.prototype.set_eTag = function(value) {};

/**
 * @return {?}
 */
SP.FileSaveBinaryInformation.prototype.get_fieldValues = function() {};

/**
 * @param {?} value
 * @return {void}
 */
SP.FileSaveBinaryInformation.prototype.set_fieldValues = function(value) {};

/**
 * @return {string}
 */
SP.FileSaveBinaryInformation.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.FileSaveBinaryInformation.prototype.writeToXml = function(writer, serializationContext) {};

/** @const */
SP.FileSystemObjectType = {};
/** @const {number} */
SP.FileSystemObjectType.invalid;
/** @const {number} */
SP.FileSystemObjectType.file;
/** @const {number} */
SP.FileSystemObjectType.folder;
/** @const {number} */
SP.FileSystemObjectType.web;
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.FileVersion = function() {};

/**
 * @return {string}
 */
SP.FileVersion.prototype.get_checkInComment = function() {};

/**
 * @return {!Date}
 */
SP.FileVersion.prototype.get_created = function() {};

/**
 * @return {!SP.User}
 */
SP.FileVersion.prototype.get_createdBy = function() {};

/**
 * @return {number}
 */
SP.FileVersion.prototype.get_iD = function() {};

/**
 * @return {boolean}
 */
SP.FileVersion.prototype.get_isCurrentVersion = function() {};

/**
 * @return {number}
 */
SP.FileVersion.prototype.get_size = function() {};

/**
 * @return {string}
 */
SP.FileVersion.prototype.get_url = function() {};

/**
 * @return {string}
 */
SP.FileVersion.prototype.get_versionLabel = function() {};

/**
 * @return {void}
 */
SP.FileVersion.prototype.deleteObject = function() {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.FileVersionCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.FileVersion}
 */
SP.FileVersionCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.FileVersion}
 */
SP.FileVersionCollection.prototype.get_item = function(index) {};

/**
 * @param {number} versionid
 * @return {!SP.FileVersion}
 */
SP.FileVersionCollection.prototype.getById = function(versionid) {};

/**
 * @param {number} vid
 * @return {void}
 */
SP.FileVersionCollection.prototype.deleteByID = function(vid) {};

/**
 * @param {string} versionlabel
 * @return {void}
 */
SP.FileVersionCollection.prototype.deleteByLabel = function(versionlabel) {};

/**
 * @return {void}
 */
SP.FileVersionCollection.prototype.deleteAll = function() {};

/**
 * @param {string} versionlabel
 * @return {void}
 */
SP.FileVersionCollection.prototype.restoreByLabel = function(versionlabel) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.Folder = function() {};

/**
 * @return {!Array<!SP.ContentTypeId>}
 */
SP.Folder.prototype.get_contentTypeOrder = function() {};

/**
 * @return {!SP.FileCollection}
 */
SP.Folder.prototype.get_files = function() {};

/**
 * @return {!SP.ListItem<?>}
 */
SP.Folder.prototype.get_listItemAllFields = function() {};

/**
 * @return {number}
 */
SP.Folder.prototype.get_itemCount = function() {};

/**
 * @return {string}
 */
SP.Folder.prototype.get_name = function() {};

/**
 * @return {!SP.Folder}
 */
SP.Folder.prototype.get_parentFolder = function() {};

/**
 * @return {!SP.PropertyValues}
 */
SP.Folder.prototype.get_properties = function() {};

/**
 * @return {string}
 */
SP.Folder.prototype.get_serverRelativeUrl = function() {};

/**
 * @return {!SP.FolderCollection}
 */
SP.Folder.prototype.get_folders = function() {};

/**
 * @return {!Array<!SP.ContentTypeId>}
 */
SP.Folder.prototype.get_uniqueContentTypeOrder = function() {};

/**
 * @param {!Array<!SP.ContentTypeId>} value
 * @return {void}
 */
SP.Folder.prototype.set_uniqueContentTypeOrder = function(value) {};

/**
 * @return {string}
 */
SP.Folder.prototype.get_welcomePage = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Folder.prototype.set_welcomePage = function(value) {};

/**
 * @return {void}
 */
SP.Folder.prototype.update = function() {};

/**
 * @return {void}
 */
SP.Folder.prototype.deleteObject = function() {};

/**
 * @return {!SP.GuidResult}
 */
SP.Folder.prototype.recycle = function() {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.FolderCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.Folder}
 */
SP.FolderCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.Folder}
 */
SP.FolderCollection.prototype.get_item = function(index) {};

/**
 * @param {string} url
 * @return {!SP.Folder}
 */
SP.FolderCollection.prototype.getByUrl = function(url) {};

/**
 * @param {string} url
 * @return {!SP.Folder}
 */
SP.FolderCollection.prototype.add = function(url) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.Form = function() {};

/**
 * @return {!SP.Guid}
 */
SP.Form.prototype.get_id = function() {};

/**
 * @return {string}
 */
SP.Form.prototype.get_serverRelativeUrl = function() {};

/**
 * @return {SP.PageType}
 */
SP.Form.prototype.get_formType = function() {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.FormCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.Form}
 */
SP.FormCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.Form}
 */
SP.FormCollection.prototype.get_item = function(index) {};

/**
 * @param {SP.PageType} formType
 * @return {!SP.Form}
 */
SP.FormCollection.prototype.getByPageType = function(formType) {};

/**
 * @param {!SP.Guid} id
 * @return {!SP.Form}
 */
SP.FormCollection.prototype.getById = function(id) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.Principal = function() {};

/**
 * @return {number}
 */
SP.Principal.prototype.get_id = function() {};

/**
 * @return {boolean}
 */
SP.Principal.prototype.get_isHiddenInUI = function() {};

/**
 * @return {string}
 */
SP.Principal.prototype.get_loginName = function() {};

/**
 * @return {string}
 */
SP.Principal.prototype.get_title = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Principal.prototype.set_title = function(value) {};

/**
 * @return {SP.Utilities.PrincipalType}
 */
SP.Principal.prototype.get_principalType = function() {};
/**
 * @extends {SP.Principal}
 * @constructor
 * @struct
 */
SP.Group = function() {};

/**
 * @return {boolean}
 */
SP.Group.prototype.get_allowMembersEditMembership = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Group.prototype.set_allowMembersEditMembership = function(value) {};

/**
 * @return {boolean}
 */
SP.Group.prototype.get_allowRequestToJoinLeave = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Group.prototype.set_allowRequestToJoinLeave = function(value) {};

/**
 * @return {boolean}
 */
SP.Group.prototype.get_autoAcceptRequestToJoinLeave = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Group.prototype.set_autoAcceptRequestToJoinLeave = function(value) {};

/**
 * @return {boolean}
 */
SP.Group.prototype.get_canCurrentUserEditMembership = function() {};

/**
 * @return {boolean}
 */
SP.Group.prototype.get_canCurrentUserManageGroup = function() {};

/**
 * @return {boolean}
 */
SP.Group.prototype.get_canCurrentUserViewMembership = function() {};

/**
 * @return {string}
 */
SP.Group.prototype.get_description = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Group.prototype.set_description = function(value) {};

/**
 * @return {boolean}
 */
SP.Group.prototype.get_onlyAllowMembersViewMembership = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Group.prototype.set_onlyAllowMembersViewMembership = function(value) {};

/**
 * @return {!SP.Principal}
 */
SP.Group.prototype.get_owner = function() {};

/**
 * @param {!SP.Principal} value
 * @return {void}
 */
SP.Group.prototype.set_owner = function(value) {};

/**
 * @return {string}
 */
SP.Group.prototype.get_ownerTitle = function() {};

/**
 * @return {string}
 */
SP.Group.prototype.get_requestToJoinLeaveEmailSetting = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Group.prototype.set_requestToJoinLeaveEmailSetting = function(value) {};

/**
 * @return {!SP.UserCollection}
 */
SP.Group.prototype.get_users = function() {};

/**
 * @return {void}
 */
SP.Group.prototype.update = function() {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.GroupCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.Group}
 */
SP.GroupCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.Group}
 */
SP.GroupCollection.prototype.get_item = function(index) {};

/**
 * @param {string} name
 * @return {!SP.Group}
 */
SP.GroupCollection.prototype.getByName = function(name) {};

/**
 * @param {number} id
 * @return {!SP.Group}
 */
SP.GroupCollection.prototype.getById = function(id) {};

/**
 * @param {!SP.GroupCreationInformation} parameters
 * @return {!SP.Group}
 */
SP.GroupCollection.prototype.add = function(parameters) {};

/**
 * @param {string} loginName
 * @return {void}
 */
SP.GroupCollection.prototype.removeByLoginName = function(loginName) {};

/**
 * @param {number} id
 * @return {void}
 */
SP.GroupCollection.prototype.removeById = function(id) {};

/**
 * @param {!SP.Group} group
 * @return {void}
 */
SP.GroupCollection.prototype.remove = function(group) {};

/**
 * @constructor
 * @struct
 */
SP.GroupCreationInformation = function() {};

/**
 * @return {string}
 */
SP.GroupCreationInformation.prototype.get_description = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.GroupCreationInformation.prototype.set_description = function(value) {};

/**
 * @return {string}
 */
SP.GroupCreationInformation.prototype.get_title = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.GroupCreationInformation.prototype.set_title = function(value) {};

/**
 * @return {string}
 */
SP.GroupCreationInformation.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.GroupCreationInformation.prototype.writeToXml = function(writer, serializationContext) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.InformationRightsManagementSettings = function() {};

/**
 * @return {boolean}
 */
SP.InformationRightsManagementSettings.prototype.get_allowPrint = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.InformationRightsManagementSettings.prototype.set_allowPrint = function(value) {};

/**
 * @return {boolean}
 */
SP.InformationRightsManagementSettings.prototype.get_allowScript = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.InformationRightsManagementSettings.prototype.set_allowScript = function(value) {};

/**
 * @return {boolean}
 */
SP.InformationRightsManagementSettings.prototype.get_allowWriteCopy = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.InformationRightsManagementSettings.prototype.set_allowWriteCopy = function(value) {};

/**
 * @return {boolean}
 */
SP.InformationRightsManagementSettings.prototype.get_disableDocumentBrowserView = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.InformationRightsManagementSettings.prototype.set_disableDocumentBrowserView = function(value) {};

/**
 * @return {number}
 */
SP.InformationRightsManagementSettings.prototype.get_documentAccessExpireDays = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.InformationRightsManagementSettings.prototype.set_documentAccessExpireDays = function(value) {};

/**
 * @return {!Date}
 */
SP.InformationRightsManagementSettings.prototype.get_documentLibraryProtectionExpireDate = function() {};

/**
 * @param {!Date} value
 * @return {void}
 */
SP.InformationRightsManagementSettings.prototype.set_documentLibraryProtectionExpireDate = function(value) {};

/**
 * @return {boolean}
 */
SP.InformationRightsManagementSettings.prototype.get_enableDocumentAccessExpire = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.InformationRightsManagementSettings.prototype.set_enableDocumentAccessExpire = function(value) {};

/**
 * @return {boolean}
 */
SP.InformationRightsManagementSettings.prototype.get_enableDocumentBrowserPublishingView = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.InformationRightsManagementSettings.prototype.set_enableDocumentBrowserPublishingView = function(value) {};

/**
 * @return {boolean}
 */
SP.InformationRightsManagementSettings.prototype.get_enableGroupProtection = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.InformationRightsManagementSettings.prototype.set_enableGroupProtection = function(value) {};

/**
 * @return {boolean}
 */
SP.InformationRightsManagementSettings.prototype.get_enableLicenseCacheExpire = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.InformationRightsManagementSettings.prototype.set_enableLicenseCacheExpire = function(value) {};

/**
 * @return {string}
 */
SP.InformationRightsManagementSettings.prototype.get_groupName = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.InformationRightsManagementSettings.prototype.set_groupName = function(value) {};

/**
 * @return {number}
 */
SP.InformationRightsManagementSettings.prototype.get_licenseCacheExpireDays = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.InformationRightsManagementSettings.prototype.set_licenseCacheExpireDays = function(value) {};

/**
 * @return {string}
 */
SP.InformationRightsManagementSettings.prototype.get_policyDescription = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.InformationRightsManagementSettings.prototype.set_policyDescription = function(value) {};

/**
 * @return {string}
 */
SP.InformationRightsManagementSettings.prototype.get_policyTitle = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.InformationRightsManagementSettings.prototype.set_policyTitle = function(value) {};

/**
 * @return {void}
 */
SP.InformationRightsManagementSettings.prototype.reset = function() {};

/**
 * @return {void}
 */
SP.InformationRightsManagementSettings.prototype.update = function() {};

/**
 * @constructor
 * @struct
 */
SP.Language = function() {};

/**
 * @return {string}
 */
SP.Language.prototype.get_displayName = function() {};

/**
 * @return {string}
 */
SP.Language.prototype.get_languageTag = function() {};

/**
 * @return {number}
 */
SP.Language.prototype.get_lcid = function() {};

/**
 * @return {string}
 */
SP.Language.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.Language.prototype.writeToXml = function(writer, serializationContext) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.SecurableObject = function() {};

/**
 * @return {!SP.SecurableObject}
 */
SP.SecurableObject.prototype.get_firstUniqueAncestorSecurableObject = function() {};

/**
 * @return {boolean}
 */
SP.SecurableObject.prototype.get_hasUniqueRoleAssignments = function() {};

/**
 * @return {!SP.RoleAssignmentCollection}
 */
SP.SecurableObject.prototype.get_roleAssignments = function() {};

/**
 * @return {void}
 */
SP.SecurableObject.prototype.resetRoleInheritance = function() {};

/**
 * @param {boolean} copyRoleAssignments
 * @param {boolean} clearSubscopes
 * @return {void}
 */
SP.SecurableObject.prototype.breakRoleInheritance = function(copyRoleAssignments, clearSubscopes) {};

/** @const */
SP.ControlMode = {};
/** @const {number} */
SP.ControlMode.invalid;
/** @const {number} */
SP.ControlMode.displayMode;
/** @const {number} */
SP.ControlMode.editMode;
/** @const {number} */
SP.ControlMode.newMode;
/**
 * @extends {SP.SecurableObject}
 * @constructor
 * @struct
 */
SP.List = function() {};

/**
 * Gets item by id.
 * @param {number} id
 * @return {!SP.ListItem<?>}
 */
SP.List.prototype.getItemById = function(id) {};

/**
 * Gets a value that specifies whether the list supports content types.
 * @return {boolean}
 */
SP.List.prototype.get_allowContentTypes = function() {};

/**
 * Gets the list definition type on which the list is based. For lists based on OOTB list definitions, return value corresponds the SP.ListTemplateType enumeration.
 * @return {number}
 */
SP.List.prototype.get_baseTemplate = function() {};

/**
 * Gets base type for the list.
 * @return {SP.BaseType}
 */
SP.List.prototype.get_baseType = function() {};

/**
 * Gets a value that specifies the override of the web application�s BrowserFileHandling property at the list level.
 * @return {SP.BrowserFileHandling}
 */
SP.List.prototype.get_browserFileHandling = function() {};

/**
 * Gets the content types that are associated with the list.
 * @return {!SP.ContentTypeCollection}
 */
SP.List.prototype.get_contentTypes = function() {};

/**
 * Gets a value that specifies whether content types are enabled for the list.
 * @return {boolean}
 */
SP.List.prototype.get_contentTypesEnabled = function() {};

/**
 * Sets a value that specifies whether content types are enabled for the list.
 * @param {boolean} value
 * @return {void}
 */
SP.List.prototype.set_contentTypesEnabled = function(value) {};

/**
 * Gets a value that specifies when the list was created.
 * @return {!Date}
 */
SP.List.prototype.get_created = function() {};

/**
 * Gets the data source associated with the list, or null if the list is not a virtual list.
 * @return {!SP.ListDataSource}
 */
SP.List.prototype.get_dataSource = function() {};

/**
 * Gets a value that specifies the default workflow identifier for content approval on the list.
 * @return {!SP.Guid}
 */
SP.List.prototype.get_defaultContentApprovalWorkflowId = function() {};

/**
 * Sets a value that specifies the default workflow identifier for content approval on the list.
 * @param {!SP.Guid} value
 * @return {void}
 */
SP.List.prototype.set_defaultContentApprovalWorkflowId = function(value) {};

/**
 * Gets a value that specifies the location of the default display form for the list.
 * @return {string}
 */
SP.List.prototype.get_defaultDisplayFormUrl = function() {};

/**
 * Sets a value that specifies the location of the default display form for the list.
 * @param {string} value
 * @return {void}
 */
SP.List.prototype.set_defaultDisplayFormUrl = function(value) {};

/**
 * Gets a value that specifies the URL of the edit form to use for list items in the list.
 * @return {string}
 */
SP.List.prototype.get_defaultEditFormUrl = function() {};

/**
 * Sets a value that specifies the URL of the edit form to use for list items in the list.
 * @param {string} value
 * @return {void}
 */
SP.List.prototype.set_defaultEditFormUrl = function(value) {};

/**
 * Gets a value that specifies the location of the default new form for the list.
 * @return {string}
 */
SP.List.prototype.get_defaultNewFormUrl = function() {};

/**
 * Sets a value that specifies the location of the default new form for the list.
 * @param {string} value
 * @return {void}
 */
SP.List.prototype.set_defaultNewFormUrl = function(value) {};

/**
 * Gets default view for the list.
 * @return {!SP.View}
 */
SP.List.prototype.get_defaultView = function() {};

/**
 * Get URL of the default view for the list.
 * @return {string}
 */
SP.List.prototype.get_defaultViewUrl = function() {};

/**
 * Gets a value that specifies the description of the list.
 * @return {string}
 */
SP.List.prototype.get_description = function() {};

/**
 * Sets a value that specifies the description of the list.
 * @param {string} value
 * @return {void}
 */
SP.List.prototype.set_description = function(value) {};

/**
 * Gets a value that specifies the reading order of the list.
 * @return {string}
 */
SP.List.prototype.get_direction = function() {};

/**
 * Sets a value that specifies the reading order of the list.
 * @param {string} value
 * @return {void}
 */
SP.List.prototype.set_direction = function(value) {};

/**
 * Gets a value that specifies the server-relative URL of the document template for the list
 * @return {string}
 */
SP.List.prototype.get_documentTemplateUrl = function() {};

/**
 * Sets a value that specifies the server-relative URL of the document template for the list
 * @param {string} value
 * @return {void}
 */
SP.List.prototype.set_documentTemplateUrl = function(value) {};

/**
 * Gets a value that specifies the minimum permission required to view minor versions and drafts within the list.
 * @return {SP.DraftVisibilityType}
 */
SP.List.prototype.get_draftVersionVisibility = function() {};

/**
 * Sets a value that specifies the minimum permission required to view minor versions and drafts within the list.
 * @param {SP.DraftVisibilityType} value
 * @return {void}
 */
SP.List.prototype.set_draftVersionVisibility = function(value) {};

/**
 * Gets a value that specifies the effective permissions on the list that are assigned to the current user.
 * @return {!SP.BasePermissions}
 */
SP.List.prototype.get_effectiveBasePermissions = function() {};

/**
 * Gets the effective base permissions for the current user, as they should be displayed in UI. This will only differ from EffectiveBasePermissions if ReadOnlyUI is set to true, and in all cases will be a subset of EffectiveBasePermissions. To put it another way, EffectiveBasePermissionsForUI will always be as or more restrictive than EffectiveBasePermissions.
 * @return {!SP.BasePermissions}
 */
SP.List.prototype.get_effectiveBasePermissionsForUI = function() {};

/**
 * Gets a value that specifies whether list item attachments are enabled for the list.
 * @return {boolean}
 */
SP.List.prototype.get_enableAttachments = function() {};

/**
 * Sets a value that specifies whether list item attachments are enabled for the list.
 * @param {boolean} value
 * @return {void}
 */
SP.List.prototype.set_enableAttachments = function(value) {};

/**
 * Gets a value that specifies whether new list folders can be added to the list.
 * @return {boolean}
 */
SP.List.prototype.get_enableFolderCreation = function() {};

/**
 * Sets a value that specifies whether new list folders can be added to the list.
 * @param {boolean} value
 * @return {void}
 */
SP.List.prototype.set_enableFolderCreation = function(value) {};

/**
 * Gets a value that specifies whether minor versions are enabled for the list.
 * @return {boolean}
 */
SP.List.prototype.get_enableMinorVersions = function() {};

/**
 * Sets a value that specifies whether minor versions are enabled for the list.
 * @param {boolean} value
 * @return {void}
 */
SP.List.prototype.set_enableMinorVersions = function(value) {};

/**
 * Gets a value that specifies whether content approval is enabled for the list.
 * @return {boolean}
 */
SP.List.prototype.get_enableModeration = function() {};

/**
 * Sets a value that specifies whether content approval is enabled for the list
 * @param {boolean} value
 * @return {void}
 */
SP.List.prototype.set_enableModeration = function(value) {};

/**
 * Gets a value that specifies whether historical versions of list items and documents can be created in the list
 * @return {boolean}
 */
SP.List.prototype.get_enableVersioning = function() {};

/**
 * Sets a value that specifies whether historical versions of list items and documents can be created in the list
 * @param {boolean} value
 * @return {void}
 */
SP.List.prototype.set_enableVersioning = function(value) {};

/**
 * The entity type name.
 * @return {string}
 */
SP.List.prototype.get_entityTypeName = function() {};

/**
 * Gets collection of event receiver objects associated with the list.
 * @return {!SP.EventReceiverDefinitionCollection}
 */
SP.List.prototype.get_eventReceivers = function() {};

/**
 * Gets a value that specifies the collection of all fields in the list.
 * @return {!SP.FieldCollection}
 */
SP.List.prototype.get_fields = function() {};

/**
 * Gets a value that indicates whether forced checkout is enabled for the document library.
 * @return {boolean}
 */
SP.List.prototype.get_forceCheckout = function() {};

/**
 * Sets a value that indicates whether forced checkout is enabled for the document library
 * @param {boolean} value
 * @return {void}
 */
SP.List.prototype.set_forceCheckout = function(value) {};

/**
 * Gets collections of forms associated with the list.
 * @return {!SP.FormCollection}
 */
SP.List.prototype.get_forms = function() {};

/**
 * Returns true if this is external list.
 * @return {boolean}
 */
SP.List.prototype.get_hasExternalDataSource = function() {};

/**
 * Gets wherever the list is hidden
 * @return {boolean}
 */
SP.List.prototype.get_hidden = function() {};

/**
 * Sets if the list is hidden from "All site contents" or not.
 * @param {boolean} value
 * @return {void}
 */
SP.List.prototype.set_hidden = function(value) {};

/**
 * Gets id of the list
 * @return {!SP.Guid}
 */
SP.List.prototype.get_id = function() {};

/**
 * Gets a value that specifies the URI for the icon of the list
 * @return {string}
 */
SP.List.prototype.get_imageUrl = function() {};

/**
 * Sets a value that specifies the URI for the icon of the list
 * @param {string} value
 * @return {void}
 */
SP.List.prototype.set_imageUrl = function(value) {};

/**
 * Settings of document library Information Rights Management (IRM)
 * @return {!SP.InformationRightsManagementSettings}
 */
SP.List.prototype.get_informationRightsManagementSettings = function() {};

/**
 * Gets a value that specifies whether Information Rights Management (IRM) is enabled for the list.
 * @return {boolean}
 */
SP.List.prototype.get_irmEnabled = function() {};

/**
 * Sets a value that specifies whether Information Rights Management (IRM) is enabled for the list.
 * @param {boolean} value
 * @return {void}
 */
SP.List.prototype.set_irmEnabled = function(value) {};

/**
 * Gets a value that specifies whether Information Rights Management (IRM) expiration is enabled for the list.
 * @return {boolean}
 */
SP.List.prototype.get_irmExpire = function() {};

/**
 * Sets a value that specifies whether Information Rights Management (IRM) expiration is enabled for the list.
 * @param {boolean} value
 * @return {void}
 */
SP.List.prototype.set_irmExpire = function(value) {};

/**
 * Gets a value that specifies whether Information Rights Management (IRM) rejection is enabled for the list.
 * @return {boolean}
 */
SP.List.prototype.get_irmReject = function() {};

/**
 * Sets a value that specifies whether Information Rights Management (IRM) rejection is enabled for the list.
 * @param {boolean} value
 * @return {void}
 */
SP.List.prototype.set_irmReject = function(value) {};

/**
 * Indicates whether this list should be treated as a top level navigation object or not.
 * @return {boolean}
 */
SP.List.prototype.get_isApplicationList = function() {};

/**
 * Sets a value that indicates whether this list should be treated as a top level navigation object or not.
 * @param {boolean} value
 * @return {void}
 */
SP.List.prototype.set_isApplicationList = function(value) {};

/**
 * Gets a value that specifies whether the list is a gallery.
 * @return {boolean}
 */
SP.List.prototype.get_isCatalog = function() {};

/**
 * Gets a value that indicates whether the document library is a private list with restricted permissions, such as for Solutions.
 * @return {boolean}
 */
SP.List.prototype.get_isPrivate = function() {};

/**
 * Gets a value that indicates whether the list is designated as a default asset location for images or other files which the users upload to their wiki pages.
 * @return {boolean}
 */
SP.List.prototype.get_isSiteAssetsLibrary = function() {};

/**
 * Gets a value that specifies the number of list items in the list
 * @return {number}
 */
SP.List.prototype.get_itemCount = function() {};

/**
 * Gets a value that specifies the last time a list item was deleted from the list.
 * @return {!Date}
 */
SP.List.prototype.get_lastItemDeletedDate = function() {};

/**
 * Gets a value that specifies the last time a list item, field, or property of the list was modified.
 * @return {!Date}
 */
SP.List.prototype.get_lastItemModifiedDate = function() {};

/**
 * Sets a value that specifies the last time the list was modified.
 * @param {!Date} value
 * @return {void}
 */
SP.List.prototype.set_lastItemModifiedDate = function(value) {};

/**
 * The entity type full name of the list item in the list.
 * @return {string}
 */
SP.List.prototype.get_listItemEntityTypeFullName = function() {};

/**
 * Gets a value that indicates whether the list in a Meeting Workspace site contains data for multiple meeting instances within the site
 * @return {boolean}
 */
SP.List.prototype.get_multipleDataList = function() {};

/**
 * Sets a value that indicates whether the list in a Meeting Workspace site contains data for multiple meeting instances within the site
 * @param {boolean} value
 * @return {void}
 */
SP.List.prototype.set_multipleDataList = function(value) {};

/**
 * Gets a value that specifies that the crawler must not crawl the list
 * @return {boolean}
 */
SP.List.prototype.get_noCrawl = function() {};

/**
 * Sets a value that specifies that the crawler must not crawl the list
 * @param {boolean} value
 * @return {void}
 */
SP.List.prototype.set_noCrawl = function(value) {};

/**
 * Gets a value that specifies whether the list appears on the Quick Launch of the site
 * @return {boolean}
 */
SP.List.prototype.get_onQuickLaunch = function() {};

/**
 * Sets a value that specifies whether the list appears on the Quick Launch of the site
 * @param {boolean} value
 * @return {void}
 */
SP.List.prototype.set_onQuickLaunch = function(value) {};

/**
 * Gets a value that specifies the site that contains the list.
 * @return {!SP.Web}
 */
SP.List.prototype.get_parentWeb = function() {};

/**
 * Gets a value that specifies the server-relative URL of the site that contains the list.
 * @return {string}
 */
SP.List.prototype.get_parentWebUrl = function() {};

/**
 * Gets the root folder that contains the files in the list and any related files.
 * @return {!SP.Folder}
 */
SP.List.prototype.get_rootFolder = function() {};

/**
 * Gets a value that specifies the list schema of the list.
 * @return {string}
 */
SP.List.prototype.get_schemaXml = function() {};

/**
 * Gets a value that indicates whether folders can be created within the list.
 * @return {boolean}
 */
SP.List.prototype.get_serverTemplateCanCreateFolders = function() {};

/**
 * Gets a value that specifies the feature identifier of the feature that contains the list schema for the list.
 * @return {!SP.Guid}
 */
SP.List.prototype.get_templateFeatureId = function() {};

/**
 * Gets the list title. You can determine list URL from it's root folder URL.
 * @return {string}
 */
SP.List.prototype.get_title = function() {};

/**
 * Sets the list title. To change list URL you should change name of the root folder.
 * @param {string} value
 * @return {void}
 */
SP.List.prototype.set_title = function(value) {};

/**
 * Gets collection of custom actions associated with the list.
 * @return {!SP.UserCustomActionCollection}
 */
SP.List.prototype.get_userCustomActions = function() {};

/**
 * Gets a value that specifies the data validation criteria for a list item.
 * @return {string}
 */
SP.List.prototype.get_validationFormula = function() {};

/**
 * Sets a value that specifies the data validation criteria for a list item.
 * @param {string} value
 * @return {void}
 */
SP.List.prototype.set_validationFormula = function(value) {};

/**
 * Gets a value that specifies the error message returned when data validation fails for a list item.
 * @return {string}
 */
SP.List.prototype.get_validationMessage = function() {};

/**
 * Sets a value that specifies the error message returned when data validation fails for a list item.
 * @param {string} value
 * @return {void}
 */
SP.List.prototype.set_validationMessage = function(value) {};

/**
 * Returns collection of views added to the list
 * @return {!SP.ViewCollection}
 */
SP.List.prototype.get_views = function() {};

/**
 * Gets the collection of workflow association objects that represents all the workflows that are associated with the list.
 * @return {!SP.Workflow.WorkflowAssociationCollection}
 */
SP.List.prototype.get_workflowAssociations = function() {};

/**
 * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.
 * @param {!SP.ChangeQuery} query
 * @return {!SP.ChangeCollection}
 */
SP.List.prototype.getChanges = function(query) {};

/**
 * Returns array of items describing changes since time specified in the query
 * @param {!SP.ChangeLogItemQuery} query
 * @return {!Array<?>}
 */
SP.List.prototype.getListItemChangesSinceToken = function(query) {};

/**
 * Gets the effective permissions that a specified user has on the list.
 * @param {string} userName
 * @return {!SP.BasePermissions}
 */
SP.List.prototype.getUserEffectivePermissions = function(userName) {};

/**
 * First tries to find if the view already exists. Overwrite it if yes, add a new view if no. Then extract all the adhoc filter/sort info from the URL and build and update the view's xml Returns the url of the new/overwritten view.
 * @param {string} oldName The name of the view the user did the adhoc filter on (is currently on).
 * @param {string} newName The desired name the user typed
 * @param {boolean} privateView Boolean true when the user wants make a new view that's personal
 * @param {string} uri Url that keeps all the adhoc filter/sort inforatmion
 * @return {!SP.StringResult}
 */
SP.List.prototype.saveAsNewView = function(oldName, newName, privateView, uri) {};

/**
 * Returns a collection of lookup fields that use this list as a data source and that have FieldLookup.IsRelationship set to true.
 * @return {!SP.RelatedFieldCollection}
 */
SP.List.prototype.getRelatedFields = function() {};

/**
 * This member is reserved for internal use and is not intended to be used directly from your code.
 * @return {!SP.RelatedFieldExtendedDataCollection}
 */
SP.List.prototype.getRelatedFieldsExtendedData = function() {};

/**
 * Returns json string which contains all information necessary for rendering the specified list form for the specified itemId. Mode is SP.ControlMode
 * @param {number} itemId
 * @param {string} formId
 * @param {SP.ControlMode} mode
 * @return {!SP.StringResult}
 */
SP.List.prototype.renderListFormData = function(itemId, formId, mode) {};

/**
 * Returns the data for the specified query view.
 * @param {string} viewXml
 * @return {!SP.StringResult}
 */
SP.List.prototype.renderListData = function(viewXml) {};

/**
 * This member is reserved for internal use and is not intended to be used directly from your code.
 * @return {!SP.IntResult}
 */
SP.List.prototype.reserveListItemId = function() {};

/**
 * Updates the database with changes that are made to the list object.
 * @return {void}
 */
SP.List.prototype.update = function() {};

/**
 * Returns the list view with the specified view identifier.
 * @param {!SP.Guid} viewGuid
 * @return {!SP.View}
 */
SP.List.prototype.getView = function(viewGuid) {};

/**
 * Deletes the list.
 * @return {void}
 */
SP.List.prototype.deleteObject = function() {};

/**
 * Sends the list to the site recycle bin.
 * @return {!SP.GuidResult}
 */
SP.List.prototype.recycle = function() {};

/**
 * Returns collection of list items based on the specified CAML query.
 * @param {!SP.CamlQuery} query
 * @return {!SP.ListItemCollection<T>}
 */
SP.List.prototype.getItems = function(query) {};

/**
 * Creates a new list item in the list.
 * @param {!SP.ListItemCreationInformation} parameters
 * @return {!SP.ListItem<?>}
 */
SP.List.prototype.addItem = function(parameters) {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.ListCollection = function() {};

/**
 * Gets the list at the specified index in the collection.
 * @template T
 * @param {number} index
 * @return {!SP.List<T>}
 */
SP.ListCollection.prototype.itemAt = function(index) {};

/**
 * Gets the list at the specified index in the collection.
 * @template T
 * @param {number} index
 * @return {!SP.List<T>}
 */
SP.ListCollection.prototype.get_item = function(index) {};

/**
 * Returns the list with the specified title from the collection.
 * @template T
 * @param {string} title
 * @return {!SP.List<T>}
 */
SP.ListCollection.prototype.getByTitle = function(title) {};

/**
 * Returns the list with the specified list identifier.
 * @template T
 * @param {(string|!SP.Guid)} id
 * @return {!SP.List<T>}
 */
SP.ListCollection.prototype.getById = function(id) {};

/**
 * Creates a new list or a document library.
 * @param {!SP.ListCreationInformation} parameters
 * @return {!SP.List<?>}
 */
SP.ListCollection.prototype.add = function(parameters) {};

/**
 * Gets a list that is the default location for wiki pages.
 * @return {!SP.List<?>}
 */
SP.ListCollection.prototype.ensureSitePagesLibrary = function() {};

/**
 * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.
 * @return {!SP.List<?>}
 */
SP.ListCollection.prototype.ensureSiteAssetsLibrary = function() {};

/**
 * @constructor
 * @struct
 */
SP.ListCreationInformation = function() {};

/**
 * @return {string}
 */
SP.ListCreationInformation.prototype.get_customSchemaXml = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ListCreationInformation.prototype.set_customSchemaXml = function(value) {};

/**
 * @return {?}
 */
SP.ListCreationInformation.prototype.get_dataSourceProperties = function() {};

/**
 * @param {?} value
 * @return {void}
 */
SP.ListCreationInformation.prototype.set_dataSourceProperties = function(value) {};

/**
 * @return {string}
 */
SP.ListCreationInformation.prototype.get_description = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ListCreationInformation.prototype.set_description = function(value) {};

/**
 * @return {number}
 */
SP.ListCreationInformation.prototype.get_documentTemplateType = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.ListCreationInformation.prototype.set_documentTemplateType = function(value) {};

/**
 * @return {SP.QuickLaunchOptions}
 */
SP.ListCreationInformation.prototype.get_quickLaunchOption = function() {};

/**
 * @param {SP.QuickLaunchOptions} value
 * @return {void}
 */
SP.ListCreationInformation.prototype.set_quickLaunchOption = function(value) {};

/**
 * @return {!SP.Guid}
 */
SP.ListCreationInformation.prototype.get_templateFeatureId = function() {};

/**
 * @param {!SP.Guid} value
 * @return {void}
 */
SP.ListCreationInformation.prototype.set_templateFeatureId = function(value) {};

/**
 * @return {number}
 */
SP.ListCreationInformation.prototype.get_templateType = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.ListCreationInformation.prototype.set_templateType = function(value) {};

/**
 * @return {string}
 */
SP.ListCreationInformation.prototype.get_title = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ListCreationInformation.prototype.set_title = function(value) {};

/**
 * @return {string}
 */
SP.ListCreationInformation.prototype.get_url = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ListCreationInformation.prototype.set_url = function(value) {};

/**
 * @return {string}
 */
SP.ListCreationInformation.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.ListCreationInformation.prototype.writeToXml = function(writer, serializationContext) {};

/**
 * @constructor
 * @struct
 */
SP.ListDataSource = function() {};

/**
 * @return {?}
 */
SP.ListDataSource.prototype.get_properties = function() {};

/**
 * @return {string}
 */
SP.ListDataSource.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.ListDataSource.prototype.writeToXml = function(writer, serializationContext) {};

/**
 * @constructor
 * @struct
 */
SP.ListDataValidationExceptionValue = function() {};

/**
 * @return {!Array<!SP.ListDataValidationFailure>}
 */
SP.ListDataValidationExceptionValue.prototype.get_fieldFailures = function() {};

/**
 * @return {!SP.ListDataValidationFailure}
 */
SP.ListDataValidationExceptionValue.prototype.get_itemFailure = function() {};

/**
 * @return {string}
 */
SP.ListDataValidationExceptionValue.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.ListDataValidationExceptionValue.prototype.writeToXml = function(writer, serializationContext) {};

/**
 * @constructor
 * @struct
 */
SP.ListDataValidationFailure = function() {};

/**
 * @return {string}
 */
SP.ListDataValidationFailure.prototype.get_displayName = function() {};

/**
 * @return {string}
 */
SP.ListDataValidationFailure.prototype.get_message = function() {};

/**
 * @return {string}
 */
SP.ListDataValidationFailure.prototype.get_name = function() {};

/**
 * @return {SP.ListDataValidationFailureReason}
 */
SP.ListDataValidationFailure.prototype.get_reason = function() {};

/**
 * @return {SP.ListDataValidationType}
 */
SP.ListDataValidationFailure.prototype.get_validationType = function() {};

/**
 * @return {string}
 */
SP.ListDataValidationFailure.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.ListDataValidationFailure.prototype.writeToXml = function(writer, serializationContext) {};

/** @const */
SP.ListDataValidationFailureReason = {};
/** @const {number} */
SP.ListDataValidationFailureReason.dataFailure;
/** @const {number} */
SP.ListDataValidationFailureReason.formulaError;

/** @const */
SP.ListDataValidationType = {};
/** @const {number} */
SP.ListDataValidationType.userFormulaField;
/** @const {number} */
SP.ListDataValidationType.userFormulaItem;
/** @const {number} */
SP.ListDataValidationType.requiredField;
/** @const {number} */
SP.ListDataValidationType.choiceField;
/** @const {number} */
SP.ListDataValidationType.minMaxField;
/** @const {number} */
SP.ListDataValidationType.textField;
/**
 * @extends {SP.SecurableObject}
 * @constructor
 * @struct
 */
SP.ListItem = function() {};

/**
 * @return {T}
 */
SP.ListItem.prototype.get_fieldValues = function() {};

/**
 * Gets the specified field value for the list item. Field value is returned as string, but it can be casted to a specific field value type, e.g. SP.LookupFieldValue, etc.
 * @template K
 * @param {K} fieldInternalName
 * @return {?}
 */
SP.ListItem.prototype.get_item = function(fieldInternalName) {};

/**
 * Sets the specified field value for the list item. Consider using parseAndSetFieldValue instead.
 * @template K
 * @param {K} fieldInternalName
 * @param {?} value
 * @return {void}
 */
SP.ListItem.prototype.set_item = function(fieldInternalName, value) {};

/**
 * Gets collection of objects that represent attachments for the list item.
 * @return {!SP.AttachmentCollection}
 */
SP.ListItem.prototype.get_attachmentFiles = function() {};

/**
 * Gets the content type of the item.
 * @return {!SP.ContentType}
 */
SP.ListItem.prototype.get_contentType = function() {};

/**
 * Gets a value that specifies the display name of the list item.
 * This property is not available by default when you return list items. Trying to call this method returns a PropertyOrFieldNotInitializedException if you try to access one of these properties. To access this property, use the Include method as part of the query string.
 * @return {string}
 */
SP.ListItem.prototype.get_displayName = function() {};

/**
 * Gets a value that specifies the effective permissions on the list item that are assigned to the current user.
 * This property is not available by default when you return list items. Trying to call this method returns a PropertyOrFieldNotInitializedException if you try to access one of these properties. To access this property, use the Include method as part of the query string.
 * @return {!SP.BasePermissions}
 */
SP.ListItem.prototype.get_effectiveBasePermissions = function() {};

/**
 * Gets the effective base permissions for the current user, as they should be displayed in UI.
 * This will only differ from EffectiveBasePermissions if ReadOnlyUI is set to true on the item's parent list, and in all cases will be a subset of EffectiveBasePermissions. To put it another way, EffectiveBasePermissionsForUI will always be as or more restrictive than EffectiveBasePermissions.
 * This property is not available by default when you return list items. Trying to call this method returns a PropertyOrFieldNotInitializedException if you try to access one of these properties. To access this property, use the Include method as part of the query string.
 * @return {!SP.BasePermissions}
 */
SP.ListItem.prototype.get_effectiveBasePermissionsForUI = function() {};

/**
 * @return {!SP.FieldStringValues}
 */
SP.ListItem.prototype.get_fieldValuesAsHtml = function() {};

/**
 * @return {!SP.FieldStringValues}
 */
SP.ListItem.prototype.get_fieldValuesAsText = function() {};

/**
 * @return {!SP.FieldStringValues}
 */
SP.ListItem.prototype.get_fieldValuesForEdit = function() {};

/**
 * Gets the file that is represented by the item from a document library. Only for document libraries.
 * @return {!SP.File}
 */
SP.ListItem.prototype.get_file = function() {};

/**
 * Gets or sets the file system object type for the item (file, folder or invalid).
 * @return {SP.FileSystemObjectType}
 */
SP.ListItem.prototype.get_fileSystemObjectType = function() {};

/**
 * Gets the parent folder for the list item
 * @return {!SP.Folder}
 */
SP.ListItem.prototype.get_folder = function() {};

/**
 * Gets id of the item
 * @return {number}
 */
SP.ListItem.prototype.get_id = function() {};

/**
 * Get the list in which the item resides.
 * @return {!SP.List<?>}
 */
SP.ListItem.prototype.get_parentList = function() {};

/**
 * @return {void}
 */
SP.ListItem.prototype.refreshLoad = function() {};

/**
 * @param {SP.Utilities.SPWOPIFrameAction} action
 * @return {!SP.StringResult}
 */
SP.ListItem.prototype.getWOPIFrameUrl = function(action) {};

/**
 * Commits changed properties of the list item. The actual update is performed during context.executeQueryAsync method call.
 * @return {void}
 */
SP.ListItem.prototype.update = function() {};

/**
 * Deletes the list item
 * @return {void}
 */
SP.ListItem.prototype.deleteObject = function() {};

/**
 * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.
 * @return {!SP.GuidResult}
 */
SP.ListItem.prototype.recycle = function() {};

/**
 * Gets effective permissions for the specified user.
 * @param {string} userName
 * @return {!SP.BasePermissions}
 */
SP.ListItem.prototype.getUserEffectivePermissions = function(userName) {};

/**
 * Sets the value of the field for the list item based on an implementation specific transformation of the value.
 * @param {string} fieldInternalName
 * @param {string} value
 * @return {void}
 */
SP.ListItem.prototype.parseAndSetFieldValue = function(fieldInternalName, value) {};

/**
 * Validates form values specified for the list item. Errors are returned through hasException and errorMessage properties of the ListItemFormUpdateValue objects
 * @param {!Array<!SP.ListItemFormUpdateValue>} formValues
 * @param {boolean} bNewDocumentUpdate
 * @return {!Array<!SP.ListItemFormUpdateValue>}
 */
SP.ListItem.prototype.validateUpdateListItem = function(formValues, bNewDocumentUpdate) {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.ListItemCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.ListItem<T>}
 */
SP.ListItemCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.ListItem<T>}
 */
SP.ListItemCollection.prototype.get_item = function(index) {};

/**
 * @param {(string|number)} id
 * @return {!SP.ListItem<T>}
 */
SP.ListItemCollection.prototype.getById = function(id) {};

/**
 * @return {!SP.ListItemCollectionPosition}
 */
SP.ListItemCollection.prototype.get_listItemCollectionPosition = function() {};

/**
 * @constructor
 * @struct
 */
SP.ListItemCollectionPosition = function() {};

/**
 * @return {string}
 */
SP.ListItemCollectionPosition.prototype.get_pagingInfo = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ListItemCollectionPosition.prototype.set_pagingInfo = function(value) {};

/**
 * @return {string}
 */
SP.ListItemCollectionPosition.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.ListItemCollectionPosition.prototype.writeToXml = function(writer, serializationContext) {};

/**
 * @constructor
 * @struct
 */
SP.ListItemCreationInformation = function() {};

/**
 * @return {string}
 */
SP.ListItemCreationInformation.prototype.get_folderUrl = function() {};

/**
 * Sets a value that specifies the folder for the new list item.
 * @param {string} value
 * @return {void}
 */
SP.ListItemCreationInformation.prototype.set_folderUrl = function(value) {};

/**
 * @return {string}
 */
SP.ListItemCreationInformation.prototype.get_leafName = function() {};

/**
 * Sets a value that specifies the name of the new list item. It must be the name of the file if the parent list of the list item is a document library.
 * @param {string} value
 * @return {void}
 */
SP.ListItemCreationInformation.prototype.set_leafName = function(value) {};

/**
 * @return {SP.FileSystemObjectType}
 */
SP.ListItemCreationInformation.prototype.get_underlyingObjectType = function() {};

/**
 * Sets a value that specifies whether the new list item is a file or a folder.
 * @param {SP.FileSystemObjectType} value
 * @return {void}
 */
SP.ListItemCreationInformation.prototype.set_underlyingObjectType = function(value) {};

/**
 * @return {string}
 */
SP.ListItemCreationInformation.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.ListItemCreationInformation.prototype.writeToXml = function(writer, serializationContext) {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.ListItemEntityCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.ListItem<?>}
 */
SP.ListItemEntityCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.ListItem<?>}
 */
SP.ListItemEntityCollection.prototype.get_item = function(index) {};

/**
 * @constructor
 * @struct
 */
SP.ListItemFormUpdateValue = function() {};

/**
 * @return {string}
 */
SP.ListItemFormUpdateValue.prototype.get_errorMessage = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ListItemFormUpdateValue.prototype.set_errorMessage = function(value) {};

/**
 * @return {string}
 */
SP.ListItemFormUpdateValue.prototype.get_fieldName = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ListItemFormUpdateValue.prototype.set_fieldName = function(value) {};

/**
 * @return {string}
 */
SP.ListItemFormUpdateValue.prototype.get_fieldValue = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ListItemFormUpdateValue.prototype.set_fieldValue = function(value) {};

/**
 * @return {boolean}
 */
SP.ListItemFormUpdateValue.prototype.get_hasException = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ListItemFormUpdateValue.prototype.set_hasException = function(value) {};

/**
 * @return {string}
 */
SP.ListItemFormUpdateValue.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.ListItemFormUpdateValue.prototype.writeToXml = function(writer, serializationContext) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.ListTemplate = function() {};

/**
 * @return {boolean}
 */
SP.ListTemplate.prototype.get_allowsFolderCreation = function() {};

/**
 * @return {SP.BaseType}
 */
SP.ListTemplate.prototype.get_baseType = function() {};

/**
 * @return {string}
 */
SP.ListTemplate.prototype.get_description = function() {};

/**
 * @return {!SP.Guid}
 */
SP.ListTemplate.prototype.get_featureId = function() {};

/**
 * @return {boolean}
 */
SP.ListTemplate.prototype.get_hidden = function() {};

/**
 * @return {string}
 */
SP.ListTemplate.prototype.get_imageUrl = function() {};

/**
 * @return {string}
 */
SP.ListTemplate.prototype.get_internalName = function() {};

/**
 * @return {boolean}
 */
SP.ListTemplate.prototype.get_isCustomTemplate = function() {};

/**
 * @return {string}
 */
SP.ListTemplate.prototype.get_name = function() {};

/**
 * @return {boolean}
 */
SP.ListTemplate.prototype.get_onQuickLaunch = function() {};

/**
 * @return {number}
 */
SP.ListTemplate.prototype.get_listTemplateTypeKind = function() {};

/**
 * @return {boolean}
 */
SP.ListTemplate.prototype.get_unique = function() {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.ListTemplateCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.ListTemplate}
 */
SP.ListTemplateCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.ListTemplate}
 */
SP.ListTemplateCollection.prototype.get_item = function(index) {};

/**
 * @param {string} name
 * @return {!SP.ListTemplate}
 */
SP.ListTemplateCollection.prototype.getByName = function(name) {};

/** @const */
SP.ListTemplateType = {};
/** @const {number} */
SP.ListTemplateType.invalidType;
/** @const {number} */
SP.ListTemplateType.noListTemplate;
/** @const {number} */
SP.ListTemplateType.genericList;
/** @const {number} */
SP.ListTemplateType.documentLibrary;
/** @const {number} */
SP.ListTemplateType.survey;
/** @const {number} */
SP.ListTemplateType.links;
/** @const {number} */
SP.ListTemplateType.announcements;
/** @const {number} */
SP.ListTemplateType.contacts;
/** @const {number} */
SP.ListTemplateType.events;
/** @const {number} */
SP.ListTemplateType.tasks;
/** @const {number} */
SP.ListTemplateType.discussionBoard;
/** @const {number} */
SP.ListTemplateType.pictureLibrary;
/** @const {number} */
SP.ListTemplateType.dataSources;
/** @const {number} */
SP.ListTemplateType.webTemplateCatalog;
/** @const {number} */
SP.ListTemplateType.userInformation;
/** @const {number} */
SP.ListTemplateType.webPartCatalog;
/** @const {number} */
SP.ListTemplateType.listTemplateCatalog;
/** @const {number} */
SP.ListTemplateType.xMLForm;
/** @const {number} */
SP.ListTemplateType.masterPageCatalog;
/** @const {number} */
SP.ListTemplateType.noCodeWorkflows;
/** @const {number} */
SP.ListTemplateType.workflowProcess;
/** @const {number} */
SP.ListTemplateType.webPageLibrary;
/** @const {number} */
SP.ListTemplateType.customGrid;
/** @const {number} */
SP.ListTemplateType.solutionCatalog;
/** @const {number} */
SP.ListTemplateType.noCodePublic;
/** @const {number} */
SP.ListTemplateType.themeCatalog;
/** @const {number} */
SP.ListTemplateType.designCatalog;
/** @const {number} */
SP.ListTemplateType.appDataCatalog;
/** @const {number} */
SP.ListTemplateType.dataConnectionLibrary;
/** @const {number} */
SP.ListTemplateType.workflowHistory;
/** @const {number} */
SP.ListTemplateType.ganttTasks;
/** @const {number} */
SP.ListTemplateType.helpLibrary;
/** @const {number} */
SP.ListTemplateType.accessRequest;
/** @const {number} */
SP.ListTemplateType.tasksWithTimelineAndHierarchy;
/** @const {number} */
SP.ListTemplateType.maintenanceLogs;
/** @const {number} */
SP.ListTemplateType.meetings;
/** @const {number} */
SP.ListTemplateType.agenda;
/** @const {number} */
SP.ListTemplateType.meetingUser;
/** @const {number} */
SP.ListTemplateType.decision;
/** @const {number} */
SP.ListTemplateType.meetingObjective;
/** @const {number} */
SP.ListTemplateType.textBox;
/** @const {number} */
SP.ListTemplateType.thingsToBring;
/** @const {number} */
SP.ListTemplateType.homePageLibrary;
/** @const {number} */
SP.ListTemplateType.posts;
/** @const {number} */
SP.ListTemplateType.comments;
/** @const {number} */
SP.ListTemplateType.categories;
/** @const {number} */
SP.ListTemplateType.facility;
/** @const {number} */
SP.ListTemplateType.whereabouts;
/** @const {number} */
SP.ListTemplateType.callTrack;
/** @const {number} */
SP.ListTemplateType.circulation;
/** @const {number} */
SP.ListTemplateType.timecard;
/** @const {number} */
SP.ListTemplateType.holidays;
/** @const {number} */
SP.ListTemplateType.iMEDic;
/** @const {number} */
SP.ListTemplateType.externalList;
/** @const {number} */
SP.ListTemplateType.mySiteDocumentLibrary;
/** @const {number} */
SP.ListTemplateType.issueTracking;
/** @const {number} */
SP.ListTemplateType.adminTasks;
/** @const {number} */
SP.ListTemplateType.healthRules;
/** @const {number} */
SP.ListTemplateType.healthReports;
/** @const {number} */
SP.ListTemplateType.developerSiteDraftApps;

/** @const */
SP.MoveOperations = {};
/** @const {number} */
SP.MoveOperations.none;
/** @const {number} */
SP.MoveOperations.overwrite;
/** @const {number} */
SP.MoveOperations.allowBrokenThickets;
/** @const {number} */
SP.MoveOperations.bypassApprovePermission;
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.Navigation = function() {};

/**
 * @return {!SP.NavigationNodeCollection}
 */
SP.Navigation.prototype.get_quickLaunch = function() {};

/**
 * @return {!SP.NavigationNodeCollection}
 */
SP.Navigation.prototype.get_topNavigationBar = function() {};

/**
 * @return {boolean}
 */
SP.Navigation.prototype.get_useShared = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Navigation.prototype.set_useShared = function(value) {};

/**
 * @param {number} id
 * @return {!SP.NavigationNode}
 */
SP.Navigation.prototype.getNodeById = function(id) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.NavigationNode = function() {};

/**
 * @return {!SP.NavigationNodeCollection}
 */
SP.NavigationNode.prototype.get_children = function() {};

/**
 * @return {number}
 */
SP.NavigationNode.prototype.get_id = function() {};

/**
 * @return {boolean}
 */
SP.NavigationNode.prototype.get_isDocLib = function() {};

/**
 * @return {boolean}
 */
SP.NavigationNode.prototype.get_isExternal = function() {};

/**
 * @return {boolean}
 */
SP.NavigationNode.prototype.get_isVisible = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.NavigationNode.prototype.set_isVisible = function(value) {};

/**
 * @return {string}
 */
SP.NavigationNode.prototype.get_title = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.NavigationNode.prototype.set_title = function(value) {};

/**
 * @return {string}
 */
SP.NavigationNode.prototype.get_url = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.NavigationNode.prototype.set_url = function(value) {};

/**
 * @return {void}
 */
SP.NavigationNode.prototype.update = function() {};

/**
 * @return {void}
 */
SP.NavigationNode.prototype.deleteObject = function() {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.NavigationNodeCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.NavigationNode}
 */
SP.NavigationNodeCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.NavigationNode}
 */
SP.NavigationNodeCollection.prototype.get_item = function(index) {};

/**
 * @param {!SP.NavigationNodeCreationInformation} parameters
 * @return {!SP.NavigationNode}
 */
SP.NavigationNodeCollection.prototype.add = function(parameters) {};

/**
 * @constructor
 * @struct
 */
SP.NavigationNodeCreationInformation = function() {};

/**
 * @return {boolean}
 */
SP.NavigationNodeCreationInformation.prototype.get_asLastNode = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.NavigationNodeCreationInformation.prototype.set_asLastNode = function(value) {};

/**
 * @return {boolean}
 */
SP.NavigationNodeCreationInformation.prototype.get_isExternal = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.NavigationNodeCreationInformation.prototype.set_isExternal = function(value) {};

/**
 * @return {!SP.NavigationNode}
 */
SP.NavigationNodeCreationInformation.prototype.get_previousNode = function() {};

/**
 * @param {!SP.NavigationNode} value
 * @return {void}
 */
SP.NavigationNodeCreationInformation.prototype.set_previousNode = function(value) {};

/**
 * @return {string}
 */
SP.NavigationNodeCreationInformation.prototype.get_title = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.NavigationNodeCreationInformation.prototype.set_title = function(value) {};

/**
 * @return {string}
 */
SP.NavigationNodeCreationInformation.prototype.get_url = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.NavigationNodeCreationInformation.prototype.set_url = function(value) {};

/**
 * @return {string}
 */
SP.NavigationNodeCreationInformation.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.NavigationNodeCreationInformation.prototype.writeToXml = function(writer, serializationContext) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.ObjectSharingInformation = function() {};

/**
 * @return {string}
 */
SP.ObjectSharingInformation.prototype.get_anonymousEditLink = function() {};

/**
 * @return {string}
 */
SP.ObjectSharingInformation.prototype.get_anonymousViewLink = function() {};

/**
 * @return {boolean}
 */
SP.ObjectSharingInformation.prototype.get_canManagePermissions = function() {};

/**
 * @return {boolean}
 */
SP.ObjectSharingInformation.prototype.get_hasPendingAccessRequests = function() {};

/**
 * @return {boolean}
 */
SP.ObjectSharingInformation.prototype.get_hasPermissionLevels = function() {};

/**
 * @return {boolean}
 */
SP.ObjectSharingInformation.prototype.get_isSharedWithCurrentUser = function() {};

/**
 * @return {boolean}
 */
SP.ObjectSharingInformation.prototype.get_isSharedWithGuest = function() {};

/**
 * @return {boolean}
 */
SP.ObjectSharingInformation.prototype.get_isSharedWithMany = function() {};

/**
 * @return {boolean}
 */
SP.ObjectSharingInformation.prototype.get_isSharedWithSecurityGroup = function() {};

/**
 * @return {string}
 */
SP.ObjectSharingInformation.prototype.get_pendingAccessRequestsLink = function() {};

/**
 * @return {!SP.ClientObjectList<!SP.ObjectSharingInformationUser>}
 */
SP.ObjectSharingInformation.prototype.getSharedWithUsers = function() {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.Guid} listID
 * @param {number} itemID
 * @param {boolean} excludeCurrentUser
 * @param {boolean} excludeSiteAdmin
 * @param {boolean} excludeSecurityGroups
 * @param {boolean} retrieveAnonymousLinks
 * @param {boolean} retrieveUserInfoDetails
 * @param {boolean} checkForAccessRequests
 * @return {!SP.ObjectSharingInformation}
 */
SP.ObjectSharingInformation.getListItemSharingInformation = function(context, listID, itemID, excludeCurrentUser, excludeSiteAdmin, excludeSecurityGroups, retrieveAnonymousLinks, retrieveUserInfoDetails, checkForAccessRequests) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {boolean} excludeCurrentUser
 * @param {boolean} excludeSiteAdmin
 * @param {boolean} excludeSecurityGroups
 * @param {boolean} retrieveAnonymousLinks
 * @param {boolean} retrieveUserInfoDetails
 * @param {boolean} checkForAccessRequests
 * @return {!SP.ObjectSharingInformation}
 */
SP.ObjectSharingInformation.getWebSharingInformation = function(context, excludeCurrentUser, excludeSiteAdmin, excludeSecurityGroups, retrieveAnonymousLinks, retrieveUserInfoDetails, checkForAccessRequests) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.SecurableObject} securableObject
 * @param {boolean} excludeCurrentUser
 * @param {boolean} excludeSiteAdmin
 * @param {boolean} excludeSecurityGroups
 * @param {boolean} retrieveAnonymousLinks
 * @param {boolean} retrieveUserInfoDetails
 * @param {boolean} checkForAccessRequests
 * @param {boolean} retrievePermissionLevels
 * @return {!SP.ObjectSharingInformation}
 */
SP.ObjectSharingInformation.getObjectSharingInformation = function(context, securableObject, excludeCurrentUser, excludeSiteAdmin, excludeSecurityGroups, retrieveAnonymousLinks, retrieveUserInfoDetails, checkForAccessRequests, retrievePermissionLevels) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.ObjectSharingInformationUser = function() {};

/**
 * @return {string}
 */
SP.ObjectSharingInformationUser.prototype.get_customRoleNames = function() {};

/**
 * @return {string}
 */
SP.ObjectSharingInformationUser.prototype.get_department = function() {};

/**
 * @return {string}
 */
SP.ObjectSharingInformationUser.prototype.get_email = function() {};

/**
 * @return {boolean}
 */
SP.ObjectSharingInformationUser.prototype.get_hasEditPermission = function() {};

/**
 * @return {boolean}
 */
SP.ObjectSharingInformationUser.prototype.get_hasViewPermission = function() {};

/**
 * @return {number}
 */
SP.ObjectSharingInformationUser.prototype.get_id = function() {};

/**
 * @return {boolean}
 */
SP.ObjectSharingInformationUser.prototype.get_isSiteAdmin = function() {};

/**
 * @return {string}
 */
SP.ObjectSharingInformationUser.prototype.get_jobTitle = function() {};

/**
 * @return {string}
 */
SP.ObjectSharingInformationUser.prototype.get_loginName = function() {};

/**
 * @return {string}
 */
SP.ObjectSharingInformationUser.prototype.get_name = function() {};

/**
 * @return {string}
 */
SP.ObjectSharingInformationUser.prototype.get_picture = function() {};

/**
 * @return {!SP.Principal}
 */
SP.ObjectSharingInformationUser.prototype.get_principal = function() {};

/**
 * @return {string}
 */
SP.ObjectSharingInformationUser.prototype.get_sipAddress = function() {};

/**
 * @return {!SP.User}
 */
SP.ObjectSharingInformationUser.prototype.get_user = function() {};

/** @const */
SP.OpenWebOptions = {};
/** @const {number} */
SP.OpenWebOptions.none;
/** @const {number} */
SP.OpenWebOptions.initNavigationCache;

/** @const */
SP.PageType = {};
/** @const {number} */
SP.PageType.invalid;
/** @const {number} */
SP.PageType.defaultView;
/** @const {number} */
SP.PageType.normalView;
/** @const {number} */
SP.PageType.dialogView;
/** @const {number} */
SP.PageType.view;
/** @const {number} */
SP.PageType.displayForm;
/** @const {number} */
SP.PageType.displayFormDialog;
/** @const {number} */
SP.PageType.editForm;
/** @const {number} */
SP.PageType.editFormDialog;
/** @const {number} */
SP.PageType.newForm;
/** @const {number} */
SP.PageType.newFormDialog;
/** @const {number} */
SP.PageType.solutionForm;
/** @const {number} */
SP.PageType.pAGE_MAXITEMS;
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.PropertyValues = function() {};

/**
 * @return {?}
 */
SP.PropertyValues.prototype.get_fieldValues = function() {};

/**
 * @param {string} fieldName
 * @return {?}
 */
SP.PropertyValues.prototype.get_item = function(fieldName) {};

/**
 * @param {string} fieldName
 * @param {?} value
 * @return {void}
 */
SP.PropertyValues.prototype.set_item = function(fieldName, value) {};

/**
 * @return {void}
 */
SP.PropertyValues.prototype.refreshLoad = function() {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.PushNotificationSubscriber = function() {};

/**
 * @return {string}
 */
SP.PushNotificationSubscriber.prototype.get_customArgs = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.PushNotificationSubscriber.prototype.set_customArgs = function(value) {};

/**
 * @return {!SP.Guid}
 */
SP.PushNotificationSubscriber.prototype.get_deviceAppInstanceId = function() {};

/**
 * @return {!Date}
 */
SP.PushNotificationSubscriber.prototype.get_lastModifiedTimeStamp = function() {};

/**
 * @return {!Date}
 */
SP.PushNotificationSubscriber.prototype.get_registrationTimeStamp = function() {};

/**
 * @return {string}
 */
SP.PushNotificationSubscriber.prototype.get_serviceToken = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.PushNotificationSubscriber.prototype.set_serviceToken = function(value) {};

/**
 * @return {string}
 */
SP.PushNotificationSubscriber.prototype.get_subscriberType = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.PushNotificationSubscriber.prototype.set_subscriberType = function(value) {};

/**
 * @return {!SP.User}
 */
SP.PushNotificationSubscriber.prototype.get_user = function() {};

/**
 * @return {void}
 */
SP.PushNotificationSubscriber.prototype.update = function() {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.PushNotificationSubscriberCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.PushNotificationSubscriber}
 */
SP.PushNotificationSubscriberCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.PushNotificationSubscriber}
 */
SP.PushNotificationSubscriberCollection.prototype.get_item = function(index) {};

/**
 * @param {string} id
 * @return {!SP.PushNotificationSubscriber}
 */
SP.PushNotificationSubscriberCollection.prototype.getByStoreId = function(id) {};

/** @const */
SP.QuickLaunchOptions = {};
/** @const {number} */
SP.QuickLaunchOptions.off;
/** @const {number} */
SP.QuickLaunchOptions.on;
/** @const {number} */
SP.QuickLaunchOptions.defaultValue;
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.RecycleBinItem = function() {};

/**
 * @return {!SP.User}
 */
SP.RecycleBinItem.prototype.get_author = function() {};

/**
 * @return {!SP.User}
 */
SP.RecycleBinItem.prototype.get_deletedBy = function() {};

/**
 * @return {!Date}
 */
SP.RecycleBinItem.prototype.get_deletedDate = function() {};

/**
 * @return {string}
 */
SP.RecycleBinItem.prototype.get_dirName = function() {};

/**
 * @return {!SP.Guid}
 */
SP.RecycleBinItem.prototype.get_id = function() {};

/**
 * @return {SP.RecycleBinItemState}
 */
SP.RecycleBinItem.prototype.get_itemState = function() {};

/**
 * @return {SP.RecycleBinItemType}
 */
SP.RecycleBinItem.prototype.get_itemType = function() {};

/**
 * @return {string}
 */
SP.RecycleBinItem.prototype.get_leafName = function() {};

/**
 * @return {number}
 */
SP.RecycleBinItem.prototype.get_size = function() {};

/**
 * @return {string}
 */
SP.RecycleBinItem.prototype.get_title = function() {};

/**
 * @return {void}
 */
SP.RecycleBinItem.prototype.deleteObject = function() {};

/**
 * @return {void}
 */
SP.RecycleBinItem.prototype.restore = function() {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.RecycleBinItemCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.RecycleBinItem}
 */
SP.RecycleBinItemCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.RecycleBinItem}
 */
SP.RecycleBinItemCollection.prototype.get_item = function(index) {};

/**
 * @param {!SP.Guid} id
 * @return {!SP.RecycleBinItem}
 */
SP.RecycleBinItemCollection.prototype.getById = function(id) {};

/**
 * @return {void}
 */
SP.RecycleBinItemCollection.prototype.deleteAll = function() {};

/**
 * @return {void}
 */
SP.RecycleBinItemCollection.prototype.restoreAll = function() {};

/** @const */
SP.RecycleBinItemState = {};
/** @const {number} */
SP.RecycleBinItemState.none;
/** @const {number} */
SP.RecycleBinItemState.firstStageRecycleBin;
/** @const {number} */
SP.RecycleBinItemState.secondStageRecycleBin;

/** @const */
SP.RecycleBinItemType = {};
/** @const {number} */
SP.RecycleBinItemType.none;
/** @const {number} */
SP.RecycleBinItemType.file;
/** @const {number} */
SP.RecycleBinItemType.fileVersion;
/** @const {number} */
SP.RecycleBinItemType.listItem;
/** @const {number} */
SP.RecycleBinItemType.list;
/** @const {number} */
SP.RecycleBinItemType.folder;
/** @const {number} */
SP.RecycleBinItemType.folderWithLists;
/** @const {number} */
SP.RecycleBinItemType.attachment;
/** @const {number} */
SP.RecycleBinItemType.listItemVersion;
/** @const {number} */
SP.RecycleBinItemType.cascadeParent;
/** @const {number} */
SP.RecycleBinItemType.web;
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.RegionalSettings = function() {};

/**
 * @return {number}
 */
SP.RegionalSettings.prototype.get_adjustHijriDays = function() {};

/**
 * @return {number}
 */
SP.RegionalSettings.prototype.get_alternateCalendarType = function() {};

/**
 * @return {string}
 */
SP.RegionalSettings.prototype.get_aM = function() {};

/**
 * @return {number}
 */
SP.RegionalSettings.prototype.get_calendarType = function() {};

/**
 * @return {number}
 */
SP.RegionalSettings.prototype.get_collation = function() {};

/**
 * @return {number}
 */
SP.RegionalSettings.prototype.get_collationLCID = function() {};

/**
 * @return {number}
 */
SP.RegionalSettings.prototype.get_dateFormat = function() {};

/**
 * @return {string}
 */
SP.RegionalSettings.prototype.get_dateSeparator = function() {};

/**
 * @return {string}
 */
SP.RegionalSettings.prototype.get_decimalSeparator = function() {};

/**
 * @return {string}
 */
SP.RegionalSettings.prototype.get_digitGrouping = function() {};

/**
 * @return {number}
 */
SP.RegionalSettings.prototype.get_firstDayOfWeek = function() {};

/**
 * @return {number}
 */
SP.RegionalSettings.prototype.get_firstWeekOfYear = function() {};

/**
 * @return {boolean}
 */
SP.RegionalSettings.prototype.get_isEastAsia = function() {};

/**
 * @return {boolean}
 */
SP.RegionalSettings.prototype.get_isRightToLeft = function() {};

/**
 * @return {boolean}
 */
SP.RegionalSettings.prototype.get_isUIRightToLeft = function() {};

/**
 * @return {string}
 */
SP.RegionalSettings.prototype.get_listSeparator = function() {};

/**
 * @return {number}
 */
SP.RegionalSettings.prototype.get_localeId = function() {};

/**
 * @return {string}
 */
SP.RegionalSettings.prototype.get_negativeSign = function() {};

/**
 * @return {number}
 */
SP.RegionalSettings.prototype.get_negNumberMode = function() {};

/**
 * @return {string}
 */
SP.RegionalSettings.prototype.get_pM = function() {};

/**
 * @return {string}
 */
SP.RegionalSettings.prototype.get_positiveSign = function() {};

/**
 * @return {boolean}
 */
SP.RegionalSettings.prototype.get_showWeeks = function() {};

/**
 * @return {string}
 */
SP.RegionalSettings.prototype.get_thousandSeparator = function() {};

/**
 * @return {boolean}
 */
SP.RegionalSettings.prototype.get_time24 = function() {};

/**
 * @return {number}
 */
SP.RegionalSettings.prototype.get_timeMarkerPosition = function() {};

/**
 * @return {string}
 */
SP.RegionalSettings.prototype.get_timeSeparator = function() {};

/**
 * @return {!SP.TimeZone}
 */
SP.RegionalSettings.prototype.get_timeZone = function() {};

/**
 * @return {!SP.TimeZoneCollection}
 */
SP.RegionalSettings.prototype.get_timeZones = function() {};

/**
 * @return {number}
 */
SP.RegionalSettings.prototype.get_workDayEndHour = function() {};

/**
 * @return {number}
 */
SP.RegionalSettings.prototype.get_workDays = function() {};

/**
 * @return {number}
 */
SP.RegionalSettings.prototype.get_workDayStartHour = function() {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.RelatedField = function() {};

/**
 * @return {!SP.Guid}
 */
SP.RelatedField.prototype.get_fieldId = function() {};

/**
 * @return {!SP.Guid}
 */
SP.RelatedField.prototype.get_listId = function() {};

/**
 * @return {!SP.List<?>}
 */
SP.RelatedField.prototype.get_lookupList = function() {};

/**
 * @return {SP.RelationshipDeleteBehaviorType}
 */
SP.RelatedField.prototype.get_relationshipDeleteBehavior = function() {};

/**
 * @return {!SP.Guid}
 */
SP.RelatedField.prototype.get_webId = function() {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.RelatedFieldCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.RelatedField}
 */
SP.RelatedFieldCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.RelatedField}
 */
SP.RelatedFieldCollection.prototype.get_item = function(index) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.RelatedFieldExtendedData = function() {};

/**
 * @return {!SP.Guid}
 */
SP.RelatedFieldExtendedData.prototype.get_fieldId = function() {};

/**
 * @return {!SP.Guid}
 */
SP.RelatedFieldExtendedData.prototype.get_listId = function() {};

/**
 * @return {string}
 */
SP.RelatedFieldExtendedData.prototype.get_listImageUrl = function() {};

/**
 * @return {string}
 */
SP.RelatedFieldExtendedData.prototype.get_resolvedListTitle = function() {};

/**
 * @return {string}
 */
SP.RelatedFieldExtendedData.prototype.get_toolTipDescription = function() {};

/**
 * @return {!SP.Guid}
 */
SP.RelatedFieldExtendedData.prototype.get_webId = function() {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.RelatedFieldExtendedDataCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.RelatedFieldExtendedData}
 */
SP.RelatedFieldExtendedDataCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.RelatedFieldExtendedData}
 */
SP.RelatedFieldExtendedDataCollection.prototype.get_item = function(index) {};

/**
 * @constructor
 * @struct
 */
SP.RelatedItem = function() {};

/**
 * @return {string}
 */
SP.RelatedItem.prototype.get_iconUrl = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.RelatedItem.prototype.set_iconUrl = function(value) {};

/**
 * @return {number}
 */
SP.RelatedItem.prototype.get_itemId = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.RelatedItem.prototype.set_itemId = function(value) {};

/**
 * @return {string}
 */
SP.RelatedItem.prototype.get_listId = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.RelatedItem.prototype.set_listId = function(value) {};

/**
 * @return {string}
 */
SP.RelatedItem.prototype.get_title = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.RelatedItem.prototype.set_title = function(value) {};

/**
 * @return {string}
 */
SP.RelatedItem.prototype.get_url = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.RelatedItem.prototype.set_url = function(value) {};

/**
 * @return {string}
 */
SP.RelatedItem.prototype.get_webId = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.RelatedItem.prototype.set_webId = function(value) {};

/**
 * @return {string}
 */
SP.RelatedItem.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.RelatedItem.prototype.writeToXml = function(writer, serializationContext) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.RelatedItemManager = function() {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {string} SourceListName
 * @param {number} SourceItemID
 * @return {!Array<!SP.RelatedItem>}
 */
SP.RelatedItemManager.getRelatedItems = function(context, SourceListName, SourceItemID) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {string} SourceListName
 * @param {number} SourceItemID
 * @return {!Array<!SP.RelatedItem>}
 */
SP.RelatedItemManager.getPageOneRelatedItems = function(context, SourceListName, SourceItemID) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {string} SourceListName
 * @param {number} SourceItemID
 * @param {string} SourceWebUrl
 * @param {string} TargetListName
 * @param {number} TargetItemID
 * @param {string} TargetWebUrl
 * @param {boolean} TryAddReverseLink
 * @return {void}
 */
SP.RelatedItemManager.addSingleLink = function(context, SourceListName, SourceItemID, SourceWebUrl, TargetListName, TargetItemID, TargetWebUrl, TryAddReverseLink) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {string} SourceListName
 * @param {number} SourceItemID
 * @param {string} TargetItemUrl
 * @param {boolean} TryAddReverseLink
 * @return {void}
 */
SP.RelatedItemManager.addSingleLinkToUrl = function(context, SourceListName, SourceItemID, TargetItemUrl, TryAddReverseLink) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {string} SourceItemUrl
 * @param {string} TargetListName
 * @param {number} TargetItemID
 * @param {boolean} TryAddReverseLink
 * @return {void}
 */
SP.RelatedItemManager.addSingleLinkFromUrl = function(context, SourceItemUrl, TargetListName, TargetItemID, TryAddReverseLink) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {string} SourceListName
 * @param {number} SourceItemID
 * @param {string} SourceWebUrl
 * @param {string} TargetListName
 * @param {number} TargetItemID
 * @param {string} TargetWebUrl
 * @param {boolean} TryDeleteReverseLink
 * @return {void}
 */
SP.RelatedItemManager.deleteSingleLink = function(context, SourceListName, SourceItemID, SourceWebUrl, TargetListName, TargetItemID, TargetWebUrl, TryDeleteReverseLink) {};

/** @const */
SP.RelationshipDeleteBehaviorType = {};
/** @const {number} */
SP.RelationshipDeleteBehaviorType.none;
/** @const {number} */
SP.RelationshipDeleteBehaviorType.cascade;
/** @const {number} */
SP.RelationshipDeleteBehaviorType.restrict;

/**
 * @constructor
 * @struct
 * @param {!SP.ClientRuntimeContext} context
 */
SP.RequestVariable = function(context) {};

/**
 * @return {string}
 */
SP.RequestVariable.prototype.get_value = function() {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @return {!SP.RequestVariable}
 */
SP.RequestVariable.newObject = function(context) {};

/**
 * @param {string} value
 * @return {void}
 */
SP.RequestVariable.prototype.append = function(value) {};

/**
 * @param {string} value
 * @return {void}
 */
SP.RequestVariable.prototype.set = function(value) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.RoleAssignment = function() {};

/**
 * @return {!SP.Principal}
 */
SP.RoleAssignment.prototype.get_member = function() {};

/**
 * @return {number}
 */
SP.RoleAssignment.prototype.get_principalId = function() {};

/**
 * @return {!SP.RoleDefinitionBindingCollection}
 */
SP.RoleAssignment.prototype.get_roleDefinitionBindings = function() {};

/**
 * @param {!SP.RoleDefinitionBindingCollection} roleDefinitionBindings
 * @return {void}
 */
SP.RoleAssignment.prototype.importRoleDefinitionBindings = function(roleDefinitionBindings) {};

/**
 * @return {void}
 */
SP.RoleAssignment.prototype.update = function() {};

/**
 * @return {void}
 */
SP.RoleAssignment.prototype.deleteObject = function() {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.RoleAssignmentCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.RoleAssignment}
 */
SP.RoleAssignmentCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.RoleAssignment}
 */
SP.RoleAssignmentCollection.prototype.get_item = function(index) {};

/**
 * @return {!SP.GroupCollection}
 */
SP.RoleAssignmentCollection.prototype.get_groups = function() {};

/**
 * @param {!SP.Principal} principalToFind
 * @return {!SP.RoleAssignment}
 */
SP.RoleAssignmentCollection.prototype.getByPrincipal = function(principalToFind) {};

/**
 * @param {number} principalId
 * @return {!SP.RoleAssignment}
 */
SP.RoleAssignmentCollection.prototype.getByPrincipalId = function(principalId) {};

/**
 * @param {!SP.Principal} principal
 * @param {!SP.RoleDefinitionBindingCollection} roleBindings
 * @return {!SP.RoleAssignment}
 */
SP.RoleAssignmentCollection.prototype.add = function(principal, roleBindings) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.RoleDefinition = function() {};

/**
 * @return {!SP.BasePermissions}
 */
SP.RoleDefinition.prototype.get_basePermissions = function() {};

/**
 * @param {!SP.BasePermissions} value
 * @return {void}
 */
SP.RoleDefinition.prototype.set_basePermissions = function(value) {};

/**
 * @return {string}
 */
SP.RoleDefinition.prototype.get_description = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.RoleDefinition.prototype.set_description = function(value) {};

/**
 * @return {boolean}
 */
SP.RoleDefinition.prototype.get_hidden = function() {};

/**
 * @return {number}
 */
SP.RoleDefinition.prototype.get_id = function() {};

/**
 * @return {string}
 */
SP.RoleDefinition.prototype.get_name = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.RoleDefinition.prototype.set_name = function(value) {};

/**
 * @return {number}
 */
SP.RoleDefinition.prototype.get_order = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.RoleDefinition.prototype.set_order = function(value) {};

/**
 * @return {SP.RoleType}
 */
SP.RoleDefinition.prototype.get_roleTypeKind = function() {};

/**
 * @return {void}
 */
SP.RoleDefinition.prototype.update = function() {};

/**
 * @return {void}
 */
SP.RoleDefinition.prototype.deleteObject = function() {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientRuntimeContext} context
 */
SP.RoleDefinitionBindingCollection = function(context) {};

/**
 * @param {number} index
 * @return {!SP.RoleDefinition}
 */
SP.RoleDefinitionBindingCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.RoleDefinition}
 */
SP.RoleDefinitionBindingCollection.prototype.get_item = function(index) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @return {!SP.RoleDefinitionBindingCollection}
 */
SP.RoleDefinitionBindingCollection.newObject = function(context) {};

/**
 * @param {!SP.RoleDefinition} roleDefinition
 * @return {void}
 */
SP.RoleDefinitionBindingCollection.prototype.add = function(roleDefinition) {};

/**
 * @param {!SP.RoleDefinition} roleDefinition
 * @return {void}
 */
SP.RoleDefinitionBindingCollection.prototype.remove = function(roleDefinition) {};

/**
 * @return {void}
 */
SP.RoleDefinitionBindingCollection.prototype.removeAll = function() {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.RoleDefinitionCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.RoleDefinition}
 */
SP.RoleDefinitionCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.RoleDefinition}
 */
SP.RoleDefinitionCollection.prototype.get_item = function(index) {};

/**
 * @param {string} name
 * @return {!SP.RoleDefinition}
 */
SP.RoleDefinitionCollection.prototype.getByName = function(name) {};

/**
 * @param {!SP.RoleDefinitionCreationInformation} parameters
 * @return {!SP.RoleDefinition}
 */
SP.RoleDefinitionCollection.prototype.add = function(parameters) {};

/**
 * @param {number} id
 * @return {!SP.RoleDefinition}
 */
SP.RoleDefinitionCollection.prototype.getById = function(id) {};

/**
 * @param {SP.RoleType} roleType
 * @return {!SP.RoleDefinition}
 */
SP.RoleDefinitionCollection.prototype.getByType = function(roleType) {};

/**
 * @constructor
 * @struct
 */
SP.RoleDefinitionCreationInformation = function() {};

/**
 * @return {!SP.BasePermissions}
 */
SP.RoleDefinitionCreationInformation.prototype.get_basePermissions = function() {};

/**
 * @param {!SP.BasePermissions} value
 * @return {void}
 */
SP.RoleDefinitionCreationInformation.prototype.set_basePermissions = function(value) {};

/**
 * @return {string}
 */
SP.RoleDefinitionCreationInformation.prototype.get_description = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.RoleDefinitionCreationInformation.prototype.set_description = function(value) {};

/**
 * @return {string}
 */
SP.RoleDefinitionCreationInformation.prototype.get_name = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.RoleDefinitionCreationInformation.prototype.set_name = function(value) {};

/**
 * @return {number}
 */
SP.RoleDefinitionCreationInformation.prototype.get_order = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.RoleDefinitionCreationInformation.prototype.set_order = function(value) {};

/**
 * @return {string}
 */
SP.RoleDefinitionCreationInformation.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.RoleDefinitionCreationInformation.prototype.writeToXml = function(writer, serializationContext) {};

/** @const */
SP.RoleType = {};
/** @const {number} */
SP.RoleType.none;
/** @const {number} */
SP.RoleType.guest;
/** @const {number} */
SP.RoleType.reader;
/** @const {number} */
SP.RoleType.contributor;
/** @const {number} */
SP.RoleType.webDesigner;
/** @const {number} */
SP.RoleType.administrator;
/** @const {number} */
SP.RoleType.editor;
/**
 * @constructor
 * @struct
 */
SP.ServerSettings = function() {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @return {!SP.ClientObjectList<!SP.AlternateUrl>}
 */
SP.ServerSettings.getAlternateUrls = function(context) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {number} compatibilityLevel
 * @return {!Array<!SP.Language>}
 */
SP.ServerSettings.getGlobalInstalledLanguages = function(context, compatibilityLevel) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.Site = function() {};

/**
 * @return {boolean}
 */
SP.Site.prototype.get_allowDesigner = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Site.prototype.set_allowDesigner = function(value) {};

/**
 * @return {boolean}
 */
SP.Site.prototype.get_allowMasterPageEditing = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Site.prototype.set_allowMasterPageEditing = function(value) {};

/**
 * @return {boolean}
 */
SP.Site.prototype.get_allowRevertFromTemplate = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Site.prototype.set_allowRevertFromTemplate = function(value) {};

/**
 * @return {boolean}
 */
SP.Site.prototype.get_allowSelfServiceUpgrade = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Site.prototype.set_allowSelfServiceUpgrade = function(value) {};

/**
 * @return {boolean}
 */
SP.Site.prototype.get_allowSelfServiceUpgradeEvaluation = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Site.prototype.set_allowSelfServiceUpgradeEvaluation = function(value) {};

/**
 * @return {boolean}
 */
SP.Site.prototype.get_canUpgrade = function() {};

/**
 * @return {number}
 */
SP.Site.prototype.get_compatibilityLevel = function() {};

/**
 * @return {!SP.EventReceiverDefinitionCollection}
 */
SP.Site.prototype.get_eventReceivers = function() {};

/**
 * @return {!SP.FeatureCollection}
 */
SP.Site.prototype.get_features = function() {};

/**
 * @return {!SP.Guid}
 */
SP.Site.prototype.get_id = function() {};

/**
 * @return {string}
 */
SP.Site.prototype.get_lockIssue = function() {};

/**
 * @return {number}
 */
SP.Site.prototype.get_maxItemsPerThrottledOperation = function() {};

/**
 * @return {!SP.User}
 */
SP.Site.prototype.get_owner = function() {};

/**
 * @param {!SP.User} value
 * @return {void}
 */
SP.Site.prototype.set_owner = function(value) {};

/**
 * @return {string}
 */
SP.Site.prototype.get_primaryUri = function() {};

/**
 * @return {boolean}
 */
SP.Site.prototype.get_readOnly = function() {};

/**
 * @return {!SP.RecycleBinItemCollection}
 */
SP.Site.prototype.get_recycleBin = function() {};

/**
 * @return {!SP.Web}
 */
SP.Site.prototype.get_rootWeb = function() {};

/**
 * @return {string}
 */
SP.Site.prototype.get_serverRelativeUrl = function() {};

/**
 * @return {boolean}
 */
SP.Site.prototype.get_shareByLinkEnabled = function() {};

/**
 * @return {boolean}
 */
SP.Site.prototype.get_showUrlStructure = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Site.prototype.set_showUrlStructure = function(value) {};

/**
 * @return {boolean}
 */
SP.Site.prototype.get_uIVersionConfigurationEnabled = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Site.prototype.set_uIVersionConfigurationEnabled = function(value) {};

/**
 * @return {!SP.UpgradeInfo}
 */
SP.Site.prototype.get_upgradeInfo = function() {};

/**
 * @return {!Date}
 */
SP.Site.prototype.get_upgradeReminderDate = function() {};

/**
 * @return {boolean}
 */
SP.Site.prototype.get_upgrading = function() {};

/**
 * @return {string}
 */
SP.Site.prototype.get_url = function() {};

/**
 * @return {!SP.UsageInfo}
 */
SP.Site.prototype.get_usage = function() {};

/**
 * @return {!SP.UserCustomActionCollection}
 */
SP.Site.prototype.get_userCustomActions = function() {};

/**
 * @param {boolean} requireUseRemoteAPIs
 * @return {void}
 */
SP.Site.prototype.updateClientObjectModelUseRemoteAPIsPermissionSetting = function(requireUseRemoteAPIs) {};

/**
 * @param {boolean} versionUpgrade
 * @param {boolean} recursive
 * @return {!SP.BooleanResult}
 */
SP.Site.prototype.needsUpgradeByType = function(versionUpgrade, recursive) {};

/**
 * @param {!SP.Guid} ruleId
 * @param {boolean} bRepair
 * @param {boolean} bRunAlways
 * @return {!SP.SiteHealth.SiteHealthSummary}
 */
SP.Site.prototype.runHealthCheck = function(ruleId, bRepair, bRunAlways) {};

/**
 * @param {boolean} upgrade
 * @param {boolean} sendemail
 * @return {void}
 */
SP.Site.prototype.createPreviewSPSite = function(upgrade, sendemail) {};

/**
 * @param {boolean} versionUpgrade
 * @param {boolean} queueOnly
 * @param {boolean} sendEmail
 * @return {void}
 */
SP.Site.prototype.runUpgradeSiteSession = function(versionUpgrade, queueOnly, sendEmail) {};

/**
 * @param {!SP.ChangeQuery} query
 * @return {!SP.ChangeCollection}
 */
SP.Site.prototype.getChanges = function(query) {};

/**
 * @param {string} strUrl
 * @return {!SP.Web}
 */
SP.Site.prototype.openWeb = function(strUrl) {};

/**
 * @param {!SP.Guid} gWebId
 * @return {!SP.Web}
 */
SP.Site.prototype.openWebById = function(gWebId) {};

/**
 * @param {number} LCID
 * @param {number} overrideCompatLevel
 * @return {!SP.WebTemplateCollection}
 */
SP.Site.prototype.getWebTemplates = function(LCID, overrideCompatLevel) {};

/**
 * @param {!SP.Web} web
 * @return {!SP.ListTemplateCollection}
 */
SP.Site.prototype.getCustomListTemplates = function(web) {};

/**
 * @param {number} typeCatalog
 * @return {!SP.List<?>}
 */
SP.Site.prototype.getCatalog = function(typeCatalog) {};

/**
 * @return {void}
 */
SP.Site.prototype.extendUpgradeReminderDate = function() {};

/**
 * @return {void}
 */
SP.Site.prototype.invalidate = function() {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.SiteUrl = function() {};

/**
 * @constructor
 * @struct
 */
SP.SubwebQuery = function() {};

/**
 * @return {number}
 */
SP.SubwebQuery.prototype.get_configurationFilter = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.SubwebQuery.prototype.set_configurationFilter = function(value) {};

/**
 * @return {number}
 */
SP.SubwebQuery.prototype.get_webTemplateFilter = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.SubwebQuery.prototype.set_webTemplateFilter = function(value) {};

/**
 * @return {string}
 */
SP.SubwebQuery.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.SubwebQuery.prototype.writeToXml = function(writer, serializationContext) {};

/** @const */
SP.TemplateFileType = {};
/** @const {number} */
SP.TemplateFileType.standardPage;
/** @const {number} */
SP.TemplateFileType.wikiPage;
/** @const {number} */
SP.TemplateFileType.formPage;
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.ThemeInfo = function() {};

/**
 * @return {string}
 */
SP.ThemeInfo.prototype.get_accessibleDescription = function() {};

/**
 * @return {string}
 */
SP.ThemeInfo.prototype.get_themeBackgroundImageUri = function() {};

/**
 * @param {string} name
 * @return {!SP.StringResult}
 */
SP.ThemeInfo.prototype.getThemeShadeByName = function(name) {};

/**
 * @param {string} name
 * @param {number} lcid
 * @return {!SP.StringResult}
 */
SP.ThemeInfo.prototype.getThemeFontByName = function(name, lcid) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.TimeZone = function() {};

/**
 * @return {string}
 */
SP.TimeZone.prototype.get_description = function() {};

/**
 * @return {number}
 */
SP.TimeZone.prototype.get_id = function() {};

/**
 * @return {!SP.TimeZoneInformation}
 */
SP.TimeZone.prototype.get_information = function() {};

/**
 * @param {!Date} date
 * @return {!SP.DateTimeResult}
 */
SP.TimeZone.prototype.localTimeToUTC = function(date) {};

/**
 * @param {!Date} date
 * @return {!SP.DateTimeResult}
 */
SP.TimeZone.prototype.utcToLocalTime = function(date) {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.TimeZoneCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.TimeZone}
 */
SP.TimeZoneCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.TimeZone}
 */
SP.TimeZoneCollection.prototype.get_item = function(index) {};

/**
 * @param {number} id
 * @return {!SP.TimeZone}
 */
SP.TimeZoneCollection.prototype.getById = function(id) {};

/**
 * @constructor
 * @struct
 */
SP.TimeZoneInformation = function() {};

/**
 * @return {number}
 */
SP.TimeZoneInformation.prototype.get_bias = function() {};

/**
 * @return {number}
 */
SP.TimeZoneInformation.prototype.get_daylightBias = function() {};

/**
 * @return {number}
 */
SP.TimeZoneInformation.prototype.get_standardBias = function() {};

/**
 * @return {string}
 */
SP.TimeZoneInformation.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.TimeZoneInformation.prototype.writeToXml = function(writer, serializationContext) {};

/**
 * @constructor
 * @struct
 */
SP.UpgradeInfo = function() {};

/**
 * @return {string}
 */
SP.UpgradeInfo.prototype.get_errorFile = function() {};

/**
 * @return {number}
 */
SP.UpgradeInfo.prototype.get_errors = function() {};

/**
 * @return {!Date}
 */
SP.UpgradeInfo.prototype.get_lastUpdated = function() {};

/**
 * @return {string}
 */
SP.UpgradeInfo.prototype.get_logFile = function() {};

/**
 * @return {!Date}
 */
SP.UpgradeInfo.prototype.get_requestDate = function() {};

/**
 * @return {number}
 */
SP.UpgradeInfo.prototype.get_retryCount = function() {};

/**
 * @return {!Date}
 */
SP.UpgradeInfo.prototype.get_startTime = function() {};

/**
 * @return {SP.UpgradeStatus}
 */
SP.UpgradeInfo.prototype.get_status = function() {};

/**
 * @return {SP.UpgradeType}
 */
SP.UpgradeInfo.prototype.get_upgradeType = function() {};

/**
 * @return {number}
 */
SP.UpgradeInfo.prototype.get_warnings = function() {};

/**
 * @return {string}
 */
SP.UpgradeInfo.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.UpgradeInfo.prototype.writeToXml = function(writer, serializationContext) {};

/** @const */
SP.UpgradeStatus = {};
/** @const {number} */
SP.UpgradeStatus.none;
/** @const {number} */
SP.UpgradeStatus.inProgress;
/** @const {number} */
SP.UpgradeStatus.failed;
/** @const {number} */
SP.UpgradeStatus.completed;

/** @const */
SP.UpgradeType = {};
/** @const {number} */
SP.UpgradeType.buildUpgrade;
/** @const {number} */
SP.UpgradeType.versionUpgrade;

/** @const */
SP.UrlFieldFormatType = {};
/** @const {number} */
SP.UrlFieldFormatType.hyperlink;
/** @const {number} */
SP.UrlFieldFormatType.image;

/** @const */
SP.UrlZone = {};
/** @const {number} */
SP.UrlZone.defaultZone;
/** @const {number} */
SP.UrlZone.intranet;
/** @const {number} */
SP.UrlZone.internet;
/** @const {number} */
SP.UrlZone.custom;
/** @const {number} */
SP.UrlZone.extranet;

/**
 * @constructor
 * @struct
 */
SP.UsageInfo = function() {};

/**
 * @return {number}
 */
SP.UsageInfo.prototype.get_bandwidth = function() {};

/**
 * @return {number}
 */
SP.UsageInfo.prototype.get_discussionStorage = function() {};

/**
 * @return {number}
 */
SP.UsageInfo.prototype.get_hits = function() {};

/**
 * @return {number}
 */
SP.UsageInfo.prototype.get_storage = function() {};

/**
 * @return {number}
 */
SP.UsageInfo.prototype.get_storagePercentageUsed = function() {};

/**
 * @return {number}
 */
SP.UsageInfo.prototype.get_visits = function() {};

/**
 * @return {string}
 */
SP.UsageInfo.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.UsageInfo.prototype.writeToXml = function(writer, serializationContext) {};
/**
 * @extends {SP.Principal}
 * @constructor
 * @struct
 */
SP.User = function() {};

/**
 * @return {string}
 */
SP.User.prototype.get_email = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.User.prototype.set_email = function(value) {};

/**
 * @return {!SP.GroupCollection}
 */
SP.User.prototype.get_groups = function() {};

/**
 * @return {boolean}
 */
SP.User.prototype.get_isSiteAdmin = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.User.prototype.set_isSiteAdmin = function(value) {};

/**
 * @return {!SP.UserIdInfo}
 */
SP.User.prototype.get_userId = function() {};

/**
 * @return {void}
 */
SP.User.prototype.update = function() {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.UserCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.User}
 */
SP.UserCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.User}
 */
SP.UserCollection.prototype.get_item = function(index) {};

/**
 * @param {string} loginName
 * @return {!SP.User}
 */
SP.UserCollection.prototype.getByLoginName = function(loginName) {};

/**
 * @param {number} id
 * @return {!SP.User}
 */
SP.UserCollection.prototype.getById = function(id) {};

/**
 * @param {string} emailAddress
 * @return {!SP.User}
 */
SP.UserCollection.prototype.getByEmail = function(emailAddress) {};

/**
 * @param {string} loginName
 * @return {void}
 */
SP.UserCollection.prototype.removeByLoginName = function(loginName) {};

/**
 * @param {number} id
 * @return {void}
 */
SP.UserCollection.prototype.removeById = function(id) {};

/**
 * @param {!SP.User} user
 * @return {void}
 */
SP.UserCollection.prototype.remove = function(user) {};

/**
 * @param {!SP.UserCreationInformation} parameters
 * @return {!SP.User}
 */
SP.UserCollection.prototype.add = function(parameters) {};

/**
 * @param {!SP.User} user
 * @return {!SP.User}
 */
SP.UserCollection.prototype.addUser = function(user) {};

/**
 * @constructor
 * @struct
 */
SP.UserCreationInformation = function() {};

/**
 * @return {string}
 */
SP.UserCreationInformation.prototype.get_email = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.UserCreationInformation.prototype.set_email = function(value) {};

/**
 * @return {string}
 */
SP.UserCreationInformation.prototype.get_loginName = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.UserCreationInformation.prototype.set_loginName = function(value) {};

/**
 * @return {string}
 */
SP.UserCreationInformation.prototype.get_title = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.UserCreationInformation.prototype.set_title = function(value) {};

/**
 * @return {string}
 */
SP.UserCreationInformation.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.UserCreationInformation.prototype.writeToXml = function(writer, serializationContext) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.UserCustomAction = function() {};

/**
 * @return {string}
 */
SP.UserCustomAction.prototype.get_commandUIExtension = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.UserCustomAction.prototype.set_commandUIExtension = function(value) {};

/**
 * @return {string}
 */
SP.UserCustomAction.prototype.get_description = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.UserCustomAction.prototype.set_description = function(value) {};

/**
 * @return {string}
 */
SP.UserCustomAction.prototype.get_group = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.UserCustomAction.prototype.set_group = function(value) {};

/**
 * @return {!SP.Guid}
 */
SP.UserCustomAction.prototype.get_id = function() {};

/**
 * @return {string}
 */
SP.UserCustomAction.prototype.get_imageUrl = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.UserCustomAction.prototype.set_imageUrl = function(value) {};

/**
 * @return {string}
 */
SP.UserCustomAction.prototype.get_location = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.UserCustomAction.prototype.set_location = function(value) {};

/**
 * @return {string}
 */
SP.UserCustomAction.prototype.get_name = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.UserCustomAction.prototype.set_name = function(value) {};

/**
 * @return {string}
 */
SP.UserCustomAction.prototype.get_registrationId = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.UserCustomAction.prototype.set_registrationId = function(value) {};

/**
 * @return {SP.UserCustomActionRegistrationType}
 */
SP.UserCustomAction.prototype.get_registrationType = function() {};

/**
 * @param {SP.UserCustomActionRegistrationType} value
 * @return {void}
 */
SP.UserCustomAction.prototype.set_registrationType = function(value) {};

/**
 * @return {!SP.BasePermissions}
 */
SP.UserCustomAction.prototype.get_rights = function() {};

/**
 * @param {!SP.BasePermissions} value
 * @return {void}
 */
SP.UserCustomAction.prototype.set_rights = function(value) {};

/**
 * @return {SP.UserCustomActionScope}
 */
SP.UserCustomAction.prototype.get_scope = function() {};

/**
 * @return {string}
 */
SP.UserCustomAction.prototype.get_scriptBlock = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.UserCustomAction.prototype.set_scriptBlock = function(value) {};

/**
 * @return {string}
 */
SP.UserCustomAction.prototype.get_scriptSrc = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.UserCustomAction.prototype.set_scriptSrc = function(value) {};

/**
 * @return {number}
 */
SP.UserCustomAction.prototype.get_sequence = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.UserCustomAction.prototype.set_sequence = function(value) {};

/**
 * @return {string}
 */
SP.UserCustomAction.prototype.get_title = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.UserCustomAction.prototype.set_title = function(value) {};

/**
 * @return {string}
 */
SP.UserCustomAction.prototype.get_url = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.UserCustomAction.prototype.set_url = function(value) {};

/**
 * @return {string}
 */
SP.UserCustomAction.prototype.get_versionOfUserCustomAction = function() {};

/**
 * @return {void}
 */
SP.UserCustomAction.prototype.update = function() {};

/**
 * @return {void}
 */
SP.UserCustomAction.prototype.deleteObject = function() {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.UserCustomActionCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.UserCustomAction}
 */
SP.UserCustomActionCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.UserCustomAction}
 */
SP.UserCustomActionCollection.prototype.get_item = function(index) {};

/**
 * @param {!SP.Guid} id
 * @return {!SP.UserCustomAction}
 */
SP.UserCustomActionCollection.prototype.getById = function(id) {};

/**
 * @return {void}
 */
SP.UserCustomActionCollection.prototype.clear = function() {};

/**
 * @return {!SP.UserCustomAction}
 */
SP.UserCustomActionCollection.prototype.add = function() {};

/** @const */
SP.UserCustomActionRegistrationType = {};
/** @const {number} */
SP.UserCustomActionRegistrationType.none;
/** @const {number} */
SP.UserCustomActionRegistrationType.list;
/** @const {number} */
SP.UserCustomActionRegistrationType.contentType;
/** @const {number} */
SP.UserCustomActionRegistrationType.progId;
/** @const {number} */
SP.UserCustomActionRegistrationType.fileType;

/** @const */
SP.UserCustomActionScope = {};
/** @const {number} */
SP.UserCustomActionScope.unknown;
/** @const {number} */
SP.UserCustomActionScope.site;
/** @const {number} */
SP.UserCustomActionScope.web;
/** @const {number} */
SP.UserCustomActionScope.list;

/**
 * @constructor
 * @struct
 */
SP.UserIdInfo = function() {};

/**
 * @return {string}
 */
SP.UserIdInfo.prototype.get_nameId = function() {};

/**
 * @return {string}
 */
SP.UserIdInfo.prototype.get_nameIdIssuer = function() {};

/**
 * @return {string}
 */
SP.UserIdInfo.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.UserIdInfo.prototype.writeToXml = function(writer, serializationContext) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.View = function() {};

/**
 * @return {string}
 */
SP.View.prototype.get_aggregations = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.View.prototype.set_aggregations = function(value) {};

/**
 * @return {string}
 */
SP.View.prototype.get_aggregationsStatus = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.View.prototype.set_aggregationsStatus = function(value) {};

/**
 * @return {string}
 */
SP.View.prototype.get_baseViewId = function() {};

/**
 * @return {!SP.ContentTypeId}
 */
SP.View.prototype.get_contentTypeId = function() {};

/**
 * @param {!SP.ContentTypeId} value
 * @return {void}
 */
SP.View.prototype.set_contentTypeId = function(value) {};

/**
 * @return {boolean}
 */
SP.View.prototype.get_defaultView = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.View.prototype.set_defaultView = function(value) {};

/**
 * @return {boolean}
 */
SP.View.prototype.get_defaultViewForContentType = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.View.prototype.set_defaultViewForContentType = function(value) {};

/**
 * @return {boolean}
 */
SP.View.prototype.get_editorModified = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.View.prototype.set_editorModified = function(value) {};

/**
 * @return {string}
 */
SP.View.prototype.get_formats = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.View.prototype.set_formats = function(value) {};

/**
 * @return {boolean}
 */
SP.View.prototype.get_hidden = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.View.prototype.set_hidden = function(value) {};

/**
 * @return {string}
 */
SP.View.prototype.get_htmlSchemaXml = function() {};

/**
 * @return {!SP.Guid}
 */
SP.View.prototype.get_id = function() {};

/**
 * @return {string}
 */
SP.View.prototype.get_imageUrl = function() {};

/**
 * @return {boolean}
 */
SP.View.prototype.get_includeRootFolder = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.View.prototype.set_includeRootFolder = function(value) {};

/**
 * @return {string}
 */
SP.View.prototype.get_viewJoins = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.View.prototype.set_viewJoins = function(value) {};

/**
 * @return {string}
 */
SP.View.prototype.get_jsLink = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.View.prototype.set_jsLink = function(value) {};

/**
 * @return {string}
 */
SP.View.prototype.get_listViewXml = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.View.prototype.set_listViewXml = function(value) {};

/**
 * @return {string}
 */
SP.View.prototype.get_method = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.View.prototype.set_method = function(value) {};

/**
 * @return {boolean}
 */
SP.View.prototype.get_mobileDefaultView = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.View.prototype.set_mobileDefaultView = function(value) {};

/**
 * @return {boolean}
 */
SP.View.prototype.get_mobileView = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.View.prototype.set_mobileView = function(value) {};

/**
 * @return {string}
 */
SP.View.prototype.get_moderationType = function() {};

/**
 * @return {boolean}
 */
SP.View.prototype.get_orderedView = function() {};

/**
 * @return {boolean}
 */
SP.View.prototype.get_paged = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.View.prototype.set_paged = function(value) {};

/**
 * @return {boolean}
 */
SP.View.prototype.get_personalView = function() {};

/**
 * @return {string}
 */
SP.View.prototype.get_viewProjectedFields = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.View.prototype.set_viewProjectedFields = function(value) {};

/**
 * @return {string}
 */
SP.View.prototype.get_viewQuery = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.View.prototype.set_viewQuery = function(value) {};

/**
 * @return {boolean}
 */
SP.View.prototype.get_readOnlyView = function() {};

/**
 * @return {boolean}
 */
SP.View.prototype.get_requiresClientIntegration = function() {};

/**
 * @return {number}
 */
SP.View.prototype.get_rowLimit = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.View.prototype.set_rowLimit = function(value) {};

/**
 * @return {SP.ViewScope}
 */
SP.View.prototype.get_scope = function() {};

/**
 * @param {SP.ViewScope} value
 * @return {void}
 */
SP.View.prototype.set_scope = function(value) {};

/**
 * @return {string}
 */
SP.View.prototype.get_serverRelativeUrl = function() {};

/**
 * @return {string}
 */
SP.View.prototype.get_styleId = function() {};

/**
 * @return {boolean}
 */
SP.View.prototype.get_threaded = function() {};

/**
 * @return {string}
 */
SP.View.prototype.get_title = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.View.prototype.set_title = function(value) {};

/**
 * @return {string}
 */
SP.View.prototype.get_toolbar = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.View.prototype.set_toolbar = function(value) {};

/**
 * @return {string}
 */
SP.View.prototype.get_toolbarTemplateName = function() {};

/**
 * @return {string}
 */
SP.View.prototype.get_viewType = function() {};

/**
 * @return {string}
 */
SP.View.prototype.get_viewData = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.View.prototype.set_viewData = function(value) {};

/**
 * @return {!SP.ViewFieldCollection}
 */
SP.View.prototype.get_viewFields = function() {};

/**
 * @return {void}
 */
SP.View.prototype.deleteObject = function() {};

/**
 * @return {!SP.StringResult}
 */
SP.View.prototype.renderAsHtml = function() {};

/**
 * @return {void}
 */
SP.View.prototype.update = function() {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.ViewCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.View}
 */
SP.ViewCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.View}
 */
SP.ViewCollection.prototype.get_item = function(index) {};

/**
 * @param {string} strTitle
 * @return {!SP.View}
 */
SP.ViewCollection.prototype.getByTitle = function(strTitle) {};

/**
 * @param {!SP.Guid} guidId
 * @return {!SP.View}
 */
SP.ViewCollection.prototype.getById = function(guidId) {};

/**
 * @param {!SP.ViewCreationInformation} parameters
 * @return {!SP.View}
 */
SP.ViewCollection.prototype.add = function(parameters) {};

/**
 * @constructor
 * @struct
 */
SP.ViewCreationInformation = function() {};

/**
 * @return {boolean}
 */
SP.ViewCreationInformation.prototype.get_paged = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ViewCreationInformation.prototype.set_paged = function(value) {};

/**
 * @return {boolean}
 */
SP.ViewCreationInformation.prototype.get_personalView = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ViewCreationInformation.prototype.set_personalView = function(value) {};

/**
 * @return {string}
 */
SP.ViewCreationInformation.prototype.get_query = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ViewCreationInformation.prototype.set_query = function(value) {};

/**
 * @return {number}
 */
SP.ViewCreationInformation.prototype.get_rowLimit = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.ViewCreationInformation.prototype.set_rowLimit = function(value) {};

/**
 * @return {boolean}
 */
SP.ViewCreationInformation.prototype.get_setAsDefaultView = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.ViewCreationInformation.prototype.set_setAsDefaultView = function(value) {};

/**
 * @return {string}
 */
SP.ViewCreationInformation.prototype.get_title = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.ViewCreationInformation.prototype.set_title = function(value) {};

/**
 * @return {!Array<string>}
 */
SP.ViewCreationInformation.prototype.get_viewFields = function() {};

/**
 * @param {!Array<string>} value
 * @return {void}
 */
SP.ViewCreationInformation.prototype.set_viewFields = function(value) {};

/**
 * @return {SP.ViewType}
 */
SP.ViewCreationInformation.prototype.get_viewTypeKind = function() {};

/**
 * @param {SP.ViewType} value
 * @return {void}
 */
SP.ViewCreationInformation.prototype.set_viewTypeKind = function(value) {};

/**
 * @return {string}
 */
SP.ViewCreationInformation.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.ViewCreationInformation.prototype.writeToXml = function(writer, serializationContext) {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.ViewFieldCollection = function() {};

/**
 * @param {number} index
 * @return {string}
 */
SP.ViewFieldCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {string}
 */
SP.ViewFieldCollection.prototype.get_item = function(index) {};

/**
 * @return {string}
 */
SP.ViewFieldCollection.prototype.get_schemaXml = function() {};

/**
 * @param {string} field
 * @param {number} index
 * @return {void}
 */
SP.ViewFieldCollection.prototype.moveFieldTo = function(field, index) {};

/**
 * @param {string} strField
 * @return {void}
 */
SP.ViewFieldCollection.prototype.add = function(strField) {};

/**
 * @param {string} strField
 * @return {void}
 */
SP.ViewFieldCollection.prototype.remove = function(strField) {};

/**
 * @return {void}
 */
SP.ViewFieldCollection.prototype.removeAll = function() {};

/** @const */
SP.ViewScope = {};
/** @const {number} */
SP.ViewScope.defaultValue;
/** @const {number} */
SP.ViewScope.recursive;
/** @const {number} */
SP.ViewScope.recursiveAll;
/** @const {number} */
SP.ViewScope.filesOnly;

/** @const */
SP.ViewType = {};
/** @const {number} */
SP.ViewType.none;
/** @const {number} */
SP.ViewType.html;
/** @const {number} */
SP.ViewType.grid;
/** @const {number} */
SP.ViewType.calendar;
/** @const {number} */
SP.ViewType.recurrence;
/** @const {number} */
SP.ViewType.chart;
/** @const {number} */
SP.ViewType.gantt;
/**
 * @extends {SP.SecurableObject}
 * @constructor
 * @struct
 */
SP.Web = function() {};

/**
 * @return {boolean}
 */
SP.Web.prototype.get_allowDesignerForCurrentUser = function() {};

/**
 * @return {boolean}
 */
SP.Web.prototype.get_allowMasterPageEditingForCurrentUser = function() {};

/**
 * @return {boolean}
 */
SP.Web.prototype.get_allowRevertFromTemplateForCurrentUser = function() {};

/**
 * @return {boolean}
 */
SP.Web.prototype.get_allowRssFeeds = function() {};

/**
 * @return {!SP.PropertyValues}
 */
SP.Web.prototype.get_allProperties = function() {};

/**
 * @return {!SP.Guid}
 */
SP.Web.prototype.get_appInstanceId = function() {};

/**
 * @return {!SP.Group}
 */
SP.Web.prototype.get_associatedMemberGroup = function() {};

/**
 * @param {!SP.Group} value
 * @return {void}
 */
SP.Web.prototype.set_associatedMemberGroup = function(value) {};

/**
 * @return {!SP.Group}
 */
SP.Web.prototype.get_associatedOwnerGroup = function() {};

/**
 * @param {!SP.Group} value
 * @return {void}
 */
SP.Web.prototype.set_associatedOwnerGroup = function(value) {};

/**
 * @return {!SP.Group}
 */
SP.Web.prototype.get_associatedVisitorGroup = function() {};

/**
 * @param {!SP.Group} value
 * @return {void}
 */
SP.Web.prototype.set_associatedVisitorGroup = function(value) {};

/**
 * @return {!SP.ContentTypeCollection}
 */
SP.Web.prototype.get_availableContentTypes = function() {};

/**
 * @return {!SP.FieldCollection}
 */
SP.Web.prototype.get_availableFields = function() {};

/**
 * @return {number}
 */
SP.Web.prototype.get_configuration = function() {};

/**
 * @return {!SP.ContentTypeCollection}
 */
SP.Web.prototype.get_contentTypes = function() {};

/**
 * @return {!Date}
 */
SP.Web.prototype.get_created = function() {};

/**
 * @return {!SP.User}
 */
SP.Web.prototype.get_currentUser = function() {};

/**
 * @return {string}
 */
SP.Web.prototype.get_customMasterUrl = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Web.prototype.set_customMasterUrl = function(value) {};

/**
 * @return {string}
 */
SP.Web.prototype.get_description = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Web.prototype.set_description = function(value) {};

/**
 * @return {boolean}
 */
SP.Web.prototype.get_documentLibraryCalloutOfficeWebAppPreviewersDisabled = function() {};

/**
 * @return {!SP.BasePermissions}
 */
SP.Web.prototype.get_effectiveBasePermissions = function() {};

/**
 * @return {boolean}
 */
SP.Web.prototype.get_enableMinimalDownload = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Web.prototype.set_enableMinimalDownload = function(value) {};

/**
 * @return {!SP.EventReceiverDefinitionCollection}
 */
SP.Web.prototype.get_eventReceivers = function() {};

/**
 * @return {!SP.FeatureCollection}
 */
SP.Web.prototype.get_features = function() {};

/**
 * @return {!SP.FieldCollection}
 */
SP.Web.prototype.get_fields = function() {};

/**
 * @return {!SP.FolderCollection}
 */
SP.Web.prototype.get_folders = function() {};

/**
 * @return {!SP.Guid}
 */
SP.Web.prototype.get_id = function() {};

/**
 * @return {number}
 */
SP.Web.prototype.get_language = function() {};

/**
 * @return {!Date}
 */
SP.Web.prototype.get_lastItemModifiedDate = function() {};

/**
 * @return {!SP.ListCollection}
 */
SP.Web.prototype.get_lists = function() {};

/**
 * @return {!SP.ListTemplateCollection}
 */
SP.Web.prototype.get_listTemplates = function() {};

/**
 * @return {string}
 */
SP.Web.prototype.get_masterUrl = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Web.prototype.set_masterUrl = function(value) {};

/**
 * @return {!SP.Navigation}
 */
SP.Web.prototype.get_navigation = function() {};

/**
 * @return {!SP.WebInformation}
 */
SP.Web.prototype.get_parentWeb = function() {};

/**
 * @return {!SP.PushNotificationSubscriberCollection}
 */
SP.Web.prototype.get_pushNotificationSubscribers = function() {};

/**
 * @return {boolean}
 */
SP.Web.prototype.get_quickLaunchEnabled = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Web.prototype.set_quickLaunchEnabled = function(value) {};

/**
 * @return {!SP.RecycleBinItemCollection}
 */
SP.Web.prototype.get_recycleBin = function() {};

/**
 * @return {boolean}
 */
SP.Web.prototype.get_recycleBinEnabled = function() {};

/**
 * @return {!SP.RegionalSettings}
 */
SP.Web.prototype.get_regionalSettings = function() {};

/**
 * @return {!SP.RoleDefinitionCollection}
 */
SP.Web.prototype.get_roleDefinitions = function() {};

/**
 * @return {!SP.Folder}
 */
SP.Web.prototype.get_rootFolder = function() {};

/**
 * @return {boolean}
 */
SP.Web.prototype.get_saveSiteAsTemplateEnabled = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Web.prototype.set_saveSiteAsTemplateEnabled = function(value) {};

/**
 * @return {string}
 */
SP.Web.prototype.get_serverRelativeUrl = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Web.prototype.set_serverRelativeUrl = function(value) {};

/**
 * @return {boolean}
 */
SP.Web.prototype.get_showUrlStructureForCurrentUser = function() {};

/**
 * @return {string}
 */
SP.Web.prototype.get_siteLogoUrl = function() {};

/**
 * @return {!SP.GroupCollection}
 */
SP.Web.prototype.get_siteGroups = function() {};

/**
 * @return {!SP.List<?>}
 */
SP.Web.prototype.get_siteUserInfoList = function() {};

/**
 * @return {!SP.UserCollection}
 */
SP.Web.prototype.get_siteUsers = function() {};

/**
 * @return {!Array<number>}
 */
SP.Web.prototype.get_supportedUILanguageIds = function() {};

/**
 * @return {boolean}
 */
SP.Web.prototype.get_syndicationEnabled = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Web.prototype.set_syndicationEnabled = function(value) {};

/**
 * @return {!SP.ThemeInfo}
 */
SP.Web.prototype.get_themeInfo = function() {};

/**
 * @return {string}
 */
SP.Web.prototype.get_title = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Web.prototype.set_title = function(value) {};

/**
 * @return {boolean}
 */
SP.Web.prototype.get_treeViewEnabled = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Web.prototype.set_treeViewEnabled = function(value) {};

/**
 * @return {number}
 */
SP.Web.prototype.get_uIVersion = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.Web.prototype.set_uIVersion = function(value) {};

/**
 * @return {boolean}
 */
SP.Web.prototype.get_uIVersionConfigurationEnabled = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Web.prototype.set_uIVersionConfigurationEnabled = function(value) {};

/**
 * @return {string}
 */
SP.Web.prototype.get_url = function() {};

/**
 * @return {!SP.UserCustomActionCollection}
 */
SP.Web.prototype.get_userCustomActions = function() {};

/**
 * @return {!SP.WebCollection}
 */
SP.Web.prototype.get_webs = function() {};

/**
 * @return {string}
 */
SP.Web.prototype.get_webTemplate = function() {};

/**
 * @return {!SP.Workflow.WorkflowAssociationCollection}
 */
SP.Web.prototype.get_workflowAssociations = function() {};

/**
 * @return {!SP.Workflow.WorkflowTemplateCollection}
 */
SP.Web.prototype.get_workflowTemplates = function() {};

/**
 * @param {!SP.BasePermissions} permissionMask
 * @return {!SP.BooleanResult}
 */
SP.Web.prototype.doesUserHavePermissions = function(permissionMask) {};

/**
 * @param {string} userName
 * @return {!SP.BasePermissions}
 */
SP.Web.prototype.getUserEffectivePermissions = function(userName) {};

/**
 * @param {string} fileName
 * @param {string} progId
 * @param {SP.Utilities.IconSize} size
 * @return {!SP.StringResult}
 */
SP.Web.prototype.mapToIcon = function(fileName, progId, size) {};

/**
 * @param {!SP.Guid} deviceAppInstanceId
 * @param {string} serviceToken
 * @return {!SP.PushNotificationSubscriber}
 */
SP.Web.prototype.registerPushNotificationSubscriber = function(deviceAppInstanceId, serviceToken) {};

/**
 * @param {!SP.Guid} deviceAppInstanceId
 * @return {void}
 */
SP.Web.prototype.unregisterPushNotificationSubscriber = function(deviceAppInstanceId) {};

/**
 * @param {string} customArgs
 * @return {!SP.PushNotificationSubscriberCollection}
 */
SP.Web.prototype.getPushNotificationSubscribersByArgs = function(customArgs) {};

/**
 * @param {string} userName
 * @return {!SP.PushNotificationSubscriberCollection}
 */
SP.Web.prototype.getPushNotificationSubscribersByUser = function(userName) {};

/**
 * @param {!SP.Guid} deviceAppInstanceId
 * @return {!SP.BooleanResult}
 */
SP.Web.prototype.doesPushNotificationSubscriberExist = function(deviceAppInstanceId) {};

/**
 * @param {!SP.Guid} deviceAppInstanceId
 * @return {!SP.PushNotificationSubscriber}
 */
SP.Web.prototype.getPushNotificationSubscriber = function(deviceAppInstanceId) {};

/**
 * @param {number} userId
 * @return {!SP.User}
 */
SP.Web.prototype.getUserById = function(userId) {};

/**
 * @param {number} lcid
 * @param {boolean} doIncludeCrossLanguage
 * @return {!SP.WebTemplateCollection}
 */
SP.Web.prototype.getAvailableWebTemplates = function(lcid, doIncludeCrossLanguage) {};

/**
 * @param {number} typeCatalog
 * @return {!SP.List<?>}
 */
SP.Web.prototype.getCatalog = function(typeCatalog) {};

/**
 * @param {!SP.ChangeQuery} query
 * @return {!SP.ChangeCollection}
 */
SP.Web.prototype.getChanges = function(query) {};

/**
 * @param {string} webTemplate
 * @return {void}
 */
SP.Web.prototype.applyWebTemplate = function(webTemplate) {};

/**
 * @return {void}
 */
SP.Web.prototype.deleteObject = function() {};

/**
 * @return {void}
 */
SP.Web.prototype.update = function() {};

/**
 * @param {string} serverRelativeUrl
 * @return {!SP.File}
 */
SP.Web.prototype.getFileByServerRelativeUrl = function(serverRelativeUrl) {};

/**
 * @param {string} serverRelativeUrl
 * @return {!SP.Folder}
 */
SP.Web.prototype.getFolderByServerRelativeUrl = function(serverRelativeUrl) {};

/**
 * @param {string} namespace
 * @param {string} name
 * @return {!SP.BusinessData.Entity}
 */
SP.Web.prototype.getEntity = function(namespace, name) {};

/**
 * @param {!SP.Guid} appInstanceId
 * @return {!SP.BusinessData.AppBdcCatalog}
 */
SP.Web.prototype.getAppBdcCatalogForAppInstance = function(appInstanceId) {};

/**
 * @return {!SP.BusinessData.AppBdcCatalog}
 */
SP.Web.prototype.getAppBdcCatalog = function() {};

/**
 * @param {!SP.SubwebQuery} query
 * @return {!SP.WebCollection}
 */
SP.Web.prototype.getSubwebsForCurrentUser = function(query) {};

/**
 * @param {!SP.Guid} appInstanceId
 * @return {!SP.AppInstance}
 */
SP.Web.prototype.getAppInstanceById = function(appInstanceId) {};

/**
 * @param {!SP.Guid} productId
 * @return {!SP.ClientObjectList<!SP.AppInstance>}
 */
SP.Web.prototype.getAppInstancesByProductId = function(productId) {};

/**
 * @param {!SP.Base64EncodedByteArray} appPackageStream
 * @param {number} installationLocaleLCID
 * @return {!SP.AppInstance}
 */
SP.Web.prototype.loadAndInstallAppInSpecifiedLocale = function(appPackageStream, installationLocaleLCID) {};

/**
 * @param {!SP.Base64EncodedByteArray} appPackageStream
 * @param {number} installationLocaleLCID
 * @return {!SP.AppInstance}
 */
SP.Web.prototype.loadApp = function(appPackageStream, installationLocaleLCID) {};

/**
 * @param {!SP.Base64EncodedByteArray} appPackageStream
 * @return {!SP.AppInstance}
 */
SP.Web.prototype.loadAndInstallApp = function(appPackageStream) {};

/**
 * @param {string} logonName
 * @return {!SP.User}
 */
SP.Web.prototype.ensureUser = function(logonName) {};

/**
 * @param {string} colorPaletteUrl
 * @param {string} fontSchemeUrl
 * @param {string} backgroundImageUrl
 * @param {boolean} shareGenerated
 * @return {void}
 */
SP.Web.prototype.applyTheme = function(colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {};

/**
 * Available after March 2015 CU for SharePoint 2013
 * @param {string} url
 * @return {!SP.List<?>}
 */
SP.Web.prototype.getList = function(url) {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.WebCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.Web}
 */
SP.WebCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.Web}
 */
SP.WebCollection.prototype.get_item = function(index) {};

/**
 * @param {!SP.WebCreationInformation} parameters
 * @return {!SP.Web}
 */
SP.WebCollection.prototype.add = function(parameters) {};

/**
 * @constructor
 * @struct
 */
SP.WebCreationInformation = function() {};

/**
 * @return {string}
 */
SP.WebCreationInformation.prototype.get_description = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.WebCreationInformation.prototype.set_description = function(value) {};

/**
 * @return {number}
 */
SP.WebCreationInformation.prototype.get_language = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.WebCreationInformation.prototype.set_language = function(value) {};

/**
 * @return {string}
 */
SP.WebCreationInformation.prototype.get_title = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.WebCreationInformation.prototype.set_title = function(value) {};

/**
 * @return {string}
 */
SP.WebCreationInformation.prototype.get_url = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.WebCreationInformation.prototype.set_url = function(value) {};

/**
 * @return {boolean}
 */
SP.WebCreationInformation.prototype.get_useSamePermissionsAsParentSite = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.WebCreationInformation.prototype.set_useSamePermissionsAsParentSite = function(value) {};

/**
 * @return {string}
 */
SP.WebCreationInformation.prototype.get_webTemplate = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.WebCreationInformation.prototype.set_webTemplate = function(value) {};

/**
 * @return {string}
 */
SP.WebCreationInformation.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.WebCreationInformation.prototype.writeToXml = function(writer, serializationContext) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.WebInformation = function() {};

/**
 * @return {number}
 */
SP.WebInformation.prototype.get_configuration = function() {};

/**
 * @return {!Date}
 */
SP.WebInformation.prototype.get_created = function() {};

/**
 * @return {string}
 */
SP.WebInformation.prototype.get_description = function() {};

/**
 * @return {!SP.Guid}
 */
SP.WebInformation.prototype.get_id = function() {};

/**
 * @return {number}
 */
SP.WebInformation.prototype.get_language = function() {};

/**
 * @return {!Date}
 */
SP.WebInformation.prototype.get_lastItemModifiedDate = function() {};

/**
 * @return {string}
 */
SP.WebInformation.prototype.get_serverRelativeUrl = function() {};

/**
 * @return {string}
 */
SP.WebInformation.prototype.get_title = function() {};

/**
 * @return {string}
 */
SP.WebInformation.prototype.get_webTemplate = function() {};

/**
 * @return {number}
 */
SP.WebInformation.prototype.get_webTemplateId = function() {};
/**
 * @constructor
 * @struct
 */
SP.WebProxy = function() {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.WebRequestInfo} requestInfo
 * @return {!SP.WebResponseInfo}
 */
SP.WebProxy.invoke = function(context, requestInfo) {};

/**
 * @constructor
 * @struct
 */
SP.WebRequestInfo = function() {};

/**
 * @return {string}
 */
SP.WebRequestInfo.prototype.get_body = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.WebRequestInfo.prototype.set_body = function(value) {};

/**
 * @return {?}
 */
SP.WebRequestInfo.prototype.get_headers = function() {};

/**
 * @param {?} value
 * @return {void}
 */
SP.WebRequestInfo.prototype.set_headers = function(value) {};

/**
 * @return {string}
 */
SP.WebRequestInfo.prototype.get_method = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.WebRequestInfo.prototype.set_method = function(value) {};

/**
 * @return {string}
 */
SP.WebRequestInfo.prototype.get_url = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.WebRequestInfo.prototype.set_url = function(value) {};

/**
 * @return {string}
 */
SP.WebRequestInfo.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.WebRequestInfo.prototype.writeToXml = function(writer, serializationContext) {};

/**
 * @constructor
 * @struct
 */
SP.WebResponseInfo = function() {};

/**
 * @return {string}
 */
SP.WebResponseInfo.prototype.get_body = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.WebResponseInfo.prototype.set_body = function(value) {};

/**
 * @return {?}
 */
SP.WebResponseInfo.prototype.get_headers = function() {};

/**
 * @param {?} value
 * @return {void}
 */
SP.WebResponseInfo.prototype.set_headers = function(value) {};

/**
 * @return {number}
 */
SP.WebResponseInfo.prototype.get_statusCode = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.WebResponseInfo.prototype.set_statusCode = function(value) {};

/**
 * @return {string}
 */
SP.WebResponseInfo.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.WebResponseInfo.prototype.writeToXml = function(writer, serializationContext) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.WebTemplate = function() {};

/**
 * @return {string}
 */
SP.WebTemplate.prototype.get_description = function() {};

/**
 * @return {string}
 */
SP.WebTemplate.prototype.get_displayCategory = function() {};

/**
 * @return {number}
 */
SP.WebTemplate.prototype.get_id = function() {};

/**
 * @return {string}
 */
SP.WebTemplate.prototype.get_imageUrl = function() {};

/**
 * @return {boolean}
 */
SP.WebTemplate.prototype.get_isHidden = function() {};

/**
 * @return {boolean}
 */
SP.WebTemplate.prototype.get_isRootWebOnly = function() {};

/**
 * @return {boolean}
 */
SP.WebTemplate.prototype.get_isSubWebOnly = function() {};

/**
 * @return {number}
 */
SP.WebTemplate.prototype.get_lcid = function() {};

/**
 * @return {string}
 */
SP.WebTemplate.prototype.get_name = function() {};

/**
 * @return {string}
 */
SP.WebTemplate.prototype.get_title = function() {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.WebTemplateCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.WebTemplate}
 */
SP.WebTemplateCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.WebTemplate}
 */
SP.WebTemplateCollection.prototype.get_item = function(index) {};

/**
 * @param {string} name
 * @return {!SP.WebTemplate}
 */
SP.WebTemplateCollection.prototype.getByName = function(name) {};
/** @const */
SP.Application = {};
/** @const */
SP.Application.UI = {};
/**
 * @record
 * @struct
 */
SP.Application.UI.DefaultFormsInformationRequestor = function() {};

/**
 * @param {!SP.Application.UI.DefaultFormsInformation} defaultForms
 * @return {void}
 */
SP.Application.UI.DefaultFormsInformationRequestor.prototype.onDefaultFormsInformationRetrieveSuccess = function(defaultForms) {};

/**
 * @return {void}
 */
SP.Application.UI.DefaultFormsInformationRequestor.prototype.onDefaultFormsInformationRetrieveFailure = function() {};

/**
 * @constructor
 * @struct
 */
SP.Application.UI.FormsInfo = function() {};
 /** @type {string} */
SP.Application.UI.FormsInfo.prototype.ContentTypeName;
 /** @type {string} */
SP.Application.UI.FormsInfo.prototype.NewFormUrl;
 /** @type {string} */
SP.Application.UI.FormsInfo.prototype.DisplayFormUrl;
 /** @type {string} */
SP.Application.UI.FormsInfo.prototype.EditFormUrl;

/**
 * @constructor
 * @struct
 */
SP.Application.UI.DefaultFormsInformation = function() {};
 /** @type {!SP.Application.UI.FormsInfo} */
SP.Application.UI.DefaultFormsInformation.prototype.DefaultForms;
 /** @type {?} */
SP.Application.UI.DefaultFormsInformation.prototype.OtherForms;
/**
 * @constructor
 * @struct
 */
SP.Application.UI.DefaultFormsMenuBuilder = function() {};

/**
 * @param {!SP.Application.UI.DefaultFormsInformationRequestor} requestor
 * @param {!SP.Guid} listId
 * @return {void}
 */
SP.Application.UI.DefaultFormsMenuBuilder.getDefaultFormsInformation = function(requestor, listId) {};

/**
 * @constructor
 * @struct
 */
SP.Application.UI.ViewSelectorMenuOptions = function() {};
 /** @type {boolean} */
SP.Application.UI.ViewSelectorMenuOptions.prototype.showRepairView;
 /** @type {boolean} */
SP.Application.UI.ViewSelectorMenuOptions.prototype.showMergeView;
 /** @type {boolean} */
SP.Application.UI.ViewSelectorMenuOptions.prototype.showEditView;
 /** @type {boolean} */
SP.Application.UI.ViewSelectorMenuOptions.prototype.showCreateView;
 /** @type {boolean} */
SP.Application.UI.ViewSelectorMenuOptions.prototype.showApproverView;
 /** @type {string} */
SP.Application.UI.ViewSelectorMenuOptions.prototype.listId;
 /** @type {string} */
SP.Application.UI.ViewSelectorMenuOptions.prototype.viewId;
 /** @type {string} */
SP.Application.UI.ViewSelectorMenuOptions.prototype.viewParameters;
/**
 * @record
 * @struct
 */
SP.Application.UI.ViewInformationRequestor = function() {};

/**
 * @param {!SP.Application.UI.ViewSelectorGroups} viewGroups
 * @return {void}
 */
SP.Application.UI.ViewInformationRequestor.prototype.onViewInformationReturned = function(viewGroups) {};

/**
 * @constructor
 * @struct
 */
SP.Application.UI.ViewSelectorGroups = function() {};
 /** @type {?} */
SP.Application.UI.ViewSelectorGroups.prototype.ModeratedViews;
 /** @type {?} */
SP.Application.UI.ViewSelectorGroups.prototype.PublicViews;
 /** @type {?} */
SP.Application.UI.ViewSelectorGroups.prototype.PersonalViews;
 /** @type {?} */
SP.Application.UI.ViewSelectorGroups.prototype.OtherViews;
 /** @type {!SP.Application.UI.ViewSelectorMenuItem} */
SP.Application.UI.ViewSelectorGroups.prototype.DefaultView;
 /** @type {?} */
SP.Application.UI.ViewSelectorGroups.prototype.ViewCreation;

/**
 * @constructor
 * @struct
 */
SP.Application.UI.ViewSelectorMenuItem = function() {};
 /** @type {string} */
SP.Application.UI.ViewSelectorMenuItem.prototype.Text;
 /** @type {string} */
SP.Application.UI.ViewSelectorMenuItem.prototype.ActionScriptText;
 /** @type {string} */
SP.Application.UI.ViewSelectorMenuItem.prototype.NavigateUrl;
 /** @type {string} */
SP.Application.UI.ViewSelectorMenuItem.prototype.ImageSourceUrl;
 /** @type {string} */
SP.Application.UI.ViewSelectorMenuItem.prototype.Description;
 /** @type {string} */
SP.Application.UI.ViewSelectorMenuItem.prototype.Id;
 /** @type {number} */
SP.Application.UI.ViewSelectorMenuItem.prototype.Sequence;
 /** @type {string} */
SP.Application.UI.ViewSelectorMenuItem.prototype.ItemType;
 /** @type {number} */
SP.Application.UI.ViewSelectorMenuItem.prototype.GroupId;

/**
 * @constructor
 * @struct
 */
SP.Application.UI.ViewSelectorSubMenu = function() {};
 /** @type {string} */
SP.Application.UI.ViewSelectorSubMenu.prototype.Text;
 /** @type {string} */
SP.Application.UI.ViewSelectorSubMenu.prototype.ImageSourceUrl;
 /** @type {?} */
SP.Application.UI.ViewSelectorSubMenu.prototype.SubMenuItems;
/**
 * @constructor
 * @struct
 */
SP.Application.UI.ViewSelectorMenuBuilder = function() {};

/**
 * @return {function(?): ?}
 */
SP.Application.UI.ViewSelectorMenuBuilder.get_filterMenuItemsCallback = function() {};

/**
 * @param {function(?): ?} value
 * @return {void}
 */
SP.Application.UI.ViewSelectorMenuBuilder.set_filterMenuItemsCallback = function(value) {};

/**
 * @param {!HTMLElement} elem
 * @param {!SP.Application.UI.ViewSelectorMenuOptions} options
 * @return {void}
 */
SP.Application.UI.ViewSelectorMenuBuilder.showMenu = function(elem, options) {};

/**
 * @param {!SP.Application.UI.ViewInformationRequestor} requestor
 * @param {!SP.Application.UI.ViewSelectorMenuOptions} options
 * @return {void}
 */
SP.Application.UI.ViewSelectorMenuBuilder.getViewInformation = function(requestor, options) {};

/**
 * @constructor
 * @struct
 * @param {!HTMLElement} e
 */
SP.Application.UI.MoreColorsPicker = function(e) {};

/**
 * @return {void}
 */
SP.Application.UI.MoreColorsPicker.prototype.initialize = function() {};

/**
 * @return {void}
 */
SP.Application.UI.MoreColorsPicker.prototype.dispose = function() {};

/**
 * @return {string}
 */
SP.Application.UI.MoreColorsPicker.prototype.get_colorValue = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Application.UI.MoreColorsPicker.prototype.set_colorValue = function(value) {};

/**
 * @constructor
 * @struct
 * @param {!HTMLElement} e
 */
SP.Application.UI.MoreColorsPage = function(e) {};

/**
 * @return {void}
 */
SP.Application.UI.MoreColorsPage.prototype.initialize = function() {};

/**
 * @return {void}
 */
SP.Application.UI.MoreColorsPage.prototype.dispose = function() {};

/**
 * @return {!SP.Application.UI.MoreColorsPicker}
 */
SP.Application.UI.MoreColorsPage.prototype.get_moreColorsPicker = function() {};

/**
 * @param {!SP.Application.UI.MoreColorsPicker} value
 * @return {void}
 */
SP.Application.UI.MoreColorsPage.prototype.set_moreColorsPicker = function(value) {};

/**
 * @constructor
 * @struct
 * @param {!HTMLElement} e
 */
SP.Application.UI.ThemeWebPage = function(e) {};

/**
 * @param {function(?, !Sys.EventArgs): void} value
 * @return {void}
 */
SP.Application.UI.ThemeWebPage.prototype.add_themeDisplayUpdated = function(value) {};

/**
 * @param {function(?, !Sys.EventArgs): void} value
 * @return {void}
 */
SP.Application.UI.ThemeWebPage.prototype.remove_themeDisplayUpdated = function(value) {};

/**
 * @return {void}
 */
SP.Application.UI.ThemeWebPage.prototype.initialize = function() {};

/**
 * @return {void}
 */
SP.Application.UI.ThemeWebPage.prototype.dispose = function() {};

/**
 * @param {!Sys.UI.DomEvent} evt
 * @return {void}
 */
SP.Application.UI.ThemeWebPage.prototype.onThemeSelectionChanged = function(evt) {};

/**
 * @return {void}
 */
SP.Application.UI.ThemeWebPage.prototype.updateThemeDisplay = function() {};

/**
 * @return {?}
 */
SP.Application.UI.ThemeWebPage.prototype.get_thmxThemes = function() {};

/**
 * @param {?} value
 * @return {void}
 */
SP.Application.UI.ThemeWebPage.prototype.set_thmxThemes = function(value) {};

/**
 * @constructor
 * @struct
 * @param {?} ownerDoc
 * @param {string} displayElemId
 * @param {string} editElemId
 * @param {string} editTextBoxId
 */
SP.Application.UI.WikiPageNameInPlaceEditor = function(ownerDoc, displayElemId, editElemId, editTextBoxId) {};

/**
 * @return {void}
 */
SP.Application.UI.WikiPageNameInPlaceEditor.prototype.editingPageCallback = function() {};

/**
 * @return {void}
 */
SP.Application.UI.WikiPageNameInPlaceEditor.prototype.savingPageCallback = function() {};
/** @const */
SP.Analytics = {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.Analytics.AnalyticsUsageEntry = function() {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {number} eventTypeId
 * @param {string} itemId
 * @return {void}
 */
SP.Analytics.AnalyticsUsageEntry.logAnalyticsEvent = function(context, eventTypeId, itemId) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {number} eventTypeId
 * @param {string} itemId
 * @param {!SP.Guid} rollupScopeId
 * @param {!SP.Guid} siteId
 * @param {string} userId
 * @return {void}
 */
SP.Analytics.AnalyticsUsageEntry.logAnalyticsEvent2 = function(context, eventTypeId, itemId, rollupScopeId, siteId, userId) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.Guid} appEventTypeId
 * @param {string} itemId
 * @return {void}
 */
SP.Analytics.AnalyticsUsageEntry.logAnalyticsAppEvent = function(context, appEventTypeId, itemId) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.Guid} appEventTypeId
 * @param {string} itemId
 * @param {!SP.Guid} rollupScopeId
 * @param {!SP.Guid} siteId
 * @param {string} userId
 * @return {void}
 */
SP.Analytics.AnalyticsUsageEntry.logAnalyticsAppEvent2 = function(context, appEventTypeId, itemId, rollupScopeId, siteId, userId) {};

/** @const */
SP.Analytics.EventTypeId = {};
/** @const {number} */
SP.Analytics.EventTypeId.none;
/** @const {number} */
SP.Analytics.EventTypeId.first;
/** @const {number} */
SP.Analytics.EventTypeId.view;
/** @const {number} */
SP.Analytics.EventTypeId.recommendationView;
/** @const {number} */
SP.Analytics.EventTypeId.recommendationClick;
/** @const {number} */
SP.Analytics.EventTypeId.last;
/** @const */
SP.SiteHealth = {};

/**
 * @constructor
 * @struct
 */
SP.SiteHealth.SiteHealthResult = function() {};

/**
 * @return {string}
 */
SP.SiteHealth.SiteHealthResult.prototype.get_messageAsText = function() {};

/**
 * @return {string}
 */
SP.SiteHealth.SiteHealthResult.prototype.get_ruleHelpLink = function() {};

/**
 * @return {!SP.Guid}
 */
SP.SiteHealth.SiteHealthResult.prototype.get_ruleId = function() {};

/**
 * @return {boolean}
 */
SP.SiteHealth.SiteHealthResult.prototype.get_ruleIsRepairable = function() {};

/**
 * @return {string}
 */
SP.SiteHealth.SiteHealthResult.prototype.get_ruleName = function() {};

/**
 * @return {SP.SiteHealth.SiteHealthStatusType}
 */
SP.SiteHealth.SiteHealthResult.prototype.get_status = function() {};

/**
 * @param {SP.SiteHealth.SiteHealthStatusType} value
 * @return {void}
 */
SP.SiteHealth.SiteHealthResult.prototype.set_status = function(value) {};

/**
 * @return {!Date}
 */
SP.SiteHealth.SiteHealthResult.prototype.get_timeStamp = function() {};

/**
 * @param {!Date} value
 * @return {void}
 */
SP.SiteHealth.SiteHealthResult.prototype.set_timeStamp = function(value) {};

/**
 * @return {string}
 */
SP.SiteHealth.SiteHealthResult.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.SiteHealth.SiteHealthResult.prototype.writeToXml = function(writer, serializationContext) {};

/** @const */
SP.SiteHealth.SiteHealthStatusType = {};
/** @const {number} */
SP.SiteHealth.SiteHealthStatusType.passed;
/** @const {number} */
SP.SiteHealth.SiteHealthStatusType.failedWarning;
/** @const {number} */
SP.SiteHealth.SiteHealthStatusType.failedError;
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.SiteHealth.SiteHealthSummary = function() {};

/**
 * @return {number}
 */
SP.SiteHealth.SiteHealthSummary.prototype.get_failedErrorCount = function() {};

/**
 * @return {number}
 */
SP.SiteHealth.SiteHealthSummary.prototype.get_failedWarningCount = function() {};

/**
 * @return {number}
 */
SP.SiteHealth.SiteHealthSummary.prototype.get_passedCount = function() {};

/**
 * @return {!Array<!SP.SiteHealth.SiteHealthResult>}
 */
SP.SiteHealth.SiteHealthSummary.prototype.get_results = function() {};
/** @const */
var Microsoft = {};
/** @const */
Microsoft.SharePoint = {};
/** @const */
Microsoft.SharePoint.Client = {};
/** @const */
Microsoft.SharePoint.Client.Search = {};
/** @const */
Microsoft.SharePoint.Client.Search.Query = {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
Microsoft.SharePoint.Client.Search.Query.Query = function() {};
 /** @type {function(): number} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_blockDedupeMode;
 /** @type {function(number): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_blockDedupeMode;
 /** @type {function(): boolean} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_bypassResultTypes;
 /** @type {function(boolean): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_bypassResultTypes;
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_clientType;
 /** @type {function(string): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_clientType;
 /** @type {function(): number} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_culture;
 /** @type {function(number): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_culture;
 /** @type {function(): number} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_desiredSnippetLength;
 /** @type {function(number): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_desiredSnippetLength;
 /** @type {function(): boolean} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_enableInterleaving;
 /** @type {function(boolean): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_enableInterleaving;
 /** @type {function(): boolean} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_enableNicknames;
 /** @type {function(boolean): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_enableNicknames;
 /** @type {function(): boolean} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_enableOrderingHitHighlightedProperty;
 /** @type {function(boolean): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_enableOrderingHitHighlightedProperty;
 /** @type {function(): boolean} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_enablePhonetic;
 /** @type {function(boolean): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_enablePhonetic;
 /** @type {function(): boolean} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_enableQueryRules;
 /** @type {function(boolean): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_enableQueryRules;
 /** @type {function(): boolean} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_enableStemming;
 /** @type {function(boolean): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_enableStemming;
 /** @type {function(): boolean} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_generateBlockRankLog;
 /** @type {function(boolean): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_generateBlockRankLog;
 /** @type {function(): number} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_hitHighlightedMultivaluePropertyLimit;
 /** @type {function(number): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_hitHighlightedMultivaluePropertyLimit;
 /** @type {function(): !Microsoft.SharePoint.Client.Search.Query.StringCollection} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_hitHighlightedProperties;
 /** @type {function(): boolean} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_ignoreSafeQueryPropertiesTemplateUrl;
 /** @type {function(boolean): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_ignoreSafeQueryPropertiesTemplateUrl;
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_impressionID;
 /** @type {function(string): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_impressionID;
 /** @type {function(): number} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_maxSnippetLength;
 /** @type {function(number): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_maxSnippetLength;
 /** @type {function(): !Microsoft.SharePoint.Client.Search.Query.QueryPersonalizationData} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_personalizationData;
 /** @type {function(!Microsoft.SharePoint.Client.Search.Query.QueryPersonalizationData): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_personalizationData;
 /** @type {function(): boolean} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_processBestBets;
 /** @type {function(boolean): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_processBestBets;
 /** @type {function(): boolean} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_processPersonalFavorites;
 /** @type {function(boolean): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_processPersonalFavorites;
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_queryTag;
 /** @type {function(string): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_queryTag;
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_queryTemplate;
 /** @type {function(string): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_queryTemplate;
 /** @type {function(): !Object<string,boolean>} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_queryTemplateParameters;
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_queryText;
 /** @type {function(string): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_queryText;
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_rankingModelId;
 /** @type {function(string): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_rankingModelId;
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_resultsUrl;
 /** @type {function(string): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_resultsUrl;
 /** @type {function(): number} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_rowLimit;
 /** @type {function(number): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_rowLimit;
 /** @type {function(): number} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_rowsPerPage;
 /** @type {function(number): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_rowsPerPage;
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_safeQueryPropertiesTemplateUrl;
 /** @type {function(string): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_safeQueryPropertiesTemplateUrl;
 /** @type {function(): boolean} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_showPeopleNameSuggestions;
 /** @type {function(boolean): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_showPeopleNameSuggestions;
 /** @type {function(): !SP.Guid} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_sourceId;
 /** @type {function(!SP.Guid): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_sourceId;
 /** @type {function(): number} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_startRow;
 /** @type {function(number): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_startRow;
 /** @type {function(): number} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_summaryLength;
 /** @type {function(number): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_summaryLength;
 /** @type {function(): number} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_timeout;
 /** @type {function(number): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_timeout;
 /** @type {function(): number} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_totalRowsExactMinimum;
 /** @type {function(number): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_totalRowsExactMinimum;
 /** @type {function(): boolean} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_trimDuplicates;
 /** @type {function(boolean): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_trimDuplicates;
 /** @type {function(): number} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.get_uiLanguage;
 /** @type {function(number): void} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.set_uiLanguage;
 /** @type {function(number, number, boolean, boolean, boolean, boolean): !Microsoft.SharePoint.Client.Search.Query.QuerySuggestionResults} */
Microsoft.SharePoint.Client.Search.Query.Query.prototype.getQuerySuggestionsWithResults;

/**
 * @constructor
 * @struct
 * @param {!SP.ClientContext} context
 */
Microsoft.SharePoint.Client.Search.Query.KeywordQuery = function(context) {};
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.Query.KeywordQuery.prototype.get_collapseSpecification;
 /** @type {function(string): void} */
Microsoft.SharePoint.Client.Search.Query.KeywordQuery.prototype.set_collapseSpecification;
 /** @type {function(): boolean} */
Microsoft.SharePoint.Client.Search.Query.KeywordQuery.prototype.get_enableSorting;
 /** @type {function(boolean): void} */
Microsoft.SharePoint.Client.Search.Query.KeywordQuery.prototype.set_enableSorting;
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.Query.KeywordQuery.prototype.get_hiddenConstraints;
 /** @type {function(string): void} */
Microsoft.SharePoint.Client.Search.Query.KeywordQuery.prototype.set_hiddenConstraints;
 /** @type {function(): !Microsoft.SharePoint.Client.Search.Query.KeywordQueryProperties} */
Microsoft.SharePoint.Client.Search.Query.KeywordQuery.prototype.get_properties;
 /** @type {function(): !Microsoft.SharePoint.Client.Search.Query.StringCollection} */
Microsoft.SharePoint.Client.Search.Query.KeywordQuery.prototype.get_refinementFilters;
 /** @type {function(!Microsoft.SharePoint.Client.Search.Query.StringCollection): void} */
Microsoft.SharePoint.Client.Search.Query.KeywordQuery.prototype.set_refinementFilters;
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.Query.KeywordQuery.prototype.get_refiners;
 /** @type {function(string): void} */
Microsoft.SharePoint.Client.Search.Query.KeywordQuery.prototype.set_refiners;
 /** @type {function(): !Microsoft.SharePoint.Client.Search.Query.ReorderingRuleCollection} */
Microsoft.SharePoint.Client.Search.Query.KeywordQuery.prototype.get_reorderingRules;
 /** @type {function(!Microsoft.SharePoint.Client.Search.Query.ReorderingRuleCollection): void} */
Microsoft.SharePoint.Client.Search.Query.KeywordQuery.prototype.set_reorderingRules;
 /** @type {function(): !Microsoft.SharePoint.Client.Search.Query.StringCollection} */
Microsoft.SharePoint.Client.Search.Query.KeywordQuery.prototype.get_selectProperties;
 /** @type {function(): !Microsoft.SharePoint.Client.Search.Query.SortCollection} */
Microsoft.SharePoint.Client.Search.Query.KeywordQuery.prototype.get_sortList;
 /** @type {function(): number} */
Microsoft.SharePoint.Client.Search.Query.KeywordQuery.prototype.get_trimDuplicatesIncludeId;
 /** @type {function(number): void} */
Microsoft.SharePoint.Client.Search.Query.KeywordQuery.prototype.set_trimDuplicatesIncludeId;

/**
 * @constructor
 * @struct
 * @param {!SP.ClientContext} context
 */
Microsoft.SharePoint.Client.Search.Query.SearchExecutor = function(context) {};
 /** @type {function(!Microsoft.SharePoint.Client.Search.Query.Query): !SP.JsonObjectResult} */
Microsoft.SharePoint.Client.Search.Query.SearchExecutor.prototype.executeQuery;
 /** @type {function(!Array<string>, !Array<!Microsoft.SharePoint.Client.Search.Query.Query>, boolean): !SP.JsonObjectResult} */
Microsoft.SharePoint.Client.Search.Query.SearchExecutor.prototype.executeQueries;
 /** @type {function(string, string, number, string, number, string, string, string, string): void} */
Microsoft.SharePoint.Client.Search.Query.SearchExecutor.prototype.recordPageClick;
 /** @type {function(!SP.Web, !SP.Guid): !SP.JsonObjectResult} */
Microsoft.SharePoint.Client.Search.Query.SearchExecutor.prototype.exportPopularQueries;

/**
 * @constructor
 * @struct
 * @param {!SP.ClientContext} context
 */
Microsoft.SharePoint.Client.Search.Query.StringCollection = function(context) {};
 /** @type {function(number): string} */
Microsoft.SharePoint.Client.Search.Query.StringCollection.prototype.itemAt;
 /** @type {function(number): string} */
Microsoft.SharePoint.Client.Search.Query.StringCollection.prototype.get_item;
 /** @type {function(): !StringConstructor} */
Microsoft.SharePoint.Client.Search.Query.StringCollection.prototype.get_childItemType;
 /** @type {function(string): void} */
Microsoft.SharePoint.Client.Search.Query.StringCollection.prototype.add;
 /** @type {function(): void} */
Microsoft.SharePoint.Client.Search.Query.StringCollection.prototype.clear;
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
Microsoft.SharePoint.Client.Search.Query.QueryPersonalizationData = function() {};
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
Microsoft.SharePoint.Client.Search.Query.QuerySuggestionResults = function() {};
 /** @type {function(): !Array<string>} */
Microsoft.SharePoint.Client.Search.Query.QuerySuggestionResults.prototype.get_peopleNames;
 /** @type {function(!Array<string>): void} */
Microsoft.SharePoint.Client.Search.Query.QuerySuggestionResults.prototype.set_peopleNames;
 /** @type {function(): !Array<!Microsoft.SharePoint.Client.Search.Query.PersonalResultSuggestion>} */
Microsoft.SharePoint.Client.Search.Query.QuerySuggestionResults.prototype.get_personalResults;
 /** @type {function(!Array<!Microsoft.SharePoint.Client.Search.Query.PersonalResultSuggestion>): void} */
Microsoft.SharePoint.Client.Search.Query.QuerySuggestionResults.prototype.set_personalResults;
 /** @type {function(): !Array<!Microsoft.SharePoint.Client.Search.Query.QuerySuggestionQuery>} */
Microsoft.SharePoint.Client.Search.Query.QuerySuggestionResults.prototype.get_queries;
 /** @type {function(!Array<!Microsoft.SharePoint.Client.Search.Query.QuerySuggestionQuery>): void} */
Microsoft.SharePoint.Client.Search.Query.QuerySuggestionResults.prototype.set_queries;
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
Microsoft.SharePoint.Client.Search.Query.PersonalResultSuggestion = function() {};
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.Query.PersonalResultSuggestion.prototype.get_highlightedTitle;
 /** @type {function(string): void} */
Microsoft.SharePoint.Client.Search.Query.PersonalResultSuggestion.prototype.set_highlightedTitle;
 /** @type {function(): boolean} */
Microsoft.SharePoint.Client.Search.Query.PersonalResultSuggestion.prototype.get_isBestBet;
 /** @type {function(boolean): void} */
Microsoft.SharePoint.Client.Search.Query.PersonalResultSuggestion.prototype.set_isBestBet;
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.Query.PersonalResultSuggestion.prototype.get_title;
 /** @type {function(string): void} */
Microsoft.SharePoint.Client.Search.Query.PersonalResultSuggestion.prototype.set_title;
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.Query.PersonalResultSuggestion.prototype.get_url;
 /** @type {function(string): void} */
Microsoft.SharePoint.Client.Search.Query.PersonalResultSuggestion.prototype.set_url;
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
Microsoft.SharePoint.Client.Search.Query.QuerySuggestionQuery = function() {};
 /** @type {function(): boolean} */
Microsoft.SharePoint.Client.Search.Query.QuerySuggestionQuery.prototype.get_isPersonal;
 /** @type {function(boolean): void} */
Microsoft.SharePoint.Client.Search.Query.QuerySuggestionQuery.prototype.set_isPersonal;
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.Query.QuerySuggestionQuery.prototype.get_query;
 /** @type {function(string): void} */
Microsoft.SharePoint.Client.Search.Query.QuerySuggestionQuery.prototype.set_query;
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
Microsoft.SharePoint.Client.Search.Query.KeywordQueryProperties = function() {};
 /** @type {function(string): ?} */
Microsoft.SharePoint.Client.Search.Query.KeywordQueryProperties.prototype.get_item;
 /** @type {function(string, ?): void} */
Microsoft.SharePoint.Client.Search.Query.KeywordQueryProperties.prototype.set_item;
 /** @type {function(string): !Microsoft.SharePoint.Client.Search.Query.QueryPropertyValue} */
Microsoft.SharePoint.Client.Search.Query.KeywordQueryProperties.prototype.setQueryPropertyValue;
 /** @type {function(string, !Microsoft.SharePoint.Client.Search.Query.QueryPropertyValue): void} */
Microsoft.SharePoint.Client.Search.Query.KeywordQueryProperties.prototype.getQueryPropertyValue;

/** @const */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyValueType = {};
/** @const {number} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyValueType.none;
/** @const {number} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyValueType.stringType;
/** @const {number} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyValueType.int32TYpe;
/** @const {number} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyValueType.booleanType;
/** @const {number} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyValueType.stringArrayType;
/** @const {number} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyValueType.unSupportedType;
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyValue = function() {};
 /** @type {function(): boolean} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyValue.prototype.get_boolVal;
 /** @type {function(boolean): boolean} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyValue.prototype.set_boolVal;
 /** @type {function(): number} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyValue.prototype.get_intVal;
 /** @type {function(number): number} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyValue.prototype.set_intVal;
 /** @type {function(): number} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyValue.prototype.get_queryPropertyValueTypeIndex;
 /** @type {function(number): void} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyValue.prototype.set_queryPropertyValueTypeIndex;
 /** @type {function(): !Array<string>} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyValue.prototype.get_strArray;
 /** @type {function(!Array<string>): !Array<string>} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyValue.prototype.set_strArray;
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyValue.prototype.get_strVal;
 /** @type {function(string): string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyValue.prototype.set_strVal;
/**
 * @constructor
 * @struct
 */
Microsoft.SharePoint.Client.Search.Query.QueryUtility = function() {};
 /** @type {function(string, ?): !Microsoft.SharePoint.Client.Search.Query.QueryPropertyValue} */
Microsoft.SharePoint.Client.Search.Query.QueryUtility.create;
 /** @type {function(!Microsoft.SharePoint.Client.Search.Query.QueryPropertyValue): Microsoft.SharePoint.Client.Search.Query.QueryPropertyValueType} */
Microsoft.SharePoint.Client.Search.Query.QueryUtility.getQueryPropertyValueType;
 /** @type {function(!Microsoft.SharePoint.Client.Search.Query.QueryPropertyValue): ?} */
Microsoft.SharePoint.Client.Search.Query.QueryUtility.queryPropertyValueToObject;
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
Microsoft.SharePoint.Client.Search.Query.ReorderingRuleCollection = function() {};
 /** @type {function(number): !Microsoft.SharePoint.Client.Search.Query.ReorderingRule} */
Microsoft.SharePoint.Client.Search.Query.ReorderingRuleCollection.prototype.itemAt;
 /** @type {function(number): !Microsoft.SharePoint.Client.Search.Query.ReorderingRule} */
Microsoft.SharePoint.Client.Search.Query.ReorderingRuleCollection.prototype.get_item;
 /** @type {function(): ?} */
Microsoft.SharePoint.Client.Search.Query.ReorderingRuleCollection.prototype.get_childItemType;
 /** @type {function(!Microsoft.SharePoint.Client.Search.Query.ReorderingRule): void} */
Microsoft.SharePoint.Client.Search.Query.ReorderingRuleCollection.prototype.add;
 /** @type {function(): void} */
Microsoft.SharePoint.Client.Search.Query.ReorderingRuleCollection.prototype.clear;

/** @const */
Microsoft.SharePoint.Client.Search.Query.ReorderingRuleMatchType = {};
/** @const {number} */
Microsoft.SharePoint.Client.Search.Query.ReorderingRuleMatchType.resultContainsKeyword;
/** @const {number} */
Microsoft.SharePoint.Client.Search.Query.ReorderingRuleMatchType.titleContainsKeyword;
/** @const {number} */
Microsoft.SharePoint.Client.Search.Query.ReorderingRuleMatchType.titleMatchesKeyword;
/** @const {number} */
Microsoft.SharePoint.Client.Search.Query.ReorderingRuleMatchType.urlStartsWith;
/** @const {number} */
Microsoft.SharePoint.Client.Search.Query.ReorderingRuleMatchType.urlExactlyMatches;
/** @const {number} */
Microsoft.SharePoint.Client.Search.Query.ReorderingRuleMatchType.contentTypeIs;
/** @const {number} */
Microsoft.SharePoint.Client.Search.Query.ReorderingRuleMatchType.fileExtensionMatches;
/** @const {number} */
Microsoft.SharePoint.Client.Search.Query.ReorderingRuleMatchType.resultHasTag;
/** @const {number} */
Microsoft.SharePoint.Client.Search.Query.ReorderingRuleMatchType.manualCondition;
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
Microsoft.SharePoint.Client.Search.Query.ReorderingRule = function() {};
 /** @type {function(): number} */
Microsoft.SharePoint.Client.Search.Query.ReorderingRule.prototype.get_boost;
 /** @type {function(number): void} */
Microsoft.SharePoint.Client.Search.Query.ReorderingRule.prototype.set_boost;
 /** @type {function(): Microsoft.SharePoint.Client.Search.Query.ReorderingRuleMatchType} */
Microsoft.SharePoint.Client.Search.Query.ReorderingRule.prototype.get_matchType;
 /** @type {function(Microsoft.SharePoint.Client.Search.Query.ReorderingRuleMatchType): void} */
Microsoft.SharePoint.Client.Search.Query.ReorderingRule.prototype.set_matchType;
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.Query.ReorderingRule.prototype.get_matchValue;
 /** @type {function(string): void} */
Microsoft.SharePoint.Client.Search.Query.ReorderingRule.prototype.set_matchValue;
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
Microsoft.SharePoint.Client.Search.Query.SortCollection = function() {};
 /** @type {function(number): !Microsoft.SharePoint.Client.Search.Query.Sort} */
Microsoft.SharePoint.Client.Search.Query.SortCollection.prototype.itemAt;
 /** @type {function(number): !Microsoft.SharePoint.Client.Search.Query.Sort} */
Microsoft.SharePoint.Client.Search.Query.SortCollection.prototype.get_item;
 /** @type {function(): ?} */
Microsoft.SharePoint.Client.Search.Query.SortCollection.prototype.get_childItemType;
 /** @type {function(string, Microsoft.SharePoint.Client.Search.Query.SortDirection): void} */
Microsoft.SharePoint.Client.Search.Query.SortCollection.prototype.add;
 /** @type {function(): void} */
Microsoft.SharePoint.Client.Search.Query.SortCollection.prototype.clear;

/** @const */
Microsoft.SharePoint.Client.Search.Query.SortDirection = {};
/** @const {number} */
Microsoft.SharePoint.Client.Search.Query.SortDirection.ascending;
/** @const {number} */
Microsoft.SharePoint.Client.Search.Query.SortDirection.descending;
/** @const {number} */
Microsoft.SharePoint.Client.Search.Query.SortDirection.fqlFormula;
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
Microsoft.SharePoint.Client.Search.Query.Sort = function() {};
 /** @type {function(): Microsoft.SharePoint.Client.Search.Query.SortDirection} */
Microsoft.SharePoint.Client.Search.Query.Sort.prototype.get_direction;
 /** @type {function(Microsoft.SharePoint.Client.Search.Query.SortDirection): void} */
Microsoft.SharePoint.Client.Search.Query.Sort.prototype.set_direction;
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.Query.Sort.prototype.get_property;
 /** @type {function(string): void} */
Microsoft.SharePoint.Client.Search.Query.Sort.prototype.set_property;
/**
 * @extends {SP.ClientValueObjectCollection}
 * @constructor
 * @struct
 */
Microsoft.SharePoint.Client.Search.Query.ResultTableCollection = function() {};
 /** @type {function(number): !Microsoft.SharePoint.Client.Search.Query.ResultTable} */
Microsoft.SharePoint.Client.Search.Query.ResultTableCollection.prototype.get_item;
 /** @type {function(): number} */
Microsoft.SharePoint.Client.Search.Query.ResultTableCollection.prototype.get_elapsedTime;
 /** @type {function(number): void} */
Microsoft.SharePoint.Client.Search.Query.ResultTableCollection.prototype.set_elapsedTime;
 /** @type {function(): !Object<string,?>} */
Microsoft.SharePoint.Client.Search.Query.ResultTableCollection.prototype.get_properties;
 /** @type {function(): !Object<string,!Microsoft.SharePoint.Client.Search.WebControls.ControlMessage>} */
Microsoft.SharePoint.Client.Search.Query.ResultTableCollection.prototype.get_queryErrors;
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.Query.ResultTableCollection.prototype.get_queryId;
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.Query.ResultTableCollection.prototype.get_spellingSuggestion;
 /** @type {function(): !Array<!SP.Guid>} */
Microsoft.SharePoint.Client.Search.Query.ResultTableCollection.prototype.get_triggeredRules;
 /** @type {function(?): void} */
Microsoft.SharePoint.Client.Search.Query.ResultTableCollection.prototype.initPropertiesFromJson;
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
Microsoft.SharePoint.Client.Search.Query.ResultTable = function() {};
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.Query.ResultTable.prototype.get_groupTemplateId;
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.Query.ResultTable.prototype.get_itemTemplateId;
 /** @type {function(): !Object<string,?>} */
Microsoft.SharePoint.Client.Search.Query.ResultTable.prototype.get_properties;
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.Query.ResultTable.prototype.get_queryId;
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.Query.ResultTable.prototype.get_queryRuleId;
 /** @type {function(): !Array<!Object<string,?>>} */
Microsoft.SharePoint.Client.Search.Query.ResultTable.prototype.get_resultRows;
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.Query.ResultTable.prototype.get_resultTitle;
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.Query.ResultTable.prototype.get_resultTitleUrl;
 /** @type {function(): number} */
Microsoft.SharePoint.Client.Search.Query.ResultTable.prototype.get_rowCount;
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.Query.ResultTable.prototype.get_tableType;
 /** @type {function(): number} */
Microsoft.SharePoint.Client.Search.Query.ResultTable.prototype.get_totalRows;
 /** @type {function(): number} */
Microsoft.SharePoint.Client.Search.Query.ResultTable.prototype.get_totalRowsIncludingDuplicates;
 /** @type {function(?): void} */
Microsoft.SharePoint.Client.Search.Query.ResultTable.prototype.initPropertiesFromJson;

/**
 * @constructor
 * @struct
 * @param {!SP.ClientContext} context
 */
Microsoft.SharePoint.Client.Search.Query.RankingLabeling = function(context) {};
 /** @type {function(string): !SP.JsonObjectResult} */
Microsoft.SharePoint.Client.Search.Query.RankingLabeling.prototype.getJudgementsForQuery;
 /** @type {function(string, string, number): void} */
Microsoft.SharePoint.Client.Search.Query.RankingLabeling.prototype.addJudgment;
 /** @type {function(string): !SP.JsonObjectResult} */
Microsoft.SharePoint.Client.Search.Query.RankingLabeling.prototype.normalizeResultUrl;
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
Microsoft.SharePoint.Client.Search.Query.PopularQuery = function() {};
 /** @type {function(): number} */
Microsoft.SharePoint.Client.Search.Query.PopularQuery.prototype.get_clickCount;
 /** @type {function(number): void} */
Microsoft.SharePoint.Client.Search.Query.PopularQuery.prototype.set_clickCount;
 /** @type {function(): number} */
Microsoft.SharePoint.Client.Search.Query.PopularQuery.prototype.get_LCID;
 /** @type {function(number): void} */
Microsoft.SharePoint.Client.Search.Query.PopularQuery.prototype.set_LCID;
 /** @type {function(): number} */
Microsoft.SharePoint.Client.Search.Query.PopularQuery.prototype.get_queryCount;
 /** @type {function(number): void} */
Microsoft.SharePoint.Client.Search.Query.PopularQuery.prototype.set_queryCount;
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.Query.PopularQuery.prototype.get_queryText;
 /** @type {function(string): void} */
Microsoft.SharePoint.Client.Search.Query.PopularQuery.prototype.set_queryText;
/**
 * @constructor
 * @struct
 */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames = function() {};
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.blockDedupeMode;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.bypassResultTypes;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.clientType;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.culture;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.desiredSnippetLength;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.enableInterleaving;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.enableNicknames;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.enableOrderingHitHighlightedProperty;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.enablePhonetic;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.enableQueryRules;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.enableStemming;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.generateBlockRankLog;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.hitHighlightedMultivaluePropertyLimit;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.ignoreSafeQueryPropertiesTemplateUrl;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.impressionID;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.maxSnippetLength;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.processBestBets;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.processPersonalFavorites;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.queryTag;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.queryTemplate;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.queryTemplateParameters;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.queryText;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.rankingModelId;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.resultsUrl;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.rowLimit;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.rowsPerPage;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.safeQueryPropertiesTemplateUrl;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.showPeopleNameSuggestions;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.sourceId;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.startRow;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.summaryLength;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.timeout;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.totalRowsExactMinimum;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.trimDuplicates;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryPropertyNames.uiLanguage;
/**
 * @constructor
 * @struct
 */
Microsoft.SharePoint.Client.Search.Query.QueryObjectPropertyNames = function() {};
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryObjectPropertyNames.hitHighlightedProperties;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.QueryObjectPropertyNames.personalizationData;
/**
 * @constructor
 * @struct
 */
Microsoft.SharePoint.Client.Search.Query.KeywordQueryPropertyNames = function() {};
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.KeywordQueryPropertyNames.collapseSpecification;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.KeywordQueryPropertyNames.enableSorting;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.KeywordQueryPropertyNames.hiddenConstraints;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.KeywordQueryPropertyNames.refiners;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.KeywordQueryPropertyNames.trimDuplicatesIncludeId;
/**
 * @constructor
 * @struct
 */
Microsoft.SharePoint.Client.Search.Query.KeywordQueryObjectPropertyNames = function() {};
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.KeywordQueryObjectPropertyNames.properties;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.KeywordQueryObjectPropertyNames.refinementFilters;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.KeywordQueryObjectPropertyNames.reorderingRules;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.KeywordQueryObjectPropertyNames.selectProperties;
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Query.KeywordQueryObjectPropertyNames.sortList;
/** @const */
Microsoft.SharePoint.Client.Search.WebControls = {};
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
Microsoft.SharePoint.Client.Search.WebControls.ControlMessage = function() {};
 /** @type {function(): number} */
Microsoft.SharePoint.Client.Search.WebControls.ControlMessage.prototype.get_code;
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.WebControls.ControlMessage.prototype.get_correlationID;
 /** @type {function(): boolean} */
Microsoft.SharePoint.Client.Search.WebControls.ControlMessage.prototype.get_encodeDetails;
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.WebControls.ControlMessage.prototype.get_header;
 /** @type {function(): Microsoft.SharePoint.Client.Search.WebControls.MessageLevel} */
Microsoft.SharePoint.Client.Search.WebControls.ControlMessage.prototype.get_level;
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.WebControls.ControlMessage.prototype.get_messageDetails;
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.WebControls.ControlMessage.prototype.get_messageDetailsForViewers;
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.WebControls.ControlMessage.prototype.get_serverTypeId;
 /** @type {function(): boolean} */
Microsoft.SharePoint.Client.Search.WebControls.ControlMessage.prototype.get_showForViewerUsers;
 /** @type {function(): boolean} */
Microsoft.SharePoint.Client.Search.WebControls.ControlMessage.prototype.get_showInEditModeOnly;
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.WebControls.ControlMessage.prototype.get_stackTrace;
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.WebControls.ControlMessage.prototype.get_type;

/** @const */
Microsoft.SharePoint.Client.Search.WebControls.MessageLevel = {};
/** @const {number} */
Microsoft.SharePoint.Client.Search.WebControls.MessageLevel.information;
/** @const {number} */
Microsoft.SharePoint.Client.Search.WebControls.MessageLevel.warning;
/** @const {number} */
Microsoft.SharePoint.Client.Search.WebControls.MessageLevel.error;
/** @const */
Microsoft.SharePoint.Client.Search.Administration = {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientContext} context
 * @param {!SP.Site} site
 */
Microsoft.SharePoint.Client.Search.Administration.DocumentCrawlLog = function(context, site) {};
 /** @type {function(boolean, {High: number, Low: number}, string, boolean, number, number, number, !Date, !Date): !SP.JsonObjectResult} */
Microsoft.SharePoint.Client.Search.Administration.DocumentCrawlLog.prototype.getCrawledUrls;

/**
 * @constructor
 * @struct
 * @param {!SP.ClientContext} context
 * @param {Microsoft.SharePoint.Client.Search.Administration.SearchObjectLevel} lowestCurrentLevelToUse
 */
Microsoft.SharePoint.Client.Search.Administration.SearchObjectOwner = function(context, lowestCurrentLevelToUse) {};

/** @const */
Microsoft.SharePoint.Client.Search.Administration.SearchObjectLevel = {};
/** @const {number} */
Microsoft.SharePoint.Client.Search.Administration.SearchObjectLevel.spWeb;
/** @const {number} */
Microsoft.SharePoint.Client.Search.Administration.SearchObjectLevel.spSite;
/** @const {number} */
Microsoft.SharePoint.Client.Search.Administration.SearchObjectLevel.spSiteSubscription;
/** @const {number} */
Microsoft.SharePoint.Client.Search.Administration.SearchObjectLevel.ssa;
/** @const */
Microsoft.SharePoint.Client.Search.Portability = {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientContext} context
 */
Microsoft.SharePoint.Client.Search.Portability.SearchConfigurationPortability = function(context) {};
 /** @type {function(): string} */
Microsoft.SharePoint.Client.Search.Portability.SearchConfigurationPortability.prototype.get_importWarnings;
 /** @type {function(!Microsoft.SharePoint.Client.Search.Administration.SearchObjectOwner): !SP.JsonObjectResult} */
Microsoft.SharePoint.Client.Search.Portability.SearchConfigurationPortability.prototype.exportSearchConfiguration;
 /** @type {function(!Microsoft.SharePoint.Client.Search.Administration.SearchObjectOwner, string): void} */
Microsoft.SharePoint.Client.Search.Portability.SearchConfigurationPortability.prototype.importSearchConfiguration;
 /** @type {function(!Microsoft.SharePoint.Client.Search.Administration.SearchObjectOwner, string): void} */
Microsoft.SharePoint.Client.Search.Portability.SearchConfigurationPortability.prototype.deleteSearchConfiguration;
/**
 * @constructor
 * @struct
 */
Microsoft.SharePoint.Client.Search.Portability.SearchConfigurationPortabilityPropertyNames = function() {};
 /** @type {string} */
Microsoft.SharePoint.Client.Search.Portability.SearchConfigurationPortabilityPropertyNames.importWarnings;
/** @const */
Microsoft.SharePoint.Client.Search.Analytics = {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
Microsoft.SharePoint.Client.Search.Analytics.AnalyticsItemData = function() {};
 /** @type {function(): !Date} */
Microsoft.SharePoint.Client.Search.Analytics.AnalyticsItemData.prototype.get_lastProcessingTime;
 /** @type {function(): number} */
Microsoft.SharePoint.Client.Search.Analytics.AnalyticsItemData.prototype.get_totalHits;
 /** @type {function(): number} */
Microsoft.SharePoint.Client.Search.Analytics.AnalyticsItemData.prototype.get_totalUniqueUsers;
 /** @type {function(!Date): number} */
Microsoft.SharePoint.Client.Search.Analytics.AnalyticsItemData.prototype.getHitCountForDay;
 /** @type {function(!Date): number} */
Microsoft.SharePoint.Client.Search.Analytics.AnalyticsItemData.prototype.getUniqueUsersCountForDay;
 /** @type {function(!Date): number} */
Microsoft.SharePoint.Client.Search.Analytics.AnalyticsItemData.prototype.getHitCountForMonth;
 /** @type {function(!Date): number} */
Microsoft.SharePoint.Client.Search.Analytics.AnalyticsItemData.prototype.getUniqueUsersCountForMonth;
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
Microsoft.SharePoint.Client.Search.Analytics.UsageAnalytics = function() {};
 /** @type {function(number, !SP.ListItem<?>): !Microsoft.SharePoint.Client.Search.Analytics.AnalyticsItemData} */
Microsoft.SharePoint.Client.Search.Analytics.UsageAnalytics.prototype.getAnalyticsItemData;
 /** @type {function(!SP.Guid, !SP.ListItem<?>): !Microsoft.SharePoint.Client.Search.Analytics.AnalyticsItemData} */
Microsoft.SharePoint.Client.Search.Analytics.UsageAnalytics.prototype.getAnalyticsItemDataForApplicationEventType;
 /** @type {function(number): void} */
Microsoft.SharePoint.Client.Search.Analytics.UsageAnalytics.prototype.deleteStandardEventUsageData;
 /** @type {function(!SP.Guid): void} */
Microsoft.SharePoint.Client.Search.Analytics.UsageAnalytics.prototype.deleteCustomEventUsageData;
/** @const */
SP.BusinessData = {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.BusinessData.AppBdcCatalog = function() {};

/**
 * @param {string} namespace
 * @param {string} name
 * @return {!SP.BusinessData.Entity}
 */
SP.BusinessData.AppBdcCatalog.prototype.getEntity = function(namespace, name) {};

/**
 * @param {string} lobSystemName
 * @param {string} propertyName
 * @return {!SP.StringResult}
 */
SP.BusinessData.AppBdcCatalog.prototype.getLobSystemProperty = function(lobSystemName, propertyName) {};

/**
 * @param {string} lobSystemName
 * @param {string} propertyName
 * @param {string} propertyValue
 * @return {void}
 */
SP.BusinessData.AppBdcCatalog.prototype.setLobSystemProperty = function(lobSystemName, propertyName, propertyValue) {};

/**
 * @param {string} lobSystemName
 * @param {string} lobSystemInstanceName
 * @param {string} propertyName
 * @return {!SP.StringResult}
 */
SP.BusinessData.AppBdcCatalog.prototype.getLobSystemInstanceProperty = function(lobSystemName, lobSystemInstanceName, propertyName) {};

/**
 * @param {string} lobSystemName
 * @param {string} lobSystemInstanceName
 * @param {string} propertyName
 * @param {string} propertyValue
 * @return {void}
 */
SP.BusinessData.AppBdcCatalog.prototype.setLobSystemInstanceProperty = function(lobSystemName, lobSystemInstanceName, propertyName, propertyValue) {};

/**
 * @param {string} lobSystemName
 * @param {string} lobSystemInstanceName
 * @return {!SP.StringResult}
 */
SP.BusinessData.AppBdcCatalog.prototype.getConnectionId = function(lobSystemName, lobSystemInstanceName) {};

/**
 * @param {string} lobSystemName
 * @param {string} lobSystemInstanceName
 * @param {string} connectionId
 * @return {void}
 */
SP.BusinessData.AppBdcCatalog.prototype.setConnectionId = function(lobSystemName, lobSystemInstanceName, connectionId) {};

/**
 * @return {!Array<string>}
 */
SP.BusinessData.AppBdcCatalog.prototype.getPermissibleConnections = function() {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.BusinessData.Entity = function() {};

/**
 * @return {number}
 */
SP.BusinessData.Entity.prototype.get_estimatedInstanceCount = function() {};

/**
 * @return {string}
 */
SP.BusinessData.Entity.prototype.get_name = function() {};

/**
 * @return {string}
 */
SP.BusinessData.Entity.prototype.get_namespace = function() {};

/**
 * @return {!SP.BusinessData.Collections.EntityIdentifierCollection}
 */
SP.BusinessData.Entity.prototype.getIdentifiers = function() {};

/**
 * @return {!SP.IntResult}
 */
SP.BusinessData.Entity.prototype.getIdentifierCount = function() {};

/**
 * @return {!SP.BusinessData.LobSystem}
 */
SP.BusinessData.Entity.prototype.getLobSystem = function() {};

/**
 * @param {string} methodInstanceName
 * @return {!SP.BusinessData.EntityView}
 */
SP.BusinessData.Entity.prototype.getCreatorView = function(methodInstanceName) {};

/**
 * @param {string} updaterName
 * @return {!SP.BusinessData.EntityView}
 */
SP.BusinessData.Entity.prototype.getUpdaterView = function(updaterName) {};

/**
 * @param {string} methodInstanceName
 * @return {!SP.BusinessData.EntityView}
 */
SP.BusinessData.Entity.prototype.getFinderView = function(methodInstanceName) {};

/**
 * @param {string} specificFinderName
 * @return {!SP.BusinessData.EntityView}
 */
SP.BusinessData.Entity.prototype.getSpecificFinderView = function(specificFinderName) {};

/**
 * @return {!SP.BusinessData.EntityView}
 */
SP.BusinessData.Entity.prototype.getDefaultSpecificFinderView = function() {};

/**
 * @param {!SP.BusinessData.Runtime.EntityIdentity} identity
 * @param {!SP.BusinessData.LobSystemInstance} lobSystemInstance
 * @return {!SP.BusinessData.Runtime.EntityInstance}
 */
SP.BusinessData.Entity.prototype.findSpecificDefault = function(identity, lobSystemInstance) {};

/**
 * @param {!SP.BusinessData.Runtime.EntityIdentity} identity
 * @param {string} specificFinderName
 * @param {!SP.BusinessData.LobSystemInstance} lobSystemInstance
 * @return {!SP.BusinessData.Runtime.EntityInstance}
 */
SP.BusinessData.Entity.prototype.findSpecific = function(identity, specificFinderName, lobSystemInstance) {};

/**
 * @param {string} bdcIdentity
 * @param {!SP.BusinessData.LobSystemInstance} lobSystemInstance
 * @return {!SP.BusinessData.Runtime.EntityInstance}
 */
SP.BusinessData.Entity.prototype.findSpecificDefaultByBdcId = function(bdcIdentity, lobSystemInstance) {};

/**
 * @param {string} bdcIdentity
 * @param {string} specificFinderName
 * @param {!SP.BusinessData.LobSystemInstance} lobSystemInstance
 * @return {!SP.BusinessData.Runtime.EntityInstance}
 */
SP.BusinessData.Entity.prototype.findSpecificByBdcId = function(bdcIdentity, specificFinderName, lobSystemInstance) {};

/**
 * @param {!SP.BusinessData.Collections.FilterCollection} filterList
 * @param {string} nameOfFinder
 * @param {!SP.BusinessData.LobSystemInstance} lobSystemInstance
 * @return {!SP.BusinessData.Collections.EntityInstanceCollection}
 */
SP.BusinessData.Entity.prototype.findFiltered = function(filterList, nameOfFinder, lobSystemInstance) {};

/**
 * @param {!SP.BusinessData.Runtime.EntityInstance} entityInstance
 * @param {string} associationName
 * @param {!SP.BusinessData.Collections.FilterCollection} filterList
 * @param {!SP.BusinessData.LobSystemInstance} lobSystemInstance
 * @return {!SP.BusinessData.Collections.EntityInstanceCollection}
 */
SP.BusinessData.Entity.prototype.findAssociated = function(entityInstance, associationName, filterList, lobSystemInstance) {};

/**
 * @param {string} methodInstanceName
 * @return {!SP.BusinessData.Collections.FilterCollection}
 */
SP.BusinessData.Entity.prototype.getFilters = function(methodInstanceName) {};

/**
 * @param {string} methodInstanceName
 * @param {!SP.BusinessData.LobSystemInstance} lobSystemInstance
 * @param {!Array<?>} inputParams
 * @return {!SP.BusinessData.MethodExecutionResult}
 */
SP.BusinessData.Entity.prototype.execute = function(methodInstanceName, lobSystemInstance, inputParams) {};

/**
 * @param {string} associationName
 * @return {!SP.BusinessData.EntityView}
 */
SP.BusinessData.Entity.prototype.getAssociationView = function(associationName) {};

/**
 * @param {!SP.BusinessData.Runtime.EntityFieldValueDictionary} fieldValues
 * @param {!SP.BusinessData.LobSystemInstance} lobSystemInstance
 * @return {!SP.BusinessData.Runtime.EntityIdentity}
 */
SP.BusinessData.Entity.prototype.create = function(fieldValues, lobSystemInstance) {};

/**
 * @param {SP.BusinessData.Runtime.EntityEventType} eventType
 * @param {!SP.BusinessData.Runtime.NotificationCallback} notificationCallback
 * @param {string} onBehalfOfUser
 * @param {string} subscriberName
 * @param {!SP.BusinessData.LobSystemInstance} lobSystemInstance
 * @return {!SP.BusinessData.Runtime.Subscription}
 */
SP.BusinessData.Entity.prototype.subscribe = function(eventType, notificationCallback, onBehalfOfUser, subscriberName, lobSystemInstance) {};

/**
 * @param {!SP.BusinessData.Runtime.Subscription} subscription
 * @param {string} onBehalfOfUser
 * @param {string} unsubscriberName
 * @param {!SP.BusinessData.LobSystemInstance} lobSystemInstance
 * @return {void}
 */
SP.BusinessData.Entity.prototype.unsubscribe = function(subscription, onBehalfOfUser, unsubscriberName, lobSystemInstance) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.BusinessData.EntityField = function() {};

/**
 * @return {boolean}
 */
SP.BusinessData.EntityField.prototype.get_containsLocalizedDisplayName = function() {};

/**
 * @return {string}
 */
SP.BusinessData.EntityField.prototype.get_defaultDisplayName = function() {};

/**
 * @return {string}
 */
SP.BusinessData.EntityField.prototype.get_localizedDisplayName = function() {};

/**
 * @return {string}
 */
SP.BusinessData.EntityField.prototype.get_name = function() {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.BusinessData.EntityIdentifier = function() {};

/**
 * @return {string}
 */
SP.BusinessData.EntityIdentifier.prototype.get_identifierType = function() {};

/**
 * @return {string}
 */
SP.BusinessData.EntityIdentifier.prototype.get_name = function() {};

/**
 * @return {!SP.StringResult}
 */
SP.BusinessData.EntityIdentifier.prototype.getDefaultDisplayName = function() {};

/**
 * @return {!SP.BooleanResult}
 */
SP.BusinessData.EntityIdentifier.prototype.containsLocalizedDisplayName = function() {};

/**
 * @return {!SP.StringResult}
 */
SP.BusinessData.EntityIdentifier.prototype.getLocalizedDisplayName = function() {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.BusinessData.EntityView = function() {};

/**
 * @return {!SP.BusinessData.Collections.EntityFieldCollection}
 */
SP.BusinessData.EntityView.prototype.get_fields = function() {};

/**
 * @return {string}
 */
SP.BusinessData.EntityView.prototype.get_name = function() {};

/**
 * @return {string}
 */
SP.BusinessData.EntityView.prototype.get_relatedSpecificFinderName = function() {};

/**
 * @return {!SP.BusinessData.Runtime.EntityFieldValueDictionary}
 */
SP.BusinessData.EntityView.prototype.getDefaultValues = function() {};

/**
 * @return {!SP.StringResult}
 */
SP.BusinessData.EntityView.prototype.getXmlSchema = function() {};

/**
 * @param {string} fieldDotNotation
 * @return {!SP.BusinessData.TypeDescriptor}
 */
SP.BusinessData.EntityView.prototype.getTypeDescriptor = function(fieldDotNotation) {};

/**
 * @param {string} fieldDotNotation
 * @return {!SP.StringResult}
 */
SP.BusinessData.EntityView.prototype.getType = function(fieldDotNotation) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.BusinessData.Filter = function() {};

/**
 * @return {string}
 */
SP.BusinessData.Filter.prototype.get_defaultDisplayName = function() {};

/**
 * @return {string}
 */
SP.BusinessData.Filter.prototype.get_filterField = function() {};

/**
 * @return {string}
 */
SP.BusinessData.Filter.prototype.get_filterType = function() {};

/**
 * @return {string}
 */
SP.BusinessData.Filter.prototype.get_localizedDisplayName = function() {};

/**
 * @return {string}
 */
SP.BusinessData.Filter.prototype.get_name = function() {};

/**
 * @return {number}
 */
SP.BusinessData.Filter.prototype.get_valueCount = function() {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.BusinessData.LobSystem = function() {};

/**
 * @return {string}
 */
SP.BusinessData.LobSystem.prototype.get_name = function() {};

/**
 * @return {!SP.BusinessData.Collections.LobSystemInstanceCollection}
 */
SP.BusinessData.LobSystem.prototype.getLobSystemInstances = function() {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.BusinessData.LobSystemInstance = function() {};

/**
 * @return {string}
 */
SP.BusinessData.LobSystemInstance.prototype.get_name = function() {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.BusinessData.MethodExecutionResult = function() {};

/**
 * @return {!SP.BusinessData.ReturnParameterCollection}
 */
SP.BusinessData.MethodExecutionResult.prototype.get_returnParameterCollection = function() {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.BusinessData.ReturnParameterCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.BusinessData.Runtime.EntityFieldValueDictionary}
 */
SP.BusinessData.ReturnParameterCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.BusinessData.Runtime.EntityFieldValueDictionary}
 */
SP.BusinessData.ReturnParameterCollection.prototype.get_item = function(index) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.BusinessData.TypeDescriptor = function() {};

/**
 * @return {boolean}
 */
SP.BusinessData.TypeDescriptor.prototype.get_containsReadOnly = function() {};

/**
 * @return {boolean}
 */
SP.BusinessData.TypeDescriptor.prototype.get_isCollection = function() {};

/**
 * @return {boolean}
 */
SP.BusinessData.TypeDescriptor.prototype.get_isReadOnly = function() {};

/**
 * @return {string}
 */
SP.BusinessData.TypeDescriptor.prototype.get_name = function() {};

/**
 * @return {string}
 */
SP.BusinessData.TypeDescriptor.prototype.get_typeName = function() {};

/**
 * @return {!SP.BooleanResult}
 */
SP.BusinessData.TypeDescriptor.prototype.containsLocalizedDisplayName = function() {};

/**
 * @return {!SP.StringResult}
 */
SP.BusinessData.TypeDescriptor.prototype.getLocalizedDisplayName = function() {};

/**
 * @return {!SP.StringResult}
 */
SP.BusinessData.TypeDescriptor.prototype.getDefaultDisplayName = function() {};

/**
 * @return {!SP.BooleanResult}
 */
SP.BusinessData.TypeDescriptor.prototype.isRoot = function() {};

/**
 * @return {!SP.BooleanResult}
 */
SP.BusinessData.TypeDescriptor.prototype.isLeaf = function() {};

/**
 * @return {!SP.BusinessData.Collections.TypeDescriptorCollection}
 */
SP.BusinessData.TypeDescriptor.prototype.getChildTypeDescriptors = function() {};

/**
 * @return {!SP.BusinessData.TypeDescriptor}
 */
SP.BusinessData.TypeDescriptor.prototype.getParentTypeDescriptor = function() {};
/** @const */
SP.BusinessData.Collections = {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.BusinessData.Collections.EntityFieldCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.BusinessData.EntityField}
 */
SP.BusinessData.Collections.EntityFieldCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.BusinessData.EntityField}
 */
SP.BusinessData.Collections.EntityFieldCollection.prototype.get_item = function(index) {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.BusinessData.Collections.EntityIdentifierCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.BusinessData.EntityIdentifier}
 */
SP.BusinessData.Collections.EntityIdentifierCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.BusinessData.EntityIdentifier}
 */
SP.BusinessData.Collections.EntityIdentifierCollection.prototype.get_item = function(index) {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.BusinessData.Collections.EntityInstanceCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.BusinessData.Runtime.EntityInstance}
 */
SP.BusinessData.Collections.EntityInstanceCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.BusinessData.Runtime.EntityInstance}
 */
SP.BusinessData.Collections.EntityInstanceCollection.prototype.get_item = function(index) {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.BusinessData.Collections.FilterCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.BusinessData.Filter}
 */
SP.BusinessData.Collections.FilterCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.BusinessData.Filter}
 */
SP.BusinessData.Collections.FilterCollection.prototype.get_item = function(index) {};

/**
 * @param {string} inputFilterName
 * @param {number} valueIndex
 * @param {?} value
 * @return {void}
 */
SP.BusinessData.Collections.FilterCollection.prototype.setFilterValue = function(inputFilterName, valueIndex, value) {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.BusinessData.Collections.LobSystemInstanceCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.BusinessData.LobSystemInstance}
 */
SP.BusinessData.Collections.LobSystemInstanceCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.BusinessData.LobSystemInstance}
 */
SP.BusinessData.Collections.LobSystemInstanceCollection.prototype.get_item = function(index) {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.BusinessData.Collections.TypeDescriptorCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.BusinessData.TypeDescriptor}
 */
SP.BusinessData.Collections.TypeDescriptorCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.BusinessData.TypeDescriptor}
 */
SP.BusinessData.Collections.TypeDescriptorCollection.prototype.get_item = function(index) {};
/** @const */
SP.BusinessData.Infrastructure = {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.Web} web
 */
SP.BusinessData.Infrastructure.ExternalSubscriptionStore = function(context, web) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.Web} web
 * @return {!SP.BusinessData.Infrastructure.ExternalSubscriptionStore}
 */
SP.BusinessData.Infrastructure.ExternalSubscriptionStore.newObject = function(context, web) {};

/**
 * @return {void}
 */
SP.BusinessData.Infrastructure.ExternalSubscriptionStore.prototype.indexStore = function() {};
/** @const */
SP.BusinessData.Runtime = {};

/** @const */
SP.BusinessData.Runtime.EntityEventType = {};
/** @const {number} */
SP.BusinessData.Runtime.EntityEventType.none;
/** @const {number} */
SP.BusinessData.Runtime.EntityEventType.itemAdded;
/** @const {number} */
SP.BusinessData.Runtime.EntityEventType.itemUpdated;
/** @const {number} */
SP.BusinessData.Runtime.EntityEventType.itemDeleted;
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.BusinessData.Runtime.EntityFieldValueDictionary = function() {};

/**
 * @return {?}
 */
SP.BusinessData.Runtime.EntityFieldValueDictionary.prototype.get_fieldValues = function() {};

/**
 * @param {string} fieldName
 * @return {?}
 */
SP.BusinessData.Runtime.EntityFieldValueDictionary.prototype.get_item = function(fieldName) {};

/**
 * @param {string} fieldName
 * @param {?} value
 * @return {void}
 */
SP.BusinessData.Runtime.EntityFieldValueDictionary.prototype.set_item = function(fieldName, value) {};

/**
 * @return {void}
 */
SP.BusinessData.Runtime.EntityFieldValueDictionary.prototype.refreshLoad = function() {};

/**
 * @param {string} xml
 * @return {void}
 */
SP.BusinessData.Runtime.EntityFieldValueDictionary.prototype.fromXml = function(xml) {};

/**
 * @return {!SP.StringResult}
 */
SP.BusinessData.Runtime.EntityFieldValueDictionary.prototype.toXml = function() {};

/**
 * @param {string} fieldInstanceDotNotation
 * @param {string} fieldDotNotation
 * @return {void}
 */
SP.BusinessData.Runtime.EntityFieldValueDictionary.prototype.createInstance = function(fieldInstanceDotNotation, fieldDotNotation) {};

/**
 * @param {string} fieldDotNotation
 * @param {number} size
 * @return {void}
 */
SP.BusinessData.Runtime.EntityFieldValueDictionary.prototype.createCollectionInstance = function(fieldDotNotation, size) {};

/**
 * @param {string} fieldDotNotation
 * @return {!SP.IntResult}
 */
SP.BusinessData.Runtime.EntityFieldValueDictionary.prototype.getCollectionSize = function(fieldDotNotation) {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientRuntimeContext} context
 * @param {!Array<?>} identifierValues
 */
SP.BusinessData.Runtime.EntityIdentity = function(context, identifierValues) {};

/**
 * @return {?}
 */
SP.BusinessData.Runtime.EntityIdentity.prototype.get_fieldValues = function() {};

/**
 * @param {string} fieldName
 * @return {?}
 */
SP.BusinessData.Runtime.EntityIdentity.prototype.get_item = function(fieldName) {};

/**
 * @return {number}
 */
SP.BusinessData.Runtime.EntityIdentity.prototype.get_identifierCount = function() {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!Array<?>} identifierValues
 * @return {!SP.BusinessData.Runtime.EntityIdentity}
 */
SP.BusinessData.Runtime.EntityIdentity.newObject = function(context, identifierValues) {};

/**
 * @return {void}
 */
SP.BusinessData.Runtime.EntityIdentity.prototype.refreshLoad = function() {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.BusinessData.Runtime.EntityInstance = function() {};

/**
 * @return {?}
 */
SP.BusinessData.Runtime.EntityInstance.prototype.get_fieldValues = function() {};

/**
 * @param {string} fieldName
 * @return {?}
 */
SP.BusinessData.Runtime.EntityInstance.prototype.get_item = function(fieldName) {};

/**
 * @param {string} fieldName
 * @param {?} value
 * @return {void}
 */
SP.BusinessData.Runtime.EntityInstance.prototype.set_item = function(fieldName, value) {};

/**
 * @return {void}
 */
SP.BusinessData.Runtime.EntityInstance.prototype.refreshLoad = function() {};

/**
 * @param {string} fieldInstanceDotNotation
 * @param {string} fieldDotNotation
 * @return {void}
 */
SP.BusinessData.Runtime.EntityInstance.prototype.createInstance = function(fieldInstanceDotNotation, fieldDotNotation) {};

/**
 * @param {string} fieldDotNotation
 * @param {number} size
 * @return {void}
 */
SP.BusinessData.Runtime.EntityInstance.prototype.createCollectionInstance = function(fieldDotNotation, size) {};

/**
 * @return {!SP.BusinessData.Runtime.EntityIdentity}
 */
SP.BusinessData.Runtime.EntityInstance.prototype.getIdentity = function() {};

/**
 * @return {void}
 */
SP.BusinessData.Runtime.EntityInstance.prototype.deleteObject = function() {};

/**
 * @return {void}
 */
SP.BusinessData.Runtime.EntityInstance.prototype.update = function() {};

/**
 * @param {string} xml
 * @return {void}
 */
SP.BusinessData.Runtime.EntityInstance.prototype.fromXml = function(xml) {};

/**
 * @return {!SP.StringResult}
 */
SP.BusinessData.Runtime.EntityInstance.prototype.toXml = function() {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientRuntimeContext} context
 * @param {string} notificationEndpoint
 */
SP.BusinessData.Runtime.NotificationCallback = function(context, notificationEndpoint) {};

/**
 * @return {string}
 */
SP.BusinessData.Runtime.NotificationCallback.prototype.get_notificationContext = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.BusinessData.Runtime.NotificationCallback.prototype.set_notificationContext = function(value) {};

/**
 * @return {string}
 */
SP.BusinessData.Runtime.NotificationCallback.prototype.get_notificationEndpoint = function() {};

/**
 * @return {string}
 */
SP.BusinessData.Runtime.NotificationCallback.prototype.get_notificationForwarderType = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.BusinessData.Runtime.NotificationCallback.prototype.set_notificationForwarderType = function(value) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {string} notificationEndpoint
 * @return {!SP.BusinessData.Runtime.NotificationCallback}
 */
SP.BusinessData.Runtime.NotificationCallback.newObject = function(context, notificationEndpoint) {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientRuntimeContext} context
 * @param {?} id
 * @param {string} hash
 */
SP.BusinessData.Runtime.Subscription = function(context, id, hash) {};

/**
 * @return {string}
 */
SP.BusinessData.Runtime.Subscription.prototype.get_hash = function() {};

/**
 * @return {?}
 */
SP.BusinessData.Runtime.Subscription.prototype.get_iD = function() {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {?} id
 * @param {string} hash
 * @return {!SP.BusinessData.Runtime.Subscription}
 */
SP.BusinessData.Runtime.Subscription.newObject = function(context, id, hash) {};
/** @const */
SP.Sharing = {};
/**
 * @constructor
 * @struct
 */
SP.Sharing.DocumentSharingManager = function() {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {SP.Sharing.Role} role
 * @return {!SP.RoleDefinition}
 */
SP.Sharing.DocumentSharingManager.getRoleDefinition = function(context, role) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.List<?>} list
 * @return {!SP.BooleanResult}
 */
SP.Sharing.DocumentSharingManager.isDocumentSharingEnabled = function(context, list) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {string} resourceAddress
 * @param {!Array<!SP.Sharing.UserRoleAssignment>} userRoleAssignments
 * @param {boolean} validateExistingPermissions
 * @param {boolean} additiveMode
 * @param {boolean} sendServerManagedNotification
 * @param {string} customMessage
 * @param {boolean} includeAnonymousLinksInNotification
 * @return {!Array<!SP.Sharing.UserSharingResult>}
 */
SP.Sharing.DocumentSharingManager.updateDocumentSharingInfo = function(context, resourceAddress, userRoleAssignments, validateExistingPermissions, additiveMode, sendServerManagedNotification, customMessage, includeAnonymousLinksInNotification) {};

/** @const */
SP.Sharing.Role = {};
/** @const {number} */
SP.Sharing.Role.none;
/** @const {number} */
SP.Sharing.Role.view;
/** @const {number} */
SP.Sharing.Role.edit;
/** @const {number} */
SP.Sharing.Role.owner;

/**
 * @constructor
 * @struct
 */
SP.Sharing.UserRoleAssignment = function() {};

/**
 * @return {SP.Sharing.Role}
 */
SP.Sharing.UserRoleAssignment.prototype.get_role = function() {};

/**
 * @param {SP.Sharing.Role} value
 * @return {void}
 */
SP.Sharing.UserRoleAssignment.prototype.set_role = function(value) {};

/**
 * @return {string}
 */
SP.Sharing.UserRoleAssignment.prototype.get_userId = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Sharing.UserRoleAssignment.prototype.set_userId = function(value) {};

/**
 * @return {string}
 */
SP.Sharing.UserRoleAssignment.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.Sharing.UserRoleAssignment.prototype.writeToXml = function(writer, serializationContext) {};

/**
 * @constructor
 * @struct
 */
SP.Sharing.UserSharingResult = function() {};

/**
 * @return {!Array<SP.Sharing.Role>}
 */
SP.Sharing.UserSharingResult.prototype.get_allowedRoles = function() {};

/**
 * @return {SP.Sharing.Role}
 */
SP.Sharing.UserSharingResult.prototype.get_currentRole = function() {};

/**
 * @return {boolean}
 */
SP.Sharing.UserSharingResult.prototype.get_isUserKnown = function() {};

/**
 * @return {string}
 */
SP.Sharing.UserSharingResult.prototype.get_message = function() {};

/**
 * @return {boolean}
 */
SP.Sharing.UserSharingResult.prototype.get_status = function() {};

/**
 * @return {string}
 */
SP.Sharing.UserSharingResult.prototype.get_user = function() {};

/**
 * @return {string}
 */
SP.Sharing.UserSharingResult.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.Sharing.UserSharingResult.prototype.writeToXml = function(writer, serializationContext) {};
/** @const */
SP.Social = {};

/** @const */
SP.Social.SocialActorType = {};
/** @const {number} */
SP.Social.SocialActorType.user;
/** @const {number} */
SP.Social.SocialActorType.document;
/** @const {number} */
SP.Social.SocialActorType.site;
/** @const {number} */
SP.Social.SocialActorType.tag;

/** @const */
SP.Social.SocialActorTypes = {};
/** @const {number} */
SP.Social.SocialActorTypes.none;
/** @const {number} */
SP.Social.SocialActorTypes.users;
/** @const {number} */
SP.Social.SocialActorTypes.documents;
/** @const {number} */
SP.Social.SocialActorTypes.sites;
/** @const {number} */
SP.Social.SocialActorTypes.tags;
/** @const {number} */
SP.Social.SocialActorTypes.excludeContentWithoutFeeds;
/** @const {number} */
SP.Social.SocialActorTypes.all;

/** @const */
SP.Social.SocialAttachmentActionKind = {};
/** @const {number} */
SP.Social.SocialAttachmentActionKind.navigate;
/** @const {number} */
SP.Social.SocialAttachmentActionKind.adHocAction;

/** @const */
SP.Social.SocialAttachmentKind = {};
/** @const {number} */
SP.Social.SocialAttachmentKind.image;
/** @const {number} */
SP.Social.SocialAttachmentKind.video;
/** @const {number} */
SP.Social.SocialAttachmentKind.document;

/** @const */
SP.Social.SocialDataItemType = {};
/** @const {number} */
SP.Social.SocialDataItemType.user;
/** @const {number} */
SP.Social.SocialDataItemType.document;
/** @const {number} */
SP.Social.SocialDataItemType.site;
/** @const {number} */
SP.Social.SocialDataItemType.tag;
/** @const {number} */
SP.Social.SocialDataItemType.link;

/** @const */
SP.Social.SocialDataOverlayType = {};
/** @const {number} */
SP.Social.SocialDataOverlayType.link;
/** @const {number} */
SP.Social.SocialDataOverlayType.actors;

/** @const */
SP.Social.SocialFeedSortOrder = {};
/** @const {number} */
SP.Social.SocialFeedSortOrder.byModifiedTime;
/** @const {number} */
SP.Social.SocialFeedSortOrder.byCreatedTime;

/** @const */
SP.Social.SocialFeedType = {};
/** @const {number} */
SP.Social.SocialFeedType.personal;
/** @const {number} */
SP.Social.SocialFeedType.news;
/** @const {number} */
SP.Social.SocialFeedType.timeline;
/** @const {number} */
SP.Social.SocialFeedType.likes;
/** @const {number} */
SP.Social.SocialFeedType.everyone;

/** @const */
SP.Social.SocialFeedAttributes = {};
/** @const {number} */
SP.Social.SocialFeedAttributes.none;
/** @const {number} */
SP.Social.SocialFeedAttributes.moreThreadsAvailable;

/** @const */
SP.Social.SocialPostAttributes = {};
/** @const {number} */
SP.Social.SocialPostAttributes.none;
/** @const {number} */
SP.Social.SocialPostAttributes.canLike;
/** @const {number} */
SP.Social.SocialPostAttributes.canDelete;
/** @const {number} */
SP.Social.SocialPostAttributes.useAuthorImage;
/** @const {number} */
SP.Social.SocialPostAttributes.useSmallImage;
/** @const {number} */
SP.Social.SocialPostAttributes.canFollowUp;

/** @const */
SP.Social.SocialPostDefinitionDataItemType = {};
/** @const {number} */
SP.Social.SocialPostDefinitionDataItemType.text;
/** @const {number} */
SP.Social.SocialPostDefinitionDataItemType.user;
/** @const {number} */
SP.Social.SocialPostDefinitionDataItemType.document;
/** @const {number} */
SP.Social.SocialPostDefinitionDataItemType.site;
/** @const {number} */
SP.Social.SocialPostDefinitionDataItemType.tag;
/** @const {number} */
SP.Social.SocialPostDefinitionDataItemType.link;

/** @const */
SP.Social.SocialPostType = {};
/** @const {number} */
SP.Social.SocialPostType.root;
/** @const {number} */
SP.Social.SocialPostType.reply;

/** @const */
SP.Social.SocialStatusCode = {};
/** @const {number} */
SP.Social.SocialStatusCode.OK;
/** @const {number} */
SP.Social.SocialStatusCode.invalidRequest;
/** @const {number} */
SP.Social.SocialStatusCode.accessDenied;
/** @const {number} */
SP.Social.SocialStatusCode.itemNotFound;
/** @const {number} */
SP.Social.SocialStatusCode.invalidOperation;
/** @const {number} */
SP.Social.SocialStatusCode.itemNotModified;
/** @const {number} */
SP.Social.SocialStatusCode.internalError;
/** @const {number} */
SP.Social.SocialStatusCode.cacheReadError;
/** @const {number} */
SP.Social.SocialStatusCode.cacheUpdateError;
/** @const {number} */
SP.Social.SocialStatusCode.personalSiteNotFound;
/** @const {number} */
SP.Social.SocialStatusCode.failedToCreatePersonalSite;
/** @const {number} */
SP.Social.SocialStatusCode.notAuthorizedToCreatePersonalSite;
/** @const {number} */
SP.Social.SocialStatusCode.cannotCreatePersonalSite;
/** @const {number} */
SP.Social.SocialStatusCode.limitReached;
/** @const {number} */
SP.Social.SocialStatusCode.attachmentError;
/** @const {number} */
SP.Social.SocialStatusCode.partialData;
/** @const {number} */
SP.Social.SocialStatusCode.featureDisabled;

/** @const */
SP.Social.SocialThreadAttributes = {};
/** @const {number} */
SP.Social.SocialThreadAttributes.none;
/** @const {number} */
SP.Social.SocialThreadAttributes.isDigest;
/** @const {number} */
SP.Social.SocialThreadAttributes.canReply;
/** @const {number} */
SP.Social.SocialThreadAttributes.canLock;
/** @const {number} */
SP.Social.SocialThreadAttributes.isLocked;
/** @const {number} */
SP.Social.SocialThreadAttributes.replyLimitReached;

/** @const */
SP.Social.SocialThreadType = {};
/** @const {number} */
SP.Social.SocialThreadType.normal;
/** @const {number} */
SP.Social.SocialThreadType.likeReference;
/** @const {number} */
SP.Social.SocialThreadType.replyReference;
/** @const {number} */
SP.Social.SocialThreadType.mentionReference;
/** @const {number} */
SP.Social.SocialThreadType.tagReference;
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
SP.Social.SocialActor = function() {};

/**
 * The AccountName property returns the user account name.
 * This property is only available for social actors of type "user".
 * @return {string}
 */
SP.Social.SocialActor.prototype.get_accountName = function() {};

/**
 * Identifies whether the actor is a user, document, site, or tag.
 * @return {SP.Social.SocialActorType}
 */
SP.Social.SocialActor.prototype.get_actorType = function() {};

/**
 * Specifies whether the actor can be followed by the current user.
 * @return {boolean}
 */
SP.Social.SocialActor.prototype.get_canFollow = function() {};

/**
 * Returns the URI of the document or site content.
 * This property is only available for social actors of type Document or Site.
 * @return {string}
 */
SP.Social.SocialActor.prototype.get_contentUri = function() {};

/**
 * @return {string}
 */
SP.Social.SocialActor.prototype.get_emailAddress = function() {};

/**
 * Returns the URI of the user's followed content folder.
 * This property is only available for social actors of type "user".
 * @return {string}
 */
SP.Social.SocialActor.prototype.get_followedContentUri = function() {};

/**
 * Returns the actor's unique identifier.
 * @return {string}
 */
SP.Social.SocialActor.prototype.get_id = function() {};

/**
 * Returns the URI of the image representing the actor.
 * This property is only available if actor is User, Document, or Site.
 * @return {string}
 */
SP.Social.SocialActor.prototype.get_imageUri = function() {};

/**
 * Returns true if the current user is following the actor; otherwise, it returns false.
 * @return {boolean}
 */
SP.Social.SocialActor.prototype.get_isFollowed = function() {};

/**
 * Returns the URI of the library containing the document.
 * This property is only available for social actors of type "document".
 * @return {string}
 */
SP.Social.SocialActor.prototype.get_libraryUri = function() {};

/**
 * The Name property returns the actor's display name.
 * @return {string}
 */
SP.Social.SocialActor.prototype.get_name = function() {};

/**
 * Returns the URI of the user's personal site.
 * This property is only available for social actors of type "user".
 * @return {string}
 */
SP.Social.SocialActor.prototype.get_personalSiteUri = function() {};

/**
 * Represents the status of retrieving the actor
 * @return {SP.Social.SocialStatusCode}
 */
SP.Social.SocialActor.prototype.get_status = function() {};

/**
 * The StatusText property returns the most recent post of the user.
 * This property is only available for social actors of type "user".
 * @return {string}
 */
SP.Social.SocialActor.prototype.get_statusText = function() {};

/**
 * Returns the GUID of the tag.
 * Only available for social actors of type "tag"
 * @return {string}
 */
SP.Social.SocialActor.prototype.get_tagGuid = function() {};

/**
 * Returns the user's title
 * This property is only available for social actors of type "user".
 * @return {string}
 */
SP.Social.SocialActor.prototype.get_title = function() {};

/**
 * Returns the URI of the actor.
 * @return {string}
 */
SP.Social.SocialActor.prototype.get_uri = function() {};
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
SP.Social.SocialActorInfo = function() {};

/**
 * User account name.
 * This property is only available for social actors of type "user".
 * @return {string}
 */
SP.Social.SocialActorInfo.prototype.get_accountName = function() {};

/**
 * User account name.
 * This property is only available for social actors of type "user".
 * @param {string} value
 * @return {string}
 */
SP.Social.SocialActorInfo.prototype.set_accountName = function(value) {};

/**
 * Identifies whether the actor is a user, document, site, or tag.
 * @return {SP.Social.SocialActorType}
 */
SP.Social.SocialActorInfo.prototype.get_actorType = function() {};

/**
 * Identifies whether the actor is a user, document, site, or tag.
 * @param {SP.Social.SocialActorType} value
 * @return {SP.Social.SocialActorType}
 */
SP.Social.SocialActorInfo.prototype.set_actorType = function(value) {};

/**
 * URI of the document or site content.
 * This property is only available for social actors of type Document or Site.
 * @return {string}
 */
SP.Social.SocialActorInfo.prototype.get_contentUri = function() {};

/**
 * URI of the document or site content.
 * This property is only available for social actors of type Document or Site.
 * @param {string} value
 * @return {string}
 */
SP.Social.SocialActorInfo.prototype.set_contentUri = function(value) {};

/**
 * Actor's unique identifier.
 * @return {string}
 */
SP.Social.SocialActorInfo.prototype.get_id = function() {};

/**
 * Actor's unique identifier.
 * @param {string} value
 * @return {string}
 */
SP.Social.SocialActorInfo.prototype.set_id = function(value) {};

/**
 * GUID of the tag.
 * Only available for social actors of type "tag"
 * @return {string}
 */
SP.Social.SocialActorInfo.prototype.get_tagGuid = function() {};

/**
 * GUID of the tag.
 * Only available for social actors of type "tag"
 * @param {string} value
 * @return {string}
 */
SP.Social.SocialActorInfo.prototype.set_tagGuid = function(value) {};
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
SP.Social.SocialAttachment = function() {};

/**
 * Specifies the type of object that the attachment contains.
 * @return {SP.Social.SocialAttachmentKind}
 */
SP.Social.SocialAttachment.prototype.get_attachmentKind = function() {};

/**
 * Specifies the type of object that the attachment contains.
 * @param {SP.Social.SocialAttachmentKind} value
 * @return {SP.Social.SocialAttachmentKind}
 */
SP.Social.SocialAttachment.prototype.set_attachmentKind = function(value) {};

/**
 * Specifies the action to take when the user selects the attachment.
 * This property is only present if the AttachmentKind is Video.
 * @return {!SP.Social.SocialAttachmentAction}
 */
SP.Social.SocialAttachment.prototype.get_clickAction = function() {};

/**
 * Specifies the action to take when the user selects the attachment.
 * This property is only present if the AttachmentKind is Video.
 * @param {!SP.Social.SocialAttachmentAction} value
 * @return {!SP.Social.SocialAttachmentAction}
 */
SP.Social.SocialAttachment.prototype.set_clickAction = function(value) {};

/**
 * Specifies the URI of the attachment content.
 * @return {string}
 */
SP.Social.SocialAttachment.prototype.get_contentUri = function() {};

/**
 * Specifies the URI of the attachment content.
 * @param {string} value
 * @return {string}
 */
SP.Social.SocialAttachment.prototype.set_contentUri = function(value) {};

/**
 * Provides a text description of the attachment.
 * @return {string}
 */
SP.Social.SocialAttachment.prototype.get_description = function() {};

/**
 * Provides a text description of the attachment.
 * @param {string} value
 * @return {string}
 */
SP.Social.SocialAttachment.prototype.set_description = function(value) {};

/**
 * Specifies the height of the attachment or of the attachment preview.
 * @return {number}
 */
SP.Social.SocialAttachment.prototype.get_height = function() {};

/**
 * Specifies the height of the attachment or of the attachment preview.
 * @param {number} value
 * @return {number}
 */
SP.Social.SocialAttachment.prototype.set_height = function(value) {};

/**
 * Specifies the duration of the attachment in seconds. This property is only present if the AttachmentKind is Video.
 * @return {number}
 */
SP.Social.SocialAttachment.prototype.get_length = function() {};

/**
 * Specifies the duration of the attachment in seconds. This property is only present if the AttachmentKind is Video.
 * @param {number} value
 * @return {number}
 */
SP.Social.SocialAttachment.prototype.set_length = function(value) {};

/**
 * Provides the attachment name.
 * @return {string}
 */
SP.Social.SocialAttachment.prototype.get_name = function() {};

/**
 * Provides the attachment name.
 * @param {string} value
 * @return {string}
 */
SP.Social.SocialAttachment.prototype.set_name = function(value) {};

/**
 * Specifies the URI of the attachment�s preview thumbnail.
 * This property is only present if the AttachmentKind is Document or Video.
 * @return {string}
 */
SP.Social.SocialAttachment.prototype.get_previewUri = function() {};

/**
 * Specifies the URI of the attachment�s preview thumbnail.
 * This property is only present if the AttachmentKind is Document or Video.
 * @param {string} value
 * @return {string}
 */
SP.Social.SocialAttachment.prototype.set_previewUri = function(value) {};

/**
 * Provides the attachment URI.
 * @return {string}
 */
SP.Social.SocialAttachment.prototype.get_uri = function() {};

/**
 * Provides the attachment URI.
 * @param {string} value
 * @return {string}
 */
SP.Social.SocialAttachment.prototype.set_uri = function(value) {};

/**
 * Specifies the width of the attachment or of the attachment preview.
 * @return {number}
 */
SP.Social.SocialAttachment.prototype.get_width = function() {};

/**
 * Specifies the width of the attachment or of the attachment preview.
 * @param {number} value
 * @return {number}
 */
SP.Social.SocialAttachment.prototype.set_width = function(value) {};
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
SP.Social.SocialAttachmentAction = function() {};

/**
 * Specifies whether the action is to navigate to a URI or an action that is dependent on the context in which the object is presented to the user.
 * @return {SP.Social.SocialAttachmentActionKind}
 */
SP.Social.SocialAttachmentAction.prototype.get_actionKind = function() {};

/**
 * Specifies whether the action is to navigate to a URI or an action that is dependent on the context in which the object is presented to the user.
 * @param {SP.Social.SocialAttachmentActionKind} value
 * @return {SP.Social.SocialAttachmentActionKind}
 */
SP.Social.SocialAttachmentAction.prototype.set_actionKind = function(value) {};

/**
 * Specifies the URI associated with the action.
 * @return {string}
 */
SP.Social.SocialAttachmentAction.prototype.get_actionUri = function() {};

/**
 * Specifies the URI associated with the action.
 * @param {string} value
 * @return {string}
 */
SP.Social.SocialAttachmentAction.prototype.set_actionUri = function(value) {};
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
SP.Social.SocialDataItem = function() {};

/**
 * Identifies the user.
 * @return {string}
 */
SP.Social.SocialDataItem.prototype.get_accountName = function() {};

/**
 * Identifies the user.
 * @param {string} value
 * @return {string}
 */
SP.Social.SocialDataItem.prototype.set_accountName = function(value) {};

/**
 * Specifies whether the item being inserted is a user, document, site, tag, or link.
 * @return {SP.Social.SocialDataItemType}
 */
SP.Social.SocialDataItem.prototype.get_itemType = function() {};

/**
 * Specifies whether the item being inserted is a user, document, site, tag, or link.
 * @param {SP.Social.SocialDataItemType} value
 * @return {SP.Social.SocialDataItemType}
 */
SP.Social.SocialDataItem.prototype.set_itemType = function(value) {};

/**
 * Identifies the tag.
 * @return {string}
 */
SP.Social.SocialDataItem.prototype.get_tagGuid = function() {};

/**
 * Identifies the tag.
 * @param {string} value
 * @return {string}
 */
SP.Social.SocialDataItem.prototype.set_tagGuid = function(value) {};

/**
 * Specifies the plain text to be inserted in the created post. The server can use the specified text or can use text that identifies the item, for example the name specified in a user profile.
 * @return {string}
 */
SP.Social.SocialDataItem.prototype.get_text = function() {};

/**
 * Specifies the plain text to be inserted in the created post. The server can use the specified text or can use text that identifies the item, for example the name specified in a user profile.
 * @param {string} value
 * @return {string}
 */
SP.Social.SocialDataItem.prototype.set_text = function(value) {};

/**
 * Identifies the site, document, or link.
 * @return {string}
 */
SP.Social.SocialDataItem.prototype.get_uri = function() {};

/**
 * Identifies the site, document, or link.
 * @param {string} value
 * @return {string}
 */
SP.Social.SocialDataItem.prototype.set_uri = function(value) {};
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
SP.Social.SocialDataOverlay = function() {};

/**
 * Specifies one or more actors as an array of integers where each integer specifies an index into the SocialThreadActors array.
 * This property is only available if the get_overlayType() has a value of SocialDataOverlayType.actors.
 * @return {!Array<number>}
 */
SP.Social.SocialDataOverlay.prototype.get_actorIndexes = function() {};

/**
 * The Index property specifies the starting position of the overlay in the SocialPostText string
 * @return {number}
 */
SP.Social.SocialDataOverlay.prototype.get_index = function() {};

/**
 * The Length property specifies the number of characters in the overlay.
 * @return {number}
 */
SP.Social.SocialDataOverlay.prototype.get_length = function() {};

/**
 * The LinkUri property specifies the URI of the link.
 * This property is only available if the get_overlayType() has a value of SocialDataOverlayType.link.
 * @return {string}
 */
SP.Social.SocialDataOverlay.prototype.get_linkUri = function() {};

/**
 * Specifies whether the overlay is a link or one or more actors.
 * @return {SP.Social.SocialDataOverlayType}
 */
SP.Social.SocialDataOverlay.prototype.get_overlayType = function() {};
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
SP.Social.SocialExceptionDetails = function() {};

/**
 * @return {number}
 */
SP.Social.SocialExceptionDetails.prototype.get_internalErrorCode = function() {};

/**
 * @return {string}
 */
SP.Social.SocialExceptionDetails.prototype.get_internalMessage = function() {};

/**
 * @return {string}
 */
SP.Social.SocialExceptionDetails.prototype.get_internalStackTrace = function() {};

/**
 * Specifies a type name associated with the internal error if a type name is available.
 * @return {string}
 */
SP.Social.SocialExceptionDetails.prototype.get_internalTypeName = function() {};

/**
 * @return {SP.Social.SocialStatusCode}
 */
SP.Social.SocialExceptionDetails.prototype.get_status = function() {};
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
SP.Social.SocialFeed = function() {};

/**
 * Specifies attributes of the returned feed.
 * The attributes specify if the requested feed has additional threads that were not included in the returned thread.
 * @return {SP.Social.SocialFeedAttributes}
 */
SP.Social.SocialFeed.prototype.get_attributes = function() {};

/**
 * Returns the date-time of the most recent post that was requested.
 * The most recent post that was requested can be removed from the feed if the current user does not have access to it.
 * Consequently, the feed does not always contain the post with the date specified in this property.
 * @return {string}
 */
SP.Social.SocialFeed.prototype.get_newestProcessed = function() {};

/**
 * The OldestProcessed property returns the date-time of the oldest post that was requested.
 * The oldest post that was requested can be removed from the feed if the current user does not have access to it.
 * Consequently, the feed does not always contain the post with the date specified in this property
 * @return {string}
 */
SP.Social.SocialFeed.prototype.get_oldestProcessed = function() {};

/**
 * Contains the social threads in the feed.
 * @return {!Array<!SP.Social.SocialThread>}
 */
SP.Social.SocialFeed.prototype.get_threads = function() {};

/**
 * Returns the number of mentions of the current user that have been added to the feed on the server since the time that the unread mention count was cleared for the current user.
 * @return {number}
 */
SP.Social.SocialFeed.prototype.get_unreadMentionCount = function() {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientRuntimeContext} context
 */
SP.Social.SocialFeedManager = function(context) {};

/**
 * Returns the current user
 * @return {!SP.Social.SocialActor}
 */
SP.Social.SocialFeedManager.prototype.get_owner = function() {};

/**
 * Specifies the URI of the personal site portal.
 * @return {string}
 */
SP.Social.SocialFeedManager.prototype.get_personalSitePortalUri = function() {};

/**
 * Creates a post in the current user's newsfeed, in the specified user's feed, or in the specified thread.
 * This method returns a new or a modified thread.
 * @param {string} targetId Optional, specifies the target of the post.
 * If this parameter is null, the post is created as a root post in the current user's feed.
 * If this parameter is set to a site URL or a site actor identification, the post is created as a root post in the specified site feed.
 * If this parameter is set to a thread identification, the post is created as a reply post in the specified thread.
 * @param {!SP.Social.SocialPostCreationData} creationData Specifies the format and content of the post.
 * @return {!SP.Social.SocialThread}
 */
SP.Social.SocialFeedManager.prototype.createPost = function(targetId, creationData) {};

/**
 * Deletes the specified post.
 * This method returns a digest of the modified thread.
 * If the entire thread is deleted, this method returns null.
 * If the post being deleted is the root post of a thread, all reply posts are also deleted.
 * @param {string} postId   Specifies the post to be deleted.
 * Corresponds the value returned from SocialPost.get_id().
 * @return {!SP.Social.SocialThread}
 */
SP.Social.SocialFeedManager.prototype.deletePost = function(postId) {};

/**
 * Returns the set of users who have liked the specified post.
 * @param {string} postId   Specifies the post being queried for information about users that like the post.
 * Corresponds the value returned from SocialPost.get_id().
 * @return {!Array<!SP.Social.SocialActor>}
 */
SP.Social.SocialFeedManager.prototype.getAllLikers = function(postId) {};

/**
 * Returns a feed for the current user.
 * The feed consists of an array of message threads.
 * Each thread consists of a root post and an array of reply posts.
 * @param {SP.Social.SocialFeedType} type
 * @param {!SP.Social.SocialFeedOptions} options
 * @return {!SP.Social.SocialFeed}
 */
SP.Social.SocialFeedManager.prototype.getFeed = function(type, options) {};

/**
 * Returns the public feed for a user or for a site.
 * The feed lists activity by the user and posts created by the server for that user.
 * For example, the feed can include posts indicating the user's birthday or indicating that the user liked a post.
 * @param {string} actorId  Corresponds to the value returned by SocialActor.get_id().
 * If the actorId specifies the current user, this method returns the public feed for the current user.
 * @param {!SP.Social.SocialFeedOptions} options
 * @return {!SP.Social.SocialFeed}
 */
SP.Social.SocialFeedManager.prototype.getFeedFor = function(actorId, options) {};

/**
 * Returns the root post and all reply posts in the thread.
 * @param {string} threadId
 * @return {!SP.Social.SocialThread}
 */
SP.Social.SocialFeedManager.prototype.getFullThread = function(threadId) {};

/**
 * Returns a feed containing mention reference threads from the current user's personal feed.
 * @param {boolean} clearUnreadMentions
 * @param {!SP.Social.SocialFeedOptions} options
 * @return {!SP.Social.SocialFeed}
 */
SP.Social.SocialFeedManager.prototype.getMentions = function(clearUnreadMentions, options) {};

/**
 * Returns the server's count of unread mentions of the current user.
 * The server maintains a count of unread mentions in posts, but does not track which mentions have been read.
 * When a new mention is stored on the server, it increments the unread mention for the user specified by the mention.
 * The unread mention count is cleared by the GetMentions method.
 * @return {!SP.IntResult}
 */
SP.Social.SocialFeedManager.prototype.getUnreadMentionCount = function() {};

/**
 * Specifies that the current user likes the specified post.
 * Returns a digest thread containing the specified post.
 * A digest thread contains the root post and a selection of reply posts
 * @param {string} postId
 * @return {!SP.Social.SocialThread}
 */
SP.Social.SocialFeedManager.prototype.likePost = function(postId) {};

/**
 * Specifies that the current user does not like the specified post.
 * Returns a digest thread containing the specified post.
 * @param {string} postId
 * @return {!SP.Social.SocialThread}
 */
SP.Social.SocialFeedManager.prototype.unlikePost = function(postId) {};

/**
 * Prevents any user from adding a new reply post to the specified thread.
 * Once a thread is locked, no new reply posts can be added until after the thread has been unlocked with the unlockThread method.
 * This method returns a digest of the locked thread
 * @param {string} threadId
 * @return {!SP.Social.SocialThread}
 */
SP.Social.SocialFeedManager.prototype.lockThread = function(threadId) {};

/**
 * Allows users to add new reply posts to the specified thread.
 * @param {string} threadId
 * @return {!SP.Social.SocialThread}
 */
SP.Social.SocialFeedManager.prototype.unlockThread = function(threadId) {};

/**
 * Suppresses activity notifications for the current user of updates to the specified thread.
 * @param {string} threadId
 * @return {void}
 */
SP.Social.SocialFeedManager.prototype.suppressThreadNotifications = function(threadId) {};

/**
 * Creates an image attachment for a future post.
 * @param {string} name
 * @param {string} description
 * @param {?} imageData
 * @return {!SP.Social.SocialAttachment}
 */
SP.Social.SocialFeedManager.prototype.createImageAttachment = function(name, description, imageData) {};

/**
 * Generates a preview for the content specified by the URL.
 * @param {string} itemUrl
 * @return {!SP.Social.SocialAttachment}
 */
SP.Social.SocialFeedManager.prototype.getPreview = function(itemUrl) {};

/**
 * Returns the preview image data for an image attachment.
 * @param {string} url Specifies the URL of the preview image relative to the personal site portal.
 * @param {string} key Specifies the URL-encoded key to decrypt the image.
 * @param {string} iv Specifies the URL-encoded initialization vector for decrypting the image.
 * @return {?}
 */
SP.Social.SocialFeedManager.prototype.getPreviewImage = function(url, key, iv) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.Social.SocialFeedOptions = function() {};

/**
 * @return {number}
 */
SP.Social.SocialFeedOptions.prototype.get_maxThreadCount = function() {};

/**
 * @param {number} value
 * @return {number}
 */
SP.Social.SocialFeedOptions.prototype.set_maxThreadCount = function(value) {};

/**
 * @return {string}
 */
SP.Social.SocialFeedOptions.prototype.get_newerThan = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.Social.SocialFeedOptions.prototype.set_newerThan = function(value) {};

/**
 * @return {string}
 */
SP.Social.SocialFeedOptions.prototype.get_olderThan = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.Social.SocialFeedOptions.prototype.set_olderThan = function(value) {};

/**
 * @return {SP.Social.SocialFeedSortOrder}
 */
SP.Social.SocialFeedOptions.prototype.get_sortOrder = function() {};

/**
 * @param {SP.Social.SocialFeedSortOrder} value
 * @return {SP.Social.SocialFeedSortOrder}
 */
SP.Social.SocialFeedOptions.prototype.set_sortOrder = function(value) {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientRuntimeContext} context
 */
SP.Social.SocialFollowingManager = function(context) {};

/**
 * URI to a site  that lists the current user's followed documents.
 * @return {string}
 */
SP.Social.SocialFollowingManager.prototype.get_followedDocumentsUri = function() {};

/**
 * URI to a site  that lists the current user's followed sites.
 * @return {string}
 */
SP.Social.SocialFollowingManager.prototype.get_followedSitesUri = function() {};

/**
 * Adds the specified actor to the current user's list of followed items.
 * Returns one of the following values, wrapped into the SP.IntResult object:
 * 0 = ok,
 * 1 = alreadyFollowing,
 * 2 = limitReached,
 * 3 = internalError
 * @param {!SP.Social.SocialActorInfo} actor
 * @return {!SP.IntResult}
 */
SP.Social.SocialFollowingManager.prototype.follow = function(actor) {};

/**
 * @param {!SP.Social.SocialActorInfo} actor
 * @return {!SP.BooleanResult}
 */
SP.Social.SocialFollowingManager.prototype.stopFollowing = function(actor) {};

/**
 * @param {!SP.Social.SocialActorInfo} actor
 * @return {!SP.BooleanResult}
 */
SP.Social.SocialFollowingManager.prototype.isFollowed = function(actor) {};

/**
 * @param {SP.Social.SocialActorTypes} types
 * @return {!Array<!SP.Social.SocialActor>}
 */
SP.Social.SocialFollowingManager.prototype.getFollowed = function(types) {};

/**
 * @param {SP.Social.SocialActorTypes} types
 * @return {!SP.IntResult}
 */
SP.Social.SocialFollowingManager.prototype.getFollowedCount = function(types) {};

/**
 * Returns the users who are followers of the current user.
 * @return {!Array<!SP.Social.SocialActor>}
 */
SP.Social.SocialFollowingManager.prototype.getFollowers = function() {};

/**
 * @return {!Array<!SP.Social.SocialActor>}
 */
SP.Social.SocialFollowingManager.prototype.getSuggestions = function() {};
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
SP.Social.SocialLink = function() {};

/**
 * @return {string}
 */
SP.Social.SocialLink.prototype.get_text = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.Social.SocialLink.prototype.set_text = function(value) {};

/**
 * @return {string}
 */
SP.Social.SocialLink.prototype.get_uri = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.Social.SocialLink.prototype.set_uri = function(value) {};
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
SP.Social.SocialPost = function() {};

/**
 * Specifies an image, document preview, or video preview attachment
 * @return {!SP.Social.SocialAttachment}
 */
SP.Social.SocialPost.prototype.get_attachment = function() {};

/**
 * Describes attributes about the post, such as whether the current user can delete or like the post.
 * @return {SP.Social.SocialPostAttributes}
 */
SP.Social.SocialPost.prototype.get_attributes = function() {};

/**
 * Specifies the author of the post as an index to the social thread's Actors array.
 * @return {number}
 */
SP.Social.SocialPost.prototype.get_authorIndex = function() {};

/**
 * Specifies the date and time that the post was created on the server.
 * @return {string}
 */
SP.Social.SocialPost.prototype.get_createdTime = function() {};

/**
 * Specifies the unique identifier of the post.
 * @return {string}
 */
SP.Social.SocialPost.prototype.get_id = function() {};

/**
 * Specifies information about users who like the post.
 * @return {!SP.Social.SocialPostActorInfo}
 */
SP.Social.SocialPost.prototype.get_likerInfo = function() {};

/**
 * Specifies the date and time that the post was last modified on the server.
 * @return {string}
 */
SP.Social.SocialPost.prototype.get_modifiedTime = function() {};

/**
 * An array of objects in a post, where each object represents a user, document, site, tag, or link.
 * @return {!Array<!SP.Social.SocialDataOverlay>}
 */
SP.Social.SocialPost.prototype.get_overlays = function() {};

/**
 * Specifies whether a post is the root post or a reply post in a thread
 * @return {SP.Social.SocialPostType}
 */
SP.Social.SocialPost.prototype.get_postType = function() {};

/**
 * Specifies the URI of the image to be displayed with the post.
 * @return {string}
 */
SP.Social.SocialPost.prototype.get_preferredImageUri = function() {};

/**
 * Specifies the link to a web site associated with the application that created the post.
 * @return {!SP.Social.SocialLink}
 */
SP.Social.SocialPost.prototype.get_source = function() {};

/**
 * Specifies the text of the post.
 * @return {string}
 */
SP.Social.SocialPost.prototype.get_text = function() {};
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
SP.Social.SocialPostActorInfo = function() {};

/**
 * @return {boolean}
 */
SP.Social.SocialPostActorInfo.prototype.get_includesCurrentUser = function() {};

/**
 * Specifies an array of indexes into the SocialThreadActors array.
 * The server can choose to return a limited set of actors. For example, the server can choose to return a subset of the users that like a post.
 * @return {!Array<number>}
 */
SP.Social.SocialPostActorInfo.prototype.get_indexes = function() {};

/**
 * @return {number}
 */
SP.Social.SocialPostActorInfo.prototype.get_totalCount = function() {};
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
SP.Social.SocialPostCreationData = function() {};

/**
 * Specifies an image, document preview, or video preview to be used in the post.
 * @return {!SP.Social.SocialAttachment}
 */
SP.Social.SocialPostCreationData.prototype.get_attachment = function() {};

/**
 * Specifies an image, document preview, or video preview to be used in the post.
 * @param {!SP.Social.SocialAttachment} value
 * @return {!SP.Social.SocialAttachment}
 */
SP.Social.SocialPostCreationData.prototype.set_attachment = function(value) {};

/**
 * Specifies an array consisting of social tags, user mentions, links to documents, links to sites, and generic links.
 * Each element in the array is inserted into the ContentText string if there is a substitution reference to the array element in the string.
 * @return {!SP.Social.SocialDataItem}
 */
SP.Social.SocialPostCreationData.prototype.get_contentItems = function() {};

/**
 * Specifies an array consisting of social tags, user mentions, links to documents, links to sites, and generic links.
 * Each element in the array is inserted into the ContentText string if there is a substitution reference to the array element in the string.
 * @param {!SP.Social.SocialDataItem} value
 * @return {!SP.Social.SocialDataItem}
 */
SP.Social.SocialPostCreationData.prototype.set_contentItems = function(value) {};

/**
 * Contains the text body of the post.
 * @return {string}
 */
SP.Social.SocialPostCreationData.prototype.get_contentText = function() {};

/**
 * Contains the text body of the post.
 * It can optionally contain one or more substitution references to elements in the zero-based ContentItems array.
 * A substitution reference consists of a series of characters that consist of an open-brace character ({) followed by one of more digits in the range 0 to 9 and terminated by a close-brace character (}).
 * The substitution reference is replaced by the text value of the element in the in the array at the offset specified by the value of the digits.
 * For example, the text string "{0}" is replaced by the first element in the ContentItems array.
 * @param {string} value
 * @return {string}
 */
SP.Social.SocialPostCreationData.prototype.set_contentText = function(value) {};

/**
 * Specifies additional information when creating server-generated posts
 * @return {!SP.Social.SocialPostDefinitionData}
 */
SP.Social.SocialPostCreationData.prototype.get_definitionData = function() {};

/**
 * Specifies additional information when creating server-generated posts
 * @param {!SP.Social.SocialPostDefinitionData} value
 * @return {!SP.Social.SocialPostDefinitionData}
 */
SP.Social.SocialPostCreationData.prototype.set_definitionData = function(value) {};

/**
 * Specifies the link to a web site associated with the application that created the post
 * @return {!SP.Social.SocialLink}
 */
SP.Social.SocialPostCreationData.prototype.get_source = function() {};

/**
 * Specifies the link to a web site associated with the application that created the post
 * @param {!SP.Social.SocialLink} value
 * @return {!SP.Social.SocialLink}
 */
SP.Social.SocialPostCreationData.prototype.set_source = function(value) {};

/**
 * Specifies that access to the post SHOULD be restricted to users that have access to the objects identified by the array of URIs
 * @return {!Array<string>}
 */
SP.Social.SocialPostCreationData.prototype.get_securityUris = function() {};

/**
 * Specifies that access to the post SHOULD be restricted to users that have access to the objects identified by the array of URIs
 * @param {!Array<string>} value
 * @return {!Array<string>}
 */
SP.Social.SocialPostCreationData.prototype.set_securityUris = function(value) {};

/**
 * Indicates whether the post is to be used as the current user's new status message.
 * @return {boolean}
 */
SP.Social.SocialPostCreationData.prototype.get_updateStatusText = function() {};

/**
 * Indicates whether the post is to be used as the current user's new status message.
 * @param {boolean} value
 * @return {boolean}
 */
SP.Social.SocialPostCreationData.prototype.set_updateStatusText = function(value) {};
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
SP.Social.SocialPostDefinitionData = function() {};

/**
 * @return {!Array<!SP.Social.SocialPostDefinitionDataItem>}
 */
SP.Social.SocialPostDefinitionData.prototype.get_items = function() {};

/**
 * @param {!Array<!SP.Social.SocialPostDefinitionDataItem>} value
 * @return {!Array<!SP.Social.SocialPostDefinitionDataItem>}
 */
SP.Social.SocialPostDefinitionData.prototype.set_items = function(value) {};

/**
 * @return {string}
 */
SP.Social.SocialPostDefinitionData.prototype.get_name = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.Social.SocialPostDefinitionData.prototype.set_name = function(value) {};
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
SP.Social.SocialPostDefinitionDataItem = function() {};

/**
 * Specifies the name of the user.
 * This property is only used if the ItemType property specifies that the item is a User.
 * @return {string}
 */
SP.Social.SocialPostDefinitionDataItem.prototype.get_accountName = function() {};

/**
 * Specifies the name of the user.
 * This property is only used if the ItemType property specifies that the item is a User.
 * @param {string} value
 * @return {string}
 */
SP.Social.SocialPostDefinitionDataItem.prototype.set_accountName = function(value) {};

/**
 * Specifies whether the item being formatted is a text element, a user, a document, a site, a tag, or a link.
 * @return {SP.Social.SocialPostDefinitionDataItemType}
 */
SP.Social.SocialPostDefinitionDataItem.prototype.get_itemType = function() {};

/**
 * Specifies whether the item being formatted is a text element, a user, a document, a site, a tag, or a link.
 * @param {SP.Social.SocialPostDefinitionDataItemType} value
 * @return {SP.Social.SocialPostDefinitionDataItemType}
 */
SP.Social.SocialPostDefinitionDataItem.prototype.set_itemType = function(value) {};

/**
 * Specifies the post definition token to be replaced by the item
 * @return {string}
 */
SP.Social.SocialPostDefinitionDataItem.prototype.get_placeholderName = function() {};

/**
 * Specifies the post definition token to be replaced by the item
 * @param {string} value
 * @return {string}
 */
SP.Social.SocialPostDefinitionDataItem.prototype.set_placeholderName = function(value) {};

/**
 * Specifies the GUID that identifies the tag.
 * This property is only used if the ItemType property specifies that the item is a Tag.
 * @return {string}
 */
SP.Social.SocialPostDefinitionDataItem.prototype.get_tagGuid = function() {};

/**
 * Specifies the GUID that identifies the tag.
 * This property is only used if the ItemType property specifies that the item is a Tag.
 * @param {string} value
 * @return {string}
 */
SP.Social.SocialPostDefinitionDataItem.prototype.set_tagGuid = function(value) {};

/**
 * Specifies the text that is substituted for the placeholder
 * @return {string}
 */
SP.Social.SocialPostDefinitionDataItem.prototype.get_text = function() {};

/**
 * Specifies the text that is substituted for the placeholder
 * @param {string} value
 * @return {string}
 */
SP.Social.SocialPostDefinitionDataItem.prototype.set_text = function(value) {};

/**
 * Specifies the URI of the document, site, or link.
 * This property is only available if the ItemType property specifies that the item is a Document, Link, or Site.
 * @return {string}
 */
SP.Social.SocialPostDefinitionDataItem.prototype.get_uri = function() {};

/**
 * Specifies the URI of the document, site, or link.
 * This property is only available if the ItemType property specifies that the item is a Document, Link, or Site.
 * @param {string} value
 * @return {string}
 */
SP.Social.SocialPostDefinitionDataItem.prototype.set_uri = function(value) {};
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
SP.Social.SocialPostReference = function() {};

/**
 * Provides a digest of the thread containing the referenced post
 * @return {!SP.Social.SocialThread}
 */
SP.Social.SocialPostReference.prototype.get_digest = function() {};

/**
 * @return {!SP.Social.SocialPost}
 */
SP.Social.SocialPostReference.prototype.get_post = function() {};

/**
 * Specifies the unique identifier of the thread containing the referenced post.
 * @return {string}
 */
SP.Social.SocialPostReference.prototype.get_threadId = function() {};

/**
 * Specifies the current owner of the thread as an index into the SocialThreadActors array.
 * @return {number}
 */
SP.Social.SocialPostReference.prototype.get_threadOwnerIndex = function() {};
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
SP.Social.SocialThread = function() {};

/**
 * Specifies the users who have created a post in the returned thread and also contains any users, documents, sites, and tags that are referenced in any of the posts in the returned thread.
 * @return {!Array<!SP.Social.SocialActor>}
 */
SP.Social.SocialThread.prototype.get_actors = function() {};

/**
 * Specifies attributes of the thread, such as whether the current user can reply or lock the thread and whether the thread is a digest of a thread on the server, whether the number of replies has reached the maximum, and whether the thread is locked.
 * @return {SP.Social.SocialThreadAttributes}
 */
SP.Social.SocialThread.prototype.get_attributes = function() {};

/**
 * Specifies the unique identification of the thread.
 * @return {string}
 */
SP.Social.SocialThread.prototype.get_id = function() {};

/**
 * Specifies the thread owner as an index into the Actors array.
 * Typically, the thread owner is the user who created the root post, but the thread owner can be any user included in the Actors array.
 * @return {number}
 */
SP.Social.SocialThread.prototype.get_ownerIndex = function() {};

/**
 * Specifies a URI that is a permanent reference to the thread, if such a permanent reference is available.
 * @return {string}
 */
SP.Social.SocialThread.prototype.get_permalink = function() {};

/**
 * Specifies a reference to a post in another thread.
 * The PostReference property is available only if the ThreadType has a value of ReplyReference, LikeReference, MentionReference, or TagReference.
 * @return {!SP.Social.SocialPostReference}
 */
SP.Social.SocialThread.prototype.get_postReference = function() {};

/**
 * Returns an array of zero or more reply posts.
 * The server can return a subset of the reply posts that are stored on the server.
 * @return {!Array<!SP.Social.SocialPost>}
 */
SP.Social.SocialThread.prototype.get_replies = function() {};

/**
 * @return {!SP.Social.SocialPost}
 */
SP.Social.SocialThread.prototype.get_rootPost = function() {};

/**
 * Provides information about conditions that were encountered retrieving the thread that did not prevent the operation from completing.
 * @return {SP.Social.SocialStatusCode}
 */
SP.Social.SocialThread.prototype.get_status = function() {};

/**
 * Specifies if the thread is a normal thread created by one or more CreatePost calls or a reference post generated by the server when a user replies to a post, likes a post, or creates a post with a tag or mention
 * @return {SP.Social.SocialThreadType}
 */
SP.Social.SocialThread.prototype.get_threadType = function() {};

/**
 * @return {number}
 */
SP.Social.SocialThread.prototype.get_totalReplyCount = function() {};
/** @const */
SP.Taxonomy = {};

/** @const */
SP.Taxonomy.StringMatchOption = {};
/** @const {number} */
SP.Taxonomy.StringMatchOption.startsWith;
/** @const {number} */
SP.Taxonomy.StringMatchOption.exactMatch;

/** @const */
SP.Taxonomy.ChangeItemType = {};
/** @const {number} */
SP.Taxonomy.ChangeItemType.unknown;
/** @const {number} */
SP.Taxonomy.ChangeItemType.term;
/** @const {number} */
SP.Taxonomy.ChangeItemType.termSet;
/** @const {number} */
SP.Taxonomy.ChangeItemType.group;
/** @const {number} */
SP.Taxonomy.ChangeItemType.termStore;
/** @const {number} */
SP.Taxonomy.ChangeItemType.site;

/** @const */
SP.Taxonomy.ChangeOperationType = {};
/** @const {number} */
SP.Taxonomy.ChangeOperationType.unknown;
/** @const {number} */
SP.Taxonomy.ChangeOperationType.add;
/** @const {number} */
SP.Taxonomy.ChangeOperationType.edit;
/** @const {number} */
SP.Taxonomy.ChangeOperationType.deleteObject;
/** @const {number} */
SP.Taxonomy.ChangeOperationType.move;
/** @const {number} */
SP.Taxonomy.ChangeOperationType.copy;
/** @const {number} */
SP.Taxonomy.ChangeOperationType.pathChange;
/** @const {number} */
SP.Taxonomy.ChangeOperationType.merge;
/** @const {number} */
SP.Taxonomy.ChangeOperationType.importObject;
/** @const {number} */
SP.Taxonomy.ChangeOperationType.restore;
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.Taxonomy.TaxonomySession = function() {};

/**
 * @param {!SP.ClientContext} context
 * @return {!SP.Taxonomy.TaxonomySession}
 */
SP.Taxonomy.TaxonomySession.getTaxonomySession = function(context) {};

/**
 * @return {!Array<string>}
 */
SP.Taxonomy.TaxonomySession.prototype.get_offlineTermStoreNames = function() {};

/**
 * @return {!SP.Taxonomy.TermStoreCollection}
 */
SP.Taxonomy.TaxonomySession.prototype.get_termStores = function() {};

/**
 * @param {!SP.Taxonomy.LabelMatchInformation} labelMatchInformation
 * @return {!SP.Taxonomy.TermCollection}
 */
SP.Taxonomy.TaxonomySession.prototype.getTerms = function(labelMatchInformation) {};

/**
 * @return {void}
 */
SP.Taxonomy.TaxonomySession.prototype.updateCache = function() {};

/**
 * @param {!SP.Guid} guid
 * @return {!SP.Taxonomy.Term}
 */
SP.Taxonomy.TaxonomySession.prototype.getTerm = function(guid) {};

/**
 * @param {!Array<!SP.Guid>} termIds
 * @return {!SP.Taxonomy.TermCollection}
 */
SP.Taxonomy.TaxonomySession.prototype.getTermsById = function(termIds) {};

/**
 * @param {string} termLabel
 * @param {boolean} defaultLabelOnly
 * @param {SP.Taxonomy.StringMatchOption} stringMatchOption
 * @param {number} resultCollectionSize
 * @param {boolean} trimUnavailable
 * @param {boolean} trimDeprecated
 * @return {!SP.Taxonomy.TermCollection}
 */
SP.Taxonomy.TaxonomySession.prototype.getTermsInDefaultLanguage = function(termLabel, defaultLabelOnly, stringMatchOption, resultCollectionSize, trimUnavailable, trimDeprecated) {};

/**
 * @param {string} termLabel
 * @param {boolean} defaultLabelOnly
 * @param {SP.Taxonomy.StringMatchOption} stringMatchOption
 * @param {number} resultCollectionSize
 * @param {boolean} trimUnavailable
 * @param {boolean} trimDeprecated
 * @return {!SP.Taxonomy.TermCollection}
 */
SP.Taxonomy.TaxonomySession.prototype.getTermsInWorkingLocale = function(termLabel, defaultLabelOnly, stringMatchOption, resultCollectionSize, trimUnavailable, trimDeprecated) {};

/**
 * @param {string|!SP.Taxonomy.CustomPropertyMatchInformation} customPropertyName_or_customPropertyMatchInformation
 * @param {boolean=} trimUnavailable
 * @return {!SP.Taxonomy.TermCollection}
 */
SP.Taxonomy.TaxonomySession.prototype.getTermsWithCustomProperty = function(customPropertyName_or_customPropertyMatchInformation, trimUnavailable) {};

/**
 * @param {string} termSetName
 * @param {number} lcid
 * @return {!SP.Taxonomy.TermSetCollection}
 */
SP.Taxonomy.TaxonomySession.prototype.getTermSetsByName = function(termSetName, lcid) {};

/**
 * @param {!Array<string>} requiredTermLabels
 * @param {number} lcid
 * @return {!SP.Taxonomy.TermSetCollection}
 */
SP.Taxonomy.TaxonomySession.prototype.getTermSetsByTermLabel = function(requiredTermLabels, lcid) {};

/**
 * @return {!SP.Taxonomy.TermStore}
 */
SP.Taxonomy.TaxonomySession.prototype.getDefaultKeywordsTermStore = function() {};

/**
 * @return {!SP.Taxonomy.TermStore}
 */
SP.Taxonomy.TaxonomySession.prototype.getDefaultSiteCollectionTermStore = function() {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.Taxonomy.TermStoreCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.Taxonomy.TermStore}
 */
SP.Taxonomy.TermStoreCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.Taxonomy.TermStore}
 */
SP.Taxonomy.TermStoreCollection.prototype.get_item = function(index) {};

/**
 * @param {!SP.Guid} id
 * @return {!SP.Taxonomy.TermStore}
 */
SP.Taxonomy.TermStoreCollection.prototype.getById = function(id) {};

/**
 * @param {string} name
 * @return {!SP.Taxonomy.TermStore}
 */
SP.Taxonomy.TermStoreCollection.prototype.getByName = function(name) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.Taxonomy.TermStore = function() {};

/**
 * @return {string}
 */
SP.Taxonomy.TermStore.prototype.get_contentTypePublishingHub = function() {};

/**
 * @return {number}
 */
SP.Taxonomy.TermStore.prototype.get_defaultLanguage = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.Taxonomy.TermStore.prototype.set_defaultLanguage = function(value) {};

/**
 * @return {!SP.Taxonomy.TermGroupCollection}
 */
SP.Taxonomy.TermStore.prototype.get_groups = function() {};

/**
 * @return {!SP.Taxonomy.TermSet}
 */
SP.Taxonomy.TermStore.prototype.get_hashTagsTermSet = function() {};

/**
 * @return {!SP.Guid}
 */
SP.Taxonomy.TermStore.prototype.get_id = function() {};

/**
 * @return {boolean}
 */
SP.Taxonomy.TermStore.prototype.get_isOnline = function() {};

/**
 * @return {!SP.Taxonomy.TermSet}
 */
SP.Taxonomy.TermStore.prototype.get_keywordsTermSet = function() {};

/**
 * @return {!Array<number>}
 */
SP.Taxonomy.TermStore.prototype.get_languages = function() {};

/**
 * @return {string}
 */
SP.Taxonomy.TermStore.prototype.get_name = function() {};

/**
 * @return {!SP.Taxonomy.TermSet}
 */
SP.Taxonomy.TermStore.prototype.get_orphanedTermsTermSet = function() {};

/**
 * @return {!SP.Taxonomy.TermGroup}
 */
SP.Taxonomy.TermStore.prototype.get_systemGroup = function() {};

/**
 * @return {number}
 */
SP.Taxonomy.TermStore.prototype.get_workingLanguage = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.Taxonomy.TermStore.prototype.set_workingLanguage = function(value) {};

/**
 * @param {number} lcid
 * @return {void}
 */
SP.Taxonomy.TermStore.prototype.addLanguage = function(lcid) {};

/**
 * @return {void}
 */
SP.Taxonomy.TermStore.prototype.commitAll = function() {};

/**
 * @param {string} name
 * @param {!SP.Guid=} groupId
 * @return {!SP.Taxonomy.TermGroup}
 */
SP.Taxonomy.TermStore.prototype.createGroup = function(name, groupId) {};

/**
 * @param {number} lcid
 * @return {void}
 */
SP.Taxonomy.TermStore.prototype.deleteLanguage = function(lcid) {};

/**
 * @param {!SP.Taxonomy.ChangeInformation} changeInformation
 * @return {!SP.Taxonomy.ChangedItemCollection}
 */
SP.Taxonomy.TermStore.prototype.getChanges = function(changeInformation) {};

/**
 * @param {!SP.Guid} id
 * @return {!SP.Taxonomy.TermGroup}
 */
SP.Taxonomy.TermStore.prototype.getGroup = function(id) {};

/**
 * @param {!SP.Guid} termId
 * @return {!SP.Taxonomy.Term}
 */
SP.Taxonomy.TermStore.prototype.getTerm = function(termId) {};

/**
 * @param {!SP.Guid} termSetId
 * @param {!SP.Guid} termId
 * @return {!SP.Taxonomy.Term}
 */
SP.Taxonomy.TermStore.prototype.getTermInTermSet = function(termSetId, termId) {};

/**
 * @param {!Array<!SP.Guid>} termIds
 * @return {!SP.Taxonomy.TermCollection}
 */
SP.Taxonomy.TermStore.prototype.getTermsById = function(termIds) {};

/**
 * @param {string|!SP.Taxonomy.LabelMatchInformation} termLabel_or_labelMatchInformation
 * @param {boolean=} trimUnavailable
 * @return {!SP.Taxonomy.TermCollection}
 */
SP.Taxonomy.TermStore.prototype.getTerms = function(termLabel_or_labelMatchInformation, trimUnavailable) {};

/**
 * @param {string} termSetName
 * @param {number} lcid
 * @return {!SP.Taxonomy.TermSetCollection}
 */
SP.Taxonomy.TermStore.prototype.getTermSetsByName = function(termSetName, lcid) {};

/**
 * @param {!Array<string>} requiredTermLabels
 * @param {number} lcid
 * @return {!SP.Taxonomy.TermSetCollection}
 */
SP.Taxonomy.TermStore.prototype.getTermSetsByTermLabel = function(requiredTermLabels, lcid) {};

/**
 * @param {string|!SP.Taxonomy.CustomPropertyMatchInformation} customPropertyName_or_customPropertyMatchInformation
 * @param {boolean=} trimUnavailable
 * @return {!SP.Taxonomy.TermCollection}
 */
SP.Taxonomy.TermStore.prototype.getTermsWithCustomProperty = function(customPropertyName_or_customPropertyMatchInformation, trimUnavailable) {};

/**
 * @param {!SP.Guid} termSetId
 * @return {!SP.Taxonomy.TermSet}
 */
SP.Taxonomy.TermStore.prototype.getTermSet = function(termSetId) {};

/**
 * @param {!SP.Taxonomy.CustomPropertyMatchInformation} customPropertyMatchInformation
 * @return {!SP.Taxonomy.TermSetCollection}
 */
SP.Taxonomy.TermStore.prototype.getTermSetsWithCustomProperty = function(customPropertyMatchInformation) {};

/**
 * @return {void}
 */
SP.Taxonomy.TermStore.prototype.rollbackAll = function() {};

/**
 * @return {void}
 */
SP.Taxonomy.TermStore.prototype.updateCache = function() {};

/**
 * @param {!SP.Site} currentSite
 * @param {boolean} createIfMissing
 * @return {!SP.Taxonomy.TermGroup}
 */
SP.Taxonomy.TermStore.prototype.getSiteCollectionGroup = function(currentSite, createIfMissing) {};

/**
 * @param {!SP.Site} currentSite
 * @return {void}
 */
SP.Taxonomy.TermStore.prototype.updateUsedTermsOnSite = function(currentSite) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.Taxonomy.TaxonomyItem = function() {};

/**
 * @param {!SP.ClientContext} context
 * @param {string} name
 * @return {!SP.StringResult}
 */
SP.Taxonomy.TaxonomyItem.normalizeName = function(context, name) {};

/**
 * @return {!Date}
 */
SP.Taxonomy.TaxonomyItem.prototype.get_createdDate = function() {};

/**
 * @return {!SP.Guid}
 */
SP.Taxonomy.TaxonomyItem.prototype.get_id = function() {};

/**
 * @return {!Date}
 */
SP.Taxonomy.TaxonomyItem.prototype.get_lastModifiedDate = function() {};

/**
 * @return {string}
 */
SP.Taxonomy.TaxonomyItem.prototype.get_name = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Taxonomy.TaxonomyItem.prototype.set_name = function(value) {};

/**
 * @return {!SP.Taxonomy.TermStore}
 */
SP.Taxonomy.TaxonomyItem.prototype.get_termStore = function() {};

/**
 * @return {void}
 */
SP.Taxonomy.TaxonomyItem.prototype.deleteObject = function() {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.Taxonomy.TermGroupCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.Taxonomy.TermGroup}
 */
SP.Taxonomy.TermGroupCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.Taxonomy.TermGroup}
 */
SP.Taxonomy.TermGroupCollection.prototype.get_item = function(index) {};

/**
 * @param {!SP.Guid} id
 * @return {!SP.Taxonomy.TermGroup}
 */
SP.Taxonomy.TermGroupCollection.prototype.getById = function(id) {};

/**
 * @param {string} name
 * @return {!SP.Taxonomy.TermGroup}
 */
SP.Taxonomy.TermGroupCollection.prototype.getByName = function(name) {};
/**
 * @extends {SP.Taxonomy.TaxonomyItem}
 * @constructor
 * @struct
 */
SP.Taxonomy.TermGroup = function() {};

/**
 * @return {string}
 */
SP.Taxonomy.TermGroup.prototype.get_description = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Taxonomy.TermGroup.prototype.set_description = function(value) {};

/**
 * @return {boolean}
 */
SP.Taxonomy.TermGroup.prototype.get_isSiteCollectionGroup = function() {};

/**
 * @return {boolean}
 */
SP.Taxonomy.TermGroup.prototype.get_isSystemGroup = function() {};

/**
 * @return {!SP.Taxonomy.TermSetCollection}
 */
SP.Taxonomy.TermGroup.prototype.get_termSets = function() {};

/**
 * @param {string} name
 * @param {!SP.Guid} newTermSetId
 * @param {number} lcid
 * @return {!SP.Taxonomy.TermSet}
 */
SP.Taxonomy.TermGroup.prototype.createTermSet = function(name, newTermSetId, lcid) {};

/**
 * @return {!SP.StringResult}
 */
SP.Taxonomy.TermGroup.prototype.exportObject = function() {};

/**
 * @param {!SP.Taxonomy.ChangeInformation} changeInformation
 * @return {!SP.Taxonomy.ChangedItemCollection}
 */
SP.Taxonomy.TermGroup.prototype.getChanges = function(changeInformation) {};

/**
 * @param {!SP.Taxonomy.CustomPropertyMatchInformation} customPropertyMatchInformation
 * @return {!SP.Taxonomy.TermSetCollection}
 */
SP.Taxonomy.TermGroup.prototype.getTermSetsWithCustomProperty = function(customPropertyMatchInformation) {};
/**
 * @extends {SP.Taxonomy.TaxonomyItem}
 * @constructor
 * @struct
 */
SP.Taxonomy.TermSetItem = function() {};

/**
 * @return {!Object<string,string>}
 */
SP.Taxonomy.TermSetItem.prototype.get_customProperties = function() {};

/**
 * @return {string}
 */
SP.Taxonomy.TermSetItem.prototype.get_customSortOrder = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Taxonomy.TermSetItem.prototype.set_customSortOrder = function(value) {};

/**
 * @return {boolean}
 */
SP.Taxonomy.TermSetItem.prototype.get_isAvailableForTagging = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Taxonomy.TermSetItem.prototype.set_isAvailableForTagging = function(value) {};

/**
 * @return {string}
 */
SP.Taxonomy.TermSetItem.prototype.get_owner = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Taxonomy.TermSetItem.prototype.set_owner = function(value) {};

/**
 * @return {!SP.Taxonomy.TermCollection}
 */
SP.Taxonomy.TermSetItem.prototype.get_terms = function() {};

/**
 * @param {string} name
 * @param {number} lcid
 * @param {!SP.Guid} newTermId
 * @return {!SP.Taxonomy.Term}
 */
SP.Taxonomy.TermSetItem.prototype.createTerm = function(name, lcid, newTermId) {};

/**
 * @param {!SP.Taxonomy.Term} sourceTerm
 * @param {boolean} reuseBranch
 * @return {!SP.Taxonomy.Term}
 */
SP.Taxonomy.TermSetItem.prototype.reuseTerm = function(sourceTerm, reuseBranch) {};

/**
 * @param {!SP.Taxonomy.Term} sourceTerm
 * @return {!SP.Taxonomy.Term}
 */
SP.Taxonomy.TermSetItem.prototype.reuseTermWithPinning = function(sourceTerm) {};

/**
 * @param {string} name
 * @return {void}
 */
SP.Taxonomy.TermSetItem.prototype.deleteCustomProperty = function(name) {};

/**
 * @return {void}
 */
SP.Taxonomy.TermSetItem.prototype.deleteAllCustomProperties = function() {};

/**
 * @param {string} name
 * @param {string} value
 * @return {void}
 */
SP.Taxonomy.TermSetItem.prototype.setCustomProperty = function(name, value) {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.Taxonomy.TermSetCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.Taxonomy.TermSet}
 */
SP.Taxonomy.TermSetCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.Taxonomy.TermSet}
 */
SP.Taxonomy.TermSetCollection.prototype.get_item = function(index) {};

/**
 * @param {!SP.Guid} id
 * @return {!SP.Taxonomy.TermSet}
 */
SP.Taxonomy.TermSetCollection.prototype.getById = function(id) {};

/**
 * @param {string} name
 * @return {!SP.Taxonomy.TermSet}
 */
SP.Taxonomy.TermSetCollection.prototype.getByName = function(name) {};
/**
 * @extends {SP.Taxonomy.TermSetItem}
 * @constructor
 * @struct
 */
SP.Taxonomy.TermSet = function() {};

/**
 * @return {string}
 */
SP.Taxonomy.TermSet.prototype.get_contact = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Taxonomy.TermSet.prototype.set_contact = function(value) {};

/**
 * @return {string}
 */
SP.Taxonomy.TermSet.prototype.get_description = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Taxonomy.TermSet.prototype.set_description = function(value) {};

/**
 * @return {!SP.Taxonomy.TermGroup}
 */
SP.Taxonomy.TermSet.prototype.get_group = function() {};

/**
 * @return {boolean}
 */
SP.Taxonomy.TermSet.prototype.get_isOpenForTermCreation = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Taxonomy.TermSet.prototype.set_isOpenForTermCreation = function(value) {};

/**
 * @return {!Array<string>}
 */
SP.Taxonomy.TermSet.prototype.get_stakeholders = function() {};

/**
 * @param {string} stakeholderName
 * @return {void}
 */
SP.Taxonomy.TermSet.prototype.addStakeholder = function(stakeholderName) {};

/**
 * @return {!SP.Taxonomy.TermSet}
 */
SP.Taxonomy.TermSet.prototype.copy = function() {};

/**
 * @param {string} stakeholderName
 * @return {void}
 */
SP.Taxonomy.TermSet.prototype.deleteStakeholder = function(stakeholderName) {};

/**
 * @return {!SP.StringResult}
 */
SP.Taxonomy.TermSet.prototype.exportObject = function() {};

/**
 * @return {!SP.Taxonomy.TermCollection}
 */
SP.Taxonomy.TermSet.prototype.getAllTerms = function() {};

/**
 * @param {!SP.Taxonomy.ChangeInformation} changeInformation
 * @return {!SP.Taxonomy.ChangedItemCollection}
 */
SP.Taxonomy.TermSet.prototype.getChanges = function(changeInformation) {};

/**
 * @param {!SP.Guid} termId
 * @return {!SP.Taxonomy.Term}
 */
SP.Taxonomy.TermSet.prototype.getTerm = function(termId) {};

/**
 * @param {(number|!SP.Taxonomy.LabelMatchInformation)|string} pagingLimit_or_termLabel
 * @param {boolean=} trimUnavailable
 * @return {!SP.Taxonomy.TermCollection}
 */
SP.Taxonomy.TermSet.prototype.getTerms = function(pagingLimit_or_termLabel, trimUnavailable) {};

/**
 * @param {string|!SP.Taxonomy.CustomPropertyMatchInformation} customPropertyName_or_customPropertyMatchInformation
 * @param {boolean=} trimUnavailable
 * @return {!SP.Taxonomy.TermCollection}
 */
SP.Taxonomy.TermSet.prototype.getTermsWithCustomProperty = function(customPropertyName_or_customPropertyMatchInformation, trimUnavailable) {};

/**
 * @param {!SP.Taxonomy.TermGroup} targetGroup
 * @return {void}
 */
SP.Taxonomy.TermSet.prototype.move = function(targetGroup) {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.Taxonomy.TermCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.Taxonomy.Term}
 */
SP.Taxonomy.TermCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.Taxonomy.Term}
 */
SP.Taxonomy.TermCollection.prototype.get_item = function(index) {};

/**
 * @param {!SP.Guid} id
 * @return {!SP.Taxonomy.Term}
 */
SP.Taxonomy.TermCollection.prototype.getById = function(id) {};

/**
 * @param {string} name
 * @return {!SP.Taxonomy.Term}
 */
SP.Taxonomy.TermCollection.prototype.getByName = function(name) {};
/**
 * @extends {SP.Taxonomy.TermSetItem}
 * @constructor
 * @struct
 */
SP.Taxonomy.Term = function() {};

/**
 * @return {string}
 */
SP.Taxonomy.Term.prototype.get_description = function() {};

/**
 * @return {boolean}
 */
SP.Taxonomy.Term.prototype.get_isDeprecated = function() {};

/**
 * @return {boolean}
 */
SP.Taxonomy.Term.prototype.get_isKeyword = function() {};

/**
 * @return {boolean}
 */
SP.Taxonomy.Term.prototype.get_isPinned = function() {};

/**
 * @return {boolean}
 */
SP.Taxonomy.Term.prototype.get_isPinnedRoot = function() {};

/**
 * @return {boolean}
 */
SP.Taxonomy.Term.prototype.get_isReused = function() {};

/**
 * @return {boolean}
 */
SP.Taxonomy.Term.prototype.get_isRoot = function() {};

/**
 * @return {boolean}
 */
SP.Taxonomy.Term.prototype.get_isSourceTerm = function() {};

/**
 * @return {!SP.Taxonomy.LabelCollection}
 */
SP.Taxonomy.Term.prototype.get_labels = function() {};

/**
 * @return {!Object<string,string>}
 */
SP.Taxonomy.Term.prototype.get_localCustomProperties = function() {};

/**
 * @return {!Array<!SP.Guid>}
 */
SP.Taxonomy.Term.prototype.get_mergedTermIds = function() {};

/**
 * @return {!SP.Taxonomy.Term}
 */
SP.Taxonomy.Term.prototype.get_parent = function() {};

/**
 * @return {string}
 */
SP.Taxonomy.Term.prototype.get_pathOfTerm = function() {};

/**
 * @return {!SP.Taxonomy.TermSet}
 */
SP.Taxonomy.Term.prototype.get_pinSourceTermSet = function() {};

/**
 * @return {!SP.Taxonomy.TermCollection}
 */
SP.Taxonomy.Term.prototype.get_reusedTerms = function() {};

/**
 * @return {!SP.Taxonomy.Term}
 */
SP.Taxonomy.Term.prototype.get_sourceTerm = function() {};

/**
 * @return {number}
 */
SP.Taxonomy.Term.prototype.get_termsCount = function() {};

/**
 * @return {!SP.Taxonomy.TermSet}
 */
SP.Taxonomy.Term.prototype.get_termSet = function() {};

/**
 * @return {!SP.Taxonomy.TermSetCollection}
 */
SP.Taxonomy.Term.prototype.get_termSets = function() {};

/**
 * @param {boolean} doCopyChildren
 * @return {!SP.Taxonomy.Term}
 */
SP.Taxonomy.Term.prototype.copy = function(doCopyChildren) {};

/**
 * @param {string} labelName
 * @param {number} lcid
 * @param {boolean} isDefault
 * @return {!SP.Taxonomy.Label}
 */
SP.Taxonomy.Term.prototype.createLabel = function(labelName, lcid, isDefault) {};

/**
 * @param {string} name
 * @return {void}
 */
SP.Taxonomy.Term.prototype.deleteLocalCustomProperty = function(name) {};

/**
 * @return {void}
 */
SP.Taxonomy.Term.prototype.deleteAllLocalCustomProperties = function() {};

/**
 * @param {boolean} doDepricate
 * @return {void}
 */
SP.Taxonomy.Term.prototype.deprecate = function(doDepricate) {};

/**
 * @param {number} lcid
 * @return {!SP.Taxonomy.LabelCollection}
 */
SP.Taxonomy.Term.prototype.getAllLabels = function(lcid) {};

/**
 * @param {number} lcid
 * @return {!SP.Taxonomy.Label}
 */
SP.Taxonomy.Term.prototype.getDefaultLabel = function(lcid) {};

/**
 * @param {number} lcid
 * @return {!SP.StringResult}
 */
SP.Taxonomy.Term.prototype.getDescription = function(lcid) {};

/**
 * @param {number|string} pagingLimit_or_termLabel
 * @param {number=} lcid
 * @param {boolean=} defaultLabelOnly
 * @param {SP.Taxonomy.StringMatchOption=} stringMatchOption
 * @param {number=} resultCollectionSize
 * @param {boolean=} trimUnavailable
 * @return {!SP.Taxonomy.TermCollection}
 */
SP.Taxonomy.Term.prototype.getTerms = function(pagingLimit_or_termLabel, lcid, defaultLabelOnly, stringMatchOption, resultCollectionSize, trimUnavailable) {};

/**
 * @param {!SP.Taxonomy.Term} termToMerge
 * @return {void}
 */
SP.Taxonomy.Term.prototype.merge = function(termToMerge) {};

/**
 * @param {!SP.Taxonomy.TermSetItem} newParnt
 * @return {void}
 */
SP.Taxonomy.Term.prototype.move = function(newParnt) {};

/**
 * @param {!SP.Taxonomy.Term} reusedTerm
 * @return {void}
 */
SP.Taxonomy.Term.prototype.reassignSourceTerm = function(reusedTerm) {};

/**
 * @param {string} description
 * @param {number} lcid
 * @return {void}
 */
SP.Taxonomy.Term.prototype.setDescription = function(description, lcid) {};

/**
 * @param {string} name
 * @param {string} value
 * @return {void}
 */
SP.Taxonomy.Term.prototype.setLocalCustomProperty = function(name, value) {};

/**
 * @param {!SP.Taxonomy.Term} ancestorTerm
 * @return {!SP.BooleanResult}
 */
SP.Taxonomy.Term.prototype.getIsDescendantOf = function(ancestorTerm) {};

/**
 * @param {number} lcid
 * @return {!SP.StringResult}
 */
SP.Taxonomy.Term.prototype.getPath = function(lcid) {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.Taxonomy.LabelCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.Taxonomy.Label}
 */
SP.Taxonomy.LabelCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.Taxonomy.Label}
 */
SP.Taxonomy.LabelCollection.prototype.get_item = function(index) {};

/**
 * @param {string} name
 * @return {!SP.Taxonomy.Label}
 */
SP.Taxonomy.LabelCollection.prototype.getByValue = function(name) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.Taxonomy.Label = function() {};

/**
 * @return {boolean}
 */
SP.Taxonomy.Label.prototype.get_isDefaultForLanguage = function() {};

/**
 * @return {number}
 */
SP.Taxonomy.Label.prototype.get_language = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.Taxonomy.Label.prototype.set_language = function(value) {};

/**
 * @return {!SP.Taxonomy.Term}
 */
SP.Taxonomy.Label.prototype.get_term = function() {};

/**
 * @return {string}
 */
SP.Taxonomy.Label.prototype.get_value = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Taxonomy.Label.prototype.set_value = function(value) {};

/**
 * @return {void}
 */
SP.Taxonomy.Label.prototype.deleteObject = function() {};

/**
 * @return {void}
 */
SP.Taxonomy.Label.prototype.setAsDefaultForLanguage = function() {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientContext} context
 */
SP.Taxonomy.LabelMatchInformation = function(context) {};

/**
 * @return {boolean}
 */
SP.Taxonomy.LabelMatchInformation.prototype.get_defaultLabelOnly = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Taxonomy.LabelMatchInformation.prototype.set_defaultLabelOnly = function(value) {};

/**
 * @return {boolean}
 */
SP.Taxonomy.LabelMatchInformation.prototype.get_excludeKeyword = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Taxonomy.LabelMatchInformation.prototype.set_excludeKeyword = function(value) {};

/**
 * @return {number}
 */
SP.Taxonomy.LabelMatchInformation.prototype.get_lcid = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.Taxonomy.LabelMatchInformation.prototype.set_lcid = function(value) {};

/**
 * @return {number}
 */
SP.Taxonomy.LabelMatchInformation.prototype.get_resultCollectionSize = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.Taxonomy.LabelMatchInformation.prototype.set_resultCollectionSize = function(value) {};

/**
 * @return {SP.Taxonomy.StringMatchOption}
 */
SP.Taxonomy.LabelMatchInformation.prototype.get_stringMatchOption = function() {};

/**
 * @param {SP.Taxonomy.StringMatchOption} value
 * @return {void}
 */
SP.Taxonomy.LabelMatchInformation.prototype.set_stringMatchOption = function(value) {};

/**
 * @return {string}
 */
SP.Taxonomy.LabelMatchInformation.prototype.get_termLabel = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Taxonomy.LabelMatchInformation.prototype.set_termLabel = function(value) {};

/**
 * @return {boolean}
 */
SP.Taxonomy.LabelMatchInformation.prototype.get_trimDeprecated = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Taxonomy.LabelMatchInformation.prototype.set_trimDeprecated = function(value) {};

/**
 * @return {boolean}
 */
SP.Taxonomy.LabelMatchInformation.prototype.get_trimUnavailable = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Taxonomy.LabelMatchInformation.prototype.set_trimUnavailable = function(value) {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientContext} context
 */
SP.Taxonomy.CustomPropertyMatchInformation = function(context) {};

/**
 * @return {string}
 */
SP.Taxonomy.CustomPropertyMatchInformation.prototype.get_customPropertyName = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Taxonomy.CustomPropertyMatchInformation.prototype.set_customPropertyName = function(value) {};

/**
 * @return {string}
 */
SP.Taxonomy.CustomPropertyMatchInformation.prototype.get_customPropertyValue = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Taxonomy.CustomPropertyMatchInformation.prototype.set_customPropertyValue = function(value) {};

/**
 * @return {number}
 */
SP.Taxonomy.CustomPropertyMatchInformation.prototype.get_resultCollectionSize = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.Taxonomy.CustomPropertyMatchInformation.prototype.set_resultCollectionSize = function(value) {};

/**
 * @return {SP.Taxonomy.StringMatchOption}
 */
SP.Taxonomy.CustomPropertyMatchInformation.prototype.get_stringMatchOption = function() {};

/**
 * @param {SP.Taxonomy.StringMatchOption} value
 * @return {void}
 */
SP.Taxonomy.CustomPropertyMatchInformation.prototype.set_stringMatchOption = function(value) {};

/**
 * @return {boolean}
 */
SP.Taxonomy.CustomPropertyMatchInformation.prototype.get_trimUnavailable = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Taxonomy.CustomPropertyMatchInformation.prototype.set_trimUnavailable = function(value) {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientContext} context
 */
SP.Taxonomy.ChangeInformation = function(context) {};

/**
 * @return {SP.Taxonomy.ChangeItemType}
 */
SP.Taxonomy.ChangeInformation.prototype.get_itemType = function() {};

/**
 * @param {SP.Taxonomy.ChangeItemType} value
 * @return {void}
 */
SP.Taxonomy.ChangeInformation.prototype.set_itemType = function(value) {};

/**
 * @return {SP.Taxonomy.ChangeOperationType}
 */
SP.Taxonomy.ChangeInformation.prototype.get_operationType = function() {};

/**
 * @param {SP.Taxonomy.ChangeOperationType} value
 * @return {void}
 */
SP.Taxonomy.ChangeInformation.prototype.set_operationType = function(value) {};

/**
 * @return {!Date}
 */
SP.Taxonomy.ChangeInformation.prototype.get_startTime = function() {};

/**
 * @param {!Date} value
 * @return {void}
 */
SP.Taxonomy.ChangeInformation.prototype.set_startTime = function(value) {};

/**
 * @return {number}
 */
SP.Taxonomy.ChangeInformation.prototype.get_withinTimeSpan = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.Taxonomy.ChangeInformation.prototype.set_withinTimeSpan = function(value) {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.Taxonomy.ChangedItemCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.Taxonomy.ChangedItem}
 */
SP.Taxonomy.ChangedItemCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.Taxonomy.ChangedItem}
 */
SP.Taxonomy.ChangedItemCollection.prototype.get_item = function(index) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.Taxonomy.ChangedItem = function() {};

/**
 * @return {string}
 */
SP.Taxonomy.ChangedItem.prototype.get_changedBy = function() {};

/**
 * @return {!Date}
 */
SP.Taxonomy.ChangedItem.prototype.get_changedTime = function() {};

/**
 * @return {!SP.Guid}
 */
SP.Taxonomy.ChangedItem.prototype.get_id = function() {};

/**
 * @return {SP.Taxonomy.ChangeItemType}
 */
SP.Taxonomy.ChangedItem.prototype.get_itemType = function() {};

/**
 * @return {SP.Taxonomy.ChangeOperationType}
 */
SP.Taxonomy.ChangedItem.prototype.get_operation = function() {};
/**
 * @extends {SP.Taxonomy.ChangedItem}
 * @constructor
 * @struct
 */
SP.Taxonomy.ChangedSite = function() {};

/**
 * @return {!SP.Guid}
 */
SP.Taxonomy.ChangedSite.prototype.get_siteId = function() {};

/**
 * @return {!SP.Guid}
 */
SP.Taxonomy.ChangedSite.prototype.get_termId = function() {};

/**
 * @return {!SP.Guid}
 */
SP.Taxonomy.ChangedSite.prototype.get_termSetId = function() {};
/**
 * @extends {SP.Taxonomy.ChangedItem}
 * @constructor
 * @struct
 */
SP.Taxonomy.ChangedGroup = function() {};
/**
 * @extends {SP.Taxonomy.ChangedItem}
 * @constructor
 * @struct
 */
SP.Taxonomy.ChangedTerm = function() {};

/**
 * @return {!Array<string>}
 */
SP.Taxonomy.ChangedTerm.prototype.get_changedCustomProperties = function() {};

/**
 * @return {!Array<string>}
 */
SP.Taxonomy.ChangedTerm.prototype.get_changedLocalCustomProperties = function() {};

/**
 * @return {!SP.Guid}
 */
SP.Taxonomy.ChangedTerm.prototype.get_groupId = function() {};

/**
 * @return {!Array<number>}
 */
SP.Taxonomy.ChangedTerm.prototype.get_lcidsForChangedDescriptions = function() {};

/**
 * @return {!Array<number>}
 */
SP.Taxonomy.ChangedTerm.prototype.get_lcidsForChangedLabels = function() {};

/**
 * @return {!SP.Guid}
 */
SP.Taxonomy.ChangedTerm.prototype.get_termSetId = function() {};
/**
 * @extends {SP.Taxonomy.ChangedItem}
 * @constructor
 * @struct
 */
SP.Taxonomy.ChangedTermSet = function() {};

/**
 * @return {!SP.Guid}
 */
SP.Taxonomy.ChangedTermSet.prototype.get_fromGroupId = function() {};

/**
 * @return {!SP.Guid}
 */
SP.Taxonomy.ChangedTermSet.prototype.get_groupId = function() {};
/**
 * @extends {SP.Taxonomy.ChangedItem}
 * @constructor
 * @struct
 */
SP.Taxonomy.ChangedTermStore = function() {};

/**
 * @return {number}
 */
SP.Taxonomy.ChangedTermStore.prototype.get_changedLanguage = function() {};

/**
 * @return {boolean}
 */
SP.Taxonomy.ChangedTermStore.prototype.get_isDefaultLanguageChanged = function() {};

/**
 * @return {boolean}
 */
SP.Taxonomy.ChangedTermStore.prototype.get_isFullFarmRestore = function() {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientContext} context
 * @param {!SP.FieldCollection} fields
 * @param {string} filedName
 */
SP.Taxonomy.TaxonomyField = function(context, fields, filedName) {};

/**
 * @return {!SP.Guid}
 */
SP.Taxonomy.TaxonomyField.prototype.get_anchorId = function() {};

/**
 * @param {!SP.Guid} value
 * @return {void}
 */
SP.Taxonomy.TaxonomyField.prototype.set_anchorId = function(value) {};

/**
 * @return {boolean}
 */
SP.Taxonomy.TaxonomyField.prototype.get_createValuesInEditForm = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Taxonomy.TaxonomyField.prototype.set_createValuesInEditForm = function(value) {};

/**
 * @return {boolean}
 */
SP.Taxonomy.TaxonomyField.prototype.get_isAnchorValid = function() {};

/**
 * @return {boolean}
 */
SP.Taxonomy.TaxonomyField.prototype.get_isKeyword = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Taxonomy.TaxonomyField.prototype.set_isKeyword = function(value) {};

/**
 * @return {boolean}
 */
SP.Taxonomy.TaxonomyField.prototype.get_isPathRendered = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Taxonomy.TaxonomyField.prototype.set_isPathRendered = function(value) {};

/**
 * @return {boolean}
 */
SP.Taxonomy.TaxonomyField.prototype.get_isTermSetValid = function() {};

/**
 * @return {boolean}
 */
SP.Taxonomy.TaxonomyField.prototype.get_open = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Taxonomy.TaxonomyField.prototype.set_open = function(value) {};

/**
 * @return {!SP.Guid}
 */
SP.Taxonomy.TaxonomyField.prototype.get_sspId = function() {};

/**
 * @param {!SP.Guid} value
 * @return {void}
 */
SP.Taxonomy.TaxonomyField.prototype.set_sspId = function(value) {};

/**
 * @return {string}
 */
SP.Taxonomy.TaxonomyField.prototype.get_targetTemplate = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Taxonomy.TaxonomyField.prototype.set_targetTemplate = function(value) {};

/**
 * @return {!SP.Guid}
 */
SP.Taxonomy.TaxonomyField.prototype.get_termSetId = function() {};

/**
 * @param {!SP.Guid} value
 * @return {void}
 */
SP.Taxonomy.TaxonomyField.prototype.set_termSetId = function(value) {};

/**
 * @return {!SP.Guid}
 */
SP.Taxonomy.TaxonomyField.prototype.get_textField = function() {};

/**
 * @return {!SP.Guid}
 */
SP.Taxonomy.TaxonomyField.prototype.get_userCreated = function() {};

/**
 * @param {!SP.Guid} value
 * @return {void}
 */
SP.Taxonomy.TaxonomyField.prototype.set_userCreated = function(value) {};

/**
 * @param {!SP.Taxonomy.TaxonomyFieldValue} value
 * @return {!SP.StringResult}
 */
SP.Taxonomy.TaxonomyField.prototype.getFieldValueAsText = function(value) {};

/**
 * @param {string} value
 * @return {!SP.Taxonomy.TaxonomyFieldValue}
 */
SP.Taxonomy.TaxonomyField.prototype.getFieldValueAsTaxonomyFieldValue = function(value) {};

/**
 * @param {string} value
 * @return {!SP.Taxonomy.TaxonomyFieldValueCollection}
 */
SP.Taxonomy.TaxonomyField.prototype.getFieldValueAsTaxonomyFieldValueCollection = function(value) {};

/**
 * @param {!SP.ListItem<?>} listItem
 * @param {!SP.Taxonomy.Term} term
 * @param {number} lcid
 * @return {void}
 */
SP.Taxonomy.TaxonomyField.prototype.setFieldValueByTerm = function(listItem, term, lcid) {};

/**
 * @param {!SP.ListItem<?>} listItem
 * @param {!SP.Taxonomy.TermCollection} terms
 * @param {number} lcid
 * @return {void}
 */
SP.Taxonomy.TaxonomyField.prototype.setFieldValueByTermCollection = function(listItem, terms, lcid) {};

/**
 * @param {!SP.ListItem<?>} listItem
 * @param {!Array<!SP.Taxonomy.Term>} terms
 * @param {number} lcid
 * @return {void}
 */
SP.Taxonomy.TaxonomyField.prototype.setFieldValueByCollection = function(listItem, terms, lcid) {};

/**
 * @param {!SP.ListItem<?>} listItem
 * @param {!SP.Taxonomy.TaxonomyFieldValue} taxValue
 * @return {void}
 */
SP.Taxonomy.TaxonomyField.prototype.setFieldValueByValue = function(listItem, taxValue) {};

/**
 * @param {!SP.ListItem<?>} listItem
 * @param {!SP.Taxonomy.TaxonomyFieldValueCollection} taxValueCollection
 * @return {void}
 */
SP.Taxonomy.TaxonomyField.prototype.setFieldValueByValueCollection = function(listItem, taxValueCollection) {};

/**
 * @param {!SP.Taxonomy.TaxonomyFieldValue} value
 * @return {!SP.StringResult}
 */
SP.Taxonomy.TaxonomyField.prototype.getFieldValueAsHtml = function(value) {};

/**
 * @param {!SP.Taxonomy.TaxonomyFieldValue} value
 * @return {!SP.StringResult}
 */
SP.Taxonomy.TaxonomyField.prototype.getValidatedString = function(value) {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientContext} context
 * @param {string} fieldValue
 * @param {!SP.Field} creatingField
 */
SP.Taxonomy.TaxonomyFieldValueCollection = function(context, fieldValue, creatingField) {};

/**
 * @param {number} index
 * @return {!SP.Taxonomy.TaxonomyFieldValue}
 */
SP.Taxonomy.TaxonomyFieldValueCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.Taxonomy.TaxonomyFieldValue}
 */
SP.Taxonomy.TaxonomyFieldValueCollection.prototype.get_item = function(index) {};

/**
 * @param {string} text
 * @return {void}
 */
SP.Taxonomy.TaxonomyFieldValueCollection.prototype.populateFromLabelGuidPairs = function(text) {};
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
SP.Taxonomy.TaxonomyFieldValue = function() {};

/**
 * @return {string}
 */
SP.Taxonomy.TaxonomyFieldValue.prototype.get_label = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Taxonomy.TaxonomyFieldValue.prototype.set_label = function(value) {};

/**
 * @return {!SP.Guid}
 */
SP.Taxonomy.TaxonomyFieldValue.prototype.get_termGuid = function() {};

/**
 * @param {!SP.Guid} value
 * @return {void}
 */
SP.Taxonomy.TaxonomyFieldValue.prototype.set_termGuid = function(value) {};

/**
 * @return {number}
 */
SP.Taxonomy.TaxonomyFieldValue.prototype.get_wssId = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.Taxonomy.TaxonomyFieldValue.prototype.set_wssId = function(value) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.Taxonomy.MobileTaxonomyField = function() {};

/**
 * @return {boolean}
 */
SP.Taxonomy.MobileTaxonomyField.prototype.get_readOnly = function() {};
/** @const */
SP.DocumentSet = {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.DocumentSet.DocumentSet = function() {};

/**
 * @param {!SP.ClientContext} context
 * @param {!SP.Folder} parentFolder
 * @param {string} name
 * @param {!SP.ContentTypeId} ctid
 * @return {!SP.StringResult}
 */
SP.DocumentSet.DocumentSet.create = function(context, parentFolder, name, ctid) {};
/** @const */
SP.Video = {};
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
SP.Video.EmbedCodeConfiguration = function() {};

/**
 * @return {boolean}
 */
SP.Video.EmbedCodeConfiguration.prototype.get_autoPlay = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
SP.Video.EmbedCodeConfiguration.prototype.set_autoPlay = function(value) {};

/**
 * @return {boolean}
 */
SP.Video.EmbedCodeConfiguration.prototype.get_displayTitle = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
SP.Video.EmbedCodeConfiguration.prototype.set_displayTitle = function(value) {};

/**
 * @return {boolean}
 */
SP.Video.EmbedCodeConfiguration.prototype.get_linkToOwnerProfilePage = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
SP.Video.EmbedCodeConfiguration.prototype.set_linkToOwnerProfilePage = function(value) {};

/**
 * @return {boolean}
 */
SP.Video.EmbedCodeConfiguration.prototype.get_linkToVideoHomePage = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
SP.Video.EmbedCodeConfiguration.prototype.set_linkToVideoHomePage = function(value) {};

/**
 * @return {boolean}
 */
SP.Video.EmbedCodeConfiguration.prototype.get_loop = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
SP.Video.EmbedCodeConfiguration.prototype.set_loop = function(value) {};

/**
 * @return {number}
 */
SP.Video.EmbedCodeConfiguration.prototype.get_pixelHeight = function() {};

/**
 * @param {number} value
 * @return {number}
 */
SP.Video.EmbedCodeConfiguration.prototype.set_pixelHeight = function(value) {};

/**
 * @return {number}
 */
SP.Video.EmbedCodeConfiguration.prototype.get_pixelWidth = function() {};

/**
 * @param {number} value
 * @return {number}
 */
SP.Video.EmbedCodeConfiguration.prototype.set_pixelWidth = function(value) {};

/**
 * @return {number}
 */
SP.Video.EmbedCodeConfiguration.prototype.get_startTime = function() {};

/**
 * @param {number} value
 * @return {number}
 */
SP.Video.EmbedCodeConfiguration.prototype.set_startTime = function(value) {};

/**
 * @return {string}
 */
SP.Video.EmbedCodeConfiguration.prototype.get_previewImagePath = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.Video.EmbedCodeConfiguration.prototype.set_previewImagePath = function(value) {};
/**
 * @extends {SP.DocumentSet.DocumentSet}
 * @constructor
 * @struct
 */
SP.Video.VideoSet = function() {};

/**
 * @param {!SP.ClientContext} context
 * @param {!SP.Folder} parentFolder
 * @param {string} name
 * @param {!SP.ContentTypeId} ctid
 * @return {!SP.StringResult}
 */
SP.Video.VideoSet.createVideo = function(context, parentFolder, name, ctid) {};

/**
 * @param {!SP.ClientContext} context
 * @param {!SP.List<?>} list
 * @param {string} fileName
 * @param {!Array<?>} file
 * @param {boolean} overwriteIfExists
 * @param {string} parentFolderPath
 * @return {!SP.StringResult}
 */
SP.Video.VideoSet.uploadVideo = function(context, list, fileName, file, overwriteIfExists, parentFolderPath) {};

/**
 * @param {!SP.ClientContext} context
 * @param {string} videoPath
 * @param {!SP.Video.EmbedCodeConfiguration} properties
 * @return {!SP.StringResult}
 */
SP.Video.VideoSet.getEmbedCode = function(context, videoPath, properties) {};

/**
 * @param {!SP.ClientContext} context
 * @param {!SP.File} videoFile
 * @return {!SP.ListItem<?>}
 */
SP.Video.VideoSet.migrateVideo = function(context, videoFile) {};
/** @const */
SP.UI = {};
/** @const */
SP.UI.ApplicationPages = {};

/**
 * @constructor
 * @struct
 * @param {?} entities
 */
SP.UI.ApplicationPages.SelectorSelectionEventArgs = function(entities) {};

/**
 * @return {?}
 */
SP.UI.ApplicationPages.SelectorSelectionEventArgs.prototype.get_entities = function() {};
/**
 * @record
 * @struct
 */
SP.UI.ApplicationPages.ISelectorComponent = function() {};

/**
 * @return {?}
 */
SP.UI.ApplicationPages.ISelectorComponent.prototype.get_selectedEntities = function() {};

/**
 * @param {?} value
 * @return {void}
 */
SP.UI.ApplicationPages.ISelectorComponent.prototype.set_selectedEntities = function(value) {};

/**
 * @return {function(?, !Sys.EventArgs): void}
 */
SP.UI.ApplicationPages.ISelectorComponent.prototype.get_callback = function() {};

/**
 * @param {function(?, !Sys.EventArgs): void} value
 * @return {void}
 */
SP.UI.ApplicationPages.ISelectorComponent.prototype.set_callback = function(value) {};

/**
 * @return {string}
 */
SP.UI.ApplicationPages.ISelectorComponent.prototype.get_scopeKey = function() {};

/**
 * @return {SP.UI.ApplicationPages.SelectorType}
 */
SP.UI.ApplicationPages.ISelectorComponent.prototype.get_componentType = function() {};

/**
 * @param {!SP.UI.ApplicationPages.ResolveEntity} ent
 * @return {void}
 */
SP.UI.ApplicationPages.ISelectorComponent.prototype.revertTo = function(ent) {};

/**
 * @param {!SP.UI.ApplicationPages.ResolveEntity} ent
 * @return {void}
 */
SP.UI.ApplicationPages.ISelectorComponent.prototype.removeEntity = function(ent) {};

/**
 * @param {!SP.UI.ApplicationPages.ResolveEntity} ent
 * @return {void}
 */
SP.UI.ApplicationPages.ISelectorComponent.prototype.setEntity = function(ent) {};

/** @const */
SP.UI.ApplicationPages.SelectorType = {};
/** @const {number} */
SP.UI.ApplicationPages.SelectorType.none;
/** @const {number} */
SP.UI.ApplicationPages.SelectorType.resource;
/** @const {number} */
SP.UI.ApplicationPages.SelectorType.people;
/** @const {number} */
SP.UI.ApplicationPages.SelectorType.people_And_Resource;
/** @const {number} */
SP.UI.ApplicationPages.SelectorType.event;

/**
 * @constructor
 * @struct
 */
SP.UI.ApplicationPages.CalendarSelector = function() {};

/**
 * @return {!SP.UI.ApplicationPages.CalendarSelector}
 */
SP.UI.ApplicationPages.CalendarSelector.instance = function() {};

/**
 * @param {!SP.UI.ApplicationPages.ISelectorComponent} selector
 * @return {void}
 */
SP.UI.ApplicationPages.CalendarSelector.prototype.registerSelector = function(selector) {};

/**
 * @param {SP.UI.ApplicationPages.SelectorType} type
 * @param {string} scopeKey
 * @return {!SP.UI.ApplicationPages.ISelectorComponent}
 */
SP.UI.ApplicationPages.CalendarSelector.prototype.getSelector = function(type, scopeKey) {};

/**
 * @param {string} scopeKey
 * @param {boolean} people
 * @param {boolean} resource
 * @param {function(?, !SP.UI.ApplicationPages.SelectorSelectionEventArgs): void} handler
 * @return {void}
 */
SP.UI.ApplicationPages.CalendarSelector.prototype.addHandler = function(scopeKey, people, resource, handler) {};

/**
 * @param {string} scopeKey
 * @param {!SP.UI.ApplicationPages.ResolveEntity} ent
 * @return {void}
 */
SP.UI.ApplicationPages.CalendarSelector.prototype.revertTo = function(scopeKey, ent) {};

/**
 * @param {string} scopeKey
 * @param {!SP.UI.ApplicationPages.ResolveEntity} ent
 * @return {void}
 */
SP.UI.ApplicationPages.CalendarSelector.prototype.removeEntity = function(scopeKey, ent) {};

/**
 * @constructor
 * @struct
 * @param {string} key
 * @param {SP.UI.ApplicationPages.SelectorType} type
 */
SP.UI.ApplicationPages.BaseSelectorComponent = function(key, type) {};

/**
 * @return {string}
 */
SP.UI.ApplicationPages.BaseSelectorComponent.prototype.get_scopeKey = function() {};

/**
 * @return {SP.UI.ApplicationPages.SelectorType}
 */
SP.UI.ApplicationPages.BaseSelectorComponent.prototype.get_componentType = function() {};

/**
 * @return {?}
 */
SP.UI.ApplicationPages.BaseSelectorComponent.prototype.get_selectedEntities = function() {};

/**
 * @param {?} value
 * @return {void}
 */
SP.UI.ApplicationPages.BaseSelectorComponent.prototype.set_selectedEntities = function(value) {};

/**
 * @return {function(?, !Sys.EventArgs): void}
 */
SP.UI.ApplicationPages.BaseSelectorComponent.prototype.get_callback = function() {};

/**
 * @param {function(?, !Sys.EventArgs): void} value
 * @return {void}
 */
SP.UI.ApplicationPages.BaseSelectorComponent.prototype.set_callback = function(value) {};

/**
 * @param {!SP.UI.ApplicationPages.ResolveEntity} ent
 * @return {void}
 */
SP.UI.ApplicationPages.BaseSelectorComponent.prototype.revertTo = function(ent) {};

/**
 * @param {!SP.UI.ApplicationPages.ResolveEntity} ent
 * @return {void}
 */
SP.UI.ApplicationPages.BaseSelectorComponent.prototype.removeEntity = function(ent) {};

/**
 * @param {!SP.UI.ApplicationPages.ResolveEntity} ent
 * @return {void}
 */
SP.UI.ApplicationPages.BaseSelectorComponent.prototype.setEntity = function(ent) {};
/**
 * @record
 * @struct
 */
SP.UI.ApplicationPages.ICalendarController = function() {};

/**
 * @param {string} date
 * @return {void}
 */
SP.UI.ApplicationPages.ICalendarController.prototype.moveToDate = function(date) {};

/**
 * @param {string} viewType
 * @return {void}
 */
SP.UI.ApplicationPages.ICalendarController.prototype.moveToViewType = function(viewType) {};

/**
 * @param {SP.UI.ApplicationPages.CalendarScope} scope
 * @param {string} date
 * @return {void}
 */
SP.UI.ApplicationPages.ICalendarController.prototype.moveToViewDate = function(scope, date) {};

/**
 * @param {SP.UI.ApplicationPages.CalendarScope} scope
 * @return {void}
 */
SP.UI.ApplicationPages.ICalendarController.prototype.moveToView = function(scope) {};

/**
 * @return {void}
 */
SP.UI.ApplicationPages.ICalendarController.prototype.expandAll = function() {};

/**
 * @return {void}
 */
SP.UI.ApplicationPages.ICalendarController.prototype.collapseAll = function() {};

/**
 * @return {void}
 */
SP.UI.ApplicationPages.ICalendarController.prototype.refreshItems = function() {};

/**
 * @return {SP.UI.ApplicationPages.CalendarScope}
 */
SP.UI.ApplicationPages.ICalendarController.prototype.getActiveScope = function() {};

/**
 * @param {string} contentTypeId
 * @return {void}
 */
SP.UI.ApplicationPages.ICalendarController.prototype.newItemDialog = function(contentTypeId) {};

/**
 * @param {string} itemId
 * @return {void}
 */
SP.UI.ApplicationPages.ICalendarController.prototype.deleteItem = function(itemId) {};

/** @const */
SP.UI.ApplicationPages.CalendarScope = {};
/** @const {number} */
SP.UI.ApplicationPages.CalendarScope.nothing;
/** @const {number} */
SP.UI.ApplicationPages.CalendarScope.monthly;
/** @const {number} */
SP.UI.ApplicationPages.CalendarScope.weeklyGroup;
/** @const {number} */
SP.UI.ApplicationPages.CalendarScope.daily;
/** @const {number} */
SP.UI.ApplicationPages.CalendarScope.weekly;
/** @const {number} */
SP.UI.ApplicationPages.CalendarScope.dailyGroup;
/**
 * @constructor
 * @struct
 */
SP.UI.ApplicationPages.CalendarInstanceRepository = function() {};

/**
 * @param {string} instanceId
 * @param {!SP.UI.ApplicationPages.ICalendarController} contoller
 * @return {void}
 */
SP.UI.ApplicationPages.CalendarInstanceRepository.registerInstance = function(instanceId, contoller) {};

/**
 * @param {string} instanceId
 * @return {!SP.UI.ApplicationPages.ICalendarController}
 */
SP.UI.ApplicationPages.CalendarInstanceRepository.lookupInstance = function(instanceId) {};

/**
 * @return {!SP.UI.ApplicationPages.ICalendarController}
 */
SP.UI.ApplicationPages.CalendarInstanceRepository.firstInstance = function() {};

/**
 * @constructor
 * @struct
 */
SP.UI.ApplicationPages.ResolveEntity = function() {};
 /** @type {string} */
SP.UI.ApplicationPages.ResolveEntity.prototype.tYPE_EVENT;
 /** @type {string} */
SP.UI.ApplicationPages.ResolveEntity.prototype.tYPE_USER;
 /** @type {string} */
SP.UI.ApplicationPages.ResolveEntity.prototype.tYPE_RESOURCE;
 /** @type {string} */
SP.UI.ApplicationPages.ResolveEntity.prototype.tYPE_EXCHANGE;
 /** @type {string} */
SP.UI.ApplicationPages.ResolveEntity.prototype.entityType;
 /** @type {string} */
SP.UI.ApplicationPages.ResolveEntity.prototype.displayName;
 /** @type {string} */
SP.UI.ApplicationPages.ResolveEntity.prototype.email;
 /** @type {string} */
SP.UI.ApplicationPages.ResolveEntity.prototype.accountName;
 /** @type {string} */
SP.UI.ApplicationPages.ResolveEntity.prototype.id;
 /** @type {!Array<!SP.UI.ApplicationPages.ResolveEntity>} */
SP.UI.ApplicationPages.ResolveEntity.prototype.members;
 /** @type {boolean} */
SP.UI.ApplicationPages.ResolveEntity.prototype.needResolve;
 /** @type {boolean} */
SP.UI.ApplicationPages.ResolveEntity.prototype.isGroup;

/**
 * @return {string}
 */
SP.UI.ApplicationPages.ResolveEntity.prototype.get_key = function() {};

/**
 * @constructor
 * @struct
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters = function() {};

/**
 * @return {boolean}
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters.prototype.get_allowEmailAddresses = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters.prototype.set_allowEmailAddresses = function(value) {};

/**
 * @return {boolean}
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters.prototype.get_allowMultipleEntities = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters.prototype.set_allowMultipleEntities = function(value) {};

/**
 * @return {boolean}
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters.prototype.get_allUrlZones = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters.prototype.set_allUrlZones = function(value) {};

/**
 * @return {string}
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters.prototype.get_enabledClaimProviders = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters.prototype.set_enabledClaimProviders = function(value) {};

/**
 * @return {boolean}
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters.prototype.get_forceClaims = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters.prototype.set_forceClaims = function(value) {};

/**
 * @return {number}
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters.prototype.get_maximumEntitySuggestions = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters.prototype.set_maximumEntitySuggestions = function(value) {};

/**
 * @return {SP.Utilities.PrincipalSource}
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters.prototype.get_principalSource = function() {};

/**
 * @param {SP.Utilities.PrincipalSource} value
 * @return {void}
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters.prototype.set_principalSource = function(value) {};

/**
 * @return {SP.Utilities.PrincipalType}
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters.prototype.get_principalType = function() {};

/**
 * @param {SP.Utilities.PrincipalType} value
 * @return {void}
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters.prototype.set_principalType = function(value) {};

/**
 * @return {string}
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters.prototype.get_queryString = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters.prototype.set_queryString = function(value) {};

/**
 * @return {boolean}
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters.prototype.get_required = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters.prototype.set_required = function(value) {};

/**
 * @return {number}
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters.prototype.get_sharePointGroupID = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters.prototype.set_sharePointGroupID = function(value) {};

/**
 * @return {SP.UrlZone}
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters.prototype.get_urlZone = function() {};

/**
 * @param {SP.UrlZone} value
 * @return {void}
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters.prototype.set_urlZone = function(value) {};

/**
 * @return {boolean}
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters.prototype.get_urlZoneSpecified = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters.prototype.set_urlZoneSpecified = function(value) {};

/**
 * @return {!SP.Web}
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters.prototype.get_web = function() {};

/**
 * @param {!SP.Web} value
 * @return {void}
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters.prototype.set_web = function(value) {};

/**
 * @return {!SP.Guid}
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters.prototype.get_webApplicationID = function() {};

/**
 * @param {!SP.Guid} value
 * @return {void}
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters.prototype.set_webApplicationID = function(value) {};

/**
 * @return {string}
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters.prototype.writeToXml = function(writer, serializationContext) {};
/**
 * @constructor
 * @struct
 */
SP.UI.ApplicationPages.ClientPeoplePickerWebServiceInterface = function() {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters} queryParams
 * @return {!SP.StringResult}
 */
SP.UI.ApplicationPages.ClientPeoplePickerWebServiceInterface.clientPeoplePickerSearchUser = function(context, queryParams) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters} queryParams
 * @return {!SP.StringResult}
 */
SP.UI.ApplicationPages.ClientPeoplePickerWebServiceInterface.clientPeoplePickerResolveUser = function(context, queryParams) {};
/**
 * @constructor
 * @struct
 */
SP.UI.ApplicationPages.PeoplePickerWebServiceInterface = function() {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {string} providerID
 * @param {string} hierarchyNodeID
 * @param {string} entityTypes
 * @param {string} contextUrl
 * @return {!SP.StringResult}
 */
SP.UI.ApplicationPages.PeoplePickerWebServiceInterface.getSearchResultsByHierarchy = function(context, providerID, hierarchyNodeID, entityTypes, contextUrl) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {string} searchPattern
 * @param {string} providerID
 * @param {string} hierarchyNodeID
 * @param {string} entityTypes
 * @return {!SP.StringResult}
 */
SP.UI.ApplicationPages.PeoplePickerWebServiceInterface.getSearchResults = function(context, searchPattern, providerID, hierarchyNodeID, entityTypes) {};

/**
 * @constructor
 * @struct
 * @param {string} launcherId
 * @param {string} menuId
 * @param {string} iconId
 * @param {string} launcherOpenCssClass
 * @param {string} textDirection
 * @param {string} closeIconUrl
 * @param {boolean} isClustered
 * @param {number} closeIconOffsetLeft
 * @param {number} closeIconOffsetTop
 * @param {number} closeIconHeight
 * @param {number} closeIconWidth
 */
SP.UI.PopoutMenu = function(launcherId, menuId, iconId, launcherOpenCssClass, textDirection, closeIconUrl, isClustered, closeIconOffsetLeft, closeIconOffsetTop, closeIconHeight, closeIconWidth) {};

/**
 * @return {void}
 */
SP.UI.PopoutMenu.prototype.launchMenu = function() {};

/**
 * @return {void}
 */
SP.UI.PopoutMenu.prototype.closeMenu = function() {};

/**
 * @param {string} anchorId
 * @param {string} menuId
 * @param {string} iconId
 * @param {string} anchorOpenCss
 * @param {string} textDirection
 * @param {string} closeIconUrl
 * @param {boolean} isClustered
 * @param {number} x
 * @param {number} y
 * @param {number} height
 * @param {number} width
 * @return {void}
 */
SP.UI.PopoutMenu.createPopoutMenuInstanceAndLaunch = function(anchorId, menuId, iconId, anchorOpenCss, textDirection, closeIconUrl, isClustered, x, y, height, width) {};

/**
 * @return {void}
 */
SP.UI.PopoutMenu.closeActivePopoutMenuInstance = function() {};

/**
 * @return {void}
 */
SP.UI.PopoutMenu.prototype.dispose = function() {};

/**
 * @constructor
 * @struct
 */
SP.UI.AttractModeControl = function() {};
 /** @type {string} */
SP.UI.AttractModeControl.prototype.defaultAttractModeIcon;
 /** @type {string} */
SP.UI.AttractModeControl.prototype.cssAttractMode;
 /** @type {string} */
SP.UI.AttractModeControl.prototype.cssAttractModeBackground;
 /** @type {string} */
SP.UI.AttractModeControl.prototype.cssAttractModeCell;
 /** @type {string} */
SP.UI.AttractModeControl.prototype.cssAttractModeWrapper;
 /** @type {string} */
SP.UI.AttractModeControl.prototype.cssAttractModeIcon;
 /** @type {string} */
SP.UI.AttractModeControl.prototype.cssAttractModeText;

/**
 * @return {?}
 */
SP.UI.AttractModeControl.prototype.get_imageElement = function() {};

/**
 * @return {!HTMLElement}
 */
SP.UI.AttractModeControl.prototype.get_textElement = function() {};
/** @const */
SP.UI.Notify = {};

/**
 * @param {string} strHtml
 * @param {boolean} bSticky
 * @return {string}
 */
SP.UI.Notify.addNotification = function(strHtml, bSticky) {};

/**
 * @param {string} nid
 * @return {void}
 */
SP.UI.Notify.removeNotification = function(nid) {};

/**
 * @param {boolean} bSticky
 * @return {string}
 */
SP.UI.Notify.showLoadingNotification = function(bSticky) {};

/**
 * @constructor
 * @struct
 * @param {SPNotifications.ContainerID} containerId
 * @param {string} strHtml
 * @param {boolean=} bSticky
 * @param {string=} strTooltip
 * @param {function(): void=} onclickHandler
 * @param {!SPStatusNotificationData=} extraData
 */
SP.UI.Notify.Notification = function(containerId, strHtml, bSticky, strTooltip, onclickHandler, extraData) {};

/**
 * @return {string}
 */
SP.UI.Notify.Notification.prototype.get_id = function() {};

/**
 * @param {boolean} bNoAnimate
 * @return {void}
 */
SP.UI.Notify.Notification.prototype.Show = function(bNoAnimate) {};

/**
 * @param {boolean} bNoAnimate
 * @return {void}
 */
SP.UI.Notify.Notification.prototype.Hide = function(bNoAnimate) {};

/**
 * @constructor
 * @struct
 * @param {number} id
 * @param {?} element
 * @param {number} layer
 * @param {number=} notificationLimit
 */
SP.UI.Notify.NotificationContainer = function(id, element, layer, notificationLimit) {};

/**
 * @return {void}
 */
SP.UI.Notify.NotificationContainer.prototype.Clear = function() {};

/**
 * @return {number}
 */
SP.UI.Notify.NotificationContainer.prototype.GetCount = function() {};

/**
 * @param {SPNotifications.EventID} eventId
 * @param {?} eventHandler
 * @return {void}
 */
SP.UI.Notify.NotificationContainer.prototype.SetEventHandler = function(eventId, eventHandler) {};

/**
 * @constructor
 * @struct
 */
SP.UI.Status = function() {};

/**
 * @param {string} strTitle
 * @param {string=} strHtml
 * @param {boolean=} atBegining
 * @return {string}
 */
SP.UI.Status.addStatus = function(strTitle, strHtml, atBegining) {};

/**
 * @param {string} sid
 * @param {string} strTitle
 * @param {string} strHtml
 * @return {string}
 */
SP.UI.Status.appendStatus = function(sid, strTitle, strHtml) {};

/**
 * @param {string} sid
 * @param {string} strHtml
 * @return {void}
 */
SP.UI.Status.updateStatus = function(sid, strHtml) {};

/**
 * @param {string} sid
 * @param {string} strColor
 * @return {void}
 */
SP.UI.Status.setStatusPriColor = function(sid, strColor) {};

/**
 * @param {string} sid
 * @return {void}
 */
SP.UI.Status.removeStatus = function(sid) {};

/**
 * @param {boolean} hide
 * @return {void}
 */
SP.UI.Status.removeAllStatus = function(hide) {};
/** @const */
SP.UI.Workspace = {};

/**
 * @param {function(): void} handler
 * @return {void}
 */
SP.UI.Workspace.add_resized = function(handler) {};

/**
 * @param {function(): void} handler
 * @return {void}
 */
SP.UI.Workspace.remove_resized = function(handler) {};
/**
 * @constructor
 * @struct
 */
SP.UI.Menu = function() {};

/**
 * @param {string} id
 * @return {!SP.UI.Menu}
 */
SP.UI.Menu.create = function(id) {};

/**
 * @param {string} text
 * @param {string} actionScriptText
 * @param {string} imageSourceUrl
 * @param {string} imageAlternateText
 * @param {number} sequenceNumber
 * @param {string} description
 * @param {string} id
 * @return {!HTMLElement}
 */
SP.UI.Menu.prototype.addMenuItem = function(text, actionScriptText, imageSourceUrl, imageAlternateText, sequenceNumber, description, id) {};

/**
 * @return {void}
 */
SP.UI.Menu.prototype.addSeparator = function() {};

/**
 * @param {string} text
 * @param {string} imageSourceUrl
 * @param {string} imageAlternateText
 * @param {number} sequenceNumber
 * @param {string} description
 * @param {string} id
 * @return {!SP.UI.Menu}
 */
SP.UI.Menu.prototype.addSubMenu = function(text, imageSourceUrl, imageAlternateText, sequenceNumber, description, id) {};

/**
 * @param {!HTMLElement} relativeElement
 * @param {boolean} forceRefresh
 * @param {boolean} flipTopLevelMenu
 * @param {number} yOffset
 * @return {void}
 */
SP.UI.Menu.prototype.show = function(relativeElement, forceRefresh, flipTopLevelMenu, yOffset) {};

/**
 * @param {!HTMLElement} relativeElement
 * @param {boolean} forceRefresh
 * @param {boolean} flipTopLevelMenu
 * @param {number} yOffset
 * @param {boolean} fShowClose
 * @param {boolean} fShowCheckBoxes
 * @return {void}
 */
SP.UI.Menu.prototype.showFilterMenu = function(relativeElement, forceRefresh, flipTopLevelMenu, yOffset, fShowClose, fShowCheckBoxes) {};

/**
 * @return {void}
 */
SP.UI.Menu.prototype.hideIcons = function() {};

/**
 * @return {void}
 */
SP.UI.Menu.prototype.showIcons = function() {};

/**
 * @constructor
 * @struct
 */
SP.UI.MenuTest = function() {};

/**
 * @param {!HTMLElement} relativeElement
 * @return {void}
 */
SP.UI.MenuTest.setup = function(relativeElement) {};

/**
 * @return {!SP.UI.DialogOptions}
 */
SP.UI.$create_DialogOptions = function() {};

/** @const */
SP.UI.DialogResult = {};
/** @const {number} */
SP.UI.DialogResult.invalid;
/** @const {number} */
SP.UI.DialogResult.cancel;
/** @const {number} */
SP.UI.DialogResult.OK;

/** @typedef {function(SP.UI.DialogResult, ?): void} */
SP.UI.DialogReturnValueCallback;
/**
 * @record
 * @struct
 */
SP.UI.IDialogOptions = function() {};
 /** @type {string} */
SP.UI.IDialogOptions.prototype.title;
 /** @type {number} */
SP.UI.IDialogOptions.prototype.x;
 /** @type {number} */
SP.UI.IDialogOptions.prototype.y;
 /** @type {boolean} */
SP.UI.IDialogOptions.prototype.showMaximized;
 /** @type {string} */
SP.UI.IDialogOptions.prototype.url;
 /** @type {boolean} */
SP.UI.IDialogOptions.prototype.showClose;
 /** @type {boolean} */
SP.UI.IDialogOptions.prototype.allowMaximize;
 /** @type {function(SP.UI.DialogResult, ?): void} */
SP.UI.IDialogOptions.prototype.dialogReturnValueCallback;
 /** @type {boolean} */
SP.UI.IDialogOptions.prototype.autoSize;
 /** @type {number} */
SP.UI.IDialogOptions.prototype.autoSizeStartWidth;
 /** @type {boolean} */
SP.UI.IDialogOptions.prototype.includeScrollBarPadding;
 /** @type {number} */
SP.UI.IDialogOptions.prototype.width;
 /** @type {number} */
SP.UI.IDialogOptions.prototype.height;
 /** @type {!HTMLElement} */
SP.UI.IDialogOptions.prototype.html;
 /** @type {?} */
SP.UI.IDialogOptions.prototype.args;
/**
 * @implements {SP.UI.IDialogOptions}
 * @constructor
 * @struct
 */
SP.UI.DialogOptions = function() {};
 /** @type {string} */
SP.UI.DialogOptions.prototype.title;
 /** @type {number} */
SP.UI.DialogOptions.prototype.x;
 /** @type {number} */
SP.UI.DialogOptions.prototype.y;
 /** @type {boolean} */
SP.UI.DialogOptions.prototype.showMaximized;
 /** @type {string} */
SP.UI.DialogOptions.prototype.url;
 /** @type {boolean} */
SP.UI.DialogOptions.prototype.showClose;
 /** @type {boolean} */
SP.UI.DialogOptions.prototype.allowMaximize;
 /** @type {function(SP.UI.DialogResult, ?): void} */
SP.UI.DialogOptions.prototype.dialogReturnValueCallback;
 /** @type {boolean} */
SP.UI.DialogOptions.prototype.autoSize;
 /** @type {number} */
SP.UI.DialogOptions.prototype.autoSizeStartWidth;
 /** @type {boolean} */
SP.UI.DialogOptions.prototype.includeScrollBarPadding;
 /** @type {number} */
SP.UI.DialogOptions.prototype.width;
 /** @type {number} */
SP.UI.DialogOptions.prototype.height;
 /** @type {!HTMLElement} */
SP.UI.DialogOptions.prototype.html;
 /** @type {?} */
SP.UI.DialogOptions.prototype.args;
/**
 * @constructor
 * @struct
 */
SP.UI.Dialog = function() {};

/**
 * @return {!HTMLElement}
 */
SP.UI.Dialog.prototype.get_firstTabStop = function() {};

/**
 * @return {!HTMLElement}
 */
SP.UI.Dialog.prototype.get_lastTabStop = function() {};

/**
 * @return {string}
 */
SP.UI.Dialog.prototype.get_url = function() {};

/**
 * @return {string}
 */
SP.UI.Dialog.prototype.get_html = function() {};

/**
 * @return {string}
 */
SP.UI.Dialog.prototype.get_title = function() {};

/**
 * @return {?}
 */
SP.UI.Dialog.prototype.get_args = function() {};

/**
 * @return {boolean}
 */
SP.UI.Dialog.prototype.get_allowMaximize = function() {};

/**
 * @return {boolean}
 */
SP.UI.Dialog.prototype.get_showClose = function() {};

/**
 * @return {?}
 */
SP.UI.Dialog.prototype.get_returnValue = function() {};

/**
 * @param {?} value
 * @return {void}
 */
SP.UI.Dialog.prototype.set_returnValue = function(value) {};

/**
 * @return {!HTMLFrameElement}
 */
SP.UI.Dialog.prototype.get_frameElement = function() {};

/**
 * @return {!HTMLElement}
 */
SP.UI.Dialog.prototype.get_dialogElement = function() {};

/**
 * @return {boolean}
 */
SP.UI.Dialog.prototype.get_isMaximized = function() {};

/**
 * @return {boolean}
 */
SP.UI.Dialog.prototype.get_closed = function() {};

/**
 * @param {?} resizePageCallBack
 * @return {void}
 */
SP.UI.Dialog.prototype.autoSizeSuppressScrollbar = function(resizePageCallBack) {};

/**
 * @return {void}
 */
SP.UI.Dialog.prototype.autoSize = function() {};
/**
 * @extends {SP.UI.Dialog}
 * @constructor
 * @struct
 */
SP.UI.ModalDialog = function() {};

/**
 * Displays a modal dialog defined by the specified options.
 * @param {!SP.UI.IDialogOptions} options
 * @return {!SP.UI.ModalDialog}
 */
SP.UI.ModalDialog.showModalDialog = function(options) {};

/**
 * Should be called from an existing dialog.
 * @param {SP.UI.DialogResult} dialogResult
 * @param {?} returnValue
 * @return {void}
 */
SP.UI.ModalDialog.commonModalDialogClose = function(dialogResult, returnValue) {};

/**
 * Shows a modal dialog, specified by url, callback, args, and options. Internally, uses SP.UI.ModalDialog.showModalDialog.
 * @param {string} url overrides options.url
 * @param {!SP.UI.IDialogOptions} options
 * @param {function(SP.UI.DialogResult, ?): void=} callback overrides options.dialogResultValueCallback
 * @param {?=} args overrides options.args
 * @return {void}
 */
SP.UI.ModalDialog.commonModalDialogOpen = function(url, options, callback, args) {};

/**
 * Refresh the page if specified dialogResult equals to SP.UI.DialogResult.OK
 * @param {SP.UI.DialogResult} dialogResult
 * @return {void}
 */
SP.UI.ModalDialog.RefreshPage = function(dialogResult) {};

/**
 * Show page specified by the url in a modal dialog. If the dialog returns SP.UI.DialogResult.OK, the page is refreshed.
 * @param {string} url
 * @return {void}
 */
SP.UI.ModalDialog.ShowPopupDialog = function(url) {};

/**
 * Show modal dialog specified by url, callback, height and width.
 * @param {string} url
 * @param {function(SP.UI.DialogResult, ?): void} callback
 * @param {number=} width
 * @param {number=} height
 * @return {void}
 */
SP.UI.ModalDialog.OpenPopUpPage = function(url, callback, width, height) {};

/**
 * Displays a wait/loading modal dialog with the specified title, message, height and width. Height and width are defined in pixels. Cancel/close button is not shown.
 * @param {string} title
 * @param {string=} message
 * @param {number=} height
 * @param {number=} width
 * @return {!SP.UI.ModalDialog}
 */
SP.UI.ModalDialog.showWaitScreenWithNoClose = function(title, message, height, width) {};

/**
 * Displays a wait/loading modal dialog with the specified title, message, height and width. Height and width are defined in pixels. Cancel button is shown. If user clicks it, the callbackFunc is called.
 * @param {string} title
 * @param {string=} message
 * @param {function(SP.UI.DialogResult, ?): void=} callbackFunc
 * @param {number=} height
 * @param {number=} width
 * @return {!SP.UI.ModalDialog}
 */
SP.UI.ModalDialog.showWaitScreenSize = function(title, message, callbackFunc, height, width) {};

/**
 * @param {string} url
 * @param {function(SP.UI.DialogResult, ?): void} callbackFunc
 * @return {!SP.UI.ModalDialog}
 */
SP.UI.ModalDialog.showPlatformFirstRunDialog = function(url, callbackFunc) {};

/**
 * @return {!SP.UI.ModalDialog}
 */
SP.UI.ModalDialog.get_childDialog = function() {};

/**
 * Closes the dialog using the specified dialog result.
 * @param {SP.UI.DialogResult} dialogResult
 * @return {void}
 */
SP.UI.ModalDialog.prototype.close = function(dialogResult) {};

/**
 * @constructor
 * @struct
 * @param {string} name
 * @param {string} displayName
 */
SP.UI.Command = function(name, displayName) {};

/**
 * @return {string}
 */
SP.UI.Command.prototype.get_displayName = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.UI.Command.prototype.set_displayName = function(value) {};

/**
 * @return {string}
 */
SP.UI.Command.prototype.get_tooltip = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.UI.Command.prototype.set_tooltip = function(value) {};

/**
 * @return {boolean}
 */
SP.UI.Command.prototype.get_isEnabled = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
SP.UI.Command.prototype.set_isEnabled = function(value) {};

/**
 * @return {string}
 */
SP.UI.Command.prototype.get_href = function() {};

/**
 * @return {string}
 */
SP.UI.Command.prototype.get_name = function() {};

/**
 * @return {string}
 */
SP.UI.Command.prototype.get_elementIDPrefix = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.UI.Command.prototype.set_elementIDPrefix = function(value) {};

/**
 * @return {!HTMLAnchorElement}
 */
SP.UI.Command.prototype.get_linkElement = function() {};

/**
 * @return {boolean}
 */
SP.UI.Command.prototype.get_isDropDownCommand = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
SP.UI.Command.prototype.set_isDropDownCommand = function(value) {};

/**
 * @return {void}
 */
SP.UI.Command.prototype.attachEvents = function() {};

/**
 * @param {!SP.HtmlBuilder} builder
 * @return {void}
 */
SP.UI.Command.prototype.render = function(builder) {};

/**
 * Should override
 * @return {void}
 */
SP.UI.Command.prototype.onClick = function() {};

/**
 * @constructor
 * @struct
 */
SP.UI.CommandBar = function() {};

/**
 * @return {!Array<!SP.UI.Command>}
 */
SP.UI.CommandBar.prototype.get_commands = function() {};

/**
 * @return {number}
 */
SP.UI.CommandBar.prototype.get_dropDownThreshold = function() {};

/**
 * @param {number} value
 * @return {number}
 */
SP.UI.CommandBar.prototype.set_dropDownThreshold = function(value) {};

/**
 * @return {string}
 */
SP.UI.CommandBar.prototype.get_elementID = function() {};

/**
 * @return {string}
 */
SP.UI.CommandBar.prototype.get_overrideClass = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.UI.CommandBar.prototype.set_overrideClass = function(value) {};

/**
 * @param {!SP.UI.Command} action
 * @return {void}
 */
SP.UI.CommandBar.prototype.addCommand = function(action) {};

/**
 * @param {!SP.UI.Command} action
 * @param {number} position
 * @return {void}
 */
SP.UI.CommandBar.prototype.insertCommand = function(action, position) {};

/**
 * @param {!SP.HtmlBuilder} builder
 * @return {void}
 */
SP.UI.CommandBar.prototype.render = function(builder) {};

/**
 * @return {void}
 */
SP.UI.CommandBar.prototype.attachEvents = function() {};

/**
 * @param {string} name
 * @return {!SP.UI.Command}
 */
SP.UI.CommandBar.prototype.findCommandByName = function(name) {};

/**
 * @constructor
 * @struct
 * @param {string} id
 */
SP.UI.PagingControl = function(id) {};
 /** @type {{prev: number, next: number}} */
SP.UI.PagingControl.ButtonIDs;
 /** @type {{hidden: number, disabled: number, enabled: number}} */
SP.UI.PagingControl.ButtonState;

/**
 * @param {string} innerContent
 * @return {string}
 */
SP.UI.PagingControl.prototype.render = function(innerContent) {};

/**
 * @return {void}
 */
SP.UI.PagingControl.prototype.postRender = function() {};

/**
 * @return {!HTMLSpanElement}
 */
SP.UI.PagingControl.prototype.get_innerContent = function() {};

/**
 * @return {string}
 */
SP.UI.PagingControl.prototype.get_innerContentClass = function() {};

/**
 * @param {number} buttonId
 * @param {number} state
 * @return {void}
 */
SP.UI.PagingControl.prototype.setButtonState = function(buttonId, state) {};

/**
 * @param {number} buttonId
 * @return {number}
 */
SP.UI.PagingControl.prototype.getButtonState = function(buttonId) {};

/**
 * @return {void}
 */
SP.UI.PagingControl.prototype.onWindowResized = function() {};

/**
 * Should override
 * @return {void}
 */
SP.UI.PagingControl.prototype.onPrev = function() {};

/**
 * @return {void}
 */
SP.UI.PagingControl.prototype.onNext = function() {};
/** @const */
SP.UI.Workplace = {};

/**
 * @param {function(?, ?): void} handler
 * @return {void}
 */
SP.UI.Workplace.add_resized = function(handler) {};

/**
 * @param {function(?, ?): void} handler
 * @return {void}
 */
SP.UI.Workplace.remove_resized = function(handler) {};
/** @const */
SP.UI.UIUtility = {};

/**
 * @return {string}
 */
SP.UI.UIUtility.generateRandomElementId = function() {};

/**
 * @param {!Event} evt
 * @return {void}
 */
SP.UI.UIUtility.cancelEvent = function(evt) {};

/**
 * @param {!HTMLElement} elem
 * @return {void}
 */
SP.UI.UIUtility.clearChildNodes = function(elem) {};

/**
 * @param {!HTMLElement} elem
 * @return {void}
 */
SP.UI.UIUtility.hideElement = function(elem) {};

/**
 * @param {!HTMLElement} elem
 * @return {void}
 */
SP.UI.UIUtility.showElement = function(elem) {};

/**
 * @param {!HTMLElement} elem
 * @param {!HTMLElement} targetElement
 * @return {void}
 */
SP.UI.UIUtility.insertBefore = function(elem, targetElement) {};

/**
 * @param {!HTMLElement} elem
 * @param {!HTMLElement} targetElement
 * @return {void}
 */
SP.UI.UIUtility.insertAfter = function(elem, targetElement) {};

/**
 * @param {!HTMLElement} elem
 * @return {void}
 */
SP.UI.UIUtility.removeNode = function(elem) {};

/**
 * @param {!HTMLElement} elem
 * @return {number}
 */
SP.UI.UIUtility.calculateOffsetLeft = function(elem) {};

/**
 * @param {!HTMLElement} elem
 * @return {number}
 */
SP.UI.UIUtility.calculateOffsetTop = function(elem) {};

/**
 * @param {string} text
 * @return {!HTMLInputElement}
 */
SP.UI.UIUtility.createHtmlInputText = function(text) {};

/**
 * @param {boolean} isChecked
 * @return {!HTMLInputElement}
 */
SP.UI.UIUtility.createHtmlInputCheck = function(isChecked) {};

/**
 * @param {!HTMLElement} elem
 * @param {string} value
 * @return {void}
 */
SP.UI.UIUtility.setInnerText = function(elem, value) {};

/**
 * @param {!HTMLElement} elem
 * @return {string}
 */
SP.UI.UIUtility.getInnerText = function(elem) {};

/**
 * @param {!HTMLElement} elem
 * @return {boolean}
 */
SP.UI.UIUtility.isTextNode = function(elem) {};

/**
 * @param {!HTMLElement} elem
 * @return {boolean}
 */
SP.UI.UIUtility.isSvgNode = function(elem) {};

/**
 * @param {!HTMLElement} elem
 * @param {!Array<string>} tagNames
 * @return {boolean}
 */
SP.UI.UIUtility.isNodeOfType = function(elem, tagNames) {};

/**
 * @param {!HTMLElement} elem
 * @return {boolean}
 */
SP.UI.UIUtility.focusValidOnThisNode = function(elem) {};
/** @const */
var SPNotifications = {};

/** @const */
SPNotifications.ContainerID = {};
/** @const {number} */
SPNotifications.ContainerID.Basic;
/** @const {number} */
SPNotifications.ContainerID.Status;

/** @const */
SPNotifications.EventID = {};
/** @const {number} */
SPNotifications.EventID.OnShow;
/** @const {number} */
SPNotifications.EventID.OnHide;
/** @const {number} */
SPNotifications.EventID.OnDisplayNotification;
/** @const {number} */
SPNotifications.EventID.OnRemoveNotification;
/** @const {number} */
SPNotifications.EventID.OnNotificationCountChanged;

/**
 * @constructor
 * @struct
 * @param {string} text
 * @param {string} subText
 * @param {string} imageUrl
 * @param {string} sip
 */
function SPStatusNotificationData(text, subText, imageUrl, sip) {}

/**
 * @return {void}
 */
function RefreshCommandUI() {}
/** @const */
SP.UI.Controls = {};
/**
 * @record
 * @struct
 */
SP.UI.Controls.INavigationOptions = function() {};
 /** @type {string} */
SP.UI.Controls.INavigationOptions.prototype.assetId;
 /** @type {string} */
SP.UI.Controls.INavigationOptions.prototype.siteTitle;
 /** @type {string} */
SP.UI.Controls.INavigationOptions.prototype.siteUrl;
 /** @type {string} */
SP.UI.Controls.INavigationOptions.prototype.appTitle;
 /** @type {string} */
SP.UI.Controls.INavigationOptions.prototype.appTitleIconUrl;
 /** @type {boolean} */
SP.UI.Controls.INavigationOptions.prototype.rightToLeft;
 /** @type {string} */
SP.UI.Controls.INavigationOptions.prototype.appStartPage;
 /** @type {string} */
SP.UI.Controls.INavigationOptions.prototype.appIconUrl;
 /** @type {string} */
SP.UI.Controls.INavigationOptions.prototype.appHelpPageUrl;
 /** @type {string} */
SP.UI.Controls.INavigationOptions.prototype.appHelpPageOnClick;
 /** @type {!Array<!SP.UI.Controls.ISettingsLink>} */
SP.UI.Controls.INavigationOptions.prototype.settingsLinks;
 /** @type {string} */
SP.UI.Controls.INavigationOptions.prototype.language;
 /** @type {string} */
SP.UI.Controls.INavigationOptions.prototype.clientTag;
 /** @type {string} */
SP.UI.Controls.INavigationOptions.prototype.appWebUrl;
 /** @type {string} */
SP.UI.Controls.INavigationOptions.prototype.onCssLoaded;
 /** @type {boolean} */
SP.UI.Controls.INavigationOptions.prototype.bottomHeaderVisible;
 /** @type {boolean} */
SP.UI.Controls.INavigationOptions.prototype.topHeaderVisible;
/**
 * @implements {SP.UI.Controls.INavigationOptions}
 * @constructor
 * @struct
 */
SP.UI.Controls.NavigationOptions = function() {};
/**
 * @record
 * @struct
 */
SP.UI.Controls.ISettingsLink = function() {};
 /** @type {string} */
SP.UI.Controls.ISettingsLink.prototype.linkUrl;
 /** @type {string} */
SP.UI.Controls.ISettingsLink.prototype.displayName;
/**
 * @implements {SP.UI.Controls.ISettingsLink}
 * @constructor
 * @struct
 */
SP.UI.Controls.SettingsLink = function() {};
 /** @type {string} */
SP.UI.Controls.SettingsLink.prototype.linkUrl;
 /** @type {string} */
SP.UI.Controls.SettingsLink.prototype.displayName;

/**
 * @constructor
 * @struct
 * @param {string} placeholderDOMElementId
 * @param {!SP.UI.Controls.INavigationOptions} options
 */
SP.UI.Controls.Navigation = function(placeholderDOMElementId, options) {};

/**
 * @return {string}
 */
SP.UI.Controls.Navigation.prototype.get_assetId = function() {};

/**
 * @return {string}
 */
SP.UI.Controls.Navigation.prototype.get_siteTitle = function() {};

/**
 * @return {string}
 */
SP.UI.Controls.Navigation.prototype.get_siteUrl = function() {};

/**
 * @return {string}
 */
SP.UI.Controls.Navigation.prototype.get_appTitle = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.UI.Controls.Navigation.prototype.set_appTitle = function(value) {};

/**
 * @return {string}
 */
SP.UI.Controls.Navigation.prototype.get_appTitleIconUrl = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.UI.Controls.Navigation.prototype.set_appTitleIconUrl = function(value) {};

/**
 * @return {boolean}
 */
SP.UI.Controls.Navigation.prototype.get_rightToLeft = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
SP.UI.Controls.Navigation.prototype.set_rightToLeft = function(value) {};

/**
 * @return {string}
 */
SP.UI.Controls.Navigation.prototype.get_appStartPage = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.UI.Controls.Navigation.prototype.set_appStartPage = function(value) {};

/**
 * @return {string}
 */
SP.UI.Controls.Navigation.prototype.get_appIconUrl = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.UI.Controls.Navigation.prototype.set_appIconUrl = function(value) {};

/**
 * @return {string}
 */
SP.UI.Controls.Navigation.prototype.get_appHelpPageUrl = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.UI.Controls.Navigation.prototype.set_appHelpPageUrl = function(value) {};

/**
 * @return {string}
 */
SP.UI.Controls.Navigation.prototype.get_appHelpPageOnClick = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.UI.Controls.Navigation.prototype.set_appHelpPageOnClick = function(value) {};

/**
 * @return {!Array<!SP.UI.Controls.ISettingsLink>}
 */
SP.UI.Controls.Navigation.prototype.get_settingsLinks = function() {};

/**
 * @param {!Array<!SP.UI.Controls.ISettingsLink>} value
 * @return {!Array<!SP.UI.Controls.ISettingsLink>}
 */
SP.UI.Controls.Navigation.prototype.set_settingsLinks = function(value) {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.UI.Controls.Navigation.prototype.setVisible = function(value) {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.UI.Controls.Navigation.prototype.setTopHeaderVisible = function(value) {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.UI.Controls.Navigation.prototype.setBottomHeaderVisible = function(value) {};

/**
 * @return {void}
 */
SP.UI.Controls.Navigation.prototype.remove = function() {};

/**
 * @param {string} pageName
 * @return {string}
 */
SP.UI.Controls.Navigation.getVersionedLayoutsUrl = function(pageName) {};
/**
 * @constructor
 * @struct
 */
SP.UI.Controls.ControlManager = function() {};

/**
 * @param {string} placeHolderId
 * @return {?}
 */
SP.UI.Controls.ControlManager.getControl = function(placeHolderId) {};
/** @const */
SP.UserProfiles = {};

/** @const */
SP.UserProfiles.ChangeTypes = {};
/** @const {number} */
SP.UserProfiles.ChangeTypes.none;
/** @const {number} */
SP.UserProfiles.ChangeTypes.add;
/** @const {number} */
SP.UserProfiles.ChangeTypes.modify;
/** @const {number} */
SP.UserProfiles.ChangeTypes.remove;
/** @const {number} */
SP.UserProfiles.ChangeTypes.metadata;
/** @const {number} */
SP.UserProfiles.ChangeTypes.all;
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
SP.UserProfiles.HashTag = function() {};

/**
 * @return {string}
 */
SP.UserProfiles.HashTag.prototype.get_name = function() {};

/**
 * @return {number}
 */
SP.UserProfiles.HashTag.prototype.get_useCount = function() {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.UserProfiles.HashTagCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.UserProfiles.HashTag}
 */
SP.UserProfiles.HashTagCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.UserProfiles.HashTag}
 */
SP.UserProfiles.HashTagCollection.prototype.get_item = function(index) {};

/** @const */
SP.UserProfiles.ObjectTypes = {};
/** @const {number} */
SP.UserProfiles.ObjectTypes.none;
/** @const {number} */
SP.UserProfiles.ObjectTypes.singleValueProperty;
/** @const {number} */
SP.UserProfiles.ObjectTypes.multiValueProperty;
/** @const {number} */
SP.UserProfiles.ObjectTypes.anniversary;
/** @const {number} */
SP.UserProfiles.ObjectTypes.dlMembership;
/** @const {number} */
SP.UserProfiles.ObjectTypes.siteMembership;
/** @const {number} */
SP.UserProfiles.ObjectTypes.quickLink;
/** @const {number} */
SP.UserProfiles.ObjectTypes.colleague;
/** @const {number} */
SP.UserProfiles.ObjectTypes.personalizationSite;
/** @const {number} */
SP.UserProfiles.ObjectTypes.userProfile;
/** @const {number} */
SP.UserProfiles.ObjectTypes.webLog;
/** @const {number} */
SP.UserProfiles.ObjectTypes.custom;
/** @const {number} */
SP.UserProfiles.ObjectTypes.organizationProfile;
/** @const {number} */
SP.UserProfiles.ObjectTypes.organizationMembership;
/** @const {number} */
SP.UserProfiles.ObjectTypes.all;

/**
 * @constructor
 * @struct
 * @param {!SP.ClientRuntimeContext} context
 */
SP.UserProfiles.PeopleManager = function(context) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @return {!SP.UserProfiles.HashTagCollection}
 */
SP.UserProfiles.PeopleManager.getTrendingTags = function(context) {};

/**
 * Checks whether the first user is following the second user.
 * @param {!SP.ClientRuntimeContext} context
 * @param {string} possibleFollowerAccountName
 * @param {string} possibleFolloweeAccountName
 * @return {!SP.BooleanResult}
 */
SP.UserProfiles.PeopleManager.isFollowing = function(context, possibleFollowerAccountName, possibleFolloweeAccountName) {};

/**
 * Gets the URL of the edit profile page for the current user.
 * @return {string}
 */
SP.UserProfiles.PeopleManager.prototype.get_editProfileLink = function() {};

/**
 * Gets a Boolean value that indicates whether the current user's People I'm Following list is public.
 * @return {boolean}
 */
SP.UserProfiles.PeopleManager.prototype.get_isMyPeopleListPublic = function() {};

/**
 * Gets tags that the user is following.
 * @param {number} numberOfTagsToFetch
 * @return {!Array<string>}
 */
SP.UserProfiles.PeopleManager.prototype.getFollowedTags = function(numberOfTagsToFetch) {};

/**
 * Gets user properties for the current user.
 * @return {!SP.UserProfiles.PersonProperties}
 */
SP.UserProfiles.PeopleManager.prototype.getMyProperties = function() {};

/**
 * @param {string} accountName
 * @return {!SP.UserProfiles.PersonProperties}
 */
SP.UserProfiles.PeopleManager.prototype.getPropertiesFor = function(accountName) {};

/**
 * Gets the specified user profile property for the specified user.
 * @param {string} accountName
 * @param {string} propertyName
 * @return {string}
 */
SP.UserProfiles.PeopleManager.prototype.getUserProfilePropertyFor = function(accountName, propertyName) {};

/**
 * Gets the specified user profile properties for the specified user.
 * @param {!SP.UserProfiles.UserProfilePropertiesForUser} propertiesForUser
 * @return {!Array<?>}
 */
SP.UserProfiles.PeopleManager.prototype.getUserProfilePropertiesFor = function(propertiesForUser) {};

/**
 * Gets suggestions for who the current user might want to follow.
 * Note: The recommended API to use for this task is SocialFollowingManager.getSuggestions.
 * Returns list of PersonProperties objects
 * @return {!SP.ClientObjectList<!SP.UserProfiles.PersonProperties>}
 */
SP.UserProfiles.PeopleManager.prototype.getMySuggestions = function() {};

/**
 * Removes the specified user from the user's list of suggested people to follow.
 * @param {string} accountName
 * @return {void}
 */
SP.UserProfiles.PeopleManager.prototype.hideSuggestion = function(accountName) {};

/**
 * @param {string} accountName
 * @return {void}
 */
SP.UserProfiles.PeopleManager.prototype.follow = function(accountName) {};

/**
 * @param {string} accountName
 * @return {void}
 */
SP.UserProfiles.PeopleManager.prototype.stopFollowing = function(accountName) {};

/**
 * Add the specified tag to the current user's list of followed tags.
 * @param {string} tagId GUID of the tag to start following.
 * @return {void}
 */
SP.UserProfiles.PeopleManager.prototype.followTag = function(tagId) {};

/**
 * Remove the specified tag from the current user's list of followed tags.
 * @param {string} tagId GUID of the tag to stop following.
 * @return {void}
 */
SP.UserProfiles.PeopleManager.prototype.stopFollowingTag = function(tagId) {};

/**
 * @param {string} accountName
 * @return {!SP.BooleanResult}
 */
SP.UserProfiles.PeopleManager.prototype.amIFollowing = function(accountName) {};

/**
 * @return {!SP.ClientObjectList<!SP.UserProfiles.PersonProperties>}
 */
SP.UserProfiles.PeopleManager.prototype.getPeopleFollowedByMe = function() {};

/**
 * @param {string} accountName
 * @return {!SP.ClientObjectList<!SP.UserProfiles.PersonProperties>}
 */
SP.UserProfiles.PeopleManager.prototype.getPeopleFollowedBy = function(accountName) {};

/**
 * @return {!SP.ClientObjectList<!SP.UserProfiles.PersonProperties>}
 */
SP.UserProfiles.PeopleManager.prototype.getMyFollowers = function() {};

/**
 * @param {string} accountName
 * @return {!SP.ClientObjectList<!SP.UserProfiles.PersonProperties>}
 */
SP.UserProfiles.PeopleManager.prototype.getFollowersFor = function(accountName) {};

/**
 * @param {string} accountName
 * @return {!SP.BooleanResult}
 */
SP.UserProfiles.PeopleManager.prototype.amIFollowedBy = function(accountName) {};

/**
 * Uploads and sets the user profile picture.
 * Pictures in bmp, jpg and png formats and up to 5,000,000 bytes are supported.
 * A user can upload a picture only to the user's own profile.
 * @param {!SP.Base64EncodedByteArray} data Binary content of an image file
 * @return {void}
 */
SP.UserProfiles.PeopleManager.prototype.setMyProfilePicture = function(data) {};

/** @const */
SP.UserProfiles.PersonalSiteCapabilities = {};
/** @const {number} */
SP.UserProfiles.PersonalSiteCapabilities.none;
/** @const {number} */
SP.UserProfiles.PersonalSiteCapabilities.profile;
/** @const {number} */
SP.UserProfiles.PersonalSiteCapabilities.social;
/** @const {number} */
SP.UserProfiles.PersonalSiteCapabilities.storage;
/** @const {number} */
SP.UserProfiles.PersonalSiteCapabilities.myTasksDashboard;
/** @const {number} */
SP.UserProfiles.PersonalSiteCapabilities.education;
/** @const {number} */
SP.UserProfiles.PersonalSiteCapabilities.guest;

/** @const */
SP.UserProfiles.PersonalSiteInstantiationState = {};
/** @const {number} */
SP.UserProfiles.PersonalSiteInstantiationState.uninitialized;
/** @const {number} */
SP.UserProfiles.PersonalSiteInstantiationState.enqueued;
/** @const {number} */
SP.UserProfiles.PersonalSiteInstantiationState.created;
/** @const {number} */
SP.UserProfiles.PersonalSiteInstantiationState.deleted;
/** @const {number} */
SP.UserProfiles.PersonalSiteInstantiationState.permissionsGeneralFailure;
/** @const {number} */
SP.UserProfiles.PersonalSiteInstantiationState.permissionsUPANotGranted;
/** @const {number} */
SP.UserProfiles.PersonalSiteInstantiationState.permissionsUserNotLicensed;
/** @const {number} */
SP.UserProfiles.PersonalSiteInstantiationState.permissionsSelfServiceSiteCreationDisabled;
/** @const {number} */
SP.UserProfiles.PersonalSiteInstantiationState.permissionsNoMySitesInPeopleLight;
/** @const {number} */
SP.UserProfiles.PersonalSiteInstantiationState.permissionsEmptyHostUrl;
/** @const {number} */
SP.UserProfiles.PersonalSiteInstantiationState.permissionsHostFailedToInitializePersonalSiteContext;
/** @const {number} */
SP.UserProfiles.PersonalSiteInstantiationState.errorGeneralFailure;
/** @const {number} */
SP.UserProfiles.PersonalSiteInstantiationState.errorManagedPathDoesNotExist;
/** @const {number} */
SP.UserProfiles.PersonalSiteInstantiationState.errorLanguageNotInstalled;
/** @const {number} */
SP.UserProfiles.PersonalSiteInstantiationState.errorPartialCreate;
/** @const {number} */
SP.UserProfiles.PersonalSiteInstantiationState.errorPersonalSiteAlreadyExists;
/** @const {number} */
SP.UserProfiles.PersonalSiteInstantiationState.errorRootSiteNotPresent;
/** @const {number} */
SP.UserProfiles.PersonalSiteInstantiationState.errorSelfServiceSiteCreateCallFailed;

/** @const */
SP.UserProfiles.SocialDataStoreExceptionCode = {};
/** @const {number} */
SP.UserProfiles.SocialDataStoreExceptionCode.socialListNotFound;
/** @const {number} */
SP.UserProfiles.SocialDataStoreExceptionCode.personalSiteNotFound;
/** @const {number} */
SP.UserProfiles.SocialDataStoreExceptionCode.cannotCreatePersonalSite;
/** @const {number} */
SP.UserProfiles.SocialDataStoreExceptionCode.noSocialFeatures;
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.UserProfiles.PersonProperties = function() {};

/**
 * Specifies the person's account name
 * @return {string}
 */
SP.UserProfiles.PersonProperties.prototype.get_accountName = function() {};

/**
 * Specifies an array of strings containing the account names of a person's direct reports.
 * @return {!Array<string>}
 */
SP.UserProfiles.PersonProperties.prototype.get_directReports = function() {};

/**
 * Specifies the person's name.
 * @return {string}
 */
SP.UserProfiles.PersonProperties.prototype.get_displayName = function() {};

/**
 * Specifies the person's email address.
 * @return {string}
 */
SP.UserProfiles.PersonProperties.prototype.get_email = function() {};

/**
 * Specifies an array of strings that specify the account names of a person's managers.
 * @return {!Array<string>}
 */
SP.UserProfiles.PersonProperties.prototype.get_extendedManagers = function() {};

/**
 * Specifies an array of strings that specify the account names of person's extended reports.
 * @return {!Array<string>}
 */
SP.UserProfiles.PersonProperties.prototype.get_extendedReports = function() {};

/**
 * Represents whether or not the current user is following this person.
 * @return {boolean}
 */
SP.UserProfiles.PersonProperties.prototype.get_isFollowed = function() {};

/**
 * Specifies the person's latest microblog post.
 * @return {string}
 */
SP.UserProfiles.PersonProperties.prototype.get_latestPost = function() {};

/**
 * Specifies an array of strings that specify the account names of person's peers, that is, those who have the same manager.
 * @return {!Array<string>}
 */
SP.UserProfiles.PersonProperties.prototype.get_peers = function() {};

/**
 * Specifies the absolute URL of the person's personal page.
 * @return {string}
 */
SP.UserProfiles.PersonProperties.prototype.get_personalUrl = function() {};

/**
 * Specifies the URL for the person's profile picture.
 * @return {string}
 */
SP.UserProfiles.PersonProperties.prototype.get_pictureUrl = function() {};

/**
 * Specifies the person's title.
 * @return {string}
 */
SP.UserProfiles.PersonProperties.prototype.get_title = function() {};

/**
 * Represents all user profile properties including custom.
 * The privacy settings affect which properties can be retrieved.
 * Multiple values are delimited by the vertical bar "|".
 * Null values are specified as empty strings.
 * @return {!Object<string,string>}
 */
SP.UserProfiles.PersonProperties.prototype.get_userProfileProperties = function() {};

/**
 * Specifies the URL for the person's profile.
 * @return {string}
 */
SP.UserProfiles.PersonProperties.prototype.get_userUrl = function() {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.UserProfiles.ProfileLoader = function() {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @return {!SP.UserProfiles.ProfileLoader}
 */
SP.UserProfiles.ProfileLoader.getProfileLoader = function(context) {};

/**
 * @return {!SP.UserProfiles.UserProfile}
 */
SP.UserProfiles.ProfileLoader.prototype.getUserProfile = function() {};

/**
 * @constructor
 * @struct
 */
SP.UserProfiles.UserProfile = function() {};

/**
 * Represents the content that the user is following.
 * @return {!SP.UserProfiles.FollowedContent}
 */
SP.UserProfiles.UserProfile.prototype.get_followedContent = function() {};

/**
 * Retrieves SP.Site object that represents the user's personal site.
 * @return {!SP.Site}
 */
SP.UserProfiles.UserProfile.prototype.get_personalSite = function() {};

/**
 * Specifies attributes of the user's personal site.
 * @return {SP.UserProfiles.PersonalSiteCapabilities}
 */
SP.UserProfiles.UserProfile.prototype.get_personalSiteCapabilities = function() {};

/**
 * Provides the state of the user's personal site
 * @return {SP.UserProfiles.PersonalSiteInstantiationState}
 */
SP.UserProfiles.UserProfile.prototype.get_personalSiteInstantiationState = function() {};

/**
 * Specifies whether the user can import pictures
 * @return {boolean}
 */
SP.UserProfiles.UserProfile.prototype.get_pictureImportEnabled = function() {};

/**
 * Specifies the URL to allow the current user to create a personal site.
 * @return {string}
 */
SP.UserProfiles.UserProfile.prototype.get_urlToCreatePersonalSite = function() {};

/**
 * Specifies whether the current user's social data is to be shared.
 * @param {boolean} shareAll
 * @return {void}
 */
SP.UserProfiles.UserProfile.prototype.shareAllSocialData = function(shareAll) {};

/**
 * This member is reserved for internal use and is not intended to be used directly from your code.
 * Use the createPersonalSiteEnque method to create a personal site.
 * @param {number} lcid
 * @return {void}
 */
SP.UserProfiles.UserProfile.prototype.createPersonalSite = function(lcid) {};

/**
 * Enquees creation of a personal site for the current user.
 * @param {boolean} isInteractive Has a true value if the request is from a web browser and a false value if the request is from a client application.
 * @return {void}
 */
SP.UserProfiles.UserProfile.prototype.createPersonalSiteEnque = function(isInteractive) {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientRuntimeContext} context
 */
SP.UserProfiles.FollowedContent = function(context) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @return {!SP.UserProfiles.FollowedContent}
 */
SP.UserProfiles.FollowedContent.newObject = function(context) {};

/**
 * Gets the location of the followed sites view
 * @return {string}
 */
SP.UserProfiles.FollowedContent.prototype.get_followedDocumentsUrl = function() {};

/**
 * Gets the location of the followed documents view.
 * @return {string}
 */
SP.UserProfiles.FollowedContent.prototype.get_followedSitesUrl = function() {};

/**
 * The Follow method adds the specified document or site to the list of followed content.
 * @param {string} url  URL that identifies the item to follow.
 * The url parameter can identify an existing document or site using the url property of the original item.
 * The url parameter can also identify a document with the following format: http:// host/site?listId=<listGuid>&itemId=<itemId>
 * @param {!SP.UserProfiles.FollowedItemData=} data Optional parameter that holds application-defined data for the item.
 * @return {!SP.UserProfiles.FollowResult}
 */
SP.UserProfiles.FollowedContent.prototype.follow = function(url, data) {};

/**
 * The FollowItem method is reserved for server-to-server use only.
 * The server sets the specified item to be followed by the current user.
 * This method cannot be called from the client.
 * @param {!SP.UserProfiles.FollowedItem} item
 * @return {!SP.UserProfiles.FollowResult}
 */
SP.UserProfiles.FollowedContent.prototype.followItem = function(item) {};

/**
 * Removes the specified document or site from list of followed content.
 * @param {string} url  URL that identifies the item to stop following.
 * The url parameter can identify an existing document or site using the url property of the original item.
 * The url parameter can also identify a document with the following format: http:// host/site?listId=<listGuid>&itemId=<itemId>
 * @return {void}
 */
SP.UserProfiles.FollowedContent.prototype.stopFollowing = function(url) {};

/**
 * Determines if the specified document or site is being followed.
 * @param {string} url  URL that identifies the item that is supposed to be followed.
 * The url parameter can identify an existing document or site using the url property of the original item.
 * The url parameter can also identify a document with the following format: http:// host/site?listId=<listGuid>&itemId=<itemId>
 * @return {!SP.BooleanResult}
 */
SP.UserProfiles.FollowedContent.prototype.isFollowed = function(url) {};

/**
 * Retrieves the followed status of the specified document or site.
 * Returns a value of type FollowedStatus, wrapped into a SP.IntResult object.
 * @param {string} url  URL that identifies the followed item.
 * The url parameter can identify an existing document or site using the url property of the original item.
 * The url parameter can also identify a document with the following format: http:// host/site?listId=<listGuid>&itemId=<itemId>
 * @return {!SP.IntResult}
 */
SP.UserProfiles.FollowedContent.prototype.getFollowedStatus = function(url) {};

/**
 * Returns the followed item identified by a given URL or returns null if the item does not exist.
 * @param {string} url  URL that identifies the followed item.
 * The url parameter can identify an existing document or site using the url property of the original item.
 * The url parameter can also identify a document with the following format: http:// host/site?listId=<listGuid>&itemId=<itemId>
 * @return {!SP.UserProfiles.FollowedItem}
 */
SP.UserProfiles.FollowedContent.prototype.getItem = function(url) {};

/**
 * Returns an array of zero or more followed items described by the type and subtype parameters.
 * @param {SP.UserProfiles.FollowedContentQueryOptions} options Describes the type of item to return.
 * @param {number} subtype
 * @return {!Array<!SP.UserProfiles.FollowedItem>}
 */
SP.UserProfiles.FollowedContent.prototype.getItems = function(options, subtype) {};

/**
 * Updates the properties for followed item with specified URL.
 * @param {string} url  URL that identifies the followed item.
 * The url parameter can identify an existing document or site using the url property of the original item.
 * The url parameter can also identify a document with the following format: http:// host/site?listId=<listGuid>&itemId=<itemId>
 * @param {!SP.UserProfiles.FollowedItemData} data Application-defined data stored with the followed item.
 * @return {void}
 */
SP.UserProfiles.FollowedContent.prototype.updateData = function(url, data) {};

/**
 * Returns the refreshed item that is being pointed to in the Social list.
 * @param {!SP.UserProfiles.FollowedItem} item The original item as stored in the Followed Content list.
 * @return {!SP.UserProfiles.FollowedItem}
 */
SP.UserProfiles.FollowedContent.prototype.refreshFollowedItem = function(item) {};

/**
 * Finds the original item that is being pointed to in the Followed Content list and updates the Title, Url, and IconUrl fields if they have been changed.
 * @param {string} url The URL of the original item as stored in the Followed Content list.
 * @return {!SP.UserProfiles.FollowedItem}
 */
SP.UserProfiles.FollowedContent.prototype.findAndUpdateFollowedItem = function(url) {};
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
SP.UserProfiles.FollowedItem = function() {};

/**
 * Additional metadata associated with this item
 * @return {!Object<string,?>}
 */
SP.UserProfiles.FollowedItem.prototype.get_data = function() {};

/**
 * Additional metadata associated with this item
 * @param {!Object<string,?>} value
 * @return {!Object<string,?>}
 */
SP.UserProfiles.FollowedItem.prototype.set_data = function(value) {};

/**
 * Specifies the type of the file if this item is a file. Otherwise, this property is the empty string.
 * @return {string}
 */
SP.UserProfiles.FollowedItem.prototype.get_fileType = function() {};

/**
 * Specifies the type of the file if this item is a file. Otherwise, this property is the empty string.
 * @param {string} value
 * @return {string}
 */
SP.UserProfiles.FollowedItem.prototype.set_fileType = function(value) {};

/**
 * Provides information about the application that opens a followed document.
 * @return {string}
 */
SP.UserProfiles.FollowedItem.prototype.get_fileTypeProgid = function() {};

/**
 * Provides information about the application that opens a followed document.
 * @param {string} value
 * @return {string}
 */
SP.UserProfiles.FollowedItem.prototype.set_fileTypeProgid = function(value) {};

/**
 * Specifies additional information about the followed item.
 * The server stores the data so that it can return it to the client.
 * @return {string}
 */
SP.UserProfiles.FollowedItem.prototype.get_flags = function() {};

/**
 * Specifies additional information about the followed item.
 * The server stores the data so that it can return it to the client.
 * @param {string} value
 * @return {string}
 */
SP.UserProfiles.FollowedItem.prototype.set_flags = function(value) {};

/**
 * Indicates whether the followed site has a feed.
 * @return {boolean}
 */
SP.UserProfiles.FollowedItem.prototype.get_hasFeed = function() {};

/**
 * Indicates whether the followed site has a feed.
 * @param {boolean} value
 * @return {boolean}
 */
SP.UserProfiles.FollowedItem.prototype.set_hasFeed = function(value) {};

/**
 * Specifies if the item is hidden from the user. If true this item will not generate activity in the user's feed.
 * @return {boolean}
 */
SP.UserProfiles.FollowedItem.prototype.get_hidden = function() {};

/**
 * Specifies if the item is hidden from the user. If true this item will not generate activity in the user's feed.
 * @param {boolean} value
 * @return {boolean}
 */
SP.UserProfiles.FollowedItem.prototype.set_hidden = function(value) {};

/**
 * Specifies the URL of an icon to represent this item.
 * @return {string}
 */
SP.UserProfiles.FollowedItem.prototype.get_iconUrl = function() {};

/**
 * Specifies the URL of an icon to represent this item.
 * @param {string} value
 * @return {string}
 */
SP.UserProfiles.FollowedItem.prototype.set_iconUrl = function(value) {};

/**
 * Specifies the identification for this item in the Content database.
 * @return {number}
 */
SP.UserProfiles.FollowedItem.prototype.get_itemId = function() {};

/**
 * Specifies the identification for this item in the Content database.
 * @param {number} value
 * @return {number}
 */
SP.UserProfiles.FollowedItem.prototype.set_itemId = function(value) {};

/**
 * Specifies the type of this item.
 * @return {SP.UserProfiles.FollowedItemType}
 */
SP.UserProfiles.FollowedItem.prototype.get_itemType = function() {};

/**
 * Specifies the type of this item.
 * @param {SP.UserProfiles.FollowedItemType} value
 * @return {SP.UserProfiles.FollowedItemType}
 */
SP.UserProfiles.FollowedItem.prototype.set_itemType = function(value) {};

/**
 * The ListId property specifies the list identification (GUID) for this item in the Content database if this item is a list or the list identification for its parent list.
 * If the ItemType is Document, this property is specified, but if the ItemType is Site, then this property is not specified.
 * @return {string}
 */
SP.UserProfiles.FollowedItem.prototype.get_listId = function() {};

/**
 * The ListId property specifies the list identification (GUID) for this item in the Content database if this item is a list or the list identification for its parent list.
 * If the ItemType is Document, this property is specified, but if the ItemType is Site, then this property is not specified.
 * @param {string} value
 * @return {string}
 */
SP.UserProfiles.FollowedItem.prototype.set_listId = function(value) {};

/**
 * Specifies the URL of this item's parent list or web.
 * @return {string}
 */
SP.UserProfiles.FollowedItem.prototype.get_parentUrl = function() {};

/**
 * Specifies the URL of this item's parent list or web.
 * @param {string} value
 * @return {string}
 */
SP.UserProfiles.FollowedItem.prototype.set_parentUrl = function(value) {};

/**
 * Provides information about the followed document to the application that opens it.
 * @return {string}
 */
SP.UserProfiles.FollowedItem.prototype.get_serverUrlProgid = function() {};

/**
 * Provides information about the followed document to the application that opens it.
 * @param {string} value
 * @return {string}
 */
SP.UserProfiles.FollowedItem.prototype.set_serverUrlProgid = function(value) {};

/**
 * Specifies the site identification (GUID) in the Content database for this item if this item is a site, or for its parent site if this item is not a site.
 * @return {string}
 */
SP.UserProfiles.FollowedItem.prototype.get_siteId = function() {};

/**
 * Specifies the site identification (GUID) in the Content database for this item if this item is a site, or for its parent site if this item is not a site.
 * @param {string} value
 * @return {string}
 */
SP.UserProfiles.FollowedItem.prototype.set_siteId = function(value) {};

/**
 * Specifies the subtype of this item.
 * If the ItemType is Site, the Subtype specifies the web template identification.
 * If the ItemType is Document, the Subtype has a value of 1.
 * @return {number}
 */
SP.UserProfiles.FollowedItem.prototype.get_subtype = function() {};

/**
 * Specifies the subtype of this item.
 * If the ItemType is Site, the Subtype specifies the web template identification.
 * If the ItemType is Document, the Subtype has a value of 1.
 * @param {number} value
 * @return {number}
 */
SP.UserProfiles.FollowedItem.prototype.set_subtype = function(value) {};

/**
 * Specifies the item of this item
 * @return {string}
 */
SP.UserProfiles.FollowedItem.prototype.get_title = function() {};

/**
 * Specifies the item of this item
 * @param {string} value
 * @return {string}
 */
SP.UserProfiles.FollowedItem.prototype.set_title = function(value) {};

/**
 * Specifies the GUID for this item in the Content database.
 * @return {!SP.Guid}
 */
SP.UserProfiles.FollowedItem.prototype.get_uniqueId = function() {};

/**
 * Specifies the GUID for this item in the Content database.
 * @param {!SP.Guid} value
 * @return {!SP.Guid}
 */
SP.UserProfiles.FollowedItem.prototype.set_uniqueId = function(value) {};

/**
 * Specifies the URL of this item.
 * @return {string}
 */
SP.UserProfiles.FollowedItem.prototype.get_url = function() {};

/**
 * Specifies the URL of this item.
 * @param {string} value
 * @return {string}
 */
SP.UserProfiles.FollowedItem.prototype.set_url = function(value) {};

/**
 * Specifies the site identification (GUID) in the Content database for this item if it is a site, or the identification of its parent site if this item is a document.
 * @return {!SP.Guid}
 */
SP.UserProfiles.FollowedItem.prototype.get_webId = function() {};

/**
 * Specifies the site identification (GUID) in the Content database for this item if it is a site, or the identification of its parent site if this item is a document.
 * @param {!SP.Guid} value
 * @return {?}
 */
SP.UserProfiles.FollowedItem.prototype.set_webId = function(value) {};

/** @const */
SP.UserProfiles.FollowedItemType = {};
/** @const {number} */
SP.UserProfiles.FollowedItemType.unknown;
/** @const {number} */
SP.UserProfiles.FollowedItemType.document;
/** @const {number} */
SP.UserProfiles.FollowedItemType.site;
/** @const {number} */
SP.UserProfiles.FollowedItemType.all;

/** @const */
SP.UserProfiles.FollowedContentExceptionType = {};
/** @const {number} */
SP.UserProfiles.FollowedContentExceptionType.itemAlreadyExists;
/** @const {number} */
SP.UserProfiles.FollowedContentExceptionType.itemDoesNotExist;
/** @const {number} */
SP.UserProfiles.FollowedContentExceptionType.invalidQueryString;
/** @const {number} */
SP.UserProfiles.FollowedContentExceptionType.invalidSubtypeValue;
/** @const {number} */
SP.UserProfiles.FollowedContentExceptionType.unsupportedItemType;
/** @const {number} */
SP.UserProfiles.FollowedContentExceptionType.followLimitReached;
/** @const {number} */
SP.UserProfiles.FollowedContentExceptionType.untrustedSource;
/** @const {number} */
SP.UserProfiles.FollowedContentExceptionType.unsupportedSite;
/** @const {number} */
SP.UserProfiles.FollowedContentExceptionType.internalError;

/** @const */
SP.UserProfiles.FollowedContentQueryOptions = {};
/** @const {number} */
SP.UserProfiles.FollowedContentQueryOptions.unset;
/** @const {number} */
SP.UserProfiles.FollowedContentQueryOptions.sites;
/** @const {number} */
SP.UserProfiles.FollowedContentQueryOptions.documents;
/** @const {number} */
SP.UserProfiles.FollowedContentQueryOptions.hidden;
/** @const {number} */
SP.UserProfiles.FollowedContentQueryOptions.nonFeed;
/** @const {number} */
SP.UserProfiles.FollowedContentQueryOptions.defaultOptions;
/** @const {number} */
SP.UserProfiles.FollowedContentQueryOptions.all;

/** @const */
SP.UserProfiles.FollowedStatus = {};
/** @const {number} */
SP.UserProfiles.FollowedStatus.followed;
/** @const {number} */
SP.UserProfiles.FollowedStatus.notFollowed;
/** @const {number} */
SP.UserProfiles.FollowedStatus.notFollowable;
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.UserProfiles.FollowedItemData = function() {};

/**
 * An unordered collection of key/value pairs for custom properties to be set on the item.
 * @return {!Object<string,?>}
 */
SP.UserProfiles.FollowedItemData.prototype.get_properties = function() {};
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
SP.UserProfiles.FollowResult = function() {};

/**
 * Contains the item being followed.
 * @return {!SP.UserProfiles.FollowedItem}
 */
SP.UserProfiles.FollowResult.prototype.get_item = function() {};

/**
 * Provides information about the attempt to follow an item.
 * @return {SP.UserProfiles.FollowResultType}
 */
SP.UserProfiles.FollowResult.prototype.get_resultType = function() {};

/** @const */
SP.UserProfiles.FollowResultType = {};
/** @const {number} */
SP.UserProfiles.FollowResultType.unknown;
/** @const {number} */
SP.UserProfiles.FollowResultType.followed;
/** @const {number} */
SP.UserProfiles.FollowResultType.refollowed;
/** @const {number} */
SP.UserProfiles.FollowResultType.hitFollowLimit;
/** @const {number} */
SP.UserProfiles.FollowResultType.failed;

/**
 * @constructor
 * @struct
 * Creates new UserProfilePropertiesForUser object
 * @param {!SP.ClientContext} context Specifies the client context to use.
 * @param {string} accountName Specifies the user by account name.
 * @param {!Array<string>} propertyNames Specifies an array of strings that specify the properties to retrieve.
 */
SP.UserProfiles.UserProfilePropertiesForUser = function(context, accountName, propertyNames) {};

/**
 * Specifies the user account name
 * @return {string}
 */
SP.UserProfiles.UserProfilePropertiesForUser.prototype.get_accountName = function() {};

/**
 * Specifies the user account name
 * @param {string} value
 * @return {string}
 */
SP.UserProfiles.UserProfilePropertiesForUser.prototype.set_accountName = function(value) {};

/**
 * Gets an array of strings that specify the user profile property names.
 * @return {!Array<string>}
 */
SP.UserProfiles.UserProfilePropertiesForUser.prototype.getPropertyNames = function() {};
/** @const */
SP.Utilities = {};
/**
 * @constructor
 * @struct
 */
SP.Utilities.Utility = function() {};
 /** @type {string} */
SP.Utilities.Utility.prototype.lAYOUTS_LATESTVERSION_RELATIVE_URL;
 /** @type {string} */
SP.Utilities.Utility.prototype.lAYOUTS_LATESTVERSION_URL;

/**
 * @return {string}
 */
SP.Utilities.Utility.get_layoutsLatestVersionRelativeUrl = function() {};

/**
 * @return {string}
 */
SP.Utilities.Utility.get_layoutsLatestVersionUrl = function() {};

/**
 * @param {string} pageName
 * @return {string}
 */
SP.Utilities.Utility.getLayoutsPageUrl = function(pageName) {};

/**
 * @param {string} imageName
 * @return {string}
 */
SP.Utilities.Utility.getImageUrl = function(imageName) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.Utilities.WikiPageCreationInformation} parameters
 * @return {!SP.File}
 */
SP.Utilities.Utility.createWikiPageInContextWeb = function(context, parameters) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.ListItemCollection<?>} items
 * @return {!SP.ClientObjectList<!SP.ListItem<?>>}
 */
SP.Utilities.Utility.localizeWebPartGallery = function(context, items) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.Guid} productId
 * @return {!SP.AppLicenseCollection}
 */
SP.Utilities.Utility.getAppLicenseInformation = function(context, productId) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {string} licenseTokenToImport
 * @param {string} contentMarket
 * @param {string} billingMarket
 * @param {string} appName
 * @param {string} iconUrl
 * @param {string} providerName
 * @param {number} appSubtype
 * @return {void}
 */
SP.Utilities.Utility.importAppLicense = function(context, licenseTokenToImport, contentMarket, billingMarket, appName, iconUrl, providerName, appSubtype) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @return {!SP.GuidResult}
 */
SP.Utilities.Utility.getAppLicenseDeploymentId = function(context) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {string} error
 * @return {!SP.IntResult}
 */
SP.Utilities.Utility.logCustomAppError = function(context, error) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.Guid} productId
 * @param {string} error
 * @return {!SP.IntResult}
 */
SP.Utilities.Utility.logCustomRemoteAppError = function(context, productId, error) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {string} source
 * @param {string} defaultResourceFile
 * @param {number} language
 * @return {!SP.StringResult}
 */
SP.Utilities.Utility.getLocalizedString = function(context, source, defaultResourceFile, language) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.List<?>} list
 * @param {string} title
 * @return {!SP.ListItem<?>}
 */
SP.Utilities.Utility.createNewDiscussion = function(context, list, title) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.ListItem<?>} parent
 * @return {!SP.ListItem<?>}
 */
SP.Utilities.Utility.createNewDiscussionReply = function(context, parent) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {string} listID
 * @param {string} topicIDs
 * @return {void}
 */
SP.Utilities.Utility.markDiscussionAsFeatured = function(context, listID, topicIDs) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {string} listID
 * @param {string} topicIDs
 * @return {void}
 */
SP.Utilities.Utility.unmarkDiscussionAsFeatured = function(context, listID, topicIDs) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.Web} web
 * @param {string} input
 * @param {SP.Utilities.PrincipalType} scopes
 * @param {SP.Utilities.PrincipalSource} sources
 * @param {!SP.UserCollection} usersContainer
 * @param {number} maxCount
 * @return {!Array<!SP.Utilities.PrincipalInfo>}
 */
SP.Utilities.Utility.searchPrincipals = function(context, web, input, scopes, sources, usersContainer, maxCount) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @return {!SP.StringResult}
 */
SP.Utilities.Utility.getCurrentUserEmailAddresses = function(context) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {string} pageAddress
 * @return {!SP.StringResult}
 */
SP.Utilities.Utility.createEmailBodyForInvitation = function(context, pageAddress) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.Web} web
 * @param {!SP.FieldUser} fieldUser
 * @return {!SP.StringResult}
 */
SP.Utilities.Utility.getPeoplePickerURL = function(context, web, fieldUser) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.Web} web
 * @param {string} input
 * @param {SP.Utilities.PrincipalType} scopes
 * @param {SP.Utilities.PrincipalSource} sources
 * @param {!SP.UserCollection} usersContainer
 * @param {boolean} inputIsEmailOnly
 * @return {!SP.Utilities.PrincipalInfo}
 */
SP.Utilities.Utility.resolvePrincipal = function(context, web, input, scopes, sources, usersContainer, inputIsEmailOnly) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {string} sourceValue
 * @param {number} lcid
 * @return {!SP.StringResult}
 */
SP.Utilities.Utility.getLowerCaseString = function(context, sourceValue, lcid) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.Web} web
 * @param {!Date} datetime
 * @param {SP.Utilities.DateTimeFormat} format
 * @return {!SP.StringResult}
 */
SP.Utilities.Utility.formatDateTime = function(context, web, datetime, format) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {string} licensableEntity
 * @return {!SP.BooleanResult}
 */
SP.Utilities.Utility.isUserLicensedForEntityInContext = function(context, licensableEntity) {};

/** @const */
SP.Utilities.DateTimeFormat = {};
/** @const {number} */
SP.Utilities.DateTimeFormat.dateTime;
/** @const {number} */
SP.Utilities.DateTimeFormat.dateOnly;
/** @const {number} */
SP.Utilities.DateTimeFormat.timeOnly;
/** @const {number} */
SP.Utilities.DateTimeFormat.iSO8601;
/** @const {number} */
SP.Utilities.DateTimeFormat.monthDayOnly;
/** @const {number} */
SP.Utilities.DateTimeFormat.monthYearOnly;
/** @const {number} */
SP.Utilities.DateTimeFormat.longDate;
/** @const {number} */
SP.Utilities.DateTimeFormat.unknownFormat;

/**
 * @constructor
 * @struct
 */
SP.Utilities.EmailProperties = function() {};

/**
 * @return {?}
 */
SP.Utilities.EmailProperties.prototype.get_additionalHeaders = function() {};

/**
 * @param {?} value
 * @return {void}
 */
SP.Utilities.EmailProperties.prototype.set_additionalHeaders = function(value) {};

/**
 * @return {!Array<string>}
 */
SP.Utilities.EmailProperties.prototype.get_bCC = function() {};

/**
 * @param {!Array<string>} value
 * @return {void}
 */
SP.Utilities.EmailProperties.prototype.set_bCC = function(value) {};

/**
 * @return {string}
 */
SP.Utilities.EmailProperties.prototype.get_body = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Utilities.EmailProperties.prototype.set_body = function(value) {};

/**
 * @return {!Array<string>}
 */
SP.Utilities.EmailProperties.prototype.get_cC = function() {};

/**
 * @param {!Array<string>} value
 * @return {void}
 */
SP.Utilities.EmailProperties.prototype.set_cC = function(value) {};

/**
 * @return {string}
 */
SP.Utilities.EmailProperties.prototype.get_from = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Utilities.EmailProperties.prototype.set_from = function(value) {};

/**
 * @return {string}
 */
SP.Utilities.EmailProperties.prototype.get_subject = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Utilities.EmailProperties.prototype.set_subject = function(value) {};

/**
 * @return {!Array<string>}
 */
SP.Utilities.EmailProperties.prototype.get_to = function() {};

/**
 * @param {!Array<string>} value
 * @return {void}
 */
SP.Utilities.EmailProperties.prototype.set_to = function(value) {};

/**
 * @return {string}
 */
SP.Utilities.EmailProperties.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.Utilities.EmailProperties.prototype.writeToXml = function(writer, serializationContext) {};

/** @const */
SP.Utilities.IconSize = {};
/** @const {number} */
SP.Utilities.IconSize.size16;
/** @const {number} */
SP.Utilities.IconSize.size32;
/** @const {number} */
SP.Utilities.IconSize.size256;

/** @const */
SP.Utilities.LogAppErrorResult = {};
/** @const {number} */
SP.Utilities.LogAppErrorResult.success;
/** @const {number} */
SP.Utilities.LogAppErrorResult.errorsThrottled;
/** @const {number} */
SP.Utilities.LogAppErrorResult.accessDenied;

/**
 * @constructor
 * @struct
 */
SP.Utilities.PrincipalInfo = function() {};

/**
 * @return {string}
 */
SP.Utilities.PrincipalInfo.prototype.get_department = function() {};

/**
 * @return {string}
 */
SP.Utilities.PrincipalInfo.prototype.get_displayName = function() {};

/**
 * @return {string}
 */
SP.Utilities.PrincipalInfo.prototype.get_email = function() {};

/**
 * @return {string}
 */
SP.Utilities.PrincipalInfo.prototype.get_jobTitle = function() {};

/**
 * @return {string}
 */
SP.Utilities.PrincipalInfo.prototype.get_loginName = function() {};

/**
 * @return {string}
 */
SP.Utilities.PrincipalInfo.prototype.get_mobile = function() {};

/**
 * @return {number}
 */
SP.Utilities.PrincipalInfo.prototype.get_principalId = function() {};

/**
 * @return {SP.Utilities.PrincipalType}
 */
SP.Utilities.PrincipalInfo.prototype.get_principalType = function() {};

/**
 * @return {string}
 */
SP.Utilities.PrincipalInfo.prototype.get_sIPAddress = function() {};

/**
 * @return {string}
 */
SP.Utilities.PrincipalInfo.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.Utilities.PrincipalInfo.prototype.writeToXml = function(writer, serializationContext) {};

/** @const */
SP.Utilities.PrincipalSource = {};
/** @const {number} */
SP.Utilities.PrincipalSource.none;
/** @const {number} */
SP.Utilities.PrincipalSource.userInfoList;
/** @const {number} */
SP.Utilities.PrincipalSource.windows;
/** @const {number} */
SP.Utilities.PrincipalSource.membershipProvider;
/** @const {number} */
SP.Utilities.PrincipalSource.roleProvider;
/** @const {number} */
SP.Utilities.PrincipalSource.all;

/** @const */
SP.Utilities.PrincipalType = {};
/** @const {number} */
SP.Utilities.PrincipalType.none;
/** @const {number} */
SP.Utilities.PrincipalType.user;
/** @const {number} */
SP.Utilities.PrincipalType.distributionList;
/** @const {number} */
SP.Utilities.PrincipalType.securityGroup;
/** @const {number} */
SP.Utilities.PrincipalType.sharePointGroup;
/** @const {number} */
SP.Utilities.PrincipalType.all;

/** @const */
SP.Utilities.SPWOPIFrameAction = {};
/** @const {number} */
SP.Utilities.SPWOPIFrameAction.view;
/** @const {number} */
SP.Utilities.SPWOPIFrameAction.edit;
/** @const {number} */
SP.Utilities.SPWOPIFrameAction.mobileView;
/** @const {number} */
SP.Utilities.SPWOPIFrameAction.interactivePreview;

/**
 * @constructor
 * @struct
 */
SP.Utilities.WikiPageCreationInformation = function() {};

/**
 * @return {string}
 */
SP.Utilities.WikiPageCreationInformation.prototype.get_serverRelativeUrl = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Utilities.WikiPageCreationInformation.prototype.set_serverRelativeUrl = function(value) {};

/**
 * @return {string}
 */
SP.Utilities.WikiPageCreationInformation.prototype.get_wikiHtmlContent = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Utilities.WikiPageCreationInformation.prototype.set_wikiHtmlContent = function(value) {};

/**
 * @return {string}
 */
SP.Utilities.WikiPageCreationInformation.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.Utilities.WikiPageCreationInformation.prototype.writeToXml = function(writer, serializationContext) {};
/**
 * @constructor
 * @struct
 */
SP.Utilities.DateUtility = function() {};

/**
 * @param {number} year
 * @return {boolean}
 */
SP.Utilities.DateUtility.isLeapYear = function(year) {};

/**
 * @param {number} year
 * @param {number} month
 * @param {number} day
 * @return {number}
 */
SP.Utilities.DateUtility.dateToJulianDay = function(year, month, day) {};

/**
 * @param {number} julianDay
 * @return {!SP.DateTimeUtil.SimpleDate}
 */
SP.Utilities.DateUtility.julianDayToDate = function(julianDay) {};

/**
 * @param {number} year
 * @param {number} month
 * @return {number}
 */
SP.Utilities.DateUtility.daysInMonth = function(year, month) {};
/**
 * @constructor
 * @struct
 */
SP.Utilities.HttpUtility = function() {};

/**
 * Official version of STSHtmlEncode. Calls it internally.
 * @param {string} stringToEncode
 * @return {string}
 */
SP.Utilities.HttpUtility.htmlEncode = function(stringToEncode) {};

/**
 * @param {string} stringToEncode
 * @return {string}
 */
SP.Utilities.HttpUtility.urlPathEncode = function(stringToEncode) {};

/**
 * @param {string} keyOrValueToEncode
 * @return {string}
 */
SP.Utilities.HttpUtility.urlKeyValueEncode = function(keyOrValueToEncode) {};

/**
 * @param {string} scriptLiteralToEncode
 * @return {string}
 */
SP.Utilities.HttpUtility.ecmaScriptStringLiteralEncode = function(scriptLiteralToEncode) {};

/**
 * @param {string} url
 * @return {void}
 */
SP.Utilities.HttpUtility.navigateTo = function(url) {};

/**
 * Appends correct "Source" parameter to the specified url, and then navigates to this url.
 * "Source" parameter is recognized in many places in SharePoint, usually to determine "Cancel" behavior.
 * @param {string} url
 * @return {void}
 */
SP.Utilities.HttpUtility.appendSourceAndNavigateTo = function(url) {};

/**
 * @param {string} stringToEscape
 * @return {string}
 */
SP.Utilities.HttpUtility.escapeXmlText = function(stringToEscape) {};

/**
 * @param {string} urlSrc
 * @param {string} frameTarget
 * @return {void}
 */
SP.Utilities.HttpUtility.navigateHttpFolder = function(urlSrc, frameTarget) {};

/**
 * @constructor
 * @struct
 * @param {string} path
 */
SP.Utilities.UrlBuilder = function(path) {};

/**
 * @param {string} path1
 * @param {string} path2
 * @return {string}
 */
SP.Utilities.UrlBuilder.urlCombine = function(path1, path2) {};

/**
 * @param {string} url
 * @param {string} key
 * @param {string} value
 * @return {string}
 */
SP.Utilities.UrlBuilder.replaceOrAddQueryString = function(url, key, value) {};

/**
 * @param {string} url
 * @param {string} key
 * @return {string}
 */
SP.Utilities.UrlBuilder.removeQueryString = function(url, key) {};

/**
 * @param {string} path
 * @return {void}
 */
SP.Utilities.UrlBuilder.prototype.combinePath = function(path) {};

/**
 * @param {string} key
 * @param {string} value
 * @return {void}
 */
SP.Utilities.UrlBuilder.prototype.addKeyValueQueryString = function(key, value) {};

/**
 * Returns the resulting url
 * @return {string}
 */
SP.Utilities.UrlBuilder.prototype.get_url = function() {};

/**
 * Same as get_url()
 * @return {string}
 */
SP.Utilities.UrlBuilder.prototype.toString = function() {};
/**
 * @constructor
 * @struct
 */
SP.Utilities.LocUtility = function() {};

/**
 * @param {string} locText
 * @param {string} intervals
 * @param {number} count
 * @return {string}
 */
SP.Utilities.LocUtility.getLocalizedCountValue = function(locText, intervals, count) {};
/**
 * @constructor
 * @struct
 */
SP.Utilities.VersionUtility = function() {};

/**
 * @return {string}
 */
SP.Utilities.VersionUtility.get_layoutsLatestVersionRelativeUrl = function() {};

/**
 * @return {string}
 */
SP.Utilities.VersionUtility.get_layoutsLatestVersionUrl = function() {};

/**
 * @param {string} pageName
 * @return {string}
 */
SP.Utilities.VersionUtility.getLayoutsPageUrl = function(pageName) {};

/**
 * @param {string} imageName
 * @return {string}
 */
SP.Utilities.VersionUtility.getImageUrl = function(imageName) {};
/** @const */
SP.DateTimeUtil = {};

/**
 * @constructor
 * @struct
 * @param {number} year
 * @param {number} month
 * @param {number} day
 * @param {number} era
 */
SP.DateTimeUtil.SimpleDate = function(year, month, day, era) {};

/**
 * @return {number}
 */
SP.DateTimeUtil.SimpleDate.prototype.get_year = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.DateTimeUtil.SimpleDate.prototype.set_year = function(value) {};

/**
 * @return {number}
 */
SP.DateTimeUtil.SimpleDate.prototype.get_month = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.DateTimeUtil.SimpleDate.prototype.set_month = function(value) {};

/**
 * @return {number}
 */
SP.DateTimeUtil.SimpleDate.prototype.get_day = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.DateTimeUtil.SimpleDate.prototype.set_day = function(value) {};

/**
 * @return {number}
 */
SP.DateTimeUtil.SimpleDate.prototype.get_era = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.DateTimeUtil.SimpleDate.prototype.set_era = function(value) {};

/**
 * @param {!SP.DateTimeUtil.SimpleDate} date1
 * @param {!SP.DateTimeUtil.SimpleDate} date2
 * @return {boolean}
 */
SP.DateTimeUtil.SimpleDate.dateEquals = function(date1, date2) {};

/**
 * @param {!SP.DateTimeUtil.SimpleDate} date1
 * @param {!SP.DateTimeUtil.SimpleDate} date2
 * @return {boolean}
 */
SP.DateTimeUtil.SimpleDate.dateLessEqual = function(date1, date2) {};

/**
 * @param {!SP.DateTimeUtil.SimpleDate} date1
 * @param {!SP.DateTimeUtil.SimpleDate} date2
 * @return {boolean}
 */
SP.DateTimeUtil.SimpleDate.dateGreaterEqual = function(date1, date2) {};

/**
 * @param {!SP.DateTimeUtil.SimpleDate} date1
 * @param {!SP.DateTimeUtil.SimpleDate} date2
 * @return {boolean}
 */
SP.DateTimeUtil.SimpleDate.dateLess = function(date1, date2) {};

/**
 * @param {!SP.DateTimeUtil.SimpleDate} date1
 * @param {!SP.DateTimeUtil.SimpleDate} date2
 * @return {boolean}
 */
SP.DateTimeUtil.SimpleDate.dateGreater = function(date1, date2) {};
/** @const */
SP.WebParts = {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.WebParts.LimitedWebPartManager = function() {};

/**
 * @return {boolean}
 */
SP.WebParts.LimitedWebPartManager.prototype.get_hasPersonalizedParts = function() {};

/**
 * @return {SP.WebParts.PersonalizationScope}
 */
SP.WebParts.LimitedWebPartManager.prototype.get_scope = function() {};

/**
 * @return {!SP.WebParts.WebPartDefinitionCollection}
 */
SP.WebParts.LimitedWebPartManager.prototype.get_webParts = function() {};

/**
 * @param {!SP.WebParts.WebPart} webPart
 * @param {string} zoneId
 * @param {number} zoneIndex
 * @return {!SP.WebParts.WebPartDefinition}
 */
SP.WebParts.LimitedWebPartManager.prototype.addWebPart = function(webPart, zoneId, zoneIndex) {};

/**
 * @param {string} webPartXml
 * @return {!SP.WebParts.WebPartDefinition}
 */
SP.WebParts.LimitedWebPartManager.prototype.importWebPart = function(webPartXml) {};

/** @const */
SP.WebParts.PersonalizationScope = {};
/** @const {number} */
SP.WebParts.PersonalizationScope.user;
/** @const {number} */
SP.WebParts.PersonalizationScope.shared;

/**
 * @constructor
 * @struct
 */
SP.WebParts.TileData = function() {};

/**
 * @return {string}
 */
SP.WebParts.TileData.prototype.get_backgroundImageLocation = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.WebParts.TileData.prototype.set_backgroundImageLocation = function(value) {};

/**
 * @return {string}
 */
SP.WebParts.TileData.prototype.get_description = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.WebParts.TileData.prototype.set_description = function(value) {};

/**
 * @return {number}
 */
SP.WebParts.TileData.prototype.get_iD = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.WebParts.TileData.prototype.set_iD = function(value) {};

/**
 * @return {string}
 */
SP.WebParts.TileData.prototype.get_linkLocation = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.WebParts.TileData.prototype.set_linkLocation = function(value) {};

/**
 * @return {number}
 */
SP.WebParts.TileData.prototype.get_tileOrder = function() {};

/**
 * @param {number} value
 * @return {void}
 */
SP.WebParts.TileData.prototype.set_tileOrder = function(value) {};

/**
 * @return {string}
 */
SP.WebParts.TileData.prototype.get_title = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.WebParts.TileData.prototype.set_title = function(value) {};

/**
 * @return {string}
 */
SP.WebParts.TileData.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.WebParts.TileData.prototype.writeToXml = function(writer, serializationContext) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.WebParts.WebPart = function() {};

/**
 * @return {boolean}
 */
SP.WebParts.WebPart.prototype.get_hidden = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.WebParts.WebPart.prototype.set_hidden = function(value) {};

/**
 * @return {boolean}
 */
SP.WebParts.WebPart.prototype.get_isClosed = function() {};

/**
 * @return {!SP.PropertyValues}
 */
SP.WebParts.WebPart.prototype.get_properties = function() {};

/**
 * @return {string}
 */
SP.WebParts.WebPart.prototype.get_subtitle = function() {};

/**
 * @return {string}
 */
SP.WebParts.WebPart.prototype.get_title = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.WebParts.WebPart.prototype.set_title = function(value) {};

/**
 * @return {string}
 */
SP.WebParts.WebPart.prototype.get_titleUrl = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.WebParts.WebPart.prototype.set_titleUrl = function(value) {};

/**
 * @return {number}
 */
SP.WebParts.WebPart.prototype.get_zoneIndex = function() {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.WebParts.WebPartDefinition = function() {};

/**
 * @return {!SP.Guid}
 */
SP.WebParts.WebPartDefinition.prototype.get_id = function() {};

/**
 * @return {!SP.WebParts.WebPart}
 */
SP.WebParts.WebPartDefinition.prototype.get_webPart = function() {};

/**
 * @return {void}
 */
SP.WebParts.WebPartDefinition.prototype.saveWebPartChanges = function() {};

/**
 * @return {void}
 */
SP.WebParts.WebPartDefinition.prototype.closeWebPart = function() {};

/**
 * @return {void}
 */
SP.WebParts.WebPartDefinition.prototype.openWebPart = function() {};

/**
 * @return {void}
 */
SP.WebParts.WebPartDefinition.prototype.deleteWebPart = function() {};

/**
 * @param {string} zoneID
 * @param {number} zoneIndex
 * @return {void}
 */
SP.WebParts.WebPartDefinition.prototype.moveWebPartTo = function(zoneID, zoneIndex) {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.WebParts.WebPartDefinitionCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.WebParts.WebPartDefinition}
 */
SP.WebParts.WebPartDefinitionCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.WebParts.WebPartDefinition}
 */
SP.WebParts.WebPartDefinitionCollection.prototype.get_item = function(index) {};

/**
 * @param {!SP.Guid} id
 * @return {!SP.WebParts.WebPartDefinition}
 */
SP.WebParts.WebPartDefinitionCollection.prototype.getById = function(id) {};

/**
 * @param {string} controlId
 * @return {!SP.WebParts.WebPartDefinition}
 */
SP.WebParts.WebPartDefinitionCollection.prototype.getByControlId = function(controlId) {};
/** @const */
SP.Workflow = {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.Workflow.WorkflowAssociation = function() {};

/**
 * @return {boolean}
 */
SP.Workflow.WorkflowAssociation.prototype.get_allowManual = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Workflow.WorkflowAssociation.prototype.set_allowManual = function(value) {};

/**
 * @return {string}
 */
SP.Workflow.WorkflowAssociation.prototype.get_associationData = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Workflow.WorkflowAssociation.prototype.set_associationData = function(value) {};

/**
 * @return {boolean}
 */
SP.Workflow.WorkflowAssociation.prototype.get_autoStartChange = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Workflow.WorkflowAssociation.prototype.set_autoStartChange = function(value) {};

/**
 * @return {boolean}
 */
SP.Workflow.WorkflowAssociation.prototype.get_autoStartCreate = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Workflow.WorkflowAssociation.prototype.set_autoStartCreate = function(value) {};

/**
 * @return {!SP.Guid}
 */
SP.Workflow.WorkflowAssociation.prototype.get_baseId = function() {};

/**
 * @return {!Date}
 */
SP.Workflow.WorkflowAssociation.prototype.get_created = function() {};

/**
 * @return {string}
 */
SP.Workflow.WorkflowAssociation.prototype.get_description = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Workflow.WorkflowAssociation.prototype.set_description = function(value) {};

/**
 * @return {boolean}
 */
SP.Workflow.WorkflowAssociation.prototype.get_enabled = function() {};

/**
 * @param {boolean} value
 * @return {void}
 */
SP.Workflow.WorkflowAssociation.prototype.set_enabled = function(value) {};

/**
 * @return {string}
 */
SP.Workflow.WorkflowAssociation.prototype.get_historyListTitle = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Workflow.WorkflowAssociation.prototype.set_historyListTitle = function(value) {};

/**
 * @return {!SP.Guid}
 */
SP.Workflow.WorkflowAssociation.prototype.get_id = function() {};

/**
 * @return {string}
 */
SP.Workflow.WorkflowAssociation.prototype.get_instantiationUrl = function() {};

/**
 * @return {string}
 */
SP.Workflow.WorkflowAssociation.prototype.get_internalName = function() {};

/**
 * @return {boolean}
 */
SP.Workflow.WorkflowAssociation.prototype.get_isDeclarative = function() {};

/**
 * @return {!SP.Guid}
 */
SP.Workflow.WorkflowAssociation.prototype.get_listId = function() {};

/**
 * @return {!Date}
 */
SP.Workflow.WorkflowAssociation.prototype.get_modified = function() {};

/**
 * @return {string}
 */
SP.Workflow.WorkflowAssociation.prototype.get_name = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Workflow.WorkflowAssociation.prototype.set_name = function(value) {};

/**
 * @return {string}
 */
SP.Workflow.WorkflowAssociation.prototype.get_taskListTitle = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Workflow.WorkflowAssociation.prototype.set_taskListTitle = function(value) {};

/**
 * @return {!SP.Guid}
 */
SP.Workflow.WorkflowAssociation.prototype.get_webId = function() {};

/**
 * @return {void}
 */
SP.Workflow.WorkflowAssociation.prototype.update = function() {};

/**
 * @return {void}
 */
SP.Workflow.WorkflowAssociation.prototype.deleteObject = function() {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.Workflow.WorkflowAssociationCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.Workflow.WorkflowAssociation}
 */
SP.Workflow.WorkflowAssociationCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.Workflow.WorkflowAssociation}
 */
SP.Workflow.WorkflowAssociationCollection.prototype.get_item = function(index) {};

/**
 * @param {!SP.Guid} associationId
 * @return {!SP.Workflow.WorkflowAssociation}
 */
SP.Workflow.WorkflowAssociationCollection.prototype.getById = function(associationId) {};

/**
 * @param {!SP.Workflow.WorkflowAssociationCreationInformation} parameters
 * @return {!SP.Workflow.WorkflowAssociation}
 */
SP.Workflow.WorkflowAssociationCollection.prototype.add = function(parameters) {};

/**
 * @param {string} name
 * @return {!SP.Workflow.WorkflowAssociation}
 */
SP.Workflow.WorkflowAssociationCollection.prototype.getByName = function(name) {};

/**
 * @constructor
 * @struct
 */
SP.Workflow.WorkflowAssociationCreationInformation = function() {};

/**
 * @return {string}
 */
SP.Workflow.WorkflowAssociationCreationInformation.prototype.get_contentTypeAssociationHistoryListName = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Workflow.WorkflowAssociationCreationInformation.prototype.set_contentTypeAssociationHistoryListName = function(value) {};

/**
 * @return {string}
 */
SP.Workflow.WorkflowAssociationCreationInformation.prototype.get_contentTypeAssociationTaskListName = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Workflow.WorkflowAssociationCreationInformation.prototype.set_contentTypeAssociationTaskListName = function(value) {};

/**
 * @return {!SP.List<?>}
 */
SP.Workflow.WorkflowAssociationCreationInformation.prototype.get_historyList = function() {};

/**
 * @param {!SP.List<?>} value
 * @return {void}
 */
SP.Workflow.WorkflowAssociationCreationInformation.prototype.set_historyList = function(value) {};

/**
 * @return {string}
 */
SP.Workflow.WorkflowAssociationCreationInformation.prototype.get_name = function() {};

/**
 * @param {string} value
 * @return {void}
 */
SP.Workflow.WorkflowAssociationCreationInformation.prototype.set_name = function(value) {};

/**
 * @return {!SP.List<?>}
 */
SP.Workflow.WorkflowAssociationCreationInformation.prototype.get_taskList = function() {};

/**
 * @param {!SP.List<?>} value
 * @return {void}
 */
SP.Workflow.WorkflowAssociationCreationInformation.prototype.set_taskList = function(value) {};

/**
 * @return {!SP.Workflow.WorkflowTemplate}
 */
SP.Workflow.WorkflowAssociationCreationInformation.prototype.get_template = function() {};

/**
 * @param {!SP.Workflow.WorkflowTemplate} value
 * @return {void}
 */
SP.Workflow.WorkflowAssociationCreationInformation.prototype.set_template = function(value) {};

/**
 * @return {string}
 */
SP.Workflow.WorkflowAssociationCreationInformation.prototype.get_typeId = function() {};

/**
 * @param {!SP.XmlWriter} writer
 * @param {!SP.SerializationContext} serializationContext
 * @return {void}
 */
SP.Workflow.WorkflowAssociationCreationInformation.prototype.writeToXml = function(writer, serializationContext) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.Workflow.WorkflowTemplate = function() {};

/**
 * @return {boolean}
 */
SP.Workflow.WorkflowTemplate.prototype.get_allowManual = function() {};

/**
 * @return {string}
 */
SP.Workflow.WorkflowTemplate.prototype.get_associationUrl = function() {};

/**
 * @return {boolean}
 */
SP.Workflow.WorkflowTemplate.prototype.get_autoStartChange = function() {};

/**
 * @return {boolean}
 */
SP.Workflow.WorkflowTemplate.prototype.get_autoStartCreate = function() {};

/**
 * @return {string}
 */
SP.Workflow.WorkflowTemplate.prototype.get_description = function() {};

/**
 * @return {!SP.Guid}
 */
SP.Workflow.WorkflowTemplate.prototype.get_id = function() {};

/**
 * @return {boolean}
 */
SP.Workflow.WorkflowTemplate.prototype.get_isDeclarative = function() {};

/**
 * @return {string}
 */
SP.Workflow.WorkflowTemplate.prototype.get_name = function() {};

/**
 * @return {!SP.BasePermissions}
 */
SP.Workflow.WorkflowTemplate.prototype.get_permissionsManual = function() {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.Workflow.WorkflowTemplateCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.Workflow.WorkflowTemplate}
 */
SP.Workflow.WorkflowTemplateCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.Workflow.WorkflowTemplate}
 */
SP.Workflow.WorkflowTemplateCollection.prototype.get_item = function(index) {};

/**
 * @param {!SP.Guid} templateId
 * @return {!SP.Workflow.WorkflowTemplate}
 */
SP.Workflow.WorkflowTemplateCollection.prototype.getById = function(templateId) {};

/**
 * @param {string} name
 * @return {!SP.Workflow.WorkflowTemplate}
 */
SP.Workflow.WorkflowTemplateCollection.prototype.getByName = function(name) {};
/** @const */
SP.WorkflowServices = {};

/** @const */
SP.WorkflowServices.WorkflowStatus = {};
/** @const {number} */
SP.WorkflowServices.WorkflowStatus.notStarted;
/** @const {number} */
SP.WorkflowServices.WorkflowStatus.started;
/** @const {number} */
SP.WorkflowServices.WorkflowStatus.suspended;
/** @const {number} */
SP.WorkflowServices.WorkflowStatus.canceling;
/** @const {number} */
SP.WorkflowServices.WorkflowStatus.canceled;
/** @const {number} */
SP.WorkflowServices.WorkflowStatus.terminated;
/** @const {number} */
SP.WorkflowServices.WorkflowStatus.completed;
/** @const {number} */
SP.WorkflowServices.WorkflowStatus.notSpecified;
/** @const {number} */
SP.WorkflowServices.WorkflowStatus.invalid;

/**
 * @constructor
 * @struct
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.ObjectPathStaticProperty} objectPath
 */
SP.WorkflowServices.InteropService = function(context, objectPath) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @return {!SP.WorkflowServices.InteropService}
 */
SP.WorkflowServices.InteropService.getCurrent = function(context) {};

/**
 * @param {!SP.Guid} listId
 * @param {!SP.Guid} itemGuid
 * @return {void}
 */
SP.WorkflowServices.InteropService.prototype.enableEvents = function(listId, itemGuid) {};

/**
 * @param {!SP.Guid} listId
 * @param {!SP.Guid} itemGuid
 * @return {void}
 */
SP.WorkflowServices.InteropService.prototype.disableEvents = function(listId, itemGuid) {};

/**
 * @param {string} associationName
 * @param {!SP.Guid} correlationId
 * @param {!SP.Guid} listId
 * @param {!SP.Guid} itemGuid
 * @param {?} workflowParameters
 * @return {!SP.GuidResult}
 */
SP.WorkflowServices.InteropService.prototype.startWorkflow = function(associationName, correlationId, listId, itemGuid, workflowParameters) {};

/**
 * @param {!SP.Guid} instanceId
 * @return {void}
 */
SP.WorkflowServices.InteropService.prototype.cancelWorkflow = function(instanceId) {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientRuntimeContext} context
 */
SP.WorkflowServices.WorkflowDefinition = function(context) {};

/**
 * Url of the association form
 * @return {string}
 */
SP.WorkflowServices.WorkflowDefinition.prototype.get_associationUrl = function() {};

/**
 * Url of the association form
 * @param {string} value
 * @return {string}
 */
SP.WorkflowServices.WorkflowDefinition.prototype.set_associationUrl = function(value) {};

/**
 * @return {string}
 */
SP.WorkflowServices.WorkflowDefinition.prototype.get_description = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.WorkflowServices.WorkflowDefinition.prototype.set_description = function(value) {};

/**
 * @return {string}
 */
SP.WorkflowServices.WorkflowDefinition.prototype.get_displayName = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.WorkflowServices.WorkflowDefinition.prototype.set_displayName = function(value) {};

/**
 * Identifier for a draft version of the workflow definition
 * @return {string}
 */
SP.WorkflowServices.WorkflowDefinition.prototype.get_draftVersion = function() {};

/**
 * Identifier for a draft version of the workflow definition
 * @param {string} value
 * @return {string}
 */
SP.WorkflowServices.WorkflowDefinition.prototype.set_draftVersion = function(value) {};

/**
 * Defines the fields of the workflow initiation forms and association forms (CAML string)
 * @return {string}
 */
SP.WorkflowServices.WorkflowDefinition.prototype.get_formField = function() {};

/**
 * Defines the fields of the workflow initiation forms and association forms (CAML string)
 * @param {string} value
 * @return {string}
 */
SP.WorkflowServices.WorkflowDefinition.prototype.set_formField = function(value) {};

/**
 * @return {string}
 */
SP.WorkflowServices.WorkflowDefinition.prototype.get_id = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.WorkflowServices.WorkflowDefinition.prototype.set_id = function(value) {};

/**
 * @return {string}
 */
SP.WorkflowServices.WorkflowDefinition.prototype.get_initiationUrl = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.WorkflowServices.WorkflowDefinition.prototype.set_initiationUrl = function(value) {};

/**
 * Gets custom properties of the workflow definition
 * @return {!Object<string,?>}
 */
SP.WorkflowServices.WorkflowDefinition.prototype.get_properties = function() {};

/**
 * true if the workflow definition has been published to the external workflow host; false if the workflow definition is only saved on the site
 * @return {boolean}
 */
SP.WorkflowServices.WorkflowDefinition.prototype.get_published = function() {};

/**
 * Determines whether to automatically generate an association form for this workflow.
 * If the value is true, and the associationUrl is not already set, a default association form is automatically generated for the workflow when saveDefinition is called.
 * @return {boolean}
 */
SP.WorkflowServices.WorkflowDefinition.prototype.get_requiresAssociationForm = function() {};

/**
 * Determines whether to automatically generate an association form for this workflow.
 * If the value is true, and the associationUrl is not already set, a default association form is automatically generated for the workflow when saveDefinition is called.
 * @param {boolean} value
 * @return {boolean}
 */
SP.WorkflowServices.WorkflowDefinition.prototype.set_requiresAssociationForm = function(value) {};

/**
 * Determines whether to automatically generate an initiation form for this workflow.
 * If the value is true, and the initiationUrl is not already set, a default initiation form is automatically generated for the workflow when saveDefinition is called.
 * @return {boolean}
 */
SP.WorkflowServices.WorkflowDefinition.prototype.get_requiresInitiationForm = function() {};

/**
 * Determines whether to automatically generate an initiation form for this workflow.
 * If the value is true, and the initiationUrl is not already set, a default initiation form is automatically generated for the workflow when saveDefinition is called.
 * @param {boolean} value
 * @return {boolean}
 */
SP.WorkflowServices.WorkflowDefinition.prototype.set_requiresInitiationForm = function(value) {};

/**
 * RestrictToScope is a GUID value, used in conjunction with the RestrictToType property to further restrict the scope of the definition.
 * For example, if the RestrictToType is "List", then setting the RestrictToScope to a particular list identifier limits the definition to be associable only to the specified list.
 * If the RestrictToType is "List" but the RestrictToScope is null or the empty string, then the definition is associable to any list.
 * @return {string}
 */
SP.WorkflowServices.WorkflowDefinition.prototype.get_restrictToScope = function() {};

/**
 * RestrictToScope is a GUID value, used in conjunction with the RestrictToType property to further restrict the scope of the definition.
 * For example, if the RestrictToType is "List", then setting the RestrictToScope to a particular list identifier limits the definition to be associable only to the specified list.
 * If the RestrictToType is "List" but the RestrictToScope is null or the empty string, then the definition is associable to any list.
 * @param {string} value
 * @return {string}
 */
SP.WorkflowServices.WorkflowDefinition.prototype.set_restrictToScope = function(value) {};

/**
 * RestrictToType determines the possible event source type for a workflow subscription that uses this definition.
 * Possible values include "List", "Site", the empty string, or null.
 * @return {string}
 */
SP.WorkflowServices.WorkflowDefinition.prototype.get_restrictToType = function() {};

/**
 * RestrictToType determines the possible event source type for a workflow subscription that uses this definition.
 * Possible values include "List", "Site", the empty string, or null.
 * @param {string} value
 * @return {string}
 */
SP.WorkflowServices.WorkflowDefinition.prototype.set_restrictToType = function(value) {};

/**
 * XAML definition of the workflow
 * @return {string}
 */
SP.WorkflowServices.WorkflowDefinition.prototype.get_xaml = function() {};

/**
 * XAML definition of the workflow
 * @param {string} value
 * @return {string}
 */
SP.WorkflowServices.WorkflowDefinition.prototype.set_xaml = function(value) {};

/**
 * This method adds a key-value pair (propertyName, value) to the workflow definition object�s property bag.
 * @param {string} propertyName
 * @param {string} value
 * @return {void}
 */
SP.WorkflowServices.WorkflowDefinition.prototype.setProperty = function(propertyName, value) {};

/**
 * This method is internal and is not intended to be used in your code.
 * @param {?} parentNode
 * @return {void}
 */
SP.WorkflowServices.WorkflowDefinition.prototype.initPropertiesFromJson = function(parentNode) {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.WorkflowServices.WorkflowDefinitionCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.WorkflowServices.WorkflowDefinition}
 */
SP.WorkflowServices.WorkflowDefinitionCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.WorkflowServices.WorkflowDefinition}
 */
SP.WorkflowServices.WorkflowDefinitionCollection.prototype.get_item = function(index) {};

/**
 * returns SP.WorkflowDefinition class
 * @return {?}
 */
SP.WorkflowServices.WorkflowDefinitionCollection.prototype.get_childItemType = function() {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.WorkflowServices.WorkflowDeploymentService = function() {};

/**
 * Returns an XML representation of a list of valid Workflow Manager Client 1.0 actions for the specified web (WorkflowInfo element).
 * @param {!SP.Web} web
 * @return {!SP.StringResult}
 */
SP.WorkflowServices.WorkflowDeploymentService.prototype.getDesignerActions = function(web) {};

/**
 * Returns an XML representation of a collection of XAML class signatures for workflow definitions.
 * @param {string} lastChanged
 * @return {!SP.ClientResult<?>}
 */
SP.WorkflowServices.WorkflowDeploymentService.prototype.getActivitySignatures = function(lastChanged) {};

/**
 * Saves a SharePoint workflow definition to the workflow store.
 * @param {!SP.WorkflowServices.WorkflowDefinition} definition
 * @return {!SP.GuidResult}
 */
SP.WorkflowServices.WorkflowDeploymentService.prototype.saveDefinition = function(definition) {};

/**
 * Validates the specified activity against workflow definitions in the workflow store.
 * @param {string} activityXaml
 * @return {!SP.StringResult}
 */
SP.WorkflowServices.WorkflowDeploymentService.prototype.validateActivity = function(activityXaml) {};

/**
 * Publishes a workflow definition to the workflow store.
 * @param {string} definitionId
 * @return {void}
 */
SP.WorkflowServices.WorkflowDeploymentService.prototype.publishDefinition = function(definitionId) {};

/**
 * Marks a workflow definition as deprecated. Currently running workflow instances are allowed to complete, but new instances of the workflow definition are prevented from starting.
 * @param {string} definitionId
 * @return {void}
 */
SP.WorkflowServices.WorkflowDeploymentService.prototype.deprecateDefinition = function(definitionId) {};

/**
 * Deletes a workflow definition.
 * @param {string} definitionId The guid identifier of the workflow definition.
 * @return {void}
 */
SP.WorkflowServices.WorkflowDeploymentService.prototype.deleteDefinition = function(definitionId) {};

/**
 * Retrieves workflow definitions from the workflow store that match the tags.
 * @param {boolean} publishedOnly
 * @return {!SP.WorkflowServices.WorkflowDefinitionCollection}
 */
SP.WorkflowServices.WorkflowDeploymentService.prototype.enumerateDefinitions = function(publishedOnly) {};

/**
 * Retrieves a specified workflow definition from the workflow store.
 * @param {string} definitionId The guid identifier of the workflow definition.
 * @return {!SP.WorkflowServices.WorkflowDefinition}
 */
SP.WorkflowServices.WorkflowDeploymentService.prototype.getDefinition = function(definitionId) {};

/**
 * Saves the collateral file of a workflow definition.
 * @param {string} workflowDefinitionId The guid identifier of the workflow definition.
 * @param {string} leafFileName
 * @param {!SP.Base64EncodedByteArray} fileContent
 * @return {void}
 */
SP.WorkflowServices.WorkflowDeploymentService.prototype.saveCollateral = function(workflowDefinitionId, leafFileName, fileContent) {};

/**
 * Deletes the URL of a workflow definition's collateral file.
 * @param {string} workflowDefinitionId The guid identifier of the workflow definition.
 * @param {string} leafFileName
 * @return {void}
 */
SP.WorkflowServices.WorkflowDeploymentService.prototype.deleteCollateral = function(workflowDefinitionId, leafFileName) {};

/**
 * Retrieves the URL of the collateral file of the workflow definition.
 * @param {string} workflowDefinitionId The guid identifier of the workflow definition.
 * @param {string} leafFileName The leaf name of the collateral file.
 * @return {!SP.StringResult}
 */
SP.WorkflowServices.WorkflowDeploymentService.prototype.getCollateralUri = function(workflowDefinitionId, leafFileName) {};

/**
 * Packages a single workflow definition into a SharePoint solution package (.wsp file) and saves the package to the Site Assets library.
 * Returns the URL of the package file in the Site Asset library.
 * Remarks:
 * 1. This method does not activate the package.
 * 2. If a package with the same name already exists in the Site Assets library, the method adds an integer suffix in braces to the file name, e.g. packageDefaultFilename{2}.wsp
 * @param {!SP.Guid} definitionId The guid identifier of the workflow definition.
 * @param {string} packageDefaultFilename The default filename to choose for the new package.
 * @param {string} packageTitle The title of the package.
 * @param {string} packageDescription The description of the package.
 * @return {!SP.StringResult}
 */
SP.WorkflowServices.WorkflowDeploymentService.prototype.packageDefinition = function(definitionId, packageDefaultFilename, packageTitle, packageDescription) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.WorkflowServices.WorkflowInstance = function() {};

/**
 * Contains the error string or exception information if the workflow faults.
 * @return {string}
 */
SP.WorkflowServices.WorkflowInstance.prototype.get_faultInfo = function() {};

/**
 * Unique identifier (GUID) for the workflow instance
 * @return {string}
 */
SP.WorkflowServices.WorkflowInstance.prototype.get_id = function() {};

/**
 * Gets the Coordinated Universal Time (UTC) when this workflow instance was created.
 * @return {string}
 */
SP.WorkflowServices.WorkflowInstance.prototype.get_instanceCreated = function() {};

/**
 * Gets the Coordinated Universal Time (UTC) when the workflow instance state was last persisted
 * @return {string}
 */
SP.WorkflowServices.WorkflowInstance.prototype.get_lastUpdated = function() {};

/**
 * Specifies properties of this workflow instance
 * @return {!Object<string,string>}
 */
SP.WorkflowServices.WorkflowInstance.prototype.get_properties = function() {};

/**
 * Returns runtime status of the workflow instance
 * @return {SP.WorkflowServices.WorkflowStatus}
 */
SP.WorkflowServices.WorkflowInstance.prototype.get_status = function() {};

/**
 * Specifies the custom status set by workflow authors.
 * @return {string}
 */
SP.WorkflowServices.WorkflowInstance.prototype.get_userStatus = function() {};

/**
 * Specifies the custom status set by workflow authors.
 * @param {string} value
 * @return {string}
 */
SP.WorkflowServices.WorkflowInstance.prototype.set_userStatus = function(value) {};

/**
 * Gets the unique identifier (GUID) of the subscription that instantiates the WorkflowInstance
 * @return {!SP.Guid}
 */
SP.WorkflowServices.WorkflowInstance.prototype.get_workflowSubscriptionId = function() {};

/**
 * This method is internal and is not intended to be used in your code.
 * @param {?} parentNode
 * @return {void}
 */
SP.WorkflowServices.WorkflowInstance.prototype.initPropertiesFromJson = function(parentNode) {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.WorkflowServices.WorkflowInstanceCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.WorkflowServices.WorkflowInstance}
 */
SP.WorkflowServices.WorkflowInstanceCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.WorkflowServices.WorkflowInstance}
 */
SP.WorkflowServices.WorkflowInstanceCollection.prototype.get_item = function(index) {};

/**
 * returns SP.WorkflowInstance class
 * @return {?}
 */
SP.WorkflowServices.WorkflowInstanceCollection.prototype.get_childItemType = function() {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.WorkflowServices.WorkflowInstanceService = function() {};

/**
 * Starts a Workflow Manager Client 1.0 instance specified by the subscription and passes the supplied parameters.
 * Returns GUID of the instance object.
 * @param {!SP.WorkflowServices.WorkflowSubscription} subscription
 * @param {!Object<string,?>} payload Object that contains name-value pairs of parameter names and values to pass into the workflow instance.
 * @return {!SP.GuidResult}
 */
SP.WorkflowServices.WorkflowInstanceService.prototype.startWorkflow = function(subscription, payload) {};

/**
 * Starts a Workflow Manager Client 1.0 instance specified by the subscription and passes the supplied parameters.
 * Returns GUID of the instance object.
 * @param {!SP.WorkflowServices.WorkflowSubscription} subscription The subscription associated with the workflow instance.
 * @param {number} itemId The integer id of the list item on which to start the workflow instance.
 * @param {!Object<string,?>} payload Object that contains name-value pairs of parameter names and values to pass into the workflow instance.
 * @return {!SP.GuidResult}
 */
SP.WorkflowServices.WorkflowInstanceService.prototype.startWorkflowOnListItem = function(subscription, itemId, payload) {};

/**
 * Gets workflow instance specified by the provided instance GUID
 * @param {string} instanceId
 * @return {!SP.WorkflowServices.WorkflowInstance}
 */
SP.WorkflowServices.WorkflowInstanceService.prototype.getInstance = function(instanceId) {};

/**
 * Gets a workflow instance collection comprising the 100 most recent workflow instances started by a specified subscription.
 * @param {!SP.WorkflowServices.WorkflowSubscription} parentSubscription
 * @return {!SP.WorkflowServices.WorkflowInstanceCollection}
 */
SP.WorkflowServices.WorkflowInstanceService.prototype.enumerate = function(parentSubscription) {};

/**
 * Gets a workflow instance collection comprising 100 workflow instances starting at the specified offset.
 * @param {!SP.WorkflowServices.WorkflowSubscription} parentSubscription
 * @param {number} offset
 * @return {!SP.WorkflowServices.WorkflowInstanceCollection}
 */
SP.WorkflowServices.WorkflowInstanceService.prototype.enumerateWithOffset = function(parentSubscription, offset) {};

/**
 * Gets the list of instances for the specified list item.
 * @param {string} listId
 * @param {number} itemId
 * @return {!SP.WorkflowServices.WorkflowInstanceCollection}
 */
SP.WorkflowServices.WorkflowInstanceService.prototype.enumerateInstancesForListItem = function(listId, itemId) {};

/**
 * Gets the list of instances for the specified list item.
 * @param {string} listId
 * @param {number} itemId
 * @param {number} offset
 * @return {!SP.WorkflowServices.WorkflowInstanceCollection}
 */
SP.WorkflowServices.WorkflowInstanceService.prototype.enumerateInstancesForListItemWithOffset = function(listId, itemId, offset) {};

/**
 * Gets the list of instances for the current site.
 * @return {!SP.WorkflowServices.WorkflowInstanceCollection}
 */
SP.WorkflowServices.WorkflowInstanceService.prototype.enumerateInstancesForSite = function() {};

/**
 * Gets the list of instances for the current site.
 * @param {number} offset
 * @return {!SP.WorkflowServices.WorkflowInstanceCollection}
 */
SP.WorkflowServices.WorkflowInstanceService.prototype.enumerateInstancesForSiteWithOffset = function(offset) {};

/**
 * Retrieves a count of all the instances of the specified WorkflowSubscription.
 * @param {!SP.WorkflowServices.WorkflowSubscription} parentSubscription
 * @return {!SP.IntResult}
 */
SP.WorkflowServices.WorkflowInstanceService.prototype.countInstances = function(parentSubscription) {};

/**
 * Retrieves a count of the instances of the specified WorkflowSubscription that have a specified status.
 * @param {!SP.WorkflowServices.WorkflowSubscription} parentSubscription
 * @param {SP.WorkflowServices.WorkflowStatus} status
 * @return {!SP.IntResult}
 */
SP.WorkflowServices.WorkflowInstanceService.prototype.countInstancesWithStatus = function(parentSubscription, status) {};

/**
 * Sends a cancel message to the specified workflow instance and permits the instance to execute a cancellation scope.
 * @param {!SP.WorkflowServices.WorkflowInstance} instance
 * @return {void}
 */
SP.WorkflowServices.WorkflowInstanceService.prototype.cancelWorkflow = function(instance) {};

/**
 * Terminate a workflow instance forcefully by deleting it from memory. The instance is not allowed to execute a cancellation scope
 * @param {!SP.WorkflowServices.WorkflowInstance} instance
 * @return {void}
 */
SP.WorkflowServices.WorkflowInstanceService.prototype.terminateWorkflow = function(instance) {};

/**
 * @param {!SP.WorkflowServices.WorkflowInstance} instance
 * @return {void}
 */
SP.WorkflowServices.WorkflowInstanceService.prototype.suspendWorkflow = function(instance) {};

/**
 * @param {!SP.WorkflowServices.WorkflowInstance} instance
 * @return {void}
 */
SP.WorkflowServices.WorkflowInstanceService.prototype.resumeWorkflow = function(instance) {};

/**
 * Sends a custom event to a running workflow with the event payload.
 * @param {!SP.WorkflowServices.WorkflowInstance} instance
 * @param {string} eventName
 * @param {string} payload
 * @return {void}
 */
SP.WorkflowServices.WorkflowInstanceService.prototype.publishCustomEvent = function(instance, eventName, payload) {};

/**
 * @param {!SP.WorkflowServices.WorkflowInstance} instance
 * @return {!SP.StringResult}
 */
SP.WorkflowServices.WorkflowInstanceService.prototype.getDebugInfo = function(instance) {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.Web} web
 */
SP.WorkflowServices.WorkflowServicesManager = function(context, web) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.Web} web
 * @return {!SP.WorkflowServices.WorkflowServicesManager}
 */
SP.WorkflowServices.WorkflowServicesManager.newObject = function(context, web) {};

/**
 * The current application identifier.
 * @return {string}
 */
SP.WorkflowServices.WorkflowServicesManager.prototype.get_appId = function() {};

/**
 * Indicates whether this workflow service is actively connected to a workflow host.
 * @return {boolean}
 */
SP.WorkflowServices.WorkflowServicesManager.prototype.get_isConnected = function() {};

/**
 * Returns the path of the current scope in the workflow host.
 * @return {string}
 */
SP.WorkflowServices.WorkflowServicesManager.prototype.get_scopePath = function() {};

/**
 * @return {!SP.WorkflowServices.WorkflowDeploymentService}
 */
SP.WorkflowServices.WorkflowServicesManager.prototype.getWorkflowDeploymentService = function() {};

/**
 * @return {!SP.WorkflowServices.WorkflowInstanceService}
 */
SP.WorkflowServices.WorkflowServicesManager.prototype.getWorkflowInstanceService = function() {};

/**
 * @return {!SP.WorkflowServices.InteropService}
 */
SP.WorkflowServices.WorkflowServicesManager.prototype.getWorkflowInteropService = function() {};

/**
 * @return {!SP.WorkflowServices.WorkflowSubscriptionService}
 */
SP.WorkflowServices.WorkflowServicesManager.prototype.getWorkflowSubscriptionService = function() {};

/**
 * This method is internal and is not intended to be used in your code.
 * @param {?} parentNode
 * @return {void}
 */
SP.WorkflowServices.WorkflowServicesManager.prototype.initPropertiesFromJson = function(parentNode) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.WorkflowServices.WorkflowSubscription = function() {};

/**
 * Gets the unique ID of the workflow definition to activate.
 * @return {!SP.Guid}
 */
SP.WorkflowServices.WorkflowSubscription.prototype.get_definitionId = function() {};

/**
 * Sets the unique ID of the workflow definition to activate.
 * @param {!SP.Guid} value
 * @return {!SP.Guid}
 */
SP.WorkflowServices.WorkflowSubscription.prototype.set_definitionId = function(value) {};

/**
 * Gets a boolean value that specifies if the workflow subscription is enabled.
 * When disabled, new instances of the subscription cannot be started, but existing instances will continue to run.
 * @return {boolean}
 */
SP.WorkflowServices.WorkflowSubscription.prototype.get_enabled = function() {};

/**
 * Sets a boolean value that enables or disables the workflow subscription.
 * When disabled, new instances of the subscription cannot be started, but existing instances will continue to run.
 * @param {boolean} value
 * @return {boolean}
 */
SP.WorkflowServices.WorkflowSubscription.prototype.set_enabled = function(value) {};

/**
 * Gets the logical source instance name of the event. (GUID)
 * @return {string}
 */
SP.WorkflowServices.WorkflowSubscription.prototype.get_eventSourceId = function() {};

/**
 * Sets the logical source instance name of the event. (GUID)
 * @param {string} value
 * @return {string}
 */
SP.WorkflowServices.WorkflowSubscription.prototype.set_eventSourceId = function(value) {};

/**
 * Gets or sets the list of event types for which the subscription is listening.
 * For SharePoint events, these will map to a value in the SPEventReceiverType enumeration.
 * @return {!Array<string>}
 */
SP.WorkflowServices.WorkflowSubscription.prototype.get_eventTypes = function() {};

/**
 * Gets or sets the list of event types for which the subscription is listening.
 * For SharePoint events, these will map to a value in the SPEventReceiverType enumeration.
 * @param {!Array<string>} value
 * @return {!Array<string>}
 */
SP.WorkflowServices.WorkflowSubscription.prototype.set_eventTypes = function(value) {};

/**
 * Unique identifier (GUID) of the workflow subscription
 * @return {string}
 */
SP.WorkflowServices.WorkflowSubscription.prototype.get_id = function() {};

/**
 * Unique identifier (GUID) of the workflow subscription
 * @param {string} value
 * @return {string}
 */
SP.WorkflowServices.WorkflowSubscription.prototype.set_id = function(value) {};

/**
 * Boolean value that specifies whether multiple workflow instances can be started manually on the same list item at the same time. This property can be used for list workflows only.
 * @return {boolean}
 */
SP.WorkflowServices.WorkflowSubscription.prototype.get_manualStartBypassesActivationLimit = function() {};

/**
 * Boolean value that specifies whether multiple workflow instances can be started manually on the same list item at the same time. This property can be used for list workflows only.
 * @param {boolean} value
 * @return {boolean}
 */
SP.WorkflowServices.WorkflowSubscription.prototype.set_manualStartBypassesActivationLimit = function(value) {};

/**
 * Gets the name of the workflow subscription for the specified event source.
 * @return {string}
 */
SP.WorkflowServices.WorkflowSubscription.prototype.get_name = function() {};

/**
 * Sets the name of the workflow subscription for the specified event source.
 * @param {string} value
 * @return {string}
 */
SP.WorkflowServices.WorkflowSubscription.prototype.set_name = function(value) {};

/**
 * Gets the properties and values to pass to the workflow definition when the subscription is matched.
 * @return {?}
 */
SP.WorkflowServices.WorkflowSubscription.prototype.get_propertyDefinitions = function() {};

/**
 * Gets the name of the workflow status field on the specified list.
 * @return {string}
 */
SP.WorkflowServices.WorkflowSubscription.prototype.get_statusFieldName = function() {};

/**
 * Gets or sets the name of the workflow status field on the specified list.
 * @param {string} value
 * @return {string}
 */
SP.WorkflowServices.WorkflowSubscription.prototype.set_statusFieldName = function(value) {};

/**
 * Sets the name-value pairs for workflow definition initiation parameters that are stored in the PropertyDefinitions property
 * @param {string} propertyName
 * @param {string} value
 * @return {void}
 */
SP.WorkflowServices.WorkflowSubscription.prototype.setProperty = function(propertyName, value) {};

/**
 * This method is internal and is not intended to be used in your code.
 * @param {?} parentNode
 * @return {void}
 */
SP.WorkflowServices.WorkflowSubscription.prototype.initPropertiesFromJson = function(parentNode) {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.WorkflowServices.WorkflowSubscriptionCollection = function() {};

/**
 * @param {number} index
 * @return {!SP.WorkflowServices.WorkflowSubscription}
 */
SP.WorkflowServices.WorkflowSubscriptionCollection.prototype.itemAt = function(index) {};

/**
 * @param {number} index
 * @return {!SP.WorkflowServices.WorkflowSubscription}
 */
SP.WorkflowServices.WorkflowSubscriptionCollection.prototype.get_item = function(index) {};

/**
 * returns SP.WorkflowInstance class
 * @return {?}
 */
SP.WorkflowServices.WorkflowSubscriptionCollection.prototype.get_childItemType = function() {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.ObjectPathStaticProperty} objectPath
 */
SP.WorkflowServices.WorkflowSubscriptionService = function(context, objectPath) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @return {!SP.WorkflowServices.WorkflowSubscriptionService}
 */
SP.WorkflowServices.WorkflowSubscriptionService.getCurrent = function(context) {};

/**
 * Creates a workflow subscription for a workflow, and returns the unique identifier of the new subscription.
 * @param {!SP.WorkflowServices.WorkflowSubscription} subscription
 * @return {!SP.GuidResult}
 */
SP.WorkflowServices.WorkflowSubscriptionService.prototype.publishSubscription = function(subscription) {};

/**
 * Creates a workflow subscription for a workflow and if necessary an event receiver on the specified list.
 * Also writes an EventSourceId that matches the list as the event source.
 * Returns the unique identifier of the new subscription.
 * @param {!SP.WorkflowServices.WorkflowSubscription} subscription
 * @param {string} listId Unique identifier (GUID) for the specified list.
 * @return {!SP.GuidResult}
 */
SP.WorkflowServices.WorkflowSubscriptionService.prototype.publishSubscriptionForList = function(subscription, listId) {};

/**
 * Ensures that an event receiver will monitor a list for the specified event.
 * \@eventName eventName The name of the event to be monitored.
 * @param {string} listId Unique identifier (GUID) for the specified list.
 * @param {string} eventName
 * @return {void}
 */
SP.WorkflowServices.WorkflowSubscriptionService.prototype.registerInterestInList = function(listId, eventName) {};

/**
 * Removes monitoring for an event receiver on the specified list with the specified event.
 * \@eventName eventName The name of the event to be removed.
 * @param {string} listId GUID of the list containing the event receiver to be unregistered.
 * @param {string} eventName
 * @return {void}
 */
SP.WorkflowServices.WorkflowSubscriptionService.prototype.unregisterInterestInList = function(listId, eventName) {};

/**
 * @param {!SP.Guid} subscriptionId
 * @return {!SP.WorkflowServices.WorkflowSubscription}
 */
SP.WorkflowServices.WorkflowSubscriptionService.prototype.getSubscription = function(subscriptionId) {};

/**
 * @param {!SP.Guid} subscriptionId
 * @return {!SP.WorkflowServices.WorkflowSubscription}
 */
SP.WorkflowServices.WorkflowSubscriptionService.prototype.deleteSubscription = function(subscriptionId) {};

/**
 * Retrieves workflow subscriptions that contains all of the workflow subscriptions on the Web
 * @return {!SP.WorkflowServices.WorkflowSubscriptionCollection}
 */
SP.WorkflowServices.WorkflowSubscriptionService.prototype.enumerateSubscriptions = function() {};

/**
 * Retrieves workflow subscriptions based on workflow definition
 * @param {string} definitionId
 * @return {!SP.WorkflowServices.WorkflowSubscriptionCollection}
 */
SP.WorkflowServices.WorkflowSubscriptionService.prototype.enumerateSubscriptionsByDefinition = function(definitionId) {};

/**
 * Retrieves workflow subscriptions based on the specified EventSourceId
 * @param {string} eventSourceId
 * @return {!SP.WorkflowServices.WorkflowSubscriptionCollection}
 */
SP.WorkflowServices.WorkflowSubscriptionService.prototype.enumerateSubscriptionsByEventSource = function(eventSourceId) {};

/**
 * Retrieves workflow subscriptions based on the specified list.
 * @param {string} listId The unique identifier (GUID) of the list on which to filter the subscriptions.
 * @return {!SP.WorkflowServices.WorkflowSubscriptionCollection}
 */
SP.WorkflowServices.WorkflowSubscriptionService.prototype.enumerateSubscriptionsByList = function(listId) {};
/** @const */
SP.Publishing = {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.Publishing.PublishingWeb = function() {};

/**
 * @param {!SP.ClientContext} context
 * @param {!SP.Web} web
 * @return {!SP.Publishing.PublishingWeb}
 */
SP.Publishing.PublishingWeb.getPublishingWeb = function(context, web) {};

/**
 * @return {!SP.Web}
 */
SP.Publishing.PublishingWeb.prototype.get_web = function() {};

/**
 * @param {!SP.Publishing.PublishingPageInformation} pageInformation
 * @return {!SP.Publishing.PublishingPage}
 */
SP.Publishing.PublishingWeb.prototype.addPublishingPage = function(pageInformation) {};
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
SP.Publishing.PublishingPageInformation = function() {};

/**
 * @return {!SP.Folder}
 */
SP.Publishing.PublishingPageInformation.prototype.get_folder = function() {};

/**
 * @param {!SP.Folder} value
 * @return {!SP.Folder}
 */
SP.Publishing.PublishingPageInformation.prototype.set_folder = function(value) {};

/**
 * @return {string}
 */
SP.Publishing.PublishingPageInformation.prototype.get_name = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.Publishing.PublishingPageInformation.prototype.set_name = function(value) {};

/**
 * @return {!SP.ListItem<?>}
 */
SP.Publishing.PublishingPageInformation.prototype.get_pageLayoutListItem = function() {};

/**
 * @param {!SP.ListItem<?>} value
 * @return {!SP.ListItem<?>}
 */
SP.Publishing.PublishingPageInformation.prototype.set_pageLayoutListItem = function(value) {};
/**
 * @extends {SP.Publishing.ScheduledItem}
 * @constructor
 * @struct
 */
SP.Publishing.PublishingPage = function() {};

/**
 * @param {!SP.ClientContext} context
 * @param {!SP.ListItem<?>} sourceListItem
 * @return {!SP.Publishing.PublishingPage}
 */
SP.Publishing.PublishingPage.getPublishingPage = function(context, sourceListItem) {};

/**
 * @param {string} friendlyUrlSegment
 * @param {!SP.Publishing.Navigation.NavigationTermSetItem} editableParent
 * @param {boolean} doAddToNavigation
 * @return {!SP.StringResult}
 */
SP.Publishing.PublishingPage.prototype.addFriendlyUrl = function(friendlyUrlSegment, editableParent, doAddToNavigation) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.Publishing.ScheduledItem = function() {};

/**
 * @return {!SP.ListItem<?>}
 */
SP.Publishing.ScheduledItem.prototype.get_listItem = function() {};

/**
 * @return {!Date}
 */
SP.Publishing.ScheduledItem.prototype.get_startDate = function() {};

/**
 * @param {!Date} value
 * @return {!Date}
 */
SP.Publishing.ScheduledItem.prototype.set_startDate = function(value) {};

/**
 * @return {!Date}
 */
SP.Publishing.ScheduledItem.prototype.get_endDate = function() {};

/**
 * @param {!Date} value
 * @return {!Date}
 */
SP.Publishing.ScheduledItem.prototype.set_endDate = function(value) {};

/**
 * @param {string} approvalComment
 * @return {void}
 */
SP.Publishing.ScheduledItem.prototype.schedule = function(approvalComment) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.Publishing.PublishingSite = function() {};

/**
 * @param {!SP.ClientContext} context
 * @param {!SP.Publishing.PageLayoutCreationInformation} parameters
 * @return {void}
 */
SP.Publishing.PublishingSite.createPageLayout = function(context, parameters) {};
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
SP.Publishing.PageLayoutCreationInformation = function() {};

/**
 * @return {!SP.Web}
 */
SP.Publishing.PageLayoutCreationInformation.prototype.get_web = function() {};

/**
 * @param {!SP.Web} value
 * @return {!SP.Web}
 */
SP.Publishing.PageLayoutCreationInformation.prototype.set_web = function(value) {};

/**
 * @return {string}
 */
SP.Publishing.PageLayoutCreationInformation.prototype.get_associatedContentTypeId = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.Publishing.PageLayoutCreationInformation.prototype.set_associatedContentTypeId = function(value) {};

/**
 * @return {string}
 */
SP.Publishing.PageLayoutCreationInformation.prototype.get_masterPageUrl = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.Publishing.PageLayoutCreationInformation.prototype.set_masterPageUrl = function(value) {};

/**
 * @return {string}
 */
SP.Publishing.PageLayoutCreationInformation.prototype.get_newPageLayoutNameWithoutExtension = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.Publishing.PageLayoutCreationInformation.prototype.set_newPageLayoutNameWithoutExtension = function(value) {};

/**
 * @return {string}
 */
SP.Publishing.PageLayoutCreationInformation.prototype.get_newPageLayoutEditablePath = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.Publishing.PageLayoutCreationInformation.prototype.set_newPageLayoutEditablePath = function(value) {};
/**
 * @constructor
 * @struct
 */
SP.Publishing.SiteServicesAddins = function() {};

/**
 * @param {!SP.ClientContext} context
 * @param {!SP.Guid} addinId
 * @return {!SP.Publishing.AddinSettings}
 */
SP.Publishing.SiteServicesAddins.getSettings = function(context, addinId) {};

/**
 * @param {!SP.ClientContext} context
 * @param {!SP.Publishing.AddinSettings} addin
 * @return {void}
 */
SP.Publishing.SiteServicesAddins.setSettings = function(context, addin) {};

/**
 * @param {!SP.ClientContext} context
 * @param {!SP.Guid} addinId
 * @return {void}
 */
SP.Publishing.SiteServicesAddins.deleteSettings = function(context, addinId) {};

/**
 * @param {!SP.ClientContext} context
 * @param {string} pluginName
 * @return {!SP.Publishing.AddinPlugin}
 */
SP.Publishing.SiteServicesAddins.getPlugin = function(context, pluginName) {};

/**
 * @param {!SP.ClientContext} context
 * @param {!SP.Publishing.AddinPlugin} addin
 * @return {void}
 */
SP.Publishing.SiteServicesAddins.setPlugin = function(context, addin) {};

/**
 * @param {!SP.ClientContext} context
 * @param {string} pluginName
 * @return {void}
 */
SP.Publishing.SiteServicesAddins.deletePlugin = function(context, pluginName) {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientContext} ctx
 * @param {!SP.Guid} id
 */
SP.Publishing.AddinSettings = function(ctx, id) {};

/**
 * @return {!SP.Guid}
 */
SP.Publishing.AddinSettings.prototype.get_id = function() {};

/**
 * @return {string}
 */
SP.Publishing.AddinSettings.prototype.get_title = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.Publishing.AddinSettings.prototype.set_title = function(value) {};

/**
 * @return {string}
 */
SP.Publishing.AddinSettings.prototype.get_description = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.Publishing.AddinSettings.prototype.set_description = function(value) {};

/**
 * @return {boolean}
 */
SP.Publishing.AddinSettings.prototype.get_enabled = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
SP.Publishing.AddinSettings.prototype.set_enabled = function(value) {};

/**
 * @return {boolean}
 */
SP.Publishing.AddinSettings.prototype.get_namespace = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
SP.Publishing.AddinSettings.prototype.set_namespace = function(value) {};

/**
 * @return {string}
 */
SP.Publishing.AddinSettings.prototype.get_headScript = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.Publishing.AddinSettings.prototype.set_headScript = function(value) {};

/**
 * @return {string}
 */
SP.Publishing.AddinSettings.prototype.get_htmlStartBody = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.Publishing.AddinSettings.prototype.set_htmlStartBody = function(value) {};

/**
 * @return {string}
 */
SP.Publishing.AddinSettings.prototype.get_htmlEndBody = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.Publishing.AddinSettings.prototype.set_htmlEndBody = function(value) {};

/**
 * @return {!Object<string,string>}
 */
SP.Publishing.AddinSettings.prototype.get_metaTagPagePropertyMappings = function() {};

/**
 * @param {!Object<string,string>} value
 * @return {!Object<string,string>}
 */
SP.Publishing.AddinSettings.prototype.set_metaTagPagePropertyMappings = function(value) {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientContext} ctx
 */
SP.Publishing.AddinPlugin = function(ctx) {};

/**
 * @return {string}
 */
SP.Publishing.AddinPlugin.prototype.get_description = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.Publishing.AddinPlugin.prototype.set_description = function(value) {};

/**
 * @return {string}
 */
SP.Publishing.AddinPlugin.prototype.get_markup = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.Publishing.AddinPlugin.prototype.set_markup = function(value) {};

/**
 * @return {string}
 */
SP.Publishing.AddinPlugin.prototype.get_title = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.Publishing.AddinPlugin.prototype.set_title = function(value) {};
/**
 * @constructor
 * @struct
 */
SP.Publishing.DesignPackage = function() {};

/**
 * @param {!SP.ClientContext} context
 * @param {!SP.Site} site
 * @param {!SP.Publishing.DesignPackageInfo} info
 * @param {string} path
 * @return {void}
 */
SP.Publishing.DesignPackage.install = function(context, site, info, path) {};

/**
 * @param {!SP.ClientContext} context
 * @param {!SP.Site} site
 * @param {!SP.Publishing.DesignPackageInfo} info
 * @return {void}
 */
SP.Publishing.DesignPackage.uninstall = function(context, site, info) {};

/**
 * @param {!SP.ClientContext} context
 * @param {!SP.Site} site
 * @param {!SP.Publishing.DesignPackageInfo} info
 * @return {void}
 */
SP.Publishing.DesignPackage.apply = function(context, site, info) {};

/**
 * @param {!SP.ClientContext} context
 * @param {!SP.Site} site
 * @param {boolean} includeSearchConfiguration
 * @return {!SP.ClientResult<!SP.Publishing.DesignPackageInfo>}
 */
SP.Publishing.DesignPackage.exportEnterprise = function(context, site, includeSearchConfiguration) {};

/**
 * @param {!SP.ClientContext} context
 * @param {!SP.Site} site
 * @param {string} packageName
 * @param {boolean} includeSearchConfiguration
 * @return {!SP.ClientResult<!SP.Publishing.DesignPackageInfo>}
 */
SP.Publishing.DesignPackage.exportSmallBusiness = function(context, site, packageName, includeSearchConfiguration) {};
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
SP.Publishing.DesignPackageInfo = function() {};

/**
 * @return {string}
 */
SP.Publishing.DesignPackageInfo.prototype.get_packageName = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.Publishing.DesignPackageInfo.prototype.set_packageName = function(value) {};

/**
 * @return {!SP.Guid}
 */
SP.Publishing.DesignPackageInfo.prototype.get_packageGuid = function() {};

/**
 * @param {!SP.Guid} value
 * @return {!SP.Guid}
 */
SP.Publishing.DesignPackageInfo.prototype.set_packageGuid = function(value) {};

/**
 * @return {number}
 */
SP.Publishing.DesignPackageInfo.prototype.get_majorVersion = function() {};

/**
 * @param {number} value
 * @return {number}
 */
SP.Publishing.DesignPackageInfo.prototype.set_majorVersion = function(value) {};

/**
 * @return {number}
 */
SP.Publishing.DesignPackageInfo.prototype.get_minorVersion = function() {};

/**
 * @param {number} value
 * @return {number}
 */
SP.Publishing.DesignPackageInfo.prototype.set_minorVersion = function(value) {};
/**
 * @constructor
 * @struct
 */
SP.Publishing.SiteImageRenditions = function() {};

/**
 * @param {!SP.ClientContext} context
 * @return {!Array<!SP.Publishing.ImageRendition>}
 */
SP.Publishing.SiteImageRenditions.getRenditions = function(context) {};

/**
 * @param {!SP.ClientContext} context
 * @param {!Array<!SP.Publishing.ImageRendition>} renditions
 * @return {void}
 */
SP.Publishing.SiteImageRenditions.setRenditions = function(context, renditions) {};
/**
 * @extends {SP.ClientValueObject}
 * @constructor
 * @struct
 */
SP.Publishing.ImageRendition = function() {};

/**
 * @return {number}
 */
SP.Publishing.ImageRendition.prototype.get_id = function() {};

/**
 * @return {number}
 */
SP.Publishing.ImageRendition.prototype.get_version = function() {};

/**
 * @return {string}
 */
SP.Publishing.ImageRendition.prototype.get_name = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.Publishing.ImageRendition.prototype.set_name = function(value) {};

/**
 * @return {number}
 */
SP.Publishing.ImageRendition.prototype.get_width = function() {};

/**
 * @param {number} value
 * @return {number}
 */
SP.Publishing.ImageRendition.prototype.set_width = function(value) {};

/**
 * @return {number}
 */
SP.Publishing.ImageRendition.prototype.get_height = function() {};

/**
 * @param {number} value
 * @return {number}
 */
SP.Publishing.ImageRendition.prototype.set_height = function(value) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.Publishing.Variations = function() {};

/**
 * @param {!SP.ClientContext} context
 * @return {!SP.ClientObjectList<!SP.Publishing.VariationLabel>}
 */
SP.Publishing.Variations.getLabels = function(context) {};

/**
 * @param {!SP.ClientContext} context
 * @param {string} currentUrl
 * @param {string} labelTitle
 * @return {!SP.StringResult}
 */
SP.Publishing.Variations.getPeerUrl = function(context, currentUrl, labelTitle) {};

/**
 * @param {!SP.ClientContext} context
 * @param {!SP.Guid} listId
 * @param {!Array<number>} itemIds
 * @return {void}
 */
SP.Publishing.Variations.updateListItems = function(context, listId, itemIds) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.Publishing.VariationLabel = function() {};

/**
 * @return {string}
 */
SP.Publishing.VariationLabel.prototype.get_displayName = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.Publishing.VariationLabel.prototype.set_displayName = function(value) {};

/**
 * @return {boolean}
 */
SP.Publishing.VariationLabel.prototype.get_isSource = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
SP.Publishing.VariationLabel.prototype.set_isSource = function(value) {};

/**
 * @return {string}
 */
SP.Publishing.VariationLabel.prototype.get_language = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.Publishing.VariationLabel.prototype.set_language = function(value) {};

/**
 * @return {string}
 */
SP.Publishing.VariationLabel.prototype.get_locale = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.Publishing.VariationLabel.prototype.set_locale = function(value) {};

/**
 * @return {string}
 */
SP.Publishing.VariationLabel.prototype.get_title = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.Publishing.VariationLabel.prototype.set_title = function(value) {};

/**
 * @return {string}
 */
SP.Publishing.VariationLabel.prototype.get_topWebUrl = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.Publishing.VariationLabel.prototype.set_topWebUrl = function(value) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.Publishing.CustomizableString = function() {};

/**
 * @return {string}
 */
SP.Publishing.CustomizableString.prototype.get_defaultValue = function() {};

/**
 * @return {string}
 */
SP.Publishing.CustomizableString.prototype.get_value = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.Publishing.CustomizableString.prototype.set_value = function(value) {};

/**
 * @return {boolean}
 */
SP.Publishing.CustomizableString.prototype.get_usesDefaultValue = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
SP.Publishing.CustomizableString.prototype.set_usesDefaultValue = function(value) {};
/** @const */
SP.Publishing.Navigation = {};

/** @const */
SP.Publishing.Navigation.NavigationLinkType = {};
/** @const {number} */
SP.Publishing.Navigation.NavigationLinkType.root;
/** @const {number} */
SP.Publishing.Navigation.NavigationLinkType.friendlyUrl;
/** @const {number} */
SP.Publishing.Navigation.NavigationLinkType.simpleLink;

/** @const */
SP.Publishing.Navigation.StandardNavigationSource = {};
/** @const {number} */
SP.Publishing.Navigation.StandardNavigationSource.unknown;
/** @const {number} */
SP.Publishing.Navigation.StandardNavigationSource.portalProvider;
/** @const {number} */
SP.Publishing.Navigation.StandardNavigationSource.taxonomyProvider;
/** @const {number} */
SP.Publishing.Navigation.StandardNavigationSource.inheritFromParentWeb;
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.Publishing.Navigation.NavigationTermSetItem = function() {};

/**
 * @return {!SP.Guid}
 */
SP.Publishing.Navigation.NavigationTermSetItem.prototype.get_id = function() {};

/**
 * @return {boolean}
 */
SP.Publishing.Navigation.NavigationTermSetItem.prototype.get_isReadOnly = function() {};

/**
 * @return {SP.Publishing.Navigation.NavigationLinkType}
 */
SP.Publishing.Navigation.NavigationTermSetItem.prototype.get_linkType = function() {};

/**
 * @param {SP.Publishing.Navigation.NavigationLinkType} value
 * @return {SP.Publishing.Navigation.NavigationLinkType}
 */
SP.Publishing.Navigation.NavigationTermSetItem.prototype.set_linkType = function(value) {};

/**
 * @return {!SP.Publishing.CustomizableString}
 */
SP.Publishing.Navigation.NavigationTermSetItem.prototype.get_targetUrlForChildTerms = function() {};

/**
 * @return {!SP.Publishing.CustomizableString}
 */
SP.Publishing.Navigation.NavigationTermSetItem.prototype.get_catalogTargetUrlForChildTerms = function() {};

/**
 * @return {string}
 */
SP.Publishing.Navigation.NavigationTermSetItem.prototype.get_taxonomyName = function() {};

/**
 * @return {!SP.Publishing.CustomizableString}
 */
SP.Publishing.Navigation.NavigationTermSetItem.prototype.get_title = function() {};

/**
 * @return {!SP.Publishing.Navigation.NavigationTermCollection}
 */
SP.Publishing.Navigation.NavigationTermSetItem.prototype.get_terms = function() {};

/**
 * @return {!SP.Publishing.Navigation.NavigationTermSetView}
 */
SP.Publishing.Navigation.NavigationTermSetItem.prototype.get_view = function() {};

/**
 * @param {string} termName
 * @param {SP.Publishing.Navigation.NavigationLinkType} linkType
 * @param {!SP.Guid} termId
 * @return {!SP.Taxonomy.Term}
 */
SP.Publishing.Navigation.NavigationTermSetItem.prototype.createTerm = function(termName, linkType, termId) {};

/**
 * @return {!SP.Taxonomy.TermStore}
 */
SP.Publishing.Navigation.NavigationTermSetItem.prototype.getTaxonomyTermStore = function() {};

/**
 * @param {string} browserQueryString
 * @return {!SP.StringResult}
 */
SP.Publishing.Navigation.NavigationTermSetItem.prototype.getResolvedDisplayUrl = function(browserQueryString) {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.Publishing.Navigation.NavigationTermCollection = function() {};
/**
 * @extends {SP.Publishing.Navigation.NavigationTermSetItem}
 * @constructor
 * @struct
 */
SP.Publishing.Navigation.NavigationTerm = function() {};

/**
 * @return {string}
 */
SP.Publishing.Navigation.NavigationTerm.prototype.get_associatedFolderUrl = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.Publishing.Navigation.NavigationTerm.prototype.set_associatedFolderUrl = function(value) {};

/**
 * @return {!SP.Publishing.CustomizableString}
 */
SP.Publishing.Navigation.NavigationTerm.prototype.get_catalogTargetUrl = function() {};

/**
 * @return {string}
 */
SP.Publishing.Navigation.NavigationTerm.prototype.get_categoryImageUrl = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.Publishing.Navigation.NavigationTerm.prototype.set_categoryImageUrl = function(value) {};

/**
 * @return {!SP.Publishing.Navigation.NavigationTermProviderNameCollection}
 */
SP.Publishing.Navigation.NavigationTerm.prototype.get_excludedProviders = function() {};

/**
 * @return {boolean}
 */
SP.Publishing.Navigation.NavigationTerm.prototype.get_excludeFromCurrentNavigation = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
SP.Publishing.Navigation.NavigationTerm.prototype.set_excludeFromCurrentNavigation = function(value) {};

/**
 * @return {boolean}
 */
SP.Publishing.Navigation.NavigationTerm.prototype.get_excludeFromGlobalNavigation = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
SP.Publishing.Navigation.NavigationTerm.prototype.set_excludeFromGlobalNavigation = function(value) {};

/**
 * @return {!SP.Publishing.CustomizableString}
 */
SP.Publishing.Navigation.NavigationTerm.prototype.get_friendlyUrlSegment = function() {};

/**
 * @return {string}
 */
SP.Publishing.Navigation.NavigationTerm.prototype.get_hoverText = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.Publishing.Navigation.NavigationTerm.prototype.set_hoverText = function(value) {};

/**
 * @return {boolean}
 */
SP.Publishing.Navigation.NavigationTerm.prototype.get_isDeprecated = function() {};

/**
 * @return {boolean}
 */
SP.Publishing.Navigation.NavigationTerm.prototype.get_isPinned = function() {};

/**
 * @return {boolean}
 */
SP.Publishing.Navigation.NavigationTerm.prototype.get_isPinnedRoot = function() {};

/**
 * @return {!SP.Publishing.Navigation.NavigationTerm}
 */
SP.Publishing.Navigation.NavigationTerm.prototype.get_parent = function() {};

/**
 * @return {string}
 */
SP.Publishing.Navigation.NavigationTerm.prototype.get_simpleLinkUrl = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.Publishing.Navigation.NavigationTerm.prototype.set_simpleLinkUrl = function(value) {};

/**
 * @return {!SP.Publishing.CustomizableString}
 */
SP.Publishing.Navigation.NavigationTerm.prototype.get_targetUrl = function() {};

/**
 * @return {!SP.Publishing.Navigation.NavigationTermSet}
 */
SP.Publishing.Navigation.NavigationTerm.prototype.get_termSet = function() {};

/**
 * @param {!SP.Taxonomy.TaxonomySession} taxonomySession
 * @return {!SP.Publishing.Navigation.NavigationTerm}
 */
SP.Publishing.Navigation.NavigationTerm.prototype.getAsEditable = function(taxonomySession) {};

/**
 * @param {!SP.Publishing.Navigation.NavigationTermSetView} newView
 * @return {!SP.Publishing.Navigation.NavigationTerm}
 */
SP.Publishing.Navigation.NavigationTerm.prototype.getWithNewView = function(newView) {};

/**
 * @param {string} browserQueryString
 * @param {!Array<string>} remainingUrlSegments
 * @return {!SP.StringResult}
 */
SP.Publishing.Navigation.NavigationTerm.prototype.getResolvedTargetUrl = function(browserQueryString, remainingUrlSegments) {};

/**
 * @return {!SP.StringResult}
 */
SP.Publishing.Navigation.NavigationTerm.prototype.getResolvedTargetUrlWithoutQuery = function() {};

/**
 * @return {!SP.StringResult}
 */
SP.Publishing.Navigation.NavigationTerm.prototype.getResolvedAssociatedFolderUrl = function() {};

/**
 * @return {!SP.StringResult}
 */
SP.Publishing.Navigation.NavigationTerm.prototype.getWebRelativeFriendlyUrl = function() {};

/**
 * @return {!SP.Publishing.Navigation.NavigationTermCollection}
 */
SP.Publishing.Navigation.NavigationTerm.prototype.getAllParentTerms = function() {};

/**
 * @return {!SP.Taxonomy.Term}
 */
SP.Publishing.Navigation.NavigationTerm.prototype.getTaxonomyTerm = function() {};

/**
 * @param {!SP.Publishing.Navigation.NavigationTermSetItem} newParent
 * @return {void}
 */
SP.Publishing.Navigation.NavigationTerm.prototype.move = function(newParent) {};

/**
 * @return {void}
 */
SP.Publishing.Navigation.NavigationTerm.prototype.deleteObject = function() {};

/**
 * @param {!SP.ClientContext} context
 * @param {!SP.Taxonomy.Term} term
 * @param {!SP.Web} web
 * @param {string} siteMapProviderName
 * @return {!SP.Publishing.Navigation.NavigationTerm}
 */
SP.Publishing.Navigation.NavigationTerm.getAsResolvedByWeb = function(context, term, web, siteMapProviderName) {};

/**
 * @param {!SP.ClientContext} context
 * @param {!SP.Taxonomy.Term} term
 * @param {!SP.Publishing.Navigation.NavigationTermSetView} view
 * @return {!SP.Publishing.Navigation.NavigationTerm}
 */
SP.Publishing.Navigation.NavigationTerm.getAsResolvedByView = function(context, term, view) {};
/**
 * @extends {SP.Publishing.Navigation.NavigationTermSetItem}
 * @constructor
 * @struct
 */
SP.Publishing.Navigation.NavigationTermSet = function() {};

/**
 * @return {boolean}
 */
SP.Publishing.Navigation.NavigationTermSet.prototype.get_isNavigationTermSet = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
SP.Publishing.Navigation.NavigationTermSet.prototype.set_isNavigationTermSet = function(value) {};

/**
 * @return {number}
 */
SP.Publishing.Navigation.NavigationTermSet.prototype.get_lcid = function() {};

/**
 * @return {boolean}
 */
SP.Publishing.Navigation.NavigationTermSet.prototype.get_loadedFromPersistedData = function() {};

/**
 * @return {!SP.Guid}
 */
SP.Publishing.Navigation.NavigationTermSet.prototype.get_termGroupId = function() {};

/**
 * @return {!SP.Guid}
 */
SP.Publishing.Navigation.NavigationTermSet.prototype.get_termStoreId = function() {};

/**
 * @param {!SP.Taxonomy.TaxonomySession} taxonomySession
 * @return {!SP.Publishing.Navigation.NavigationTermSet}
 */
SP.Publishing.Navigation.NavigationTermSet.prototype.getAsEditable = function(taxonomySession) {};

/**
 * @param {!SP.Publishing.Navigation.NavigationTermSetView} newView
 * @return {!SP.Publishing.Navigation.NavigationTermSet}
 */
SP.Publishing.Navigation.NavigationTermSet.prototype.getWithNewView = function(newView) {};

/**
 * @return {!SP.Taxonomy.TermSet}
 */
SP.Publishing.Navigation.NavigationTermSet.prototype.getTaxonomyTermSet = function() {};

/**
 * @return {!SP.Publishing.Navigation.NavigationTermCollection}
 */
SP.Publishing.Navigation.NavigationTermSet.prototype.getAllTerms = function() {};

/**
 * @param {string} url
 * @return {!SP.Publishing.Navigation.NavigationTerm}
 */
SP.Publishing.Navigation.NavigationTermSet.prototype.findTermForUrl = function(url) {};

/**
 * @param {!SP.ClientContext} context
 * @param {!SP.Taxonomy.TermSet} termSet
 * @param {!SP.Web} web
 * @param {string} siteMapProviderName
 * @return {!SP.Publishing.Navigation.NavigationTermSet}
 */
SP.Publishing.Navigation.NavigationTermSet.getAsResolvedByWeb = function(context, termSet, web, siteMapProviderName) {};

/**
 * @param {!SP.ClientContext} context
 * @param {!SP.Taxonomy.TermSet} termSet
 * @param {!SP.Publishing.Navigation.NavigationTermSetView} view
 * @return {!SP.Publishing.Navigation.NavigationTermSet}
 */
SP.Publishing.Navigation.NavigationTermSet.getAsResolvedByView = function(context, termSet, view) {};
/**
 * @extends {SP.ClientObjectCollection}
 * @constructor
 * @struct
 */
SP.Publishing.Navigation.NavigationTermProviderNameCollection = function() {};

/**
 * @param {string} item
 * @return {void}
 */
SP.Publishing.Navigation.NavigationTermProviderNameCollection.prototype.Add = function(item) {};

/**
 * @return {void}
 */
SP.Publishing.Navigation.NavigationTermProviderNameCollection.prototype.Clear = function() {};

/**
 * @param {string} item
 * @return {!SP.BooleanResult}
 */
SP.Publishing.Navigation.NavigationTermProviderNameCollection.prototype.Remove = function(item) {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientContext} context
 * @param {!SP.Web} web
 * @param {string} siteMapProviderName
 */
SP.Publishing.Navigation.NavigationTermSetView = function(context, web, siteMapProviderName) {};

/**
 * @return {boolean}
 */
SP.Publishing.Navigation.NavigationTermSetView.prototype.get_excludeDeprecatedTerms = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
SP.Publishing.Navigation.NavigationTermSetView.prototype.set_excludeDeprecatedTerms = function(value) {};

/**
 * @return {boolean}
 */
SP.Publishing.Navigation.NavigationTermSetView.prototype.get_excludeTermsByPermissions = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
SP.Publishing.Navigation.NavigationTermSetView.prototype.set_excludeTermsByPermissions = function(value) {};

/**
 * @return {boolean}
 */
SP.Publishing.Navigation.NavigationTermSetView.prototype.get_excludeTermsByProvider = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
SP.Publishing.Navigation.NavigationTermSetView.prototype.set_excludeTermsByProvider = function(value) {};

/**
 * @return {string}
 */
SP.Publishing.Navigation.NavigationTermSetView.prototype.get_serverRelativeSiteUrl = function() {};

/**
 * @return {string}
 */
SP.Publishing.Navigation.NavigationTermSetView.prototype.get_serverRelativeWebUrl = function() {};

/**
 * @return {string}
 */
SP.Publishing.Navigation.NavigationTermSetView.prototype.get_siteMapProviderName = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.Publishing.Navigation.NavigationTermSetView.prototype.set_siteMapProviderName = function(value) {};

/**
 * @return {!SP.Guid}
 */
SP.Publishing.Navigation.NavigationTermSetView.prototype.get_webId = function() {};

/**
 * @return {string}
 */
SP.Publishing.Navigation.NavigationTermSetView.prototype.get_webTitle = function() {};

/**
 * @return {!SP.Publishing.Navigation.NavigationTermSetView}
 */
SP.Publishing.Navigation.NavigationTermSetView.prototype.getCopy = function() {};

/**
 * @param {!SP.ClientContext} context
 * @return {!SP.Publishing.Navigation.NavigationTermSetView}
 */
SP.Publishing.Navigation.NavigationTermSetView.createEmptyInstance = function(context) {};
/**
 * @constructor
 * @struct
 */
SP.Publishing.Navigation.TaxonomyNavigation = function() {};

/**
 * @param {!SP.ClientContext} context
 * @param {!SP.Web} web
 * @return {!SP.Publishing.Navigation.WebNavigationSettings}
 */
SP.Publishing.Navigation.TaxonomyNavigation.getWebNavigationSettings = function(context, web) {};

/**
 * @param {!SP.ClientContext} context
 * @param {!SP.Web} web
 * @param {string} siteMapProviderName
 * @param {boolean} includeInheritedSettings
 * @return {!SP.Publishing.Navigation.NavigationTermSet}
 */
SP.Publishing.Navigation.TaxonomyNavigation.getTermSetForWeb = function(context, web, siteMapProviderName, includeInheritedSettings) {};

/**
 * @param {!SP.ClientContext} context
 * @param {!SP.Taxonomy.Term} navigationTerm
 * @param {boolean} crawlAsFriendlyUrlPage
 * @return {!SP.BooleanResult}
 */
SP.Publishing.Navigation.TaxonomyNavigation.setCrawlAsFriendlyUrlPage = function(context, navigationTerm, crawlAsFriendlyUrlPage) {};

/**
 * @param {!SP.ClientContext} context
 * @param {!SP.Web} web
 * @return {!SP.IntResult}
 */
SP.Publishing.Navigation.TaxonomyNavigation.getNavigationLcidForWeb = function(context, web) {};

/**
 * @param {!SP.ClientContext} context
 * @param {!SP.Site} site
 * @return {void}
 */
SP.Publishing.Navigation.TaxonomyNavigation.flushSiteFromCache = function(context, site) {};

/**
 * @param {!SP.ClientContext} context
 * @param {!SP.Web} web
 * @return {void}
 */
SP.Publishing.Navigation.TaxonomyNavigation.flushWebFromCache = function(context, web) {};

/**
 * @param {!SP.ClientContext} context
 * @param {!SP.Web} webForPermissions
 * @param {!SP.Guid} termStoreId
 * @param {!SP.Guid} termSetId
 * @return {void}
 */
SP.Publishing.Navigation.TaxonomyNavigation.flushTermSetFromCache = function(context, webForPermissions, termStoreId, termSetId) {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientContext} context
 * @param {!SP.Web} web
 */
SP.Publishing.Navigation.WebNavigationSettings = function(context, web) {};

/**
 * @return {boolean}
 */
SP.Publishing.Navigation.WebNavigationSettings.prototype.get_addNewPagesToNavigation = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
SP.Publishing.Navigation.WebNavigationSettings.prototype.set_addNewPagesToNavigation = function(value) {};

/**
 * @return {boolean}
 */
SP.Publishing.Navigation.WebNavigationSettings.prototype.get_createFriendlyUrlsForNewPages = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
SP.Publishing.Navigation.WebNavigationSettings.prototype.set_createFriendlyUrlsForNewPages = function(value) {};

/**
 * @return {!SP.Publishing.Navigation.StandardNavigationSettings}
 */
SP.Publishing.Navigation.WebNavigationSettings.prototype.get_currentNavigation = function() {};

/**
 * @return {!SP.Publishing.Navigation.StandardNavigationSettings}
 */
SP.Publishing.Navigation.WebNavigationSettings.prototype.get_globalNavigation = function() {};

/**
 * @param {!SP.Taxonomy.TaxonomySession} taxonomySession
 * @return {void}
 */
SP.Publishing.Navigation.WebNavigationSettings.prototype.update = function(taxonomySession) {};

/**
 * @return {void}
 */
SP.Publishing.Navigation.WebNavigationSettings.prototype.resetToDefaults = function() {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.Publishing.Navigation.StandardNavigationSettings = function() {};

/**
 * @return {!SP.Guid}
 */
SP.Publishing.Navigation.StandardNavigationSettings.prototype.get_termSetId = function() {};

/**
 * @param {!SP.Guid} value
 * @return {!SP.Guid}
 */
SP.Publishing.Navigation.StandardNavigationSettings.prototype.set_termSetId = function(value) {};

/**
 * @return {!SP.Guid}
 */
SP.Publishing.Navigation.StandardNavigationSettings.prototype.get_termStoreId = function() {};

/**
 * @param {!SP.Guid} value
 * @return {!SP.Guid}
 */
SP.Publishing.Navigation.StandardNavigationSettings.prototype.set_termStoreId = function(value) {};

/**
 * @return {SP.Publishing.Navigation.StandardNavigationSource}
 */
SP.Publishing.Navigation.StandardNavigationSettings.prototype.get_source = function() {};

/**
 * @param {SP.Publishing.Navigation.StandardNavigationSource} value
 * @return {SP.Publishing.Navigation.StandardNavigationSource}
 */
SP.Publishing.Navigation.StandardNavigationSettings.prototype.set_source = function(value) {};
/** @const */
SP.CompliancePolicy = {};

/** @const */
SP.CompliancePolicy.SPContainerType = {};
/** @const {number} */
SP.CompliancePolicy.SPContainerType.site;
/** @const {number} */
SP.CompliancePolicy.SPContainerType.web;
/** @const {number} */
SP.CompliancePolicy.SPContainerType.list;
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.CompliancePolicy.SPContainerId = function() {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.List<?>} list
 * @return {!SP.CompliancePolicy.SPContainerId}
 */
SP.CompliancePolicy.SPContainerId.createFromList = function(context, list) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.Web} web
 * @return {!SP.CompliancePolicy.SPContainerId}
 */
SP.CompliancePolicy.SPContainerId.createFromWeb = function(context, web) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.Site} site
 * @return {!SP.CompliancePolicy.SPContainerId}
 */
SP.CompliancePolicy.SPContainerId.createFromSite = function(context, site) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {?} containerId
 * @return {!SP.CompliancePolicy.SPContainerId}
 */
SP.CompliancePolicy.SPContainerId.create = function(context, containerId) {};

/**
 * @return {!SP.ContentType}
 */
SP.CompliancePolicy.SPContainerId.prototype.get_containerType = function() {};

/**
 * @param {!SP.ContentType} value
 * @return {!SP.ContentType}
 */
SP.CompliancePolicy.SPContainerId.prototype.set_containerType = function(value) {};

/**
 * @return {!SP.Guid}
 */
SP.CompliancePolicy.SPContainerId.prototype.get_listId = function() {};

/**
 * @param {!SP.Guid} value
 * @return {!SP.Guid}
 */
SP.CompliancePolicy.SPContainerId.prototype.set_listId = function(value) {};

/**
 * @return {!SP.Guid}
 */
SP.CompliancePolicy.SPContainerId.prototype.get_siteId = function() {};

/**
 * @param {!SP.Guid} value
 * @return {!SP.Guid}
 */
SP.CompliancePolicy.SPContainerId.prototype.set_siteId = function(value) {};

/**
 * @return {string}
 */
SP.CompliancePolicy.SPContainerId.prototype.get_siteUrl = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.CompliancePolicy.SPContainerId.prototype.set_siteUrl = function(value) {};

/**
 * @return {!SP.Guid}
 */
SP.CompliancePolicy.SPContainerId.prototype.get_tenantId = function() {};

/**
 * @param {!SP.Guid} value
 * @return {!SP.Guid}
 */
SP.CompliancePolicy.SPContainerId.prototype.set_tenantId = function(value) {};

/**
 * @return {string}
 */
SP.CompliancePolicy.SPContainerId.prototype.get_title = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.CompliancePolicy.SPContainerId.prototype.set_title = function(value) {};

/**
 * @return {?}
 */
SP.CompliancePolicy.SPContainerId.prototype.get_version = function() {};

/**
 * @param {?} value
 * @return {?}
 */
SP.CompliancePolicy.SPContainerId.prototype.set_version = function(value) {};

/**
 * @return {!SP.Guid}
 */
SP.CompliancePolicy.SPContainerId.prototype.get_webId = function() {};

/**
 * @param {!SP.Guid} value
 * @return {!SP.Guid}
 */
SP.CompliancePolicy.SPContainerId.prototype.set_webId = function(value) {};

/**
 * @return {!SP.StringResult}
 */
SP.CompliancePolicy.SPContainerId.prototype.serialize = function() {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.CompliancePolicy.SPPolicyAssociation = function() {};

/**
 * @return {boolean}
 */
SP.CompliancePolicy.SPPolicyAssociation.prototype.get_allowOverride = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
SP.CompliancePolicy.SPPolicyAssociation.prototype.set_allowOverride = function(value) {};

/**
 * @return {string}
 */
SP.CompliancePolicy.SPPolicyAssociation.prototype.get_comment = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.CompliancePolicy.SPPolicyAssociation.prototype.set_comment = function(value) {};

/**
 * @return {!Array<?>}
 */
SP.CompliancePolicy.SPPolicyAssociation.prototype.get_defaultPolicyDefinitionConfigId = function() {};

/**
 * @param {!Array<?>} value
 * @return {!Array<?>}
 */
SP.CompliancePolicy.SPPolicyAssociation.prototype.set_defaultPolicyDefinitionConfigId = function(value) {};

/**
 * @return {string}
 */
SP.CompliancePolicy.SPPolicyAssociation.prototype.get_description = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.CompliancePolicy.SPPolicyAssociation.prototype.set_description = function(value) {};

/**
 * @return {boolean}
 */
SP.CompliancePolicy.SPPolicyAssociation.prototype.get_identity = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
SP.CompliancePolicy.SPPolicyAssociation.prototype.set_identity = function(value) {};

/**
 * @return {string}
 */
SP.CompliancePolicy.SPPolicyAssociation.prototype.get_name = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.CompliancePolicy.SPPolicyAssociation.prototype.set_name = function(value) {};

/**
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyAssociation.prototype.get_policyApplyStatus = function() {};

/**
 * @param {?} value
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyAssociation.prototype.set_policyApplyStatus = function(value) {};

/**
 * @return {!Array<?>}
 */
SP.CompliancePolicy.SPPolicyAssociation.prototype.get_policyDefinitionConfigIds = function() {};

/**
 * @param {!Array<?>} value
 * @return {!Array<?>}
 */
SP.CompliancePolicy.SPPolicyAssociation.prototype.set_policyDefinitionConfigIds = function(value) {};

/**
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyAssociation.prototype.get_scope = function() {};

/**
 * @param {?} value
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyAssociation.prototype.set_scope = function(value) {};

/**
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyAssociation.prototype.get_source = function() {};

/**
 * @param {?} value
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyAssociation.prototype.set_source = function(value) {};

/**
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyAssociation.prototype.get_version = function() {};

/**
 * @param {?} value
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyAssociation.prototype.set_version = function(value) {};

/**
 * @return {!Date}
 */
SP.CompliancePolicy.SPPolicyAssociation.prototype.get_whenAppliedUTC = function() {};

/**
 * @param {!Date} value
 * @return {!Date}
 */
SP.CompliancePolicy.SPPolicyAssociation.prototype.set_whenAppliedUTC = function(value) {};

/**
 * @return {!Date}
 */
SP.CompliancePolicy.SPPolicyAssociation.prototype.get_whenChangedUTC = function() {};

/**
 * @param {!Date} value
 * @return {!Date}
 */
SP.CompliancePolicy.SPPolicyAssociation.prototype.set_whenChangedUTC = function(value) {};

/**
 * @return {!Date}
 */
SP.CompliancePolicy.SPPolicyAssociation.prototype.get_whenCreatedUTC = function() {};

/**
 * @param {!Date} value
 * @return {!Date}
 */
SP.CompliancePolicy.SPPolicyAssociation.prototype.set_whenCreatedUTC = function(value) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.CompliancePolicy.SPPolicyBinding = function() {};

/**
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyBinding.prototype.get_identity = function() {};

/**
 * @param {?} value
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyBinding.prototype.set_identity = function(value) {};

/**
 * @return {boolean}
 */
SP.CompliancePolicy.SPPolicyBinding.prototype.get_isExempt = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
SP.CompliancePolicy.SPPolicyBinding.prototype.set_isExempt = function(value) {};

/**
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyBinding.prototype.get_mode = function() {};

/**
 * @param {?} value
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyBinding.prototype.set_mode = function(value) {};

/**
 * @return {string}
 */
SP.CompliancePolicy.SPPolicyBinding.prototype.get_name = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.CompliancePolicy.SPPolicyBinding.prototype.set_name = function(value) {};

/**
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyBinding.prototype.get_policyApplyStatus = function() {};

/**
 * @param {?} value
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyBinding.prototype.set_policyApplyStatus = function(value) {};

/**
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyBinding.prototype.get_policyAssociationConfigId = function() {};

/**
 * @param {?} value
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyBinding.prototype.set_policyAssociationConfigId = function(value) {};

/**
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyBinding.prototype.get_policyDefinitionConfigId = function() {};

/**
 * @param {?} value
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyBinding.prototype.set_policyDefinitionConfigId = function(value) {};

/**
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyBinding.prototype.get_policyRuleConfigId = function() {};

/**
 * @param {?} value
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyBinding.prototype.set_policyRuleConfigId = function(value) {};

/**
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyBinding.prototype.get_scope = function() {};

/**
 * @param {?} value
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyBinding.prototype.set_scope = function(value) {};

/**
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyBinding.prototype.get_source = function() {};

/**
 * @param {?} value
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyBinding.prototype.set_source = function(value) {};

/**
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyBinding.prototype.get_version = function() {};

/**
 * @param {?} value
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyBinding.prototype.set_version = function(value) {};

/**
 * @return {!Date}
 */
SP.CompliancePolicy.SPPolicyBinding.prototype.get_whenAppliedUTC = function() {};

/**
 * @param {!Date} value
 * @return {!Date}
 */
SP.CompliancePolicy.SPPolicyBinding.prototype.set_whenAppliedUTC = function(value) {};

/**
 * @return {!Date}
 */
SP.CompliancePolicy.SPPolicyBinding.prototype.get_whenChangedUTC = function() {};

/**
 * @param {!Date} value
 * @return {!Date}
 */
SP.CompliancePolicy.SPPolicyBinding.prototype.set_whenChangedUTC = function(value) {};

/**
 * @return {!Date}
 */
SP.CompliancePolicy.SPPolicyBinding.prototype.get_whenCreatedUTC = function() {};

/**
 * @param {!Date} value
 * @return {!Date}
 */
SP.CompliancePolicy.SPPolicyBinding.prototype.set_whenCreatedUTC = function(value) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.CompliancePolicy.SPPolicyDefinition = function() {};

/**
 * @return {string}
 */
SP.CompliancePolicy.SPPolicyDefinition.prototype.get_comment = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.CompliancePolicy.SPPolicyDefinition.prototype.set_comment = function(value) {};

/**
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyDefinition.prototype.get_createdBy = function() {};

/**
 * @param {?} value
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyDefinition.prototype.set_createdBy = function(value) {};

/**
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyDefinition.prototype.get_defaultPolicyRuleConfigId = function() {};

/**
 * @param {?} value
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyDefinition.prototype.set_defaultPolicyRuleConfigId = function(value) {};

/**
 * @return {string}
 */
SP.CompliancePolicy.SPPolicyDefinition.prototype.get_description = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.CompliancePolicy.SPPolicyDefinition.prototype.set_description = function(value) {};

/**
 * @return {boolean}
 */
SP.CompliancePolicy.SPPolicyDefinition.prototype.get_enabled = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
SP.CompliancePolicy.SPPolicyDefinition.prototype.set_enabled = function(value) {};

/**
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyDefinition.prototype.get_identity = function() {};

/**
 * @param {?} value
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyDefinition.prototype.set_identity = function(value) {};

/**
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyDefinition.prototype.get_lastModifiedBy = function() {};

/**
 * @param {?} value
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyDefinition.prototype.set_lastModifiedBy = function(value) {};

/**
 * @return {string}
 */
SP.CompliancePolicy.SPPolicyDefinition.prototype.get_name = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.CompliancePolicy.SPPolicyDefinition.prototype.set_name = function(value) {};

/**
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyDefinition.prototype.get_mode = function() {};

/**
 * @param {?} value
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyDefinition.prototype.set_mode = function(value) {};

/**
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyDefinition.prototype.get_scenario = function() {};

/**
 * @param {?} value
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyDefinition.prototype.set_scenario = function(value) {};

/**
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyDefinition.prototype.get_source = function() {};

/**
 * @param {?} value
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyDefinition.prototype.set_source = function(value) {};

/**
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyDefinition.prototype.get_version = function() {};

/**
 * @param {?} value
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyDefinition.prototype.set_version = function(value) {};

/**
 * @return {!Date}
 */
SP.CompliancePolicy.SPPolicyDefinition.prototype.get_whenChangedUTC = function() {};

/**
 * @param {!Date} value
 * @return {!Date}
 */
SP.CompliancePolicy.SPPolicyDefinition.prototype.set_whenChangedUTC = function(value) {};

/**
 * @return {!Date}
 */
SP.CompliancePolicy.SPPolicyDefinition.prototype.get_whenCreatedUTC = function() {};

/**
 * @param {!Date} value
 * @return {!Date}
 */
SP.CompliancePolicy.SPPolicyDefinition.prototype.set_whenCreatedUTC = function(value) {};
/**
 * @extends {SP.ClientObject}
 * @constructor
 * @struct
 */
SP.CompliancePolicy.SPPolicyRule = function() {};

/**
 * @return {string}
 */
SP.CompliancePolicy.SPPolicyRule.prototype.get_comment = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.CompliancePolicy.SPPolicyRule.prototype.set_comment = function(value) {};

/**
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyRule.prototype.get_createdBy = function() {};

/**
 * @param {?} value
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyRule.prototype.set_createdBy = function(value) {};

/**
 * @return {string}
 */
SP.CompliancePolicy.SPPolicyRule.prototype.get_description = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.CompliancePolicy.SPPolicyRule.prototype.set_description = function(value) {};

/**
 * @return {boolean}
 */
SP.CompliancePolicy.SPPolicyRule.prototype.get_enabled = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
SP.CompliancePolicy.SPPolicyRule.prototype.set_enabled = function(value) {};

/**
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyRule.prototype.get_identity = function() {};

/**
 * @param {?} value
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyRule.prototype.set_identity = function(value) {};

/**
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyRule.prototype.get_lastModifiedBy = function() {};

/**
 * @param {?} value
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyRule.prototype.set_lastModifiedBy = function(value) {};

/**
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyRule.prototype.get_mode = function() {};

/**
 * @param {?} value
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyRule.prototype.set_mode = function(value) {};

/**
 * @return {string}
 */
SP.CompliancePolicy.SPPolicyRule.prototype.get_name = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.CompliancePolicy.SPPolicyRule.prototype.set_name = function(value) {};

/**
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyRule.prototype.get_policyDefinitionConfigId = function() {};

/**
 * @param {?} value
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyRule.prototype.set_policyDefinitionConfigId = function(value) {};

/**
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyRule.prototype.get_priority = function() {};

/**
 * @param {?} value
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyRule.prototype.set_priority = function(value) {};

/**
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyRule.prototype.get_ruleBlob = function() {};

/**
 * @param {?} value
 * @return {?}
 */
SP.CompliancePolicy.SPPolicyRule.prototype.set_ruleBlob = function(value) {};

/**
 * @return {!Date}
 */
SP.CompliancePolicy.SPPolicyRule.prototype.get_whenChangedUTC = function() {};

/**
 * @param {!Date} value
 * @return {!Date}
 */
SP.CompliancePolicy.SPPolicyRule.prototype.set_whenChangedUTC = function(value) {};

/**
 * @return {!Date}
 */
SP.CompliancePolicy.SPPolicyRule.prototype.get_whenCreatedUTC = function() {};

/**
 * @param {!Date} value
 * @return {!Date}
 */
SP.CompliancePolicy.SPPolicyRule.prototype.set_whenCreatedUTC = function(value) {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.Web} web
 */
SP.CompliancePolicy.SPPolicyStore = function(context, web) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @return {!SP.CompliancePolicy.SPPolicyDefinition}
 */
SP.CompliancePolicy.SPPolicyStore.createPolicyDefinition = function(context) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @return {!SP.CompliancePolicy.SPPolicyBinding}
 */
SP.CompliancePolicy.SPPolicyStore.createPolicyBinding = function(context) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @return {!SP.CompliancePolicy.SPPolicyAssociation}
 */
SP.CompliancePolicy.SPPolicyStore.createPolicyAssociation = function(context) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @return {!SP.CompliancePolicy.SPPolicyRule}
 */
SP.CompliancePolicy.SPPolicyStore.createPolicyRule = function(context) {};

/**
 * @param {!SP.CompliancePolicy.SPPolicyRule} policyRule
 * @return {void}
 */
SP.CompliancePolicy.SPPolicyStore.prototype.updatePolicyRule = function(policyRule) {};

/**
 * @param {?} policyRuleId
 * @param {boolean} throwIfNull
 * @return {!SP.CompliancePolicy.SPPolicyRule}
 */
SP.CompliancePolicy.SPPolicyStore.prototype.getPolicyRule = function(policyRuleId, throwIfNull) {};

/**
 * @param {?} policyRuleId
 * @return {void}
 */
SP.CompliancePolicy.SPPolicyStore.prototype.deletePolicyRule = function(policyRuleId) {};

/**
 * @param {?} notificationId
 * @param {string} syncSvcUrl
 * @param {?} changeInfos
 * @param {boolean} syncNow
 * @param {boolean} fullSyncForTenant
 * @return {void}
 */
SP.CompliancePolicy.SPPolicyStore.prototype.notifyUnifiedPolicySync = function(notificationId, syncSvcUrl, changeInfos, syncNow, fullSyncForTenant) {};

/**
 * @param {!SP.CompliancePolicy.SPPolicyDefinition} policyDefinition
 * @return {void}
 */
SP.CompliancePolicy.SPPolicyStore.prototype.updatePolicyDefinition = function(policyDefinition) {};

/**
 * @param {?} policyDefinitionId
 * @return {!SP.CompliancePolicy.SPPolicyDefinition}
 */
SP.CompliancePolicy.SPPolicyStore.prototype.getPolicyDefinition = function(policyDefinitionId) {};

/**
 * @param {?} policyDefinitionId
 * @return {void}
 */
SP.CompliancePolicy.SPPolicyStore.prototype.deletePolicyDefinition = function(policyDefinitionId) {};

/**
 * @param {?} scenario
 * @return {!SP.ClientObjectList<!SP.CompliancePolicy.SPPolicyDefinition>}
 */
SP.CompliancePolicy.SPPolicyStore.prototype.getPolicyDefinitions = function(scenario) {};

/**
 * @param {!SP.CompliancePolicy.SPPolicyBinding} policyBinding
 * @return {void}
 */
SP.CompliancePolicy.SPPolicyStore.prototype.updatePolicyBinding = function(policyBinding) {};

/**
 * @param {?} policyBindingId
 * @return {!SP.CompliancePolicy.SPPolicyBinding}
 */
SP.CompliancePolicy.SPPolicyStore.prototype.getPolicyBinding = function(policyBindingId) {};

/**
 * @param {?} policyBindingId
 * @return {void}
 */
SP.CompliancePolicy.SPPolicyStore.prototype.deletePolicyBinding = function(policyBindingId) {};

/**
 * @param {!SP.CompliancePolicy.SPPolicyAssociation} policyAssociation
 * @return {void}
 */
SP.CompliancePolicy.SPPolicyStore.prototype.updatePolicyAssociation = function(policyAssociation) {};

/**
 * @param {?} policyAssociationId
 * @return {!SP.CompliancePolicy.SPPolicyAssociation}
 */
SP.CompliancePolicy.SPPolicyStore.prototype.getPolicyAssociation = function(policyAssociationId) {};

/**
 * @param {!SP.CompliancePolicy.SPContainerId} containerId
 * @return {!SP.CompliancePolicy.SPPolicyAssociation}
 */
SP.CompliancePolicy.SPPolicyStore.prototype.getPolicyAssociationForContainer = function(containerId) {};

/**
 * @param {?} policyAssociationId
 * @return {void}
 */
SP.CompliancePolicy.SPPolicyStore.prototype.deletePolicyAssociation = function(policyAssociationId) {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.Web} web
 */
SP.CompliancePolicy.SPPolicyStoreProxy = function(context, web) {};

/**
 * @return {string}
 */
SP.CompliancePolicy.SPPolicyStoreProxy.prototype.get_policyStoreUrl = function() {};
/** @const */
SP.Discovery = {};

/** @const */
SP.Discovery.ExportStatus = {};
/** @const {number} */
SP.Discovery.ExportStatus.notStarted;
/** @const {number} */
SP.Discovery.ExportStatus.started;
/** @const {number} */
SP.Discovery.ExportStatus.complete;
/** @const {number} */
SP.Discovery.ExportStatus.failed;

/**
 * @constructor
 * @struct
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.Web} web
 */
SP.Discovery.Case = function(context, web) {};

/**
 * @param {!Array<number>} sourceIds
 * @return {!SP.StringResult}
 */
SP.Discovery.Case.prototype.getExportContent = function(sourceIds) {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.ListItem<?>} item
 */
SP.Discovery.Export = function(context, item) {};

/**
 * @return {SP.Discovery.ExportStatus}
 */
SP.Discovery.Export.prototype.get_status = function() {};

/**
 * @param {SP.Discovery.ExportStatus} value
 * @return {SP.Discovery.ExportStatus}
 */
SP.Discovery.Export.prototype.set_status = function(value) {};

/**
 * @return {void}
 */
SP.Discovery.Export.prototype.update = function() {};

/**
 * @return {!SP.StringResult}
 */
SP.Discovery.Export.prototype.getExportContent = function() {};
/** @const */
SP.InformationPolicy = {};

/**
 * @constructor
 * @struct
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.ObjectPath} objectPath
 */
SP.InformationPolicy.ProjectPolicy = function(context, objectPath) {};

/**
 * @return {string}
 */
SP.InformationPolicy.ProjectPolicy.prototype.get_description = function() {};

/**
 * @return {string}
 */
SP.InformationPolicy.ProjectPolicy.prototype.get_emailBody = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.InformationPolicy.ProjectPolicy.prototype.set_emailBody = function(value) {};

/**
 * @return {string}
 */
SP.InformationPolicy.ProjectPolicy.prototype.get_emailBodyWithTeamMailbox = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.InformationPolicy.ProjectPolicy.prototype.set_emailBodyWithTeamMailbox = function(value) {};

/**
 * @return {string}
 */
SP.InformationPolicy.ProjectPolicy.prototype.get_emailSubject = function() {};

/**
 * @param {string} value
 * @return {string}
 */
SP.InformationPolicy.ProjectPolicy.prototype.set_emailSubject = function(value) {};

/**
 * @return {string}
 */
SP.InformationPolicy.ProjectPolicy.prototype.get_name = function() {};

/**
 * @return {void}
 */
SP.InformationPolicy.ProjectPolicy.prototype.savePolicy = function() {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.Web} web
 * @return {!SP.ClientObjectList<!SP.InformationPolicy.ProjectPolicy>}
 */
SP.InformationPolicy.ProjectPolicy.getProjectPolicies = function(context, web) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.Web} web
 * @return {!SP.InformationPolicy.ProjectPolicy}
 */
SP.InformationPolicy.ProjectPolicy.getCurrentlyAppliedProject = function(context, web) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.Web} web
 * @param {!SP.InformationPolicy.ProjectPolicy} projectPolicy
 * @return {void}
 */
SP.InformationPolicy.ProjectPolicy.applyProjectPolicy = function(context, web, projectPolicy) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.Web} web
 * @return {void}
 */
SP.InformationPolicy.ProjectPolicy.openProject = function(context, web) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.Web} web
 * @return {void}
 */
SP.InformationPolicy.ProjectPolicy.closeProject = function(context, web) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.Web} web
 * @return {void}
 */
SP.InformationPolicy.ProjectPolicy.postponeProject = function(context, web) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.Web} web
 * @return {!SP.BooleanResult}
 */
SP.InformationPolicy.ProjectPolicy.doesProjectHavePolicy = function(context, web) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.Web} web
 * @return {!SP.BooleanResult}
 */
SP.InformationPolicy.ProjectPolicy.isProjectClosed = function(context, web) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.Web} web
 * @return {!SP.DateTimeResult}
 */
SP.InformationPolicy.ProjectPolicy.getProjectCloseDate = function(context, web) {};

/**
 * @param {!SP.ClientRuntimeContext} context
 * @param {!SP.Web} web
 * @return {!SP.DateTimeResult}
 */
SP.InformationPolicy.ProjectPolicy.getProjectExpirationDate = function(context, web) {};

/**
 * @constructor
 * @struct
 * @param {string} elmTextId
 * @param {string} elmContainerId
 * @param {function(!HTMLInputElement): void} fnPopulateAutoFill
 */
function SPClientAutoFill(elmTextId, elmContainerId, fnPopulateAutoFill) {}
 /** @type {{Option: number, Footer: number, Separator: number, Loading: number}} */
SPClientAutoFill.MenuOptionType;
 /** @type {string} */
SPClientAutoFill.KeyProperty;
 /** @type {string} */
SPClientAutoFill.DisplayTextProperty;
 /** @type {string} */
SPClientAutoFill.SubDisplayTextProperty;
 /** @type {string} */
SPClientAutoFill.TitleTextProperty;
 /** @type {string} */
SPClientAutoFill.MenuOptionTypeProperty;
 /** @type {string} */
SPClientAutoFill.prototype.TextElementId;
 /** @type {string} */
SPClientAutoFill.prototype.AutoFillContainerId;
 /** @type {string} */
SPClientAutoFill.prototype.AutoFillMenuId;
 /** @type {number} */
SPClientAutoFill.prototype.VisibleItemCount;
 /** @type {number} */
SPClientAutoFill.prototype.CurrentFocusOption;
 /** @type {number} */
SPClientAutoFill.prototype.AutoFillMinTextLength;
 /** @type {number} */
SPClientAutoFill.prototype.AutoFillTimeout;
 /** @type {string} */
SPClientAutoFill.prototype.AutoFillCallbackTimeoutID;
 /** @type {function(string, !ISPClientAutoFillData): void} */
SPClientAutoFill.prototype.FuncOnAutoFillClose;
 /** @type {function(!HTMLElement): void} */
SPClientAutoFill.prototype.FuncPopulateAutoFill;
 /** @type {!Object<string,!ISPClientAutoFillData>} */
SPClientAutoFill.prototype.AllOptionData;

/**
 * @param {!HTMLInputElement} elmText
 * @return {!SPClientAutoFill}
 */
SPClientAutoFill.GetAutoFillObjFromInput = function(elmText) {};

/**
 * @param {!HTMLElement} elmChild
 * @return {!SPClientAutoFill}
 */
SPClientAutoFill.GetAutoFillObjFromContainer = function(elmChild) {};

/**
 * @param {!HTMLElement} elmChild
 * @return {!HTMLElement}
 */
SPClientAutoFill.GetAutoFillMenuItemFromOption = function(elmChild) {};

/**
 * @param {!Array<!ISPClientAutoFillData>} jsonObjSuggestions
 * @param {function(string, !ISPClientAutoFillData): void} fnOnAutoFillCloseFuncName
 * @return {void}
 */
SPClientAutoFill.prototype.PopulateAutoFill = function(jsonObjSuggestions, fnOnAutoFillCloseFuncName) {};

/**
 * @return {boolean}
 */
SPClientAutoFill.prototype.IsAutoFillOpen = function() {};

/**
 * @return {void}
 */
SPClientAutoFill.prototype.SetAutoFillHeight = function() {};

/**
 * @param {!HTMLElement} elemOption
 * @return {void}
 */
SPClientAutoFill.prototype.SelectAutoFillOption = function(elemOption) {};

/**
 * @return {void}
 */
SPClientAutoFill.prototype.FocusAutoFill = function() {};

/**
 * @return {void}
 */
SPClientAutoFill.prototype.BlurAutoFill = function() {};

/**
 * @param {!ISPClientAutoFillData} ojData
 * @return {void}
 */
SPClientAutoFill.prototype.CloseAutoFill = function(ojData) {};

/**
 * @param {boolean} bMoveNextLink
 * @return {void}
 */
SPClientAutoFill.prototype.UpdateAutoFillMenuFocus = function(bMoveNextLink) {};

/**
 * @return {void}
 */
SPClientAutoFill.prototype.UpdateAutoFillPosition = function() {};
/**
 * @record
 * @struct
 */
function ISPClientAutoFillData() {}
 /** @type {?} */
ISPClientAutoFillData.prototype.AutoFillKey;
 /** @type {string} */
ISPClientAutoFillData.prototype.AutoFillDisplayText;
 /** @type {string} */
ISPClientAutoFillData.prototype.AutoFillSubDisplayText;
 /** @type {string} */
ISPClientAutoFillData.prototype.AutoFillTitleText;
 /** @type {number} */
ISPClientAutoFillData.prototype.AutoFillMenuOptionType;
/**
 * @constructor
 * @struct
 */
function SPClientPeoplePicker() {}
 /** @type {string} */
SPClientPeoplePicker.ValueName;
 /** @type {string} */
SPClientPeoplePicker.DisplayTextName;
 /** @type {string} */
SPClientPeoplePicker.SubDisplayTextName;
 /** @type {string} */
SPClientPeoplePicker.DescriptionName;
 /** @type {string} */
SPClientPeoplePicker.SIPAddressName;
 /** @type {string} */
SPClientPeoplePicker.SuggestionsName;
 /** @type {string} */
SPClientPeoplePicker.UnvalidatedEmailAddressKey;
 /** @type {string} */
SPClientPeoplePicker.KeyProperty;
 /** @type {string} */
SPClientPeoplePicker.DisplayTextProperty;
 /** @type {string} */
SPClientPeoplePicker.SubDisplayTextProperty;
 /** @type {string} */
SPClientPeoplePicker.TitleTextProperty;
 /** @type {string} */
SPClientPeoplePicker.DomainProperty;
 /** @type {!Object<string,!SPClientPeoplePicker>} */
SPClientPeoplePicker.SPClientPeoplePickerDict;
 /** @type {string} */
SPClientPeoplePicker.prototype.TopLevelElementId;
 /** @type {string} */
SPClientPeoplePicker.prototype.EditorElementId;
 /** @type {string} */
SPClientPeoplePicker.prototype.AutoFillElementId;
 /** @type {string} */
SPClientPeoplePicker.prototype.ResolvedListElementId;
 /** @type {string} */
SPClientPeoplePicker.prototype.InitialHelpTextElementId;
 /** @type {string} */
SPClientPeoplePicker.prototype.WaitImageId;
 /** @type {string} */
SPClientPeoplePicker.prototype.HiddenInputId;
 /** @type {boolean} */
SPClientPeoplePicker.prototype.AllowEmpty;
 /** @type {boolean} */
SPClientPeoplePicker.prototype.ForceClaims;
 /** @type {boolean} */
SPClientPeoplePicker.prototype.AutoFillEnabled;
 /** @type {boolean} */
SPClientPeoplePicker.prototype.AllowMultipleUsers;
 /** @type {function(string, !Array<!ISPClientPeoplePickerEntity>): void} */
SPClientPeoplePicker.prototype.OnValueChangedClientScript;
 /** @type {function(string, !Array<!ISPClientPeoplePickerEntity>): void} */
SPClientPeoplePicker.prototype.OnUserResolvedClientScript;
 /** @type {function(string, !Array<!ISPClientPeoplePickerEntity>): void} */
SPClientPeoplePicker.prototype.OnControlValidateClientScript;
 /** @type {SP.UrlZone} */
SPClientPeoplePicker.prototype.UrlZone;
 /** @type {boolean} */
SPClientPeoplePicker.prototype.AllUrlZones;
 /** @type {number} */
SPClientPeoplePicker.prototype.SharePointGroupID;
 /** @type {boolean} */
SPClientPeoplePicker.prototype.AllowEmailAddresses;
 /** @type {!SPClientPeoplePickerMRU} */
SPClientPeoplePicker.prototype.PPMRU;
 /** @type {boolean} */
SPClientPeoplePicker.prototype.UseLocalSuggestionCache;
 /** @type {string} */
SPClientPeoplePicker.prototype.CurrentQueryStr;
 /** @type {string} */
SPClientPeoplePicker.prototype.LatestSearchQueryStr;
 /** @type {!Array<!ISPClientPeoplePickerEntity>} */
SPClientPeoplePicker.prototype.InitialSuggestions;
 /** @type {!Array<!ISPClientPeoplePickerEntity>} */
SPClientPeoplePicker.prototype.CurrentLocalSuggestions;
 /** @type {!ISPClientPeoplePickerEntity} */
SPClientPeoplePicker.prototype.CurrentLocalSuggestionsDict;
 /** @type {number} */
SPClientPeoplePicker.prototype.VisibleSuggestions;
 /** @type {string} */
SPClientPeoplePicker.prototype.PrincipalAccountType;
 /** @type {SP.Utilities.PrincipalType} */
SPClientPeoplePicker.prototype.PrincipalAccountTypeEnum;
 /** @type {string} */
SPClientPeoplePicker.prototype.EnabledClaimProviders;
 /** @type {SP.Utilities.PrincipalSource} */
SPClientPeoplePicker.prototype.SearchPrincipalSource;
 /** @type {SP.Utilities.PrincipalSource} */
SPClientPeoplePicker.prototype.ResolvePrincipalSource;
 /** @type {number} */
SPClientPeoplePicker.prototype.MaximumEntitySuggestions;
 /** @type {boolean} */
SPClientPeoplePicker.prototype.EditorWidthSet;
 /** @type {boolean} */
SPClientPeoplePicker.prototype.QueryScriptInit;
 /** @type {!SPClientAutoFill} */
SPClientPeoplePicker.prototype.AutoFillControl;
 /** @type {number} */
SPClientPeoplePicker.prototype.TotalUserCount;
 /** @type {number} */
SPClientPeoplePicker.prototype.UnresolvedUserCount;
 /** @type {!Object<string,!SP.StringResult>} */
SPClientPeoplePicker.prototype.UserQueryDict;
 /** @type {!Object<string,!SPClientPeoplePickerProcessedUser>} */
SPClientPeoplePicker.prototype.ProcessedUserList;
 /** @type {boolean} */
SPClientPeoplePicker.prototype.HasInputError;
 /** @type {boolean} */
SPClientPeoplePicker.prototype.HasServerError;
 /** @type {boolean} */
SPClientPeoplePicker.prototype.ShowUserPresence;
 /** @type {string} */
SPClientPeoplePicker.prototype.TerminatingCharacter;
 /** @type {string} */
SPClientPeoplePicker.prototype.UnresolvedUserElmIdToReplace;
 /** @type {!SP.Guid} */
SPClientPeoplePicker.prototype.WebApplicationID;

/**
 * @param {string} clientId
 * @param {!Array<!ISPClientPeoplePickerEntity>} value
 * @param {!ISPClientPeoplePickerSchema} schema
 * @return {void}
 */
SPClientPeoplePicker.InitializeStandalonePeoplePicker = function(clientId, value, schema) {};

/**
 * @param {string} userKey
 * @return {string}
 */
SPClientPeoplePicker.ParseUserKeyPaste = function(userKey) {};

/**
 * @param {!HTMLElement} elmChild
 * @return {!HTMLElement}
 */
SPClientPeoplePicker.GetTopLevelControl = function(elmChild) {};

/**
 * @param {!ISPClientPeoplePickerEntity} entity
 * @return {!ISPClientPeoplePickerEntity}
 */
SPClientPeoplePicker.AugmentEntity = function(entity) {};

/**
 * @param {!SPClientPeoplePicker} pickerObj
 * @param {!Array<!ISPClientPeoplePickerEntity>} allEntities
 * @param {boolean=} mergeLocal
 * @return {!Array<!ISPClientPeoplePickerEntity>}
 */
SPClientPeoplePicker.AugmentEntitySuggestions = function(pickerObj, allEntities, mergeLocal) {};

/**
 * @param {!HTMLElement} elmSubElement
 * @return {!SPClientPeoplePicker}
 */
SPClientPeoplePicker.PickerObjectFromSubElement = function(elmSubElement) {};

/**
 * @param {string} strSearchLower
 * @param {!ISPClientPeoplePickerEntity} dataEntity
 * @return {boolean}
 */
SPClientPeoplePicker.TestLocalMatch = function(strSearchLower, dataEntity) {};

/**
 * @param {string} key
 * @param {string} dispText
 * @return {!ISPClientPeoplePickerEntity}
 */
SPClientPeoplePicker.BuildUnresolvedEntity = function(key, dispText) {};

/**
 * @param {!SPClientPeoplePicker} pickerObj
 * @param {!Array<!ISPClientPeoplePickerEntity>} options
 * @param {number} numOpts
 * @return {!Array<!ISPClientPeoplePickerEntity>}
 */
SPClientPeoplePicker.AddAutoFillMetaData = function(pickerObj, options, numOpts) {};

/**
 * @param {!SPClientPeoplePicker} pickerObj
 * @param {!Array<!ISPClientPeoplePickerEntity>} options
 * @return {!Array<!ISPClientPeoplePickerEntity>}
 */
SPClientPeoplePicker.BuildAutoFillMenuItems = function(pickerObj, options) {};

/**
 * @param {!ISPClientPeoplePickerEntity} entity
 * @return {boolean}
 */
SPClientPeoplePicker.IsUserEntity = function(entity) {};

/**
 * @param {string} acctStr
 * @return {number}
 */
SPClientPeoplePicker.CreateSPPrincipalType = function(acctStr) {};

/**
 * @return {!Array<!ISPClientPeoplePickerEntity>}
 */
SPClientPeoplePicker.prototype.GetAllUserInfo = function() {};

/**
 * @param {!Array<!ISPClientPeoplePickerEntity>} entities
 * @param {string=} initialErrorMsg
 * @return {void}
 */
SPClientPeoplePicker.prototype.SetInitialValue = function(entities, initialErrorMsg) {};

/**
 * @param {string} userKeys
 * @param {boolean} bSearch
 * @return {void}
 */
SPClientPeoplePicker.prototype.AddUserKeys = function(userKeys, bSearch) {};

/**
 * @param {!Array<string>} allKeys
 * @param {number} numProcessed
 * @return {void}
 */
SPClientPeoplePicker.prototype.BatchAddUserKeysOperation = function(allKeys, numProcessed) {};

/**
 * @param {function(): void} fnContinuation
 * @return {void}
 */
SPClientPeoplePicker.prototype.ResolveAllUsers = function(fnContinuation) {};

/**
 * @param {string} queryIds
 * @param {function(string, !SP.StringResult): void} onSuccess
 * @param {function(string, !SP.StringResult): void} onFailure
 * @param {function(): void} fnContinuation
 * @return {void}
 */
SPClientPeoplePicker.prototype.ExecutePickerQuery = function(queryIds, onSuccess, onFailure, fnContinuation) {};

/**
 * @param {boolean=} bRunQuery
 * @return {void}
 */
SPClientPeoplePicker.prototype.AddUnresolvedUserFromEditor = function(bRunQuery) {};

/**
 * @param {!ISPClientPeoplePickerEntity} unresolvedUserObj
 * @param {boolean=} bRunQuery
 * @return {void}
 */
SPClientPeoplePicker.prototype.AddUnresolvedUser = function(unresolvedUserObj, bRunQuery) {};

/**
 * @param {!SP.StringResult} results
 * @param {!ISPClientPeoplePickerEntity} user
 * @return {void}
 */
SPClientPeoplePicker.prototype.UpdateUnresolvedUser = function(results, user) {};

/**
 * @param {string} queryStr
 * @return {string}
 */
SPClientPeoplePicker.prototype.AddPickerSearchQuery = function(queryStr) {};

/**
 * @param {string} queryStr
 * @return {string}
 */
SPClientPeoplePicker.prototype.AddPickerResolveQuery = function(queryStr) {};

/**
 * @return {!SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters}
 */
SPClientPeoplePicker.prototype.GetPeoplePickerQueryParameters = function() {};

/**
 * @param {!ISPClientPeoplePickerEntity} userObject
 * @param {boolean=} fResolved
 * @return {string}
 */
SPClientPeoplePicker.prototype.AddProcessedUser = function(userObject, fResolved) {};

/**
 * @param {!HTMLElement} elmToRemove
 * @return {void}
 */
SPClientPeoplePicker.prototype.DeleteProcessedUser = function(elmToRemove) {};

/**
 * @return {void}
 */
SPClientPeoplePicker.prototype.OnControlValueChanged = function() {};

/**
 * @return {void}
 */
SPClientPeoplePicker.prototype.OnControlResolvedUserChanged = function() {};

/**
 * @return {void}
 */
SPClientPeoplePicker.prototype.EnsureAutoFillControl = function() {};

/**
 * @param {!Array<!ISPClientAutoFillData>} resultsTable
 * @return {void}
 */
SPClientPeoplePicker.prototype.ShowAutoFill = function(resultsTable) {};

/**
 * @return {void}
 */
SPClientPeoplePicker.prototype.FocusAutoFill = function() {};

/**
 * @return {void}
 */
SPClientPeoplePicker.prototype.BlurAutoFill = function() {};

/**
 * @return {boolean}
 */
SPClientPeoplePicker.prototype.IsAutoFillOpen = function() {};

/**
 * @return {void}
 */
SPClientPeoplePicker.prototype.EnsureEditorWidth = function() {};

/**
 * @return {void}
 */
SPClientPeoplePicker.prototype.SetFocusOnEditorEnd = function() {};

/**
 * @param {boolean=} bShowImage
 * @return {void}
 */
SPClientPeoplePicker.prototype.ToggleWaitImageDisplay = function(bShowImage) {};

/**
 * @return {void}
 */
SPClientPeoplePicker.prototype.SaveAllUserKeysToHiddenInput = function() {};

/**
 * @return {string}
 */
SPClientPeoplePicker.prototype.GetCurrentEditorValue = function() {};

/**
 * @return {!Array<!ISPClientPeoplePickerEntity>}
 */
SPClientPeoplePicker.prototype.GetControlValueAsJSObject = function() {};

/**
 * @return {string}
 */
SPClientPeoplePicker.prototype.GetAllUserKeys = function() {};

/**
 * @return {string}
 */
SPClientPeoplePicker.prototype.GetControlValueAsText = function() {};

/**
 * @return {boolean}
 */
SPClientPeoplePicker.prototype.IsEmpty = function() {};

/**
 * @param {function(number, !SPClientPeoplePickerProcessedUser): void} fnCallback
 * @return {void}
 */
SPClientPeoplePicker.prototype.IterateEachProcessedUser = function(fnCallback) {};

/**
 * @return {boolean}
 */
SPClientPeoplePicker.prototype.HasResolvedUsers = function() {};

/**
 * @return {void}
 */
SPClientPeoplePicker.prototype.Validate = function() {};

/**
 * @return {void}
 */
SPClientPeoplePicker.prototype.ValidateCurrentState = function() {};

/**
 * @return {string}
 */
SPClientPeoplePicker.prototype.GetUnresolvedEntityErrorMessage = function() {};

/**
 * @param {string} msg
 * @return {void}
 */
SPClientPeoplePicker.prototype.ShowErrorMessage = function(msg) {};

/**
 * @return {void}
 */
SPClientPeoplePicker.prototype.ClearServerError = function() {};

/**
 * @return {void}
 */
SPClientPeoplePicker.prototype.SetServerError = function() {};

/**
 * @return {void}
 */
SPClientPeoplePicker.prototype.OnControlValidate = function() {};

/**
 * @param {boolean} bEnabled
 * @return {void}
 */
SPClientPeoplePicker.prototype.SetEnabledState = function(bEnabled) {};

/**
 * @return {void}
 */
SPClientPeoplePicker.prototype.DisplayLocalSuggestions = function() {};

/**
 * @param {string} input
 * @return {void}
 */
SPClientPeoplePicker.prototype.CompileLocalSuggestions = function(input) {};

/**
 * @return {boolean}
 */
SPClientPeoplePicker.prototype.PlanningGlobalSearch = function() {};

/**
 * @return {void}
 */
SPClientPeoplePicker.prototype.AddLoadingSuggestionMenuOption = function() {};

/**
 * @return {boolean}
 */
SPClientPeoplePicker.prototype.ShowingLocalSuggestions = function() {};

/**
 * @return {boolean}
 */
SPClientPeoplePicker.prototype.ShouldUsePPMRU = function() {};

/**
 * @param {!ISPClientPeoplePickerEntity} resolvedEntity
 * @param {string} resolveText
 * @return {void}
 */
SPClientPeoplePicker.prototype.AddResolvedUserToLocalCache = function(resolvedEntity, resolveText) {};
/**
 * @record
 * @struct
 */
function ISPClientPeoplePickerSchema() {}
 /** @type {string} */
ISPClientPeoplePickerSchema.prototype.TopLevelElementId;
 /** @type {string} */
ISPClientPeoplePickerSchema.prototype.EditorElementId;
 /** @type {string} */
ISPClientPeoplePickerSchema.prototype.AutoFillElementId;
 /** @type {string} */
ISPClientPeoplePickerSchema.prototype.ResolvedListElementId;
 /** @type {string} */
ISPClientPeoplePickerSchema.prototype.InitialHelpTextElementId;
 /** @type {string} */
ISPClientPeoplePickerSchema.prototype.WaitImageId;
 /** @type {string} */
ISPClientPeoplePickerSchema.prototype.HiddenInputId;
 /** @type {boolean} */
ISPClientPeoplePickerSchema.prototype.AllowMultipleValues;
 /** @type {boolean} */
ISPClientPeoplePickerSchema.prototype.Required;
 /** @type {boolean} */
ISPClientPeoplePickerSchema.prototype.AutoFillEnabled;
 /** @type {boolean} */
ISPClientPeoplePickerSchema.prototype.ForceClaims;
 /** @type {boolean} */
ISPClientPeoplePickerSchema.prototype.AllowEmailAddresses;
 /** @type {boolean} */
ISPClientPeoplePickerSchema.prototype.AllUrlZones;
 /** @type {boolean} */
ISPClientPeoplePickerSchema.prototype.UseLocalSuggestionCache;
 /** @type {boolean} */
ISPClientPeoplePickerSchema.prototype.UserNoQueryPermission;
 /** @type {number} */
ISPClientPeoplePickerSchema.prototype.VisibleSuggestions;
 /** @type {number} */
ISPClientPeoplePickerSchema.prototype.MaximumEntitySuggestions;
 /** @type {string} */
ISPClientPeoplePickerSchema.prototype.ErrorMessage;
 /** @type {string} */
ISPClientPeoplePickerSchema.prototype.InitialHelpText;
 /** @type {!Array<!ISPClientPeoplePickerEntity>} */
ISPClientPeoplePickerSchema.prototype.InitialSuggestions;
 /** @type {SP.UrlZone} */
ISPClientPeoplePickerSchema.prototype.UrlZone;
 /** @type {!SP.Guid} */
ISPClientPeoplePickerSchema.prototype.WebApplicationID;
 /** @type {number} */
ISPClientPeoplePickerSchema.prototype.SharePointGroupID;
 /** @type {string} */
ISPClientPeoplePickerSchema.prototype.PrincipalAccountType;
 /** @type {string} */
ISPClientPeoplePickerSchema.prototype.EnabledClaimProvider;
 /** @type {SP.Utilities.PrincipalSource} */
ISPClientPeoplePickerSchema.prototype.ResolvePrincipalSource;
 /** @type {SP.Utilities.PrincipalSource} */
ISPClientPeoplePickerSchema.prototype.SearchPrincipalSource;
 /** @type {?} */
ISPClientPeoplePickerSchema.prototype.Width;
 /** @type {number} */
ISPClientPeoplePickerSchema.prototype.Rows;

/**
 * @param {string} pickerElementId
 * @param {!Array<!ISPClientPeoplePickerEntity>} users
 * @return {void}
 */
ISPClientPeoplePickerSchema.prototype.OnUserResolvedClientScript = function(pickerElementId, users) {};

/**
 * @param {string} pickerElementId
 * @param {!Array<!ISPClientPeoplePickerEntity>} users
 * @return {void}
 */
ISPClientPeoplePickerSchema.prototype.OnValueChangedClientScript = function(pickerElementId, users) {};
/**
 * @constructor
 * @struct
 */
function SPClientPeoplePickerMRU() {}
 /** @type {number} */
SPClientPeoplePickerMRU.PPMRUVersion;
 /** @type {number} */
SPClientPeoplePickerMRU.MaxPPMRUItems;
 /** @type {string} */
SPClientPeoplePickerMRU.PPMRUDomLocalStoreKey;

/**
 * @return {!SPClientPeoplePickerMRU}
 */
SPClientPeoplePickerMRU.GetSPClientPeoplePickerMRU = function() {};

/**
 * @param {string} strKey
 * @return {?}
 */
SPClientPeoplePickerMRU.prototype.GetItems = function(strKey) {};

/**
 * @template T
 * @param {string} strSearchTerm
 * @param {T} objEntity
 * @return {void}
 */
SPClientPeoplePickerMRU.prototype.SetItem = function(strSearchTerm, objEntity) {};

/**
 * @return {void}
 */
SPClientPeoplePickerMRU.prototype.ResetCache = function() {};
/**
 * @record
 * @struct
 */
function ISPClientPeoplePickerEntity() {}
 /** @type {string} */
ISPClientPeoplePickerEntity.prototype.Key;
 /** @type {string} */
ISPClientPeoplePickerEntity.prototype.Description;
 /** @type {string} */
ISPClientPeoplePickerEntity.prototype.DisplayText;
 /** @type {string} */
ISPClientPeoplePickerEntity.prototype.EntityType;
 /** @type {string} */
ISPClientPeoplePickerEntity.prototype.ProviderDisplayName;
 /** @type {string} */
ISPClientPeoplePickerEntity.prototype.ProviderName;
 /** @type {boolean} */
ISPClientPeoplePickerEntity.prototype.IsResolved;
 /** @type {{Title: string, MobilePhone: string, Department: string, Email: string}} */
ISPClientPeoplePickerEntity.prototype.EntityData;
 /** @type {!Array<!ISPClientPeoplePickerEntity>} */
ISPClientPeoplePickerEntity.prototype.MultipleMatches;
 /** @type {string} */
ISPClientPeoplePickerEntity.prototype.DomainText;

/* TODO: IndexSignature:  */
/**
 * @constructor
 * @struct
 */
function SPClientPeoplePickerProcessedUser() {}
 /** @type {string} */
SPClientPeoplePickerProcessedUser.prototype.UserContainerElementId;
 /** @type {string} */
SPClientPeoplePickerProcessedUser.prototype.DisplayElementId;
 /** @type {string} */
SPClientPeoplePickerProcessedUser.prototype.PresenceElementId;
 /** @type {string} */
SPClientPeoplePickerProcessedUser.prototype.DeleteUserElementId;
 /** @type {string} */
SPClientPeoplePickerProcessedUser.prototype.SID;
 /** @type {string} */
SPClientPeoplePickerProcessedUser.prototype.DisplayName;
 /** @type {string} */
SPClientPeoplePickerProcessedUser.prototype.SIPAddress;
 /** @type {!ISPClientPeoplePickerEntity} */
SPClientPeoplePickerProcessedUser.prototype.UserInfo;
 /** @type {boolean} */
SPClientPeoplePickerProcessedUser.prototype.ResolvedUser;
 /** @type {!Array<!ISPClientAutoFillData>} */
SPClientPeoplePickerProcessedUser.prototype.Suggestions;
 /** @type {string} */
SPClientPeoplePickerProcessedUser.prototype.ErrorDescription;
 /** @type {string} */
SPClientPeoplePickerProcessedUser.prototype.ResolveText;

/**
 * @param {!ISPClientPeoplePickerEntity} newUserInfo
 * @param {string} strNewElementId
 * @return {void}
 */
SPClientPeoplePickerProcessedUser.prototype.UpdateResolvedUser = function(newUserInfo, strNewElementId) {};

/**
 * @param {!ISPClientPeoplePickerEntity} entity
 * @return {void}
 */
SPClientPeoplePickerProcessedUser.prototype.UpdateSuggestions = function(entity) {};

/**
 * @return {string}
 */
SPClientPeoplePickerProcessedUser.prototype.BuildUserHTML = function() {};

/**
 * @return {void}
 */
SPClientPeoplePickerProcessedUser.prototype.UpdateUserMaxWidth = function() {};

/**
 * @return {string}
 */
SPClientPeoplePickerProcessedUser.prototype.ResolvedAsUnverifiedEmail = function() {};

/**
 * @param {string} elmId
 * @param {string} strSip
 * @param {boolean=} bResolved
 * @return {string}
 */
SPClientPeoplePickerProcessedUser.BuildUserPresenceHtml = function(elmId, strSip, bResolved) {};

/**
 * @param {!HTMLElement} elmChild
 * @return {!HTMLElement}
 */
SPClientPeoplePickerProcessedUser.GetUserContainerElement = function(elmChild) {};

/**
 * @param {!HTMLElement} ndClicked
 * @return {void}
 */
SPClientPeoplePickerProcessedUser.HandleProcessedUserClick = function(ndClicked) {};

/**
 * @param {!HTMLElement} elmToRemove
 * @return {void}
 */
SPClientPeoplePickerProcessedUser.DeleteProcessedUser = function(elmToRemove) {};

/**
 * @param {!Event} e
 * @return {void}
 */
SPClientPeoplePickerProcessedUser.HandleDeleteProcessedUserKey = function(e) {};

/**
 * @param {!Event} e
 * @return {void}
 */
SPClientPeoplePickerProcessedUser.HandleResolveProcessedUserKey = function(e) {};
/** @const */
Microsoft.Office = {};
/** @const */
Microsoft.Office.Server = {};
/** @const */
Microsoft.Office.Server.ReputationModel = {};

/**
 * @constructor
 * @struct
 */
Microsoft.Office.Server.ReputationModel.Reputation = function() {};

/**
 * @param {!SP.ClientContext} context
 * @param {string} listId
 * @param {number} itemId
 * @param {boolean} like
 * @return {void}
 */
Microsoft.Office.Server.ReputationModel.Reputation.setLike = function(context, listId, itemId, like) {};

/**
 * @param {!SP.ClientContext} context
 * @param {string} listId
 * @param {number} itemId
 * @param {number} rating
 * @return {void}
 */
Microsoft.Office.Server.ReputationModel.Reputation.setRating = function(context, listId, itemId, rating) {};
/** @const */
var Define = {};

/**
 * @param {string} url
 * @param {function(): void} successCallback
 * @param {function(): void} errCallback
 * @return {void}
 */
Define.loadScript = function(url, successCallback, errCallback) {};

/**
 * Loads script from _layouts/15/[req].js
 * Loads script from _layouts/15/[req].js
 * @param {string|!Array<string>} req
 * @param {function(!Array<?>): void} callback
 * @return {void}
 */
Define.require = function(req, callback) {};

/**
 * @param {string} name
 * @param {!Array<string>} deps
 * @param {function(!Array<?>): ?} def
 * @return {void}
 */
Define.define = function(name, deps, def) {};
/** @const */
var Verify = {};

/**
 * @param {string} arg
 * @param {?} expected
 * @return {void}
 */
Verify.ArgumentType = function(arg, expected) {};
/** @const */
var BrowserStorage = {};
 /** @type {!BrowserStorage.CachedStorage} */
BrowserStorage.local;
 /** @type {!BrowserStorage.CachedStorage} */
BrowserStorage.session;
/**
 * @record
 * @struct
 */
BrowserStorage.CachedStorage = function() {};
 /** @type {number} */
BrowserStorage.CachedStorage.prototype.length;

/**
 * @param {string} key
 * @return {string}
 */
BrowserStorage.CachedStorage.prototype.getItem = function(key) {};

/**
 * @param {string} key
 * @param {string} value
 * @return {void}
 */
BrowserStorage.CachedStorage.prototype.setItem = function(key, value) {};

/**
 * @param {string} key
 * @return {void}
 */
BrowserStorage.CachedStorage.prototype.removeItem = function(key) {};

/**
 * @return {void}
 */
BrowserStorage.CachedStorage.prototype.clead = function() {};
/** @const */
var BrowserDetection = {};
 /** @type {!Browseris} */
BrowserDetection.browseris;
/** @const */
var CSSUtil = {};

/**
 * @param {!HTMLElement} elem
 * @param {string} className
 * @return {boolean}
 */
CSSUtil.HasClass = function(elem, className) {};

/**
 * @param {!HTMLElement} elem
 * @param {string} className
 * @return {void}
 */
CSSUtil.AddClass = function(elem, className) {};

/**
 * @param {!HTMLElement} elem
 * @param {string} className
 * @return {void}
 */
CSSUtil.RemoveClass = function(elem, className) {};

/**
 * @param {string} pxString
 * @return {number}
 */
CSSUtil.pxToFloat = function(pxString) {};

/**
 * @param {string} px
 * @return {number}
 */
CSSUtil.pxToNum = function(px) {};

/**
 * @param {number} n
 * @return {string}
 */
CSSUtil.numToPx = function(n) {};

/**
 * @param {!HTMLElement} elem
 * @param {!Array<string>} styleNames
 * @return {string}
 */
CSSUtil.getCurrentEltStyleByNames = function(elem, styleNames) {};

/**
 * @param {!HTMLElement} elem
 * @param {string} cssStyle
 * @return {string}
 */
CSSUtil.getCurrentStyle = function(elem, cssStyle) {};

/**
 * @param {!HTMLElement} element
 * @param {string} camelStyleName
 * @param {string} dashStyleName
 * @return {string}
 */
CSSUtil.getCurrentStyleCorrect = function(element, camelStyleName, dashStyleName) {};

/**
 * @param {!HTMLElement} element
 * @return {number}
 */
CSSUtil.getOpacity = function(element) {};

/**
 * @param {!HTMLElement} element
 * @param {number} value
 * @return {void}
 */
CSSUtil.setOpacity = function(element, value) {};
/** @const */
var DOM = {};
 /** @type {boolean} */
DOM.rightToLeft;

/**
 * @param {!Event} evt
 * @return {void}
 */
DOM.cancelDefault = function(evt) {};

/**
 * @param {!HTMLElement} el
 * @return {number}
 */
DOM.AbsLeft = function(el) {};

/**
 * @param {!HTMLElement} el
 * @return {number}
 */
DOM.AbsTop = function(el) {};

/**
 * @param {!Event} evt
 * @return {void}
 */
DOM.CancelEvent = function(evt) {};

/**
 * @param {string} nae
 * @return {!NodeList}
 */
DOM.GetElementsByName = function(nae) {};

/**
 * @param {!Event} evt
 * @return {{x: number, y: number}}
 */
DOM.GetEventCoords = function(evt) {};

/**
 * @param {!Event} evt
 * @return {!HTMLElement}
 */
DOM.GetEventSrcElement = function(evt) {};

/**
 * @param {!HTMLElement} el
 * @return {string}
 */
DOM.GetInnerText = function(el) {};

/**
 * @param {!Event} evt
 * @return {void}
 */
DOM.PreventDefaultNavigation = function(evt) {};

/**
 * @param {string} eventName
 * @param {function(string, function(!Event): void, !Window): void} eventFunc
 * @param {!HTMLElement} el
 * @return {void}
 */
DOM.SetEvent = function(eventName, eventFunc, el) {};
/** @const */
var Encoding = {};

/**
 * @param {string} str
 * @return {string}
 */
Encoding.EncodeScriptQuote = function(str) {};

/**
 * @param {string} str
 * @return {string}
 */
Encoding.HtmlEncode = function(str) {};

/**
 * @param {string} str
 * @return {string}
 */
Encoding.HtmlDecode = function(str) {};

/**
 * @param {string} str
 * @return {string}
 */
Encoding.AttrQuote = function(str) {};

/**
 * @param {string} str
 * @return {string}
 */
Encoding.ScriptEncode = function(str) {};

/**
 * @param {string} str
 * @return {string}
 */
Encoding.ScriptEncodeWithQuote = function(str) {};

/**
 * @param {string} str
 * @return {string}
 */
Encoding.CanonicalizeUrlEncodingCase = function(str) {};
/** @const */
var IE8Support = {};

/**
 * @template T
 * @param {!Array<T>} array
 * @param {T} item
 * @param {number=} startIdx
 * @return {number}
 */
IE8Support.arrayIndexOf = function(array, item, startIdx) {};

/**
 * @param {function(): void} handler
 * @return {void}
 */
IE8Support.attachDOMContentLoaded = function(handler) {};

/**
 * @param {!HTMLElement} domObj
 * @param {string} camelStyleName
 * @param {string} dashStyleName
 * @return {string}
 */
IE8Support.getComputedStyle = function(domObj, camelStyleName, dashStyleName) {};

/**
 * @param {!Event} evt
 * @return {void}
 */
IE8Support.stopPropagation = function(evt) {};
/** @const */
var StringUtil = {};

/**
 * @param {string} stPattern
 * @param {...?} params
 * @return {string}
 */
StringUtil.BuildParam = function(stPattern, params) {};

/**
 * @param {string} str
 * @param {...?} params
 * @return {string}
 */
StringUtil.ApplyStringTemplate = function(str, params) {};
/** @const */
var TypeUtil = {};

/**
 * @param {?} value
 * @return {boolean}
 */
TypeUtil.IsArray = function(value) {};

/**
 * @param {?} value
 * @return {boolean}
 */
TypeUtil.IsNullOrUndefined = function(value) {};
/** @const */
var Nav = {};
 /** @type {!AjaxNavigate} */
Nav.ajaxNavigate;

/**
 * @param {string} webUrl
 * @param {string} fullPath
 * @return {string}
 */
Nav.convertRegularURLtoMDSURL = function(webUrl, fullPath) {};

/**
 * @param {string} url
 * @return {boolean}
 */
Nav.isMDSUrl = function(url) {};

/**
 * @param {string} url
 * @return {boolean}
 */
Nav.isPageUrlValid = function(url) {};

/**
 * @param {string} url
 * @return {boolean}
 */
Nav.isPortalTemplatePage = function(url) {};

/**
 * @return {string}
 */
Nav.getAjaxLocationWindow = function() {};

/**
 * @param {string=} defaultSource
 * @return {string}
 */
Nav.getSource = function(defaultSource) {};

/**
 * @param {string} keyName
 * @param {boolean} bNoDecode
 * @param {string} url
 * @param {boolean} bCaseInsensitive
 * @return {string}
 */
Nav.getUrlKeyValue = function(keyName, bNoDecode, url, bCaseInsensitive) {};

/**
 * @param {string} hre
 * @return {string}
 */
Nav.getWindowLocationNoHash = function(hre) {};

/**
 * @param {!HTMLAnchorElement} el
 * @param {string} strVersion
 * @return {void}
 */
Nav.goToHistoryLink = function(el, strVersion) {};

/**
 * @param {!HTMLAnchorElement} el
 * @return {string}
 */
Nav.getGoToLinkUrl = function(el) {};

/**
 * @param {!HTMLAnchorElement} el
 * @return {void}
 */
Nav.goToLink = function(el) {};

/**
 * @param {!HTMLAnchorElement} el
 * @return {void}
 */
Nav.goToLinkOrDialogNewWindow = function(el) {};

/**
 * @param {string} url
 * @return {void}
 */
Nav.goToDiscussion = function(url) {};

/**
 * @param {!Event} evt
 * @param {!HTMLElement} topElm
 * @return {void}
 */
Nav.onClickHook = function(evt, topElm) {};

/**
 * @param {string} url
 * @param {string} alertString
 * @return {string}
 */
Nav.pageUrlValidation = function(url, alertString) {};

/**
 * @param {string} hash
 * @return {!Object<string,string>}
 */
Nav.parseHash = function(hash) {};

/**
 * @param {string} url
 * @return {void}
 */
Nav.navigate = function(url) {};

/**
 * @param {string} url
 * @return {string}
 */
Nav.removeMDSQueryParametersFromUrl = function(url) {};

/**
 * @param {!Object<string,string>} hashObject
 * @return {string}
 */
Nav.urlFromHashBag = function(hashObject) {};

/**
 * @param {!Event} evt
 * @return {boolean}
 */
Nav.wantsNewTab = function(evt) {};
/** @const */
var URI_Encoding = {};

/**
 * @param {string} str
 * @param {boolean=} bAsUrl
 * @param {boolean=} bForFilterQuery
 * @param {boolean=} bForCallback
 * @return {string}
 */
URI_Encoding.encodeURIComponent = function(str, bAsUrl, bForFilterQuery, bForCallback) {};

/**
 * @param {string} str
 * @return {string}
 */
URI_Encoding.escapeUrlForCallback = function(str) {};
/**
 * @record
 * @struct
 */
function ListItem() {}
 /** @type {number} */
ListItem.prototype.ID;
 /** @type {string} */
ListItem.prototype.ContentTypeId;
/** @const */
var ListModule = {};
/** @const */
ListModule.Util = {};

/**
 * @param {!SPClientTemplates.RenderContext} renderCtx
 * @param {!ListItem} listItem
 * @param {boolean=} useEditFormUrl
 * @param {boolean=} appendSource
 * @return {string}
 */
ListModule.Util.createViewEditUrl = function(renderCtx, listItem, useEditFormUrl, appendSource) {};

/**
 * @param {!SPClientTemplates.RenderContext} renderCtx
 * @param {!ListItem} listItem
 * @return {string}
 */
ListModule.Util.createItemPropertiesTitle = function(renderCtx, listItem) {};

/**
 * @param {?} context
 * @return {void}
 */
ListModule.Util.clearSelectedItemsDict = function(context) {};

/**
 * @param {?} context
 * @return {void}
 */
ListModule.Util.ctxInitItemState = function(context) {};

/**
 * @param {!HTMLElement} itemTableParam
 * @param {string} strAttributeName
 * @param {string} strAttributeOldName
 * @return {string}
 */
ListModule.Util.getAttributeFromItemTable = function(itemTableParam, strAttributeName, strAttributeOldName) {};

/**
 * @param {?} context
 * @return {?}
 */
ListModule.Util.getSelectedItemsDict = function(context) {};

/**
 * @param {string} url
 * @return {string}
 */
ListModule.Util.removeOnlyPagingArgs = function(url) {};

/**
 * @param {string} url
 * @return {string}
 */
ListModule.Util.removePagingArgs = function(url) {};

/**
 * @return {void}
 */
ListModule.Util.showAttachmentRows = function() {};
/** @const */
var SPThemeUtils = {};

/**
 * @return {void}
 */
SPThemeUtils.ApplyCurrentTheme = function() {};

/**
 * @param {function(?): void} resultCallback
 * @return {void}
 */
SPThemeUtils.WithCurrentTheme = function(resultCallback) {};

/**
 * @return {boolean}
 */
SPThemeUtils.UseClientSideTheming = function() {};

/**
 * @return {void}
 */
SPThemeUtils.Suspend = function() {};
/** @const */
SP.JsGrid = {};

/** @const */
SP.JsGrid.TextDirection = {};
/** @const {number} */
SP.JsGrid.TextDirection.Default;
/** @const {number} */
SP.JsGrid.TextDirection.RightToLeft;
/** @const {number} */
SP.JsGrid.TextDirection.LeftToRight;

/** @const */
SP.JsGrid.PaneId = {};
/** @const {number} */
SP.JsGrid.PaneId.MainGrid;
/** @const {number} */
SP.JsGrid.PaneId.PivotedGrid;
/** @const {number} */
SP.JsGrid.PaneId.Gantt;

/** @const */
SP.JsGrid.PaneLayout = {};
/** @const {number} */
SP.JsGrid.PaneLayout.GridOnly;
/** @const {number} */
SP.JsGrid.PaneLayout.GridAndGantt;
/** @const {number} */
SP.JsGrid.PaneLayout.GridAndPivotedGrid;

/** @const */
SP.JsGrid.EditMode = {};
/** @const {number} */
SP.JsGrid.EditMode.ReadOnly;
/** @const {number} */
SP.JsGrid.EditMode.ReadWrite;
/** @const {number} */
SP.JsGrid.EditMode.ReadOnlyDefer;
/** @const {number} */
SP.JsGrid.EditMode.ReadWriteDefer;
/** @const {number} */
SP.JsGrid.EditMode.Defer;

/** @const */
SP.JsGrid.GanttDrawBarFlags = {};
/** @const {number} */
SP.JsGrid.GanttDrawBarFlags.LeftLink;
/** @const {number} */
SP.JsGrid.GanttDrawBarFlags.RightLink;

/** @const */
SP.JsGrid.GanttBarDateType = {};
/** @const {number} */
SP.JsGrid.GanttBarDateType.Start;
/** @const {number} */
SP.JsGrid.GanttBarDateType.End;

/** @const */
SP.JsGrid.ValidationState = {};
/** @const {number} */
SP.JsGrid.ValidationState.Valid;
/** @const {number} */
SP.JsGrid.ValidationState.Pending;
/** @const {number} */
SP.JsGrid.ValidationState.Invalid;

/** @const */
SP.JsGrid.HierarchyMode = {};
/** @const {number} */
SP.JsGrid.HierarchyMode.None;
/** @const {number} */
SP.JsGrid.HierarchyMode.Standard;
/** @const {number} */
SP.JsGrid.HierarchyMode.Grouping;

/** @const */
SP.JsGrid.EditActorWriteType = {};
/** @const {number} */
SP.JsGrid.EditActorWriteType.Both;
/** @const {number} */
SP.JsGrid.EditActorWriteType.LocalizedOnly;
/** @const {number} */
SP.JsGrid.EditActorWriteType.DataOnly;
/** @const {number} */
SP.JsGrid.EditActorWriteType.Either;

/** @const */
SP.JsGrid.EditActorReadType = {};
/** @const {number} */
SP.JsGrid.EditActorReadType.Both;
/** @const {number} */
SP.JsGrid.EditActorReadType.LocalizedOnly;
/** @const {number} */
SP.JsGrid.EditActorReadType.DataOnly;

/** @const */
SP.JsGrid.EditActorUpdateType = {};
/** @const {number} */
SP.JsGrid.EditActorUpdateType.Committed;
/** @const {number} */
SP.JsGrid.EditActorUpdateType.Uncommitted;

/** @const */
SP.JsGrid.SortMode = {};
/** @const {number} */
SP.JsGrid.SortMode.Ascending;
/** @const {number} */
SP.JsGrid.SortMode.Descending;
/** @const {number} */
SP.JsGrid.SortMode.None;
/** @const */
SP.JsGrid.RowHeaderStyleId = {};
 /** @type {string} */
SP.JsGrid.RowHeaderStyleId.Transfer;
 /** @type {string} */
SP.JsGrid.RowHeaderStyleId.Conflict;
/** @const */
SP.JsGrid.RowHeaderAutoStyleId = {};
 /** @type {string} */
SP.JsGrid.RowHeaderAutoStyleId.Dirty;
 /** @type {string} */
SP.JsGrid.RowHeaderAutoStyleId.Error;
 /** @type {string} */
SP.JsGrid.RowHeaderAutoStyleId.NewRow;

/** @const */
SP.JsGrid.RowHeaderStatePriorities = {};
/** @const {number} */
SP.JsGrid.RowHeaderStatePriorities.Dirty;
/** @const {number} */
SP.JsGrid.RowHeaderStatePriorities.Transfer;
/** @const {number} */
SP.JsGrid.RowHeaderStatePriorities.CellError;
/** @const {number} */
SP.JsGrid.RowHeaderStatePriorities.Conflict;
/** @const {number} */
SP.JsGrid.RowHeaderStatePriorities.RowError;
/** @const {number} */
SP.JsGrid.RowHeaderStatePriorities.NewRow;

/** @const */
SP.JsGrid.UpdateSerializeMode = {};
/** @const {number} */
SP.JsGrid.UpdateSerializeMode.Cancel;
/** @const {number} */
SP.JsGrid.UpdateSerializeMode.Default;
/** @const {number} */
SP.JsGrid.UpdateSerializeMode.PropDataOnly;
/** @const {number} */
SP.JsGrid.UpdateSerializeMode.PropLocalizedOnly;
/** @const {number} */
SP.JsGrid.UpdateSerializeMode.PropBoth;

/** @const */
SP.JsGrid.UpdateTrackingMode = {};
/** @const {number} */
SP.JsGrid.UpdateTrackingMode.PropData;
/** @const {number} */
SP.JsGrid.UpdateTrackingMode.PropLocalized;
/** @const {number} */
SP.JsGrid.UpdateTrackingMode.PropBoth;
/** @const */
SP.JsGrid.UserAction = {};
 /** @type {string} */
SP.JsGrid.UserAction.UserEdit;
 /** @type {string} */
SP.JsGrid.UserAction.DeleteRecord;
 /** @type {string} */
SP.JsGrid.UserAction.InsertRecord;
 /** @type {string} */
SP.JsGrid.UserAction.Indent;
 /** @type {string} */
SP.JsGrid.UserAction.Outdent;
 /** @type {string} */
SP.JsGrid.UserAction.Fill;
 /** @type {string} */
SP.JsGrid.UserAction.Paste;
 /** @type {string} */
SP.JsGrid.UserAction.CutPaste;

/** @const */
SP.JsGrid.ReadOnlyActiveState = {};
/** @const {number} */
SP.JsGrid.ReadOnlyActiveState.ReadOnlyActive;
/** @const {number} */
SP.JsGrid.ReadOnlyActiveState.ReadOnlyDisabled;
/**
 * @record
 * @struct
 */
SP.JsGrid.IValue = function() {};
 /** @type {?} */
SP.JsGrid.IValue.prototype.data;
 /** @type {string} */
SP.JsGrid.IValue.prototype.localized;

/** @const */
SP.JsGrid.SelectionTypeFlags = {};
/** @const {number} */
SP.JsGrid.SelectionTypeFlags.MultipleCellRanges;
/** @const {number} */
SP.JsGrid.SelectionTypeFlags.MultipleRowRanges;
/** @const {number} */
SP.JsGrid.SelectionTypeFlags.MultipleColRanges;

/**
 * @constructor
 * @struct
 * @param {!HTMLElement} parentNode
 * @param {boolean} bShowLoadingBanner
 */
SP.JsGrid.JsGridControl = function(parentNode, bShowLoadingBanner) {};

/**
 * Returns true if Init method has been executed successfully
 * @return {boolean}
 */
SP.JsGrid.JsGridControl.prototype.IsInitialized = function() {};

/**
 * Replaces the control TableCache object with the provided one
 * @param {!SP.JsGrid.TableCache} cache
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.ResetData = function(cache) {};

/**
 * Initialize the control
 * @param {!SP.JsGrid.JsGridControl.Parameters} parameters
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.Init = function(parameters) {};

/**
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.Cleanup = function() {};

/**
 * Removes all event handlers and markup associated with the control
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.Dispose = function() {};

/**
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.NotifyDataAvailable = function() {};

/**
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.NotifySave = function() {};

/**
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.NotifyHide = function() {};

/**
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.NotifyResize = function() {};

/**
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.ClearTableView = function() {};

/**
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.HideInitialLoadingBanner = function() {};

/**
 * @param {string} errorMsg
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.ShowInitialGridErrorMsg = function(errorMsg) {};

/**
 * @param {string} errorMsg
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.ShowGridErrorMsg = function(errorMsg) {};

/**
 * @param {?} additionalScriptFiles
 * @param {?} beforeInitFnName
 * @param {?} beforeInitFnArgsObj
 * @param {string} title
 * @param {boolean} bEnableGantt
 * @param {?=} optGanttDelegateNames
 * @param {?=} optInitTableViewParamsFnName
 * @param {?=} optInitTableViewParamsFnArgsObj
 * @param {?=} optInitGanttStylesFnName
 * @param {?=} optInitGanttStylesFnArgsObj
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.LaunchPrintView = function(additionalScriptFiles, beforeInitFnName, beforeInitFnArgsObj, title, bEnableGantt, optGanttDelegateNames, optInitTableViewParamsFnName, optInitTableViewParamsFnArgsObj, optInitGanttStylesFnName, optInitGanttStylesFnArgsObj) {};

/**
 * @param {?} fnOnFinished
 * @param {?=} optFnGetCellStyleID
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.GetAllDataJson = function(fnOnFinished, optFnGetCellStyleID) {};

/**
 * @param {?} tableViewParams
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.SetTableView = function(tableViewParams) {};

/**
 * @param {?} rowViewParam
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.SetRowView = function(rowViewParam) {};

/**
 * Enable grid after Disable.
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.Enable = function() {};

/**
 * Covers the grid with the semi-transparent panel, preventing any operations with it.
 * Additionally, displays loading animated gif and optMsg as the message next to it.
 * If optMsg is not specified, displays "Loading..." text.
 * @param {string=} optMsg
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.Disable = function(optMsg) {};

/**
 * Enables grid editing
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.EnableEditing = function() {};

/**
 * Disables grid editing: all the records become readonly
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.DisableEditing = function() {};

/**
 * Switches the currently selected cell into edit mode: displays edit control and sets focus into it.
 * Returns true if success.
 * @return {boolean}
 */
SP.JsGrid.JsGridControl.prototype.TryBeginEdit = function() {};

/**
 * @param {function(): void} fnContinue
 * @param {function(): void} fnError
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.FinalizeEditing = function(fnContinue, fnError) {};

/**
 * Get diff tracker object that tracks changes to the grid data.
 * @return {!SP.JsGrid.Internal.DiffTracker}
 */
SP.JsGrid.JsGridControl.prototype.GetDiffTracker = function() {};

/**
 * Moves focus to the JsGrid control
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.Focus = function() {};

/**
 * Try saving the new record row (aka entry row) if it was edited.
 * @param {function(): void} fnCommitComplete
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.TryCommitFirstEntryRecords = function(fnCommitComplete) {};

/**
 * Removes all new record rows (aka entry rows), including unsaved and even empty ones.
 * The latter seems to be a bug, as I haven't found any easy way to restore the empty entry row.
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.ClearUncommitedEntryRecords = function() {};

/**
 * Returns true if there are any unsaved new record rows (aka entry rows).
 * @return {boolean}
 */
SP.JsGrid.JsGridControl.prototype.AnyUncommitedEntryRecords = function() {};

/**
 * @return {boolean}
 */
SP.JsGrid.JsGridControl.prototype.AnyUncomittedProvisionalRecords = function() {};

/**
 * Gets record based on the recordKey
 * \@recordKey internal unique id of a row. You can get recordKey from view index via GetRecordKeyByViewIndex method.
 * @param {number} recordKey
 * @return {!SP.JsGrid.IRecord}
 */
SP.JsGrid.JsGridControl.prototype.GetRecord = function(recordKey) {};

/**
 * Get entry record with the specified key.
 * Entry record is a special type of record because it represents a new record that doesn't exist yet.
 * @param {?} key
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.GetEntryRecord = function(key) {};

/**
 * Determine if the specified record key identifies valid entry row.
 * @param {number} recordKey
 * @return {boolean}
 */
SP.JsGrid.JsGridControl.prototype.IsEntryRecord = function(recordKey) {};

/**
 * Determine whether the specified cell is editable.
 * @param {!SP.JsGrid.IRecord} record
 * @param {string} fieldKey
 * @param {?=} optPaneId
 * @return {boolean}
 */
SP.JsGrid.JsGridControl.prototype.IsCellEditable = function(record, fieldKey, optPaneId) {};

/**
 * Adds one of builtin row state indicator icons into the row header.
 * Please pass one of the values of SP.JsGrid.RowHeaderStyleId
 * Row header is the leftmost gray column of the table.
 * @param {number} recordKey
 * @param {string} rowHeaderStateId
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.AddBuiltInRowHeaderState = function(recordKey, rowHeaderStateId) {};

/**
 * Adds the specified state into the row header.
 * There can be several row header states for one row. Only one is shown (according to the Priority).
 * Row header is the leftmost gray column of the table.
 * @param {number} recordKey
 * @param {!SP.JsGrid.RowHeaderState} rowHeaderState
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.AddRowHeaderState = function(recordKey, rowHeaderState) {};

/**
 * Removes header state with specified id from the row.
 * @param {number} recordKey
 * @param {string} rowHeaderStateId
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.RemoveRowHeaderState = function(recordKey, rowHeaderStateId) {};

/**
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.GetCheckSelectionManager = function() {};

/**
 * @param {?} propertyUpdates
 * @param {?} changeName
 * @param {?=} optChangeKey
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.UpdateProperties = function(propertyUpdates, changeName, optChangeKey) {};

/**
 * @return {string}
 */
SP.JsGrid.JsGridControl.prototype.GetLastRecordKey = function() {};

/**
 * @param {number} beforeRecordKey
 * @param {?} newRecord
 * @param {?} initialValues
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.InsertProvisionalRecordBefore = function(beforeRecordKey, newRecord, initialValues) {};

/**
 * @param {number} afterRecordKey
 * @param {?} newRecord
 * @param {?} initialValues
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.InsertProvisionalRecordAfter = function(afterRecordKey, newRecord, initialValues) {};

/**
 * @param {number} recordKey
 * @return {boolean}
 */
SP.JsGrid.JsGridControl.prototype.IsProvisionalRecordKey = function(recordKey) {};

/**
 * @param {number} beforeRecordKey
 * @param {?} newRecord
 * @param {?=} optChangeKey
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.InsertRecordBefore = function(beforeRecordKey, newRecord, optChangeKey) {};

/**
 * @param {number} afterRecordKey
 * @param {?} newRecord
 * @param {?=} optChangeKey
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.InsertRecordAfter = function(afterRecordKey, newRecord, optChangeKey) {};

/**
 * @param {number} recordKey
 * @param {?} changeKey
 * @param {?=} optAfterRecordKey
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.InsertHiddenRecord = function(recordKey, changeKey, optAfterRecordKey) {};

/**
 * @param {?} recordKeys
 * @param {?=} optChangeKey
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.DeleteRecords = function(recordKeys, optChangeKey) {};

/**
 * @param {?} recordKeys
 * @param {?=} optChangeKey
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.IndentRecords = function(recordKeys, optChangeKey) {};

/**
 * @param {?} recordKeys
 * @param {?=} optChangeKey
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.OutdentRecords = function(recordKeys, optChangeKey) {};

/**
 * @param {number} beginRecordKey
 * @param {number} endRecordKey
 * @param {number} afterRecordKey
 * @param {boolean} bSelectAfterwards
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.ReorderRecords = function(beginRecordKey, endRecordKey, afterRecordKey, bSelectAfterwards) {};

/**
 * @return {{begin: ?, end: ?, keys: ?}}
 */
SP.JsGrid.JsGridControl.prototype.GetContiguousRowSelectionWithoutEntryRecords = function() {};

/**
 * @param {?} recordKeys
 * @return {boolean}
 */
SP.JsGrid.JsGridControl.prototype.CanMoveRecordsUpByOne = function(recordKeys) {};

/**
 * @param {?} recordKeys
 * @return {boolean}
 */
SP.JsGrid.JsGridControl.prototype.CanMoveRecordsDownByOne = function(recordKeys) {};

/**
 * @param {?} recordKeys
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.MoveRecordsUpByOne = function(recordKeys) {};

/**
 * @param {?} recordKeys
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.MoveRecordsDownByOne = function(recordKeys) {};

/**
 * @param {?} recordKeys
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.GetReorderRange = function(recordKeys) {};

/**
 * @param {number} recordKey
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.GetNodeExpandCollapseState = function(recordKey) {};

/**
 * @param {number} recordKey
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.ToggleExpandCollapse = function(recordKey) {};

/**
 * Attach event handler to a particular event type
 * @param {SP.JsGrid.EventType} eventType
 * @param {function(!SP.JsGrid.IEventArgs): void} fnOnEvent
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.AttachEvent = function(eventType, fnOnEvent) {};

/**
 * Detach a previously set event handler
 * @param {SP.JsGrid.EventType} eventType
 * @param {?} fnOnEvent
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.DetachEvent = function(eventType, fnOnEvent) {};

/**
 * Set a delegate. Delegates are way to replace default functionality with custom one.
 * @param {SP.JsGrid.DelegateType} delegateKey
 * @param {?} fn
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.SetDelegate = function(delegateKey, fn) {};

/**
 * Get current delegate.
 * @param {SP.JsGrid.DelegateType} delegateKey
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.GetDelegate = function(delegateKey) {};

/**
 * Re-render the specified row in the view.
 * @param {number} recordKey
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.RefreshRow = function(recordKey) {};

/**
 * Re-render all rows in the view.
 * It can be used e.g. if you have some custom display controls and they are rendered differently depending on some external settings.
 * In this case, if you update the external settings, obviously you have to then update the view for these settings to take effect.
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.RefreshAllRows = function() {};

/**
 * Clears undo queue, and also differencies tracker state and versions manager state.
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.ClearChanges = function() {};

/**
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.GetGanttZoomLevel = function() {};

/**
 * @param {?} level
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.SetGanttZoomLevel = function(level) {};

/**
 * @param {?} date
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.ScrollGanttToDate = function(date) {};

/**
 * Get top record view index.
 * You can then use GetRecordKeyByViewIndex to convert this value into the recordKey.
 * @return {number}
 */
SP.JsGrid.JsGridControl.prototype.GetTopRecordIndex = function() {};

/**
 * Get number of rows displayed in the current view.
 * @return {number}
 */
SP.JsGrid.JsGridControl.prototype.GetViewRecordCount = function() {};

/**
 * Get record key for a row that is specified by the viewIdx.
 * viewIdx - index of the row in the view, use GetTopRecordIndex to get the first one.
 * Returns recordKey, which is a unique numeric identifier of a row within a dataset.
 * Main difference between viewIdx and recordKey is that viewIdx is only unique within a view,
 * e.g. if you do paging, it can be same for different records.
 * @param {number} viewIdx
 * @return {number}
 */
SP.JsGrid.JsGridControl.prototype.GetRecordKeyByViewIndex = function(viewIdx) {};

/**
 * Opposite to GetRecordKeyByViewIndex, resolves the view index of the record based on record key.
 * recordKey - unique numeric identifier of a row in the current dataset.
 * Returns viewIdx - index of the row in the current view
 * @param {number} recordKey
 * @return {number}
 */
SP.JsGrid.JsGridControl.prototype.GetViewIndexOfRecord = function(recordKey) {};

/**
 * Get top row index. Usually returns 0.
 * You can then use GetRecordKeyByViewIndex to convert this value into the recordKey.
 * @return {number}
 */
SP.JsGrid.JsGridControl.prototype.GetTopRowIndex = function() {};

/**
 * @param {?} record
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.GetOutlineLevel = function(record) {};

/**
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.GetSplitterPosition = function() {};

/**
 * @param {?} pos
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.SetSplitterPosition = function(pos) {};

/**
 * @param {?=} optPaneId
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.GetLeftColumnIndex = function(optPaneId) {};

/**
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.EnsurePaneWidth = function() {};

/**
 * Show a previously hidden column at a specified position.
 * If atIdx is not defined, column will be shown at it's previous position.
 * @param {string} columnKey
 * @param {number=} atIdx
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.ShowColumn = function(columnKey, atIdx) {};

/**
 * Hide the specified column from grid
 * @param {string} columnKey
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.HideColumn = function(columnKey) {};

/**
 * Update column descriptions
 * @param {!SP.JsGrid.ColumnInfoCollection} columnInfoCollection
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.UpdateColumns = function(columnInfoCollection) {};

/**
 * @param {string=} optPaneId
 * @return {!Array<!SP.JsGrid.ColumnInfo>}
 */
SP.JsGrid.JsGridControl.prototype.GetColumns = function(optPaneId) {};

/**
 * Get ColumnInfo object by fieldKey
 * \@fieldKey when working with SharePoint data sources, fieldKey corresponds to field internal name
 * @param {string} fieldKey
 * @param {?=} optPaneId
 * @return {!SP.JsGrid.ColumnInfo}
 */
SP.JsGrid.JsGridControl.prototype.GetColumnByFieldKey = function(fieldKey, optPaneId) {};

/**
 * Adds a column, based on the specified grid field
 * @param {!SP.JsGrid.ColumnInfo} columnInfo
 * @param {!SP.JsGrid.GridField} gridField
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.AddColumn = function(columnInfo, gridField) {};

/**
 * Switches column header in rename mode, showing textbox and thus giving the user possibility to rename this column.
 * @param {string} columnKey
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.RenameColumn = function(columnKey) {};

/**
 * Shows a dialog where user can reorder columns and change their widths.
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.ShowColumnConfigurationDialog = function() {};

/**
 * Returns true, if there are any errors in the JsGrid
 * @return {boolean}
 */
SP.JsGrid.JsGridControl.prototype.AnyErrors = function() {};

/**
 * Returns true, if there are any errors in a specified row
 * @param {number} recordKey
 * @return {boolean}
 */
SP.JsGrid.JsGridControl.prototype.AnyErrorsInRecord = function(recordKey) {};

/**
 * Set error for the specified by recordKey and fieldKey cell.
 * Returns id of the error, so that later you can clear the error using this id.
 * @param {number} recordKey
 * @param {string} fieldKey
 * @param {string} errorMessage
 * @return {number}
 */
SP.JsGrid.JsGridControl.prototype.SetCellError = function(recordKey, fieldKey, errorMessage) {};

/**
 * Set error for the specified by recordKey row.
 * In the leftmost column of this row, exclamation mark error indicator will appear.
 * Clicking on this indicator will cause the specified error message appear in form of a reddish tooltip.
 * Returns id of the error, so that later you can clear the error using this id.
 * @param {number} recordKey
 * @param {string} errorMessage
 * @return {number}
 */
SP.JsGrid.JsGridControl.prototype.SetRowError = function(recordKey, errorMessage) {};

/**
 * Clear specified by id error that was previously set on the specified by recordKey and fieldKey cell.
 * @param {number} recordKey
 * @param {string} fieldKey
 * @param {number} id
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.ClearCellError = function(recordKey, fieldKey, id) {};

/**
 * Clear all errors in the specified cell.
 * @param {number} recordKey
 * @param {string} fieldKey
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.ClearAllErrorsOnCell = function(recordKey, fieldKey) {};

/**
 * Clear specified by id error that was previously set on the specified by recordKey row.
 * @param {number} recordKey
 * @param {number} id
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.ClearRowError = function(recordKey, id) {};

/**
 * Clear all errors in the specified row.
 * @param {number} recordKey
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.ClearAllErrorsOnRow = function(recordKey) {};

/**
 * Get error message for the specified cell.
 * If many errors are set on the cell, only first is returned.
 * If there are no errors in the cell, returns null.
 * @param {number} recordKey
 * @param {string} fieldKey
 * @return {string}
 */
SP.JsGrid.JsGridControl.prototype.GetCellErrorMessage = function(recordKey, fieldKey) {};

/**
 * Get error message for the specified row.
 * If many errors are set on the row, only first is returned.
 * If there are no errors in the row, returns null.
 * @param {number} recordKey
 * @return {string}
 */
SP.JsGrid.JsGridControl.prototype.GetRowErrorMessage = function(recordKey) {};

/**
 * This method is used mostly when you have a rather tall JSGrid and you want to ensure that user sees
 * that some error has occured.
 * You can specify the minId or/and filter function.
 * If minId is specified, method searches for an error with first id which is greater than minId.
 * Scrolls to the Returns the id of the found record.
 * If there aren't any errors, that satisfy the conditions, method does nothing and returns null.
 * @param {number=} minId
 * @param {function(number, string, number): boolean=} fnFilter
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.ScrollToAndExpandNextError = function(minId, fnFilter) {};

/**
 * Same as ScrollToAndExpandNextError, but searches within the specified record.
 * recordKey should be not null, otherwise you'll get an exception.
 * bDontExpand controls whether the error tooltip will be shown (if bDontExpand=true, tooltip will not be shown).
 * @param {number=} minId
 * @param {number=} recordKey
 * @param {function(number, string, number): boolean=} fnFilter
 * @param {boolean=} bDontExpand
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.ScrollToAndExpandNextErrorOnRecord = function(minId, recordKey, fnFilter, bDontExpand) {};

/**
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.GetFocusedItem = function() {};

/**
 * @param {!Sys.UI.DomEvent} eventInfo
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.SendKeyDownEvent = function(eventInfo) {};

/**
 * Moves cursor to entry record (the row that is used to add new records)
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.JumpToEntryRecord = function() {};

/**
 * @param {number} rowIdx1
 * @param {number} rowIdx2
 * @param {boolean} bAppend
 * @param {string=} optPaneId
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.SelectRowRange = function(rowIdx1, rowIdx2, bAppend, optPaneId) {};

/**
 * @param {number} colIdx1
 * @param {number} colIdx2
 * @param {boolean} bAppend
 * @param {string=} optPaneId
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.SelectColumnRange = function(colIdx1, colIdx2, bAppend, optPaneId) {};

/**
 * @param {number} rowIdx1
 * @param {number} rowIdx2
 * @param {number} colIdx1
 * @param {number} colIdx2
 * @param {boolean} bAppend
 * @param {string=} optPaneId
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.SelectCellRange = function(rowIdx1, rowIdx2, colIdx1, colIdx2, bAppend, optPaneId) {};

/**
 * @param {?} rowKey1
 * @param {?} rowKey2
 * @param {boolean} bAppend
 * @param {string=} optPaneId
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.SelectRowRangeByKey = function(rowKey1, rowKey2, bAppend, optPaneId) {};

/**
 * @param {?} colKey1
 * @param {?} colKey2
 * @param {boolean} bAppend
 * @param {string=} optPaneId
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.SelectColumnRangeByKey = function(colKey1, colKey2, bAppend, optPaneId) {};

/**
 * @param {string} recordKey1
 * @param {string} recordKey2
 * @param {?} colKey1
 * @param {?} colKey2
 * @param {boolean} bAppend
 * @param {string=} optPaneId
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.SelectCellRangeByKey = function(recordKey1, recordKey2, colKey1, colKey2, bAppend, optPaneId) {};

/**
 * @param {?} oldKey
 * @param {?} newKey
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.ChangeKeys = function(oldKey, newKey) {};

/**
 * @param {?=} optPaneId
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.GetSelectedRowRanges = function(optPaneId) {};

/**
 * @param {?=} optPaneId
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.GetSelectedColumnRanges = function(optPaneId) {};

/**
 * @param {?=} optPaneId
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.GetSelectedRanges = function(optPaneId) {};

/**
 * @param {number} recordKey
 * @param {?} fieldKey
 * @param {?} changeKey
 * @param {?=} optErrorMsg
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.MarkPropUpdateInvalid = function(recordKey, fieldKey, changeKey, optErrorMsg) {};

/**
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.GetCurrentChangeKey = function() {};

/**
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.CreateAndSynchronizeToNewChangeKey = function() {};

/**
 * @param {boolean} bUseCustomInitialUpdate
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.CreateDataUpdateCmd = function(bUseCustomInitialUpdate) {};

/**
 * @param {?} changeKey
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.IsChangeKeyApplied = function(changeKey) {};

/**
 * @param {?} version
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.GetChangeKeyForVersion = function(version) {};

/**
 * @param {number} recordKey
 * @param {?} fieldKey
 * @param {?} changeKey
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.TryReadPropForChangeKey = function(recordKey, fieldKey, changeKey) {};

/**
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.GetUnfilteredHierarchyMap = function() {};

/**
 * @param {boolean} bDecompressGuidKeys
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.GetHierarchyState = function(bDecompressGuidKeys) {};

/**
 * @param {number} recordKey
 * @return {boolean}
 */
SP.JsGrid.JsGridControl.prototype.IsGroupingRecordKey = function(recordKey) {};

/**
 * @param {number} recordKey
 * @return {boolean}
 */
SP.JsGrid.JsGridControl.prototype.IsGroupingColumnKey = function(recordKey) {};

/**
 * @param {boolean} bDuplicatesAllowed
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.GetSelectedRecordKeys = function(bDuplicatesAllowed) {};

/**
 * Cut data from currently selected cells into the clipboard.
 * Will not work if current selection contains entry row or readonly cells.
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.CutToClipboard = function() {};

/**
 * Copy data from currently selected cells into the clipboard.
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.CopyToClipboard = function() {};

/**
 * Paste data from clipboard into currently selected cells.
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.PasteFromClipboard = function() {};

/**
 * @param {?} origFocus
 * @return {void}
 */
SP.JsGrid.JsGridControl.prototype.TryRestoreFocusAfterInsertOrDeleteColumns = function(origFocus) {};

/**
 * Get undo manager for performing undo/redo operations programmatically.
 * @return {!SP.JsGrid.CommandManager}
 */
SP.JsGrid.JsGridControl.prototype.GetUndoManager = function() {};

/**
 * Gets number of records visible in the current view, including the entry row.
 * @return {number}
 */
SP.JsGrid.JsGridControl.prototype.GetVisibleRecordCount = function() {};

/**
 * Returns index of the system RecordIndicatorCheckBoxColumn. If not present in the view, returns null.
 * @return {number}
 */
SP.JsGrid.JsGridControl.prototype.GetRecordIndicatorCheckBoxColumnIndex = function() {};

/**
 * Determines if the specified record is visible in the current view.
 * @param {number} recordKey
 * @return {boolean}
 */
SP.JsGrid.JsGridControl.prototype.IsRecordVisibleInView = function(recordKey) {};

/**
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.GetHierarchyQueryObject = function() {};

/**
 * @return {?}
 */
SP.JsGrid.JsGridControl.prototype.GetSpCsrRenderCtx = function() {};
/**
 * @record
 * @struct
 */
SP.JsGrid.IChangeKey = function() {};

/**
 * @return {void}
 */
SP.JsGrid.IChangeKey.prototype.Reserve = function() {};

/**
 * @return {void}
 */
SP.JsGrid.IChangeKey.prototype.Release = function() {};

/**
 * @return {number}
 */
SP.JsGrid.IChangeKey.prototype.GetVersionNumber = function() {};

/**
 * @param {!SP.JsGrid.IChangeKey} changeKey
 * @return {number}
 */
SP.JsGrid.IChangeKey.prototype.CompareTo = function(changeKey) {};

/** @const */
SP.JsGrid.EventType = {};
/** @const {number} */
SP.JsGrid.EventType.OnCellFocusChanged;
/** @const {number} */
SP.JsGrid.EventType.OnRowFocusChanged;
/** @const {number} */
SP.JsGrid.EventType.OnCellEditBegin;
/** @const {number} */
SP.JsGrid.EventType.OnCellEditCompleted;
/** @const {number} */
SP.JsGrid.EventType.OnRightClick;
/** @const {number} */
SP.JsGrid.EventType.OnPropertyChanged;
/** @const {number} */
SP.JsGrid.EventType.OnRecordInserted;
/** @const {number} */
SP.JsGrid.EventType.OnRecordDeleted;
/** @const {number} */
SP.JsGrid.EventType.OnRecordChecked;
/** @const {number} */
SP.JsGrid.EventType.OnCellErrorStateChanged;
/** @const {number} */
SP.JsGrid.EventType.OnEntryRecordAdded;
/** @const {number} */
SP.JsGrid.EventType.OnEntryRecordCommitted;
/** @const {number} */
SP.JsGrid.EventType.OnEntryRecordPropertyChanged;
/** @const {number} */
SP.JsGrid.EventType.OnRowErrorStateChanged;
/** @const {number} */
SP.JsGrid.EventType.OnDoubleClick;
/** @const {number} */
SP.JsGrid.EventType.OnBeforeGridDispose;
/** @const {number} */
SP.JsGrid.EventType.OnSingleCellClick;
/** @const {number} */
SP.JsGrid.EventType.OnInitialChangesForChangeKeyComplete;
/** @const {number} */
SP.JsGrid.EventType.OnVacateChange;
/** @const {number} */
SP.JsGrid.EventType.OnGridErrorStateChanged;
/** @const {number} */
SP.JsGrid.EventType.OnSingleCellKeyDown;
/** @const {number} */
SP.JsGrid.EventType.OnRecordsReordered;
/** @const {number} */
SP.JsGrid.EventType.OnBeforePropertyChanged;
/** @const {number} */
SP.JsGrid.EventType.OnRowEscape;
/** @const {number} */
SP.JsGrid.EventType.OnBeginRenameColumn;
/** @const {number} */
SP.JsGrid.EventType.OnEndRenameColumn;
/** @const {number} */
SP.JsGrid.EventType.OnPasteBegin;
/** @const {number} */
SP.JsGrid.EventType.OnPasteEnd;
/** @const {number} */
SP.JsGrid.EventType.OnBeginRedoDataUpdateChange;
/** @const {number} */
SP.JsGrid.EventType.OnBeginUndoDataUpdateChange;

/** @const */
SP.JsGrid.DelegateType = {};
/** @const {number} */
SP.JsGrid.DelegateType.ExpandColumnMenu;
/** @const {number} */
SP.JsGrid.DelegateType.AddColumnMenuItems;
/** @const {number} */
SP.JsGrid.DelegateType.Sort;
/** @const {number} */
SP.JsGrid.DelegateType.Filter;
/** @const {number} */
SP.JsGrid.DelegateType.InsertRecord;
/** @const {number} */
SP.JsGrid.DelegateType.DeleteRecords;
/** @const {number} */
SP.JsGrid.DelegateType.IndentRecords;
/** @const {number} */
SP.JsGrid.DelegateType.OutdentRecords;
/** @const {number} */
SP.JsGrid.DelegateType.IsRecordInsertInView;
/** @const {number} */
SP.JsGrid.DelegateType.ExpandDelayLoadedHierarchyNode;
/** @const {number} */
SP.JsGrid.DelegateType.AutoFilter;
/** @const {number} */
SP.JsGrid.DelegateType.ExpandConflictResolution;
/** @const {number} */
SP.JsGrid.DelegateType.GetAutoFilterEntries;
/** @const {number} */
SP.JsGrid.DelegateType.LaunchFilterDialog;
/** @const {number} */
SP.JsGrid.DelegateType.ShowColumnConfigurationDialog;
/** @const {number} */
SP.JsGrid.DelegateType.GetRecordEditMode;
/** @const {number} */
SP.JsGrid.DelegateType.GetGridRowStyleId;
/** @const {number} */
SP.JsGrid.DelegateType.CreateEntryRecord;
/** @const {number} */
SP.JsGrid.DelegateType.TryInsertEntryRecord;
/** @const {number} */
SP.JsGrid.DelegateType.WillAddColumnMenuItems;
/** @const {number} */
SP.JsGrid.DelegateType.NextPage;
/** @const {number} */
SP.JsGrid.DelegateType.AddNewColumn;
/** @const {number} */
SP.JsGrid.DelegateType.RemoveColumnFromView;
/** @const {number} */
SP.JsGrid.DelegateType.ReorderColumnPositionInView;
/** @const {number} */
SP.JsGrid.DelegateType.TryCreateProvisionalRecord;
/** @const {number} */
SP.JsGrid.DelegateType.CanReorderRecords;
/** @const {number} */
SP.JsGrid.DelegateType.AddNewColumnMenuItems;
/** @const {number} */
SP.JsGrid.DelegateType.TryBeginPaste;
/** @const {number} */
SP.JsGrid.DelegateType.AllowSelectionChange;
/** @const {number} */
SP.JsGrid.DelegateType.GetFieldEditMode;
/** @const {number} */
SP.JsGrid.DelegateType.GetFieldReadOnlyActiveState;
/** @const {number} */
SP.JsGrid.DelegateType.OnBeforeRecordReordered;

/** @const */
SP.JsGrid.ClickContext = {};
/** @const {number} */
SP.JsGrid.ClickContext.SelectAllSquare;
/** @const {number} */
SP.JsGrid.ClickContext.RowHeader;
/** @const {number} */
SP.JsGrid.ClickContext.ColumnHeader;
/** @const {number} */
SP.JsGrid.ClickContext.Cell;
/** @const {number} */
SP.JsGrid.ClickContext.Gantt;
/** @const {number} */
SP.JsGrid.ClickContext.Other;

/**
 * @constructor
 * @struct
 * @param {string} id
 * @param {!SP.JsGrid.Image} img
 * @param {SP.JsGrid.RowHeaderStatePriorities} priority
 * @param {string} tooltip
 * @param {function(!Sys.UI.DomEvent, number): void} fnOnClick
 */
SP.JsGrid.RowHeaderState = function(id, img, priority, tooltip, fnOnClick) {};

/**
 * @return {string}
 */
SP.JsGrid.RowHeaderState.prototype.GetId = function() {};

/**
 * @return {!SP.JsGrid.Image}
 */
SP.JsGrid.RowHeaderState.prototype.GetImg = function() {};

/**
 * @return {SP.JsGrid.RowHeaderStatePriorities}
 */
SP.JsGrid.RowHeaderState.prototype.GetPriority = function() {};

/**
 * @return {function(!Sys.UI.DomEvent, number): void}
 */
SP.JsGrid.RowHeaderState.prototype.GetOnClick = function() {};

/**
 * @return {string}
 */
SP.JsGrid.RowHeaderState.prototype.GetTooltip = function() {};

/**
 * @return {string}
 */
SP.JsGrid.RowHeaderState.prototype.toString = function() {};

/**
 * @constructor
 * @struct
 * optOuterCssNames and optImgCssNames are strings that contain css class names separated by spaces.
 * optImgCssNames are applied to the img tag.
 * if bIsClustered, image is rendered inside div, and optOuterCssNames are applied to the div.
 * @param {string} imgSrc
 * @param {boolean} bIsClustered
 * @param {string} optOuterCssNames
 * @param {string} optImgCssNames
 * @param {boolean} bIsAnimated
 */
SP.JsGrid.Image = function(imgSrc, bIsClustered, optOuterCssNames, optImgCssNames, bIsAnimated) {};
 /** @type {string} */
SP.JsGrid.Image.prototype.imgSrc;
 /** @type {boolean} */
SP.JsGrid.Image.prototype.bIsClustered;
 /** @type {string} */
SP.JsGrid.Image.prototype.optOuterCssNames;
 /** @type {string} */
SP.JsGrid.Image.prototype.imgCssNames;
 /** @type {boolean} */
SP.JsGrid.Image.prototype.bIsAnimated;

/**
 * Renders the image with specified alternative text and on-click handler.
 * If bHideTooltip == false, then alternative text is also shown as the tooltip (title attribute).
 * @param {string} altText
 * @param {function(!Sys.UI.DomEvent): void} clickFn
 * @param {boolean} bHideTooltip
 * @return {!HTMLElement}
 */
SP.JsGrid.Image.prototype.Render = function(altText, clickFn, bHideTooltip) {};
/**
 * @record
 * @struct
 */
SP.JsGrid.IEventArgs = function() {};
/** @const */
SP.JsGrid.EventArgs = {};

/**
 * @constructor
 * @struct
 * @param {number} recordKey
 */
SP.JsGrid.EventArgs.OnEntryRecordAdded = function(recordKey) {};
 /** @type {number} */
SP.JsGrid.EventArgs.OnEntryRecordAdded.prototype.recordKey;

/**
 * @constructor
 * @struct
 * @param {number} newRecordKey
 * @param {string} newFieldKey
 * @param {number} oldRecordKey
 * @param {string} oldFieldKey
 */
SP.JsGrid.EventArgs.CellFocusChanged = function(newRecordKey, newFieldKey, oldRecordKey, oldFieldKey) {};
 /** @type {number} */
SP.JsGrid.EventArgs.CellFocusChanged.prototype.newRecordKey;
 /** @type {string} */
SP.JsGrid.EventArgs.CellFocusChanged.prototype.newFieldKey;
 /** @type {number} */
SP.JsGrid.EventArgs.CellFocusChanged.prototype.oldRecordKey;
 /** @type {string} */
SP.JsGrid.EventArgs.CellFocusChanged.prototype.oldFieldKey;

/**
 * @constructor
 * @struct
 * @param {number} newRecordKey
 * @param {number} oldRecordKey
 */
SP.JsGrid.EventArgs.RowFocusChanged = function(newRecordKey, oldRecordKey) {};
 /** @type {number} */
SP.JsGrid.EventArgs.RowFocusChanged.prototype.newRecordKey;
 /** @type {number} */
SP.JsGrid.EventArgs.RowFocusChanged.prototype.oldRecordKey;

/**
 * @constructor
 * @struct
 * @param {number} recordKey
 * @param {string} fieldKey
 */
SP.JsGrid.EventArgs.CellEditBegin = function(recordKey, fieldKey) {};
 /** @type {number} */
SP.JsGrid.EventArgs.CellEditBegin.prototype.recordKey;
 /** @type {string} */
SP.JsGrid.EventArgs.CellEditBegin.prototype.fieldKey;

/**
 * @constructor
 * @struct
 * @param {number} recordKey
 * @param {string} fieldKey
 * @param {!SP.JsGrid.IChangeKey} changeKey
 * @param {boolean} bCancelled
 */
SP.JsGrid.EventArgs.CellEditCompleted = function(recordKey, fieldKey, changeKey, bCancelled) {};
 /** @type {number} */
SP.JsGrid.EventArgs.CellEditCompleted.prototype.recordKey;
 /** @type {string} */
SP.JsGrid.EventArgs.CellEditCompleted.prototype.fieldKey;
 /** @type {!SP.JsGrid.IChangeKey} */
SP.JsGrid.EventArgs.CellEditCompleted.prototype.changeKey;
 /** @type {boolean} */
SP.JsGrid.EventArgs.CellEditCompleted.prototype.bCancelled;

/**
 * @constructor
 * @struct
 * @param {!Sys.UI.DomEvent} eventInfo
 * @param {SP.JsGrid.ClickContext} context
 * @param {number} recordKey
 * @param {string} fieldKey
 */
SP.JsGrid.EventArgs.Click = function(eventInfo, context, recordKey, fieldKey) {};
 /** @type {!Sys.UI.DomEvent} */
SP.JsGrid.EventArgs.Click.prototype.eventInfo;
 /** @type {SP.JsGrid.ClickContext} */
SP.JsGrid.EventArgs.Click.prototype.context;
 /** @type {number} */
SP.JsGrid.EventArgs.Click.prototype.recordKey;
 /** @type {string} */
SP.JsGrid.EventArgs.Click.prototype.fieldKey;

/**
 * @constructor
 * @struct
 * @param {number} recordKey
 * @param {string} fieldKey
 * @param {!SP.JsGrid.Internal.PropertyUpdate} oldProp
 * @param {!SP.JsGrid.Internal.PropertyUpdate} newProp
 * @param {!SP.JsGrid.IPropertyType} propType
 * @param {!SP.JsGrid.IChangeKey} changeKey
 * @param {SP.JsGrid.ValidationState} validationState
 */
SP.JsGrid.EventArgs.PropertyChanged = function(recordKey, fieldKey, oldProp, newProp, propType, changeKey, validationState) {};
 /** @type {number} */
SP.JsGrid.EventArgs.PropertyChanged.prototype.recordKey;
 /** @type {string} */
SP.JsGrid.EventArgs.PropertyChanged.prototype.fieldKey;
 /** @type {!SP.JsGrid.Internal.PropertyUpdate} */
SP.JsGrid.EventArgs.PropertyChanged.prototype.oldProp;
 /** @type {!SP.JsGrid.Internal.PropertyUpdate} */
SP.JsGrid.EventArgs.PropertyChanged.prototype.newProp;
 /** @type {!SP.JsGrid.IPropertyType} */
SP.JsGrid.EventArgs.PropertyChanged.prototype.propType;
 /** @type {!SP.JsGrid.IChangeKey} */
SP.JsGrid.EventArgs.PropertyChanged.prototype.changeKey;
 /** @type {SP.JsGrid.ValidationState} */
SP.JsGrid.EventArgs.PropertyChanged.prototype.validationState;

/**
 * @constructor
 * @struct
 * @param {number} recordKey
 * @param {number} recordIdx
 * @param {number} afterRecordKey
 * @param {!SP.JsGrid.IChangeKey} changeKey
 */
SP.JsGrid.EventArgs.RecordInserted = function(recordKey, recordIdx, afterRecordKey, changeKey) {};
 /** @type {number} */
SP.JsGrid.EventArgs.RecordInserted.prototype.recordKey;
 /** @type {number} */
SP.JsGrid.EventArgs.RecordInserted.prototype.recordIdx;
 /** @type {number} */
SP.JsGrid.EventArgs.RecordInserted.prototype.afterRecordKey;
 /** @type {!SP.JsGrid.IChangeKey} */
SP.JsGrid.EventArgs.RecordInserted.prototype.changeKey;

/**
 * @constructor
 * @struct
 * @param {number} recordKey
 * @param {number} recordIdx
 * @param {!SP.JsGrid.IChangeKey} changeKey
 */
SP.JsGrid.EventArgs.RecordDeleted = function(recordKey, recordIdx, changeKey) {};
 /** @type {number} */
SP.JsGrid.EventArgs.RecordDeleted.prototype.recordKey;
 /** @type {number} */
SP.JsGrid.EventArgs.RecordDeleted.prototype.recordIdx;
 /** @type {!SP.JsGrid.IChangeKey} */
SP.JsGrid.EventArgs.RecordDeleted.prototype.changeKey;

/**
 * @constructor
 * @struct
 * @param {!SP.Utilities.Set} recordKeySet
 * @param {boolean} bChecked
 */
SP.JsGrid.EventArgs.RecordChecked = function(recordKeySet, bChecked) {};
 /** @type {!SP.Utilities.Set} */
SP.JsGrid.EventArgs.RecordChecked.prototype.recordKeySet;
 /** @type {boolean} */
SP.JsGrid.EventArgs.RecordChecked.prototype.bChecked;

/**
 * @constructor
 * @struct
 * @param {number} recordKey
 * @param {string} fieldKey
 * @param {boolean} bAddingError
 * @param {boolean} bCellCurrentlyHasError
 * @param {boolean} bCellHadError
 * @param {number} errorId
 */
SP.JsGrid.EventArgs.OnCellErrorStateChanged = function(recordKey, fieldKey, bAddingError, bCellCurrentlyHasError, bCellHadError, errorId) {};
 /** @type {number} */
SP.JsGrid.EventArgs.OnCellErrorStateChanged.prototype.recordKey;
 /** @type {string} */
SP.JsGrid.EventArgs.OnCellErrorStateChanged.prototype.fieldKey;
 /** @type {boolean} */
SP.JsGrid.EventArgs.OnCellErrorStateChanged.prototype.bAddingError;
 /** @type {boolean} */
SP.JsGrid.EventArgs.OnCellErrorStateChanged.prototype.bCellCurrentlyHasError;
 /** @type {boolean} */
SP.JsGrid.EventArgs.OnCellErrorStateChanged.prototype.bCellHadError;
 /** @type {number} */
SP.JsGrid.EventArgs.OnCellErrorStateChanged.prototype.errorId;

/**
 * @constructor
 * @struct
 * @param {number} recordKey
 * @param {boolean} bAddingError
 * @param {boolean} bErrorCurrentlyInRow
 * @param {boolean} bRowHadError
 * @param {number} errorId
 * @param {string} message
 */
SP.JsGrid.EventArgs.OnRowErrorStateChanged = function(recordKey, bAddingError, bErrorCurrentlyInRow, bRowHadError, errorId, message) {};
 /** @type {number} */
SP.JsGrid.EventArgs.OnRowErrorStateChanged.prototype.recordKey;
 /** @type {boolean} */
SP.JsGrid.EventArgs.OnRowErrorStateChanged.prototype.bAddingError;
 /** @type {boolean} */
SP.JsGrid.EventArgs.OnRowErrorStateChanged.prototype.bErrorCurrentlyInRow;
 /** @type {boolean} */
SP.JsGrid.EventArgs.OnRowErrorStateChanged.prototype.bRowHadError;
 /** @type {number} */
SP.JsGrid.EventArgs.OnRowErrorStateChanged.prototype.errorId;
 /** @type {string} */
SP.JsGrid.EventArgs.OnRowErrorStateChanged.prototype.message;

/**
 * @constructor
 * @struct
 * @param {string} origRecKey
 * @param {number} recordKey
 * @param {!SP.JsGrid.IChangeKey} changeKey
 */
SP.JsGrid.EventArgs.OnEntryRecordCommitted = function(origRecKey, recordKey, changeKey) {};
 /** @type {number} */
SP.JsGrid.EventArgs.OnEntryRecordCommitted.prototype.originalRecordKey;
 /** @type {number} */
SP.JsGrid.EventArgs.OnEntryRecordCommitted.prototype.recordKey;
 /** @type {!SP.JsGrid.IChangeKey} */
SP.JsGrid.EventArgs.OnEntryRecordCommitted.prototype.changeKey;

/**
 * @constructor
 * @struct
 * @param {!Sys.UI.DomEvent} eventInfo
 * @param {number} recordKey
 * @param {string} fieldKey
 */
SP.JsGrid.EventArgs.SingleCellClick = function(eventInfo, recordKey, fieldKey) {};
 /** @type {!Sys.UI.DomEvent} */
SP.JsGrid.EventArgs.SingleCellClick.prototype.eventInfo;
 /** @type {number} */
SP.JsGrid.EventArgs.SingleCellClick.prototype.recordKey;
 /** @type {string} */
SP.JsGrid.EventArgs.SingleCellClick.prototype.fieldKey;

/**
 * @constructor
 * @struct
 * @param {!SP.JsGrid.IChangeKey} changeKey
 */
SP.JsGrid.EventArgs.PendingChangeKeyInitiallyComplete = function(changeKey) {};
 /** @type {!SP.JsGrid.IChangeKey} */
SP.JsGrid.EventArgs.PendingChangeKeyInitiallyComplete.prototype.changeKey;

/**
 * @constructor
 * @struct
 * @param {!SP.JsGrid.IChangeKey} changeKey
 */
SP.JsGrid.EventArgs.VacateChange = function(changeKey) {};
 /** @type {!SP.JsGrid.IChangeKey} */
SP.JsGrid.EventArgs.VacateChange.prototype.changeKey;

/**
 * @constructor
 * @struct
 * @param {boolean} bAnyErrors
 */
SP.JsGrid.EventArgs.GridErrorStateChanged = function(bAnyErrors) {};
 /** @type {boolean} */
SP.JsGrid.EventArgs.GridErrorStateChanged.prototype.bAnyErrors;

/**
 * @constructor
 * @struct
 * @param {!Sys.UI.DomEvent} eventInfo
 * @param {number} recordKey
 * @param {string} fieldKey
 */
SP.JsGrid.EventArgs.SingleCellKeyDown = function(eventInfo, recordKey, fieldKey) {};
 /** @type {!Sys.UI.DomEvent} */
SP.JsGrid.EventArgs.SingleCellKeyDown.prototype.eventInfo;
 /** @type {number} */
SP.JsGrid.EventArgs.SingleCellKeyDown.prototype.recordKey;
 /** @type {string} */
SP.JsGrid.EventArgs.SingleCellKeyDown.prototype.fieldKey;

/**
 * @constructor
 * @struct
 * @param {!Array<string>} recordKeys
 * @param {!SP.JsGrid.IChangeKey} changeKey
 */
SP.JsGrid.EventArgs.OnRecordsReordered = function(recordKeys, changeKey) {};
 /** @type {!Array<string>} */
SP.JsGrid.EventArgs.OnRecordsReordered.prototype.reorderedKeys;
 /** @type {!SP.JsGrid.IChangeKey} */
SP.JsGrid.EventArgs.OnRecordsReordered.prototype.changeKey;

/**
 * @constructor
 * @struct
 * @param {number} recordKey
 */
SP.JsGrid.EventArgs.OnRowEscape = function(recordKey) {};
 /** @type {number} */
SP.JsGrid.EventArgs.OnRowEscape.prototype.recordKey;

/**
 * @constructor
 * @struct
 * @param {string} columnKey
 * @param {string} originalColumnTitle
 * @param {string} newColumnTitle
 */
SP.JsGrid.EventArgs.OnEndRenameColumn = function(columnKey, originalColumnTitle, newColumnTitle) {};
 /** @type {string} */
SP.JsGrid.EventArgs.OnEndRenameColumn.prototype.columnKey;
 /** @type {string} */
SP.JsGrid.EventArgs.OnEndRenameColumn.prototype.originalColumnTitle;
 /** @type {string} */
SP.JsGrid.EventArgs.OnEndRenameColumn.prototype.newColumnTitle;

/**
 * @constructor
 * @struct
 * @param {!SP.JsGrid.IChangeKey} changeKey
 */
SP.JsGrid.EventArgs.OnBeginRedoDataUpdateChange = function(changeKey) {};
 /** @type {!SP.JsGrid.IChangeKey} */
SP.JsGrid.EventArgs.OnBeginRedoDataUpdateChange.prototype.changeKey;

/**
 * @constructor
 * @struct
 * @param {!SP.JsGrid.IChangeKey} changeKey
 */
SP.JsGrid.EventArgs.OnBeginUndoDataUpdateChange = function(changeKey) {};
 /** @type {!SP.JsGrid.IChangeKey} */
SP.JsGrid.EventArgs.OnBeginUndoDataUpdateChange.prototype.changeKey;
/**
 * @constructor
 * @struct
 */
SP.JsGrid.JsGridControl.Parameters = function() {};
 /** @type {!SP.JsGrid.TableCache} */
SP.JsGrid.JsGridControl.Parameters.prototype.tableCache;
 /** @type {?} */
SP.JsGrid.JsGridControl.Parameters.prototype.name;
 /** @type {boolean} */
SP.JsGrid.JsGridControl.Parameters.prototype.bNotificationsEnabled;
 /** @type {!SP.JsGrid.IStyleManager} */
SP.JsGrid.JsGridControl.Parameters.prototype.styleManager;
 /** @type {number} */
SP.JsGrid.JsGridControl.Parameters.prototype.minHeaderHeight;
 /** @type {number} */
SP.JsGrid.JsGridControl.Parameters.prototype.minRowHeight;
 /** @type {!SP.JsGrid.CommandManager} */
SP.JsGrid.JsGridControl.Parameters.prototype.commandMgr;
 /** @type {!SP.Utilities.Set} */
SP.JsGrid.JsGridControl.Parameters.prototype.enabledRowHeaderAutoStates;
 /** @type {!SP.JsGrid.JsGridControl.TableViewParameters} */
SP.JsGrid.JsGridControl.Parameters.prototype.tableViewParams;
 /** @type {boolean} */
SP.JsGrid.JsGridControl.Parameters.prototype.bEnableDiffTracking;
 /** @type {boolean} */
SP.JsGrid.JsGridControl.Parameters.prototype.isRTL;
/**
 * @constructor
 * @struct
 */
SP.JsGrid.JsGridControl.TableViewParameters = function() {};
 /** @type {SP.JsGrid.PaneLayout} */
SP.JsGrid.JsGridControl.TableViewParameters.prototype.paneLayout;
 /** @type {SP.JsGrid.EditMode} */
SP.JsGrid.JsGridControl.TableViewParameters.prototype.defaultEditMode;
 /** @type {SP.JsGrid.SelectionTypeFlags} */
SP.JsGrid.JsGridControl.TableViewParameters.prototype.allowedSelectionTypes;
 /** @type {boolean} */
SP.JsGrid.JsGridControl.TableViewParameters.prototype.bMovableColumns;
 /** @type {boolean} */
SP.JsGrid.JsGridControl.TableViewParameters.prototype.bResizableColumns;
 /** @type {boolean} */
SP.JsGrid.JsGridControl.TableViewParameters.prototype.bHidableColumns;
 /** @type {boolean} */
SP.JsGrid.JsGridControl.TableViewParameters.prototype.bSortableColumns;
 /** @type {boolean} */
SP.JsGrid.JsGridControl.TableViewParameters.prototype.bAutoFilterableColumns;
 /** @type {boolean} */
SP.JsGrid.JsGridControl.TableViewParameters.prototype.bRowHeadersEnabled;
 /** @type {boolean} */
SP.JsGrid.JsGridControl.TableViewParameters.prototype.bRecordIndicatorCheckboxesEnabled;
 /** @type {boolean} */
SP.JsGrid.JsGridControl.TableViewParameters.prototype.bFillControlEnabled;
 /** @type {boolean} */
SP.JsGrid.JsGridControl.TableViewParameters.prototype.bEditingEnabled;
 /** @type {boolean} */
SP.JsGrid.JsGridControl.TableViewParameters.prototype.bNewRowEnabled;
 /** @type {!Array<string>} */
SP.JsGrid.JsGridControl.TableViewParameters.prototype.checkSelectionCheckboxHiddenRecordKeys;
 /** @type {!Array<string>} */
SP.JsGrid.JsGridControl.TableViewParameters.prototype.checkSelectionCheckboxDisabledRecordKeys;
 /** @type {!Array<string>} */
SP.JsGrid.JsGridControl.TableViewParameters.prototype.checkSelectionCheckedRecordKeys;
 /** @type {string} */
SP.JsGrid.JsGridControl.TableViewParameters.prototype.keyFieldName;
 /** @type {!Object<string,!SP.JsGrid.GridField>} */
SP.JsGrid.JsGridControl.TableViewParameters.prototype.gridFieldMap;
 /** @type {!SP.JsGrid.ColumnInfoCollection} */
SP.JsGrid.JsGridControl.TableViewParameters.prototype.columns;
 /** @type {?} */
SP.JsGrid.JsGridControl.TableViewParameters.prototype.messageOverrides;
 /** @type {?} */
SP.JsGrid.JsGridControl.TableViewParameters.prototype.operationalConstantsFieldKeyMap;
 /** @type {!SP.JsGrid.JsGridControl.GanttParameters} */
SP.JsGrid.JsGridControl.TableViewParameters.prototype.ganttParams;
 /** @type {!SP.JsGrid.JsGridControl.PivotedGridParameters} */
SP.JsGrid.JsGridControl.TableViewParameters.prototype.pivotedGridParams;
 /** @type {!SP.JsGrid.JsGridControl.RowViewParameters} */
SP.JsGrid.JsGridControl.TableViewParameters.prototype.rowViewParams;
/**
 * @constructor
 * @struct
 */
SP.JsGrid.JsGridControl.PivotedGridParameters = function() {};
/**
 * @constructor
 * @struct
 */
SP.JsGrid.JsGridControl.GanttParameters = function() {};
 /** @type {!SP.JsGrid.ColumnInfoCollection} */
SP.JsGrid.JsGridControl.GanttParameters.prototype.columns;
/**
 * @constructor
 * @struct
 */
SP.JsGrid.JsGridControl.RowViewParameters = function() {};
 /** @type {SP.JsGrid.HierarchyMode} */
SP.JsGrid.JsGridControl.RowViewParameters.prototype.hierarchyMode;
 /** @type {?} */
SP.JsGrid.JsGridControl.RowViewParameters.prototype.view;
 /** @type {number} */
SP.JsGrid.JsGridControl.RowViewParameters.prototype.topViewIdx;
 /** @type {?} */
SP.JsGrid.JsGridControl.RowViewParameters.prototype.groupingLevel;
 /** @type {?} */
SP.JsGrid.JsGridControl.RowViewParameters.prototype.groupingRecordKeyPrefix;
 /** @type {?} */
SP.JsGrid.JsGridControl.RowViewParameters.prototype.autoFilterState;
 /** @type {?} */
SP.JsGrid.JsGridControl.RowViewParameters.prototype.unfilteredHierarchyMgr;
 /** @type {?} */
SP.JsGrid.JsGridControl.RowViewParameters.prototype.hierarchyDelayLoadKeys;
 /** @type {?} */
SP.JsGrid.JsGridControl.RowViewParameters.prototype.hierarchyState;
 /** @type {?} */
SP.JsGrid.JsGridControl.RowViewParameters.prototype.sortState;
 /** @type {?} */
SP.JsGrid.JsGridControl.RowViewParameters.prototype.filterState;
 /** @type {?} */
SP.JsGrid.JsGridControl.RowViewParameters.prototype.autoFilterEntries;
 /** @type {?} */
SP.JsGrid.JsGridControl.RowViewParameters.prototype.filteredDescCounts;
/**
 * @constructor
 * @struct
 */
SP.JsGrid.CommandManager = function() {};
/**
 * @constructor
 * @struct
 */
SP.JsGrid.TableCache = function() {};
/**
 * @record
 * @struct
 */
SP.JsGrid.IStyleManager = function() {};
 /** @type {!SP.JsGrid.IStyleType.GridPane} */
SP.JsGrid.IStyleManager.prototype.gridPaneStyle;
 /** @type {{normal: !SP.JsGrid.IStyleType.Header, normalHover: !SP.JsGrid.IStyleType.Header, partSelected: !SP.JsGrid.IStyleType.Header, partSelectedHover: !SP.JsGrid.IStyleType.Header, allSelected: !SP.JsGrid.IStyleType.Header, allSelectedHover: !SP.JsGrid.IStyleType.Header}} */
SP.JsGrid.IStyleManager.prototype.columnHeaderStyleCollection;
 /** @type {{normal: !SP.JsGrid.IStyleType.Header, normalHover: !SP.JsGrid.IStyleType.Header, partSelected: !SP.JsGrid.IStyleType.Header, partSelectedHover: !SP.JsGrid.IStyleType.Header, allSelected: !SP.JsGrid.IStyleType.Header, allSelectedHover: !SP.JsGrid.IStyleType.Header}} */
SP.JsGrid.IStyleManager.prototype.rowHeaderStyleCollection;
 /** @type {{normal: !SP.JsGrid.IStyleType.Splitter, normalHandle: !SP.JsGrid.IStyleType.SplitterHandle, hover: !SP.JsGrid.IStyleType.Splitter, hoverHandle: !SP.JsGrid.IStyleType.SplitterHandle, dra: !SP.JsGrid.IStyleType.Splitter, dragHandle: !SP.JsGrid.IStyleType.SplitterHandle}} */
SP.JsGrid.IStyleManager.prototype.splitterStyleCollection;
 /** @type {!SP.JsGrid.IStyleType.Cell} */
SP.JsGrid.IStyleManager.prototype.defaultCellStyle;
 /** @type {!SP.JsGrid.IStyleType.Cell} */
SP.JsGrid.IStyleManager.prototype.readOnlyCellStyle;
 /** @type {!SP.JsGrid.IStyleType.Cell} */
SP.JsGrid.IStyleManager.prototype.readOnlyFocusedCellStyle;
 /** @type {!SP.JsGrid.IStyleType.TimescaleTier} */
SP.JsGrid.IStyleManager.prototype.timescaleTierStyle;
 /** @type {!Array<?>} */
SP.JsGrid.IStyleManager.prototype.groupingStyles;
 /** @type {!SP.JsGrid.IStyleType.Widget} */
SP.JsGrid.IStyleManager.prototype.widgetDockStyle;
 /** @type {!SP.JsGrid.IStyleType.Widget} */
SP.JsGrid.IStyleManager.prototype.widgetDockHoverStyle;
 /** @type {!SP.JsGrid.IStyleType.Widget} */
SP.JsGrid.IStyleManager.prototype.widgetDockPressedStyle;

/**
 * @param {string} styleId
 * @param {!SP.JsGrid.IStyleType.Cell} cellStyle
 * @return {void}
 */
SP.JsGrid.IStyleManager.prototype.RegisterCellStyle = function(styleId, cellStyle) {};

/**
 * @param {string} styleId
 * @return {!SP.JsGrid.IStyleType.Cell}
 */
SP.JsGrid.IStyleManager.prototype.GetCellStyle = function(styleId) {};

/**
 * @param {!SP.JsGrid.IStyleType.Splitter} styleObject
 * @param {?} splitterStyleNameCollection
 * @return {void}
 */
SP.JsGrid.IStyleManager.prototype.UpdateSplitterStyleFromCss = function(styleObject, splitterStyleNameCollection) {};

/**
 * @param {!SP.JsGrid.IStyleType.Header} styleObject
 * @param {?} headerStyleNameCol
 * @return {void}
 */
SP.JsGrid.IStyleManager.prototype.UpdateHeaderStyleFromCss = function(styleObject, headerStyleNameCol) {};

/**
 * @param {!SP.JsGrid.IStyleType.GridPane} styleObject
 * @param {?} gridStyleNameCollection
 * @return {void}
 */
SP.JsGrid.IStyleManager.prototype.UpdateGridPaneStyleFromCss = function(styleObject, gridStyleNameCollection) {};

/**
 * @param {!SP.JsGrid.IStyleType.Cell} styleObject
 * @param {string} cssClass
 * @return {void}
 */
SP.JsGrid.IStyleManager.prototype.UpdateDefaultCellStyleFromCss = function(styleObject, cssClass) {};

/**
 * @param {!SP.JsGrid.IStyleType.Cell} styleObject
 * @param {string} prefix
 * @return {void}
 */
SP.JsGrid.IStyleManager.prototype.UpdateGroupStylesFromCss = function(styleObject, prefix) {};
/**
 * @record
 * @struct
 */
SP.JsGrid.IStyleType = function() {};
/**
 * @extends {SP.JsGrid.IStyleType}
 * @record
 * @struct
 */
SP.JsGrid.IStyleType.Splitter = function() {};
 /** @type {?} */
SP.JsGrid.IStyleType.Splitter.prototype.outerBorderColor;
 /** @type {?} */
SP.JsGrid.IStyleType.Splitter.prototype.leftInnerBorderColor;
 /** @type {?} */
SP.JsGrid.IStyleType.Splitter.prototype.innerBorderColor;
 /** @type {?} */
SP.JsGrid.IStyleType.Splitter.prototype.backgroundColor;
/**
 * @extends {SP.JsGrid.IStyleType}
 * @record
 * @struct
 */
SP.JsGrid.IStyleType.SplitterHandle = function() {};
 /** @type {?} */
SP.JsGrid.IStyleType.SplitterHandle.prototype.outerBorderColor;
 /** @type {?} */
SP.JsGrid.IStyleType.SplitterHandle.prototype.leftInnerBorderColor;
 /** @type {?} */
SP.JsGrid.IStyleType.SplitterHandle.prototype.innerBorderColor;
 /** @type {?} */
SP.JsGrid.IStyleType.SplitterHandle.prototype.backgroundColor;
 /** @type {?} */
SP.JsGrid.IStyleType.SplitterHandle.prototype.gripUpperColor;
 /** @type {?} */
SP.JsGrid.IStyleType.SplitterHandle.prototype.gripLowerColor;
/**
 * @record
 * @struct
 */
SP.JsGrid.IStyleType.GridPane = function() {};
 /** @type {?} */
SP.JsGrid.IStyleType.GridPane.prototype.verticalBorderColor;
 /** @type {?} */
SP.JsGrid.IStyleType.GridPane.prototype.verticalBorderStyle;
 /** @type {?} */
SP.JsGrid.IStyleType.GridPane.prototype.horizontalBorderColor;
 /** @type {?} */
SP.JsGrid.IStyleType.GridPane.prototype.horizontalBorderStyle;
 /** @type {?} */
SP.JsGrid.IStyleType.GridPane.prototype.backgroundColor;
 /** @type {?} */
SP.JsGrid.IStyleType.GridPane.prototype.columnDropIndicatorColor;
 /** @type {?} */
SP.JsGrid.IStyleType.GridPane.prototype.rowDropIndicatorColor;
 /** @type {?} */
SP.JsGrid.IStyleType.GridPane.prototype.linkColor;
 /** @type {?} */
SP.JsGrid.IStyleType.GridPane.prototype.visitedLinkColor;
 /** @type {?} */
SP.JsGrid.IStyleType.GridPane.prototype.copyRectForeBorderColor;
 /** @type {?} */
SP.JsGrid.IStyleType.GridPane.prototype.copyRectBackBorderColor;
 /** @type {?} */
SP.JsGrid.IStyleType.GridPane.prototype.focusRectBorderColor;
 /** @type {?} */
SP.JsGrid.IStyleType.GridPane.prototype.selectionRectBorderColor;
 /** @type {?} */
SP.JsGrid.IStyleType.GridPane.prototype.selectedCellBgColor;
 /** @type {?} */
SP.JsGrid.IStyleType.GridPane.prototype.readonlySelectionRectBorderColor;
 /** @type {?} */
SP.JsGrid.IStyleType.GridPane.prototype.changeHighlightCellBgColor;
 /** @type {?} */
SP.JsGrid.IStyleType.GridPane.prototype.fillRectBorderColor;
 /** @type {?} */
SP.JsGrid.IStyleType.GridPane.prototype.errorRectBorderColor;
/**
 * @record
 * @struct
 */
SP.JsGrid.IStyleType.Header = function() {};
 /** @type {?} */
SP.JsGrid.IStyleType.Header.prototype.font;
 /** @type {?} */
SP.JsGrid.IStyleType.Header.prototype.fontSize;
 /** @type {?} */
SP.JsGrid.IStyleType.Header.prototype.fontWeight;
 /** @type {?} */
SP.JsGrid.IStyleType.Header.prototype.textColor;
 /** @type {?} */
SP.JsGrid.IStyleType.Header.prototype.backgroundColor;
 /** @type {?} */
SP.JsGrid.IStyleType.Header.prototype.outerBorderColor;
 /** @type {?} */
SP.JsGrid.IStyleType.Header.prototype.innerBorderColor;
 /** @type {?} */
SP.JsGrid.IStyleType.Header.prototype.eyeBrowBorderColor;
 /** @type {?} */
SP.JsGrid.IStyleType.Header.prototype.eyeBrowColor;
 /** @type {?} */
SP.JsGrid.IStyleType.Header.prototype.menuColor;
 /** @type {?} */
SP.JsGrid.IStyleType.Header.prototype.menuBorderColor;
 /** @type {?} */
SP.JsGrid.IStyleType.Header.prototype.resizeColor;
 /** @type {?} */
SP.JsGrid.IStyleType.Header.prototype.resizeBorderColor;
 /** @type {?} */
SP.JsGrid.IStyleType.Header.prototype.menuHoverColor;
 /** @type {?} */
SP.JsGrid.IStyleType.Header.prototype.menuHoverBorderColor;
 /** @type {?} */
SP.JsGrid.IStyleType.Header.prototype.resizeHoverColor;
 /** @type {?} */
SP.JsGrid.IStyleType.Header.prototype.resizeHoverBorderColor;
 /** @type {?} */
SP.JsGrid.IStyleType.Header.prototype.eyeBrowHoverColor;
 /** @type {?} */
SP.JsGrid.IStyleType.Header.prototype.eyeBrowHoverBorderColor;
 /** @type {?} */
SP.JsGrid.IStyleType.Header.prototype.elementClickColor;
 /** @type {?} */
SP.JsGrid.IStyleType.Header.prototype.elementClickBorderColor;
/**
 * @extends {SP.JsGrid.IStyleType}
 * @record
 * @struct
 */
SP.JsGrid.IStyleType.Cell = function() {};
 /** @type {?} */
SP.JsGrid.IStyleType.Cell.prototype.font;
 /** @type {?} */
SP.JsGrid.IStyleType.Cell.prototype.fontSize;
 /** @type {?} */
SP.JsGrid.IStyleType.Cell.prototype.fontWeight;
 /** @type {?} */
SP.JsGrid.IStyleType.Cell.prototype.fontStyle;
 /** @type {?} */
SP.JsGrid.IStyleType.Cell.prototype.textColor;
 /** @type {?} */
SP.JsGrid.IStyleType.Cell.prototype.backgroundColor;
 /** @type {?} */
SP.JsGrid.IStyleType.Cell.prototype.textAlign;
/**
 * @record
 * @struct
 */
SP.JsGrid.IStyleType.Widget = function() {};
 /** @type {?} */
SP.JsGrid.IStyleType.Widget.prototype.backgroundColor;
 /** @type {?} */
SP.JsGrid.IStyleType.Widget.prototype.borderColor;
/**
 * @record
 * @struct
 */
SP.JsGrid.IStyleType.RowHeaderStyle = function() {};
 /** @type {?} */
SP.JsGrid.IStyleType.RowHeaderStyle.prototype.backgroundColor;
 /** @type {?} */
SP.JsGrid.IStyleType.RowHeaderStyle.prototype.outerBorderColor;
 /** @type {?} */
SP.JsGrid.IStyleType.RowHeaderStyle.prototype.innerBorderColor;
/**
 * @record
 * @struct
 */
SP.JsGrid.IStyleType.TimescaleTier = function() {};
 /** @type {?} */
SP.JsGrid.IStyleType.TimescaleTier.prototype.font;
 /** @type {?} */
SP.JsGrid.IStyleType.TimescaleTier.prototype.fontSize;
 /** @type {?} */
SP.JsGrid.IStyleType.TimescaleTier.prototype.fontWeight;
 /** @type {?} */
SP.JsGrid.IStyleType.TimescaleTier.prototype.textColor;
 /** @type {?} */
SP.JsGrid.IStyleType.TimescaleTier.prototype.backgroundColor;
 /** @type {?} */
SP.JsGrid.IStyleType.TimescaleTier.prototype.verticalBorderColor;
 /** @type {?} */
SP.JsGrid.IStyleType.TimescaleTier.prototype.verticalBorderStyle;
 /** @type {?} */
SP.JsGrid.IStyleType.TimescaleTier.prototype.horizontalBorderColor;
 /** @type {?} */
SP.JsGrid.IStyleType.TimescaleTier.prototype.horizontalBorderStyle;
 /** @type {?} */
SP.JsGrid.IStyleType.TimescaleTier.prototype.outerBorderColor;
 /** @type {?} */
SP.JsGrid.IStyleType.TimescaleTier.prototype.todayLineColor;
/**
 * @constructor
 * @struct
 */
SP.JsGrid.Style = function() {};
 /** @type {{Splitter: !SP.JsGrid.IStyleType.Splitter, SplitterHandle: !SP.JsGrid.IStyleType.SplitterHandle, GridPane: !SP.JsGrid.IStyleType.GridPane, Header: !SP.JsGrid.IStyleType.Header, RowHeaderStyle: !SP.JsGrid.IStyleType.RowHeaderStyle, TimescaleTier: !SP.JsGrid.IStyleType.TimescaleTier, Cell: !SP.JsGrid.IStyleType.Cell, Widget: !SP.JsGrid.IStyleType.Widget}} */
SP.JsGrid.Style.Type;
 /** @type {function(?): void} */
SP.JsGrid.Style.SetRTL;
 /** @type {function(): !SP.JsGrid.IStyleManager} */
SP.JsGrid.Style.MakeJsGridStyleManager;
 /** @type {function(!SP.JsGrid.IStyleType, string, ?, ?): ?} */
SP.JsGrid.Style.CreateStyleFromCss;
 /** @type {function(!SP.JsGrid.IStyleType, ?): ?} */
SP.JsGrid.Style.CreateStyle;
 /** @type {function(?, ?): ?} */
SP.JsGrid.Style.MergeCellStyles;
 /** @type {function(!HTMLTableCellElement, ?): void} */
SP.JsGrid.Style.ApplyCellStyle;
 /** @type {function(!HTMLElement, ?, function(!HTMLElement, boolean): void): void} */
SP.JsGrid.Style.ApplyRowHeaderStyle;
 /** @type {function(!HTMLElement, ?, ?): void} */
SP.JsGrid.Style.ApplyCornerHeaderBorderStyle;
 /** @type {function(!HTMLElement, ?, ?): void} */
SP.JsGrid.Style.ApplyHeaderInnerBorderStyle;
 /** @type {function(!HTMLElement, ?): void} */
SP.JsGrid.Style.ApplyColumnContextMenuStyle;
 /** @type {function(!HTMLElement, ?): void} */
SP.JsGrid.Style.ApplySplitterStyle;
 /** @type {function(number, string, string): string} */
SP.JsGrid.Style.MakeBorderString;
 /** @type {function(): string} */
SP.JsGrid.Style.GetCellStyleDefaultBackgroundColor;

/**
 * @constructor
 * @struct
 * @param {!Array<?>} colInfoArray
 */
SP.JsGrid.ColumnInfoCollection = function(colInfoArray) {};

/**
 * @param {string} key
 * @return {?}
 */
SP.JsGrid.ColumnInfoCollection.prototype.GetColumnByKey = function(key) {};

/**
 * @param {boolean=} bVisibleOnly
 * @return {!Array<?>}
 */
SP.JsGrid.ColumnInfoCollection.prototype.GetColumnArray = function(bVisibleOnly) {};

/**
 * @return {!Object<string,?>}
 */
SP.JsGrid.ColumnInfoCollection.prototype.GetColumnMap = function() {};

/**
 * @param {?} colInfo
 * @return {void}
 */
SP.JsGrid.ColumnInfoCollection.prototype.AppendColumn = function(colInfo) {};

/**
 * @param {number} idx
 * @param {?} colInfo
 * @return {void}
 */
SP.JsGrid.ColumnInfoCollection.prototype.InsertColumnAt = function(idx, colInfo) {};

/**
 * @param {string} key
 * @return {void}
 */
SP.JsGrid.ColumnInfoCollection.prototype.RemoveColumn = function(key) {};

/**
 * Returns null if the specified column is not found or hidden.
 * @param {string} key
 * @return {number}
 */
SP.JsGrid.ColumnInfoCollection.prototype.GetColumnPosition = function(key) {};

/**
 * @constructor
 * @struct
 * @param {string} name
 * @param {string} imgSrc
 * @param {string} key
 * @param {number} width
 */
SP.JsGrid.ColumnInfo = function(name, imgSrc, key, width) {};
 /** @type {string} */
SP.JsGrid.ColumnInfo.prototype.name;
 /** @type {string} */
SP.JsGrid.ColumnInfo.prototype.imgSrc;
 /** @type {string} */
SP.JsGrid.ColumnInfo.prototype.imgRawSrc;
 /** @type {string} */
SP.JsGrid.ColumnInfo.prototype.columnKey;
 /** @type {!Array<string>} */
SP.JsGrid.ColumnInfo.prototype.fieldKeys;
 /** @type {number} */
SP.JsGrid.ColumnInfo.prototype.width;
 /** @type {boolean} */
SP.JsGrid.ColumnInfo.prototype.bOpenMenuOnContentClick;
 /** @type {boolean} */
SP.JsGrid.ColumnInfo.prototype.isVisible;
 /** @type {boolean} */
SP.JsGrid.ColumnInfo.prototype.isHidable;
 /** @type {boolean} */
SP.JsGrid.ColumnInfo.prototype.isResizable;
 /** @type {boolean} */
SP.JsGrid.ColumnInfo.prototype.isSortable;
 /** @type {boolean} */
SP.JsGrid.ColumnInfo.prototype.isAutoFilterable;
 /** @type {boolean} */
SP.JsGrid.ColumnInfo.prototype.isFooter;
 /** @type {function(!SP.JsGrid.IRecord, string, ?, ?): boolean} */
SP.JsGrid.ColumnInfo.prototype.fnShouldLinkSingleValue;
 /** @type {function(!SP.JsGrid.IRecord, string, ?, ?): void} */
SP.JsGrid.ColumnInfo.prototype.fnSingleValueClicked;
 /** @type {function(!SP.JsGrid.IRecord, string): SP.JsGrid.EditMode} */
SP.JsGrid.ColumnInfo.prototype.fnGetCellEditMode;
 /** @type {function(!SP.JsGrid.IRecord, string): string} */
SP.JsGrid.ColumnInfo.prototype.fnGetDisplayControlName;
 /** @type {function(!SP.JsGrid.IRecord, string): string} */
SP.JsGrid.ColumnInfo.prototype.fnGetEditControlName;
 /** @type {function(!SP.JsGrid.IRecord, string): !Array<string>} */
SP.JsGrid.ColumnInfo.prototype.fnGetWidgetControlNames;
 /** @type {function(!SP.JsGrid.IRecord, string, ?): string} */
SP.JsGrid.ColumnInfo.prototype.fnGetCellStyleId;
 /** @type {function(!SP.JsGrid.IRecord, string, ?, ?): string} */
SP.JsGrid.ColumnInfo.prototype.fnGetSingleValueTooltip;

/**
 * always returns 'column'
 * @return {string}
 */
SP.JsGrid.ColumnInfo.prototype.ColumnType = function() {};
/**
 * @record
 * @struct
 */
SP.JsGrid.IRecord = function() {};
 /** @type {boolean} */
SP.JsGrid.IRecord.prototype.bIsNewRow;
 /** @type {!Object<string,!SP.JsGrid.IPropertyBase>} */
SP.JsGrid.IRecord.prototype.properties;

/**
 * returns recordKey
 * @return {number}
 */
SP.JsGrid.IRecord.prototype.key = function() {};

/**
 * returns raw data value for the specified field
 * @param {string} fieldKey
 * @return {?}
 */
SP.JsGrid.IRecord.prototype.GetDataValue = function(fieldKey) {};

/**
 * returns localized text value for the specified field
 * @param {string} fieldKey
 * @return {string}
 */
SP.JsGrid.IRecord.prototype.GetLocalizedValue = function(fieldKey) {};

/**
 * returns true if data value for the specified field is available
 * @param {string} fieldKey
 * @return {boolean}
 */
SP.JsGrid.IRecord.prototype.HasDataValue = function(fieldKey) {};

/**
 * returns true if localized text value for the specified field is available
 * @param {string} fieldKey
 * @return {boolean}
 */
SP.JsGrid.IRecord.prototype.HasLocalizedValue = function(fieldKey) {};

/**
 * @param {string} fieldKey
 * @return {!SP.JsGrid.IPropertyBase}
 */
SP.JsGrid.IRecord.prototype.GetProp = function(fieldKey) {};

/**
 * @param {string} fieldKey
 * @param {!SP.JsGrid.IPropertyBase} prop
 * @return {void}
 */
SP.JsGrid.IRecord.prototype.SetProp = function(fieldKey, prop) {};

/**
 * Update the specified field with the specified value
 * @param {string} fieldKey
 * @param {?} value
 * @return {void}
 */
SP.JsGrid.IRecord.prototype.AddFieldValue = function(fieldKey, value) {};

/**
 * Removes value of the specified field.
 * Does not refresh the view.
 * @param {string} fieldKey
 * @return {void}
 */
SP.JsGrid.IRecord.prototype.RemoveFieldValue = function(fieldKey) {};

/**
 * @constructor
 * @struct
 * @param {?} gridFieldMap
 * @param {string} keyColumnName
 * @param {?} fnGetPropType
 */
SP.JsGrid.RecordFactory = function(gridFieldMap, keyColumnName, fnGetPropType) {};
 /** @type {?} */
SP.JsGrid.RecordFactory.prototype.gridFieldMap;

/**
 * Create a new record
 * @param {?} dataPropMap
 * @param {?} localizedPropMap
 * @param {boolean} bKeepRawData
 * @return {!SP.JsGrid.IRecord}
 */
SP.JsGrid.RecordFactory.prototype.MakeRecord = function(dataPropMap, localizedPropMap, bKeepRawData) {};
/**
 * @record
 * @struct
 */
SP.JsGrid.IPropertyBase = function() {};

/**
 * @return {boolean}
 */
SP.JsGrid.IPropertyBase.prototype.HasLocalizedValue = function() {};

/**
 * @return {boolean}
 */
SP.JsGrid.IPropertyBase.prototype.HasDataValue = function() {};

/**
 * @return {!SP.JsGrid.IPropertyBase}
 */
SP.JsGrid.IPropertyBase.prototype.Clone = function() {};

/**
 * dataValue actually is cloned
 * @param {?} dataValue
 * @param {string} localizedValue
 * @return {void}
 */
SP.JsGrid.IPropertyBase.prototype.Update = function(dataValue, localizedValue) {};

/**
 * @return {string}
 */
SP.JsGrid.IPropertyBase.prototype.GetLocalized = function() {};

/**
 * @return {?}
 */
SP.JsGrid.IPropertyBase.prototype.GetData = function() {};
/**
 * @constructor
 * @struct
 */
SP.JsGrid.Property = function() {};

/**
 * @param {?} dataValue
 * @param {string} localizedValue
 * @param {boolean} bHasDataValue
 * @param {boolean} bHasLocalizedValue
 * @param {?} propType
 * @return {!SP.JsGrid.IPropertyBase}
 */
SP.JsGrid.Property.MakeProperty = function(dataValue, localizedValue, bHasDataValue, bHasLocalizedValue, propType) {};

/**
 * @param {?} gridField
 * @param {?} dataValue
 * @param {string} localizedVal
 * @param {?=} optPropType
 * @return {!SP.JsGrid.IPropertyBase}
 */
SP.JsGrid.Property.MakePropertyFromGridField = function(gridField, dataValue, localizedVal, optPropType) {};

/**
 * @constructor
 * @struct
 * @param {string} key
 * @param {boolean} hasDataValue
 * @param {boolean} hasLocalizedValue
 * @param {SP.JsGrid.TextDirection} textDirection
 * @param {?=} defaultCellStyleId
 * @param {SP.JsGrid.EditMode=} editMode
 * @param {boolean=} dateOnly
 * @param {?=} csrInfo
 */
SP.JsGrid.GridField = function(key, hasDataValue, hasLocalizedValue, textDirection, defaultCellStyleId, editMode, dateOnly, csrInfo) {};
 /** @type {string} */
SP.JsGrid.GridField.prototype.key;
 /** @type {boolean} */
SP.JsGrid.GridField.prototype.hasDataValue;
 /** @type {boolean} */
SP.JsGrid.GridField.prototype.hasLocalizedValue;
 /** @type {SP.JsGrid.TextDirection} */
SP.JsGrid.GridField.prototype.textDirection;
 /** @type {boolean} */
SP.JsGrid.GridField.prototype.dateOnly;
 /** @type {?} */
SP.JsGrid.GridField.prototype.csrInfo;

/**
 * @return {SP.JsGrid.EditMode}
 */
SP.JsGrid.GridField.prototype.GetEditMode = function() {};

/**
 * @param {SP.JsGrid.EditMode} mode
 * @return {void}
 */
SP.JsGrid.GridField.prototype.SetEditMode = function(mode) {};

/**
 * @return {?}
 */
SP.JsGrid.GridField.prototype.GetDefaultCellStyleId = function() {};

/**
 * @param {?} dataValue1
 * @param {?} dataValue2
 * @return {boolean}
 */
SP.JsGrid.GridField.prototype.CompareSingleDataEqual = function(dataValue1, dataValue2) {};

/**
 * @return {?}
 */
SP.JsGrid.GridField.prototype.GetPropType = function() {};

/**
 * @return {?}
 */
SP.JsGrid.GridField.prototype.GetSingleValuePropType = function() {};

/**
 * @return {?}
 */
SP.JsGrid.GridField.prototype.GetMultiValuePropType = function() {};

/**
 * @param {?} svPropType
 * @return {void}
 */
SP.JsGrid.GridField.prototype.SetSingleValuePropType = function(svPropType) {};

/**
 * @param {?} listSeparator
 * @return {void}
 */
SP.JsGrid.GridField.prototype.SetIsMultiValue = function(listSeparator) {};

/**
 * @return {boolean}
 */
SP.JsGrid.GridField.prototype.GetIsMultiValue = function() {};
/**
 * @record
 * @struct
 */
SP.JsGrid.IEditActorGridContext = function() {};
 /** @type {!SP.JsGrid.JsGridControl} */
SP.JsGrid.IEditActorGridContext.prototype.jsGridObj;
 /** @type {!HTMLElement} */
SP.JsGrid.IEditActorGridContext.prototype.parentNode;
 /** @type {!SP.JsGrid.IStyleManager} */
SP.JsGrid.IEditActorGridContext.prototype.styleManager;
 /** @type {?} */
SP.JsGrid.IEditActorGridContext.prototype.RTL;
 /** @type {?} */
SP.JsGrid.IEditActorGridContext.prototype.emptyValue;
 /** @type {boolean} */
SP.JsGrid.IEditActorGridContext.prototype.bLightFocus;

/**
 * @param {!Sys.UI.DomEvent} domEvent
 * @return {void}
 */
SP.JsGrid.IEditActorGridContext.prototype.OnKeyDown = function(domEvent) {};
/**
 * @extends {SP.JsGrid.IEditActorGridContext}
 * @record
 * @struct
 */
SP.JsGrid.IEditControlGridContext = function() {};

/**
 * @return {void}
 */
SP.JsGrid.IEditControlGridContext.prototype.OnActivateActor = function() {};

/**
 * @return {void}
 */
SP.JsGrid.IEditControlGridContext.prototype.OnDeactivateActor = function() {};
/**
 * @record
 * @struct
 */
SP.JsGrid.IPropertyType = function() {};
 /** @type {string} */
SP.JsGrid.IPropertyType.prototype.ID;

/**
 * @param {number} recordKey
 * @param {string} fieldKey
 * @param {?} newValue
 * @param {boolean} bIsLocalized
 * @param {function({isValid: boolean, dataValue: ?, normalizedLocValue: string}): void} fnCallback
 * @param {?} fnError
 * @return {void}
 */
SP.JsGrid.IPropertyType.prototype.BeginValidateNormalizeConvert = function(recordKey, fieldKey, newValue, bIsLocalized, fnCallback, fnError) {};
/**
 * @extends {SP.JsGrid.IPropertyType}
 * @record
 * @struct
 */
SP.JsGrid.ILookupPropertyType = function() {};

/**
 * @param {?} fnCallback
 * @return {void}
 */
SP.JsGrid.ILookupPropertyType.prototype.GetItems = function(fnCallback) {};

/**
 * @param {?} dataValue
 * @return {string}
 */
SP.JsGrid.ILookupPropertyType.prototype.DataToLocalized = function(dataValue) {};

/**
 * @param {string} localized
 * @return {?}
 */
SP.JsGrid.ILookupPropertyType.prototype.LocalizedToData = function(localized) {};

/**
 * @param {!SP.JsGrid.IRecord} record
 * @param {?} dataValue
 * @return {string}
 */
SP.JsGrid.ILookupPropertyType.prototype.GetImageSource = function(record, dataValue) {};

/**
 * @param {?} dataValue
 * @return {string}
 */
SP.JsGrid.ILookupPropertyType.prototype.GetStyleId = function(dataValue) {};

/**
 * @return {boolean}
 */
SP.JsGrid.ILookupPropertyType.prototype.GetIsLimitedToList = function() {};

/**
 * @return {{items: !Array<?>, id: string, bLimitToList: boolean}}
 */
SP.JsGrid.ILookupPropertyType.prototype.GetSerializableLookupPropType = function() {};
/**
 * @extends {SP.JsGrid.IPropertyType}
 * @record
 * @struct
 */
SP.JsGrid.IMultiValuePropertyType = function() {};
 /** @type {boolean} */
SP.JsGrid.IMultiValuePropertyType.prototype.bMultiValue;
 /** @type {string} */
SP.JsGrid.IMultiValuePropertyType.prototype.separator;
 /** @type {string} */
SP.JsGrid.IMultiValuePropertyType.prototype.singleValuePropType;

/**
 * @return {{singleValuePropTypeID: string, separatorChar: string, bDelayInit: boolean}}
 */
SP.JsGrid.IMultiValuePropertyType.prototype.GetSerializableMultiValuePropType = function() {};

/**
 * @return {void}
 */
SP.JsGrid.IMultiValuePropertyType.prototype.InitSingleValuePropType = function() {};

/**
 * @param {string} locStr
 * @return {!Array<string>}
 */
SP.JsGrid.IMultiValuePropertyType.prototype.LocStrToLocStrArray = function(locStr) {};

/**
 * @param {!Array<string>} locStrArray
 * @return {string}
 */
SP.JsGrid.IMultiValuePropertyType.prototype.LocStrArrayToLocStr = function(locStrArray) {};
/**
 * @constructor
 * @struct
 */
SP.JsGrid.PropertyType = function() {};

/**
 * Lookup property type factory, based on SP.JsGrid.PropertyType.LookupTable class.
 * displayCtrlName should be one of the following: SP.JsGrid.DisplayControl.Type.Image, SP.JsGrid.DisplayControl.Type.ImageText or SP.JsGrid.DisplayControl.Type.Text
 * @param {string} id
 * @param {!Array<?>} items
 * @param {string} displayCtrlName
 * @param {boolean} bLimitToList
 * @return {void}
 */
SP.JsGrid.PropertyType.RegisterNewLookupPropType = function(id, items, displayCtrlName, bLimitToList) {};

/**
 * Register a custom property type.
 * @param {!SP.JsGrid.IPropertyType} propType
 * @param {string} displayCtrlName
 * @param {string} editControlName
 * @param {!Array<string>} widgetControlNames
 * @return {void}
 */
SP.JsGrid.PropertyType.RegisterNewCustomPropType = function(propType, displayCtrlName, editControlName, widgetControlNames) {};

/**
 * Register a custom property type, where display and edit controls, and also widgets, are derived from the specified parent property type.
 * @param {!SP.JsGrid.IPropertyType} propType
 * @param {string} baseTypeName
 * @return {void}
 */
SP.JsGrid.PropertyType.RegisterNewDerivedCustomPropType = function(propType, baseTypeName) {};

/**
 * @constructor
 * @struct
 */
SP.JsGrid.PropertyType.String = function() {};
 /** @type {string} */
SP.JsGrid.PropertyType.String.prototype.ID;

/**
 * @param {number} recordKey
 * @param {string} fieldKey
 * @param {?} newValue
 * @param {boolean} bIsLocalized
 * @param {function({isValid: boolean, dataValue: ?, normalizedLocValue: string}): void} fnCallback
 * @param {?} fnError
 * @return {void}
 */
SP.JsGrid.PropertyType.String.prototype.BeginValidateNormalizeConvert = function(recordKey, fieldKey, newValue, bIsLocalized, fnCallback, fnError) {};

/**
 * @return {string}
 */
SP.JsGrid.PropertyType.String.prototype.toString = function() {};

/**
 * @constructor
 * @struct
 * @param {!Array<?>} items
 * @param {string} id
 * @param {boolean} bLimitToList
 */
SP.JsGrid.PropertyType.LookupTable = function(items, id, bLimitToList) {};
 /** @type {string} */
SP.JsGrid.PropertyType.LookupTable.prototype.ID;

/**
 * @param {number} recordKey
 * @param {string} fieldKey
 * @param {?} newValue
 * @param {boolean} bIsLocalized
 * @param {function({isValid: boolean, dataValue: ?, normalizedLocValue: string}): void} fnCallback
 * @param {?} fnError
 * @return {void}
 */
SP.JsGrid.PropertyType.LookupTable.prototype.BeginValidateNormalizeConvert = function(recordKey, fieldKey, newValue, bIsLocalized, fnCallback, fnError) {};

/**
 * @param {?} fnCallback
 * @return {void}
 */
SP.JsGrid.PropertyType.LookupTable.prototype.GetItems = function(fnCallback) {};

/**
 * @param {?} dataValue
 * @return {string}
 */
SP.JsGrid.PropertyType.LookupTable.prototype.DataToLocalized = function(dataValue) {};

/**
 * @param {string} localized
 * @return {?}
 */
SP.JsGrid.PropertyType.LookupTable.prototype.LocalizedToData = function(localized) {};

/**
 * @param {!SP.JsGrid.IRecord} record
 * @param {?} dataValue
 * @return {string}
 */
SP.JsGrid.PropertyType.LookupTable.prototype.GetImageSource = function(record, dataValue) {};

/**
 * @param {?} dataValue
 * @return {string}
 */
SP.JsGrid.PropertyType.LookupTable.prototype.GetStyleId = function(dataValue) {};

/**
 * @return {boolean}
 */
SP.JsGrid.PropertyType.LookupTable.prototype.GetIsLimitedToList = function() {};

/**
 * @return {{items: !Array<?>, id: string, bLimitToList: boolean}}
 */
SP.JsGrid.PropertyType.LookupTable.prototype.GetSerializableLookupPropType = function() {};

/**
 * @constructor
 * @struct
 */
SP.JsGrid.PropertyType.CheckBoxBoolean = function() {};
 /** @type {string} */
SP.JsGrid.PropertyType.CheckBoxBoolean.prototype.ID;

/**
 * @param {number} recordKey
 * @param {string} fieldKey
 * @param {?} newValue
 * @param {boolean} bIsLocalized
 * @param {function({isValid: boolean, dataValue: ?, normalizedLocValue: string}): void} fnCallback
 * @param {?} fnError
 * @return {void}
 */
SP.JsGrid.PropertyType.CheckBoxBoolean.prototype.BeginValidateNormalizeConvert = function(recordKey, fieldKey, newValue, bIsLocalized, fnCallback, fnError) {};

/**
 * @param {?} dataValue
 * @return {string}
 */
SP.JsGrid.PropertyType.CheckBoxBoolean.prototype.DataToLocalized = function(dataValue) {};

/**
 * @param {?} dataValue
 * @return {boolean}
 */
SP.JsGrid.PropertyType.CheckBoxBoolean.prototype.GetBool = function(dataValue) {};

/**
 * @return {string}
 */
SP.JsGrid.PropertyType.CheckBoxBoolean.prototype.toString = function() {};

/**
 * @constructor
 * @struct
 */
SP.JsGrid.PropertyType.DropDownBoolean = function() {};
 /** @type {string} */
SP.JsGrid.PropertyType.DropDownBoolean.prototype.ID;

/**
 * @param {number} recordKey
 * @param {string} fieldKey
 * @param {?} newValue
 * @param {boolean} bIsLocalized
 * @param {function({isValid: boolean, dataValue: ?, normalizedLocValue: string}): void} fnCallback
 * @param {?} fnError
 * @return {void}
 */
SP.JsGrid.PropertyType.DropDownBoolean.prototype.BeginValidateNormalizeConvert = function(recordKey, fieldKey, newValue, bIsLocalized, fnCallback, fnError) {};

/**
 * @param {?} dataValue
 * @return {string}
 */
SP.JsGrid.PropertyType.DropDownBoolean.prototype.DataToLocalized = function(dataValue) {};

/**
 * @param {?} dataValue
 * @return {boolean}
 */
SP.JsGrid.PropertyType.DropDownBoolean.prototype.GetBool = function(dataValue) {};

/**
 * @return {string}
 */
SP.JsGrid.PropertyType.DropDownBoolean.prototype.toString = function() {};
/**
 * @implements {SP.JsGrid.IMultiValuePropertyType}
 * @constructor
 * @struct
 */
SP.JsGrid.PropertyType.MultiValuePropType = function() {};
 /** @type {string} */
SP.JsGrid.PropertyType.MultiValuePropType.prototype.ID;
 /** @type {boolean} */
SP.JsGrid.PropertyType.MultiValuePropType.prototype.bMultiValue;
 /** @type {string} */
SP.JsGrid.PropertyType.MultiValuePropType.prototype.separator;
 /** @type {string} */
SP.JsGrid.PropertyType.MultiValuePropType.prototype.singleValuePropType;

/**
 * @param {number} recordKey
 * @param {string} fieldKey
 * @param {?} newValue
 * @param {boolean} bIsLocalized
 * @param {function({isValid: boolean, dataValue: ?, normalizedLocValue: string}): void} fnCallback
 * @param {?} fnError
 * @return {void}
 */
SP.JsGrid.PropertyType.MultiValuePropType.prototype.BeginValidateNormalizeConvert = function(recordKey, fieldKey, newValue, bIsLocalized, fnCallback, fnError) {};

/**
 * @return {{singleValuePropTypeID: string, separatorChar: string, bDelayInit: boolean}}
 */
SP.JsGrid.PropertyType.MultiValuePropType.prototype.GetSerializableMultiValuePropType = function() {};

/**
 * @return {void}
 */
SP.JsGrid.PropertyType.MultiValuePropType.prototype.InitSingleValuePropType = function() {};

/**
 * @param {string} locStr
 * @return {!Array<string>}
 */
SP.JsGrid.PropertyType.MultiValuePropType.prototype.LocStrToLocStrArray = function(locStr) {};

/**
 * @param {!Array<string>} locStrArray
 * @return {string}
 */
SP.JsGrid.PropertyType.MultiValuePropType.prototype.LocStrArrayToLocStr = function(locStrArray) {};
/**
 * @implements {SP.JsGrid.IPropertyType}
 * @constructor
 * @struct
 */
SP.JsGrid.PropertyType.HyperLink = function() {};
 /** @type {string} */
SP.JsGrid.PropertyType.HyperLink.prototype.ID;
 /** @type {boolean} */
SP.JsGrid.PropertyType.HyperLink.prototype.bHyperlink;

/**
 * @param {number} recordKey
 * @param {string} fieldKey
 * @param {?} newValue
 * @param {boolean} bIsLocalized
 * @param {function({isValid: boolean, dataValue: ?, normalizedLocValue: string}): void} fnCallback
 * @param {?} fnError
 * @return {void}
 */
SP.JsGrid.PropertyType.HyperLink.prototype.BeginValidateNormalizeConvert = function(recordKey, fieldKey, newValue, bIsLocalized, fnCallback, fnError) {};

/**
 * @param {?} dataValue
 * @return {string}
 */
SP.JsGrid.PropertyType.HyperLink.prototype.DataToLocalized = function(dataValue) {};

/**
 * @param {?} dataValue
 * @return {string}
 */
SP.JsGrid.PropertyType.HyperLink.prototype.GetAddress = function(dataValue) {};

/**
 * Returns string like this: '"http:// site.com, Site title"'
 * @param {!SP.JsGrid.IRecord} record
 * @param {?} dataValue
 * @param {string} locValue
 * @return {string}
 */
SP.JsGrid.PropertyType.HyperLink.prototype.GetCopyValue = function(record, dataValue, locValue) {};

/**
 * @return {string}
 */
SP.JsGrid.PropertyType.HyperLink.prototype.toString = function() {};
/**
 * @constructor
 * @struct
 */
SP.JsGrid.PropertyType.Utils = function() {};

/**
 * @param {string} name
 * @param {?} singleton
 * @param {!Array<string>} requiredFunctionNames
 * @return {void}
 */
SP.JsGrid.PropertyType.Utils.RegisterDisplayControl = function(name, singleton, requiredFunctionNames) {};

/**
 * @param {string} name
 * @param {function(!SP.JsGrid.IEditControlGridContext, !HTMLElement): !SP.JsGrid.IEditControl} factory
 * @param {!Array<string>} requiredFunctionNames
 * @return {void}
 */
SP.JsGrid.PropertyType.Utils.RegisterEditControl = function(name, factory, requiredFunctionNames) {};

/**
 * @param {string} name
 * @param {function(?): !SP.JsGrid.IPropertyType} factory
 * @param {!Array<string>} requiredFunctionNames
 * @return {void}
 */
SP.JsGrid.PropertyType.Utils.RegisterWidgetControl = function(name, factory, requiredFunctionNames) {};

/**
 * @param {string} propTypeName
 * @param {string} displayControlType
 * @return {void}
 */
SP.JsGrid.PropertyType.Utils.UpdateDisplayControlForPropType = function(propTypeName, displayControlType) {};
/** @const */
SP.JsGrid.WidgetControl = {};
/**
 * @constructor
 * @struct
 */
SP.JsGrid.WidgetControl.Type = function() {};
 /** @type {string} */
SP.JsGrid.WidgetControl.Type.Demo;
 /** @type {string} */
SP.JsGrid.WidgetControl.Type.Date;
 /** @type {string} */
SP.JsGrid.WidgetControl.Type.AddressBook;
 /** @type {string} */
SP.JsGrid.WidgetControl.Type.Hyperlink;
/** @const */
SP.JsGrid.Internal = {};

/**
 * @constructor
 * @struct
 * @param {?} objBag
 * @param {function(?, !Array<?>, boolean, boolean): ?} fnGetChange
 */
SP.JsGrid.Internal.DiffTracker = function(objBag, fnGetChange) {};
 /** @type {{AnyChanges: function(): boolean, ChangeKeySliceInfo: function(): ?, ChangeQuery: function(): ?, EventSliceInfo: function(): ?, GetChanges: function(?, ?, ?, boolean, boolean, boolean, boolean, boolean): ?, GetChangesAsJson: function(?, ?): string, GetUniquePropertyChanges: function(?, ?): ?, RegisterEvent: function(!SP.JsGrid.IChangeKey, ?): void, UnregisterEvent: function(!SP.JsGrid.IChangeKey, ?): void}} */
SP.JsGrid.Internal.DiffTracker.prototype.ExternalAPI;

/**
 * @return {void}
 */
SP.JsGrid.Internal.DiffTracker.prototype.Clear = function() {};

/**
 * @param {!SP.JsGrid.IChangeKey} changeKey
 * @return {void}
 */
SP.JsGrid.Internal.DiffTracker.prototype.NotifySynchronizeToChange = function(changeKey) {};

/**
 * @param {!SP.JsGrid.IChangeKey} changeKey
 * @return {void}
 */
SP.JsGrid.Internal.DiffTracker.prototype.NotifyRollbackChange = function(changeKey) {};

/**
 * @param {!SP.JsGrid.IChangeKey} changeKey
 * @return {void}
 */
SP.JsGrid.Internal.DiffTracker.prototype.NotifyVacateChange = function(changeKey) {};

/**
 * @constructor
 * @struct
 * @param {?} data
 * @param {string} localized
 */
SP.JsGrid.Internal.PropertyUpdate = function(data, localized) {};
 /** @type {?} */
SP.JsGrid.Internal.PropertyUpdate.prototype.data;
 /** @type {string} */
SP.JsGrid.Internal.PropertyUpdate.prototype.localized;
/**
 * @record
 * @struct
 */
SP.JsGrid.IEditActorCellContext = function() {};
 /** @type {!SP.JsGrid.IPropertyType} */
SP.JsGrid.IEditActorCellContext.prototype.propType;
 /** @type {!SP.JsGrid.IValue} */
SP.JsGrid.IEditActorCellContext.prototype.originalValue;
 /** @type {!SP.JsGrid.IRecord} */
SP.JsGrid.IEditActorCellContext.prototype.record;
 /** @type {!SP.JsGrid.ColumnInfo} */
SP.JsGrid.IEditActorCellContext.prototype.column;
 /** @type {!SP.JsGrid.GridField} */
SP.JsGrid.IEditActorCellContext.prototype.field;
 /** @type {string} */
SP.JsGrid.IEditActorCellContext.prototype.fieldKey;
 /** @type {{left: number, top: number, fight: number, bottom: number}} */
SP.JsGrid.IEditActorCellContext.prototype.cellExpandSpace;

/**
 * @param {?} value
 * @return {void}
 */
SP.JsGrid.IEditActorCellContext.prototype.SetCurrentValue = function(value) {};
/**
 * @extends {SP.JsGrid.IEditActorCellContext}
 * @record
 * @struct
 */
SP.JsGrid.IEditControlCellContext = function() {};
 /** @type {number} */
SP.JsGrid.IEditControlCellContext.prototype.cellWidth;
 /** @type {number} */
SP.JsGrid.IEditControlCellContext.prototype.cellHeight;
 /** @type {?} */
SP.JsGrid.IEditControlCellContext.prototype.cellStyle;
 /** @type {?} */
SP.JsGrid.IEditControlCellContext.prototype.cellRect;

/**
 * @return {void}
 */
SP.JsGrid.IEditControlCellContext.prototype.NotifyExpandControl = function() {};

/**
 * @return {void}
 */
SP.JsGrid.IEditControlCellContext.prototype.NotifyEditComplete = function() {};

/**
 * @param {!HTMLElement} element
 * @return {void}
 */
SP.JsGrid.IEditControlCellContext.prototype.Show = function(element) {};

/**
 * @param {!HTMLElement} element
 * @return {void}
 */
SP.JsGrid.IEditControlCellContext.prototype.Hide = function(element) {};
/** @const */
SP.JsGrid.EditControl = {};
/**
 * @record
 * @struct
 */
SP.JsGrid.IEditControl = function() {};
 /** @type {SP.JsGrid.EditActorWriteType} */
SP.JsGrid.IEditControl.prototype.SupportedWriteMode;
 /** @type {SP.JsGrid.EditActorReadType} */
SP.JsGrid.IEditControl.prototype.SupportedReadMode;

/**
 * @return {!SP.JsGrid.IEditControlCellContext}
 */
SP.JsGrid.IEditControl.prototype.GetCellContext = function() {};

/**
 * @return {!SP.JsGrid.IValue}
 */
SP.JsGrid.IEditControl.prototype.GetOriginalValue = function() {};

/**
 * @param {!SP.JsGrid.IValue} value
 * @return {void}
 */
SP.JsGrid.IEditControl.prototype.SetValue = function(value) {};

/**
 * @return {void}
 */
SP.JsGrid.IEditControl.prototype.Dispose = function() {};

/**
 * @return {!HTMLElement}
 */
SP.JsGrid.IEditControl.prototype.GetInputElement = function() {};

/**
 * @param {!Sys.UI.DomEvent} eventInfo
 * @return {void}
 */
SP.JsGrid.IEditControl.prototype.Focus = function(eventInfo) {};

/**
 * @param {!SP.JsGrid.IEditControlCellContext} cellContext
 * @return {void}
 */
SP.JsGrid.IEditControl.prototype.BindToCell = function(cellContext) {};

/**
 * @param {!Sys.UI.DomEvent} eventInfo
 * @return {void}
 */
SP.JsGrid.IEditControl.prototype.OnBeginEdit = function(eventInfo) {};

/**
 * @return {void}
 */
SP.JsGrid.IEditControl.prototype.Unbind = function() {};

/**
 * @return {void}
 */
SP.JsGrid.IEditControl.prototype.OnEndEdit = function() {};

/**
 * @return {void}
 */
SP.JsGrid.IEditControl.prototype.OnCellMove = function() {};

/**
 * @param {!SP.JsGrid.IValue} newValue
 * @return {void}
 */
SP.JsGrid.IEditControl.prototype.OnValueChanged = function(newValue) {};

/**
 * @return {boolean}
 */
SP.JsGrid.IEditControl.prototype.IsCurrentlyUsingGridTextInputElement = function() {};

/**
 * @param {number} width
 * @param {number} height
 * @return {void}
 */
SP.JsGrid.IEditControl.prototype.SetSize = function(width, height) {};

/**
 * @constructor
 * @struct
 * @param {!SP.JsGrid.IGridData} jsGridData
 * @param {function(string, string, !Object<string,?>): ?=} optFnGetPropType
 */
SP.JsGrid.StaticDataSource = function(jsGridData, optFnGetPropType) {};

/**
 * @param {!SP.JsGrid.GridField} gridField
 * @param {!Array<!SP.JsGrid.IValue>} values
 * @return {void}
 */
SP.JsGrid.StaticDataSource.prototype.AddColumn = function(gridField, values) {};

/**
 * @param {string} fieldKey
 * @return {void}
 */
SP.JsGrid.StaticDataSource.prototype.RemoveColumn = function(fieldKey) {};

/**
 * @param {!SP.JsGrid.JsGridControl.Parameters=} optGridParams
 * @return {!SP.JsGrid.JsGridControl.Parameters}
 */
SP.JsGrid.StaticDataSource.prototype.InitJsGridParams = function(optGridParams) {};
/**
 * @record
 * @struct
 */
SP.JsGrid.IGridData = function() {};
 /** @type {!SP.JsGrid.IGridMetadata} */
SP.JsGrid.IGridData.prototype.MetaData;
 /** @type {!Array<!SP.JsGrid.IFieldInfo>} */
SP.JsGrid.IGridData.prototype.Fields;
 /** @type {!Array<!SP.JsGrid.IColumnInfo>} */
SP.JsGrid.IGridData.prototype.Columns;
 /** @type {!Array<?>} */
SP.JsGrid.IGridData.prototype.LocalizedTable;
 /** @type {!Array<?>} */
SP.JsGrid.IGridData.prototype.UnlocalizedTable;
 /** @type {!Array<?>} */
SP.JsGrid.IGridData.prototype.ViewInfo;
 /** @type {string} */
SP.JsGrid.IGridData.prototype.MultiValueSeparator;
 /** @type {!Array<!SP.JsGrid.ILookupTableInfo>} */
SP.JsGrid.IGridData.prototype.LookupTableInfo;
 /** @type {!Array<!SP.JsGrid.ColumnInfo>} */
SP.JsGrid.IGridData.prototype.PivotedColumns;
 /** @type {SP.JsGrid.PaneLayout} */
SP.JsGrid.IGridData.prototype.PaneLayout;
 /** @type {?} */
SP.JsGrid.IGridData.prototype.GanttInfo;
 /** @type {boolean} */
SP.JsGrid.IGridData.prototype.AutoFilterableColumns;
 /** @type {?} */
SP.JsGrid.IGridData.prototype.AutoFilterState;
 /** @type {!Array<?>} */
SP.JsGrid.IGridData.prototype.SortState;
 /** @type {?} */
SP.JsGrid.IGridData.prototype.HierarchyState;
 /** @type {number} */
SP.JsGrid.IGridData.prototype.TopRecord;
 /** @type {number} */
SP.JsGrid.IGridData.prototype.RecordCount;
 /** @type {?} */
SP.JsGrid.IGridData.prototype.AdditionalParams;
 /** @type {?} */
SP.JsGrid.IGridData.prototype.CellStyles;
 /** @type {!Array<?>} */
SP.JsGrid.IGridData.prototype.GroupingGridRowStyleIds;
 /** @type {?} */
SP.JsGrid.IGridData.prototype.UnfilteredHierarchy;
 /** @type {?} */
SP.JsGrid.IGridData.prototype.AutoFilterEntries;
 /** @type {!Array<?>} */
SP.JsGrid.IGridData.prototype.ViewDepKeys;
/**
 * @record
 * @struct
 */
SP.JsGrid.IColumnInfo = function() {};
 /** @type {string} */
SP.JsGrid.IColumnInfo.prototype.name;
 /** @type {string} */
SP.JsGrid.IColumnInfo.prototype.imgSrc;
 /** @type {string} */
SP.JsGrid.IColumnInfo.prototype.columnKey;
 /** @type {string} */
SP.JsGrid.IColumnInfo.prototype.fieldKey;
 /** @type {!Array<string>} */
SP.JsGrid.IColumnInfo.prototype.fieldKeys;
 /** @type {number} */
SP.JsGrid.IColumnInfo.prototype.width;
 /** @type {boolean} */
SP.JsGrid.IColumnInfo.prototype.isVisible;
 /** @type {boolean} */
SP.JsGrid.IColumnInfo.prototype.isHidable;
 /** @type {boolean} */
SP.JsGrid.IColumnInfo.prototype.isResizable;
 /** @type {boolean} */
SP.JsGrid.IColumnInfo.prototype.isSortable;
 /** @type {boolean} */
SP.JsGrid.IColumnInfo.prototype.isAutoFilterable;
 /** @type {boolean} */
SP.JsGrid.IColumnInfo.prototype.isFooter;
/**
 * @record
 * @struct
 */
SP.JsGrid.IGridMetadata = function() {};
 /** @type {string} */
SP.JsGrid.IGridMetadata.prototype.KeyColumnName;
 /** @type {boolean} */
SP.JsGrid.IGridMetadata.prototype.IsGanttEnabled;
 /** @type {boolean} */
SP.JsGrid.IGridMetadata.prototype.IsHierarchyEnabled;
 /** @type {boolean} */
SP.JsGrid.IGridMetadata.prototype.IsSorted;
 /** @type {number} */
SP.JsGrid.IGridMetadata.prototype.GroupingLevel;
 /** @type {string} */
SP.JsGrid.IGridMetadata.prototype.GroupingPrefix;
 /** @type {string} */
SP.JsGrid.IGridMetadata.prototype.RecordKeyHash;
 /** @type {?} */
SP.JsGrid.IGridMetadata.prototype.RecordKeyOrderChanged;
 /** @type {!Object<number,string>} */
SP.JsGrid.IGridMetadata.prototype.GridOperationalConstantsFieldKeyMap;
/**
 * @record
 * @struct
 */
SP.JsGrid.IFieldInfo = function() {};
 /** @type {string} */
SP.JsGrid.IFieldInfo.prototype.fieldKey;
 /** @type {string} */
SP.JsGrid.IFieldInfo.prototype.propertyTypeId;
 /** @type {SP.JsGrid.EditMode} */
SP.JsGrid.IFieldInfo.prototype.editMode;
 /** @type {boolean} */
SP.JsGrid.IFieldInfo.prototype.hasDataValue;
 /** @type {boolean} */
SP.JsGrid.IFieldInfo.prototype.hasLocalizedValue;
 /** @type {boolean} */
SP.JsGrid.IFieldInfo.prototype.multiValue;
 /** @type {SP.JsGrid.TextDirection} */
SP.JsGrid.IFieldInfo.prototype.textDirection;
 /** @type {boolean} */
SP.JsGrid.IFieldInfo.prototype.dateOnly;
 /** @type {?} */
SP.JsGrid.IFieldInfo.prototype.defaultCellStyleId;
/**
 * @record
 * @struct
 */
SP.JsGrid.ILookupTableInfo = function() {};
 /** @type {string} */
SP.JsGrid.ILookupTableInfo.prototype.id;
 /** @type {boolean} */
SP.JsGrid.ILookupTableInfo.prototype.showImage;
 /** @type {boolean} */
SP.JsGrid.ILookupTableInfo.prototype.showText;
 /** @type {boolean} */
SP.JsGrid.ILookupTableInfo.prototype.limitToList;
 /** @type {!Array<!SP.JsGrid.ILookupInfo>} */
SP.JsGrid.ILookupTableInfo.prototype.lookup;
/**
 * @record
 * @struct
 */
SP.JsGrid.ILookupInfo = function() {};
 /** @type {string} */
SP.JsGrid.ILookupInfo.prototype.localString;
 /** @type {number} */
SP.JsGrid.ILookupInfo.prototype.value;

/**
 * @constructor
 * @struct
 * @param {!Object<string,number>|!Object<number,number>=} items
 */
SP.Utilities.Set = function(items) {};

/**
 * Returns true if the set is empty
 * @return {boolean}
 */
SP.Utilities.Set.prototype.IsEmpty = function() {};

/**
 * Returns first item in the set
 * @return {?}
 */
SP.Utilities.Set.prototype.First = function() {};

/**
 * Returns the underlying collection of items as dictionary.
 * Items are the keys, and values are always 1.
 * So the return value may be either { [item: string]: number } or { [item: number]: number }
 * @return {?}
 */
SP.Utilities.Set.prototype.GetCollection = function() {};

/**
 * Returns all items from the set as an array
 * @return {!Array<?>}
 */
SP.Utilities.Set.prototype.ToArray = function() {};

/**
 * Adds all items from array to the set, and returns the set
 * @param {!Array<?>} array
 * @return {!SP.Utilities.Set}
 */
SP.Utilities.Set.prototype.AddArray = function(array) {};

/**
 * Adds an item to the set
 * @param {?} item
 * @return {?}
 */
SP.Utilities.Set.prototype.Add = function(item) {};

/**
 * Removes the specified item from the set and returns the removed item
 * @param {?} item
 * @return {?}
 */
SP.Utilities.Set.prototype.Remove = function(item) {};

/**
 * Clears all the items from set
 * @return {!SP.Utilities.Set}
 */
SP.Utilities.Set.prototype.Clear = function() {};

/**
 * Returns true if item exists in this set
 * @param {?} item
 * @return {boolean}
 */
SP.Utilities.Set.prototype.Contains = function(item) {};

/**
 * Returns a copy of this set
 * @return {!SP.Utilities.Set}
 */
SP.Utilities.Set.prototype.Clone = function() {};

/**
 * Returns a set that contains all the items that exist only in one of the sets (this and other), but not in both
 * @param {!SP.Utilities.Set} otherSet
 * @return {!SP.Utilities.Set}
 */
SP.Utilities.Set.prototype.SymmetricDifference = function(otherSet) {};

/**
 * Returns a set that contains all the items that are in this set but not in the otherSet
 * @param {!SP.Utilities.Set} otherSet
 * @return {!SP.Utilities.Set}
 */
SP.Utilities.Set.prototype.Difference = function(otherSet) {};

/**
 * Returns a new set, that contains items from this set and otherSet
 * @param {!SP.Utilities.Set} otherSet
 * @return {!SP.Utilities.Set}
 */
SP.Utilities.Set.prototype.Union = function(otherSet) {};

/**
 * Adds all items from otherSet to this set, and returns this set
 * @param {!SP.Utilities.Set} otherSet
 * @return {!SP.Utilities.Set}
 */
SP.Utilities.Set.prototype.UnionWith = function(otherSet) {};

/**
 * Returns a new set, that contains only items that exist both in this set and the otherSet
 * @param {!SP.Utilities.Set} otherSet
 * @return {!SP.Utilities.Set}
 */
SP.Utilities.Set.prototype.Intersection = function(otherSet) {};
/**
 * @constructor
 * @struct
 */
SP.GanttControl = function() {};
 /** @type {!Array<!SP.GanttControl>} */
SP.GanttControl.Instances;
 /** @type {!Array<function(!SP.GanttControl): void>} */
SP.GanttControl.FnGanttCreationCallback;

/**
 * @param {function(!SP.GanttControl): void} callack
 * @return {void}
 */
SP.GanttControl.WaitForGanttCreation = function(callack) {};

/**
 * @return {!Array<!SP.JsGrid.ColumnInfo>}
 */
SP.GanttControl.prototype.get_Columns = function() {};
/** @const */
var Srch = {};

/** @const */
Srch.EventType = {};
/** @const {number} */
Srch.EventType.none;
/** @const {number} */
Srch.EventType.queryReady;
/** @const {number} */
Srch.EventType.queryIssuing;
/** @const {number} */
Srch.EventType.batchQueryIssuing;
/** @const {number} */
Srch.EventType.resultReady;
/** @const {number} */
Srch.EventType.batchResultReady;
/** @const {number} */
Srch.EventType.queryStateChanged;
/** @const {number} */
Srch.EventType.resultRendered;
/** @const {number} */
Srch.EventType.preLoad;
/** @const {number} */
Srch.EventType.load;
/** @const {number} */
Srch.EventType.postLoad;

/** @const */
Srch.MessageLevel = {};
/** @const {number} */
Srch.MessageLevel.information;
/** @const {number} */
Srch.MessageLevel.warning;
/** @const {number} */
Srch.MessageLevel.error;

/** @const */
Srch.UserActionType = {};
/** @const {number} */
Srch.UserActionType.search;
/** @const {number} */
Srch.UserActionType.pageNext;
/** @const {number} */
Srch.UserActionType.pagePrev;
/** @const {number} */
Srch.UserActionType.refine;
/** @const {number} */
Srch.UserActionType.sort;
/** @const {number} */
Srch.UserActionType.filterLanguage;

/** @const */
Srch.DateTimeKind = {};
/** @const {number} */
Srch.DateTimeKind.unspecified;
/** @const {number} */
Srch.DateTimeKind.utc;
/** @const {number} */
Srch.DateTimeKind.local;

/**
 * @constructor
 * @struct
 * @param {!Element} elem
 */
Srch.ClientControl = function(elem) {};
 /** @type {?} */
Srch.ClientControl.prototype.alternateRenderer;
 /** @type {?} */
Srch.ClientControl.prototype.alternateRenderContext;
 /** @type {boolean} */
Srch.ClientControl.prototype.loaded;
 /** @type {!Array<?>} */
Srch.ClientControl.prototype.serverTemplateScriptsToLoad;

/**
 * toggles visibility of children controls of the messageContainer
 * @param {!Element} messageContainer
 * @return {void}
 */
Srch.ClientControl.toggleMessageDetails = function(messageContainer) {};

/**
 * returns next unique identifier for nested controls
 * @return {string}
 */
Srch.ClientControl.prototype.get_nextUniqueId = function() {};

/**
 * Gets the id of View display template that is used to render this control.
 * Example: '~sitecollection/_catalogs/masterpage/Display Templates/Search/Control_SearchResults.js'
 * @return {string}
 */
Srch.ClientControl.prototype.get_renderTemplateId = function() {};

/**
 * @param {string} value
 * @return {string}
 */
Srch.ClientControl.prototype.set_renderTemplateId = function(value) {};

/**
 * Returns true if control will load scripts defined by the serverTemplateScriptsToLoad field after control load. True by default.
 * @return {boolean}
 */
Srch.ClientControl.prototype.get_delayLoadTemplateScripts = function() {};

/**
 * If set to true, control will load scripts defined by the serverTemplateScriptsToLoad field after control load. True by default.
 * @param {boolean} value
 * @return {boolean}
 */
Srch.ClientControl.prototype.set_delayLoadTemplateScripts = function(value) {};

/**
 * @return {?}
 */
Srch.ClientControl.prototype.get_states = function() {};

/**
 * @param {?} value
 * @return {?}
 */
Srch.ClientControl.prototype.set_states = function(value) {};

/**
 * @return {!Array<?>}
 */
Srch.ClientControl.prototype.get_messages = function() {};

/**
 * @param {!Array<?>} value
 * @return {!Array<?>}
 */
Srch.ClientControl.prototype.set_messages = function(value) {};

/**
 * @return {boolean}
 */
Srch.ClientControl.prototype.get_showDataErrors = function() {};

/**
 * False by default.
 * @param {boolean} value
 * @return {boolean}
 */
Srch.ClientControl.prototype.set_showDataErrors = function(value) {};

/**
 * @return {string}
 */
Srch.ClientControl.prototype.get_alternateErrorMessage = function() {};

/**
 * @param {string} value
 * @return {string}
 */
Srch.ClientControl.prototype.set_alternateErrorMessage = function(value) {};

/**
 * returns true if control has already been loaded at least once
 * @return {boolean}
 */
Srch.ClientControl.prototype.get_isInitialLoad = function() {};

/**
 * @return {void}
 */
Srch.ClientControl.prototype.initialize = function() {};

/**
 * @return {void}
 */
Srch.ClientControl.prototype.dispose = function() {};

/**
 * @param {?} listData
 * @param {?} dataProvider
 * @return {void}
 */
Srch.ClientControl.prototype.renderControl = function(listData, dataProvider) {};

/**
 * @param {?} dataProviderToProcess
 * @return {void}
 */
Srch.ClientControl.prototype.processDataProviderErrors = function(dataProviderToProcess) {};

/**
 * @param {?} sender
 * @param {?} e
 * @return {void}
 */
Srch.ClientControl.prototype.scriptApplication_PreLoad = function(sender, e) {};

/**
 * @param {?} sender
 * @param {?} e
 * @return {void}
 */
Srch.ClientControl.prototype.scriptApplication_Load = function(sender, e) {};

/**
 * @param {?} sender
 * @param {?} e
 * @return {void}
 */
Srch.ClientControl.prototype.scriptApplication_PostLoad = function(sender, e) {};

/**
 * @return {void}
 */
Srch.ClientControl.prototype.loadServerTemplateScripts = function() {};

/**
 * @return {void}
 */
Srch.ClientControl.prototype.serverTemplateScriptsCallback = function() {};

/**
 * @param {?} scriptReferences
 * @param {?} success
 * @param {?} failure
 * @param {?} timeout
 * @param {?} loadStandAloneCustomScripts
 * @return {boolean}
 */
Srch.ClientControl.prototype.loadRenderTemplateScripts = function(scriptReferences, success, failure, timeout, loadStandAloneCustomScripts) {};

/**
 * @param {?} callback
 * @param {?} container
 * @param {?} ctx
 * @return {?}
 */
Srch.ClientControl.prototype.invokeAlternateRender = function(callback, container, ctx) {};

/**
 * @param {?} node
 * @param {?} ctx
 * @return {?}
 */
Srch.ClientControl.prototype.invokeClientRenderer = function(node, ctx) {};

/**
 * @param {?} dataErrorsList
 * @return {?}
 */
Srch.ClientControl.prototype.processDataErrorMessages = function(dataErrorsList) {};

/**
 * @param {?} ctx
 * @return {?}
 */
Srch.ClientControl.prototype.processRenderingErrorMessages = function(ctx) {};

/**
 * @return {?}
 */
Srch.ClientControl.prototype.hasMessages = function() {};

/**
 * @return {?}
 */
Srch.ClientControl.prototype.updateDisplayControlWithNewMessages = function() {};

/**
 * show/hide the DOM element associated with control
 * @param {boolean} showElement
 * @return {?}
 */
Srch.ClientControl.prototype.setControlElementVisibility = function(showElement) {};

/**
 * @param {!Event} e
 * @return {?}
 */
Srch.ClientControl.prototype.clickHandler = function(e) {};

/**
 * @constructor
 * @struct
 * @param {!Element} elem
 */
Srch.DataProvider = function(elem) {};

/**
 * @return {?}
 */
Srch.DataProvider.prototype.get_currentQueryState = function() {};

/**
 * @return {string}
 */
Srch.DataProvider.prototype.get_sourceID = function() {};

/**
 * @param {string} value
 * @return {string}
 */
Srch.DataProvider.prototype.set_sourceID = function(value) {};

/**
 * @return {string}
 */
Srch.DataProvider.prototype.get_sourceName = function() {};

/**
 * @param {string} value
 * @return {string}
 */
Srch.DataProvider.prototype.set_sourceName = function(value) {};

/**
 * @return {string}
 */
Srch.DataProvider.prototype.get_sourceLevel = function() {};

/**
 * @param {string} value
 * @return {string}
 */
Srch.DataProvider.prototype.set_sourceLevel = function(value) {};

/**
 * @return {string}
 */
Srch.DataProvider.prototype.get_collapseSpecification = function() {};

/**
 * @param {string} value
 * @return {string}
 */
Srch.DataProvider.prototype.set_collapseSpecification = function(value) {};

/**
 * @return {string}
 */
Srch.DataProvider.prototype.get_queryGroupName = function() {};

/**
 * @param {string} value
 * @return {string}
 */
Srch.DataProvider.prototype.set_queryGroupName = function(value) {};

/**
 * @return {string}
 */
Srch.DataProvider.prototype.get_queryPropertiesTemplateUrl = function() {};

/**
 * @param {string} value
 * @return {string}
 */
Srch.DataProvider.prototype.set_queryPropertiesTemplateUrl = function(value) {};

/**
 * @return {?}
 */
Srch.DataProvider.prototype.get_queryTemplate = function() {};

/**
 * @param {?} value
 * @return {?}
 */
Srch.DataProvider.prototype.set_queryTemplate = function(value) {};

/**
 * @return {?}
 */
Srch.DataProvider.prototype.get_fallbackSort = function() {};

/**
 * @param {?} value
 * @return {?}
 */
Srch.DataProvider.prototype.set_fallbackSort = function(value) {};

/**
 * @return {?}
 */
Srch.DataProvider.prototype.get_rankRules = function() {};

/**
 * @param {?} value
 * @return {?}
 */
Srch.DataProvider.prototype.set_rankRules = function(value) {};

/**
 * @return {?}
 */
Srch.DataProvider.prototype.get_initialQueryState = function() {};

/**
 * @param {?} value
 * @return {?}
 */
Srch.DataProvider.prototype.set_initialQueryState = function(value) {};

/**
 * @return {string}
 */
Srch.DataProvider.prototype.get_initialResult = function() {};

/**
 * @param {string} value
 * @return {string}
 */
Srch.DataProvider.prototype.set_initialResult = function(value) {};

/**
 * @return {?}
 */
Srch.DataProvider.prototype.get_initialResultRef = function() {};

/**
 * @param {?} value
 * @return {?}
 */
Srch.DataProvider.prototype.set_initialResultRef = function(value) {};

/**
 * @return {?}
 */
Srch.DataProvider.prototype.get_initialResultObject = function() {};

/**
 * @return {boolean}
 */
Srch.DataProvider.prototype.get_batched = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.DataProvider.prototype.set_batched = function(value) {};

/**
 * @return {boolean}
 */
Srch.DataProvider.prototype.get_active = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.DataProvider.prototype.set_active = function(value) {};

/**
 * @return {boolean}
 */
Srch.DataProvider.prototype.get_bypassResultTypes = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.DataProvider.prototype.set_bypassResultTypes = function(value) {};

/**
 * @return {boolean}
 */
Srch.DataProvider.prototype.get_processBestBets = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.DataProvider.prototype.set_processBestBets = function(value) {};

/**
 * @return {boolean}
 */
Srch.DataProvider.prototype.get_processPersonalFavorites = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.DataProvider.prototype.set_processPersonalFavorites = function(value) {};

/**
 * Number of results displayed per page. 10 by default
 * @return {number}
 */
Srch.DataProvider.prototype.get_resultsPerPage = function() {};

/**
 * Number of results displayed per page. 10 by default
 * @param {number} value
 * @return {number}
 */
Srch.DataProvider.prototype.set_resultsPerPage = function(value) {};

/**
 * @return {?}
 */
Srch.DataProvider.prototype.get_selectedRefiners = function() {};

/**
 * @param {?} value
 * @return {?}
 */
Srch.DataProvider.prototype.set_selectedRefiners = function(value) {};

/**
 * @return {?}
 */
Srch.DataProvider.prototype.get_selectedProperties = function() {};

/**
 * @param {?} value
 * @return {?}
 */
Srch.DataProvider.prototype.set_selectedProperties = function(value) {};

/**
 * @return {?}
 */
Srch.DataProvider.prototype.get_hitHighlightedProperties = function() {};

/**
 * @param {?} value
 * @return {?}
 */
Srch.DataProvider.prototype.set_hitHighlightedProperties = function(value) {};

/**
 * @return {?}
 */
Srch.DataProvider.prototype.get_fallbackLanguage = function() {};

/**
 * @param {?} value
 * @return {?}
 */
Srch.DataProvider.prototype.set_fallbackLanguage = function(value) {};

/**
 * @return {string}
 */
Srch.DataProvider.prototype.get_fallbackRankingModelID = function() {};

/**
 * @param {string} value
 * @return {string}
 */
Srch.DataProvider.prototype.set_fallbackRankingModelID = function(value) {};

/**
 * @return {?}
 */
Srch.DataProvider.prototype.get_fallbackRefinementFilters = function() {};

/**
 * @param {?} value
 * @return {?}
 */
Srch.DataProvider.prototype.set_fallbackRefinementFilters = function(value) {};

/**
 * @return {?}
 */
Srch.DataProvider.prototype.get_availableSorts = function() {};

/**
 * @param {?} value
 * @return {?}
 */
Srch.DataProvider.prototype.set_availableSorts = function(value) {};

/**
 * @return {string}
 */
Srch.DataProvider.prototype.get_contextualScopeUrl = function() {};

/**
 * @param {string} value
 * @return {string}
 */
Srch.DataProvider.prototype.set_contextualScopeUrl = function(value) {};

/**
 * @return {number}
 */
Srch.DataProvider.prototype.get_totalRows = function() {};

/**
 * @param {number} value
 * @return {number}
 */
Srch.DataProvider.prototype.set_totalRows = function(value) {};

/**
 * @return {number}
 */
Srch.DataProvider.prototype.get_rowCount = function() {};

/**
 * @param {number} value
 * @return {number}
 */
Srch.DataProvider.prototype.set_rowCount = function(value) {};

/**
 * @return {?}
 */
Srch.DataProvider.prototype.get_refinementInfo = function() {};

/**
 * @return {?}
 */
Srch.DataProvider.prototype.get_entityInfo = function() {};

/**
 * @return {boolean}
 */
Srch.DataProvider.prototype.get_enableStemming = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.DataProvider.prototype.set_enableStemming = function(value) {};

/**
 * @return {boolean}
 */
Srch.DataProvider.prototype.get_enablePhonetic = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.DataProvider.prototype.set_enablePhonetic = function(value) {};

/**
 * @return {boolean}
 */
Srch.DataProvider.prototype.get_enableNicknames = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.DataProvider.prototype.set_enableNicknames = function(value) {};

/**
 * @return {boolean}
 */
Srch.DataProvider.prototype.get_trimDuplicates = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.DataProvider.prototype.set_trimDuplicates = function(value) {};

/**
 * @return {boolean}
 */
Srch.DataProvider.prototype.get_enableInterleaving = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.DataProvider.prototype.set_enableInterleaving = function(value) {};

/**
 * @return {boolean}
 */
Srch.DataProvider.prototype.get_enableQueryRules = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.DataProvider.prototype.set_enableQueryRules = function(value) {};

/**
 * @return {boolean}
 */
Srch.DataProvider.prototype.get_enableOrderingHitHighlightedProperty = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.DataProvider.prototype.set_enableOrderingHitHighlightedProperty = function(value) {};

/**
 * @return {number}
 */
Srch.DataProvider.prototype.get_hitHighlightedMultivaluePropertyLimit = function() {};

/**
 * @param {number} value
 * @return {number}
 */
Srch.DataProvider.prototype.set_hitHighlightedMultivaluePropertyLimit = function(value) {};

/**
 * @return {?}
 */
Srch.DataProvider.prototype.get_properties = function() {};

/**
 * @param {?} value
 * @return {?}
 */
Srch.DataProvider.prototype.set_properties = function(value) {};

/**
 * @return {string}
 */
Srch.DataProvider.prototype.get_clientType = function() {};

/**
 * @param {string} value
 * @return {string}
 */
Srch.DataProvider.prototype.set_clientType = function(value) {};

/**
 * @return {number}
 */
Srch.DataProvider.prototype.get_maxPagesAfterCurrent = function() {};

/**
 * @param {number} value
 * @return {number}
 */
Srch.DataProvider.prototype.set_maxPagesAfterCurrent = function(value) {};

/**
 * @return {?}
 */
Srch.DataProvider.prototype.get_userAction = function() {};

/**
 * @param {?} value
 * @return {?}
 */
Srch.DataProvider.prototype.set_userAction = function(value) {};

/**
 * @return {number}
 */
Srch.DataProvider.prototype.get_queryCount = function() {};

/**
 * @param {number} value
 * @return {number}
 */
Srch.DataProvider.prototype.set_queryCount = function(value) {};

/**
 * @return {?}
 */
Srch.DataProvider.prototype.get_resultsUrl = function() {};

/**
 * @param {?} value
 * @return {?}
 */
Srch.DataProvider.prototype.set_resultsUrl = function(value) {};

/**
 * @return {?}
 */
Srch.DataProvider.prototype.get_upScopeUrl = function() {};

/**
 * @return {?}
 */
Srch.DataProvider.prototype.get_effectiveQueryLanguage = function() {};

/**
 * @return {?}
 */
Srch.DataProvider.prototype.get_parentImpressionID = function() {};

/**
 * @param {?} value
 * @return {?}
 */
Srch.DataProvider.prototype.set_parentImpressionID = function(value) {};

/**
 * @return {boolean}
 */
Srch.DataProvider.prototype.get_updateAjaxNavigate = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.DataProvider.prototype.set_updateAjaxNavigate = function(value) {};

/**
 * @return {number}
 */
Srch.DataProvider.prototype.get_summaryLength = function() {};

/**
 * @param {number} value
 * @return {number}
 */
Srch.DataProvider.prototype.set_summaryLength = function(value) {};

/**
 * @return {number}
 */
Srch.DataProvider.prototype.get_desiredSnippetLength = function() {};

/**
 * @param {number} value
 * @return {number}
 */
Srch.DataProvider.prototype.set_desiredSnippetLength = function(value) {};

/**
 * @return {boolean}
 */
Srch.DataProvider.prototype.get_personalizedQuery = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.DataProvider.prototype.set_personalizedQuery = function(value) {};

/**
 * @return {void}
 */
Srch.DataProvider.prototype.initialize = function() {};

/**
 * @return {void}
 */
Srch.DataProvider.prototype.dispose = function() {};

/**
 * @param {?} sender
 * @param {?} e
 * @return {void}
 */
Srch.DataProvider.prototype.scriptApplication_PreLoad = function(sender, e) {};

/**
 * @param {?} sender
 * @param {?} e
 * @return {void}
 */
Srch.DataProvider.prototype.scriptApplication_Load = function(sender, e) {};

/**
 * @param {?} sender
 * @param {?} e
 * @return {void}
 */
Srch.DataProvider.prototype.scriptApplication_PostLoad = function(sender, e) {};

/**
 * @return {void}
 */
Srch.DataProvider.prototype.serverTemplateScriptsCallback = function() {};

/**
 * @param {?} value
 * @return {void}
 */
Srch.DataProvider.prototype.add_queryIssuing = function(value) {};

/**
 * @param {?} value
 * @return {void}
 */
Srch.DataProvider.prototype.remove_queryIssuing = function(value) {};

/**
 * @param {?} arg
 * @return {void}
 */
Srch.DataProvider.prototype.raiseQueryIssuingEvent = function(arg) {};

/**
 * @param {?} value
 * @return {void}
 */
Srch.DataProvider.prototype.add_resultReady = function(value) {};

/**
 * @param {?} value
 * @return {void}
 */
Srch.DataProvider.prototype.remove_resultReady = function(value) {};

/**
 * @param {?} arg
 * @return {void}
 */
Srch.DataProvider.prototype.raiseResultReadyEvent = function(arg) {};

/**
 * @param {?} value
 * @return {void}
 */
Srch.DataProvider.prototype.add_queryStateChanged = function(value) {};

/**
 * @param {?} arg
 * @return {void}
 */
Srch.DataProvider.prototype.raiseQueryStateChangedEvent = function(arg) {};

/**
 * @param {?} sender
 * @param {?} e
 * @return {void}
 */
Srch.DataProvider.prototype.displayControl_QueryReady = function(sender, e) {};

/**
 * @param {?} sender
 * @param {?} e
 * @return {void}
 */
Srch.DataProvider.prototype.searchBox_QueryReady = function(sender, e) {};

/**
 * @param {?} sender
 * @param {?} e
 * @return {void}
 */
Srch.DataProvider.prototype.searchBox_BatchQueryIssuing = function(sender, e) {};

/**
 * @param {?} sender
 * @param {?} e
 * @return {void}
 */
Srch.DataProvider.prototype.searchBox_BatchResultReady = function(sender, e) {};

/**
 * @return {void}
 */
Srch.DataProvider.prototype.processInitial = function() {};

/**
 * @return {void}
 */
Srch.DataProvider.prototype.issueQuery = function() {};

/**
 * @return {void}
 */
Srch.DataProvider.prototype.displayControlMessages = function() {};

/**
 * @return {void}
 */
Srch.DataProvider.prototype.raiseEmptyResultReadyEvent = function() {};

/**
 * @return {string}
 */
Srch.DataProvider.prototype.getSortRankName = function() {};

/**
 * @return {string}
 */
Srch.DataProvider.prototype.getSortName = function() {};
/**
 * @extends {Srch.ClientControl}
 * @constructor
 * @struct
 */
Srch.DisplayControl = function() {};

/**
 * @return {string}
 */
Srch.DisplayControl.prototype.get_queryGroupName = function() {};

/**
 * @param {string} value
 * @return {string}
 */
Srch.DisplayControl.prototype.set_queryGroupName = function(value) {};

/**
 * @return {!Srch.DataProvider}
 */
Srch.DisplayControl.prototype.get_dataProvider = function() {};

/**
 * @return {boolean}
 */
Srch.DisplayControl.prototype.get_renderedResult = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.DisplayControl.prototype.set_renderedResult = function(value) {};

/**
 * @return {boolean}
 */
Srch.DisplayControl.prototype.get_shouldShowNoResultMessage = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.DisplayControl.prototype.set_shouldShowNoResultMessage = function(value) {};

/**
 * @return {?}
 */
Srch.DisplayControl.prototype.get_currentResultTableCollection = function() {};

/**
 * @param {?} value
 * @return {?}
 */
Srch.DisplayControl.prototype.set_currentResultTableCollection = function(value) {};

/**
 * @return {string}
 */
Srch.DisplayControl.prototype.get_emptyMessage = function() {};

/**
 * @param {string} value
 * @return {string}
 */
Srch.DisplayControl.prototype.set_emptyMessage = function(value) {};

/**
 * @param {?} sender
 * @param {?} e
 * @return {void}
 */
Srch.DisplayControl.prototype.scriptApplication_PreLoad = function(sender, e) {};

/**
 * @param {?} sender
 * @param {?} e
 * @return {void}
 */
Srch.DisplayControl.prototype.scriptApplication_PostLoad = function(sender, e) {};

/**
 * @return {void}
 */
Srch.DisplayControl.prototype.serverTemplateScriptsCallback = function() {};

/**
 * @param {?} value
 * @return {void}
 */
Srch.DisplayControl.prototype.add_queryReady = function(value) {};

/**
 * @param {?} value
 * @return {void}
 */
Srch.DisplayControl.prototype.remove_queryReady = function(value) {};

/**
 * @param {?} arg
 * @return {void}
 */
Srch.DisplayControl.prototype.raiseQueryReadyEvent = function(arg) {};

/**
 * @param {?} value
 * @return {void}
 */
Srch.DisplayControl.prototype.add_resultRendered = function(value) {};

/**
 * @param {?} value
 * @return {void}
 */
Srch.DisplayControl.prototype.remove_resultRendered = function(value) {};

/**
 * @param {?} arg
 * @return {void}
 */
Srch.DisplayControl.prototype.raiseResultRenderedEvent = function(arg) {};

/**
 * @param {?} value
 * @return {void}
 */
Srch.DisplayControl.prototype.add_oneTimeResultRendered = function(value) {};

/**
 * @param {?} value
 * @return {void}
 */
Srch.DisplayControl.prototype.remove_oneTimeResultRendered = function(value) {};

/**
 * @param {?} arg
 * @return {void}
 */
Srch.DisplayControl.prototype.raiseOneTimeResultRenderedEvent = function(arg) {};

/**
 * @param {?} queryState
 * @return {void}
 */
Srch.DisplayControl.prototype.refresh = function(queryState) {};

/**
 * @param {?} sender
 * @param {?} e
 * @return {void}
 */
Srch.DisplayControl.prototype.dataProvider_QueryIssuing = function(sender, e) {};

/**
 * @param {?} sender
 * @param {?} e
 * @return {void}
 */
Srch.DisplayControl.prototype.dataProvider_ResultReady = function(sender, e) {};

/**
 * @param {?} queryState
 * @return {void}
 */
Srch.DisplayControl.prototype.processQueryIssuing = function(queryState) {};

/**
 * @param {?} resultTableCollection
 * @return {void}
 */
Srch.DisplayControl.prototype.processResultReady = function(resultTableCollection) {};

/**
 * @return {void}
 */
Srch.DisplayControl.prototype.render = function() {};

/**
 * @constructor
 * @struct
 * @param {!Element} elem
 */
Srch.Refinement = function(elem) {};

/**
 * @param {string} name
 * @return {!Element}
 */
Srch.Refinement.createRefinementTextbox = function(name) {};

/**
 * @param {string} name
 * @param {!Srch.Refinement} control
 * @param {boolean} useContains
 * @param {boolean} useKQL
 * @return {void}
 */
Srch.Refinement.submitMultiRefinement = function(name, control, useContains, useKQL) {};

/**
 * @param {string} inputText
 * @return {string}
 */
Srch.Refinement.ensureUserSpecifiedRefinerValueHasWhiteSpaceQuotes = function(inputText) {};

/**
 * @param {string} propertyName
 * @return {string}
 */
Srch.Refinement.getRefinementLocalizedTitle = function(propertyName) {};

/**
 * @param {!Srch.Refinement} currentRefinemntControl
 * @return {string}
 */
Srch.Refinement.getRefinementTitle = function(currentRefinemntControl) {};

/**
 * Gets expanded state of the specified filter from cookie
 * @param {string} filterName
 * @return {string}
 */
Srch.Refinement.getExpanded = function(filterName) {};

/**
 * Save expanded state of the specified filter to cookie
 * @param {string} filterName
 * @param {string} value
 * @return {void}
 */
Srch.Refinement.setExpanded = function(filterName, value) {};

/**
 * @param {string} refinerName
 * @param {!Srch.Refinement} clientControl
 * @param {boolean} useContains
 * @param {boolean} useKQL
 * @return {void}
 */
Srch.Refinement.multiRefinerSpecifyOtherFilterValue = function(refinerName, clientControl, useContains, useKQL) {};

/**
 * @return {!Array<!Srch.RefinementControl>}
 */
Srch.Refinement.prototype.get_selectedRefinementControls = function() {};

/**
 * @param {!Array<!Srch.RefinementControl>} value
 * @return {!Array<!Srch.RefinementControl>}
 */
Srch.Refinement.prototype.set_selectedRefinementControls = function(value) {};

/**
 * @return {boolean}
 */
Srch.Refinement.prototype.get_useManagedNavigationRefiners = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.Refinement.prototype.set_useManagedNavigationRefiners = function(value) {};

/**
 * @return {string}
 */
Srch.Refinement.prototype.get_emptyRefinementMessageId = function() {};

/**
 * @param {string} value
 * @return {string}
 */
Srch.Refinement.prototype.set_emptyRefinementMessageId = function(value) {};

/**
 * @param {?} sender
 * @param {?} e
 * @return {void}
 */
Srch.Refinement.prototype.scriptApplication_PreLoad = function(sender, e) {};

/**
 * @return {void}
 */
Srch.Refinement.prototype.render = function() {};

/**
 * @param {string} filterName
 * @param {?} filterToken
 * @return {void}
 */
Srch.Refinement.prototype.addRefinementFilter = function(filterName, filterToken) {};

/**
 * @param {string} refinersJSON
 * @return {void}
 */
Srch.Refinement.prototype.addRefinementFiltersJSON = function(refinersJSON) {};

/**
 * @param {string} refinersJSON
 * @return {void}
 */
Srch.Refinement.prototype.addRefinementFiltersJSONWithOr = function(refinersJSON) {};

/**
 * @param {!Array<?>} refiners
 * @return {void}
 */
Srch.Refinement.prototype.addRefinementFilters = function(refiners) {};

/**
 * @param {!Array<?>} refiners
 * @param {string} op
 * @return {void}
 */
Srch.Refinement.prototype.addRefinementFiltersWithOp = function(refiners, op) {};

/**
 * @param {string} filterName
 * @param {string} filterToken
 * @return {void}
 */
Srch.Refinement.prototype.removeRefinementFilter = function(filterName, filterToken) {};

/**
 * @param {string} refinersJSON
 * @return {void}
 */
Srch.Refinement.prototype.removeRefinementFiltersJSON = function(refinersJSON) {};

/**
 * @param {string} filterName
 * @param {!Array<string>} filterTokens
 * @param {string} op
 * @param {boolean} useKQL
 * @param {?} tokenToDisplayValueMap
 * @return {void}
 */
Srch.Refinement.prototype.updateRefinementFilters = function(filterName, filterTokens, op, useKQL, tokenToDisplayValueMap) {};

/**
 * @param {string} refinersJSON
 * @return {void}
 */
Srch.Refinement.prototype.updateRefinersJSON = function(refinersJSON) {};

/**
 * @param {!Array<?>} refiners
 * @param {string} op
 * @param {boolean} useKQL
 * @param {?} tokenToDisplayValueMap
 * @return {void}
 */
Srch.Refinement.prototype.updateRefiners = function(refiners, op, useKQL, tokenToDisplayValueMap) {};

/**
 * @param {?} rcs
 * @param {string} filterName
 * @return {void}
 */
Srch.Refinement.prototype.removeRefinementCategory = function(rcs, filterName) {};

/**
 * @param {?} oldRefinementFilter
 * @param {?} newRefinementFilter
 * @return {void}
 */
Srch.Refinement.prototype.replaceRefinementFilter = function(oldRefinementFilter, newRefinementFilter) {};

/**
 * @param {string} filterName
 * @param {string} filterToken
 * @return {boolean}
 */
Srch.Refinement.prototype.hasRefinementFilter = function(filterName, filterToken) {};

/**
 * @param {string} filterName
 * @param {!Array<string>} filterTokens
 * @return {boolean}
 */
Srch.Refinement.prototype.hasAllRefinementFilters = function(filterName, filterTokens) {};

/**
 * @param {string} refinementName
 * @return {boolean}
 */
Srch.Refinement.prototype.hasRefinementCategory = function(refinementName) {};

/**
 * @param {string} refinementName
 * @return {?}
 */
Srch.Refinement.prototype.getCurrentRefinementCategory = function(refinementName) {};

/**
 * Gets refinement control with the specified propertyName
 * @param {string} refinerName
 * @return {!Srch.RefinementControl}
 */
Srch.Refinement.prototype.getRefinementControl = function(refinerName) {};

/**
 * Returns true if selected refinement controls collection contains a control with the specified propertyName
 * @param {string} refinerName
 * @return {boolean}
 */
Srch.Refinement.prototype.hasRefiner = function(refinerName) {};

/**
 * Replaces the refinement controls
 * @param {!Array<!Srch.RefinementControl>} newControls
 * @return {void}
 */
Srch.Refinement.prototype.updateRefinementControls = function(newControls) {};

/**
 * @constructor
 * @struct
 * @param {string} propertyName
 * @param {string} spec
 * @param {string} renderTemplateId
 */
Srch.RefinementControl = function(propertyName, spec, renderTemplateId) {};
 /** @type {string} */
Srch.RefinementControl.prototype.propertyName;
 /** @type {string} */
Srch.RefinementControl.prototype.spec;
 /** @type {string} */
Srch.RefinementControl.prototype.renderTemplateId;
 /** @type {string} */
Srch.RefinementControl.prototype.overrideDisplayName;
 /** @type {boolean} */
Srch.RefinementControl.prototype.useDefaultDateIntervals;
 /** @type {string} */
Srch.RefinementControl.prototype.containerId;
 /** @type {?} */
Srch.RefinementControl.prototype.alternateRenderer;
 /** @type {?} */
Srch.RefinementControl.prototype.alternateRenderContext;
 /** @type {string} */
Srch.RefinementControl.prototype.countDisplay;
 /** @type {number} */
Srch.RefinementControl.prototype.deepHits;

/**
 * @constructor
 * @struct
 * @param {!Element} elem
 */
Srch.Result = function(elem) {};

/**
 * @param {?} mappings
 * @return {!Object<string,?>}
 */
Srch.Result.parsePropertyMappingWithSlotDisplayNames = function(mappings) {};

/**
 * @param {?} mappings
 * @return {!Object<string,?>}
 */
Srch.Result.parsePropertyMappingsString = function(mappings) {};

/**
 * @param {?} propMappings
 * @return {!Array<?>}
 */
Srch.Result.getSelectedPropertiesFromMappingDictionary = function(propMappings) {};

/**
 * @return {string}
 */
Srch.Result.prototype.get_itemTemplateId = function() {};

/**
 * @param {string} value
 * @return {string}
 */
Srch.Result.prototype.set_itemTemplateId = function(value) {};

/**
 * @return {string}
 */
Srch.Result.prototype.get_groupTemplateId = function() {};

/**
 * @param {string} value
 * @return {string}
 */
Srch.Result.prototype.set_groupTemplateId = function(value) {};

/**
 * @return {string}
 */
Srch.Result.prototype.get_itemBodyTemplateId = function() {};

/**
 * @param {string} value
 * @return {string}
 */
Srch.Result.prototype.set_itemBodyTemplateId = function(value) {};

/**
 * @return {number}
 */
Srch.Result.prototype.get_maxPagesBeforeCurrent = function() {};

/**
 * @param {number} value
 * @return {number}
 */
Srch.Result.prototype.set_maxPagesBeforeCurrent = function(value) {};

/**
 * @return {number}
 */
Srch.Result.prototype.get_maxPagesAfterCurrent = function() {};

/**
 * @param {number} value
 * @return {number}
 */
Srch.Result.prototype.set_maxPagesAfterCurrent = function(value) {};

/**
 * @return {number}
 */
Srch.Result.prototype.get_currentPageNumber = function() {};

/**
 * @param {number} value
 * @return {number}
 */
Srch.Result.prototype.set_currentPageNumber = function(value) {};

/**
 * @return {boolean}
 */
Srch.Result.prototype.get_showSortOptions = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.Result.prototype.set_showSortOptions = function(value) {};

/**
 * @return {boolean}
 */
Srch.Result.prototype.get_showLanguageOptions = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.Result.prototype.set_showLanguageOptions = function(value) {};

/**
 * @return {boolean}
 */
Srch.Result.prototype.get_repositionLanguageDropDown = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.Result.prototype.set_repositionLanguageDropDown = function(value) {};

/**
 * @return {boolean}
 */
Srch.Result.prototype.get_showPaging = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.Result.prototype.set_showPaging = function(value) {};

/**
 * @return {boolean}
 */
Srch.Result.prototype.get_showResults = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.Result.prototype.set_showResults = function(value) {};

/**
 * @return {boolean}
 */
Srch.Result.prototype.get_showBestBets = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.Result.prototype.set_showBestBets = function(value) {};

/**
 * @return {boolean}
 */
Srch.Result.prototype.get_showPersonalFavorites = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.Result.prototype.set_showPersonalFavorites = function(value) {};

/**
 * @return {boolean}
 */
Srch.Result.prototype.get_showDefinitions = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.Result.prototype.set_showDefinitions = function(value) {};

/**
 * @return {boolean}
 */
Srch.Result.prototype.get_showDidYouMean = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.Result.prototype.set_showDidYouMean = function(value) {};

/**
 * @return {boolean}
 */
Srch.Result.prototype.get_showAdvancedLink = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.Result.prototype.set_showAdvancedLink = function(value) {};

/**
 * @return {boolean}
 */
Srch.Result.prototype.get_showPreferencesLink = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.Result.prototype.set_showPreferencesLink = function(value) {};

/**
 * @return {boolean}
 */
Srch.Result.prototype.get_showResultCount = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.Result.prototype.set_showResultCount = function(value) {};

/**
 * @return {boolean}
 */
Srch.Result.prototype.get_showAlertMe = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.Result.prototype.set_showAlertMe = function(value) {};

/**
 * @return {boolean}
 */
Srch.Result.prototype.get_showViewDuplicates = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.Result.prototype.set_showViewDuplicates = function(value) {};

/**
 * @return {?}
 */
Srch.Result.prototype.get_pagingInfo = function() {};

/**
 * @return {boolean}
 */
Srch.Result.prototype.get_shouldShowNoResultMessage = function() {};

/**
 * @return {string}
 */
Srch.Result.prototype.get_advancedUrl = function() {};

/**
 * @param {string} value
 * @return {string}
 */
Srch.Result.prototype.set_advancedUrl = function(value) {};

/**
 * @return {boolean}
 */
Srch.Result.prototype.get_showUpScopeMessage = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.Result.prototype.set_showUpScopeMessage = function(value) {};

/**
 * @return {boolean}
 */
Srch.Result.prototype.get_scrollToTopOnRedraw = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.Result.prototype.set_scrollToTopOnRedraw = function(value) {};

/**
 * @return {boolean}
 */
Srch.Result.prototype.get_useSimplifiedQueryBuilder = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.Result.prototype.set_useSimplifiedQueryBuilder = function(value) {};

/**
 * @return {!Array<string>}
 */
Srch.Result.prototype.get_preloadedItemTemplateIds = function() {};

/**
 * @param {!Array<string>} value
 * @return {!Array<string>}
 */
Srch.Result.prototype.set_preloadedItemTemplateIds = function(value) {};

/**
 * @param {!Microsoft.SharePoint.Client.Search.Query.ResultTableCollection} resultTableCollection
 * @return {void}
 */
Srch.Result.prototype.processResultReady = function(resultTableCollection) {};

/**
 * @return {void}
 */
Srch.Result.prototype.render = function() {};

/**
 * @param {?} sender
 * @param {?} e
 * @return {void}
 */
Srch.Result.prototype.scriptApplication_PreLoad = function(sender, e) {};

/**
 * @param {string} sortRankName
 * @return {void}
 */
Srch.Result.prototype.sortOrRank = function(sortRankName) {};

/**
 * @param {string} sortName
 * @return {void}
 */
Srch.Result.prototype.sort = function(sortName) {};

/**
 * @param {number} queryLanguage
 * @return {void}
 */
Srch.Result.prototype.changeQueryLanguage = function(queryLanguage) {};

/**
 * @param {number} startAt
 * @return {void}
 */
Srch.Result.prototype.page = function(startAt) {};

/**
 * @param {?} queryTerm
 * @return {void}
 */
Srch.Result.prototype.changeQueryTerm = function(queryTerm) {};

/**
 * @param {number} docId
 * @return {void}
 */
Srch.Result.prototype.viewDuplicates = function(docId) {};

/**
 * Returns true if the specified table has results and is enabled to be shown by this control
 * @param {!Microsoft.SharePoint.Client.Search.Query.ResultTable} resultTable
 * @return {boolean}
 */
Srch.Result.prototype.shouldShowTable = function(resultTable) {};

/**
 * @constructor
 * @struct
 * @param {!Element} elem
 */
Srch.SearchBox = function(elem) {};

/**
 * Returns the current search term
 * @return {string}
 */
Srch.SearchBox.prototype.get_currentTerm = function() {};

/**
 * Sets the current search term.
 * Does not update results or even re-render control automatically, only sets the value.
 * You can call .renderControl() method to re-render control.
 * @param {string} value
 * @return {string}
 */
Srch.SearchBox.prototype.set_currentTerm = function(value) {};

/**
 * @return {!Array<string>}
 */
Srch.SearchBox.prototype.get_queryGroupNames = function() {};

/**
 * @param {?} value
 * @return {!Array<string>}
 */
Srch.SearchBox.prototype.set_queryGroupNames = function(value) {};

/**
 * Gets the results page address, e.g. '~site/_layouts/15/osssearchresults.aspx?u={contexturl}'
 * @return {string}
 */
Srch.SearchBox.prototype.get_resultsPageAddress = function() {};

/**
 * Sets the results page address, e.g. '~site/_layouts/15/osssearchresults.aspx?u={contexturl}'
 * Parameter u is used for setting the url filter for the search, so that only results within
 * e.g. specified site are returned. Omit this parameter if you want to search everywhere.
 * @param {string} value
 * @return {string}
 */
Srch.SearchBox.prototype.set_resultsPageAddress = function(value) {};

/**
 * @return {boolean}
 */
Srch.SearchBox.prototype.get_showAdvancedLink = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.SearchBox.prototype.set_showAdvancedLink = function(value) {};

/**
 * @return {boolean}
 */
Srch.SearchBox.prototype.get_showQuerySuggestions = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.SearchBox.prototype.set_showQuerySuggestions = function(value) {};

/**
 * @return {boolean}
 */
Srch.SearchBox.prototype.get_showNavigation = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.SearchBox.prototype.set_showNavigation = function(value) {};

/**
 * @return {boolean}
 */
Srch.SearchBox.prototype.get_showPeopleNameSuggestions = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.SearchBox.prototype.set_showPeopleNameSuggestions = function(value) {};

/**
 * Gets the interval in milliseconds, if user is idle during this interval, suggestions retrieval will be initiated.
 * Default value is 250.
 * @return {number}
 */
Srch.SearchBox.prototype.get_querySuggestionCompletionInterval = function() {};

/**
 * Sets the interval in milliseconds, if user is idle during this interval, suggestions retrieval will be initiated.
 * Default value is 250.
 * @param {number} value
 * @return {number}
 */
Srch.SearchBox.prototype.set_querySuggestionCompletionInterval = function(value) {};

/**
 * Gets minimum length of the search term for suggestions to be retrieved. Default is 2 letters.
 * @return {number}
 */
Srch.SearchBox.prototype.get_querySuggestionMinimumPrefixLength = function() {};

/**
 * Sets minimum length of the search term for suggestions to be retrieved. Default is 2 letters.
 * @param {number} value
 * @return {number}
 */
Srch.SearchBox.prototype.set_querySuggestionMinimumPrefixLength = function(value) {};

/**
 * Gets number of suggestions to display. Default is 5.
 * @return {number}
 */
Srch.SearchBox.prototype.get_querySuggestionCount = function() {};

/**
 * Sets number of suggestions to display. Default is 5.
 * @param {number} value
 * @return {number}
 */
Srch.SearchBox.prototype.set_querySuggestionCount = function(value) {};

/**
 * @return {number}
 */
Srch.SearchBox.prototype.get_personalResultCount = function() {};

/**
 * @param {number} value
 * @return {number}
 */
Srch.SearchBox.prototype.set_personalResultCount = function(value) {};

/**
 * @return {string}
 */
Srch.SearchBox.prototype.get_advancedSearchPageAddress = function() {};

/**
 * @param {string} value
 * @return {string}
 */
Srch.SearchBox.prototype.set_advancedSearchPageAddress = function(value) {};

/**
 * @return {boolean}
 */
Srch.SearchBox.prototype.get_showPreferencesLink = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.SearchBox.prototype.set_showPreferencesLink = function(value) {};

/**
 * @return {boolean}
 */
Srch.SearchBox.prototype.get_serverInitialRender = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.SearchBox.prototype.set_serverInitialRender = function(value) {};

/**
 * @return {boolean}
 */
Srch.SearchBox.prototype.get_setFocusOnPageLoad = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.SearchBox.prototype.set_setFocusOnPageLoad = function(value) {};

/**
 * @return {boolean}
 */
Srch.SearchBox.prototype.get_allowEmptySearch = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.SearchBox.prototype.set_allowEmptySearch = function(value) {};

/**
 * @return {boolean}
 */
Srch.SearchBox.prototype.get_updatePageTitle = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.SearchBox.prototype.set_updatePageTitle = function(value) {};

/**
 * @return {string}
 */
Srch.SearchBox.prototype.get_pageTitlePrefix = function() {};

/**
 * @param {string} value
 * @return {string}
 */
Srch.SearchBox.prototype.set_pageTitlePrefix = function(value) {};

/**
 * Gets the search input placeholder text
 * @return {string}
 */
Srch.SearchBox.prototype.get_currentPrompt = function() {};

/**
 * Sets the search input placeholder text
 * @param {string} value
 * @return {string}
 */
Srch.SearchBox.prototype.set_currentPrompt = function(value) {};

/**
 * @return {string}
 */
Srch.SearchBox.prototype.get_initialPrompt = function() {};

/**
 * @param {string} value
 * @return {string}
 */
Srch.SearchBox.prototype.set_initialPrompt = function(value) {};

/**
 * Gets the css class/classes of the placeholder text. Default is 'ms-srch-sb-prompt ms-helperText'
 * @return {string}
 */
Srch.SearchBox.prototype.get_promptCssClass = function() {};

/**
 * Sets the css class/classes of the placeholder text. Default is 'ms-srch-sb-prompt ms-helperText'
 * @param {string} value
 * @return {string}
 */
Srch.SearchBox.prototype.set_promptCssClass = function(value) {};

/**
 * @return {boolean}
 */
Srch.SearchBox.prototype.get_tryInplaceQuery = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.SearchBox.prototype.set_tryInplaceQuery = function(value) {};

/**
 * Gets the id of the search box input element
 * @return {string}
 */
Srch.SearchBox.prototype.get_searchBoxInputId = function() {};

/**
 * Sets the id of the search box input element
 * @param {string} value
 * @return {string}
 */
Srch.SearchBox.prototype.set_searchBoxInputId = function(value) {};

/**
 * @return {string}
 */
Srch.SearchBox.prototype.get_searchBoxContainerId = function() {};

/**
 * @param {string} value
 * @return {string}
 */
Srch.SearchBox.prototype.set_searchBoxContainerId = function(value) {};

/**
 * @return {string}
 */
Srch.SearchBox.prototype.get_navigationButtonId = function() {};

/**
 * @param {string} value
 * @return {string}
 */
Srch.SearchBox.prototype.set_navigationButtonId = function(value) {};

/**
 * @return {string}
 */
Srch.SearchBox.prototype.get_suggestionsListId = function() {};

/**
 * @param {string} value
 * @return {string}
 */
Srch.SearchBox.prototype.set_suggestionsListId = function(value) {};

/**
 * @return {string}
 */
Srch.SearchBox.prototype.get_navigationListId = function() {};

/**
 * @param {string} value
 * @return {string}
 */
Srch.SearchBox.prototype.set_navigationListId = function(value) {};

/**
 * @return {!Element}
 */
Srch.SearchBox.prototype.get_searchBoxInputElement = function() {};

/**
 * @return {string}
 */
Srch.SearchBox.prototype.get_searchBoxProgressClass = function() {};

/**
 * @param {string} value
 * @return {string}
 */
Srch.SearchBox.prototype.set_searchBoxProgressClass = function(value) {};

/**
 * @return {!Element}
 */
Srch.SearchBox.prototype.get_searchBoxContainerElement = function() {};

/**
 * @return {string}
 */
Srch.SearchBox.prototype.get_searchBoxLinkId = function() {};

/**
 * @param {string} value
 * @return {string}
 */
Srch.SearchBox.prototype.set_searchBoxLinkId = function(value) {};

/**
 * @return {!Element}
 */
Srch.SearchBox.prototype.get_searchBoxLinkElement = function() {};

/**
 * @return {?}
 */
Srch.SearchBox.prototype.get_navigationNodes = function() {};

/**
 * @param {?} value
 * @return {?}
 */
Srch.SearchBox.prototype.set_navigationNodes = function(value) {};

/**
 * @return {number}
 */
Srch.SearchBox.prototype.get_msBeforeShowingProgress = function() {};

/**
 * @param {number} value
 * @return {number}
 */
Srch.SearchBox.prototype.set_msBeforeShowingProgress = function(value) {};

/**
 * @return {boolean}
 */
Srch.SearchBox.prototype.get_maintainQueryState = function() {};

/**
 * @param {boolean} value
 * @return {boolean}
 */
Srch.SearchBox.prototype.set_maintainQueryState = function(value) {};

/**
 * @return {string}
 */
Srch.SearchBox.prototype.get_querySuggestionsSourceID = function() {};

/**
 * @param {string} value
 * @return {string}
 */
Srch.SearchBox.prototype.set_querySuggestionsSourceID = function(value) {};

/**
 * @param {?} sender
 * @param {?} e
 * @return {void}
 */
Srch.SearchBox.prototype.scriptApplication_PreLoad = function(sender, e) {};

/**
 * @param {?} sender
 * @param {?} e
 * @return {void}
 */
Srch.SearchBox.prototype.scriptApplication_PostLoad = function(sender, e) {};

/**
 * @return {?}
 */
Srch.SearchBox.prototype.serverTemplateScriptsCallback = function() {};

/**
 * @param {?} value
 * @return {void}
 */
Srch.SearchBox.prototype.add_queryReady = function(value) {};

/**
 * @param {?} value
 * @return {void}
 */
Srch.SearchBox.prototype.remove_queryReady = function(value) {};

/**
 * @param {?} arg
 * @return {void}
 */
Srch.SearchBox.prototype.raiseQueryReadyEvent = function(arg) {};

/**
 * @param {?} value
 * @return {void}
 */
Srch.SearchBox.prototype.add_batchQueryIssuing = function(value) {};

/**
 * @param {?} value
 * @return {void}
 */
Srch.SearchBox.prototype.remove_batchQueryIssuing = function(value) {};

/**
 * @param {?} arg
 * @return {void}
 */
Srch.SearchBox.prototype.raiseBatchQueryIssuingEvent = function(arg) {};

/**
 * @param {?} value
 * @return {void}
 */
Srch.SearchBox.prototype.add_batchResultReady = function(value) {};

/**
 * @param {?} value
 * @return {void}
 */
Srch.SearchBox.prototype.remove_batchResultReady = function(value) {};

/**
 * @param {?} arg
 * @return {void}
 */
Srch.SearchBox.prototype.raiseBatchResultReadyEvent = function(arg) {};

/**
 * @param {?} sender
 * @param {?} e
 * @return {void}
 */
Srch.SearchBox.prototype.dataProvider_QueryStateChanged = function(sender, e) {};

/**
 * @param {?} sender
 * @param {?} e
 * @return {void}
 */
Srch.SearchBox.prototype.dataProvider_QueryIssuing = function(sender, e) {};

/**
 * @param {?} sender
 * @param {?} e
 * @return {void}
 */
Srch.SearchBox.prototype.dataProvider_ResultReady = function(sender, e) {};

/**
 * @param {string} term
 * @return {void}
 */
Srch.SearchBox.prototype.search = function(term) {};

/**
 * @return {void}
 */
Srch.SearchBox.prototype.hidePrompt = function() {};

/**
 * @return {void}
 */
Srch.SearchBox.prototype.showPrompt = function() {};

/**
 * @return {void}
 */
Srch.SearchBox.prototype.focus = function() {};

/**
 * @param {boolean} focused
 * @return {void}
 */
Srch.SearchBox.prototype.setBorder = function(focused) {};

/**
 * @param {string} prompt
 * @param {string} searchBoxInputId
 * @param {string} searchBoxContainerId
 * @param {string} navigationButtonId
 * @param {string} suggestionsListId
 * @param {string} navigationListId
 * @param {string} searchBoxLinkId
 * @param {string} searchBoxProgressClass
 * @param {string} searchBoxPromptClass
 * @return {void}
 */
Srch.SearchBox.prototype.activate = function(prompt, searchBoxInputId, searchBoxContainerId, navigationButtonId, suggestionsListId, navigationListId, searchBoxLinkId, searchBoxProgressClass, searchBoxPromptClass) {};

/**
 * @return {void}
 */
Srch.SearchBox.prototype.activateDefaultNavigationBehavior = function() {};

/**
 * @return {void}
 */
Srch.SearchBox.prototype.activateDefaultQuerySuggestionBehavior = function() {};

/** @typedef {function(?): string} */
Srch.RenderFunction;
/**
 * @constructor
 * @struct
 */
Srch.U = function() {};
 /** @type {string} */
Srch.U.hitHighlightingOpenTag;
 /** @type {string} */
Srch.U.hitHighlightingCloseTag;
 /** @type {number} */
Srch.U.titleTruncationLength;
 /** @type {number} */
Srch.U.titleTruncationLengthWithMetadata;
 /** @type {number} */
Srch.U.titleTruncationLengthWithPreview;
 /** @type {number} */
Srch.U.summaryTruncationLength;
 /** @type {number} */
Srch.U.summaryTruncationLengthWithPreview;
 /** @type {number} */
Srch.U.pathTruncationLength;
 /** @type {number} */
Srch.U.pathTruncationLengthWithPreview;
 /** @type {number} */
Srch.U.pathTruncationLengthWithMetadata;
 /** @type {number} */
Srch.U.personaControlRenderedThreshold;
 /** @type {number} */
Srch.U.maximumSocialMetadataValue;
 /** @type {number} */
Srch.U.contentFixedWidthLength;

/**
 * Returns true if the value parameter is null or empty string
 * @param {string} value
 * @return {boolean}
 */
Srch.U.e = function(value) {};

/**
 * Returns true if the value parameter is empty string
 * @param {?} value
 * @return {boolean}
 */
Srch.U.w = function(value) {};

/**
 * Returns true if the value parameter is null or undefined
 * @param {?} value
 * @return {boolean}
 */
Srch.U.n = function(value) {};

/**
 * Returns true if current page is in edit mode
 * @return {boolean}
 */
Srch.U.isPageInEditMode = function() {};

/**
 * Returns true if current page is displayed in the Minimal Download Strategy (MDS) mode
 * @return {boolean}
 */
Srch.U.isPageInMdsMode = function() {};

/**
 * @return {boolean}
 */
Srch.U.isPagePartialLoad = function() {};

/**
 * Returns true if the current page uses right-to-left mode (RTL)
 * @return {boolean}
 */
Srch.U.isRTL = function() {};

/**
 * Ensures that the given value is not null or undefined; throws an exception otherwise.
 * @param {?} value
 * @param {?} context
 * @param {string} methodName
 * @param {string} paraName
 * @return {void}
 */
Srch.U.ensureNotNullOrUndefined = function(value, context, methodName, paraName) {};

/**
 * Ensures that the given value is not null, undefined or empty; throws an exception otherwise.
 * @param {string} value
 * @param {?} context
 * @param {string} methodName
 * @param {string} paraName
 * @return {void}
 */
Srch.U.ensureNotNullOrEmptyString = function(value, context, methodName, paraName) {};

/**
 * Returns copy of the passed source dictionary
 * @param {!Object<string,?>} source
 * @return {!Object<string,?>}
 */
Srch.U.copyDictionary = function(source) {};

/**
 * Returns true if the obj parameter is null, undefined, number or string
 * @param {?} obj
 * @return {boolean}
 */
Srch.U.isPrimitive = function(obj) {};

/**
 * Returns true if the obj parameter is array
 * @param {?} obj
 * @return {boolean}
 */
Srch.U.isArray = function(obj) {};

/**
 * Safely pushes item to array (does nothing if the array is null or undefined)
 * @param {!Array<?>} array
 * @param {?} item
 * @return {void}
 */
Srch.U.appendArray = function(array, item) {};

/**
 * Safely sets field of an object (does nothing if either object or fieldName is null/empty); returns true if value was set
 * @param {?} targetObject
 * @param {string} fieldName
 * @param {?} fieldValue
 * @return {boolean}
 */
Srch.U.setFieldOnObject = function(targetObject, fieldName, fieldValue) {};

/**
 * Safely gets field of an object (returns null if object is null or undefined)
 * @param {?} targetObject
 * @param {string} fieldName
 * @return {?}
 */
Srch.U.getFieldOnObject = function(targetObject, fieldName) {};

/**
 * Safely gets field of an object or creates it if it is null or undefined
 * @param {?} targetObject
 * @param {string} fieldName
 * @param {?} defaultValue
 * @return {?}
 */
Srch.U.getOrCreateFieldOnObject = function(targetObject, fieldName, defaultValue) {};

/**
 * Safely gets field of an object (returns empty string instead of null as "getFieldOnObject")
 * @param {?} targetObject
 * @param {string} fieldName
 * @return {string}
 */
Srch.U.getStringFieldOnObject = function(targetObject, fieldName) {};

/**
 * Returns true if the specified item is found in the specified array (uses '===' for comparing)
 * @param {!Array<?>} array
 * @param {?} item
 * @return {boolean}
 */
Srch.U.isInArray = function(array, item) {};

/**
 * Removes the specified item from the specified array and returns array that has the deleted item
 * @param {!Array<?>} array
 * @param {?} item
 * @return {!Array<?>}
 */
Srch.U.removeArray = function(array, item) {};

/**
 * Removes trailing spaces and also replaces double spaces inside string to single spaces
 * @param {string} value
 * @return {string}
 */
Srch.U.trimExtraSpaces = function(value) {};

/**
 * Adds the specified CSS class to element (if not there already)
 * @param {!Element} e
 * @param {string} className
 * @return {void}
 */
Srch.U.ensureCSSClassNameExist = function(e, className) {};

/**
 * Removes the specified CSS class from the element
 * @param {!Element} e
 * @param {string} className
 * @return {void}
 */
Srch.U.ensureCSSClassNameNotExist = function(e, className) {};

/**
 * Adds cookie with specified parameters
 * @param {string} name
 * @param {string} value
 * @param {!Date=} expires
 * @param {string=} domain
 * @param {string=} path
 * @return {void}
 */
Srch.U.setCookie = function(name, value, expires, domain, path) {};

/**
 * Gets cookie by name
 * @param {string} name
 * @return {string}
 */
Srch.U.getCookie = function(name) {};

/**
 * Returns true if the specified URL belongs to the specified host name
 * @param {string} url
 * @param {string} hostName
 * @return {boolean}
 */
Srch.U.isSameHost = function(url, hostName) {};

/**
 * Returns the hostname of current page
 * @return {string}
 */
Srch.U.getHostName = function() {};

/**
 * @param {!Srch.ClientControl} c
 * @param {string} method
 * @param {string} message
 * @return {void}
 */
Srch.U.trace = function(c, method, message) {};

/**
 * @param {!Srch.ClientControl} c
 * @param {string} method
 * @param {string} format
 * @param {...string} values
 * @return {void}
 */
Srch.U.traceFormatted = function(c, method, format, values) {};

/**
 * Same as $addHandler with safety checks
 * @param {!Element} element
 * @param {string} eventName
 * @param {function(?, ?): void} handler
 * @return {void}
 */
Srch.U.addHandler = function(element, eventName, handler) {};

/**
 * Same as $removeHandler with safety checks
 * @param {!Element} element
 * @param {string} eventName
 * @param {function(?, ?): void} handler
 * @return {void}
 */
Srch.U.removeHandler = function(element, eventName, handler) {};

/**
 * Returns true if the specified element is a descendant of the container element
 * @param {!Element} element
 * @param {!Element} container
 * @return {boolean}
 */
Srch.U.isDescendant = function(element, container) {};

/**
 * Returns the closest to startingElement parent of the specified tag name
 * @param {!Element} startingElement
 * @param {string} tagName
 * @return {!Element}
 */
Srch.U.getParentElementByName = function(startingElement, tagName) {};

/**
 * Returns the #s4-workspace element or if not found, then the fallback element
 * @param {!Element} fallback
 * @return {!Element}
 */
Srch.U.getWorkspace = function(fallback) {};

/**
 * Returns specified by attributeName attribute of startingElement or of it's closest parent who has it
 * @param {!Element} startingElement
 * @param {string} attributeName
 * @return {string}
 */
Srch.U.getParentAttributeByName = function(startingElement, attributeName) {};

/**
 * Returns the ClientControl associated with specified DOM element
 * @param {!Element} e
 * @return {!Srch.ClientControl}
 */
Srch.U.getClientComponent = function(e) {};

/**
 * @param {string} id
 * @return {?}
 */
Srch.U.getResultObject = function(id) {};

/**
 * @param {string} id
 * @param {?} resultObject
 * @return {?}
 */
Srch.U.setResultObject = function(id, resultObject) {};

/**
 * @param {!Element} e
 * @param {string} type
 * @return {?}
 */
Srch.U.findResultObjectFromDOM = function(e, type) {};

/**
 * Appends specified parameter key and value string to the specified URL
 * @param {string} url
 * @param {string} keyAndValue
 * @return {string}
 */
Srch.U.appendUrlParameter = function(url, keyAndValue) {};

/**
 * Ensures that the given URL protocol value is allowed. Returns the specified URL value if the protocol is allowed; empty string otherwise.
 * @param {string} value
 * @return {string}
 */
Srch.U.ensureAllowedProtocol = function(value) {};

/**
 * Indicates whether the specified protocol is allowed.
 * @param {string} value
 * @param {boolean} allowRelativeUrl
 * @return {boolean}
 */
Srch.U.isProtocolAllowed = function(value, allowRelativeUrl) {};

/**
 * Returns true if the URL is a relative URL
 * @param {string} url
 * @return {boolean}
 */
Srch.U.isUrlRelative = function(url) {};

/**
 * Returns true if the URL is a server-relative URL (i.e. starts with '/')
 * @param {string} url
 * @return {boolean}
 */
Srch.U.isUrlServerRelative = function(url) {};

/**
 * Returns true if the URL is a relative URL, but not a server-relative URL
 * @param {string} url
 * @return {boolean}
 */
Srch.U.isUrlPagelRelative = function(url) {};

/**
 * @param {?} e
 * @param {?} clickType
 * @return {void}
 */
Srch.U.logClick = function(e, clickType) {};

/**
 * @param {?} query
 * @param {?} dp
 * @return {void}
 */
Srch.U.fillKeywordQuery = function(query, dp) {};

/**
 * Parses username out from SharePoint user field value
 * @param {string} authorField
 * @return {string}
 */
Srch.U.getUsernameFromAuthorField = function(authorField) {};

/**
 * Parses user display name out from SharePoint user field value
 * @param {string} authorField
 * @return {string}
 */
Srch.U.getDisplayNameFromAuthorField = function(authorField) {};

/**
 * Parses SharePoint array field value and returns array of strings
 * @param {string} value
 * @return {!Array<string>}
 */
Srch.U.getArray = function(value) {};

/**
 * Converts file extension to a more friendly representation, e.g. 'doc' => 'file_Word'
 * @param {string} fileExtension
 * @return {string}
 */
Srch.U.getFriendlyNameForFileExtension = function(fileExtension) {};

/**
 * Returns true if the fileExtension belongs to a webpage, e.g. 'ascx', 'aspx', 'html', 'php', etc.
 * @param {string} fileExtension
 * @return {boolean}
 */
Srch.U.isWebPage = function(fileExtension) {};

/**
 * Truncates the string to specified maximum allowed amount of characters (if max amount is not exceeded - does nothing)
 * @param {string} original
 * @param {number} maxChars
 * @return {string}
 */
Srch.U.truncateEnd = function(original, maxChars) {};

/**
 * Returns true if specified by logoUrl image is one of default site logos
 * @param {string} logoUrl
 * @return {boolean}
 */
Srch.U.isDefaultSiteLogo = function(logoUrl) {};

/**
 * Returns formatted date
 * @param {!Date} dateValue
 * @param {string=} dateTimeFormatId
 * @return {string}
 */
Srch.U.toFormattedDate = function(dateValue, dateTimeFormatId) {};

/**
 * Returns formatted number
 * @param {number} num
 * @param {number} defaultDecimalPlacesIfNotInt
 * @return {string}
 */
Srch.U.toFormattedNumber = function(num, defaultDecimalPlacesIfNotInt) {};

/**
 * If number is more than 1000, rounds up three last digits, e.g. 72389 => '72,000+'. If number is more than 100000, returns '100,000+'
 * @param {number} num
 * @return {string}
 */
Srch.U.toFriendlyNumber = function(num) {};

/**
 * Returns human-readable size in kilobytes/megabytes etc. (the captions are localized)
 * @param {number} numberOfBytes
 * @param {boolean} showDecimalPart
 * @return {string}
 */
Srch.U.toFileSizeDisplay = function(numberOfBytes, showDecimalPart) {};

/**
 * @param {?} valueObject
 * @param {number} width
 * @param {number} height
 * @return {string}
 */
Srch.U.getVideoImageWithFallbackSource = function(valueObject, width, height) {};

/**
 * @param {?} imageInfo
 * @param {number} width
 * @param {number} height
 * @return {string}
 */
Srch.U.getImageSourceWithRendition = function(imageInfo, width, height) {};

/**
 * @param {string} rangeFilterToken
 * @param {?} objToStoreFilterTokenType
 * @return {?}
 */
Srch.U.parseTypedRangeToken = function(rangeFilterToken, objToStoreFilterTokenType) {};

/**
 * @param {?} resultRow
 * @return {void}
 */
Srch.U.modifyMediaDurationRefinementName = function(resultRow) {};

/**
 * @param {string} deeplinks
 * @param {number} maxRows
 * @return {string}
 */
Srch.U.getDeepLinks = function(deeplinks, maxRows) {};

/**
 * @param {string} url
 * @param {number} maxChars
 * @return {string}
 */
Srch.U.truncateUrl = function(url, maxChars) {};

/**
 * @param {string} url
 * @param {number} maxChars
 * @return {string}
 */
Srch.U.truncateHighlightedUrl = function(url, maxChars) {};

/**
 * Copies the specified string to clipboard, if possible
 * @param {string} link
 * @return {void}
 */
Srch.U.copyLink = function(link) {};

/**
 * Registers display template function in the system.
 *  \@param name Identifier of the template. Usually template is registered twice: by URL and by name.
 *  \@param template The display template. It can be either string, or function, that gets the CSR context object and returns HTML string
 * @param {string} name
 * @param {(string|function(?): string)} templateFunction
 * @return {void}
 */
Srch.U.registerRenderTemplateByName = function(name, templateFunction) {};

/**
 * Returns display template registered (can be either string or function)
 * @param {string} name
 * @param {?} renderCtx
 * @return {(string|function(?): string)}
 */
Srch.U.getRenderTemplateByName = function(name, renderCtx) {};

/**
 * @param {?} renderCtx
 * @param {?} callbackType
 * @param {?} callbackFunction
 * @param {?} enforceUnique
 * @param {?} templateFunction
 * @return {void}
 */
Srch.U.addRenderContextCallback = function(renderCtx, callbackType, callbackFunction, enforceUnique, templateFunction) {};

/**
 * @param {?} renderCtx
 * @param {?} itemRenderWrapperFunction
 * @param {?} templateFunction
 * @return {?}
 */
Srch.U.setItemRenderWrapper = function(renderCtx, itemRenderWrapperFunction, templateFunction) {};

/**
 * @param {?} renderCtx
 * @param {?} messageText
 * @param {?} operationName
 * @return {void}
 */
Srch.U.logRenderingErrorMessageToContext = function(renderCtx, messageText, operationName) {};

/**
 * Gets the URL of template based on display template function or the rendering context
 * @param {?} templateFunctionOrRenderCtx
 * @return {string}
 */
Srch.U.getTemplateUrlFromFunctionOrRenderCtx = function(templateFunctionOrRenderCtx) {};

/**
 * @param {?} messageText
 * @param {?} operationName
 * @param {?} templateFuncOrRenderCtx
 * @return {?}
 */
Srch.U.createErrorObjectWithExecContext = function(messageText, operationName, templateFuncOrRenderCtx) {};

/**
 * Returns the CSR template that was previously registered using 'registerRenderTemplateByName' based on CSR template level
 * @param {?} renderCtx
 * @param {!Srch.ClientControl} component
 * @param {string} level
 * @return {(string|function(?): string)}
 */
Srch.U.resolveRenderTemplate = function(renderCtx, component, level) {};

/**
 * Returns formatted time string from seconds string, which contains a number that represents amount of seconds passed since 00:00:00 today
 * @param {string} secondsStr
 * @return {string}
 */
Srch.U.getFormattedTimeFromSeconds = function(secondsStr) {};

/**
 * Returns true if the keyCode is \n or \r
 * @param {?} keyCode
 * @return {boolean}
 */
Srch.U.isEnterKey = function(keyCode) {};

/**
 * Prevents default event action and stops further propagation of the event in the DOM
 * @param {!Event} e
 * @return {void}
 */
Srch.U.cancelEvent = function(e) {};

/**
 * Prevents default event action or/and stops further propagation of the event in the DOM
 * @param {!Event} e
 * @param {boolean} preventDefault
 * @param {boolean} stopPropagation
 * @return {void}
 */
Srch.U.cancelEventEx = function(e, preventDefault, stopPropagation) {};

/**
 * Gets a value from 'Properties' field object of the specified parent object
 * @param {?} parent
 * @param {string} propName
 * @return {?}
 */
Srch.U.getTableProperty = function(parent, propName) {};

/**
 * Concatenates two URL fragments and returns resulting URL
 * @param {string} firstPart
 * @param {string} secondPart
 * @return {string}
 */
Srch.U.concatUrl = function(firstPart, secondPart) {};

/**
 * Returns URL to the html16.png image
 * @return {string}
 */
Srch.U.getIconUrl = function() {};

/**
 * Returns URL to the folder.gif image
 * @return {string}
 */
Srch.U.getFolderIconUrl = function() {};

/**
 * Returns URL of the appropriate file image based on the file type identifier (see getFriendlyNameForFileExtension)
 * @param {string} item
 * @param {string=} defaultIconPath
 * @return {string}
 */
Srch.U.getIconUrlByFileExtension = function(item, defaultIconPath) {};

/**
 * Returns string that contains safe call to HP.Show, passing over the itemId, hpContainerId and templateUrl parameters, and supplying true for wide parameter.
 * @param {string} itemId
 * @param {string} hpContainerId
 * @param {string} templateUrl
 * @return {string}
 */
Srch.U.getShowHoverPanelCallbackWide = function(itemId, hpContainerId, templateUrl) {};

/**
 * Returns string that contains safe call to HP.Show, passing over the itemId, hpContainerId and templateUrl parameters, and supplying false for wide parameter.
 * @param {string} itemId
 * @param {string} hpContainerId
 * @param {string} templateUrl
 * @return {string}
 */
Srch.U.getShowHoverPanelCallback = function(itemId, hpContainerId, templateUrl) {};

/**
 * Returns string that contains safe call to HP.Hide
 * @return {string}
 */
Srch.U.getHideHoverPanelCallback = function() {};

/**
 * @param {string} key
 * @param {?} result
 * @param {string} property
 * @return {?}
 */
Srch.U.getHighlightedProperty = function(key, result, property) {};

/**
 * @param {string} pre
 * @return {string}
 */
Srch.U.processHHXML = function(pre) {};

/**
 * @param {string} xml
 * @return {!XMLDocument}
 */
Srch.U.createXMLDocument = function(xml) {};

/**
 * @param {string} multiValue
 * @param {number} maxItems
 * @param {string} rawDelimiter
 * @return {string}
 */
Srch.U.getUnEncodedMultiValuedResults = function(multiValue, maxItems, rawDelimiter) {};

/**
 * @param {string} value
 * @param {number} cutOff
 * @return {string}
 */
Srch.U.getTrimmedString = function(value, cutOff) {};

/**
 * @param {string} title
 * @param {number} maximumLengthInChars
 * @param {number} numberOfTermsToUse
 * @return {string}
 */
Srch.U.trimTitle = function(title, maximumLengthInChars, numberOfTermsToUse) {};

/**
 * @param {string} hitHighlightedSummary
 * @param {number} titleLength
 * @return {string}
 */
Srch.U.extractReplyTitleFromSummary = function(hitHighlightedSummary, titleLength) {};

/**
 * @param {string} value
 * @param {number} cutOff
 * @return {string}
 */
Srch.U.getTrimmedProcessedHHXMLString = function(value, cutOff) {};

/**
 * @param {!XMLDocument} xmlDoc
 * @param {string} nodeName
 * @param {number} numItems
 * @param {string} rawDelimiter
 * @return {string}
 */
Srch.U.getMultipleHHXMLNodeValues = function(xmlDoc, nodeName, numItems, rawDelimiter) {};

/**
 * @param {!XMLDocument} xmlDoc
 * @param {string} nodeName
 * @return {string}
 */
Srch.U.getSingleHHXMLNodeValue = function(xmlDoc, nodeName) {};

/**
 * @param {?} resultTable
 * @param {string} tableTypeName
 * @return {boolean}
 */
Srch.U.isTableTypeof = function(resultTable, tableTypeName) {};

/**
 * @param {?} resultTable
 * @return {boolean}
 */
Srch.U.isSubstrateTable = function(resultTable) {};

/**
 * @param {!Microsoft.SharePoint.Client.Search.Query.ResultTableCollection} tableCollection
 * @param {string} tableTypeName
 * @return {!Microsoft.SharePoint.Client.Search.Query.ResultTable}
 */
Srch.U.getTableOfType = function(tableCollection, tableTypeName) {};

/**
 * @param {!Microsoft.SharePoint.Client.Search.Query.ResultTable} resultTable
 * @return {boolean}
 */
Srch.U.isFirstPromotedBlock = function(resultTable) {};

/**
 * @param {!Microsoft.SharePoint.Client.Search.Query.ResultTable} resultTable
 * @return {boolean}
 */
Srch.U.isFirstRankedBlock = function(resultTable) {};

/**
 * @param {!Microsoft.SharePoint.Client.Search.Query.ResultTable} resultTable
 * @return {boolean}
 */
Srch.U.isIntentTable = function(resultTable) {};

/**
 * @param {string} id
 * @param {?} type
 * @param {?} properties
 * @param {string} targetElementId
 * @return {?}
 */
Srch.U.createBehavior = function(id, type, properties, targetElementId) {};

/**
 * Uses SPAnimation to animate an element
 * @param {!Element} element
 * @param {?} animationID
 * @param {?} finishFunc
 * @return {void}
 */
Srch.U.animate = function(element, animationID, finishFunc) {};

/**
 * @param {!Element} element
 * @return {void}
 */
Srch.U.hideElement = function(element) {};

/**
 * @param {!Element} element
 * @return {void}
 */
Srch.U.showElement = function(element) {};

/**
 * @param {!Element} element
 * @param {string} offset
 * @return {void}
 */
Srch.U.positionElement = function(element, offset) {};

/**
 * @param {!Element} element
 * @return {void}
 */
Srch.U.resetElement = function(element) {};

/**
 * @param {?} dp
 * @return {boolean}
 */
Srch.U.shouldAnimate = function(dp) {};

/**
 * @param {!Srch.Result} result
 * @param {?} userAction
 * @return {void}
 */
Srch.U.animateResults = function(result, userAction) {};

/**
 * @param {!Array<string>} scriptReferences
 * @param {?} success
 * @param {?} failure
 * @param {number} timeout
 * @return {void}
 */
Srch.U.loadScripts = function(scriptReferences, success, failure, timeout) {};

/**
 * @param {!Array<string>} scripts
 * @param {string} script
 * @return {void}
 */
Srch.U.appendScriptsToLoad = function(scripts, script) {};

/**
 * @param {!Array<string>} scripts
 * @return {void}
 */
Srch.U.registerLoadedScripts = function(scripts) {};

/**
 * Returns HTML for collapsible refiner title
 * @param {string} propertyName
 * @param {string} idPrefix
 * @param {string} title
 * @param {string} iconClass
 * @param {string} customOnClick
 * @return {string}
 */
Srch.U.collapsibleRefinerTitle = function(propertyName, idPrefix, title, iconClass, customOnClick) {};

/**
 * Returns true if current page is osssearchresults.aspx
 * @return {boolean}
 */
Srch.U.isDefaultSiteSearchPage = function() {};

/**
 * Replaces tokens {searchcenterurl}, {contexturl}, {resultsurl}, {defaultpageslistname}, {Locale} and others, and converts URL to server-relative
 * @param {string} url
 * @return {string}
 */
Srch.U.replaceUrlTokens = function(url) {};

/**
 * Adds ctag parameter to the URL and replaces URL tokens
 * @param {string} jsLink
 * @return {string}
 */
Srch.U.urlTokenExpansion = function(jsLink) {};

/**
 * @param {string} templateLink
 * @param {string} relativeLink
 * @return {void}
 */
Srch.U.includeCSS = function(templateLink, relativeLink) {};

/**
 * @param {string} templateLink
 * @param {string} scriptLink
 * @return {void}
 */
Srch.U.includeScript = function(templateLink, scriptLink) {};

/**
 * @param {string} templateLink
 * @param {string} scriptLink
 * @return {void}
 */
Srch.U.includeLanguageScript = function(templateLink, scriptLink) {};

/**
 * @return {boolean}
 */
Srch.U.isSPFSKU = function() {};

/**
 * Retrieves localized string with the specified id
 * @param {string} id
 * @return {string}
 */
Srch.U.loadResource = function(id) {};

/**
 * Retrieves localized string with the specified id
 * @param {string} id
 * @param {function(?): string} templateFunc
 * @return {string}
 */
Srch.U.loadResourceForTemplate = function(id, templateFunc) {};

/**
 * Registers in system resources defined by the dictionary object
 * @param {string} locale
 * @param {!Object<string,string>} dict
 * @return {void}
 */
Srch.U.registerResourceDictionary = function(locale, dict) {};

/**
 * @param {!Element} el
 * @param {string} originalText
 * @param {string} selectText
 * @return {void}
 */
Srch.U.restorePath = function(el, originalText, selectText) {};

/**
 * @param {string} text
 * @param {!Element} el
 * @return {void}
 */
Srch.U.selectPath = function(text, el) {};

/**
 * @param {!Event} e
 * @param {!Element} el
 * @param {string} text
 * @param {string} originalText
 * @return {void}
 */
Srch.U.setPath = function(e, el, text, originalText) {};

/**
 * @param {!Element} el
 * @param {string} originalText
 * @param {string} selectText
 * @return {void}
 */
Srch.U.restoreText = function(el, originalText, selectText) {};

/**
 * @param {string} text
 * @param {!Element} el
 * @return {void}
 */
Srch.U.selectText = function(text, el) {};

/**
 * Renders datetime value in friendly format into element specified by targetElementID
 * @param {!Date} dateTimeSinceUTC
 * @param {string} targetElementID
 * @param {number=} calendarType
 * @return {void}
 */
Srch.U.renderFriendlyTimeIntervalString = function(dateTimeSinceUTC, targetElementID, calendarType) {};

/**
 * Returns human-friendly representation of the datetime value, e.g. "A few seconds ago""
 * @param {!Date} dateTimeSince
 * @param {number} calendarType
 * @return {string}
 */
Srch.U.getFriendlyTimeInterval = function(dateTimeSince, calendarType) {};

/**
 * Gets calendar type according to the current regional settings
 * @return {?}
 */
Srch.U.getCalendarType = function() {};

/**
 * @param {string} url
 * @return {string}
 */
Srch.U.htmlEncodeNonBase64ImageUrl = function(url) {};
/**
 * @constructor
 * @struct
 */
Srch.U.PropNames = function() {};
 /** @type {string} */
Srch.U.PropNames.renderTemplates;
 /** @type {string} */
Srch.U.PropNames.renderTemplateId;
 /** @type {string} */
Srch.U.PropNames.tableType;
 /** @type {string} */
Srch.U.PropNames.queryErrors;
 /** @type {string} */
Srch.U.PropNames.resultTables;
 /** @type {string} */
Srch.U.PropNames.resultRows;
 /** @type {string} */
Srch.U.PropNames.queryId;
 /** @type {string} */
Srch.U.PropNames.properties;
 /** @type {string} */
Srch.U.PropNames.rowCount;
 /** @type {string} */
Srch.U.PropNames.totalRows;
 /** @type {string} */
Srch.U.PropNames.totalRowsIncludingDuplicates;
 /** @type {string} */
Srch.U.PropNames.queryRuleId;
 /** @type {string} */
Srch.U.PropNames.parentTableReference;
 /** @type {string} */
Srch.U.PropNames.isFirstPinnedBlock;
 /** @type {string} */
Srch.U.PropNames.isFirstRankedBlock;
/**
 * @constructor
 * @struct
 */
Srch.U.Ids = function() {};
 /** @type {string} */
Srch.U.Ids.group;
 /** @type {string} */
Srch.U.Ids.groupTitle;
 /** @type {string} */
Srch.U.Ids.groupLink;
 /** @type {string} */
Srch.U.Ids.groupContent;
 /** @type {string} */
Srch.U.Ids.item;
 /** @type {string} */
Srch.U.Ids.body;
 /** @type {string} */
Srch.U.Ids.title;
 /** @type {string} */
Srch.U.Ids.icon;
 /** @type {string} */
Srch.U.Ids.titleLink;
 /** @type {string} */
Srch.U.Ids.summary;
 /** @type {string} */
Srch.U.Ids.path;
 /** @type {string} */
Srch.U.Ids.hover;
 /** @type {string} */
Srch.U.Ids.visualBestBet;
 /** @type {string} */
Srch.U.Ids.preview;
 /** @type {string} */
Srch.U.Ids.deepLinks;
 /** @type {string} */
Srch.U.Ids.members;
 /** @type {string} */
Srch.U.Ids.replies;
 /** @type {string} */
Srch.U.Ids.discussions;
 /** @type {string} */
Srch.U.Ids.likes;
 /** @type {string} */
Srch.U.Ids.postInfo;
/**
 * @constructor
 * @struct
 */
Srch.U.LoadScriptsState = function() {};
 /** @type {?} */
Srch.U.LoadScriptsState.prototype.scriptsToLoad;
 /** @type {number} */
Srch.U.LoadScriptsState.prototype.progress;
 /** @type {?} */
Srch.U.LoadScriptsState.prototype.timeoutHandle;

/** @const */
Srch.U.LoadScriptsProgress = {};
/** @const {number} */
Srch.U.LoadScriptsProgress.loading;
/** @const {number} */
Srch.U.LoadScriptsProgress.success;
/** @const {number} */
Srch.U.LoadScriptsProgress.failure;
/**
 * @constructor
 * @struct
 */
Srch.ScriptApplicationManager = function() {};

/**
 * @return {!Srch.ScriptApplicationManager}
 */
Srch.ScriptApplicationManager.get_current = function() {};

/**
 * @return {!SP.ClientRuntimeContext}
 */
Srch.ScriptApplicationManager.get_clientRuntimeContext = function() {};

/**
 * Returns server-relative link to _layouts/EditUserPref.aspx
 * @return {string}
 */
Srch.ScriptApplicationManager.prototype.get_preferencesUrl = function() {};

/**
 * Returns server-relative link to _layouts/manageresulttypes.aspx
 * @return {string}
 */
Srch.ScriptApplicationManager.prototype.get_resultTypesUrl = function() {};

/**
 * Returns server-relative link to _layouts/DesignDisplayTemplates.aspx
 * @return {string}
 */
Srch.ScriptApplicationManager.prototype.get_displayTemplatesUrl = function() {};

/**
 * Returns server-relative link to _layouts/listqueryrules.aspx
 * @return {string}
 */
Srch.ScriptApplicationManager.prototype.get_queryRulesUrl = function() {};

/**
 * Returns server-relative link to _layouts/manageresultsources.aspx
 * @return {string}
 */
Srch.ScriptApplicationManager.prototype.get_resultSourcesUrl = function() {};

/**
 * Returns absolute URL of the current page (without ? and # parts)
 * @return {string}
 */
Srch.ScriptApplicationManager.prototype.get_pagePath = function() {};

/**
 * Adds handler for the preload event
 * @param {function(?, ?): void} handlerFunction
 * @return {void}
 */
Srch.ScriptApplicationManager.prototype.add_preLoad = function(handlerFunction) {};

/**
 * Removes handler for the preload event
 * @param {function(?, ?): void} handlerFunction
 * @return {void}
 */
Srch.ScriptApplicationManager.prototype.remove_preLoad = function(handlerFunction) {};

/**
 * Raises the preload event
 * @return {void}
 */
Srch.ScriptApplicationManager.prototype.raisePreLoadEvent = function() {};

/**
 * Adds handler for the load event
 * @param {function(?, ?): void} handlerFunction
 * @return {void}
 */
Srch.ScriptApplicationManager.prototype.add_load = function(handlerFunction) {};

/**
 * Removes handler for the load event
 * @param {function(?, ?): void} handlerFunction
 * @return {void}
 */
Srch.ScriptApplicationManager.prototype.remove_load = function(handlerFunction) {};

/**
 * Raises the load event
 * @return {void}
 */
Srch.ScriptApplicationManager.prototype.raiseLoadEvent = function() {};

/**
 * Adds handler for the postload event
 * @param {function(?, ?): void} handlerFunction
 * @return {void}
 */
Srch.ScriptApplicationManager.prototype.add_postLoad = function(handlerFunction) {};

/**
 * Removes handler for the postload event
 * @param {function(?, ?): void} handlerFunction
 * @return {void}
 */
Srch.ScriptApplicationManager.prototype.remove_postLoad = function(handlerFunction) {};

/**
 * Raises the postload event
 * @return {void}
 */
Srch.ScriptApplicationManager.prototype.raisePostLoadEvent = function() {};

/**
 * @return {void}
 */
Srch.ScriptApplicationManager.prototype.initialize = function() {};

/**
 * @return {void}
 */
Srch.ScriptApplicationManager.prototype.dispose = function() {};

/**
 * Registers DisplayControl, DataProvider or SearchBox in the system.
 * After registration the controls will be correctly processed in the page search context.
 * @param {(!Srch.DataProvider|!Srch.SearchBox|!Srch.DisplayControl)} clientControl
 * @return {void}
 */
Srch.ScriptApplicationManager.prototype.registerClientControl = function(clientControl) {};

/**
 * Puts specified hash-key address into the current page location.
 * @param {string} url The hash-key, e.g. '#k=test'
 * @return {void}
 */
Srch.ScriptApplicationManager.prototype.navigateTo = function(url) {};

/**
 * Gets the current search session ID from the cookies (if session ID does not exist in the cookies yet - it will be added)
 * @return {void}
 */
Srch.ScriptApplicationManager.prototype.get_searchSessionID = function() {};
/**
 * @constructor
 * @struct
 */
Srch.Res = function() {};
 /** @type {string} */
Srch.Res.sb_ResultsPageTitle;
 /** @type {string} */
Srch.Res.sb_EmptyQueryWarning;
 /** @type {string} */
Srch.Res.sb_InvalidResultPageURL;
 /** @type {string} */
Srch.Res.sb_SitePrompt;
 /** @type {string} */
Srch.Res.sb_Prompt;
 /** @type {string} */
Srch.Res.sb_Prompt_NavNode;
 /** @type {string} */
Srch.Res.sb_GoSearch;
 /** @type {string} */
Srch.Res.sb_GoNav;
 /** @type {string} */
Srch.Res.sb_AdvancedLink;
 /** @type {string} */
Srch.Res.sb_PreferencesLink;
 /** @type {string} */
Srch.Res.sb_AccessKey;
 /** @type {string} */
Srch.Res.sb_SearchInProgress;
 /** @type {string} */
Srch.Res.qs_PersonalResultTitleSingular;
 /** @type {string} */
Srch.Res.qs_PersonalResultTitlePlural;
 /** @type {string} */
Srch.Res.qs_NameSuggestionsTitle;
 /** @type {string} */
Srch.Res.dp_ScriptLoadFailed;
 /** @type {string} */
Srch.Res.rf_EmptyRefinement;
 /** @type {string} */
Srch.Res.rf_RefinementTitle;
 /** @type {string} */
Srch.Res.rf_RefineBy;
 /** @type {string} */
Srch.Res.rf_All;
 /** @type {string} */
Srch.Res.rf_RefineByAuthorGoButton;
 /** @type {string} */
Srch.Res.rf_Apply;
 /** @type {string} */
Srch.Res.rf_AddProperty;
 /** @type {string} */
Srch.Res.rs_ResultsTitle;
 /** @type {string} */
Srch.Res.rs_MoveToPage;
 /** @type {string} */
Srch.Res.rs_MoveToPrevPage;
 /** @type {string} */
Srch.Res.rs_MoveToNextPage;
 /** @type {string} */
Srch.Res.rs_GroupMoreLink;
 /** @type {string} */
Srch.Res.rs_Hide_Results;
 /** @type {string} */
Srch.Res.qb_GetRecItems;
 /** @type {string} */
Srch.Res.qb_ScopeRecItems;
 /** @type {string} */
Srch.Res.qb_GetFillIn;
 /** @type {string} */
Srch.Res.qb_ShowRecsOnly;
 /** @type {string} */
Srch.Res.qb_FillInPopular;
 /** @type {string} */
Srch.Res.qb_FillInPopularScope;
 /** @type {string} */
Srch.Res.qb_FillInKeywords;
 /** @type {string} */
Srch.Res.qb_NoCollapseString;
 /** @type {string} */
Srch.Res.qb_ShowAllCollapseString;
 /** @type {string} */
Srch.Res.qb_ShowRefinersOnly;
 /** @type {string} */
Srch.Res.qb_RecsFromURLToken;
 /** @type {string} */
Srch.Res.qb_Remove;
 /** @type {string} */
Srch.Res.qb_FallbackResultTitle;
 /** @type {string} */
Srch.Res.rf_DefaultNumberLabels_min;
 /** @type {string} */
Srch.Res.rf_DefaultNumberLabels_max;
 /** @type {string} */
Srch.Res.rf_DefaultNumberLabels_range;
 /** @type {string} */
Srch.Res.rf_DefaultNumberLabels_value;
 /** @type {string} */
Srch.Res.rf_DefaultDateRangeLabels_min;
 /** @type {string} */
Srch.Res.rf_DefaultDateRangeLabels_max;
 /** @type {string} */
Srch.Res.rf_DefaultDateRangeLabels_range;
 /** @type {string} */
Srch.Res.rf_DefaultDateRangeLabels_value;
 /** @type {string} */
Srch.Res.rf_DefaultDateBoundaryLabels_0;
 /** @type {string} */
Srch.Res.rf_DefaultDateBoundaryLabels_1;
 /** @type {string} */
Srch.Res.rf_DefaultDateBoundaryLabels_2;
 /** @type {string} */
Srch.Res.rf_DefaultDateBoundaryLabels_3;
 /** @type {string} */
Srch.Res.rf_RangeBoundariesAnyValue;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_Author;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_AuthorOWSUSER;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_Write;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_LastModifiedTime;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_owstaxidmetadataalltagsinfo;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_owsmetadatafacetinfo;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_languages;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_ContentType;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_Size;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_UrlDepth;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_People;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_FileType;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_FileExtension;
 /** @type {string} */
Srch.Res.rf_RefinementLabel_More;
 /** @type {string} */
Srch.Res.rf_ShowMoreResults_Tooltip;
 /** @type {string} */
Srch.Res.rf_RefinementLabel_Less;
 /** @type {string} */
Srch.Res.rf_RefinementLabel_EnterName;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_CreatedBy;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_from;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_recipients;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_subject;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_Kind;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_ContentClass;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_WebTemplate;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_participants;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_AttachmentType;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_BaseOfficeLocation;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_companies;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_ContentTypeId;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_Created;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_Department;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_PeopleKeywords;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_DisplayAuthor;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_format;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_ImageDateCreated;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_JobTitle;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_Location;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_locations;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_ManagedProperties;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_MediaDuration;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_PeopleInMedia;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_personnames;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_PictureHeight;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_PictureWidth;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_PostAuthor;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_recommendedfor;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_Responsibilities;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_SharedWithInternal;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_Site;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_sitename;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_Tags;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_Title;
 /** @type {string} */
Srch.Res.rf_ResultTypeRefinerValue_MSAccess;
 /** @type {string} */
Srch.Res.rf_ResultTypeRefinerValue_AdobePDF;
 /** @type {string} */
Srch.Res.rf_ResultTypeRefinerValue_Assignment;
 /** @type {string} */
Srch.Res.rf_ResultTypeRefinerValue_Archive;
 /** @type {string} */
Srch.Res.rf_ResultTypeRefinerValue_Blog;
 /** @type {string} */
Srch.Res.rf_ResultTypeRefinerValue_Book;
 /** @type {string} */
Srch.Res.rf_ResultTypeRefinerValue_Community;
 /** @type {string} */
Srch.Res.rf_ResultTypeRefinerValue_Course;
 /** @type {string} */
Srch.Res.rf_ResultTypeRefinerValue_Discussion;
 /** @type {string} */
Srch.Res.rf_ResultTypeRefinerValue_Email;
 /** @type {string} */
Srch.Res.rf_ResultTypeRefinerValue_MSExcel;
 /** @type {string} */
Srch.Res.rf_ResultTypeRefinerValue_Image;
 /** @type {string} */
Srch.Res.rf_ResultTypeRefinerValue_Lesson;
 /** @type {string} */
Srch.Res.rf_ResultTypeRefinerValue_LotusNotes;
 /** @type {string} */
Srch.Res.rf_ResultTypeRefinerValue_NewsfeedPost;
 /** @type {string} */
Srch.Res.rf_ResultTypeRefinerValue_MSOneNote;
 /** @type {string} */
Srch.Res.rf_ResultTypeRefinerValue_MSPowerPoint;
 /** @type {string} */
Srch.Res.rf_ResultTypeRefinerValue_MSProject;
 /** @type {string} */
Srch.Res.rf_ResultTypeRefinerValue_MSPublisher;
 /** @type {string} */
Srch.Res.rf_ResultTypeRefinerValue_SharePointSite;
 /** @type {string} */
Srch.Res.rf_ResultTypeRefinerValue_Task;
 /** @type {string} */
Srch.Res.rf_ResultTypeRefinerValue_TeamSite;
 /** @type {string} */
Srch.Res.rf_ResultTypeRefinerValue_Text;
 /** @type {string} */
Srch.Res.rf_ResultTypeRefinerValue_Video;
 /** @type {string} */
Srch.Res.rf_ResultTypeRefinerValue_Visio;
 /** @type {string} */
Srch.Res.rf_ResultTypeRefinerValue_Wiki;
 /** @type {string} */
Srch.Res.rf_ResultTypeRefinerValue_Webpage;
 /** @type {string} */
Srch.Res.rf_ResultTypeRefinerValue_MSWord;
 /** @type {string} */
Srch.Res.rf_ResultTypeRefinerValue_XML;
 /** @type {string} */
Srch.Res.rf_OtherValue;
 /** @type {string} */
Srch.Res.rf_ClearAll;
 /** @type {string} */
Srch.Res.cc_err_WebPartErrorMessageDisplayHeader;
 /** @type {string} */
Srch.Res.cc_err_DataErrorMessageDisplayHeader;
 /** @type {string} */
Srch.Res.cc_err_RenderingErrorMessageDisplayHeader;
 /** @type {string} */
Srch.Res.cc_err_TemplateNotFoundMessage;
 /** @type {string} */
Srch.Res.cc_err_HiddenWithNoResultsWarningMessage;
 /** @type {string} */
Srch.Res.cc_err_ShowMessageDetails;
 /** @type {string} */
Srch.Res.cc_err_HideMessageDetails;
 /** @type {string} */
Srch.Res.cc_err_CorrelationIdMessage;
 /** @type {string} */
Srch.Res.cc_err_CustomLocStringWarningDisplayHeaderFormat;
 /** @type {string} */
Srch.Res.cc_err_NoCustomLoadedLocStringWarningDisplayHeaderFormat;
 /** @type {string} */
Srch.Res.cc_err_MalformedHeader;
 /** @type {string} */
Srch.Res.cc_err_QueryThrottledDetailsHeader;
 /** @type {string} */
Srch.Res.cc_ValueRenderer_FileSizeKilobyte;
 /** @type {string} */
Srch.Res.cc_ValueRenderer_FileSizeMegabyte;
 /** @type {string} */
Srch.Res.cc_ValueRenderer_FileSizeGigabyte;
 /** @type {string} */
Srch.Res.cc_ValueRenderer_BooleanYes;
 /** @type {string} */
Srch.Res.cc_ValueRenderer_BooleanNo;
 /** @type {string} */
Srch.Res.qb_SortTab_ThenBy;
 /** @type {string} */
Srch.Res.qb_SortTab_ChangeRankingWhen;
 /** @type {string} */
Srch.Res.qb_SortTab_OrWhen;
 /** @type {string} */
Srch.Res.qb_TestQueryTab_ShowAdvanced;
 /** @type {string} */
Srch.Res.qb_TestQueryTab_HideAdvanced;
 /** @type {string} */
Srch.Res.recs_ControlTitle;
 /** @type {string} */
Srch.Res.recs_ShowDetails;
 /** @type {string} */
Srch.Res.recs_SaveLink;
 /** @type {string} */
Srch.Res.recs_Open;
 /** @type {string} */
Srch.Res.recs_Recommended;
 /** @type {string} */
Srch.Res.recs_Fillin;
 /** @type {string} */
Srch.Res.recs_LastEditedBy;
 /** @type {string} */
Srch.Res.recs_Location;
 /** @type {string} */
Srch.Res.recs_AltIcon;
 /** @type {string} */
Srch.Res.pkr_CatalogPickerMoreLink;
 /** @type {string} */
Srch.Res.pkr_CatalogPickerMoreLinkToolTip;
 /** @type {string} */
Srch.Res.pkr_CatalogPickerSelectLinkToolTip;
 /** @type {string} */
Srch.Res.item_CopyLink;
 /** @type {string} */
Srch.Res.item_Tooltip_CopyLink;
 /** @type {string} */
Srch.Res.item_Alt_Preview;
 /** @type {string} */
Srch.Res.hp_Tooltip_Close;
 /** @type {string} */
Srch.Res.hp_Size;
 /** @type {string} */
Srch.Res.hp_Views_Singular;
 /** @type {string} */
Srch.Res.hp_Views_Plural;
 /** @type {string} */
Srch.Res.hp_ViewsLifeTime;
 /** @type {string} */
Srch.Res.hp_Popularity;
 /** @type {string} */
Srch.Res.hp_PopularityLifeTimePlural;
 /** @type {string} */
Srch.Res.hp_PopularityLifeTimePluralAndRecentPlural;
 /** @type {string} */
Srch.Res.hp_PopularityLifeTimeSingular;
 /** @type {string} */
Srch.Res.hp_PopularityLifeTimeSingularAndRecentSingular;
 /** @type {string} */
Srch.Res.hp_PopularityLifeTimePluralAndRecentSingular;
 /** @type {string} */
Srch.Res.hp_Tooltip_ViewsLifeTime;
 /** @type {string} */
Srch.Res.hp_Tooltip_ViewsRecent;
 /** @type {string} */
Srch.Res.hp_ChangedByAuthorDate;
 /** @type {string} */
Srch.Res.hp_Tooltip_Views;
 /** @type {string} */
Srch.Res.hp_LastModified;
 /** @type {string} */
Srch.Res.hp_Tooltip_LastModified;
 /** @type {string} */
Srch.Res.hp_RecentlyEdited;
 /** @type {string} */
Srch.Res.hp_Tooltip_Contributors;
 /** @type {string} */
Srch.Res.hp_Authors2;
 /** @type {string} */
Srch.Res.hp_Authors3;
 /** @type {string} */
Srch.Res.hp_Authors4;
 /** @type {string} */
Srch.Res.hp_Authors5Singular;
 /** @type {string} */
Srch.Res.hp_Authors5Plural;
 /** @type {string} */
Srch.Res.hp_RecentlyEdited_eDiscovery;
 /** @type {string} */
Srch.Res.hp_Tooltip_RecentlyEdited_More;
 /** @type {string} */
Srch.Res.hp_RecentlyEdited_More;
 /** @type {string} */
Srch.Res.hp_ViewDuplicates;
 /** @type {string} */
Srch.Res.hp_Tooltip_ViewDuplicates;
 /** @type {string} */
Srch.Res.hp_ViewLibrary;
 /** @type {string} */
Srch.Res.hp_Tooltip_ViewLibrary;
 /** @type {string} */
Srch.Res.hp_Send_Title;
 /** @type {string} */
Srch.Res.hp_Send_Open;
 /** @type {string} */
Srch.Res.hp_Send_OpenInClient;
 /** @type {string} */
Srch.Res.hp_Send_OpenInWeb;
 /** @type {string} */
Srch.Res.hp_Send_ViewRelated;
 /** @type {string} */
Srch.Res.hp_Send;
 /** @type {string} */
Srch.Res.hp_Tooltip_Send;
 /** @type {string} */
Srch.Res.hp_OpenInClient;
 /** @type {string} */
Srch.Res.hp_Edit;
 /** @type {string} */
Srch.Res.hp_Follow;
 /** @type {string} */
Srch.Res.hp_NoData;
 /** @type {string} */
Srch.Res.hp_Tooltip_OpenInClient;
 /** @type {string} */
Srch.Res.hp_Alt_ImagePreview;
 /** @type {string} */
Srch.Res.hp_PictureDimensions;
 /** @type {string} */
Srch.Res.hp_PictureHeightWidth;
 /** @type {string} */
Srch.Res.hp_DateTaken;
 /** @type {string} */
Srch.Res.hp_SectionHeadings;
 /** @type {string} */
Srch.Res.hp_Alt_SiteLogo;
 /** @type {string} */
Srch.Res.hp_SiteDescription;
 /** @type {string} */
Srch.Res.hp_Open;
 /** @type {string} */
Srch.Res.hp_Tooltip_Open;
 /** @type {string} */
Srch.Res.hp_Tooltip_Follow;
 /** @type {string} */
Srch.Res.hp_Tooltip_StopFollowing;
 /** @type {string} */
Srch.Res.tprprt_Recent;
 /** @type {string} */
Srch.Res.tprprt_Lifetime;
 /** @type {string} */
Srch.Res.tprprt_excel_report_entrypoint;
 /** @type {string} */
Srch.Res.qb_token_Equals;
 /** @type {string} */
Srch.Res.qb_token_NotEquals;
 /** @type {string} */
Srch.Res.qb_token_GreaterThan;
 /** @type {string} */
Srch.Res.qb_token_LessThan;
 /** @type {string} */
Srch.Res.qb_token_Contains;
 /** @type {string} */
Srch.Res.qb_token_NotContains;
 /** @type {string} */
Srch.Res.qb_token_ContainsStartsWith;
 /** @type {string} */
Srch.Res.qb_token_StartsWith;
 /** @type {string} */
Srch.Res.qb_token_NotStartsWith;
 /** @type {string} */
Srch.Res.qb_token_SiteColletion;
 /** @type {string} */
Srch.Res.qb_token_Site;
 /** @type {string} */
Srch.Res.qb_token_Page;
 /** @type {string} */
Srch.Res.qb_token_Topic;
 /** @type {string} */
Srch.Res.qb_token_TopicIdWithChildren;
 /** @type {string} */
Srch.Res.qb_token_UserName;
 /** @type {string} */
Srch.Res.qb_token_PreferredContentLanguage;
 /** @type {string} */
Srch.Res.qb_token_Date;
 /** @type {string} */
Srch.Res.qb_token_SearchBoxQuery;
 /** @type {string} */
Srch.Res.qb_token_SearchTerms;
 /** @type {string} */
Srch.Res.qb_token_QueryString;
 /** @type {string} */
Srch.Res.qb_token_URLToken;
 /** @type {string} */
Srch.Res.qb_token_PageField;
 /** @type {string} */
Srch.Res.qb_token_SiteLocale;
 /** @type {string} */
Srch.Res.qb_token_DisplayLanguage;
 /** @type {string} */
Srch.Res.qb_token_OnlySites;
 /** @type {string} */
Srch.Res.qb_token_OnlyLists;
 /** @type {string} */
Srch.Res.qb_token_OnlyListItems;
 /** @type {string} */
Srch.Res.qb_path_SiteCollection;
 /** @type {string} */
Srch.Res.qb_path_Site;
 /** @type {string} */
Srch.Res.qb_path_Page;
 /** @type {string} */
Srch.Res.qb_path_List;
 /** @type {string} */
Srch.Res.qb_path_Catalog;
 /** @type {string} */
Srch.Res.qb_path_QueryString;
 /** @type {string} */
Srch.Res.qb_path_URL_token;
 /** @type {string} */
Srch.Res.qb_path_URL;
 /** @type {string} */
Srch.Res.qb_path_None;
 /** @type {string} */
Srch.Res.qb_ContentType_Article;
 /** @type {string} */
Srch.Res.qb_ContentType_Audio;
 /** @type {string} */
Srch.Res.qb_ContentType_DocSet;
 /** @type {string} */
Srch.Res.qb_ContentType_Page;
 /** @type {string} */
Srch.Res.qb_ContentType_Picture;
 /** @type {string} */
Srch.Res.qb_ContentType_Report;
 /** @type {string} */
Srch.Res.qb_ContentType_Task;
 /** @type {string} */
Srch.Res.qb_ContentType_Video;
 /** @type {string} */
Srch.Res.qb_ContentType_WikiPage;
 /** @type {string} */
Srch.Res.qb_PathControl_ChooseQueryString;
 /** @type {string} */
Srch.Res.qb_PathControl_ChooseURL;
 /** @type {string} */
Srch.Res.qb_PathControl_ChooseTag;
 /** @type {string} */
Srch.Res.qb_PathControl_ChooseTag_None;
 /** @type {string} */
Srch.Res.qb_PathControl_ChooseTag_ThisTag;
 /** @type {string} */
Srch.Res.qb_PathControl_ChooseTag_Topic;
 /** @type {string} */
Srch.Res.qb_PathControl_ChooseTag_SubTopic;
 /** @type {string} */
Srch.Res.qb_UserQuery_TypeQuery;
 /** @type {string} */
Srch.Res.qb_UserQuery_Properties;
 /** @type {string} */
Srch.Res.qb_UserQuery_AddToken;
 /** @type {string} */
Srch.Res.qb_UserQuery_ChooseContentType;
 /** @type {string} */
Srch.Res.qb_UserQuery_AddAdditionalFilter;
 /** @type {string} */
Srch.Res.qb_UserQuery_ChooseSort;
 /** @type {string} */
Srch.Res.qb_UserQuery_PickCatalog2;
 /** @type {string} */
Srch.Res.qb_UserQuery_ConfigureCatalog;
 /** @type {string} */
Srch.Res.qb_UserQuery_ManualValue;
 /** @type {string} */
Srch.Res.qb_UserQuery_SelectProperty;
 /** @type {string} */
Srch.Res.qb_UserQuery_SelectValue;
 /** @type {string} */
Srch.Res.qb_UserQuery_ShowAllProperties;
 /** @type {string} */
Srch.Res.qb_QueryType_UserQuery;
 /** @type {string} */
Srch.Res.qb_QueryType_Latest;
 /** @type {string} */
Srch.Res.qb_QueryType_ContentType;
 /** @type {string} */
Srch.Res.qb_QueryType_RecommendedItems;
 /** @type {string} */
Srch.Res.qb_QueryType_Popular;
 /** @type {string} */
Srch.Res.qb_QueryType_Video;
 /** @type {string} */
Srch.Res.qb_QueryType_Catalog;
 /** @type {string} */
Srch.Res.qb_Error_SourceIdInvalid;
 /** @type {string} */
Srch.Res.qb_Tab_FilterBy;
 /** @type {string} */
Srch.Res.qb_Tab_QueryHelper;
 /** @type {string} */
Srch.Res.qb_Tab_SortBy;
 /** @type {string} */
Srch.Res.qb_Tab_TestQuery;
 /** @type {string} */
Srch.Res.qb_Tab_Settings;
 /** @type {string} */
Srch.Res.qb_NotApplicable;
 /** @type {string} */
Srch.Res.qb_ComplexObject;
 /** @type {string} */
Srch.Res.qb_PreviewResult_NoTemplateVariables;
 /** @type {string} */
Srch.Res.qb_PreviewResult_CouldNotResolveTemplateVariables;
 /** @type {string} */
Srch.Res.qb_PreviewResult_ErrorExpandTokens;
 /** @type {string} */
Srch.Res.qb_PreviewResult_EmptyQuery;
 /** @type {string} */
Srch.Res.searchResult_NoResult;
 /** @type {string} */
Srch.Res.qb_CatalogPicker_Title;
 /** @type {string} */
Srch.Res.qb_UseDefinedSort;
 /** @type {string} */
Srch.Res.hp_Duration;
 /** @type {string} */
Srch.Res.hp_PeopleInVideo;
 /** @type {string} */
Srch.Res.hp_PostedBy;
 /** @type {string} */
Srch.Res.hp_VideoDescription;
 /** @type {string} */
Srch.Res.hp_GoToVideoPage;
 /** @type {string} */
Srch.Res.item_Community_Member;
 /** @type {string} */
Srch.Res.item_Community_Members;
 /** @type {string} */
Srch.Res.item_Community_MemberLabel;
 /** @type {string} */
Srch.Res.item_Community_MembersLabel;
 /** @type {string} */
Srch.Res.item_Reply;
 /** @type {string} */
Srch.Res.item_Replies;
 /** @type {string} */
Srch.Res.item_ReplyLabel;
 /** @type {string} */
Srch.Res.item_RepliesLabel;
 /** @type {string} */
Srch.Res.item_NoReplies;
 /** @type {string} */
Srch.Res.item_Like;
 /** @type {string} */
Srch.Res.item_Likes;
 /** @type {string} */
Srch.Res.item_NoLikes;
 /** @type {string} */
Srch.Res.item_RepliesAndLikes;
 /** @type {string} */
Srch.Res.item_MoreThan;
 /** @type {string} */
Srch.Res.item_DefaultTitle;
 /** @type {string} */
Srch.Res.item_BestReply;
 /** @type {string} */
Srch.Res.item_postDate;
 /** @type {string} */
Srch.Res.item_postAuthor;
 /** @type {string} */
Srch.Res.item_postAuthorDate;
 /** @type {string} */
Srch.Res.item_replyDate;
 /** @type {string} */
Srch.Res.item_replyAuthor;
 /** @type {string} */
Srch.Res.item_replyAuthorDate;
 /** @type {string} */
Srch.Res.item_Community_Discussion;
 /** @type {string} */
Srch.Res.item_Community_Discussions;
 /** @type {string} */
Srch.Res.item_Community_DiscussionLabel;
 /** @type {string} */
Srch.Res.item_Community_DiscussionsLabel;
 /** @type {string} */
Srch.Res.hp_Discussion;
 /** @type {string} */
Srch.Res.hp_DiscussionCategory;
 /** @type {string} */
Srch.Res.hp_Reply;
 /** @type {string} */
Srch.Res.hp_ReplyCategory;
 /** @type {string} */
Srch.Res.hp_PopularDiscussions;
 /** @type {string} */
Srch.Res.hp_OriginalPost;
 /** @type {string} */
Srch.Res.hp_RecentReplies;
 /** @type {string} */
Srch.Res.hp_ViewDiscussion;
 /** @type {string} */
Srch.Res.hp_ViewConversation;
 /** @type {string} */
Srch.Res.hp_Community;
 /** @type {string} */
Srch.Res.hp_VisitCommunity;
 /** @type {string} */
Srch.Res.hp_MicroBlog;
 /** @type {string} */
Srch.Res.item_MicroBlog_Reply;
 /** @type {string} */
Srch.Res.item_MicroBlog_Replies;
 /** @type {string} */
Srch.Res.item_MicroBlog_Like;
 /** @type {string} */
Srch.Res.item_MicroBlog_Likes;
 /** @type {string} */
Srch.Res.item_MicroBlog_NoReplies;
 /** @type {string} */
Srch.Res.item_MicroBlog_SeeFullConversation;
 /** @type {string} */
Srch.Res.item_MicroBlog_RootPostTitle;
 /** @type {string} */
Srch.Res.item_People_Responsibilities;
 /** @type {string} */
Srch.Res.item_People_Skills;
 /** @type {string} */
Srch.Res.item_People_PastProjects;
 /** @type {string} */
Srch.Res.item_People_Interests;
 /** @type {string} */
Srch.Res.item_People_Schools;
 /** @type {string} */
Srch.Res.item_People_Memberships;
 /** @type {string} */
Srch.Res.item_People_EditProfileLink;
 /** @type {string} */
Srch.Res.item_People_SelfSearchFrequency;
 /** @type {string} */
Srch.Res.item_People_SelfSearchFrequency_ViewsMonths_Singular;
 /** @type {string} */
Srch.Res.item_People_SelfSearchFrequency_ViewsMonths_Plural;
 /** @type {string} */
Srch.Res.item_People_SelfSearchFrequency_ViewsWeeks_Singular;
 /** @type {string} */
Srch.Res.item_People_SelfSearchFrequency_ViewsWeeks_Plural;
 /** @type {string} */
Srch.Res.item_People_SelfSearchKeywords;
 /** @type {string} */
Srch.Res.item_People_LastModified;
 /** @type {string} */
Srch.Res.item_People_NoPresenceAvailable;
 /** @type {string} */
Srch.Res.hp_PeopleItem_Skills;
 /** @type {string} */
Srch.Res.hp_PeopleItem_PastProjects;
 /** @type {string} */
Srch.Res.hp_PeopleItem_Interests;
 /** @type {string} */
Srch.Res.hp_PeopleItem_Schools;
 /** @type {string} */
Srch.Res.hp_PeopleItem_Summary;
 /** @type {string} */
Srch.Res.hp_PeopleItem_Memberships;
 /** @type {string} */
Srch.Res.hp_PeopleItem_Authorship;
 /** @type {string} */
Srch.Res.hp_PeopleItem_RelatedThrough;
 /** @type {string} */
Srch.Res.hp_PeopleItem_MoreItems;
 /** @type {string} */
Srch.Res.hp_PeopleItem_Related;
 /** @type {string} */
Srch.Res.hp_PeopleItem_NoInformationAvailable;
 /** @type {string} */
Srch.Res.hp_PeopleItem_ViewProfile;
 /** @type {string} */
Srch.Res.hp_WebPageItem_Results;
 /** @type {string} */
Srch.Res.hp_WebPageItem_MoreResults_Label;
 /** @type {string} */
Srch.Res.rs_Preferences;
 /** @type {string} */
Srch.Res.rs_Advanced;
 /** @type {string} */
Srch.Res.rs_NoResult;
 /** @type {string} */
Srch.Res.rs_SingleResultCount;
 /** @type {string} */
Srch.Res.rs_ResultCount;
 /** @type {string} */
Srch.Res.rs_ApproximateResultCount;
 /** @type {string} */
Srch.Res.rs_EdiscoveryTopResultCount;
 /** @type {string} */
Srch.Res.rs_UpscopeTitle;
 /** @type {string} */
Srch.Res.rs_Upscope;
 /** @type {string} */
Srch.Res.rs_DidYouMean;
 /** @type {string} */
Srch.Res.rs_Edit_ResultSourcesTitle;
 /** @type {string} */
Srch.Res.rs_Edit_ResultTypesTitle;
 /** @type {string} */
Srch.Res.rs_Edit_QueryRulesTitle;
 /** @type {string} */
Srch.Res.rs_Edit_ResultSourcesDescription;
 /** @type {string} */
Srch.Res.rs_Edit_ResultSources;
 /** @type {string} */
Srch.Res.rs_Edit_ResultTypesDescription;
 /** @type {string} */
Srch.Res.rs_Edit_ResultType;
 /** @type {string} */
Srch.Res.rs_Edit_DisplayTemplate;
 /** @type {string} */
Srch.Res.rs_Edit_QueryRulesDescription;
 /** @type {string} */
Srch.Res.rs_Edit_QueryRules;
 /** @type {string} */
Srch.Res.rs_Edit_PromotedTitle;
 /** @type {string} */
Srch.Res.rs_Edit_RankedTitle;
 /** @type {string} */
Srch.Res.rs_Edit_PromotedDescription;
 /** @type {string} */
Srch.Res.rs_Edit_RankedDescription;
 /** @type {string} */
Srch.Res.rs_Edit_ConfigureSearchResults;
 /** @type {string} */
Srch.Res.rs_Edit_ConfigureSearchResults_Link;
 /** @type {string} */
Srch.Res.rs_NoResultsTitle;
 /** @type {string} */
Srch.Res.rs_NoResultsMessageWhenSearchSkipped;
 /** @type {string} */
Srch.Res.rs_NoResultsSuggestions;
 /** @type {string} */
Srch.Res.rs_NoResultsSpelling;
 /** @type {string} */
Srch.Res.rs_NoResultsDifferentTerms;
 /** @type {string} */
Srch.Res.rs_NoResultsGeneralTerms;
 /** @type {string} */
Srch.Res.rs_NoResultsFewerTerms;
 /** @type {string} */
Srch.Res.rs_NoResultsRefiners;
 /** @type {string} */
Srch.Res.rs_NoResultsTips;
 /** @type {string} */
Srch.Res.rs_NoResultsTips_Link;
 /** @type {string} */
Srch.Res.us_NoTerm_Error;
 /** @type {string} */
Srch.Res.u_ScriptLoadFail;
 /** @type {string} */
Srch.Res.u_ScriptLoadFailForViewer;
 /** @type {string} */
Srch.Res.item_NoImageMessage;
 /** @type {string} */
Srch.Res.control_NoResultsDisplayMode;
 /** @type {string} */
Srch.Res.control_NoResultsEditMode;
 /** @type {string} */
Srch.Res.file_CSS;
 /** @type {string} */
Srch.Res.file_Help;
 /** @type {string} */
Srch.Res.file_Installer;
 /** @type {string} */
Srch.Res.file_JavaScript;
 /** @type {string} */
Srch.Res.file_Log;
 /** @type {string} */
Srch.Res.file_Mail;
 /** @type {string} */
Srch.Res.file_Access;
 /** @type {string} */
Srch.Res.file_Excel;
 /** @type {string} */
Srch.Res.file_InfoPath;
 /** @type {string} */
Srch.Res.file_OneNote;
 /** @type {string} */
Srch.Res.file_PowerPoint;
 /** @type {string} */
Srch.Res.file_Project;
 /** @type {string} */
Srch.Res.file_Publisher;
 /** @type {string} */
Srch.Res.file_SPDesigner;
 /** @type {string} */
Srch.Res.file_Visio;
 /** @type {string} */
Srch.Res.file_Word;
 /** @type {string} */
Srch.Res.file_XPS;
 /** @type {string} */
Srch.Res.file_Audio;
 /** @type {string} */
Srch.Res.file_RTF;
 /** @type {string} */
Srch.Res.file_Text;
 /** @type {string} */
Srch.Res.file_WebPage;
 /** @type {string} */
Srch.Res.file_XML;
 /** @type {string} */
Srch.Res.file_XSL;
 /** @type {string} */
Srch.Res.file_Zip;
 /** @type {string} */
Srch.Res.ct_Folder;
 /** @type {string} */
Srch.Res.ct_Image;
 /** @type {string} */
Srch.Res.file_Document;
 /** @type {string} */
Srch.Res.cc_sts_list_announcements;
 /** @type {string} */
Srch.Res.cc_sts_list_events;
 /** @type {string} */
Srch.Res.cc_sts_list_contacts;
 /** @type {string} */
Srch.Res.cc_sts_list_discussionboard;
 /** @type {string} */
Srch.Res.cc_sts_list_documentlibrary;
 /** @type {string} */
Srch.Res.cc_sts_listitem_documentlibrary;
 /** @type {string} */
Srch.Res.cc_sts_list_links;
 /** @type {string} */
Srch.Res.cc_sts_list;
 /** @type {string} */
Srch.Res.cc_sts_listitem;
 /** @type {string} */
Srch.Res.cc_sts_list_picturelibrary;
 /** @type {string} */
Srch.Res.cc_sts_listitem_picturelibrary;
 /** @type {string} */
Srch.Res.cc_sts_web;
 /** @type {string} */
Srch.Res.cc_sts_site;
 /** @type {string} */
Srch.Res.cc_sts_list_survey;
 /** @type {string} */
Srch.Res.cc_sts_list_tasks;
 /** @type {string} */
Srch.Res.cc_sts_list_xmlform;
 /** @type {string} */
Srch.Res.rs_SortDescription;
 /** @type {string} */
Srch.Res.rs_SocialDistanceSort;
 /** @type {string} */
Srch.Res.rs_LanguageDescription;
 /** @type {string} */
Srch.Res.rs_LanguagePreferences;
 /** @type {string} */
Srch.Res.rs_PreferredSearchLanguage;
 /** @type {string} */
Srch.Res.rs_MoreLanguages;
 /** @type {string} */
Srch.Res.rs_SearchScope;
 /** @type {string} */
Srch.Res.rs_SearchScopeTooltip;
 /** @type {string} */
Srch.Res.rs_SelectPreferredSearchLanguage;
 /** @type {string} */
Srch.Res.rs_SelectPreferredSearchLanguage_Language;
 /** @type {string} */
Srch.Res.edu_BookAuthor;
 /** @type {string} */
Srch.Res.edu_BookCategory;
 /** @type {string} */
Srch.Res.edu_BookRights;
 /** @type {string} */
Srch.Res.edu_BookReleaseDate;
 /** @type {string} */
Srch.Res.edu_BookHomePageLink;
 /** @type {string} */
Srch.Res.edu_Class;
 /** @type {string} */
Srch.Res.edu_AssignmentCategory;
 /** @type {string} */
Srch.Res.edu_AssignmentFormat;
 /** @type {string} */
Srch.Res.edu_AssignmentFormatNone;
 /** @type {string} */
Srch.Res.edu_AssignmentFormatOnlineFile;
 /** @type {string} */
Srch.Res.edu_AssignmentFormatOnlineQuiz;
 /** @type {string} */
Srch.Res.edu_AssignmentFormatInClass;
 /** @type {string} */
Srch.Res.edu_AssignmentFormatUnknown;
 /** @type {string} */
Srch.Res.edu_AssignmentMaxPoints;
 /** @type {string} */
Srch.Res.edu_DueDate;
 /** @type {string} */
Srch.Res.edu_ReadPermission;
 /** @type {string} */
Srch.Res.edu_PrintPermission;
 /** @type {string} */
Srch.Res.edu_WritePermission;
 /** @type {string} */
Srch.Res.edu_EnableScriptPermission;
 /** @type {string} */
Srch.Res.edu_AssignmentLabel;
 /** @type {string} */
Srch.Res.edu_LessonLabel;
 /** @type {string} */
Srch.Res.edu_BookLabel;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_DMSDocAuthor;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_DMSCategory;
 /** @type {string} */
Srch.Res.rf_RefinementTitle_EDiscSpecifyProperty;
 /** @type {string} */
Srch.Res.refconf_NoSampleValues;
 /** @type {string} */
Srch.Res.refconf_SortBy_Name;
 /** @type {string} */
Srch.Res.refconf_SortBy_Number;
 /** @type {string} */
Srch.Res.refconf_SortBy_Count;
 /** @type {string} */
Srch.Res.refconf_SortDirection_Ascending;
 /** @type {string} */
Srch.Res.refconf_SortDirection_Descending;
 /** @type {string} */
Srch.Res.refconf_Error_FailedToRestoreConfiguration;
 /** @type {string} */
Srch.Res.refconf_Section_SuggestedRefiners;
 /** @type {string} */
Srch.Res.refconf_Section_OtherRefiners;
 /** @type {string} */
Srch.Res.refconf_Section_Separator;
 /** @type {string} */
Srch.Res.refconf_SampleValuesDialog_Title;
 /** @type {string} */
Srch.Res.refconf_ResultsWithValues;
 /** @type {string} */
Srch.Res.refconf_TotalResults;
 /** @type {string} */
Srch.Res.refconf_FNT_ConfigurationLoadFailure;
 /** @type {string} */
Srch.Res.refconf_FNT_ConfigurationLoadWarning;
 /** @type {string} */
Srch.Res.refconf_FNT_ConfigurationLoadWarningNullResponse;
 /** @type {string} */
Srch.Res.refconf_FNT_InheritModeTermInfoSingularFormatString;
 /** @type {string} */
Srch.Res.refconf_FNT_DCR_InheritModeAnotherTermset;
 /** @type {string} */
Srch.Res.refconf_FNT_DCR_CustomRefiners;
 /** @type {string} */
Srch.Res.refconf_FNT_DCR_DescendantInfo_ChildTermsTotal;
 /** @type {string} */
Srch.Res.refconf_FNT_DCR_DescendantInfo_ChildTermsNotInheriting;
 /** @type {string} */
Srch.Res.refconf_FNT_DCR_DescendantInfo_ChildTermsStoppingInheriting;
 /** @type {string} */
Srch.Res.refconf_FNT_DCR_DescendantInfo_ChildTermsStoppingInheritingLinkAnchor;
 /** @type {string} */
Srch.Res.refconf_FNT_DCR_StopInheritingPopupTitle;
 /** @type {string} */
Srch.Res.refconf_FNT_DCR_InheritPopupTitle;
 /** @type {string} */
Srch.Res.refconf_FNT_DCR_RefinementConfigurationDialogTitle;
 /** @type {string} */
Srch.Res.refconf_FNT_DCR_LoadingConfiguration;
 /** @type {string} */
Srch.Res.refconf_FNT_DCR_DescendantStoppingInheritancePopupTitle;
 /** @type {string} */
Srch.Res.refconf_FNT_DCR_UseManualIntervals;
 /** @type {string} */
Srch.Res.refconf_FNT_DCR_RefinementPreviewPopupTitle;
 /** @type {string} */
Srch.Res.refconf_FNT_DCR_PropertiesForFriendly;
 /** @type {string} */
Srch.Res.refconf_FNT_DCR_PropertiesFor;
 /** @type {string} */
Srch.Res.refconf_FNT_DCR_TotalResultsTooltip;
 /** @type {string} */
Srch.Res.refconf_FNT_DCR_GeneratingPreview;
 /** @type {string} */
Srch.Res.refconf_DCR_Yes;
 /** @type {string} */
Srch.Res.refconf_DCR_No;
 /** @type {string} */
Srch.Res.refconf_DCR_FacetedNavigationProgressTitle;
 /** @type {string} */
Srch.Res.refconf_DCR_RefinementConfigurationDialogProgressTitle;
 /** @type {string} */
Srch.Res.refconf_DCR_RefinementConfigurationDialogManagedPropertyTooltip;
 /** @type {string} */
Srch.Res.refconf_DCR_RefinementConfigurationDialogManagedPropertyTooltipNoAliases;
 /** @type {string} */
Srch.Res.refconf_DCR_RefinementConfigurationDialogManagedPropertyTooltipSeparator;
 /** @type {string} */
Srch.Res.refconf_DCR_RefinementConfigurationDialog_TooManyRefiners_Warning;
 /** @type {string} */
Srch.Res.refconf_DCR_RefinementConfigurationDialog_TooManyRefiners_Error;
 /** @type {string} */
Srch.Res.refconf_DCR_RefinementConfigurationDialog_NoSuggestedRefiners_Warning;
 /** @type {string} */
Srch.Res.refconf_DCR_RefinementConfigurationDialog_InvalidSelectedRefiner_Warning;
 /** @type {string} */
Srch.Res.edisc_MultiValueFormat;
 /** @type {string} */
Srch.Res.edisc_NoSubject;
 /** @type {string} */
Srch.Res.edisc_ControlPagingFormat;
 /** @type {string} */
Srch.Res.hp_Summary;
 /** @type {string} */
Srch.Res.rf_DefaultMinutesLabels_min;
 /** @type {string} */
Srch.Res.rf_DefaultMinutesLabels_max;
 /** @type {string} */
Srch.Res.rf_DefaultMinutesLabels_range;
 /** @type {string} */
Srch.Res.rf_DefaultMinutesLabels_value;
 /** @type {string} */
Srch.Res.hp_NowDateTime_Today;
 /** @type {string} */
Srch.Res.hp_NowDateTime_Yesterday;
 /** @type {string} */
Srch.Res.hp_NowDateTime_MonthAgo;
 /** @type {string} */
Srch.Res.hp_NowDateTime_YearAgo;
 /** @type {string} */
Srch.Res.hp_NowDateTime_DaysAgo;
 /** @type {string} */
Srch.Res.hp_NowDateTime_MonthsAgo;
 /** @type {string} */
Srch.Res.hp_NowDateTime_YearsAgo;
 /** @type {string} */
Srch.Res.rs_UpScopeActionPhrase;
 /** @type {string} */
Srch.Res.control_Content_NoResultsDisplayMode;
 /** @type {string} */
Srch.Res.control_RollupPage_NoResultsDisplayMode;
 /** @type {string} */
Srch.Res.control_Content_NoResultsEditMode;
 /** @type {string} */
Srch.Res.item_Diagnostic_PictureSlot;
 /** @type {string} */
Srch.Res.item_Diagnostic_PathSlot;
 /** @type {string} */
Srch.Res.item_Diagnostic_Preview;
 /** @type {string} */
Srch.Res.item_Diagnostic_Value;
 /** @type {string} */
Srch.Res.item_Diagnostic_MappedManagedProperty;
 /** @type {string} */
Srch.Res.item_Diagnostic_PropertyMappings;
 /** @type {string} */
Srch.Res.item_Diagnostic_SlotNameFormat;
 /** @type {string} */
Srch.Res.item_Diagnostic_ItemTitleFormat;
 /** @type {string} */
Srch.Res.hp_Preview_LoadingImgAlt;
 /** @type {string} */
Srch.Res.rf_EDiscExTypeRefinerValue_Email;
 /** @type {string} */
Srch.Res.rf_EDiscExTypeRefinerValue_Contacts;
 /** @type {string} */
Srch.Res.rf_EDiscExTypeRefinerValue_Meetings;
 /** @type {string} */
Srch.Res.rf_EDiscExTypeRefinerValue_Tasks;
 /** @type {string} */
Srch.Res.rf_EDiscExTypeRefinerValue_Notes;
 /** @type {string} */
Srch.Res.rf_EDiscExTypeRefinerValue_Documents;
 /** @type {string} */
Srch.Res.rf_EDiscExTypeRefinerValue_Journal;
 /** @type {string} */
Srch.Res.rf_EDiscExTypeRefinerValue_IM;
 /** @type {string} */
Srch.Res.control_EDisc_Subject;
 /** @type {string} */
Srch.Res.control_EDisc_Recipients;
 /** @type {string} */
Srch.Res.control_EDisc_Sender;
 /** @type {string} */
Srch.Res.control_EDisc_DateSent;
 /** @type {string} */
Srch.Res.control_EDisc_Title;
 /** @type {string} */
Srch.Res.control_EDisc_Author;
 /** @type {string} */
Srch.Res.control_EDisc_DateModified;
 /** @type {string} */
Srch.Res.hp_EDisc_Cc;
 /** @type {string} */
Srch.Res.hp_EDisc_Bcc;
 /** @type {string} */
Srch.Res.item_Content_GenericNoImageSymbol;
 /** @type {string} */
Srch.Res.hp_EDisc_From;
 /** @type {string} */
Srch.Res.hp_EDisc_To;
 /** @type {string} */
Srch.Res.hp_EDisc_AttachmentsTooltip;
 /** @type {string} */
Srch.Res.control_EDisc_DateSentTooltip;
 /** @type {string} */
Srch.Res.rs_AlertMe;
 /** @type {string} */
Srch.Res.item_Generic_OpenCalloutTooltip;
 /** @type {string} */
Srch.Res.item_CommunityPortal_DetailsIntervals;
 /** @type {string} */
Srch.Res.item_CommunityPortal_DetailsMembers;
 /** @type {string} */
Srch.Res.item_CommunityPortal_DetailsDiscussions;
 /** @type {string} */
Srch.Res.item_CommunityPortal_DetailsReplies;
 /** @type {string} */
Srch.Res.item_CommunityPortal_Date;
 /** @type {string} */
Srch.Res.item_CommunityPortal_MoreDetails;
 /** @type {string} */
Srch.Res.ar_htv_Follow;
 /** @type {string} */
Srch.Res.ar_htv_StartFollowing;
 /** @type {string} */
Srch.Res.ar_htv_StopFollowing;
 /** @type {string} */
Srch.Res.ar_rec_NoResults;
 /** @type {string} */
Srch.Res.ar_Explanation;
 /** @type {string} */
Srch.Res.ar_htv_IsFollowed;
 /** @type {string} */
Srch.Res.ar_htv_IsNotFollowed;
 /** @type {string} */
Srch.Res.hp_Post;
 /** @type {string} */
Srch.Res.hp_Tooltip_Post;
 /** @type {string} */
Srch.Res.rs_PartialResultWarning_Line1;
 /** @type {string} */
Srch.Res.rs_PartialResultWarning_Line2;
 /** @type {string} */
Srch.Res.rs_HasParseExceptionWarning_Line1;
 /** @type {string} */
Srch.Res.rs_HasParseExceptionWarning_Line2;

/**
 * Returns true if the value parameter is null or empty string
 * @param {string} value
 * @return {boolean}
 */
function $isEmptyString(value) {}

/**
 * Returns true if the value parameter is null or undefined
 * @param {?} value
 * @return {boolean}
 */
function $isNull(value) {}

/**
 * Returns true if the specified item is found in the specified array (uses '===' for comparing)
 * @param {!Array<?>} array
 * @param {?} item
 * @return {boolean}
 */
function $isInArray(array, item) {}

/**
 * Returns true if the specified array is null or empty
 * @param {!Array<?>} array
 * @return {boolean}
 */
function $isEmptyArray(array) {}

/**
 * (alias for SP.Utilities.HttpUtility.htmlEncode)
 * @param {string} s
 * @return {string}
 */
function $htmlEncode(s) {}

/**
 * (alias for SP.Utilities.HttpUtility.ecmaScriptStringLiteralEncode)
 * @param {string} s
 * @return {string}
 */
function $scriptEncode(s) {}

/**
 * (alias for SP.Utilities.HttpUtility.urlKeyValueEncode)
 * @param {string} s
 * @return {string}
 */
function $urlKeyValueEncode(s) {}

/**
 * (alias for SP.Utilities.HttpUtility.urlPathEncode)
 * @param {string} s
 * @return {string}
 */
function $urlPathEncode(s) {}

/**
 * Ensures that url has correct protocol or is a relative URL, and html-encodes it.
 * If URL is incorrect, returns empty string.
 * @param {string} s
 * @return {string}
 */
function $urlHtmlEncode(s) {}

/**
 * @param {?} p
 * @return {string}
 */
function $imgSrcUrl(p) {}

/**
 * @param {?} p
 * @return {?}
 */
function $contentLineText(p) {}

/**
 * Returns the ClientControl associated with specified DOM element (alias for Srch.U.getClientComponent)
 * @param {!Element} e
 * @return {!Srch.ClientControl}
 */
function $getClientControl(e) {}

/**
 * (alias for Srch.U.getResultObject)
 * @param {string} id
 * @return {?}
 */
function $getResultItem(id) {}

/**
 * (alias for Srch.U.setResultObject)
 * @param {string} id
 * @param {?} resultObject
 * @return {void}
 */
function $setResultItem(id, resultObject) {}

/**
 * (alias for Srch.U.getResultObject)
 * @param {string} id
 * @return {?}
 */
function $getResultObject(id) {}

/**
 * (alias for Srch.U.setResultObject)
 * @param {string} id
 * @param {?} resultObject
 * @return {void}
 */
function $setResultObject(id, resultObject) {}

/**
 * (alias for Srch.U.findResultObjectFromDOM)
 * @param {!Element} e
 * @param {string} type
 * @return {void}
 */
function $findResultObjectFromDOM(e, type) {}

/**
 * @param {?} ctx
 * @param {string} nameToLookup
 * @return {?}
 */
function $getItemValue(ctx, nameToLookup) {}

/**
 * @param {?} ctx
 * @param {string} nameToLookup
 * @return {?}
 */
function $getCachedItemValue(ctx, nameToLookup) {}

/**
 * @param {string} templateLink
 * @param {string} relativeLink
 * @return {void}
 */
function $includeScript(templateLink, relativeLink) {}

/**
 * @param {string} templateLink
 * @param {string} scriptLink
 * @return {void}
 */
function $includeCSS(templateLink, scriptLink) {}

/**
 * @param {string} templateLink
 * @param {string} scriptLink
 * @return {?}
 */
function $includeLanguageScript(templateLink, scriptLink) {}

/**
 * Registers in system resources defined by the dictionary object (alias for Srch.U.registerResourceDictionary)
 * @param {string} locale
 * @param {!Object<string,string>} dict
 * @return {void}
 */
function $registerResourceDictionary(locale, dict) {}

/**
 * Retrieves localized string with the specified id
 * @param {string} id
 * @return {string}
 */
function $resource(id) {}

/**
 * (calls Srch.U.setItemRenderWrapper)
 * @param {?} renderCtx
 * @param {?} itemWrapperFunction
 * @return {void}
 */
function $setItemWrapperCallback(renderCtx, itemWrapperFunction) {}

/**
 * (calls Srch.U.addRenderContextCallback)
 * @param {?} renderCtx
 * @param {?} itemWrapperFunction
 * @return {void}
 */
function $addRenderContextCallback(renderCtx, itemWrapperFunction) {}
