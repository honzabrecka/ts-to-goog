/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/angular-localforage/index.d.ts:

/* TODO: ImportDeclaration in  */
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "angular"
/** @const */
tsickle_declare_module.angular.localForage = {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.angular.localForage.LocalForageConfig = function() {};
 /** @type {string} */
tsickle_declare_module.angular.localForage.LocalForageConfig.prototype.driver;
 /** @type {(string|number)} */
tsickle_declare_module.angular.localForage.LocalForageConfig.prototype.name;
 /** @type {number} */
tsickle_declare_module.angular.localForage.LocalForageConfig.prototype.version;
 /** @type {string} */
tsickle_declare_module.angular.localForage.LocalForageConfig.prototype.storeName;
 /** @type {string} */
tsickle_declare_module.angular.localForage.LocalForageConfig.prototype.description;
/**
 * @record
 * @struct
 */
tsickle_declare_module.angular.localForage.ILocalForageProvider = function() {};

/**
 * @param {!localForage.LocalForageConfig} config
 * @return {void}
 */
tsickle_declare_module.angular.localForage.ILocalForageProvider.prototype.config = function(config) {};

/**
 * @param {boolean} onItemSet
 * @param {boolean} onItemRemove
 * @return {void}
 */
tsickle_declare_module.angular.localForage.ILocalForageProvider.prototype.setNotify = function(onItemSet, onItemRemove) {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.angular.localForage.ILocalForageService = function() {};

/**
 * @return {!LocalForageDriver}
 */
tsickle_declare_module.angular.localForage.ILocalForageService.prototype.driver = function() {};

/**
 * @param {(string|!Array<string>)} name
 * @return {!angular.IPromise<void>}
 */
tsickle_declare_module.angular.localForage.ILocalForageService.prototype.setDriver = function(name) {};

/**
 * @param {string|!Array<string>} key_or_keys
 * @param {?|!Array<?>} value_or_values
 * @return {!angular.IPromise<void>}
 */
tsickle_declare_module.angular.localForage.ILocalForageService.prototype.setItem = function(key_or_keys, value_or_values) {};

/**
 * @param {string|!Array<string>} key_or_keys
 * @return {!angular.IPromise<?>|!angular.IPromise<!Array<?>>}
 */
tsickle_declare_module.angular.localForage.ILocalForageService.prototype.getItem = function(key_or_keys) {};

/**
 * @param {(string|!Array<string>)} key
 * @return {!angular.IPromise<void>}
 */
tsickle_declare_module.angular.localForage.ILocalForageService.prototype.removeItem = function(key) {};

/**
 * @param {string|!Array<string>} key_or_keys
 * @return {!angular.IPromise<?>|!angular.IPromise<!Array<?>>}
 */
tsickle_declare_module.angular.localForage.ILocalForageService.prototype.pull = function(key_or_keys) {};

/**
 * @return {!angular.IPromise<void>}
 */
tsickle_declare_module.angular.localForage.ILocalForageService.prototype.clear = function() {};

/**
 * @param {number} n
 * @return {!angular.IPromise<string>}
 */
tsickle_declare_module.angular.localForage.ILocalForageService.prototype.key = function(n) {};

/**
 * @return {!angular.IPromise<string>}
 */
tsickle_declare_module.angular.localForage.ILocalForageService.prototype.keys = function() {};

/**
 * @return {!angular.IPromise<number>}
 */
tsickle_declare_module.angular.localForage.ILocalForageService.prototype.length = function() {};

/**
 * @template T
 * @param {function((string|number), string): T} iteratorCallback
 * @return {!angular.IPromise<T>}
 */
tsickle_declare_module.angular.localForage.ILocalForageService.prototype.iterate = function(iteratorCallback) {};

/**
 * @param {!angular.IScope} $scope
 * @param {string|{key: string, defaultValue: ?, scopeKey: string, name: string}} key_or_config
 * @return {!angular.IPromise<?>}
 */
tsickle_declare_module.angular.localForage.ILocalForageService.prototype.bind = function($scope, key_or_config) {};

/**
 * @param {!angular.IScope} $scope
 * @param {string} key
 * @param {string=} scopeKey
 * @return {void}
 */
tsickle_declare_module.angular.localForage.ILocalForageService.prototype.unbind = function($scope, key, scopeKey) {};

/**
 * @param {!localForage.LocalForageConfig} config
 * @return {!localForage.ILocalForageService}
 */
tsickle_declare_module.angular.localForage.ILocalForageService.prototype.createInstance = function(config) {};

/**
 * @param {string} name
 * @return {!localForage.ILocalForageService}
 */
tsickle_declare_module.angular.localForage.ILocalForageService.prototype.instance = function(name) {};
