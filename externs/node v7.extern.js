/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/node v7/index.d.ts:
 /** @type {!NodeJS.ConsoleConstructor} */
Console.prototype.Console;

/**
 * @param {?} value
 * @param {string=} message
 * @param {...?} optionalParams
 * @return {void}
 */
Console.prototype.assert = function(value, message, optionalParams) {};

/**
 * @param {?} obj
 * @param {!NodeJS.InspectOptions=} options
 * @return {void}
 */
Console.prototype.dir = function(obj, options) {};

/**
 * @param {?=} message
 * @param {...?} optionalParams
 * @return {void}
 */
Console.prototype.error = function(message, optionalParams) {};

/**
 * @param {?=} message
 * @param {...?} optionalParams
 * @return {void}
 */
Console.prototype.info = function(message, optionalParams) {};

/**
 * @param {?=} message
 * @param {...?} optionalParams
 * @return {void}
 */
Console.prototype.log = function(message, optionalParams) {};

/**
 * @param {string} label
 * @return {void}
 */
Console.prototype.time = function(label) {};

/**
 * @param {string} label
 * @return {void}
 */
Console.prototype.timeEnd = function(label) {};

/**
 * @param {?=} message
 * @param {...?} optionalParams
 * @return {void}
 */
Console.prototype.trace = function(message, optionalParams) {};

/**
 * @param {?=} message
 * @param {...?} optionalParams
 * @return {void}
 */
Console.prototype.warn = function(message, optionalParams) {};
 /** @type {string} */
Error.prototype.stack;

/**
 * @param {?=} value
 * @return {!IteratorResult<T>}
 */
Iterator.prototype.next = function(value) {};
 /** @type {symbol} */
SymbolConstructor.prototype.iterator;
 /** @type {!NodeJS.Process} */
var process;
 /** @type {!Console} */
var console;
 /** @type {string} */
var __filename;
 /** @type {string} */
var __dirname;
/**
 * @record
 * @struct
 */
function NodeRequireFunction() {}

/* TODO: CallSignature:  */
/**
 * @extends {NodeRequireFunction}
 * @record
 * @struct
 */
function NodeRequire() {}
 /** @type {?} */
NodeRequire.prototype.cache;
 /** @type {?} */
NodeRequire.prototype.extensions;
 /** @type {!NodeModule} */
NodeRequire.prototype.main;

/**
 * @param {string} id
 * @return {string}
 */
NodeRequire.prototype.resolve = function(id) {};
 /** @type {!NodeRequire} */
var require;
/**
 * @record
 * @struct
 */
function NodeModule() {}
 /** @type {?} */
NodeModule.prototype.exports;
 /** @type {!NodeRequireFunction} */
NodeModule.prototype.require;
 /** @type {string} */
NodeModule.prototype.id;
 /** @type {string} */
NodeModule.prototype.filename;
 /** @type {boolean} */
NodeModule.prototype.loaded;
 /** @type {!NodeModule} */
NodeModule.prototype.parent;
 /** @type {!Array<!NodeModule>} */
NodeModule.prototype.children;
 /** @type {function(new: (?), string, string): ?} */
var SlowBuffer;

/** @typedef {string} */
var BufferEncoding;
/**
 * @extends {NodeBuffer}
 * @record
 * @struct
 */
function Buffer() {}
 /** @type {function(new: (?), string, string): ?} */
var Buffer;
/** @const */
var NodeJS = {};
/**
 * @record
 * @struct
 */
NodeJS.InspectOptions = function() {};
 /** @type {boolean} */
NodeJS.InspectOptions.prototype.showHidden;
 /** @type {number} */
NodeJS.InspectOptions.prototype.depth;
 /** @type {boolean} */
NodeJS.InspectOptions.prototype.colors;
 /** @type {boolean} */
NodeJS.InspectOptions.prototype.customInspect;
 /** @type {boolean} */
NodeJS.InspectOptions.prototype.showProxy;
 /** @type {number} */
NodeJS.InspectOptions.prototype.maxArrayLength;
 /** @type {number} */
NodeJS.InspectOptions.prototype.breakLength;
/**
 * @record
 * @struct
 */
NodeJS.ConsoleConstructor = function() {};
 /** @type {!Console} */
NodeJS.ConsoleConstructor.prototype.prototype;

/* TODO: ConstructSignature: NodeJS */
/**
 * @record
 * @struct
 */
NodeJS.ErrnoException = function() {};
 /** @type {number} */
NodeJS.ErrnoException.prototype.errno;
 /** @type {string} */
NodeJS.ErrnoException.prototype.code;
 /** @type {string} */
NodeJS.ErrnoException.prototype.path;
 /** @type {string} */
NodeJS.ErrnoException.prototype.syscall;
 /** @type {string} */
NodeJS.ErrnoException.prototype.stack;
/**
 * @constructor
 * @struct
 */
NodeJS.EventEmitter = function() {};

/**
 * @param {(string|symbol)} event
 * @param {!Function} listener
 * @return {EventEmitter}
 */
NodeJS.EventEmitter.prototype.addListener = function(event, listener) {};

/**
 * @param {(string|symbol)} event
 * @param {!Function} listener
 * @return {EventEmitter}
 */
NodeJS.EventEmitter.prototype.on = function(event, listener) {};

/**
 * @param {(string|symbol)} event
 * @param {!Function} listener
 * @return {EventEmitter}
 */
NodeJS.EventEmitter.prototype.once = function(event, listener) {};

/**
 * @param {(string|symbol)} event
 * @param {!Function} listener
 * @return {EventEmitter}
 */
NodeJS.EventEmitter.prototype.removeListener = function(event, listener) {};

/**
 * @param {(string|symbol)=} event
 * @return {EventEmitter}
 */
NodeJS.EventEmitter.prototype.removeAllListeners = function(event) {};

/**
 * @param {number} n
 * @return {EventEmitter}
 */
NodeJS.EventEmitter.prototype.setMaxListeners = function(n) {};

/**
 * @return {number}
 */
NodeJS.EventEmitter.prototype.getMaxListeners = function() {};

/**
 * @param {(string|symbol)} event
 * @return {!Array<!Function>}
 */
NodeJS.EventEmitter.prototype.listeners = function(event) {};

/**
 * @param {(string|symbol)} event
 * @param {...?} args
 * @return {boolean}
 */
NodeJS.EventEmitter.prototype.emit = function(event, args) {};

/**
 * @param {(string|symbol)} type
 * @return {number}
 */
NodeJS.EventEmitter.prototype.listenerCount = function(type) {};

/**
 * @param {(string|symbol)} event
 * @param {!Function} listener
 * @return {EventEmitter}
 */
NodeJS.EventEmitter.prototype.prependListener = function(event, listener) {};

/**
 * @param {(string|symbol)} event
 * @param {!Function} listener
 * @return {EventEmitter}
 */
NodeJS.EventEmitter.prototype.prependOnceListener = function(event, listener) {};

/**
 * @return {!Array<(string|symbol)>}
 */
NodeJS.EventEmitter.prototype.eventNames = function() {};
/**
 * @record
 * @struct
 */
NodeJS.ReadableStream = function() {};
 /** @type {boolean} */
NodeJS.ReadableStream.prototype.readable;

/**
 * @param {number=} size
 * @return {(string|?)}
 */
NodeJS.ReadableStream.prototype.read = function(size) {};

/**
 * @param {string} encoding
 * @return {ReadableStream}
 */
NodeJS.ReadableStream.prototype.setEncoding = function(encoding) {};

/**
 * @return {ReadableStream}
 */
NodeJS.ReadableStream.prototype.pause = function() {};

/**
 * @return {ReadableStream}
 */
NodeJS.ReadableStream.prototype.resume = function() {};

/**
 * @return {boolean}
 */
NodeJS.ReadableStream.prototype.isPaused = function() {};

/**
 * @template T
 * @param {T} destination
 * @param {{end: boolean}=} options
 * @return {T}
 */
NodeJS.ReadableStream.prototype.pipe = function(destination, options) {};

/**
 * @template T
 * @param {T=} destination
 * @return {ReadableStream}
 */
NodeJS.ReadableStream.prototype.unpipe = function(destination) {};

/**
 * @param {string|?} chunk
 * @return {void}
 */
NodeJS.ReadableStream.prototype.unshift = function(chunk) {};

/**
 * @param {!NodeJS.ReadableStream} oldStream
 * @return {!NodeJS.ReadableStream}
 */
NodeJS.ReadableStream.prototype.wrap = function(oldStream) {};
/**
 * @record
 * @struct
 */
NodeJS.WritableStream = function() {};
 /** @type {boolean} */
NodeJS.WritableStream.prototype.writable;

/**
 * @param {(string|?)|string} buffer_or_str
 * @param {!Function|string=} cb_or_encoding
 * @param {!Function=} cb
 * @return {boolean}
 */
NodeJS.WritableStream.prototype.write = function(buffer_or_str, cb_or_encoding, cb) {};

/**
 * @param {?|string=} buffer_or_str
 * @param {!Function|string=} cb_or_encoding
 * @param {!Function=} cb
 * @return {void}
 */
NodeJS.WritableStream.prototype.end = function(buffer_or_str, cb_or_encoding, cb) {};
/**
 * @extends {NodeJS.ReadableStream}
 * @extends {NodeJS.WritableStream}
 * @record
 * @struct
 */
NodeJS.ReadWriteStream = function() {};
/**
 * @record
 * @struct
 */
NodeJS.Events = function() {};
/**
 * @extends {NodeJS.Events}
 * @record
 * @struct
 */
NodeJS.Domain = function() {};

/**
 * @param {!Function} fn
 * @return {void}
 */
NodeJS.Domain.prototype.run = function(fn) {};

/**
 * @param {!NodeJS.Events} emitter
 * @return {void}
 */
NodeJS.Domain.prototype.add = function(emitter) {};

/**
 * @param {!NodeJS.Events} emitter
 * @return {void}
 */
NodeJS.Domain.prototype.remove = function(emitter) {};

/**
 * @param {function(!Error, ?): ?} cb
 * @return {?}
 */
NodeJS.Domain.prototype.bind = function(cb) {};

/**
 * @param {function(?): ?} cb
 * @return {?}
 */
NodeJS.Domain.prototype.intercept = function(cb) {};

/**
 * @return {void}
 */
NodeJS.Domain.prototype.dispose = function() {};

/**
 * @param {string} event
 * @param {!Function} listener
 * @return {Domain}
 */
NodeJS.Domain.prototype.addListener = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function} listener
 * @return {Domain}
 */
NodeJS.Domain.prototype.on = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function} listener
 * @return {Domain}
 */
NodeJS.Domain.prototype.once = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function} listener
 * @return {Domain}
 */
NodeJS.Domain.prototype.removeListener = function(event, listener) {};

/**
 * @param {string=} event
 * @return {Domain}
 */
NodeJS.Domain.prototype.removeAllListeners = function(event) {};
/**
 * @record
 * @struct
 */
NodeJS.MemoryUsage = function() {};
 /** @type {number} */
NodeJS.MemoryUsage.prototype.rss;
 /** @type {number} */
NodeJS.MemoryUsage.prototype.heapTotal;
 /** @type {number} */
NodeJS.MemoryUsage.prototype.heapUsed;
/**
 * @record
 * @struct
 */
NodeJS.CpuUsage = function() {};
 /** @type {number} */
NodeJS.CpuUsage.prototype.user;
 /** @type {number} */
NodeJS.CpuUsage.prototype.system;
/**
 * @record
 * @struct
 */
NodeJS.ProcessVersions = function() {};
 /** @type {string} */
NodeJS.ProcessVersions.prototype.http_parser;
 /** @type {string} */
NodeJS.ProcessVersions.prototype.node;
 /** @type {string} */
NodeJS.ProcessVersions.prototype.v8;
 /** @type {string} */
NodeJS.ProcessVersions.prototype.ares;
 /** @type {string} */
NodeJS.ProcessVersions.prototype.uv;
 /** @type {string} */
NodeJS.ProcessVersions.prototype.zlib;
 /** @type {string} */
NodeJS.ProcessVersions.prototype.modules;
 /** @type {string} */
NodeJS.ProcessVersions.prototype.openssl;

/** @typedef {string} */
NodeJS.Platform;
/**
 * @extends {NodeJS.ReadWriteStream}
 * @record
 * @struct
 */
NodeJS.Socket = function() {};
 /** @type {boolean} */
NodeJS.Socket.prototype.isTTY;
/**
 * @extends {NodeJS.Socket}
 * @record
 * @struct
 */
NodeJS.WriteStream = function() {};
 /** @type {number} */
NodeJS.WriteStream.prototype.columns;
 /** @type {number} */
NodeJS.WriteStream.prototype.rows;
/**
 * @extends {NodeJS.Socket}
 * @record
 * @struct
 */
NodeJS.ReadStream = function() {};
 /** @type {boolean} */
NodeJS.ReadStream.prototype.isRaw;

/**
 * @param {boolean} mode
 * @return {void}
 */
NodeJS.ReadStream.prototype.setRawMode = function(mode) {};
/**
 * @record
 * @struct
 */
NodeJS.Process = function() {};
 /** @type {!NodeJS.WriteStream} */
NodeJS.Process.prototype.stdout;
 /** @type {!NodeJS.WriteStream} */
NodeJS.Process.prototype.stderr;
 /** @type {!NodeJS.ReadStream} */
NodeJS.Process.prototype.stdin;
 /** @type {!Array<string>} */
NodeJS.Process.prototype.argv;
 /** @type {string} */
NodeJS.Process.prototype.argv0;
 /** @type {!Array<string>} */
NodeJS.Process.prototype.execArgv;
 /** @type {string} */
NodeJS.Process.prototype.execPath;
 /** @type {?} */
NodeJS.Process.prototype.env;
 /** @type {number} */
NodeJS.Process.prototype.exitCode;
 /** @type {string} */
NodeJS.Process.prototype.version;
 /** @type {!NodeJS.ProcessVersions} */
NodeJS.Process.prototype.versions;
 /** @type {{target_defaults: {cflags: !Array<?>, default_configuration: string, defines: !Array<string>, include_dirs: !Array<string>, libraries: !Array<string>}, variables: {clang: number, host_arch: string, node_install_npm: boolean, node_install_waf: boolean, node_prefix: string, node_shared_openssl: boolean, node_shared_v8: boolean, node_shared_zlib: boolean, node_use_dtrace: boolean, node_use_etw: boolean, node_use_openssl: boolean, target_arch: string, v8_no_strict_aliasing: number, v8_use_snapshot: boolean, visibility: string}}} */
NodeJS.Process.prototype.config;
 /** @type {number} */
NodeJS.Process.prototype.pid;
 /** @type {string} */
NodeJS.Process.prototype.title;
 /** @type {string} */
NodeJS.Process.prototype.arch;
 /** @type {string} */
NodeJS.Process.prototype.platform;
 /** @type {!NodeModule} */
NodeJS.Process.prototype.mainModule;
 /** @type {!NodeJS.Domain} */
NodeJS.Process.prototype.domain;
 /** @type {boolean} */
NodeJS.Process.prototype.connected;

/**
 * @return {!NodeJS.Socket}
 */
NodeJS.Process.prototype.openStdin = function() {};

/**
 * @return {void}
 */
NodeJS.Process.prototype.abort = function() {};

/**
 * @param {string} directory
 * @return {void}
 */
NodeJS.Process.prototype.chdir = function(directory) {};

/**
 * @return {string}
 */
NodeJS.Process.prototype.cwd = function() {};

/**
 * @param {(string|!Error)} warning
 * @param {string=} name
 * @param {!Function=} ctor
 * @return {void}
 */
NodeJS.Process.prototype.emitWarning = function(warning, name, ctor) {};

/**
 * @param {number=} code
 * @return {?}
 */
NodeJS.Process.prototype.exit = function(code) {};

/**
 * @return {number}
 */
NodeJS.Process.prototype.getgid = function() {};

/**
 * @param {number|string} id
 * @return {void}
 */
NodeJS.Process.prototype.setgid = function(id) {};

/**
 * @return {number}
 */
NodeJS.Process.prototype.getuid = function() {};

/**
 * @param {number|string} id
 * @return {void}
 */
NodeJS.Process.prototype.setuid = function(id) {};

/**
 * @param {number} pid
 * @param {(string|number)=} signal
 * @return {void}
 */
NodeJS.Process.prototype.kill = function(pid, signal) {};

/**
 * @return {!NodeJS.MemoryUsage}
 */
NodeJS.Process.prototype.memoryUsage = function() {};

/**
 * @param {!NodeJS.CpuUsage=} previousValue
 * @return {!NodeJS.CpuUsage}
 */
NodeJS.Process.prototype.cpuUsage = function(previousValue) {};

/**
 * @param {!Function} callback
 * @param {...?} args
 * @return {void}
 */
NodeJS.Process.prototype.nextTick = function(callback, args) {};

/**
 * @param {number=} mask
 * @return {number}
 */
NodeJS.Process.prototype.umask = function(mask) {};

/**
 * @return {number}
 */
NodeJS.Process.prototype.uptime = function() {};

/**
 * @param {!Array<?>=} time
 * @return {!Array<?>}
 */
NodeJS.Process.prototype.hrtime = function(time) {};

/**
 * @param {?} message
 * @param {?=} sendHandle
 * @return {void}
 */
NodeJS.Process.prototype.send = function(message, sendHandle) {};

/**
 * @return {void}
 */
NodeJS.Process.prototype.disconnect = function() {};
/**
 * @record
 * @struct
 */
NodeJS.Global = function() {};
 /** @type {!ArrayConstructor} */
NodeJS.Global.prototype.Array;
 /** @type {!ArrayBufferConstructor} */
NodeJS.Global.prototype.ArrayBuffer;
 /** @type {!BooleanConstructor} */
NodeJS.Global.prototype.Boolean;
 /** @type {function(new: (?), string, string): ?} */
NodeJS.Global.prototype.Buffer;
 /** @type {!DataViewConstructor} */
NodeJS.Global.prototype.DataView;
 /** @type {!DateConstructor} */
NodeJS.Global.prototype.Date;
 /** @type {!ErrorConstructor} */
NodeJS.Global.prototype.Error;
 /** @type {!EvalErrorConstructor} */
NodeJS.Global.prototype.EvalError;
 /** @type {!Float32ArrayConstructor} */
NodeJS.Global.prototype.Float32Array;
 /** @type {!Float64ArrayConstructor} */
NodeJS.Global.prototype.Float64Array;
 /** @type {!FunctionConstructor} */
NodeJS.Global.prototype.Function;
 /** @type {!NodeJS.Global} */
NodeJS.Global.prototype.GLOBAL;
 /** @type {number} */
NodeJS.Global.prototype.Infinity;
 /** @type {!Int16ArrayConstructor} */
NodeJS.Global.prototype.Int16Array;
 /** @type {!Int32ArrayConstructor} */
NodeJS.Global.prototype.Int32Array;
 /** @type {!Int8ArrayConstructor} */
NodeJS.Global.prototype.Int8Array;
 /** @type {?} */
NodeJS.Global.prototype.Intl;
 /** @type {!JSON} */
NodeJS.Global.prototype.JSON;
 /** @type {!MapConstructor} */
NodeJS.Global.prototype.Map;
 /** @type {!Math} */
NodeJS.Global.prototype.Math;
 /** @type {number} */
NodeJS.Global.prototype.NaN;
 /** @type {!NumberConstructor} */
NodeJS.Global.prototype.Number;
 /** @type {!ObjectConstructor} */
NodeJS.Global.prototype.Object;
 /** @type {!Function} */
NodeJS.Global.prototype.Promise;
 /** @type {!RangeErrorConstructor} */
NodeJS.Global.prototype.RangeError;
 /** @type {!ReferenceErrorConstructor} */
NodeJS.Global.prototype.ReferenceError;
 /** @type {!RegExpConstructor} */
NodeJS.Global.prototype.RegExp;
 /** @type {!SetConstructor} */
NodeJS.Global.prototype.Set;
 /** @type {!StringConstructor} */
NodeJS.Global.prototype.String;
 /** @type {!Function} */
NodeJS.Global.prototype.Symbol;
 /** @type {!SyntaxErrorConstructor} */
NodeJS.Global.prototype.SyntaxError;
 /** @type {!TypeErrorConstructor} */
NodeJS.Global.prototype.TypeError;
 /** @type {!URIErrorConstructor} */
NodeJS.Global.prototype.URIError;
 /** @type {!Uint16ArrayConstructor} */
NodeJS.Global.prototype.Uint16Array;
 /** @type {!Uint32ArrayConstructor} */
NodeJS.Global.prototype.Uint32Array;
 /** @type {!Uint8ArrayConstructor} */
NodeJS.Global.prototype.Uint8Array;
 /** @type {!Function} */
NodeJS.Global.prototype.Uint8ClampedArray;
 /** @type {!WeakMapConstructor} */
NodeJS.Global.prototype.WeakMap;
 /** @type {!WeakSetConstructor} */
NodeJS.Global.prototype.WeakSet;
 /** @type {function(?): void} */
NodeJS.Global.prototype.clearImmediate;
 /** @type {function(!NodeJS.Timer): void} */
NodeJS.Global.prototype.clearInterval;
 /** @type {function(!NodeJS.Timer): void} */
NodeJS.Global.prototype.clearTimeout;
 /** @type {!Console} */
NodeJS.Global.prototype.console;
 /** @type {function(string): string} */
NodeJS.Global.prototype.decodeURI;
 /** @type {function(string): string} */
NodeJS.Global.prototype.decodeURIComponent;
 /** @type {function(string): string} */
NodeJS.Global.prototype.encodeURI;
 /** @type {function(string): string} */
NodeJS.Global.prototype.encodeURIComponent;
 /** @type {function(string): string} */
NodeJS.Global.prototype.escape;
 /** @type {function(string): ?} */
NodeJS.Global.prototype.eval;
 /** @type {!NodeJS.Global} */
NodeJS.Global.prototype.global;
 /** @type {function(number): boolean} */
NodeJS.Global.prototype.isFinite;
 /** @type {function(number): boolean} */
NodeJS.Global.prototype.isNaN;
 /** @type {function(string): number} */
NodeJS.Global.prototype.parseFloat;
 /** @type {function(string, number): number} */
NodeJS.Global.prototype.parseInt;
 /** @type {!NodeJS.Process} */
NodeJS.Global.prototype.process;
 /** @type {!NodeJS.Global} */
NodeJS.Global.prototype.root;
 /** @type {function(function(!Array<?>): void, !Array<?>): ?} */
NodeJS.Global.prototype.setImmediate;
 /** @type {function(function(!Array<?>): void, number, !Array<?>): !NodeJS.Timer} */
NodeJS.Global.prototype.setInterval;
 /** @type {function(function(!Array<?>): void, number, !Array<?>): !NodeJS.Timer} */
NodeJS.Global.prototype.setTimeout;
 /** @type {?} */
NodeJS.Global.prototype.undefined;
 /** @type {function(string): string} */
NodeJS.Global.prototype.unescape;
 /** @type {function(): void} */
NodeJS.Global.prototype.gc;
 /** @type {?} */
NodeJS.Global.prototype.v8debug;
/**
 * @record
 * @struct
 */
NodeJS.Timer = function() {};

/**
 * @return {void}
 */
NodeJS.Timer.prototype.ref = function() {};

/**
 * @return {void}
 */
NodeJS.Timer.prototype.unref = function() {};
/**
 * @record
 * @struct
 */
function NodeBuffer() {}

/**
 * @param {string} string
 * @param {number=} offset
 * @param {number=} length
 * @param {string=} encoding
 * @return {number}
 */
NodeBuffer.prototype.write = function(string, offset, length, encoding) {};

/**
 * @param {string=} encoding
 * @param {number=} start
 * @param {number=} end
 * @return {string}
 */
NodeBuffer.prototype.toString = function(encoding, start, end) {};

/**
 * @return {{type: string, data: !Array<?>}}
 */
NodeBuffer.prototype.toJSON = function() {};

/**
 * @param {?} otherBuffer
 * @return {boolean}
 */
NodeBuffer.prototype.equals = function(otherBuffer) {};

/**
 * @param {?} otherBuffer
 * @param {number=} targetStart
 * @param {number=} targetEnd
 * @param {number=} sourceStart
 * @param {number=} sourceEnd
 * @return {number}
 */
NodeBuffer.prototype.compare = function(otherBuffer, targetStart, targetEnd, sourceStart, sourceEnd) {};

/**
 * @param {?} targetBuffer
 * @param {number=} targetStart
 * @param {number=} sourceStart
 * @param {number=} sourceEnd
 * @return {number}
 */
NodeBuffer.prototype.copy = function(targetBuffer, targetStart, sourceStart, sourceEnd) {};

/**
 * @param {number=} start
 * @param {number=} end
 * @return {?}
 */
NodeBuffer.prototype.slice = function(start, end) {};

/**
 * @param {number} value
 * @param {number} offset
 * @param {number} byteLength
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.writeUIntLE = function(value, offset, byteLength, noAssert) {};

/**
 * @param {number} value
 * @param {number} offset
 * @param {number} byteLength
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.writeUIntBE = function(value, offset, byteLength, noAssert) {};

/**
 * @param {number} value
 * @param {number} offset
 * @param {number} byteLength
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.writeIntLE = function(value, offset, byteLength, noAssert) {};

/**
 * @param {number} value
 * @param {number} offset
 * @param {number} byteLength
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.writeIntBE = function(value, offset, byteLength, noAssert) {};

/**
 * @param {number} offset
 * @param {number} byteLength
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.readUIntLE = function(offset, byteLength, noAssert) {};

/**
 * @param {number} offset
 * @param {number} byteLength
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.readUIntBE = function(offset, byteLength, noAssert) {};

/**
 * @param {number} offset
 * @param {number} byteLength
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.readIntLE = function(offset, byteLength, noAssert) {};

/**
 * @param {number} offset
 * @param {number} byteLength
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.readIntBE = function(offset, byteLength, noAssert) {};

/**
 * @param {number} offset
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.readUInt8 = function(offset, noAssert) {};

/**
 * @param {number} offset
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.readUInt16LE = function(offset, noAssert) {};

/**
 * @param {number} offset
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.readUInt16BE = function(offset, noAssert) {};

/**
 * @param {number} offset
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.readUInt32LE = function(offset, noAssert) {};

/**
 * @param {number} offset
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.readUInt32BE = function(offset, noAssert) {};

/**
 * @param {number} offset
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.readInt8 = function(offset, noAssert) {};

/**
 * @param {number} offset
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.readInt16LE = function(offset, noAssert) {};

/**
 * @param {number} offset
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.readInt16BE = function(offset, noAssert) {};

/**
 * @param {number} offset
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.readInt32LE = function(offset, noAssert) {};

/**
 * @param {number} offset
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.readInt32BE = function(offset, noAssert) {};

/**
 * @param {number} offset
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.readFloatLE = function(offset, noAssert) {};

/**
 * @param {number} offset
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.readFloatBE = function(offset, noAssert) {};

/**
 * @param {number} offset
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.readDoubleLE = function(offset, noAssert) {};

/**
 * @param {number} offset
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.readDoubleBE = function(offset, noAssert) {};

/**
 * @return {?}
 */
NodeBuffer.prototype.swap16 = function() {};

/**
 * @return {?}
 */
NodeBuffer.prototype.swap32 = function() {};

/**
 * @return {?}
 */
NodeBuffer.prototype.swap64 = function() {};

/**
 * @param {number} value
 * @param {number} offset
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.writeUInt8 = function(value, offset, noAssert) {};

/**
 * @param {number} value
 * @param {number} offset
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.writeUInt16LE = function(value, offset, noAssert) {};

/**
 * @param {number} value
 * @param {number} offset
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.writeUInt16BE = function(value, offset, noAssert) {};

/**
 * @param {number} value
 * @param {number} offset
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.writeUInt32LE = function(value, offset, noAssert) {};

/**
 * @param {number} value
 * @param {number} offset
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.writeUInt32BE = function(value, offset, noAssert) {};

/**
 * @param {number} value
 * @param {number} offset
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.writeInt8 = function(value, offset, noAssert) {};

/**
 * @param {number} value
 * @param {number} offset
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.writeInt16LE = function(value, offset, noAssert) {};

/**
 * @param {number} value
 * @param {number} offset
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.writeInt16BE = function(value, offset, noAssert) {};

/**
 * @param {number} value
 * @param {number} offset
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.writeInt32LE = function(value, offset, noAssert) {};

/**
 * @param {number} value
 * @param {number} offset
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.writeInt32BE = function(value, offset, noAssert) {};

/**
 * @param {number} value
 * @param {number} offset
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.writeFloatLE = function(value, offset, noAssert) {};

/**
 * @param {number} value
 * @param {number} offset
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.writeFloatBE = function(value, offset, noAssert) {};

/**
 * @param {number} value
 * @param {number} offset
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.writeDoubleLE = function(value, offset, noAssert) {};

/**
 * @param {number} value
 * @param {number} offset
 * @param {boolean=} noAssert
 * @return {number}
 */
NodeBuffer.prototype.writeDoubleBE = function(value, offset, noAssert) {};

/**
 * @param {?} value
 * @param {number=} offset
 * @param {number=} end
 * @return {NodeBuffer}
 */
NodeBuffer.prototype.fill = function(value, offset, end) {};

/**
 * @param {(string|number|?)} value
 * @param {number=} byteOffset
 * @param {string=} encoding
 * @return {number}
 */
NodeBuffer.prototype.indexOf = function(value, byteOffset, encoding) {};

/**
 * @param {(string|number|?)} value
 * @param {number=} byteOffset
 * @param {string=} encoding
 * @return {number}
 */
NodeBuffer.prototype.lastIndexOf = function(value, byteOffset, encoding) {};

/**
 * @return {!IterableIterator<!Array<?>>}
 */
NodeBuffer.prototype.entries = function() {};

/**
 * @param {(string|number|?)} value
 * @param {number=} byteOffset
 * @param {string=} encoding
 * @return {boolean}
 */
NodeBuffer.prototype.includes = function(value, byteOffset, encoding) {};

/**
 * @return {!IterableIterator<number>}
 */
NodeBuffer.prototype.keys = function() {};

/**
 * @return {!IterableIterator<number>}
 */
NodeBuffer.prototype.values = function() {};
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "buffer"
/** @const */
tsickle_declare_module.buffer = {};
 /** @type {number} */
tsickle_declare_module.buffer.INSPECT_MAX_BYTES;
 /** @type {function(new: (?), string, string): ?} */
tsickle_declare_module.buffer.BuffType;
 /** @type {function(new: (?), string, string): ?} */
tsickle_declare_module.buffer.SlowBuffType;

/* TODO: ExportDeclaration in tsickle_declare_module.buffer */
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "querystring"
/** @const */
tsickle_declare_module.querystring = {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.querystring.StringifyOptions = function() {};
 /** @type {!Function} */
tsickle_declare_module.querystring.StringifyOptions.prototype.encodeURIComponent;
/**
 * @record
 * @struct
 */
tsickle_declare_module.querystring.ParseOptions = function() {};
 /** @type {number} */
tsickle_declare_module.querystring.ParseOptions.prototype.maxKeys;
 /** @type {!Function} */
tsickle_declare_module.querystring.ParseOptions.prototype.decodeURIComponent;

/**
 * @template T
 * @param {T} obj
 * @param {string=} sep
 * @param {string=} eq
 * @param {!StringifyOptions=} options
 * @return {string}
 */
tsickle_declare_module.querystring.stringify = function(obj, sep, eq, options) {};

/**
 * @template T
 * @param {string} str
 * @param {string=} sep
 * @param {string=} eq
 * @param {!ParseOptions=} options
 * @return {?|T}
 */
tsickle_declare_module.querystring.parse = function(str, sep, eq, options) {};

/**
 * @param {string} str
 * @return {string}
 */
tsickle_declare_module.querystring.escape = function(str) {};

/**
 * @param {string} str
 * @return {string}
 */
tsickle_declare_module.querystring.unescape = function(str) {};
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "events"
/** @const */
tsickle_declare_module.events = {};
/**
 * @extends {NodeJS.EventEmitter}
 * @constructor
 * @struct
 */
tsickle_declare_module.events.internal = function() {};
/**
 * @extends {internal}
 * @constructor
 * @struct
 */
tsickle_declare_module.events.internal.EventEmitter = function() {};
 /** @type {number} */
tsickle_declare_module.events.internal.EventEmitter.defaultMaxListeners;

/**
 * @param {!internal.EventEmitter} emitter
 * @param {(string|symbol)} event
 * @return {number}
 */
tsickle_declare_module.events.internal.EventEmitter.listenerCount = function(emitter, event) {};

/**
 * @param {(string|symbol)} event
 * @param {!Function} listener
 * @return {EventEmitter}
 */
tsickle_declare_module.events.internal.EventEmitter.prototype.addListener = function(event, listener) {};

/**
 * @param {(string|symbol)} event
 * @param {!Function} listener
 * @return {EventEmitter}
 */
tsickle_declare_module.events.internal.EventEmitter.prototype.on = function(event, listener) {};

/**
 * @param {(string|symbol)} event
 * @param {!Function} listener
 * @return {EventEmitter}
 */
tsickle_declare_module.events.internal.EventEmitter.prototype.once = function(event, listener) {};

/**
 * @param {(string|symbol)} event
 * @param {!Function} listener
 * @return {EventEmitter}
 */
tsickle_declare_module.events.internal.EventEmitter.prototype.prependListener = function(event, listener) {};

/**
 * @param {(string|symbol)} event
 * @param {!Function} listener
 * @return {EventEmitter}
 */
tsickle_declare_module.events.internal.EventEmitter.prototype.prependOnceListener = function(event, listener) {};

/**
 * @param {(string|symbol)} event
 * @param {!Function} listener
 * @return {EventEmitter}
 */
tsickle_declare_module.events.internal.EventEmitter.prototype.removeListener = function(event, listener) {};

/**
 * @param {(string|symbol)=} event
 * @return {EventEmitter}
 */
tsickle_declare_module.events.internal.EventEmitter.prototype.removeAllListeners = function(event) {};

/**
 * @param {number} n
 * @return {EventEmitter}
 */
tsickle_declare_module.events.internal.EventEmitter.prototype.setMaxListeners = function(n) {};

/**
 * @return {number}
 */
tsickle_declare_module.events.internal.EventEmitter.prototype.getMaxListeners = function() {};

/**
 * @param {(string|symbol)} event
 * @return {!Array<!Function>}
 */
tsickle_declare_module.events.internal.EventEmitter.prototype.listeners = function(event) {};

/**
 * @param {(string|symbol)} event
 * @param {...?} args
 * @return {boolean}
 */
tsickle_declare_module.events.internal.EventEmitter.prototype.emit = function(event, args) {};

/**
 * @return {!Array<(string|symbol)>}
 */
tsickle_declare_module.events.internal.EventEmitter.prototype.eventNames = function() {};

/**
 * @param {(string|symbol)} type
 * @return {number}
 */
tsickle_declare_module.events.internal.EventEmitter.prototype.listenerCount = function(type) {};

/* TODO: ExportAssignment in tsickle_declare_module.events */
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "http"
/** @const */
tsickle_declare_module.http = {};

/* TODO: ImportDeclaration in tsickle_declare_module.http */

/* TODO: ImportDeclaration in tsickle_declare_module.http */

/* TODO: ImportDeclaration in tsickle_declare_module.http */
/**
 * @record
 * @struct
 */
tsickle_declare_module.http.RequestOptions = function() {};
 /** @type {string} */
tsickle_declare_module.http.RequestOptions.prototype.protocol;
 /** @type {string} */
tsickle_declare_module.http.RequestOptions.prototype.host;
 /** @type {string} */
tsickle_declare_module.http.RequestOptions.prototype.hostname;
 /** @type {number} */
tsickle_declare_module.http.RequestOptions.prototype.family;
 /** @type {number} */
tsickle_declare_module.http.RequestOptions.prototype.port;
 /** @type {string} */
tsickle_declare_module.http.RequestOptions.prototype.localAddress;
 /** @type {string} */
tsickle_declare_module.http.RequestOptions.prototype.socketPath;
 /** @type {string} */
tsickle_declare_module.http.RequestOptions.prototype.method;
 /** @type {string} */
tsickle_declare_module.http.RequestOptions.prototype.path;
 /** @type {!Object<string,?>} */
tsickle_declare_module.http.RequestOptions.prototype.headers;
 /** @type {string} */
tsickle_declare_module.http.RequestOptions.prototype.auth;
 /** @type {(boolean|!Agent)} */
tsickle_declare_module.http.RequestOptions.prototype.agent;
 /** @type {number} */
tsickle_declare_module.http.RequestOptions.prototype.timeout;
/**
 * @extends {Server}
 * @record
 * @struct
 */
tsickle_declare_module.http.Server = function() {};
 /** @type {number} */
tsickle_declare_module.http.Server.prototype.maxHeadersCount;
 /** @type {number} */
tsickle_declare_module.http.Server.prototype.timeout;
 /** @type {boolean} */
tsickle_declare_module.http.Server.prototype.listening;

/**
 * @param {number} msecs
 * @param {!Function} callback
 * @return {void}
 */
tsickle_declare_module.http.Server.prototype.setTimeout = function(msecs, callback) {};
/**
 * @extends {IncomingMessage}
 * @record
 * @struct
 */
tsickle_declare_module.http.ServerRequest = function() {};
 /** @type {?} */
tsickle_declare_module.http.ServerRequest.prototype.connection;
/**
 * @record
 * @struct
 */
tsickle_declare_module.http.ServerResponse = function() {};
 /** @type {number} */
tsickle_declare_module.http.ServerResponse.prototype.statusCode;
 /** @type {string} */
tsickle_declare_module.http.ServerResponse.prototype.statusMessage;
 /** @type {boolean} */
tsickle_declare_module.http.ServerResponse.prototype.headersSent;
 /** @type {boolean} */
tsickle_declare_module.http.ServerResponse.prototype.sendDate;
 /** @type {boolean} */
tsickle_declare_module.http.ServerResponse.prototype.finished;

/**
 * @param {?|string} buffer_or_str_or_chunk
 * @param {!Function|string=} cb_or_encoding
 * @param {!Function|string=} cb_or_fd
 * @return {boolean|?}
 */
tsickle_declare_module.http.ServerResponse.prototype.write = function(buffer_or_str_or_chunk, cb_or_encoding, cb_or_fd) {};

/**
 * @return {void}
 */
tsickle_declare_module.http.ServerResponse.prototype.writeContinue = function() {};

/**
 * @param {number} statusCode
 * @param {string|?=} reasonPhrase_or_headers
 * @param {?=} headers
 * @return {void}
 */
tsickle_declare_module.http.ServerResponse.prototype.writeHead = function(statusCode, reasonPhrase_or_headers, headers) {};

/**
 * @param {string} name
 * @param {(string|!Array<string>)} value
 * @return {void}
 */
tsickle_declare_module.http.ServerResponse.prototype.setHeader = function(name, value) {};

/**
 * @param {number} msecs
 * @param {!Function} callback
 * @return {!ServerResponse}
 */
tsickle_declare_module.http.ServerResponse.prototype.setTimeout = function(msecs, callback) {};

/**
 * @param {string} name
 * @return {string}
 */
tsickle_declare_module.http.ServerResponse.prototype.getHeader = function(name) {};

/**
 * @param {string} name
 * @return {void}
 */
tsickle_declare_module.http.ServerResponse.prototype.removeHeader = function(name) {};

/**
 * @param {?} headers
 * @return {void}
 */
tsickle_declare_module.http.ServerResponse.prototype.addTrailers = function(headers) {};

/**
 * @param {?|string=} buffer_or_str_or_data
 * @param {!Function|string=} cb_or_encoding
 * @param {!Function=} cb
 * @return {void}
 */
tsickle_declare_module.http.ServerResponse.prototype.end = function(buffer_or_str_or_data, cb_or_encoding, cb) {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.http.ClientRequest = function() {};

/**
 * @param {?|string} buffer_or_str_or_chunk
 * @param {!Function|string=} cb_or_encoding
 * @param {!Function|string=} cb_or_fd
 * @return {boolean|void}
 */
tsickle_declare_module.http.ClientRequest.prototype.write = function(buffer_or_str_or_chunk, cb_or_encoding, cb_or_fd) {};

/**
 * @return {void}
 */
tsickle_declare_module.http.ClientRequest.prototype.abort = function() {};

/**
 * @param {number} timeout
 * @param {!Function=} callback
 * @return {void}
 */
tsickle_declare_module.http.ClientRequest.prototype.setTimeout = function(timeout, callback) {};

/**
 * @param {boolean=} noDelay
 * @return {void}
 */
tsickle_declare_module.http.ClientRequest.prototype.setNoDelay = function(noDelay) {};

/**
 * @param {boolean=} enable
 * @param {number=} initialDelay
 * @return {void}
 */
tsickle_declare_module.http.ClientRequest.prototype.setSocketKeepAlive = function(enable, initialDelay) {};

/**
 * @param {string} name
 * @param {(string|!Array<string>)} value
 * @return {void}
 */
tsickle_declare_module.http.ClientRequest.prototype.setHeader = function(name, value) {};

/**
 * @param {string} name
 * @return {string}
 */
tsickle_declare_module.http.ClientRequest.prototype.getHeader = function(name) {};

/**
 * @param {string} name
 * @return {void}
 */
tsickle_declare_module.http.ClientRequest.prototype.removeHeader = function(name) {};

/**
 * @param {?} headers
 * @return {void}
 */
tsickle_declare_module.http.ClientRequest.prototype.addTrailers = function(headers) {};

/**
 * @param {?|string=} buffer_or_str_or_data
 * @param {!Function|string=} cb_or_encoding
 * @param {!Function=} cb
 * @return {void}
 */
tsickle_declare_module.http.ClientRequest.prototype.end = function(buffer_or_str_or_data, cb_or_encoding, cb) {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.http.IncomingMessage = function() {};
 /** @type {string} */
tsickle_declare_module.http.IncomingMessage.prototype.httpVersion;
 /** @type {number} */
tsickle_declare_module.http.IncomingMessage.prototype.httpVersionMajor;
 /** @type {number} */
tsickle_declare_module.http.IncomingMessage.prototype.httpVersionMinor;
 /** @type {?} */
tsickle_declare_module.http.IncomingMessage.prototype.connection;
 /** @type {?} */
tsickle_declare_module.http.IncomingMessage.prototype.headers;
 /** @type {!Array<string>} */
tsickle_declare_module.http.IncomingMessage.prototype.rawHeaders;
 /** @type {?} */
tsickle_declare_module.http.IncomingMessage.prototype.trailers;
 /** @type {?} */
tsickle_declare_module.http.IncomingMessage.prototype.rawTrailers;
 /** @type {string} */
tsickle_declare_module.http.IncomingMessage.prototype.method;
 /** @type {string} */
tsickle_declare_module.http.IncomingMessage.prototype.url;
 /** @type {number} */
tsickle_declare_module.http.IncomingMessage.prototype.statusCode;
 /** @type {string} */
tsickle_declare_module.http.IncomingMessage.prototype.statusMessage;
 /** @type {?} */
tsickle_declare_module.http.IncomingMessage.prototype.socket;

/**
 * @param {number} msecs
 * @param {!Function} callback
 * @return {!NodeJS.Timer}
 */
tsickle_declare_module.http.IncomingMessage.prototype.setTimeout = function(msecs, callback) {};

/**
 * @param {!Error=} error
 * @return {void}
 */
tsickle_declare_module.http.IncomingMessage.prototype.destroy = function(error) {};
/**
 * @extends {IncomingMessage}
 * @record
 * @struct
 */
tsickle_declare_module.http.ClientResponse = function() {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.http.AgentOptions = function() {};
 /** @type {boolean} */
tsickle_declare_module.http.AgentOptions.prototype.keepAlive;
 /** @type {number} */
tsickle_declare_module.http.AgentOptions.prototype.keepAliveMsecs;
 /** @type {number} */
tsickle_declare_module.http.AgentOptions.prototype.maxSockets;
 /** @type {number} */
tsickle_declare_module.http.AgentOptions.prototype.maxFreeSockets;

/**
 * @constructor
 * @struct
 * @param {!AgentOptions=} opts
 */
tsickle_declare_module.http.Agent = function(opts) {};
 /** @type {number} */
tsickle_declare_module.http.Agent.prototype.maxSockets;
 /** @type {?} */
tsickle_declare_module.http.Agent.prototype.sockets;
 /** @type {?} */
tsickle_declare_module.http.Agent.prototype.requests;

/**
 * Destroy any sockets that are currently in use by the agent.
 * It is usually not necessary to do this. However, if you are using an agent with KeepAlive enabled,
 * then it is best to explicitly shut down the agent when you know that it will no longer be used. Otherwise,
 * sockets may hang open for quite a long time before the server terminates them.
 * @return {void}
 */
tsickle_declare_module.http.Agent.prototype.destroy = function() {};
 /** @type {!Array<string>} */
tsickle_declare_module.http.METHODS;
 /** @type {!Object<string,string>} */
tsickle_declare_module.http.STATUS_CODES;

/**
 * @param {function(!IncomingMessage, !ServerResponse): void=} requestListener
 * @return {!Server}
 */
tsickle_declare_module.http.createServer = function(requestListener) {};

/**
 * @param {number=} port
 * @param {string=} host
 * @return {?}
 */
tsickle_declare_module.http.createClient = function(port, host) {};

/**
 * @param {!RequestOptions} options
 * @param {function(!IncomingMessage): void=} callback
 * @return {!ClientRequest}
 */
tsickle_declare_module.http.request = function(options, callback) {};

/**
 * @param {?} options
 * @param {function(!IncomingMessage): void=} callback
 * @return {!ClientRequest}
 */
tsickle_declare_module.http.get = function(options, callback) {};
 /** @type {!Agent} */
tsickle_declare_module.http.globalAgent;
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "cluster"
/** @const */
tsickle_declare_module.cluster = {};

/* TODO: ImportDeclaration in tsickle_declare_module.cluster */

/* TODO: ImportDeclaration in tsickle_declare_module.cluster */

/* TODO: ImportDeclaration in tsickle_declare_module.cluster */
/**
 * @record
 * @struct
 */
tsickle_declare_module.cluster.ClusterSettings = function() {};
 /** @type {!Array<string>} */
tsickle_declare_module.cluster.ClusterSettings.prototype.execArgv;
 /** @type {string} */
tsickle_declare_module.cluster.ClusterSettings.prototype.exec;
 /** @type {!Array<string>} */
tsickle_declare_module.cluster.ClusterSettings.prototype.args;
 /** @type {boolean} */
tsickle_declare_module.cluster.ClusterSettings.prototype.silent;
 /** @type {!Array<?>} */
tsickle_declare_module.cluster.ClusterSettings.prototype.stdio;
 /** @type {number} */
tsickle_declare_module.cluster.ClusterSettings.prototype.uid;
 /** @type {number} */
tsickle_declare_module.cluster.ClusterSettings.prototype.gid;
/**
 * @record
 * @struct
 */
tsickle_declare_module.cluster.ClusterSetupMasterSettings = function() {};
 /** @type {string} */
tsickle_declare_module.cluster.ClusterSetupMasterSettings.prototype.exec;
 /** @type {!Array<string>} */
tsickle_declare_module.cluster.ClusterSetupMasterSettings.prototype.args;
 /** @type {boolean} */
tsickle_declare_module.cluster.ClusterSetupMasterSettings.prototype.silent;
 /** @type {!Array<?>} */
tsickle_declare_module.cluster.ClusterSetupMasterSettings.prototype.stdio;
/**
 * @record
 * @struct
 */
tsickle_declare_module.cluster.Address = function() {};
 /** @type {string} */
tsickle_declare_module.cluster.Address.prototype.address;
 /** @type {number} */
tsickle_declare_module.cluster.Address.prototype.port;
 /** @type {(number|string)} */
tsickle_declare_module.cluster.Address.prototype.addressType;
/**
 * @extends {internal.EventEmitter}
 * @constructor
 * @struct
 */
tsickle_declare_module.cluster.Worker = function() {};
 /** @type {string} */
tsickle_declare_module.cluster.Worker.prototype.id;
 /** @type {!ChildProcess} */
tsickle_declare_module.cluster.Worker.prototype.process;
 /** @type {boolean} */
tsickle_declare_module.cluster.Worker.prototype.suicide;
 /** @type {boolean} */
tsickle_declare_module.cluster.Worker.prototype.exitedAfterDisconnect;

/**
 * @param {?} message
 * @param {?=} sendHandle
 * @return {boolean}
 */
tsickle_declare_module.cluster.Worker.prototype.send = function(message, sendHandle) {};

/**
 * @param {string=} signal
 * @return {void}
 */
tsickle_declare_module.cluster.Worker.prototype.kill = function(signal) {};

/**
 * @param {string=} signal
 * @return {void}
 */
tsickle_declare_module.cluster.Worker.prototype.destroy = function(signal) {};

/**
 * @return {void}
 */
tsickle_declare_module.cluster.Worker.prototype.disconnect = function() {};

/**
 * @return {boolean}
 */
tsickle_declare_module.cluster.Worker.prototype.isConnected = function() {};

/**
 * @return {boolean}
 */
tsickle_declare_module.cluster.Worker.prototype.isDead = function() {};

/**
 * events.EventEmitter
 *   1. disconnect
 *   2. error
 *   3. exit
 *   4. listening
 *   5. message
 *   6. online
 * @param {string} event
 * @param {!Function|function(): void|function(number, string): void|function(!Address): void|function(?, (?|!Server)): void} listener
 * @return {Worker}
 */
tsickle_declare_module.cluster.Worker.prototype.addListener = function(event, listener) {};

/**
 * @param {(string|symbol)|string} event
 * @param {...?|function(): void|function(number, string): void|function(!Address): void|function(?, (?|!Server)): void} args_or_listener
 * @return {boolean}
 */
tsickle_declare_module.cluster.Worker.prototype.emit = function(event, args_or_listener) {};

/**
 * @param {string} event
 * @param {!Function|function(): void|function(number, string): void|function(!Address): void|function(?, (?|!Server)): void} listener
 * @return {Worker}
 */
tsickle_declare_module.cluster.Worker.prototype.on = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(): void|function(number, string): void|function(!Address): void|function(?, (?|!Server)): void} listener
 * @return {Worker}
 */
tsickle_declare_module.cluster.Worker.prototype.once = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(): void|function(number, string): void|function(!Address): void|function(?, (?|!Server)): void} listener
 * @return {Worker}
 */
tsickle_declare_module.cluster.Worker.prototype.prependListener = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(): void|function(number, string): void|function(!Address): void|function(?, (?|!Server)): void} listener
 * @return {Worker}
 */
tsickle_declare_module.cluster.Worker.prototype.prependOnceListener = function(event, listener) {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.cluster.Cluster = function() {};
 /** @type {!Worker} */
tsickle_declare_module.cluster.Cluster.prototype.Worker;
 /** @type {boolean} */
tsickle_declare_module.cluster.Cluster.prototype.isMaster;
 /** @type {boolean} */
tsickle_declare_module.cluster.Cluster.prototype.isWorker;
 /** @type {!ClusterSettings} */
tsickle_declare_module.cluster.Cluster.prototype.settings;
 /** @type {!Worker} */
tsickle_declare_module.cluster.Cluster.prototype.worker;
 /** @type {!Object<string,!Worker>} */
tsickle_declare_module.cluster.Cluster.prototype.workers;

/**
 * @param {!Function=} callback
 * @return {void}
 */
tsickle_declare_module.cluster.Cluster.prototype.disconnect = function(callback) {};

/**
 * @param {?=} env
 * @return {!Worker}
 */
tsickle_declare_module.cluster.Cluster.prototype.fork = function(env) {};

/**
 * @param {!ClusterSetupMasterSettings=} settings
 * @return {void}
 */
tsickle_declare_module.cluster.Cluster.prototype.setupMaster = function(settings) {};

/**
 * events.EventEmitter
 *   1. disconnect
 *   2. exit
 *   3. fork
 *   4. listening
 *   5. message
 *   6. online
 *   7. setup
 * @param {string} event
 * @param {!Function|function(!Worker): void|function(!Worker, number, string): void|function(!Worker, !Address): void|function(!Worker, ?, (?|!Server)): void|function(?): void} listener
 * @return {Cluster}
 */
tsickle_declare_module.cluster.Cluster.prototype.addListener = function(event, listener) {};

/**
 * @param {(string|symbol)|string} event
 * @param {...?|function(!Worker): void|function(!Worker, number, string): void|function(!Worker, !Address): void|function(!Worker, ?, (?|!Server)): void|function(?): void} args_or_listener
 * @return {boolean}
 */
tsickle_declare_module.cluster.Cluster.prototype.emit = function(event, args_or_listener) {};

/**
 * @param {string} event
 * @param {!Function|function(!Worker): void|function(!Worker, number, string): void|function(!Worker, !Address): void|function(!Worker, ?, (?|!Server)): void|function(?): void} listener
 * @return {Cluster}
 */
tsickle_declare_module.cluster.Cluster.prototype.on = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(!Worker): void|function(!Worker, number, string): void|function(!Worker, !Address): void|function(!Worker, ?, (?|!Server)): void|function(?): void} listener
 * @return {Cluster}
 */
tsickle_declare_module.cluster.Cluster.prototype.once = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(!Worker): void|function(!Worker, number, string): void|function(!Worker, !Address): void|function(!Worker, ?, (?|!Server)): void|function(?): void} listener
 * @return {Cluster}
 */
tsickle_declare_module.cluster.Cluster.prototype.prependListener = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(!Worker): void|function(!Worker, number, string): void|function(!Worker, !Address): void|function(!Worker, ?, (?|!Server)): void|function(?): void} listener
 * @return {Cluster}
 */
tsickle_declare_module.cluster.Cluster.prototype.prependOnceListener = function(event, listener) {};

/**
 * @param {!Function=} callback
 * @return {void}
 */
tsickle_declare_module.cluster.disconnect = function(callback) {};

/**
 * @param {?=} env
 * @return {!Worker}
 */
tsickle_declare_module.cluster.fork = function(env) {};
 /** @type {boolean} */
tsickle_declare_module.cluster.isMaster;
 /** @type {boolean} */
tsickle_declare_module.cluster.isWorker;
 /** @type {!ClusterSettings} */
tsickle_declare_module.cluster.settings;

/**
 * @param {!ClusterSetupMasterSettings=} settings
 * @return {void}
 */
tsickle_declare_module.cluster.setupMaster = function(settings) {};
 /** @type {!Worker} */
tsickle_declare_module.cluster.worker;
 /** @type {!Object<string,!Worker>} */
tsickle_declare_module.cluster.workers;

/**
 * events.EventEmitter
 *   1. disconnect
 *   2. exit
 *   3. fork
 *   4. listening
 *   5. message
 *   6. online
 *   7. setup
 * @param {string} event
 * @param {!Function|function(!Worker): void|function(!Worker, number, string): void|function(!Worker, !Address): void|function(!Worker, ?, (?|!Server)): void|function(?): void} listener
 * @return {!Cluster}
 */
tsickle_declare_module.cluster.addListener = function(event, listener) {};

/**
 * @param {(string|symbol)|string} event
 * @param {...?|function(!Worker): void|function(!Worker, number, string): void|function(!Worker, !Address): void|function(!Worker, ?, (?|!Server)): void|function(?): void} args_or_listener
 * @return {boolean}
 */
tsickle_declare_module.cluster.emit = function(event, args_or_listener) {};

/**
 * @param {string} event
 * @param {!Function|function(!Worker): void|function(!Worker, number, string): void|function(!Worker, !Address): void|function(!Worker, ?, (?|!Server)): void|function(?): void} listener
 * @return {!Cluster}
 */
tsickle_declare_module.cluster.on = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(!Worker): void|function(!Worker, number, string): void|function(!Worker, !Address): void|function(!Worker, ?, (?|!Server)): void|function(?): void} listener
 * @return {!Cluster}
 */
tsickle_declare_module.cluster.once = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function} listener
 * @return {!Cluster}
 */
tsickle_declare_module.cluster.removeListener = function(event, listener) {};

/**
 * @param {string=} event
 * @return {!Cluster}
 */
tsickle_declare_module.cluster.removeAllListeners = function(event) {};

/**
 * @param {number} n
 * @return {!Cluster}
 */
tsickle_declare_module.cluster.setMaxListeners = function(n) {};

/**
 * @return {number}
 */
tsickle_declare_module.cluster.getMaxListeners = function() {};

/**
 * @param {string} event
 * @return {!Array<!Function>}
 */
tsickle_declare_module.cluster.listeners = function(event) {};

/**
 * @param {string} type
 * @return {number}
 */
tsickle_declare_module.cluster.listenerCount = function(type) {};

/**
 * @param {string} event
 * @param {!Function|function(!Worker): void|function(!Worker, number, string): void|function(!Worker, !Address): void|function(!Worker, ?, (?|!Server)): void|function(?): void} listener
 * @return {!Cluster}
 */
tsickle_declare_module.cluster.prependListener = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(!Worker): void|function(!Worker, number, string): void|function(!Worker, !Address): void|function(!Worker, ?, (?|!Server)): void|function(?): void} listener
 * @return {!Cluster}
 */
tsickle_declare_module.cluster.prependOnceListener = function(event, listener) {};

/**
 * @return {!Array<string>}
 */
tsickle_declare_module.cluster.eventNames = function() {};
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "zlib"
/** @const */
tsickle_declare_module.zlib = {};

/* TODO: ImportDeclaration in tsickle_declare_module.zlib */
/**
 * @record
 * @struct
 */
tsickle_declare_module.zlib.ZlibOptions = function() {};
 /** @type {number} */
tsickle_declare_module.zlib.ZlibOptions.prototype.flush;
 /** @type {number} */
tsickle_declare_module.zlib.ZlibOptions.prototype.finishFlush;
 /** @type {number} */
tsickle_declare_module.zlib.ZlibOptions.prototype.chunkSize;
 /** @type {number} */
tsickle_declare_module.zlib.ZlibOptions.prototype.windowBits;
 /** @type {number} */
tsickle_declare_module.zlib.ZlibOptions.prototype.level;
 /** @type {number} */
tsickle_declare_module.zlib.ZlibOptions.prototype.memLevel;
 /** @type {number} */
tsickle_declare_module.zlib.ZlibOptions.prototype.strategy;
 /** @type {?} */
tsickle_declare_module.zlib.ZlibOptions.prototype.dictionary;
/**
 * @record
 * @struct
 */
tsickle_declare_module.zlib.Gzip = function() {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.zlib.Gunzip = function() {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.zlib.Deflate = function() {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.zlib.Inflate = function() {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.zlib.DeflateRaw = function() {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.zlib.InflateRaw = function() {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.zlib.Unzip = function() {};

/**
 * @param {!ZlibOptions=} options
 * @return {!Gzip}
 */
tsickle_declare_module.zlib.createGzip = function(options) {};

/**
 * @param {!ZlibOptions=} options
 * @return {!Gunzip}
 */
tsickle_declare_module.zlib.createGunzip = function(options) {};

/**
 * @param {!ZlibOptions=} options
 * @return {!Deflate}
 */
tsickle_declare_module.zlib.createDeflate = function(options) {};

/**
 * @param {!ZlibOptions=} options
 * @return {!Inflate}
 */
tsickle_declare_module.zlib.createInflate = function(options) {};

/**
 * @param {!ZlibOptions=} options
 * @return {!DeflateRaw}
 */
tsickle_declare_module.zlib.createDeflateRaw = function(options) {};

/**
 * @param {!ZlibOptions=} options
 * @return {!InflateRaw}
 */
tsickle_declare_module.zlib.createInflateRaw = function(options) {};

/**
 * @param {!ZlibOptions=} options
 * @return {!Unzip}
 */
tsickle_declare_module.zlib.createUnzip = function(options) {};

/**
 * @param {(string|?)} buf
 * @param {function(!Error, ?): void|!ZlibOptions} callback_or_options
 * @param {function(!Error, ?): void=} callback
 * @return {void}
 */
tsickle_declare_module.zlib.deflate = function(buf, callback_or_options, callback) {};

/**
 * @param {(string|?)} buf
 * @param {!ZlibOptions=} options
 * @return {?}
 */
tsickle_declare_module.zlib.deflateSync = function(buf, options) {};

/**
 * @param {(string|?)} buf
 * @param {function(!Error, ?): void|!ZlibOptions} callback_or_options
 * @param {function(!Error, ?): void=} callback
 * @return {void}
 */
tsickle_declare_module.zlib.deflateRaw = function(buf, callback_or_options, callback) {};

/**
 * @param {(string|?)} buf
 * @param {!ZlibOptions=} options
 * @return {?}
 */
tsickle_declare_module.zlib.deflateRawSync = function(buf, options) {};

/**
 * @param {?} buf
 * @param {function(!Error, ?): void|!ZlibOptions} callback_or_options
 * @param {function(!Error, ?): void=} callback
 * @return {void}
 */
tsickle_declare_module.zlib.gzip = function(buf, callback_or_options, callback) {};

/**
 * @param {?} buf
 * @param {!ZlibOptions=} options
 * @return {?}
 */
tsickle_declare_module.zlib.gzipSync = function(buf, options) {};

/**
 * @param {?} buf
 * @param {function(!Error, ?): void|!ZlibOptions} callback_or_options
 * @param {function(!Error, ?): void=} callback
 * @return {void}
 */
tsickle_declare_module.zlib.gunzip = function(buf, callback_or_options, callback) {};

/**
 * @param {?} buf
 * @param {!ZlibOptions=} options
 * @return {?}
 */
tsickle_declare_module.zlib.gunzipSync = function(buf, options) {};

/**
 * @param {?} buf
 * @param {function(!Error, ?): void|!ZlibOptions} callback_or_options
 * @param {function(!Error, ?): void=} callback
 * @return {void}
 */
tsickle_declare_module.zlib.inflate = function(buf, callback_or_options, callback) {};

/**
 * @param {?} buf
 * @param {!ZlibOptions=} options
 * @return {?}
 */
tsickle_declare_module.zlib.inflateSync = function(buf, options) {};

/**
 * @param {?} buf
 * @param {function(!Error, ?): void|!ZlibOptions} callback_or_options
 * @param {function(!Error, ?): void=} callback
 * @return {void}
 */
tsickle_declare_module.zlib.inflateRaw = function(buf, callback_or_options, callback) {};

/**
 * @param {?} buf
 * @param {!ZlibOptions=} options
 * @return {?}
 */
tsickle_declare_module.zlib.inflateRawSync = function(buf, options) {};

/**
 * @param {?} buf
 * @param {function(!Error, ?): void|!ZlibOptions} callback_or_options
 * @param {function(!Error, ?): void=} callback
 * @return {void}
 */
tsickle_declare_module.zlib.unzip = function(buf, callback_or_options, callback) {};

/**
 * @param {?} buf
 * @param {!ZlibOptions=} options
 * @return {?}
 */
tsickle_declare_module.zlib.unzipSync = function(buf, options) {};
/** @const */
tsickle_declare_module.zlib.constants = {};
 /** @type {number} */
tsickle_declare_module.zlib.constants.Z_NO_FLUSH;
 /** @type {number} */
tsickle_declare_module.zlib.constants.Z_PARTIAL_FLUSH;
 /** @type {number} */
tsickle_declare_module.zlib.constants.Z_SYNC_FLUSH;
 /** @type {number} */
tsickle_declare_module.zlib.constants.Z_FULL_FLUSH;
 /** @type {number} */
tsickle_declare_module.zlib.constants.Z_FINISH;
 /** @type {number} */
tsickle_declare_module.zlib.constants.Z_BLOCK;
 /** @type {number} */
tsickle_declare_module.zlib.constants.Z_TREES;
 /** @type {number} */
tsickle_declare_module.zlib.constants.Z_OK;
 /** @type {number} */
tsickle_declare_module.zlib.constants.Z_STREAM_END;
 /** @type {number} */
tsickle_declare_module.zlib.constants.Z_NEED_DICT;
 /** @type {number} */
tsickle_declare_module.zlib.constants.Z_ERRNO;
 /** @type {number} */
tsickle_declare_module.zlib.constants.Z_STREAM_ERROR;
 /** @type {number} */
tsickle_declare_module.zlib.constants.Z_DATA_ERROR;
 /** @type {number} */
tsickle_declare_module.zlib.constants.Z_MEM_ERROR;
 /** @type {number} */
tsickle_declare_module.zlib.constants.Z_BUF_ERROR;
 /** @type {number} */
tsickle_declare_module.zlib.constants.Z_VERSION_ERROR;
 /** @type {number} */
tsickle_declare_module.zlib.constants.Z_NO_COMPRESSION;
 /** @type {number} */
tsickle_declare_module.zlib.constants.Z_BEST_SPEED;
 /** @type {number} */
tsickle_declare_module.zlib.constants.Z_BEST_COMPRESSION;
 /** @type {number} */
tsickle_declare_module.zlib.constants.Z_DEFAULT_COMPRESSION;
 /** @type {number} */
tsickle_declare_module.zlib.constants.Z_FILTERED;
 /** @type {number} */
tsickle_declare_module.zlib.constants.Z_HUFFMAN_ONLY;
 /** @type {number} */
tsickle_declare_module.zlib.constants.Z_RLE;
 /** @type {number} */
tsickle_declare_module.zlib.constants.Z_FIXED;
 /** @type {number} */
tsickle_declare_module.zlib.constants.Z_DEFAULT_STRATEGY;
 /** @type {number} */
tsickle_declare_module.zlib.Z_NO_FLUSH;
 /** @type {number} */
tsickle_declare_module.zlib.Z_PARTIAL_FLUSH;
 /** @type {number} */
tsickle_declare_module.zlib.Z_SYNC_FLUSH;
 /** @type {number} */
tsickle_declare_module.zlib.Z_FULL_FLUSH;
 /** @type {number} */
tsickle_declare_module.zlib.Z_FINISH;
 /** @type {number} */
tsickle_declare_module.zlib.Z_BLOCK;
 /** @type {number} */
tsickle_declare_module.zlib.Z_TREES;
 /** @type {number} */
tsickle_declare_module.zlib.Z_OK;
 /** @type {number} */
tsickle_declare_module.zlib.Z_STREAM_END;
 /** @type {number} */
tsickle_declare_module.zlib.Z_NEED_DICT;
 /** @type {number} */
tsickle_declare_module.zlib.Z_ERRNO;
 /** @type {number} */
tsickle_declare_module.zlib.Z_STREAM_ERROR;
 /** @type {number} */
tsickle_declare_module.zlib.Z_DATA_ERROR;
 /** @type {number} */
tsickle_declare_module.zlib.Z_MEM_ERROR;
 /** @type {number} */
tsickle_declare_module.zlib.Z_BUF_ERROR;
 /** @type {number} */
tsickle_declare_module.zlib.Z_VERSION_ERROR;
 /** @type {number} */
tsickle_declare_module.zlib.Z_NO_COMPRESSION;
 /** @type {number} */
tsickle_declare_module.zlib.Z_BEST_SPEED;
 /** @type {number} */
tsickle_declare_module.zlib.Z_BEST_COMPRESSION;
 /** @type {number} */
tsickle_declare_module.zlib.Z_DEFAULT_COMPRESSION;
 /** @type {number} */
tsickle_declare_module.zlib.Z_FILTERED;
 /** @type {number} */
tsickle_declare_module.zlib.Z_HUFFMAN_ONLY;
 /** @type {number} */
tsickle_declare_module.zlib.Z_RLE;
 /** @type {number} */
tsickle_declare_module.zlib.Z_FIXED;
 /** @type {number} */
tsickle_declare_module.zlib.Z_DEFAULT_STRATEGY;
 /** @type {number} */
tsickle_declare_module.zlib.Z_BINARY;
 /** @type {number} */
tsickle_declare_module.zlib.Z_TEXT;
 /** @type {number} */
tsickle_declare_module.zlib.Z_ASCII;
 /** @type {number} */
tsickle_declare_module.zlib.Z_UNKNOWN;
 /** @type {number} */
tsickle_declare_module.zlib.Z_DEFLATED;
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "os"
/** @const */
tsickle_declare_module.os = {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.os.CpuInfo = function() {};
 /** @type {string} */
tsickle_declare_module.os.CpuInfo.prototype.model;
 /** @type {number} */
tsickle_declare_module.os.CpuInfo.prototype.speed;
 /** @type {{user: number, nice: number, sys: number, idle: number, irq: number}} */
tsickle_declare_module.os.CpuInfo.prototype.times;
/**
 * @record
 * @struct
 */
tsickle_declare_module.os.NetworkInterfaceInfo = function() {};
 /** @type {string} */
tsickle_declare_module.os.NetworkInterfaceInfo.prototype.address;
 /** @type {string} */
tsickle_declare_module.os.NetworkInterfaceInfo.prototype.netmask;
 /** @type {string} */
tsickle_declare_module.os.NetworkInterfaceInfo.prototype.family;
 /** @type {string} */
tsickle_declare_module.os.NetworkInterfaceInfo.prototype.mac;
 /** @type {boolean} */
tsickle_declare_module.os.NetworkInterfaceInfo.prototype.internal;

/**
 * @return {string}
 */
tsickle_declare_module.os.hostname = function() {};

/**
 * @return {!Array<number>}
 */
tsickle_declare_module.os.loadavg = function() {};

/**
 * @return {number}
 */
tsickle_declare_module.os.uptime = function() {};

/**
 * @return {number}
 */
tsickle_declare_module.os.freemem = function() {};

/**
 * @return {number}
 */
tsickle_declare_module.os.totalmem = function() {};

/**
 * @return {!Array<!CpuInfo>}
 */
tsickle_declare_module.os.cpus = function() {};

/**
 * @return {string}
 */
tsickle_declare_module.os.type = function() {};

/**
 * @return {string}
 */
tsickle_declare_module.os.release = function() {};

/**
 * @return {!Object<string,!Array<!NetworkInterfaceInfo>>}
 */
tsickle_declare_module.os.networkInterfaces = function() {};

/**
 * @return {string}
 */
tsickle_declare_module.os.homedir = function() {};

/**
 * @param {{encoding: string}=} options
 * @return {{username: string, uid: number, gid: number, shell: ?, homedir: string}}
 */
tsickle_declare_module.os.userInfo = function(options) {};
 /** @type {{UV_UDP_REUSEADDR: number, signals: {SIGHUP: number, SIGINT: number, SIGQUIT: number, SIGILL: number, SIGTRAP: number, SIGABRT: number, SIGIOT: number, SIGBUS: number, SIGFPE: number, SIGKILL: number, SIGUSR1: number, SIGSEGV: number, SIGUSR2: number, SIGPIPE: number, SIGALRM: number, SIGTERM: number, SIGCHLD: number, SIGSTKFLT: number, SIGCONT: number, SIGSTOP: number, SIGTSTP: number, SIGTTIN: number, SIGTTOU: number, SIGURG: number, SIGXCPU: number, SIGXFSZ: number, SIGVTALRM: number, SIGPROF: number, SIGWINCH: number, SIGIO: number, SIGPOLL: number, SIGPWR: number, SIGSYS: number, SIGUNUSED: number}, errno: {E2BIG: number, EACCES: number, EADDRINUSE: number, EADDRNOTAVAIL: number, EAFNOSUPPORT: number, EAGAIN: number, EALREADY: number, EBADF: number, EBADMSG: number, EBUSY: number, ECANCELED: number, ECHILD: number, ECONNABORTED: number, ECONNREFUSED: number, ECONNRESET: number, EDEADLK: number, EDESTADDRREQ: number, EDOM: number, EDQUOT: number, EEXIST: number, EFAULT: number, EFBIG: number, EHOSTUNREACH: number, EIDRM: number, EILSEQ: number, EINPROGRESS: number, EINTR: number, EINVAL: number, EIO: number, EISCONN: number, EISDIR: number, ELOOP: number, EMFILE: number, EMLINK: number, EMSGSIZE: number, EMULTIHOP: number, ENAMETOOLONG: number, ENETDOWN: number, ENETRESET: number, ENETUNREACH: number, ENFILE: number, ENOBUFS: number, ENODATA: number, ENODEV: number, ENOENT: number, ENOEXEC: number, ENOLCK: number, ENOLINK: number, ENOMEM: number, ENOMSG: number, ENOPROTOOPT: number, ENOSPC: number, ENOSR: number, ENOSTR: number, ENOSYS: number, ENOTCONN: number, ENOTDIR: number, ENOTEMPTY: number, ENOTSOCK: number, ENOTSUP: number, ENOTTY: number, ENXIO: number, EOPNOTSUPP: number, EOVERFLOW: number, EPERM: number, EPIPE: number, EPROTO: number, EPROTONOSUPPORT: number, EPROTOTYPE: number, ERANGE: number, EROFS: number, ESPIPE: number, ESRCH: number, ESTALE: number, ETIME: number, ETIMEDOUT: number, ETXTBSY: number, EWOULDBLOCK: number, EXDEV: number}}} */
tsickle_declare_module.os.constants;

/**
 * @return {string}
 */
tsickle_declare_module.os.arch = function() {};

/**
 * @return {string}
 */
tsickle_declare_module.os.platform = function() {};

/**
 * @return {string}
 */
tsickle_declare_module.os.tmpdir = function() {};
 /** @type {string} */
tsickle_declare_module.os.EOL;

/**
 * @return {string}
 */
tsickle_declare_module.os.endianness = function() {};
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "https"
/** @const */
tsickle_declare_module.https = {};

/* TODO: ImportDeclaration in tsickle_declare_module.https */

/* TODO: ImportDeclaration in tsickle_declare_module.https */

/* TODO: ImportDeclaration in tsickle_declare_module.https */
/**
 * @record
 * @struct
 */
tsickle_declare_module.https.ServerOptions = function() {};
 /** @type {?} */
tsickle_declare_module.https.ServerOptions.prototype.pfx;
 /** @type {?} */
tsickle_declare_module.https.ServerOptions.prototype.key;
 /** @type {string} */
tsickle_declare_module.https.ServerOptions.prototype.passphrase;
 /** @type {?} */
tsickle_declare_module.https.ServerOptions.prototype.cert;
 /** @type {?} */
tsickle_declare_module.https.ServerOptions.prototype.ca;
 /** @type {?} */
tsickle_declare_module.https.ServerOptions.prototype.crl;
 /** @type {string} */
tsickle_declare_module.https.ServerOptions.prototype.ciphers;
 /** @type {boolean} */
tsickle_declare_module.https.ServerOptions.prototype.honorCipherOrder;
 /** @type {boolean} */
tsickle_declare_module.https.ServerOptions.prototype.requestCert;
 /** @type {boolean} */
tsickle_declare_module.https.ServerOptions.prototype.rejectUnauthorized;
 /** @type {?} */
tsickle_declare_module.https.ServerOptions.prototype.NPNProtocols;
 /** @type {function(string, function(!Error, !SecureContext): ?): ?} */
tsickle_declare_module.https.ServerOptions.prototype.SNICallback;
/**
 * @extends {RequestOptions}
 * @record
 * @struct
 */
tsickle_declare_module.https.RequestOptions = function() {};
 /** @type {?} */
tsickle_declare_module.https.RequestOptions.prototype.pfx;
 /** @type {?} */
tsickle_declare_module.https.RequestOptions.prototype.key;
 /** @type {string} */
tsickle_declare_module.https.RequestOptions.prototype.passphrase;
 /** @type {?} */
tsickle_declare_module.https.RequestOptions.prototype.cert;
 /** @type {?} */
tsickle_declare_module.https.RequestOptions.prototype.ca;
 /** @type {string} */
tsickle_declare_module.https.RequestOptions.prototype.ciphers;
 /** @type {boolean} */
tsickle_declare_module.https.RequestOptions.prototype.rejectUnauthorized;
 /** @type {string} */
tsickle_declare_module.https.RequestOptions.prototype.secureProtocol;
/**
 * @record
 * @struct
 */
tsickle_declare_module.https.Agent = function() {};
/**
 * @extends {AgentOptions}
 * @record
 * @struct
 */
tsickle_declare_module.https.AgentOptions = function() {};
 /** @type {?} */
tsickle_declare_module.https.AgentOptions.prototype.pfx;
 /** @type {?} */
tsickle_declare_module.https.AgentOptions.prototype.key;
 /** @type {string} */
tsickle_declare_module.https.AgentOptions.prototype.passphrase;
 /** @type {?} */
tsickle_declare_module.https.AgentOptions.prototype.cert;
 /** @type {?} */
tsickle_declare_module.https.AgentOptions.prototype.ca;
 /** @type {string} */
tsickle_declare_module.https.AgentOptions.prototype.ciphers;
 /** @type {boolean} */
tsickle_declare_module.https.AgentOptions.prototype.rejectUnauthorized;
 /** @type {string} */
tsickle_declare_module.https.AgentOptions.prototype.secureProtocol;
 /** @type {number} */
tsickle_declare_module.https.AgentOptions.prototype.maxCachedSessions;
 /** @type {function(new: (?), !AgentOptions): ?} */
tsickle_declare_module.https.Agent;
/**
 * @extends {Server}
 * @record
 * @struct
 */
tsickle_declare_module.https.Server = function() {};

/**
 * @param {!ServerOptions} options
 * @param {!Function=} requestListener
 * @return {!Server}
 */
tsickle_declare_module.https.createServer = function(options, requestListener) {};

/**
 * @param {!RequestOptions} options
 * @param {function(!IncomingMessage): void=} callback
 * @return {!ClientRequest}
 */
tsickle_declare_module.https.request = function(options, callback) {};

/**
 * @param {!RequestOptions} options
 * @param {function(!IncomingMessage): void=} callback
 * @return {!ClientRequest}
 */
tsickle_declare_module.https.get = function(options, callback) {};
 /** @type {?} */
tsickle_declare_module.https.globalAgent;
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "punycode"
/** @const */
tsickle_declare_module.punycode = {};

/**
 * @param {string} string
 * @return {string}
 */
tsickle_declare_module.punycode.decode = function(string) {};

/**
 * @param {string} string
 * @return {string}
 */
tsickle_declare_module.punycode.encode = function(string) {};

/**
 * @param {string} domain
 * @return {string}
 */
tsickle_declare_module.punycode.toUnicode = function(domain) {};

/**
 * @param {string} domain
 * @return {string}
 */
tsickle_declare_module.punycode.toASCII = function(domain) {};
 /** @type {?} */
tsickle_declare_module.punycode.ucs2;

/**
 * @param {string} string
 * @return {!Array<number>}
 */
tsickle_declare_module.punycode.ucs2.prototype.decode = function(string) {};

/**
 * @param {!Array<number>} codePoints
 * @return {string}
 */
tsickle_declare_module.punycode.ucs2.prototype.encode = function(codePoints) {};
 /** @type {?} */
tsickle_declare_module.punycode.version;
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "repl"
/** @const */
tsickle_declare_module.repl = {};

/* TODO: ImportDeclaration in tsickle_declare_module.repl */

/* TODO: ImportDeclaration in tsickle_declare_module.repl */
/**
 * @record
 * @struct
 */
tsickle_declare_module.repl.ReplOptions = function() {};
 /** @type {string} */
tsickle_declare_module.repl.ReplOptions.prototype.prompt;
 /** @type {!NodeJS.ReadableStream} */
tsickle_declare_module.repl.ReplOptions.prototype.input;
 /** @type {!NodeJS.WritableStream} */
tsickle_declare_module.repl.ReplOptions.prototype.output;
 /** @type {boolean} */
tsickle_declare_module.repl.ReplOptions.prototype.terminal;
 /** @type {!Function} */
tsickle_declare_module.repl.ReplOptions.prototype.eval;
 /** @type {boolean} */
tsickle_declare_module.repl.ReplOptions.prototype.useColors;
 /** @type {boolean} */
tsickle_declare_module.repl.ReplOptions.prototype.useGlobal;
 /** @type {boolean} */
tsickle_declare_module.repl.ReplOptions.prototype.ignoreUndefined;
 /** @type {!Function} */
tsickle_declare_module.repl.ReplOptions.prototype.writer;
 /** @type {!Function} */
tsickle_declare_module.repl.ReplOptions.prototype.completer;
 /** @type {?} */
tsickle_declare_module.repl.ReplOptions.prototype.replMode;
 /** @type {?} */
tsickle_declare_module.repl.ReplOptions.prototype.breakEvalOnSigint;
/**
 * @extends {ReadLine}
 * @record
 * @struct
 */
tsickle_declare_module.repl.REPLServer = function() {};
 /** @type {?} */
tsickle_declare_module.repl.REPLServer.prototype.context;

/**
 * @param {string} keyword
 * @param {(!Function|{help: string, action: !Function})} cmd
 * @return {void}
 */
tsickle_declare_module.repl.REPLServer.prototype.defineCommand = function(keyword, cmd) {};

/**
 * @param {boolean=} preserveCursor
 * @return {void}
 */
tsickle_declare_module.repl.REPLServer.prototype.displayPrompt = function(preserveCursor) {};

/**
 * events.EventEmitter
 * 1. exit
 * 2. reset
 * 
 * @param {string} event
 * @param {!Function|function(): void} listener
 * @return {REPLServer}
 */
tsickle_declare_module.repl.REPLServer.prototype.addListener = function(event, listener) {};

/**
 * @param {(string|symbol)|string} event
 * @param {...?} args_or_context
 * @return {boolean}
 */
tsickle_declare_module.repl.REPLServer.prototype.emit = function(event, args_or_context) {};

/**
 * @param {string} event
 * @param {!Function|function(): void} listener
 * @return {REPLServer}
 */
tsickle_declare_module.repl.REPLServer.prototype.on = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(): void} listener
 * @return {REPLServer}
 */
tsickle_declare_module.repl.REPLServer.prototype.once = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(): void} listener
 * @return {REPLServer}
 */
tsickle_declare_module.repl.REPLServer.prototype.prependListener = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(): void} listener
 * @return {REPLServer}
 */
tsickle_declare_module.repl.REPLServer.prototype.prependOnceListener = function(event, listener) {};

/**
 * @param {(string|!ReplOptions)=} options
 * @return {!REPLServer}
 */
tsickle_declare_module.repl.start = function(options) {};
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "readline"
/** @const */
tsickle_declare_module.readline = {};

/* TODO: ImportDeclaration in tsickle_declare_module.readline */

/* TODO: ImportDeclaration in tsickle_declare_module.readline */
/**
 * @record
 * @struct
 */
tsickle_declare_module.readline.Key = function() {};
 /** @type {string} */
tsickle_declare_module.readline.Key.prototype.sequence;
 /** @type {string} */
tsickle_declare_module.readline.Key.prototype.name;
 /** @type {boolean} */
tsickle_declare_module.readline.Key.prototype.ctrl;
 /** @type {boolean} */
tsickle_declare_module.readline.Key.prototype.meta;
 /** @type {boolean} */
tsickle_declare_module.readline.Key.prototype.shift;
/**
 * @record
 * @struct
 */
tsickle_declare_module.readline.ReadLine = function() {};

/**
 * @param {string} prompt
 * @return {void}
 */
tsickle_declare_module.readline.ReadLine.prototype.setPrompt = function(prompt) {};

/**
 * @param {boolean=} preserveCursor
 * @return {void}
 */
tsickle_declare_module.readline.ReadLine.prototype.prompt = function(preserveCursor) {};

/**
 * @param {string} query
 * @param {function(string): void} callback
 * @return {void}
 */
tsickle_declare_module.readline.ReadLine.prototype.question = function(query, callback) {};

/**
 * @return {!ReadLine}
 */
tsickle_declare_module.readline.ReadLine.prototype.pause = function() {};

/**
 * @return {!ReadLine}
 */
tsickle_declare_module.readline.ReadLine.prototype.resume = function() {};

/**
 * @return {void}
 */
tsickle_declare_module.readline.ReadLine.prototype.close = function() {};

/**
 * @param {(string|?)} data
 * @param {!Key=} key
 * @return {void}
 */
tsickle_declare_module.readline.ReadLine.prototype.write = function(data, key) {};

/**
 * events.EventEmitter
 * 1. close
 * 2. line
 * 3. pause
 * 4. resume
 * 5. SIGCONT
 * 6. SIGINT
 * 7. SIGTSTP
 * 
 * @param {string} event
 * @param {!Function|function(): void|function(?): void} listener
 * @return {ReadLine}
 */
tsickle_declare_module.readline.ReadLine.prototype.addListener = function(event, listener) {};

/**
 * @param {(string|symbol)|string} event
 * @param {...?} args_or_input
 * @return {boolean}
 */
tsickle_declare_module.readline.ReadLine.prototype.emit = function(event, args_or_input) {};

/**
 * @param {string} event
 * @param {!Function|function(): void|function(?): void} listener
 * @return {ReadLine}
 */
tsickle_declare_module.readline.ReadLine.prototype.on = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(): void|function(?): void} listener
 * @return {ReadLine}
 */
tsickle_declare_module.readline.ReadLine.prototype.once = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(): void|function(?): void} listener
 * @return {ReadLine}
 */
tsickle_declare_module.readline.ReadLine.prototype.prependListener = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(): void|function(?): void} listener
 * @return {ReadLine}
 */
tsickle_declare_module.readline.ReadLine.prototype.prependOnceListener = function(event, listener) {};

/** @typedef {function(string): !Array<?>} */
tsickle_declare_module.readline.Completer;

/** @typedef {function(string, function(?, !Array<?>): void): ?} */
tsickle_declare_module.readline.AsyncCompleter;

/** @typedef {!Array<?>} */
tsickle_declare_module.readline.CompleterResult;
/**
 * @record
 * @struct
 */
tsickle_declare_module.readline.ReadLineOptions = function() {};
 /** @type {!NodeJS.ReadableStream} */
tsickle_declare_module.readline.ReadLineOptions.prototype.input;
 /** @type {!NodeJS.WritableStream} */
tsickle_declare_module.readline.ReadLineOptions.prototype.output;
 /** @type {(function(string): !Array<?>|function(string, function(?, !Array<?>): void): ?)} */
tsickle_declare_module.readline.ReadLineOptions.prototype.completer;
 /** @type {boolean} */
tsickle_declare_module.readline.ReadLineOptions.prototype.terminal;
 /** @type {number} */
tsickle_declare_module.readline.ReadLineOptions.prototype.historySize;
 /** @type {string} */
tsickle_declare_module.readline.ReadLineOptions.prototype.prompt;
 /** @type {number} */
tsickle_declare_module.readline.ReadLineOptions.prototype.crlfDelay;
 /** @type {boolean} */
tsickle_declare_module.readline.ReadLineOptions.prototype.removeHistoryDuplicates;

/**
 * @param {!NodeJS.ReadableStream|!ReadLineOptions} input_or_options
 * @param {!NodeJS.WritableStream=} output
 * @param {(function(string): !Array<?>|function(string, function(?, !Array<?>): void): ?)=} completer
 * @param {boolean=} terminal
 * @return {!ReadLine}
 */
tsickle_declare_module.readline.createInterface = function(input_or_options, output, completer, terminal) {};

/**
 * @param {!NodeJS.WritableStream} stream
 * @param {number} x
 * @param {number} y
 * @return {void}
 */
tsickle_declare_module.readline.cursorTo = function(stream, x, y) {};

/**
 * @param {!NodeJS.WritableStream} stream
 * @param {(string|number)} dx
 * @param {(string|number)} dy
 * @return {void}
 */
tsickle_declare_module.readline.moveCursor = function(stream, dx, dy) {};

/**
 * @param {!NodeJS.WritableStream} stream
 * @param {number} dir
 * @return {void}
 */
tsickle_declare_module.readline.clearLine = function(stream, dir) {};

/**
 * @param {!NodeJS.WritableStream} stream
 * @return {void}
 */
tsickle_declare_module.readline.clearScreenDown = function(stream) {};
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "vm"
/** @const */
tsickle_declare_module.vm = {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.vm.Context = function() {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.vm.ScriptOptions = function() {};
 /** @type {string} */
tsickle_declare_module.vm.ScriptOptions.prototype.filename;
 /** @type {number} */
tsickle_declare_module.vm.ScriptOptions.prototype.lineOffset;
 /** @type {number} */
tsickle_declare_module.vm.ScriptOptions.prototype.columnOffset;
 /** @type {boolean} */
tsickle_declare_module.vm.ScriptOptions.prototype.displayErrors;
 /** @type {number} */
tsickle_declare_module.vm.ScriptOptions.prototype.timeout;
 /** @type {?} */
tsickle_declare_module.vm.ScriptOptions.prototype.cachedData;
 /** @type {boolean} */
tsickle_declare_module.vm.ScriptOptions.prototype.produceCachedData;
/**
 * @record
 * @struct
 */
tsickle_declare_module.vm.RunningScriptOptions = function() {};
 /** @type {string} */
tsickle_declare_module.vm.RunningScriptOptions.prototype.filename;
 /** @type {number} */
tsickle_declare_module.vm.RunningScriptOptions.prototype.lineOffset;
 /** @type {number} */
tsickle_declare_module.vm.RunningScriptOptions.prototype.columnOffset;
 /** @type {boolean} */
tsickle_declare_module.vm.RunningScriptOptions.prototype.displayErrors;
 /** @type {number} */
tsickle_declare_module.vm.RunningScriptOptions.prototype.timeout;

/**
 * @constructor
 * @struct
 * @param {string} code
 * @param {!ScriptOptions=} options
 */
tsickle_declare_module.vm.Script = function(code, options) {};

/**
 * @param {!Context} contextifiedSandbox
 * @param {!RunningScriptOptions=} options
 * @return {?}
 */
tsickle_declare_module.vm.Script.prototype.runInContext = function(contextifiedSandbox, options) {};

/**
 * @param {!Context=} sandbox
 * @param {!RunningScriptOptions=} options
 * @return {?}
 */
tsickle_declare_module.vm.Script.prototype.runInNewContext = function(sandbox, options) {};

/**
 * @param {!RunningScriptOptions=} options
 * @return {?}
 */
tsickle_declare_module.vm.Script.prototype.runInThisContext = function(options) {};

/**
 * @param {!Context=} sandbox
 * @return {!Context}
 */
tsickle_declare_module.vm.createContext = function(sandbox) {};

/**
 * @param {!Context} sandbox
 * @return {boolean}
 */
tsickle_declare_module.vm.isContext = function(sandbox) {};

/**
 * @param {string} code
 * @param {!Context} contextifiedSandbox
 * @param {!RunningScriptOptions=} options
 * @return {?}
 */
tsickle_declare_module.vm.runInContext = function(code, contextifiedSandbox, options) {};

/**
 * @param {string} code
 * @return {?}
 */
tsickle_declare_module.vm.runInDebugContext = function(code) {};

/**
 * @param {string} code
 * @param {!Context=} sandbox
 * @param {!RunningScriptOptions=} options
 * @return {?}
 */
tsickle_declare_module.vm.runInNewContext = function(code, sandbox, options) {};

/**
 * @param {string} code
 * @param {!RunningScriptOptions=} options
 * @return {?}
 */
tsickle_declare_module.vm.runInThisContext = function(code, options) {};
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "child_process"
/** @const */
tsickle_declare_module.child__process = {};

/* TODO: ImportDeclaration in tsickle_declare_module.child__process */

/* TODO: ImportDeclaration in tsickle_declare_module.child__process */

/* TODO: ImportDeclaration in tsickle_declare_module.child__process */
/**
 * @record
 * @struct
 */
tsickle_declare_module.child__process.ChildProcess = function() {};
 /** @type {!internal.Writable} */
tsickle_declare_module.child__process.ChildProcess.prototype.stdin;
 /** @type {!internal.Readable} */
tsickle_declare_module.child__process.ChildProcess.prototype.stdout;
 /** @type {!internal.Readable} */
tsickle_declare_module.child__process.ChildProcess.prototype.stderr;
 /** @type {!Array<?>} */
tsickle_declare_module.child__process.ChildProcess.prototype.stdio;
 /** @type {number} */
tsickle_declare_module.child__process.ChildProcess.prototype.pid;
 /** @type {boolean} */
tsickle_declare_module.child__process.ChildProcess.prototype.connected;

/**
 * @param {string=} signal
 * @return {void}
 */
tsickle_declare_module.child__process.ChildProcess.prototype.kill = function(signal) {};

/**
 * @param {?} message
 * @param {?=} sendHandle
 * @return {boolean}
 */
tsickle_declare_module.child__process.ChildProcess.prototype.send = function(message, sendHandle) {};

/**
 * @return {void}
 */
tsickle_declare_module.child__process.ChildProcess.prototype.disconnect = function() {};

/**
 * @return {void}
 */
tsickle_declare_module.child__process.ChildProcess.prototype.unref = function() {};

/**
 * @return {void}
 */
tsickle_declare_module.child__process.ChildProcess.prototype.ref = function() {};

/**
 * events.EventEmitter
 * 1. close
 * 2. disconnect
 * 3. error
 * 4. exit
 * 5. message
 * 
 * @param {string} event
 * @param {!Function|function(number, string): void|function(): void|function(!Error): void|function(?, (?|!Server)): void} listener
 * @return {ChildProcess}
 */
tsickle_declare_module.child__process.ChildProcess.prototype.addListener = function(event, listener) {};

/**
 * @param {(string|symbol)|string} event
 * @param {...?|number|!Error} args_or_code_or_err_or_message
 * @return {boolean}
 */
tsickle_declare_module.child__process.ChildProcess.prototype.emit = function(event, args_or_code_or_err_or_message) {};

/**
 * @param {string} event
 * @param {!Function|function(number, string): void|function(): void|function(!Error): void|function(?, (?|!Server)): void} listener
 * @return {ChildProcess}
 */
tsickle_declare_module.child__process.ChildProcess.prototype.on = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(number, string): void|function(): void|function(!Error): void|function(?, (?|!Server)): void} listener
 * @return {ChildProcess}
 */
tsickle_declare_module.child__process.ChildProcess.prototype.once = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(number, string): void|function(): void|function(!Error): void|function(?, (?|!Server)): void} listener
 * @return {ChildProcess}
 */
tsickle_declare_module.child__process.ChildProcess.prototype.prependListener = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(number, string): void|function(): void|function(!Error): void|function(?, (?|!Server)): void} listener
 * @return {ChildProcess}
 */
tsickle_declare_module.child__process.ChildProcess.prototype.prependOnceListener = function(event, listener) {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.child__process.SpawnOptions = function() {};
 /** @type {string} */
tsickle_declare_module.child__process.SpawnOptions.prototype.cwd;
 /** @type {?} */
tsickle_declare_module.child__process.SpawnOptions.prototype.env;
 /** @type {?} */
tsickle_declare_module.child__process.SpawnOptions.prototype.stdio;
 /** @type {boolean} */
tsickle_declare_module.child__process.SpawnOptions.prototype.detached;
 /** @type {number} */
tsickle_declare_module.child__process.SpawnOptions.prototype.uid;
 /** @type {number} */
tsickle_declare_module.child__process.SpawnOptions.prototype.gid;
 /** @type {(string|boolean)} */
tsickle_declare_module.child__process.SpawnOptions.prototype.shell;

/**
 * @param {string} command
 * @param {!Array<string>=} args
 * @param {!SpawnOptions=} options
 * @return {!ChildProcess}
 */
tsickle_declare_module.child__process.spawn = function(command, args, options) {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.child__process.ExecOptions = function() {};
 /** @type {string} */
tsickle_declare_module.child__process.ExecOptions.prototype.cwd;
 /** @type {?} */
tsickle_declare_module.child__process.ExecOptions.prototype.env;
 /** @type {string} */
tsickle_declare_module.child__process.ExecOptions.prototype.shell;
 /** @type {number} */
tsickle_declare_module.child__process.ExecOptions.prototype.timeout;
 /** @type {number} */
tsickle_declare_module.child__process.ExecOptions.prototype.maxBuffer;
 /** @type {string} */
tsickle_declare_module.child__process.ExecOptions.prototype.killSignal;
 /** @type {number} */
tsickle_declare_module.child__process.ExecOptions.prototype.uid;
 /** @type {number} */
tsickle_declare_module.child__process.ExecOptions.prototype.gid;
/**
 * @extends {ExecOptions}
 * @record
 * @struct
 */
tsickle_declare_module.child__process.ExecOptionsWithStringEncoding = function() {};
 /** @type {string} */
tsickle_declare_module.child__process.ExecOptionsWithStringEncoding.prototype.encoding;
/**
 * @extends {ExecOptions}
 * @record
 * @struct
 */
tsickle_declare_module.child__process.ExecOptionsWithBufferEncoding = function() {};
 /** @type {string} */
tsickle_declare_module.child__process.ExecOptionsWithBufferEncoding.prototype.encoding;

/**
 * @param {string} command
 * @param {function(!Error, string, string): void|!ExecOptionsWithStringEncoding|!ExecOptionsWithBufferEncoding|!ExecOptions=} callback_or_options
 * @param {function(!Error, string, string): void|function(!Error, ?, ?): void=} callback
 * @return {!ChildProcess}
 */
tsickle_declare_module.child__process.exec = function(command, callback_or_options, callback) {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.child__process.ExecFileOptions = function() {};
 /** @type {string} */
tsickle_declare_module.child__process.ExecFileOptions.prototype.cwd;
 /** @type {?} */
tsickle_declare_module.child__process.ExecFileOptions.prototype.env;
 /** @type {number} */
tsickle_declare_module.child__process.ExecFileOptions.prototype.timeout;
 /** @type {number} */
tsickle_declare_module.child__process.ExecFileOptions.prototype.maxBuffer;
 /** @type {string} */
tsickle_declare_module.child__process.ExecFileOptions.prototype.killSignal;
 /** @type {number} */
tsickle_declare_module.child__process.ExecFileOptions.prototype.uid;
 /** @type {number} */
tsickle_declare_module.child__process.ExecFileOptions.prototype.gid;
/**
 * @extends {ExecFileOptions}
 * @record
 * @struct
 */
tsickle_declare_module.child__process.ExecFileOptionsWithStringEncoding = function() {};
 /** @type {string} */
tsickle_declare_module.child__process.ExecFileOptionsWithStringEncoding.prototype.encoding;
/**
 * @extends {ExecFileOptions}
 * @record
 * @struct
 */
tsickle_declare_module.child__process.ExecFileOptionsWithBufferEncoding = function() {};
 /** @type {string} */
tsickle_declare_module.child__process.ExecFileOptionsWithBufferEncoding.prototype.encoding;

/**
 * @param {string} file
 * @param {function(!Error, string, string): void|!ExecFileOptionsWithStringEncoding|!ExecFileOptionsWithBufferEncoding|!ExecFileOptions|!Array<string>=} callback_or_options_or_args
 * @param {function(!Error, string, string): void|function(!Error, ?, ?): void|!ExecFileOptionsWithStringEncoding|!ExecFileOptionsWithBufferEncoding|!ExecFileOptions=} callback_or_options
 * @param {function(!Error, string, string): void|function(!Error, ?, ?): void=} callback
 * @return {!ChildProcess}
 */
tsickle_declare_module.child__process.execFile = function(file, callback_or_options_or_args, callback_or_options, callback) {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.child__process.ForkOptions = function() {};
 /** @type {string} */
tsickle_declare_module.child__process.ForkOptions.prototype.cwd;
 /** @type {?} */
tsickle_declare_module.child__process.ForkOptions.prototype.env;
 /** @type {string} */
tsickle_declare_module.child__process.ForkOptions.prototype.execPath;
 /** @type {!Array<string>} */
tsickle_declare_module.child__process.ForkOptions.prototype.execArgv;
 /** @type {boolean} */
tsickle_declare_module.child__process.ForkOptions.prototype.silent;
 /** @type {!Array<?>} */
tsickle_declare_module.child__process.ForkOptions.prototype.stdio;
 /** @type {number} */
tsickle_declare_module.child__process.ForkOptions.prototype.uid;
 /** @type {number} */
tsickle_declare_module.child__process.ForkOptions.prototype.gid;

/**
 * @param {string} modulePath
 * @param {!Array<string>=} args
 * @param {!ForkOptions=} options
 * @return {!ChildProcess}
 */
tsickle_declare_module.child__process.fork = function(modulePath, args, options) {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.child__process.SpawnSyncOptions = function() {};
 /** @type {string} */
tsickle_declare_module.child__process.SpawnSyncOptions.prototype.cwd;
 /** @type {(string|?)} */
tsickle_declare_module.child__process.SpawnSyncOptions.prototype.input;
 /** @type {?} */
tsickle_declare_module.child__process.SpawnSyncOptions.prototype.stdio;
 /** @type {?} */
tsickle_declare_module.child__process.SpawnSyncOptions.prototype.env;
 /** @type {number} */
tsickle_declare_module.child__process.SpawnSyncOptions.prototype.uid;
 /** @type {number} */
tsickle_declare_module.child__process.SpawnSyncOptions.prototype.gid;
 /** @type {number} */
tsickle_declare_module.child__process.SpawnSyncOptions.prototype.timeout;
 /** @type {string} */
tsickle_declare_module.child__process.SpawnSyncOptions.prototype.killSignal;
 /** @type {number} */
tsickle_declare_module.child__process.SpawnSyncOptions.prototype.maxBuffer;
 /** @type {string} */
tsickle_declare_module.child__process.SpawnSyncOptions.prototype.encoding;
 /** @type {(string|boolean)} */
tsickle_declare_module.child__process.SpawnSyncOptions.prototype.shell;
/**
 * @extends {SpawnSyncOptions}
 * @record
 * @struct
 */
tsickle_declare_module.child__process.SpawnSyncOptionsWithStringEncoding = function() {};
 /** @type {string} */
tsickle_declare_module.child__process.SpawnSyncOptionsWithStringEncoding.prototype.encoding;
/**
 * @extends {SpawnSyncOptions}
 * @record
 * @struct
 */
tsickle_declare_module.child__process.SpawnSyncOptionsWithBufferEncoding = function() {};
 /** @type {string} */
tsickle_declare_module.child__process.SpawnSyncOptionsWithBufferEncoding.prototype.encoding;
/**
 * @record
 * @struct
 */
tsickle_declare_module.child__process.SpawnSyncReturns = function() {};
 /** @type {number} */
tsickle_declare_module.child__process.SpawnSyncReturns.prototype.pid;
 /** @type {!Array<string>} */
tsickle_declare_module.child__process.SpawnSyncReturns.prototype.output;
 /** @type {T} */
tsickle_declare_module.child__process.SpawnSyncReturns.prototype.stdout;
 /** @type {T} */
tsickle_declare_module.child__process.SpawnSyncReturns.prototype.stderr;
 /** @type {number} */
tsickle_declare_module.child__process.SpawnSyncReturns.prototype.status;
 /** @type {string} */
tsickle_declare_module.child__process.SpawnSyncReturns.prototype.signal;
 /** @type {!Error} */
tsickle_declare_module.child__process.SpawnSyncReturns.prototype.error;

/**
 * @param {string} command
 * @param {!SpawnSyncOptionsWithStringEncoding|!SpawnSyncOptionsWithBufferEncoding|!SpawnSyncOptions|!Array<string>=} options_or_args
 * @param {!SpawnSyncOptionsWithStringEncoding|!SpawnSyncOptionsWithBufferEncoding|!SpawnSyncOptions=} options
 * @return {!SpawnSyncReturns<?>|!SpawnSyncReturns<string>}
 */
tsickle_declare_module.child__process.spawnSync = function(command, options_or_args, options) {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.child__process.ExecSyncOptions = function() {};
 /** @type {string} */
tsickle_declare_module.child__process.ExecSyncOptions.prototype.cwd;
 /** @type {(string|?)} */
tsickle_declare_module.child__process.ExecSyncOptions.prototype.input;
 /** @type {?} */
tsickle_declare_module.child__process.ExecSyncOptions.prototype.stdio;
 /** @type {?} */
tsickle_declare_module.child__process.ExecSyncOptions.prototype.env;
 /** @type {string} */
tsickle_declare_module.child__process.ExecSyncOptions.prototype.shell;
 /** @type {number} */
tsickle_declare_module.child__process.ExecSyncOptions.prototype.uid;
 /** @type {number} */
tsickle_declare_module.child__process.ExecSyncOptions.prototype.gid;
 /** @type {number} */
tsickle_declare_module.child__process.ExecSyncOptions.prototype.timeout;
 /** @type {string} */
tsickle_declare_module.child__process.ExecSyncOptions.prototype.killSignal;
 /** @type {number} */
tsickle_declare_module.child__process.ExecSyncOptions.prototype.maxBuffer;
 /** @type {string} */
tsickle_declare_module.child__process.ExecSyncOptions.prototype.encoding;
/**
 * @extends {ExecSyncOptions}
 * @record
 * @struct
 */
tsickle_declare_module.child__process.ExecSyncOptionsWithStringEncoding = function() {};
 /** @type {string} */
tsickle_declare_module.child__process.ExecSyncOptionsWithStringEncoding.prototype.encoding;
/**
 * @extends {ExecSyncOptions}
 * @record
 * @struct
 */
tsickle_declare_module.child__process.ExecSyncOptionsWithBufferEncoding = function() {};
 /** @type {string} */
tsickle_declare_module.child__process.ExecSyncOptionsWithBufferEncoding.prototype.encoding;

/**
 * @param {string} command
 * @param {!ExecSyncOptionsWithStringEncoding|!ExecSyncOptionsWithBufferEncoding|!ExecSyncOptions=} options
 * @return {?|string}
 */
tsickle_declare_module.child__process.execSync = function(command, options) {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.child__process.ExecFileSyncOptions = function() {};
 /** @type {string} */
tsickle_declare_module.child__process.ExecFileSyncOptions.prototype.cwd;
 /** @type {(string|?)} */
tsickle_declare_module.child__process.ExecFileSyncOptions.prototype.input;
 /** @type {?} */
tsickle_declare_module.child__process.ExecFileSyncOptions.prototype.stdio;
 /** @type {?} */
tsickle_declare_module.child__process.ExecFileSyncOptions.prototype.env;
 /** @type {number} */
tsickle_declare_module.child__process.ExecFileSyncOptions.prototype.uid;
 /** @type {number} */
tsickle_declare_module.child__process.ExecFileSyncOptions.prototype.gid;
 /** @type {number} */
tsickle_declare_module.child__process.ExecFileSyncOptions.prototype.timeout;
 /** @type {string} */
tsickle_declare_module.child__process.ExecFileSyncOptions.prototype.killSignal;
 /** @type {number} */
tsickle_declare_module.child__process.ExecFileSyncOptions.prototype.maxBuffer;
 /** @type {string} */
tsickle_declare_module.child__process.ExecFileSyncOptions.prototype.encoding;
/**
 * @extends {ExecFileSyncOptions}
 * @record
 * @struct
 */
tsickle_declare_module.child__process.ExecFileSyncOptionsWithStringEncoding = function() {};
 /** @type {string} */
tsickle_declare_module.child__process.ExecFileSyncOptionsWithStringEncoding.prototype.encoding;
/**
 * @extends {ExecFileSyncOptions}
 * @record
 * @struct
 */
tsickle_declare_module.child__process.ExecFileSyncOptionsWithBufferEncoding = function() {};
 /** @type {string} */
tsickle_declare_module.child__process.ExecFileSyncOptionsWithBufferEncoding.prototype.encoding;

/**
 * @param {string} command
 * @param {!ExecFileSyncOptionsWithStringEncoding|!ExecFileSyncOptionsWithBufferEncoding|!ExecFileSyncOptions|!Array<string>=} options_or_args
 * @param {!ExecFileSyncOptionsWithStringEncoding|!ExecFileSyncOptionsWithBufferEncoding|!ExecFileSyncOptions=} options
 * @return {?|string}
 */
tsickle_declare_module.child__process.execFileSync = function(command, options_or_args, options) {};
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "url"
/** @const */
tsickle_declare_module.url = {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.url.Url = function() {};
 /** @type {string} */
tsickle_declare_module.url.Url.prototype.href;
 /** @type {string} */
tsickle_declare_module.url.Url.prototype.protocol;
 /** @type {string} */
tsickle_declare_module.url.Url.prototype.auth;
 /** @type {string} */
tsickle_declare_module.url.Url.prototype.hostname;
 /** @type {string} */
tsickle_declare_module.url.Url.prototype.port;
 /** @type {string} */
tsickle_declare_module.url.Url.prototype.host;
 /** @type {string} */
tsickle_declare_module.url.Url.prototype.pathname;
 /** @type {string} */
tsickle_declare_module.url.Url.prototype.search;
 /** @type {?} */
tsickle_declare_module.url.Url.prototype.query;
 /** @type {boolean} */
tsickle_declare_module.url.Url.prototype.slashes;
 /** @type {string} */
tsickle_declare_module.url.Url.prototype.hash;
 /** @type {string} */
tsickle_declare_module.url.Url.prototype.path;
/**
 * @record
 * @struct
 */
tsickle_declare_module.url.UrlObject = function() {};
 /** @type {string} */
tsickle_declare_module.url.UrlObject.prototype.protocol;
 /** @type {boolean} */
tsickle_declare_module.url.UrlObject.prototype.slashes;
 /** @type {string} */
tsickle_declare_module.url.UrlObject.prototype.auth;
 /** @type {string} */
tsickle_declare_module.url.UrlObject.prototype.host;
 /** @type {string} */
tsickle_declare_module.url.UrlObject.prototype.hostname;
 /** @type {(string|number)} */
tsickle_declare_module.url.UrlObject.prototype.port;
 /** @type {string} */
tsickle_declare_module.url.UrlObject.prototype.pathname;
 /** @type {string} */
tsickle_declare_module.url.UrlObject.prototype.search;
 /** @type {!Object<string,?>} */
tsickle_declare_module.url.UrlObject.prototype.query;
 /** @type {string} */
tsickle_declare_module.url.UrlObject.prototype.hash;

/**
 * @param {string} urlStr
 * @param {boolean=} parseQueryString
 * @param {boolean=} slashesDenoteHost
 * @return {!Url}
 */
tsickle_declare_module.url.parse = function(urlStr, parseQueryString, slashesDenoteHost) {};

/**
 * @param {!URL|!UrlObject} URL_or_urlObject
 * @param {!URLFormatOptions=} options
 * @return {string}
 */
tsickle_declare_module.url.format = function(URL_or_urlObject, options) {};

/**
 * @param {string} from
 * @param {string} to
 * @return {string}
 */
tsickle_declare_module.url.resolve = function(from, to) {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.url.URLFormatOptions = function() {};
 /** @type {boolean} */
tsickle_declare_module.url.URLFormatOptions.prototype.auth;
 /** @type {boolean} */
tsickle_declare_module.url.URLFormatOptions.prototype.fragment;
 /** @type {boolean} */
tsickle_declare_module.url.URLFormatOptions.prototype.search;
 /** @type {boolean} */
tsickle_declare_module.url.URLFormatOptions.prototype.unicode;

/**
 * @constructor
 * @struct
 * @param {(string|!URLSearchParams|!Object<string,(string|!Array<string>)>|!Iterable<!Array<string>>)=} init
 */
tsickle_declare_module.url.URLSearchParams = function(init) {};

/**
 * @param {string} name
 * @param {string} value
 * @return {void}
 */
tsickle_declare_module.url.URLSearchParams.prototype.append = function(name, value) {};

/**
 * @param {string} name
 * @return {void}
 */
tsickle_declare_module.url.URLSearchParams.prototype.delete = function(name) {};

/**
 * @return {!Iterator<!Array<string>>}
 */
tsickle_declare_module.url.URLSearchParams.prototype.entries = function() {};

/**
 * @param {function(string, string): void} callback
 * @return {void}
 */
tsickle_declare_module.url.URLSearchParams.prototype.forEach = function(callback) {};

/**
 * @param {string} name
 * @return {string}
 */
tsickle_declare_module.url.URLSearchParams.prototype.get = function(name) {};

/**
 * @param {string} name
 * @return {!Array<string>}
 */
tsickle_declare_module.url.URLSearchParams.prototype.getAll = function(name) {};

/**
 * @param {string} name
 * @return {boolean}
 */
tsickle_declare_module.url.URLSearchParams.prototype.has = function(name) {};

/**
 * @return {!Iterator<string>}
 */
tsickle_declare_module.url.URLSearchParams.prototype.keys = function() {};

/**
 * @param {string} name
 * @param {string} value
 * @return {void}
 */
tsickle_declare_module.url.URLSearchParams.prototype.set = function(name, value) {};

/**
 * @return {void}
 */
tsickle_declare_module.url.URLSearchParams.prototype.sort = function() {};

/**
 * @return {string}
 */
tsickle_declare_module.url.URLSearchParams.prototype.toString = function() {};

/**
 * @return {!Iterator<string>}
 */
tsickle_declare_module.url.URLSearchParams.prototype.values = function() {};

/**
 * @return {!Iterator<!Array<string>>}
 */
tsickle_declare_module.url.URLSearchParams.prototype[Symbol.iterator] = function() {};

/**
 * @constructor
 * @struct
 * @param {string} input
 * @param {(string|!URL)=} base
 */
tsickle_declare_module.url.URL = function(input, base) {};
 /** @type {string} */
tsickle_declare_module.url.URL.prototype.hash;
 /** @type {string} */
tsickle_declare_module.url.URL.prototype.host;
 /** @type {string} */
tsickle_declare_module.url.URL.prototype.hostname;
 /** @type {string} */
tsickle_declare_module.url.URL.prototype.href;
 /** @type {string} */
tsickle_declare_module.url.URL.prototype.origin;
 /** @type {string} */
tsickle_declare_module.url.URL.prototype.password;
 /** @type {string} */
tsickle_declare_module.url.URL.prototype.pathname;
 /** @type {string} */
tsickle_declare_module.url.URL.prototype.port;
 /** @type {string} */
tsickle_declare_module.url.URL.prototype.protocol;
 /** @type {string} */
tsickle_declare_module.url.URL.prototype.search;
 /** @type {!URLSearchParams} */
tsickle_declare_module.url.URL.prototype.searchParams;
 /** @type {string} */
tsickle_declare_module.url.URL.prototype.username;

/**
 * @return {string}
 */
tsickle_declare_module.url.URL.prototype.toString = function() {};

/**
 * @return {string}
 */
tsickle_declare_module.url.URL.prototype.toJSON = function() {};
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "dns"
/** @const */
tsickle_declare_module.dns = {};
 /** @type {number} */
tsickle_declare_module.dns.ADDRCONFIG;
 /** @type {number} */
tsickle_declare_module.dns.V4MAPPED;
/**
 * @record
 * @struct
 */
tsickle_declare_module.dns.LookupOptions = function() {};
 /** @type {number} */
tsickle_declare_module.dns.LookupOptions.prototype.family;
 /** @type {number} */
tsickle_declare_module.dns.LookupOptions.prototype.hints;
 /** @type {boolean} */
tsickle_declare_module.dns.LookupOptions.prototype.all;
/**
 * @extends {LookupOptions}
 * @record
 * @struct
 */
tsickle_declare_module.dns.LookupOneOptions = function() {};
 /** @type {boolean} */
tsickle_declare_module.dns.LookupOneOptions.prototype.all;
/**
 * @extends {LookupOptions}
 * @record
 * @struct
 */
tsickle_declare_module.dns.LookupAllOptions = function() {};
 /** @type {boolean} */
tsickle_declare_module.dns.LookupAllOptions.prototype.all;
/**
 * @record
 * @struct
 */
tsickle_declare_module.dns.LookupAddress = function() {};
 /** @type {string} */
tsickle_declare_module.dns.LookupAddress.prototype.address;
 /** @type {number} */
tsickle_declare_module.dns.LookupAddress.prototype.family;

/**
 * @param {string} hostname
 * @param {number|!LookupOneOptions|!LookupAllOptions|!LookupOptions|function(!NodeJS.ErrnoException, string, number): void} family_or_options_or_callback
 * @param {function(!NodeJS.ErrnoException, string, number): void|function(!NodeJS.ErrnoException, !Array<!LookupAddress>): void|function(!NodeJS.ErrnoException, (string|!Array<!LookupAddress>), number): void=} callback
 * @return {void}
 */
tsickle_declare_module.dns.lookup = function(hostname, family_or_options_or_callback, callback) {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.dns.ResolveOptions = function() {};
 /** @type {boolean} */
tsickle_declare_module.dns.ResolveOptions.prototype.ttl;
/**
 * @extends {ResolveOptions}
 * @record
 * @struct
 */
tsickle_declare_module.dns.ResolveWithTtlOptions = function() {};
 /** @type {boolean} */
tsickle_declare_module.dns.ResolveWithTtlOptions.prototype.ttl;
/**
 * @record
 * @struct
 */
tsickle_declare_module.dns.RecordWithTtl = function() {};
 /** @type {string} */
tsickle_declare_module.dns.RecordWithTtl.prototype.address;
 /** @type {number} */
tsickle_declare_module.dns.RecordWithTtl.prototype.ttl;
/**
 * @record
 * @struct
 */
tsickle_declare_module.dns.MxRecord = function() {};
 /** @type {number} */
tsickle_declare_module.dns.MxRecord.prototype.priority;
 /** @type {string} */
tsickle_declare_module.dns.MxRecord.prototype.exchange;
/**
 * @record
 * @struct
 */
tsickle_declare_module.dns.NaptrRecord = function() {};
 /** @type {string} */
tsickle_declare_module.dns.NaptrRecord.prototype.flags;
 /** @type {string} */
tsickle_declare_module.dns.NaptrRecord.prototype.service;
 /** @type {string} */
tsickle_declare_module.dns.NaptrRecord.prototype.regexp;
 /** @type {string} */
tsickle_declare_module.dns.NaptrRecord.prototype.replacement;
 /** @type {number} */
tsickle_declare_module.dns.NaptrRecord.prototype.order;
 /** @type {number} */
tsickle_declare_module.dns.NaptrRecord.prototype.preference;
/**
 * @record
 * @struct
 */
tsickle_declare_module.dns.SoaRecord = function() {};
 /** @type {string} */
tsickle_declare_module.dns.SoaRecord.prototype.nsname;
 /** @type {string} */
tsickle_declare_module.dns.SoaRecord.prototype.hostmaster;
 /** @type {number} */
tsickle_declare_module.dns.SoaRecord.prototype.serial;
 /** @type {number} */
tsickle_declare_module.dns.SoaRecord.prototype.refresh;
 /** @type {number} */
tsickle_declare_module.dns.SoaRecord.prototype.retry;
 /** @type {number} */
tsickle_declare_module.dns.SoaRecord.prototype.expire;
 /** @type {number} */
tsickle_declare_module.dns.SoaRecord.prototype.minttl;
/**
 * @record
 * @struct
 */
tsickle_declare_module.dns.SrvRecord = function() {};
 /** @type {number} */
tsickle_declare_module.dns.SrvRecord.prototype.priority;
 /** @type {number} */
tsickle_declare_module.dns.SrvRecord.prototype.weight;
 /** @type {number} */
tsickle_declare_module.dns.SrvRecord.prototype.port;
 /** @type {string} */
tsickle_declare_module.dns.SrvRecord.prototype.name;

/**
 * @param {string} hostname
 * @param {function(!NodeJS.ErrnoException, !Array<string>): void|string} callback_or_rrtype
 * @param {function(!NodeJS.ErrnoException, !Array<string>): void|function(!NodeJS.ErrnoException, !Array<!MxRecord>): void|function(!NodeJS.ErrnoException, !Array<!NaptrRecord>): void|function(!NodeJS.ErrnoException, !SoaRecord): void|function(!NodeJS.ErrnoException, !Array<!SrvRecord>): void|function(!NodeJS.ErrnoException, !Array<!Array<string>>): void|function(!NodeJS.ErrnoException, (!Array<string>|!Array<!MxRecord>|!Array<!NaptrRecord>|!SoaRecord|!Array<!SrvRecord>|!Array<!Array<string>>)): void=} callback
 * @return {void}
 */
tsickle_declare_module.dns.resolve = function(hostname, callback_or_rrtype, callback) {};

/**
 * @param {string} hostname
 * @param {function(!NodeJS.ErrnoException, !Array<string>): void|!ResolveWithTtlOptions|!ResolveOptions} callback_or_options
 * @param {function(!NodeJS.ErrnoException, !Array<!RecordWithTtl>): void|function(!NodeJS.ErrnoException, (!Array<string>|!Array<!RecordWithTtl>)): void=} callback
 * @return {void}
 */
tsickle_declare_module.dns.resolve4 = function(hostname, callback_or_options, callback) {};

/**
 * @param {string} hostname
 * @param {function(!NodeJS.ErrnoException, !Array<string>): void|!ResolveWithTtlOptions|!ResolveOptions} callback_or_options
 * @param {function(!NodeJS.ErrnoException, !Array<!RecordWithTtl>): void|function(!NodeJS.ErrnoException, (!Array<string>|!Array<!RecordWithTtl>)): void=} callback
 * @return {void}
 */
tsickle_declare_module.dns.resolve6 = function(hostname, callback_or_options, callback) {};

/**
 * @param {string} hostname
 * @param {function(!NodeJS.ErrnoException, !Array<string>): void} callback
 * @return {void}
 */
tsickle_declare_module.dns.resolveCname = function(hostname, callback) {};

/**
 * @param {string} hostname
 * @param {function(!NodeJS.ErrnoException, !Array<!MxRecord>): void} callback
 * @return {void}
 */
tsickle_declare_module.dns.resolveMx = function(hostname, callback) {};

/**
 * @param {string} hostname
 * @param {function(!NodeJS.ErrnoException, !Array<!NaptrRecord>): void} callback
 * @return {void}
 */
tsickle_declare_module.dns.resolveNaptr = function(hostname, callback) {};

/**
 * @param {string} hostname
 * @param {function(!NodeJS.ErrnoException, !Array<string>): void} callback
 * @return {void}
 */
tsickle_declare_module.dns.resolveNs = function(hostname, callback) {};

/**
 * @param {string} hostname
 * @param {function(!NodeJS.ErrnoException, !Array<string>): void} callback
 * @return {void}
 */
tsickle_declare_module.dns.resolvePtr = function(hostname, callback) {};

/**
 * @param {string} hostname
 * @param {function(!NodeJS.ErrnoException, !SoaRecord): void} callback
 * @return {void}
 */
tsickle_declare_module.dns.resolveSoa = function(hostname, callback) {};

/**
 * @param {string} hostname
 * @param {function(!NodeJS.ErrnoException, !Array<!SrvRecord>): void} callback
 * @return {void}
 */
tsickle_declare_module.dns.resolveSrv = function(hostname, callback) {};

/**
 * @param {string} hostname
 * @param {function(!NodeJS.ErrnoException, !Array<!Array<string>>): void} callback
 * @return {void}
 */
tsickle_declare_module.dns.resolveTxt = function(hostname, callback) {};

/**
 * @param {string} ip
 * @param {function(!NodeJS.ErrnoException, !Array<string>): void} callback
 * @return {void}
 */
tsickle_declare_module.dns.reverse = function(ip, callback) {};

/**
 * @param {!Array<string>} servers
 * @return {void}
 */
tsickle_declare_module.dns.setServers = function(servers) {};
 /** @type {string} */
tsickle_declare_module.dns.NODATA;
 /** @type {string} */
tsickle_declare_module.dns.FORMERR;
 /** @type {string} */
tsickle_declare_module.dns.SERVFAIL;
 /** @type {string} */
tsickle_declare_module.dns.NOTFOUND;
 /** @type {string} */
tsickle_declare_module.dns.NOTIMP;
 /** @type {string} */
tsickle_declare_module.dns.REFUSED;
 /** @type {string} */
tsickle_declare_module.dns.BADQUERY;
 /** @type {string} */
tsickle_declare_module.dns.BADNAME;
 /** @type {string} */
tsickle_declare_module.dns.BADFAMILY;
 /** @type {string} */
tsickle_declare_module.dns.BADRESP;
 /** @type {string} */
tsickle_declare_module.dns.CONNREFUSED;
 /** @type {string} */
tsickle_declare_module.dns.TIMEOUT;
 /** @type {string} */
tsickle_declare_module.dns.EOF;
 /** @type {string} */
tsickle_declare_module.dns.FILE;
 /** @type {string} */
tsickle_declare_module.dns.NOMEM;
 /** @type {string} */
tsickle_declare_module.dns.DESTRUCTION;
 /** @type {string} */
tsickle_declare_module.dns.BADSTR;
 /** @type {string} */
tsickle_declare_module.dns.BADFLAGS;
 /** @type {string} */
tsickle_declare_module.dns.NONAME;
 /** @type {string} */
tsickle_declare_module.dns.BADHINTS;
 /** @type {string} */
tsickle_declare_module.dns.NOTINITIALIZED;
 /** @type {string} */
tsickle_declare_module.dns.LOADIPHLPAPI;
 /** @type {string} */
tsickle_declare_module.dns.ADDRGETNETWORKPARAMS;
 /** @type {string} */
tsickle_declare_module.dns.CANCELLED;
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "net"
/** @const */
tsickle_declare_module.net = {};

/* TODO: ImportDeclaration in tsickle_declare_module.net */

/* TODO: ImportDeclaration in tsickle_declare_module.net */
/**
 * @record
 * @struct
 */
tsickle_declare_module.net.Socket = function() {};
 /** @type {number} */
tsickle_declare_module.net.Socket.prototype.bufferSize;
 /** @type {string} */
tsickle_declare_module.net.Socket.prototype.remoteAddress;
 /** @type {string} */
tsickle_declare_module.net.Socket.prototype.remoteFamily;
 /** @type {number} */
tsickle_declare_module.net.Socket.prototype.remotePort;
 /** @type {string} */
tsickle_declare_module.net.Socket.prototype.localAddress;
 /** @type {number} */
tsickle_declare_module.net.Socket.prototype.localPort;
 /** @type {number} */
tsickle_declare_module.net.Socket.prototype.bytesRead;
 /** @type {number} */
tsickle_declare_module.net.Socket.prototype.bytesWritten;
 /** @type {boolean} */
tsickle_declare_module.net.Socket.prototype.connecting;
 /** @type {boolean} */
tsickle_declare_module.net.Socket.prototype.destroyed;

/**
 * @param {?|string} buffer_or_str_or_data
 * @param {!Function|string=} cb_or_encoding
 * @param {!Function|string=} cb_or_fd_or_callback
 * @return {boolean|void}
 */
tsickle_declare_module.net.Socket.prototype.write = function(buffer_or_str_or_data, cb_or_encoding, cb_or_fd_or_callback) {};

/**
 * @param {number|string} port_or_path
 * @param {string|!Function=} host_or_connectionListener
 * @param {!Function=} connectionListener
 * @return {void}
 */
tsickle_declare_module.net.Socket.prototype.connect = function(port_or_path, host_or_connectionListener, connectionListener) {};

/**
 * @param {string=} encoding
 * @return {Socket}
 */
tsickle_declare_module.net.Socket.prototype.setEncoding = function(encoding) {};

/**
 * @param {?=} err
 * @return {void}
 */
tsickle_declare_module.net.Socket.prototype.destroy = function(err) {};

/**
 * @return {Socket}
 */
tsickle_declare_module.net.Socket.prototype.pause = function() {};

/**
 * @return {Socket}
 */
tsickle_declare_module.net.Socket.prototype.resume = function() {};

/**
 * @param {number} timeout
 * @param {!Function=} callback
 * @return {void}
 */
tsickle_declare_module.net.Socket.prototype.setTimeout = function(timeout, callback) {};

/**
 * @param {boolean=} noDelay
 * @return {void}
 */
tsickle_declare_module.net.Socket.prototype.setNoDelay = function(noDelay) {};

/**
 * @param {boolean=} enable
 * @param {number=} initialDelay
 * @return {void}
 */
tsickle_declare_module.net.Socket.prototype.setKeepAlive = function(enable, initialDelay) {};

/**
 * @return {{port: number, family: string, address: string}}
 */
tsickle_declare_module.net.Socket.prototype.address = function() {};

/**
 * @return {void}
 */
tsickle_declare_module.net.Socket.prototype.unref = function() {};

/**
 * @return {void}
 */
tsickle_declare_module.net.Socket.prototype.ref = function() {};

/**
 * @param {?|string=} buffer_or_str_or_data
 * @param {!Function|string=} cb_or_encoding
 * @param {!Function=} cb
 * @return {void}
 */
tsickle_declare_module.net.Socket.prototype.end = function(buffer_or_str_or_data, cb_or_encoding, cb) {};

/**
 * events.EventEmitter
 *   1. close
 *   2. connect
 *   3. data
 *   4. drain
 *   5. end
 *   6. error
 *   7. lookup
 *   8. timeout
 * @param {string} event
 * @param {!Function|function(boolean): void|function(): void|function(?): void|function(!Error): void|function(!Error, string, (string|number), string): void} listener
 * @return {Socket}
 */
tsickle_declare_module.net.Socket.prototype.addListener = function(event, listener) {};

/**
 * @param {(string|symbol)|string} event
 * @param {...?|boolean|!Error} args_or_had_error_or_data_or_err
 * @return {boolean}
 */
tsickle_declare_module.net.Socket.prototype.emit = function(event, args_or_had_error_or_data_or_err) {};

/**
 * @param {string} event
 * @param {!Function|function(boolean): void|function(): void|function(?): void|function(!Error): void|function(!Error, string, (string|number), string): void} listener
 * @return {Socket}
 */
tsickle_declare_module.net.Socket.prototype.on = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(boolean): void|function(): void|function(?): void|function(!Error): void|function(!Error, string, (string|number), string): void} listener
 * @return {Socket}
 */
tsickle_declare_module.net.Socket.prototype.once = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(boolean): void|function(): void|function(?): void|function(!Error): void|function(!Error, string, (string|number), string): void} listener
 * @return {Socket}
 */
tsickle_declare_module.net.Socket.prototype.prependListener = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(boolean): void|function(): void|function(?): void|function(!Error): void|function(!Error, string, (string|number), string): void} listener
 * @return {Socket}
 */
tsickle_declare_module.net.Socket.prototype.prependOnceListener = function(event, listener) {};
 /** @type {function(new: (?), {fd: number, allowHalfOpen: boolean, readable: boolean, writable: boolean}): ?} */
tsickle_declare_module.net.Socket;
/**
 * @record
 * @struct
 */
tsickle_declare_module.net.ListenOptions = function() {};
 /** @type {number} */
tsickle_declare_module.net.ListenOptions.prototype.port;
 /** @type {string} */
tsickle_declare_module.net.ListenOptions.prototype.host;
 /** @type {number} */
tsickle_declare_module.net.ListenOptions.prototype.backlog;
 /** @type {string} */
tsickle_declare_module.net.ListenOptions.prototype.path;
 /** @type {boolean} */
tsickle_declare_module.net.ListenOptions.prototype.exclusive;
/**
 * @record
 * @struct
 */
tsickle_declare_module.net.Server = function() {};
 /** @type {number} */
tsickle_declare_module.net.Server.prototype.maxConnections;
 /** @type {number} */
tsickle_declare_module.net.Server.prototype.connections;
 /** @type {boolean} */
tsickle_declare_module.net.Server.prototype.listening;

/**
 * @param {number|string|!ListenOptions|?} port_or_path_or_options_or_handle
 * @param {string|number|!Function=} hostname_or_backlog_or_listeningListener
 * @param {number|!Function=} backlog_or_listeningListener
 * @param {!Function=} listeningListener
 * @return {!Server}
 */
tsickle_declare_module.net.Server.prototype.listen = function(port_or_path_or_options_or_handle, hostname_or_backlog_or_listeningListener, backlog_or_listeningListener, listeningListener) {};

/**
 * @param {!Function=} callback
 * @return {!Server}
 */
tsickle_declare_module.net.Server.prototype.close = function(callback) {};

/**
 * @return {{port: number, family: string, address: string}}
 */
tsickle_declare_module.net.Server.prototype.address = function() {};

/**
 * @param {function(!Error, number): void} cb
 * @return {void}
 */
tsickle_declare_module.net.Server.prototype.getConnections = function(cb) {};

/**
 * @return {!Server}
 */
tsickle_declare_module.net.Server.prototype.ref = function() {};

/**
 * @return {!Server}
 */
tsickle_declare_module.net.Server.prototype.unref = function() {};

/**
 * events.EventEmitter
 *   1. close
 *   2. connection
 *   3. error
 *   4. listening
 * @param {string} event
 * @param {!Function|function(): void|function(?): void|function(!Error): void} listener
 * @return {Server}
 */
tsickle_declare_module.net.Server.prototype.addListener = function(event, listener) {};

/**
 * @param {(string|symbol)|string} event
 * @param {...?|!Error} args_or_socket_or_err
 * @return {boolean}
 */
tsickle_declare_module.net.Server.prototype.emit = function(event, args_or_socket_or_err) {};

/**
 * @param {string} event
 * @param {!Function|function(): void|function(?): void|function(!Error): void} listener
 * @return {Server}
 */
tsickle_declare_module.net.Server.prototype.on = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(): void|function(?): void|function(!Error): void} listener
 * @return {Server}
 */
tsickle_declare_module.net.Server.prototype.once = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(): void|function(?): void|function(!Error): void} listener
 * @return {Server}
 */
tsickle_declare_module.net.Server.prototype.prependListener = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(): void|function(?): void|function(!Error): void} listener
 * @return {Server}
 */
tsickle_declare_module.net.Server.prototype.prependOnceListener = function(event, listener) {};

/**
 * @param {function(?): void|{allowHalfOpen: boolean, pauseOnConnect: boolean}=} connectionListener_or_options
 * @param {function(?): void=} connectionListener
 * @return {!Server}
 */
tsickle_declare_module.net.createServer = function(connectionListener_or_options, connectionListener) {};

/**
 * @param {{port: number, host: string, localAddress: string, localPort: string, family: number, allowHalfOpen: boolean}|number|string} options_or_port_or_path
 * @param {!Function|string=} connectionListener_or_host
 * @param {!Function=} connectionListener
 * @return {?}
 */
tsickle_declare_module.net.connect = function(options_or_port_or_path, connectionListener_or_host, connectionListener) {};

/**
 * @param {{port: number, host: string, localAddress: string, localPort: string, family: number, allowHalfOpen: boolean}|number|string} options_or_port_or_path
 * @param {!Function|string=} connectionListener_or_host
 * @param {!Function=} connectionListener
 * @return {?}
 */
tsickle_declare_module.net.createConnection = function(options_or_port_or_path, connectionListener_or_host, connectionListener) {};

/**
 * @param {string} input
 * @return {number}
 */
tsickle_declare_module.net.isIP = function(input) {};

/**
 * @param {string} input
 * @return {boolean}
 */
tsickle_declare_module.net.isIPv4 = function(input) {};

/**
 * @param {string} input
 * @return {boolean}
 */
tsickle_declare_module.net.isIPv6 = function(input) {};
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "dgram"
/** @const */
tsickle_declare_module.dgram = {};

/* TODO: ImportDeclaration in tsickle_declare_module.dgram */
/**
 * @record
 * @struct
 */
tsickle_declare_module.dgram.RemoteInfo = function() {};
 /** @type {string} */
tsickle_declare_module.dgram.RemoteInfo.prototype.address;
 /** @type {string} */
tsickle_declare_module.dgram.RemoteInfo.prototype.family;
 /** @type {number} */
tsickle_declare_module.dgram.RemoteInfo.prototype.port;
/**
 * @record
 * @struct
 */
tsickle_declare_module.dgram.AddressInfo = function() {};
 /** @type {string} */
tsickle_declare_module.dgram.AddressInfo.prototype.address;
 /** @type {string} */
tsickle_declare_module.dgram.AddressInfo.prototype.family;
 /** @type {number} */
tsickle_declare_module.dgram.AddressInfo.prototype.port;
/**
 * @record
 * @struct
 */
tsickle_declare_module.dgram.BindOptions = function() {};
 /** @type {number} */
tsickle_declare_module.dgram.BindOptions.prototype.port;
 /** @type {string} */
tsickle_declare_module.dgram.BindOptions.prototype.address;
 /** @type {boolean} */
tsickle_declare_module.dgram.BindOptions.prototype.exclusive;

/** @typedef {string} */
tsickle_declare_module.dgram.SocketType;
/**
 * @record
 * @struct
 */
tsickle_declare_module.dgram.SocketOptions = function() {};
 /** @type {string} */
tsickle_declare_module.dgram.SocketOptions.prototype.type;
 /** @type {boolean} */
tsickle_declare_module.dgram.SocketOptions.prototype.reuseAddr;

/**
 * @param {string|!SocketOptions} type_or_options
 * @param {function(?, !RemoteInfo): void=} callback
 * @return {!Socket}
 */
tsickle_declare_module.dgram.createSocket = function(type_or_options, callback) {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.dgram.Socket = function() {};

/**
 * @param {(!String|!Array<?>|?)} msg
 * @param {number} port_or_offset
 * @param {string|number} address_or_length
 * @param {function(!Error, number): void|number=} callback_or_port
 * @param {string=} address
 * @param {function(!Error, number): void=} callback
 * @return {void}
 */
tsickle_declare_module.dgram.Socket.prototype.send = function(msg, port_or_offset, address_or_length, callback_or_port, address, callback) {};

/**
 * @param {number|!BindOptions=} port_or_options
 * @param {string|!Function=} address_or_callback
 * @param {function(): void=} callback
 * @return {void}
 */
tsickle_declare_module.dgram.Socket.prototype.bind = function(port_or_options, address_or_callback, callback) {};

/**
 * @param {function(): void=} callback
 * @return {void}
 */
tsickle_declare_module.dgram.Socket.prototype.close = function(callback) {};

/**
 * @return {!AddressInfo}
 */
tsickle_declare_module.dgram.Socket.prototype.address = function() {};

/**
 * @param {boolean} flag
 * @return {void}
 */
tsickle_declare_module.dgram.Socket.prototype.setBroadcast = function(flag) {};

/**
 * @param {number} ttl
 * @return {void}
 */
tsickle_declare_module.dgram.Socket.prototype.setTTL = function(ttl) {};

/**
 * @param {number} ttl
 * @return {void}
 */
tsickle_declare_module.dgram.Socket.prototype.setMulticastTTL = function(ttl) {};

/**
 * @param {boolean} flag
 * @return {void}
 */
tsickle_declare_module.dgram.Socket.prototype.setMulticastLoopback = function(flag) {};

/**
 * @param {string} multicastAddress
 * @param {string=} multicastInterface
 * @return {void}
 */
tsickle_declare_module.dgram.Socket.prototype.addMembership = function(multicastAddress, multicastInterface) {};

/**
 * @param {string} multicastAddress
 * @param {string=} multicastInterface
 * @return {void}
 */
tsickle_declare_module.dgram.Socket.prototype.dropMembership = function(multicastAddress, multicastInterface) {};

/**
 * @return {Socket}
 */
tsickle_declare_module.dgram.Socket.prototype.ref = function() {};

/**
 * @return {Socket}
 */
tsickle_declare_module.dgram.Socket.prototype.unref = function() {};

/**
 * events.EventEmitter
 * 1. close
 * 2. error
 * 3. listening
 * 4. message
 * 
 * @param {string} event
 * @param {!Function|function(): void|function(!Error): void|function(?, !AddressInfo): void} listener
 * @return {Socket}
 */
tsickle_declare_module.dgram.Socket.prototype.addListener = function(event, listener) {};

/**
 * @param {(string|symbol)|string} event
 * @param {...?|!Error} args_or_err_or_msg
 * @return {boolean}
 */
tsickle_declare_module.dgram.Socket.prototype.emit = function(event, args_or_err_or_msg) {};

/**
 * @param {string} event
 * @param {!Function|function(): void|function(!Error): void|function(?, !AddressInfo): void} listener
 * @return {Socket}
 */
tsickle_declare_module.dgram.Socket.prototype.on = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(): void|function(!Error): void|function(?, !AddressInfo): void} listener
 * @return {Socket}
 */
tsickle_declare_module.dgram.Socket.prototype.once = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(): void|function(!Error): void|function(?, !AddressInfo): void} listener
 * @return {Socket}
 */
tsickle_declare_module.dgram.Socket.prototype.prependListener = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(): void|function(!Error): void|function(?, !AddressInfo): void} listener
 * @return {Socket}
 */
tsickle_declare_module.dgram.Socket.prototype.prependOnceListener = function(event, listener) {};
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "fs"
/** @const */
tsickle_declare_module.fs = {};

/* TODO: ImportDeclaration in tsickle_declare_module.fs */

/* TODO: ImportDeclaration in tsickle_declare_module.fs */
/**
 * @record
 * @struct
 */
tsickle_declare_module.fs.Stats = function() {};
 /** @type {number} */
tsickle_declare_module.fs.Stats.prototype.dev;
 /** @type {number} */
tsickle_declare_module.fs.Stats.prototype.ino;
 /** @type {number} */
tsickle_declare_module.fs.Stats.prototype.mode;
 /** @type {number} */
tsickle_declare_module.fs.Stats.prototype.nlink;
 /** @type {number} */
tsickle_declare_module.fs.Stats.prototype.uid;
 /** @type {number} */
tsickle_declare_module.fs.Stats.prototype.gid;
 /** @type {number} */
tsickle_declare_module.fs.Stats.prototype.rdev;
 /** @type {number} */
tsickle_declare_module.fs.Stats.prototype.size;
 /** @type {number} */
tsickle_declare_module.fs.Stats.prototype.blksize;
 /** @type {number} */
tsickle_declare_module.fs.Stats.prototype.blocks;
 /** @type {!Date} */
tsickle_declare_module.fs.Stats.prototype.atime;
 /** @type {!Date} */
tsickle_declare_module.fs.Stats.prototype.mtime;
 /** @type {!Date} */
tsickle_declare_module.fs.Stats.prototype.ctime;
 /** @type {!Date} */
tsickle_declare_module.fs.Stats.prototype.birthtime;

/**
 * @return {boolean}
 */
tsickle_declare_module.fs.Stats.prototype.isFile = function() {};

/**
 * @return {boolean}
 */
tsickle_declare_module.fs.Stats.prototype.isDirectory = function() {};

/**
 * @return {boolean}
 */
tsickle_declare_module.fs.Stats.prototype.isBlockDevice = function() {};

/**
 * @return {boolean}
 */
tsickle_declare_module.fs.Stats.prototype.isCharacterDevice = function() {};

/**
 * @return {boolean}
 */
tsickle_declare_module.fs.Stats.prototype.isSymbolicLink = function() {};

/**
 * @return {boolean}
 */
tsickle_declare_module.fs.Stats.prototype.isFIFO = function() {};

/**
 * @return {boolean}
 */
tsickle_declare_module.fs.Stats.prototype.isSocket = function() {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.fs.FSWatcher = function() {};

/**
 * @return {void}
 */
tsickle_declare_module.fs.FSWatcher.prototype.close = function() {};

/**
 * events.EventEmitter
 *   1. change
 *   2. error
 * @param {string} event
 * @param {!Function|function(string, (string|?)): void|function(number, string): void} listener
 * @return {FSWatcher}
 */
tsickle_declare_module.fs.FSWatcher.prototype.addListener = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(string, (string|?)): void|function(number, string): void} listener
 * @return {FSWatcher}
 */
tsickle_declare_module.fs.FSWatcher.prototype.on = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(string, (string|?)): void|function(number, string): void} listener
 * @return {FSWatcher}
 */
tsickle_declare_module.fs.FSWatcher.prototype.once = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(string, (string|?)): void|function(number, string): void} listener
 * @return {FSWatcher}
 */
tsickle_declare_module.fs.FSWatcher.prototype.prependListener = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(string, (string|?)): void|function(number, string): void} listener
 * @return {FSWatcher}
 */
tsickle_declare_module.fs.FSWatcher.prototype.prependOnceListener = function(event, listener) {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.fs.ReadStream = function() {};
 /** @type {number} */
tsickle_declare_module.fs.ReadStream.prototype.bytesRead;
 /** @type {(string|?)} */
tsickle_declare_module.fs.ReadStream.prototype.path;

/**
 * @return {void}
 */
tsickle_declare_module.fs.ReadStream.prototype.close = function() {};

/**
 * @return {void}
 */
tsickle_declare_module.fs.ReadStream.prototype.destroy = function() {};

/**
 * events.EventEmitter
 *   1. open
 *   2. close
 * @param {string} event
 * @param {!Function|function(number): void|function(): void} listener
 * @return {ReadStream}
 */
tsickle_declare_module.fs.ReadStream.prototype.addListener = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(number): void|function(): void} listener
 * @return {ReadStream}
 */
tsickle_declare_module.fs.ReadStream.prototype.on = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(number): void|function(): void} listener
 * @return {ReadStream}
 */
tsickle_declare_module.fs.ReadStream.prototype.once = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(number): void|function(): void} listener
 * @return {ReadStream}
 */
tsickle_declare_module.fs.ReadStream.prototype.prependListener = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(number): void|function(): void} listener
 * @return {ReadStream}
 */
tsickle_declare_module.fs.ReadStream.prototype.prependOnceListener = function(event, listener) {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.fs.WriteStream = function() {};
 /** @type {number} */
tsickle_declare_module.fs.WriteStream.prototype.bytesWritten;
 /** @type {(string|?)} */
tsickle_declare_module.fs.WriteStream.prototype.path;

/**
 * @return {void}
 */
tsickle_declare_module.fs.WriteStream.prototype.close = function() {};

/**
 * events.EventEmitter
 *   1. open
 *   2. close
 * @param {string} event
 * @param {!Function|function(number): void|function(): void} listener
 * @return {WriteStream}
 */
tsickle_declare_module.fs.WriteStream.prototype.addListener = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(number): void|function(): void} listener
 * @return {WriteStream}
 */
tsickle_declare_module.fs.WriteStream.prototype.on = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(number): void|function(): void} listener
 * @return {WriteStream}
 */
tsickle_declare_module.fs.WriteStream.prototype.once = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(number): void|function(): void} listener
 * @return {WriteStream}
 */
tsickle_declare_module.fs.WriteStream.prototype.prependListener = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(number): void|function(): void} listener
 * @return {WriteStream}
 */
tsickle_declare_module.fs.WriteStream.prototype.prependOnceListener = function(event, listener) {};

/**
 * Asynchronous rename.
 * @param {string} oldPath
 * @param {string} newPath
 * @param {function(!NodeJS.ErrnoException): void=} callback No arguments other than a possible exception are given to the completion callback.
 * @return {void}
 */
tsickle_declare_module.fs.rename = function(oldPath, newPath, callback) {};

/**
 * Synchronous rename
 * @param {string} oldPath
 * @param {string} newPath
 * @return {void}
 */
tsickle_declare_module.fs.renameSync = function(oldPath, newPath) {};

/**
 * @param {(string|?)} path
 * @param {function(!NodeJS.ErrnoException): void|number=} callback_or_len
 * @param {function(!NodeJS.ErrnoException): void=} callback
 * @return {void}
 */
tsickle_declare_module.fs.truncate = function(path, callback_or_len, callback) {};

/**
 * @param {(string|?)} path
 * @param {number=} len
 * @return {void}
 */
tsickle_declare_module.fs.truncateSync = function(path, len) {};

/**
 * @param {number} fd
 * @param {function(!NodeJS.ErrnoException): void|number=} callback_or_len
 * @param {function(!NodeJS.ErrnoException): void=} callback
 * @return {void}
 */
tsickle_declare_module.fs.ftruncate = function(fd, callback_or_len, callback) {};

/**
 * @param {number} fd
 * @param {number=} len
 * @return {void}
 */
tsickle_declare_module.fs.ftruncateSync = function(fd, len) {};

/**
 * @param {(string|?)} path
 * @param {number} uid
 * @param {number} gid
 * @param {function(!NodeJS.ErrnoException): void=} callback
 * @return {void}
 */
tsickle_declare_module.fs.chown = function(path, uid, gid, callback) {};

/**
 * @param {(string|?)} path
 * @param {number} uid
 * @param {number} gid
 * @return {void}
 */
tsickle_declare_module.fs.chownSync = function(path, uid, gid) {};

/**
 * @param {number} fd
 * @param {number} uid
 * @param {number} gid
 * @param {function(!NodeJS.ErrnoException): void=} callback
 * @return {void}
 */
tsickle_declare_module.fs.fchown = function(fd, uid, gid, callback) {};

/**
 * @param {number} fd
 * @param {number} uid
 * @param {number} gid
 * @return {void}
 */
tsickle_declare_module.fs.fchownSync = function(fd, uid, gid) {};

/**
 * @param {(string|?)} path
 * @param {number} uid
 * @param {number} gid
 * @param {function(!NodeJS.ErrnoException): void=} callback
 * @return {void}
 */
tsickle_declare_module.fs.lchown = function(path, uid, gid, callback) {};

/**
 * @param {(string|?)} path
 * @param {number} uid
 * @param {number} gid
 * @return {void}
 */
tsickle_declare_module.fs.lchownSync = function(path, uid, gid) {};

/**
 * @param {(string|?)} path
 * @param {number|string} mode
 * @param {function(!NodeJS.ErrnoException): void=} callback
 * @return {void}
 */
tsickle_declare_module.fs.chmod = function(path, mode, callback) {};

/**
 * @param {(string|?)} path
 * @param {number|string} mode
 * @return {void}
 */
tsickle_declare_module.fs.chmodSync = function(path, mode) {};

/**
 * @param {number} fd
 * @param {number|string} mode
 * @param {function(!NodeJS.ErrnoException): void=} callback
 * @return {void}
 */
tsickle_declare_module.fs.fchmod = function(fd, mode, callback) {};

/**
 * @param {number} fd
 * @param {number|string} mode
 * @return {void}
 */
tsickle_declare_module.fs.fchmodSync = function(fd, mode) {};

/**
 * @param {(string|?)} path
 * @param {number|string} mode
 * @param {function(!NodeJS.ErrnoException): void=} callback
 * @return {void}
 */
tsickle_declare_module.fs.lchmod = function(path, mode, callback) {};

/**
 * @param {(string|?)} path
 * @param {number|string} mode
 * @return {void}
 */
tsickle_declare_module.fs.lchmodSync = function(path, mode) {};

/**
 * @param {(string|?)} path
 * @param {function(!NodeJS.ErrnoException, !Stats): ?=} callback
 * @return {void}
 */
tsickle_declare_module.fs.stat = function(path, callback) {};

/**
 * @param {(string|?)} path
 * @param {function(!NodeJS.ErrnoException, !Stats): ?=} callback
 * @return {void}
 */
tsickle_declare_module.fs.lstat = function(path, callback) {};

/**
 * @param {number} fd
 * @param {function(!NodeJS.ErrnoException, !Stats): ?=} callback
 * @return {void}
 */
tsickle_declare_module.fs.fstat = function(fd, callback) {};

/**
 * @param {(string|?)} path
 * @return {!Stats}
 */
tsickle_declare_module.fs.statSync = function(path) {};

/**
 * @param {(string|?)} path
 * @return {!Stats}
 */
tsickle_declare_module.fs.lstatSync = function(path) {};

/**
 * @param {number} fd
 * @return {!Stats}
 */
tsickle_declare_module.fs.fstatSync = function(fd) {};

/**
 * @param {(string|?)} srcpath
 * @param {(string|?)} dstpath
 * @param {function(!NodeJS.ErrnoException): void=} callback
 * @return {void}
 */
tsickle_declare_module.fs.link = function(srcpath, dstpath, callback) {};

/**
 * @param {(string|?)} srcpath
 * @param {(string|?)} dstpath
 * @return {void}
 */
tsickle_declare_module.fs.linkSync = function(srcpath, dstpath) {};

/**
 * @param {(string|?)} srcpath
 * @param {(string|?)} dstpath
 * @param {string=} type
 * @param {function(!NodeJS.ErrnoException): void=} callback
 * @return {void}
 */
tsickle_declare_module.fs.symlink = function(srcpath, dstpath, type, callback) {};

/**
 * @param {(string|?)} srcpath
 * @param {(string|?)} dstpath
 * @param {string=} type
 * @return {void}
 */
tsickle_declare_module.fs.symlinkSync = function(srcpath, dstpath, type) {};

/**
 * @param {(string|?)} path
 * @param {function(!NodeJS.ErrnoException, string): ?=} callback
 * @return {void}
 */
tsickle_declare_module.fs.readlink = function(path, callback) {};

/**
 * @param {(string|?)} path
 * @return {string}
 */
tsickle_declare_module.fs.readlinkSync = function(path) {};

/**
 * @param {(string|?)} path
 * @param {function(!NodeJS.ErrnoException, string): ?|!Object<string,string>=} callback_or_cache
 * @param {function(!NodeJS.ErrnoException, string): ?=} callback
 * @return {void}
 */
tsickle_declare_module.fs.realpath = function(path, callback_or_cache, callback) {};

/**
 * @param {(string|?)} path
 * @param {!Object<string,string>=} cache
 * @return {string}
 */
tsickle_declare_module.fs.realpathSync = function(path, cache) {};

/**
 * Asynchronous unlink - deletes the file specified in {path}
 * 
 * @param {(string|?)} path
 * @param {function(!NodeJS.ErrnoException): void=} callback No arguments other than a possible exception are given to the completion callback.
 * @return {void}
 */
tsickle_declare_module.fs.unlink = function(path, callback) {};

/**
 * Synchronous unlink - deletes the file specified in {path}
 * 
 * @param {(string|?)} path
 * @return {void}
 */
tsickle_declare_module.fs.unlinkSync = function(path) {};

/**
 * Asynchronous rmdir - removes the directory specified in {path}
 * 
 * @param {(string|?)} path
 * @param {function(!NodeJS.ErrnoException): void=} callback No arguments other than a possible exception are given to the completion callback.
 * @return {void}
 */
tsickle_declare_module.fs.rmdir = function(path, callback) {};

/**
 * Synchronous rmdir - removes the directory specified in {path}
 * 
 * @param {(string|?)} path
 * @return {void}
 */
tsickle_declare_module.fs.rmdirSync = function(path) {};

/**
 * Asynchronous mkdir - creates the directory specified in {path}.  Parameter {mode} defaults to 0777.
 * 
 * Asynchronous mkdir - creates the directory specified in {path}.  Parameter {mode} defaults to 0777.
 * 
 * Asynchronous mkdir - creates the directory specified in {path}.  Parameter {mode} defaults to 0777.
 * 
 * @param {(string|?)} path
 * @param {function(!NodeJS.ErrnoException): void|number|string=} callback_or_mode No arguments other than a possible exception are given to the completion callback.
 * @param {function(!NodeJS.ErrnoException): void=} callback No arguments other than a possible exception are given to the completion callback.
 * @return {void}
 */
tsickle_declare_module.fs.mkdir = function(path, callback_or_mode, callback) {};

/**
 * Synchronous mkdir - creates the directory specified in {path}.  Parameter {mode} defaults to 0777.
 * 
 * Synchronous mkdir - creates the directory specified in {path}.  Parameter {mode} defaults to 0777.
 * 
 * @param {(string|?)} path
 * @param {number|string=} mode
 * @return {void}
 */
tsickle_declare_module.fs.mkdirSync = function(path, mode) {};

/**
 * Asynchronous mkdtemp - Creates a unique temporary directory. Generates six random characters to be appended behind a required prefix to create a unique temporary directory.
 * 
 * @param {string} prefix
 * @param {function(!NodeJS.ErrnoException, string): void=} callback The created folder path is passed as a string to the callback's second parameter.
 * @return {void}
 */
tsickle_declare_module.fs.mkdtemp = function(prefix, callback) {};

/**
 * Synchronous mkdtemp - Creates a unique temporary directory. Generates six random characters to be appended behind a required prefix to create a unique temporary directory.
 * 
 * @param {string} prefix
 * @return {string} Returns the created folder path.
 */
tsickle_declare_module.fs.mkdtempSync = function(prefix) {};

/**
 * @param {(string|?)} path
 * @param {function(!NodeJS.ErrnoException, !Array<string>): void|(string|!Object)} callback_or_options
 * @param {function(!NodeJS.ErrnoException, !Array<string>): void=} callback
 * @return {void}
 */
tsickle_declare_module.fs.readdir = function(path, callback_or_options, callback) {};

/**
 * @param {(string|?)} path
 * @param {(string|!Object)=} options
 * @return {!Array<string>}
 */
tsickle_declare_module.fs.readdirSync = function(path, options) {};

/**
 * @param {number} fd
 * @param {function(!NodeJS.ErrnoException): void=} callback
 * @return {void}
 */
tsickle_declare_module.fs.close = function(fd, callback) {};

/**
 * @param {number} fd
 * @return {void}
 */
tsickle_declare_module.fs.closeSync = function(fd) {};

/**
 * @param {(string|?)} path
 * @param {(string|number)} flags
 * @param {function(!NodeJS.ErrnoException, number): void|number} callback_or_mode
 * @param {function(!NodeJS.ErrnoException, number): void=} callback
 * @return {void}
 */
tsickle_declare_module.fs.open = function(path, flags, callback_or_mode, callback) {};

/**
 * @param {(string|?)} path
 * @param {(string|number)} flags
 * @param {number=} mode
 * @return {number}
 */
tsickle_declare_module.fs.openSync = function(path, flags, mode) {};

/**
 * @param {(string|?)} path
 * @param {number|!Date} atime
 * @param {number|!Date} mtime
 * @param {function(!NodeJS.ErrnoException): void=} callback
 * @return {void}
 */
tsickle_declare_module.fs.utimes = function(path, atime, mtime, callback) {};

/**
 * @param {(string|?)} path
 * @param {number|!Date} atime
 * @param {number|!Date} mtime
 * @return {void}
 */
tsickle_declare_module.fs.utimesSync = function(path, atime, mtime) {};

/**
 * @param {number} fd
 * @param {number|!Date} atime
 * @param {number|!Date} mtime
 * @param {function(!NodeJS.ErrnoException): void=} callback
 * @return {void}
 */
tsickle_declare_module.fs.futimes = function(fd, atime, mtime, callback) {};

/**
 * @param {number} fd
 * @param {number|!Date} atime
 * @param {number|!Date} mtime
 * @return {void}
 */
tsickle_declare_module.fs.futimesSync = function(fd, atime, mtime) {};

/**
 * @param {number} fd
 * @param {function(!NodeJS.ErrnoException): void=} callback
 * @return {void}
 */
tsickle_declare_module.fs.fsync = function(fd, callback) {};

/**
 * @param {number} fd
 * @return {void}
 */
tsickle_declare_module.fs.fsyncSync = function(fd) {};

/**
 * @param {number} fd
 * @param {?} buffer_or_data
 * @param {number|function(!NodeJS.ErrnoException, number, string): void=} offset_or_callback
 * @param {number|function(!NodeJS.ErrnoException, number, string): void|string=} length_or_callback_or_encoding
 * @param {number|function(!NodeJS.ErrnoException, number, ?): void|function(!NodeJS.ErrnoException, number, string): void=} position_or_callback
 * @param {function(!NodeJS.ErrnoException, number, ?): void=} callback
 * @return {void}
 */
tsickle_declare_module.fs.write = function(fd, buffer_or_data, offset_or_callback, length_or_callback_or_encoding, position_or_callback, callback) {};

/**
 * @param {number} fd
 * @param {?} buffer_or_data
 * @param {number=} offset_or_position
 * @param {number|string=} length_or_enconding
 * @param {number=} position
 * @return {number}
 */
tsickle_declare_module.fs.writeSync = function(fd, buffer_or_data, offset_or_position, length_or_enconding, position) {};

/**
 * @param {number} fd
 * @param {?} buffer
 * @param {number} offset
 * @param {number} length
 * @param {number} position
 * @param {function(!NodeJS.ErrnoException, number, ?): void=} callback
 * @return {void}
 */
tsickle_declare_module.fs.read = function(fd, buffer, offset, length, position, callback) {};

/**
 * @param {number} fd
 * @param {?} buffer
 * @param {number} offset
 * @param {number} length
 * @param {number} position
 * @return {number}
 */
tsickle_declare_module.fs.readSync = function(fd, buffer, offset, length, position) {};

/**
 * Asynchronous readFile - Asynchronously reads the entire contents of a file.
 * 
 * Asynchronous readFile - Asynchronously reads the entire contents of a file.
 * 
 * Asynchronous readFile - Asynchronously reads the entire contents of a file.
 * 
 * Asynchronous readFile - Asynchronously reads the entire contents of a file.
 * 
 * @param {string} filename
 * @param {null|string|{encoding: null, flag: string}|{encoding: string, flag: string}|{flag: string}|function(!NodeJS.ErrnoException, ?): void} encoding_or_options_or_callback An object with optional {encoding} and {flag} properties.  If {encoding} is specified, readFile returns a string; otherwise it returns a Buffer. / - The callback is passed two arguments (err, data), where data is the contents of the file.
 * @param {function(!NodeJS.ErrnoException, ?): void|function(!NodeJS.ErrnoException, string): void|function(!NodeJS.ErrnoException, (string|?)): void=} callback - The callback is passed two arguments (err, data), where data is the contents of the file.
 * @return {void}
 */
tsickle_declare_module.fs.readFile = function(filename, encoding_or_options_or_callback, callback) {};

/**
 * Synchronous readFile - Synchronously reads the entire contents of a file.
 * 
 * Synchronous readFile - Synchronously reads the entire contents of a file.
 * 
 * Synchronous readFile - Synchronously reads the entire contents of a file.
 * 
 * @param {string} filename
 * @param {null|string|{encoding: null, flag: string}|{encoding: string, flag: string}|{flag: string}=} encoding_or_options An object with optional {encoding} and {flag} properties.  If {encoding} is specified, readFileSync returns a string; otherwise it returns a Buffer.
 * @return {?|string|(string|?)}
 */
tsickle_declare_module.fs.readFileSync = function(filename, encoding_or_options) {};

/**
 * @param {string} filename
 * @param {?} data
 * @param {function(!NodeJS.ErrnoException): void|string|{encoding: string, mode: number, flag: string}|{encoding: string, mode: string, flag: string}=} callback_or_encoding_or_options
 * @param {function(!NodeJS.ErrnoException): void=} callback
 * @return {void}
 */
tsickle_declare_module.fs.writeFile = function(filename, data, callback_or_encoding_or_options, callback) {};

/**
 * @param {string} filename
 * @param {?} data
 * @param {string|{encoding: string, mode: number, flag: string}|{encoding: string, mode: string, flag: string}=} encoding_or_options
 * @return {void}
 */
tsickle_declare_module.fs.writeFileSync = function(filename, data, encoding_or_options) {};

/**
 * @param {string} filename
 * @param {?} data
 * @param {string|{encoding: string, mode: number, flag: string}|{encoding: string, mode: string, flag: string}|function(!NodeJS.ErrnoException): void=} encoding_or_options_or_callback
 * @param {function(!NodeJS.ErrnoException): void=} callback
 * @return {void}
 */
tsickle_declare_module.fs.appendFile = function(filename, data, encoding_or_options_or_callback, callback) {};

/**
 * @param {string} filename
 * @param {?} data
 * @param {string|{encoding: string, mode: number, flag: string}|{encoding: string, mode: string, flag: string}=} encoding_or_options
 * @return {void}
 */
tsickle_declare_module.fs.appendFileSync = function(filename, data, encoding_or_options) {};

/**
 * @param {string} filename
 * @param {function(!Stats, !Stats): void|{persistent: boolean, interval: number}} listener_or_options
 * @param {function(!Stats, !Stats): void=} listener
 * @return {void}
 */
tsickle_declare_module.fs.watchFile = function(filename, listener_or_options, listener) {};

/**
 * @param {string} filename
 * @param {function(!Stats, !Stats): void=} listener
 * @return {void}
 */
tsickle_declare_module.fs.unwatchFile = function(filename, listener) {};

/**
 * @param {string} filename
 * @param {function(string, string): ?|string|{persistent: boolean, recursive: boolean, encoding: string}=} listener_or_encoding_or_options
 * @param {function(string, (string|?)): ?=} listener
 * @return {!FSWatcher}
 */
tsickle_declare_module.fs.watch = function(filename, listener_or_encoding_or_options, listener) {};

/**
 * @param {(string|?)} path
 * @param {function(boolean): void=} callback
 * @return {void}
 */
tsickle_declare_module.fs.exists = function(path, callback) {};

/**
 * @param {(string|?)} path
 * @return {boolean}
 */
tsickle_declare_module.fs.existsSync = function(path) {};
/** @const */
tsickle_declare_module.fs.constants = {};
 /** @type {number} */
tsickle_declare_module.fs.constants.F_OK;
 /** @type {number} */
tsickle_declare_module.fs.constants.R_OK;
 /** @type {number} */
tsickle_declare_module.fs.constants.W_OK;
 /** @type {number} */
tsickle_declare_module.fs.constants.X_OK;
 /** @type {number} */
tsickle_declare_module.fs.constants.O_RDONLY;
 /** @type {number} */
tsickle_declare_module.fs.constants.O_WRONLY;
 /** @type {number} */
tsickle_declare_module.fs.constants.O_RDWR;
 /** @type {number} */
tsickle_declare_module.fs.constants.O_CREAT;
 /** @type {number} */
tsickle_declare_module.fs.constants.O_EXCL;
 /** @type {number} */
tsickle_declare_module.fs.constants.O_NOCTTY;
 /** @type {number} */
tsickle_declare_module.fs.constants.O_TRUNC;
 /** @type {number} */
tsickle_declare_module.fs.constants.O_APPEND;
 /** @type {number} */
tsickle_declare_module.fs.constants.O_DIRECTORY;
 /** @type {number} */
tsickle_declare_module.fs.constants.O_NOATIME;
 /** @type {number} */
tsickle_declare_module.fs.constants.O_NOFOLLOW;
 /** @type {number} */
tsickle_declare_module.fs.constants.O_SYNC;
 /** @type {number} */
tsickle_declare_module.fs.constants.O_SYMLINK;
 /** @type {number} */
tsickle_declare_module.fs.constants.O_DIRECT;
 /** @type {number} */
tsickle_declare_module.fs.constants.O_NONBLOCK;
 /** @type {number} */
tsickle_declare_module.fs.constants.S_IFMT;
 /** @type {number} */
tsickle_declare_module.fs.constants.S_IFREG;
 /** @type {number} */
tsickle_declare_module.fs.constants.S_IFDIR;
 /** @type {number} */
tsickle_declare_module.fs.constants.S_IFCHR;
 /** @type {number} */
tsickle_declare_module.fs.constants.S_IFBLK;
 /** @type {number} */
tsickle_declare_module.fs.constants.S_IFIFO;
 /** @type {number} */
tsickle_declare_module.fs.constants.S_IFLNK;
 /** @type {number} */
tsickle_declare_module.fs.constants.S_IFSOCK;
 /** @type {number} */
tsickle_declare_module.fs.constants.S_IRWXU;
 /** @type {number} */
tsickle_declare_module.fs.constants.S_IRUSR;
 /** @type {number} */
tsickle_declare_module.fs.constants.S_IWUSR;
 /** @type {number} */
tsickle_declare_module.fs.constants.S_IXUSR;
 /** @type {number} */
tsickle_declare_module.fs.constants.S_IRWXG;
 /** @type {number} */
tsickle_declare_module.fs.constants.S_IRGRP;
 /** @type {number} */
tsickle_declare_module.fs.constants.S_IWGRP;
 /** @type {number} */
tsickle_declare_module.fs.constants.S_IXGRP;
 /** @type {number} */
tsickle_declare_module.fs.constants.S_IRWXO;
 /** @type {number} */
tsickle_declare_module.fs.constants.S_IROTH;
 /** @type {number} */
tsickle_declare_module.fs.constants.S_IWOTH;
 /** @type {number} */
tsickle_declare_module.fs.constants.S_IXOTH;

/**
 * Tests a user's permissions for the file specified by path.
 * @param {(string|?)} path
 * @param {function(!NodeJS.ErrnoException): void|number} callback_or_mode
 * @param {function(!NodeJS.ErrnoException): void=} callback
 * @return {void}
 */
tsickle_declare_module.fs.access = function(path, callback_or_mode, callback) {};

/**
 * Synchronous version of fs.access. This throws if any accessibility checks fail, and does nothing otherwise.
 * @param {(string|?)} path
 * @param {number=} mode
 * @return {void}
 */
tsickle_declare_module.fs.accessSync = function(path, mode) {};

/**
 * @param {(string|?)} path
 * @param {{flags: string, encoding: string, fd: number, mode: number, autoClose: boolean, start: number, end: number}=} options
 * @return {!ReadStream}
 */
tsickle_declare_module.fs.createReadStream = function(path, options) {};

/**
 * @param {(string|?)} path
 * @param {{flags: string, encoding: string, fd: number, mode: number, autoClose: boolean, start: number}=} options
 * @return {!WriteStream}
 */
tsickle_declare_module.fs.createWriteStream = function(path, options) {};

/**
 * @param {number} fd
 * @param {!Function} callback
 * @return {void}
 */
tsickle_declare_module.fs.fdatasync = function(fd, callback) {};

/**
 * @param {number} fd
 * @return {void}
 */
tsickle_declare_module.fs.fdatasyncSync = function(fd) {};
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "path"
/** @const */
tsickle_declare_module.path = {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.path.ParsedPath = function() {};
 /** @type {string} */
tsickle_declare_module.path.ParsedPath.prototype.root;
 /** @type {string} */
tsickle_declare_module.path.ParsedPath.prototype.dir;
 /** @type {string} */
tsickle_declare_module.path.ParsedPath.prototype.base;
 /** @type {string} */
tsickle_declare_module.path.ParsedPath.prototype.ext;
 /** @type {string} */
tsickle_declare_module.path.ParsedPath.prototype.name;

/**
 * Normalize a string path, reducing '..' and '.' parts.
 * When multiple slashes are found, they're replaced by a single one; when the path contains a trailing slash, it is preserved. On Windows backslashes are used.
 * 
 * @param {string} p string path to normalize.
 * @return {string}
 */
tsickle_declare_module.path.normalize = function(p) {};

/**
 * Join all arguments together and normalize the resulting path.
 * Arguments must be strings. In v0.8, non-string arguments were silently ignored. In v0.10 and up, an exception is thrown.
 * 
 * @param {...string} paths paths to join.
 * @return {string}
 */
tsickle_declare_module.path.join = function(paths) {};

/**
 * The right-most parameter is considered {to}.  Other parameters are considered an array of {from}.
 * 
 * Starting from leftmost {from} paramter, resolves {to} to an absolute path.
 * 
 * If {to} isn't already absolute, {from} arguments are prepended in right to left order, until an absolute path is found. If after using all {from} paths still no absolute path is found, the current working directory is used as well. The resulting path is normalized, and trailing slashes are removed unless the path gets resolved to the root directory.
 * 
 * @param {...?} pathSegments string paths to join.  Non-string arguments are ignored.
 * @return {string}
 */
tsickle_declare_module.path.resolve = function(pathSegments) {};

/**
 * Determines whether {path} is an absolute path. An absolute path will always resolve to the same location, regardless of the working directory.
 * 
 * @param {string} path path to test.
 * @return {boolean}
 */
tsickle_declare_module.path.isAbsolute = function(path) {};

/**
 * Solve the relative path from {from} to {to}.
 * At times we have two absolute paths, and we need to derive the relative path from one to the other. This is actually the reverse transform of path.resolve.
 * 
 * @param {string} from
 * @param {string} to
 * @return {string}
 */
tsickle_declare_module.path.relative = function(from, to) {};

/**
 * Return the directory name of a path. Similar to the Unix dirname command.
 * 
 * @param {string} p the path to evaluate.
 * @return {string}
 */
tsickle_declare_module.path.dirname = function(p) {};

/**
 * Return the last portion of a path. Similar to the Unix basename command.
 * Often used to extract the file name from a fully qualified path.
 * 
 * @param {string} p the path to evaluate.
 * @param {string=} ext optionally, an extension to remove from the result.
 * @return {string}
 */
tsickle_declare_module.path.basename = function(p, ext) {};

/**
 * Return the extension of the path, from the last '.' to end of string in the last portion of the path.
 * If there is no '.' in the last portion of the path or the first character of it is '.', then it returns an empty string
 * 
 * @param {string} p the path to evaluate.
 * @return {string}
 */
tsickle_declare_module.path.extname = function(p) {};
 /** @type {string} */
tsickle_declare_module.path.sep;
 /** @type {string} */
tsickle_declare_module.path.delimiter;

/**
 * Returns an object from a path string - the opposite of format().
 * 
 * @param {string} pathString path to evaluate.
 * @return {!ParsedPath}
 */
tsickle_declare_module.path.parse = function(pathString) {};

/**
 * Returns a path string from an object - the opposite of parse().
 * 
 * @param {!ParsedPath} pathObject
 * @return {string}
 */
tsickle_declare_module.path.format = function(pathObject) {};
/** @const */
tsickle_declare_module.path.posix = {};

/**
 * @param {string} p
 * @return {string}
 */
tsickle_declare_module.path.posix.normalize = function(p) {};

/**
 * @param {...?} paths
 * @return {string}
 */
tsickle_declare_module.path.posix.join = function(paths) {};

/**
 * @param {...?} pathSegments
 * @return {string}
 */
tsickle_declare_module.path.posix.resolve = function(pathSegments) {};

/**
 * @param {string} p
 * @return {boolean}
 */
tsickle_declare_module.path.posix.isAbsolute = function(p) {};

/**
 * @param {string} from
 * @param {string} to
 * @return {string}
 */
tsickle_declare_module.path.posix.relative = function(from, to) {};

/**
 * @param {string} p
 * @return {string}
 */
tsickle_declare_module.path.posix.dirname = function(p) {};

/**
 * @param {string} p
 * @param {string=} ext
 * @return {string}
 */
tsickle_declare_module.path.posix.basename = function(p, ext) {};

/**
 * @param {string} p
 * @return {string}
 */
tsickle_declare_module.path.posix.extname = function(p) {};
 /** @type {string} */
tsickle_declare_module.path.posix.sep;
 /** @type {string} */
tsickle_declare_module.path.posix.delimiter;

/**
 * @param {string} p
 * @return {!ParsedPath}
 */
tsickle_declare_module.path.posix.parse = function(p) {};

/**
 * @param {!ParsedPath} pP
 * @return {string}
 */
tsickle_declare_module.path.posix.format = function(pP) {};
/** @const */
tsickle_declare_module.path.win32 = {};

/**
 * @param {string} p
 * @return {string}
 */
tsickle_declare_module.path.win32.normalize = function(p) {};

/**
 * @param {...?} paths
 * @return {string}
 */
tsickle_declare_module.path.win32.join = function(paths) {};

/**
 * @param {...?} pathSegments
 * @return {string}
 */
tsickle_declare_module.path.win32.resolve = function(pathSegments) {};

/**
 * @param {string} p
 * @return {boolean}
 */
tsickle_declare_module.path.win32.isAbsolute = function(p) {};

/**
 * @param {string} from
 * @param {string} to
 * @return {string}
 */
tsickle_declare_module.path.win32.relative = function(from, to) {};

/**
 * @param {string} p
 * @return {string}
 */
tsickle_declare_module.path.win32.dirname = function(p) {};

/**
 * @param {string} p
 * @param {string=} ext
 * @return {string}
 */
tsickle_declare_module.path.win32.basename = function(p, ext) {};

/**
 * @param {string} p
 * @return {string}
 */
tsickle_declare_module.path.win32.extname = function(p) {};
 /** @type {string} */
tsickle_declare_module.path.win32.sep;
 /** @type {string} */
tsickle_declare_module.path.win32.delimiter;

/**
 * @param {string} p
 * @return {!ParsedPath}
 */
tsickle_declare_module.path.win32.parse = function(p) {};

/**
 * @param {!ParsedPath} pP
 * @return {string}
 */
tsickle_declare_module.path.win32.format = function(pP) {};
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "string_decoder"
/** @const */
tsickle_declare_module.string__decoder = {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.string__decoder.NodeStringDecoder = function() {};

/**
 * @param {?} buffer
 * @return {string}
 */
tsickle_declare_module.string__decoder.NodeStringDecoder.prototype.write = function(buffer) {};

/**
 * @param {?=} buffer
 * @return {string}
 */
tsickle_declare_module.string__decoder.NodeStringDecoder.prototype.end = function(buffer) {};
 /** @type {function(new: (!NodeStringDecoder), string): ?} */
tsickle_declare_module.string__decoder.StringDecoder;
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "tls"
/** @const */
tsickle_declare_module.tls = {};

/* TODO: ImportDeclaration in tsickle_declare_module.tls */

/* TODO: ImportDeclaration in tsickle_declare_module.tls */

/* TODO: ImportDeclaration in tsickle_declare_module.tls */
 /** @type {number} */
tsickle_declare_module.tls.CLIENT_RENEG_LIMIT;
 /** @type {number} */
tsickle_declare_module.tls.CLIENT_RENEG_WINDOW;
/**
 * @record
 * @struct
 */
tsickle_declare_module.tls.Certificate = function() {};
 /** @type {string} */
tsickle_declare_module.tls.Certificate.prototype.C;
 /** @type {string} */
tsickle_declare_module.tls.Certificate.prototype.ST;
 /** @type {string} */
tsickle_declare_module.tls.Certificate.prototype.L;
 /** @type {string} */
tsickle_declare_module.tls.Certificate.prototype.O;
 /** @type {string} */
tsickle_declare_module.tls.Certificate.prototype.OU;
 /** @type {string} */
tsickle_declare_module.tls.Certificate.prototype.CN;
/**
 * @record
 * @struct
 */
tsickle_declare_module.tls.PeerCertificate = function() {};
 /** @type {!Certificate} */
tsickle_declare_module.tls.PeerCertificate.prototype.subject;
 /** @type {!Certificate} */
tsickle_declare_module.tls.PeerCertificate.prototype.issuer;
 /** @type {string} */
tsickle_declare_module.tls.PeerCertificate.prototype.subjectaltname;
 /** @type {!Object<string,!Array<string>>} */
tsickle_declare_module.tls.PeerCertificate.prototype.infoAccess;
 /** @type {string} */
tsickle_declare_module.tls.PeerCertificate.prototype.modulus;
 /** @type {string} */
tsickle_declare_module.tls.PeerCertificate.prototype.exponent;
 /** @type {string} */
tsickle_declare_module.tls.PeerCertificate.prototype.valid_from;
 /** @type {string} */
tsickle_declare_module.tls.PeerCertificate.prototype.valid_to;
 /** @type {string} */
tsickle_declare_module.tls.PeerCertificate.prototype.fingerprint;
 /** @type {!Array<string>} */
tsickle_declare_module.tls.PeerCertificate.prototype.ext_key_usage;
 /** @type {string} */
tsickle_declare_module.tls.PeerCertificate.prototype.serialNumber;
 /** @type {?} */
tsickle_declare_module.tls.PeerCertificate.prototype.raw;
/**
 * @extends {PeerCertificate}
 * @record
 * @struct
 */
tsickle_declare_module.tls.DetailedPeerCertificate = function() {};
 /** @type {!DetailedPeerCertificate} */
tsickle_declare_module.tls.DetailedPeerCertificate.prototype.issuerCertificate;
/**
 * @record
 * @struct
 */
tsickle_declare_module.tls.CipherNameAndProtocol = function() {};
 /** @type {string} */
tsickle_declare_module.tls.CipherNameAndProtocol.prototype.name;
 /** @type {string} */
tsickle_declare_module.tls.CipherNameAndProtocol.prototype.version;

/**
 * @constructor
 * @struct
 * Construct a new tls.TLSSocket object from an existing TCP socket.
 * @param {?} socket
 * @param {{secureContext: !SecureContext, isServer: boolean, server: !Server, requestCert: boolean, rejectUnauthorized: boolean, NPNProtocols: (?|!Array<string>), ALPNProtocols: (?|!Array<string>), SNICallback: !Function, session: ?, requestOCSP: boolean}=} options
 */
tsickle_declare_module.tls.TLSSocket = function(socket, options) {};
 /** @type {boolean} */
tsickle_declare_module.tls.TLSSocket.prototype.authorized;
 /** @type {!Error} */
tsickle_declare_module.tls.TLSSocket.prototype.authorizationError;
 /** @type {boolean} */
tsickle_declare_module.tls.TLSSocket.prototype.encrypted;
 /** @type {string} */
tsickle_declare_module.tls.TLSSocket.prototype.localAddress;
 /** @type {number} */
tsickle_declare_module.tls.TLSSocket.prototype.localPort;
 /** @type {string} */
tsickle_declare_module.tls.TLSSocket.prototype.remoteAddress;
 /** @type {string} */
tsickle_declare_module.tls.TLSSocket.prototype.remoteFamily;
 /** @type {number} */
tsickle_declare_module.tls.TLSSocket.prototype.remotePort;

/**
 * Returns the bound address, the address family name and port of the underlying socket as reported by
 * the operating system.
 * @return {{port: number, family: string, address: string}}
 */
tsickle_declare_module.tls.TLSSocket.prototype.address = function() {};

/**
 * Returns an object representing the cipher name and the SSL/TLS protocol version of the current connection.
 * and the SSL/TLS protocol version of the current connection.
 * @return {!CipherNameAndProtocol}
 */
tsickle_declare_module.tls.TLSSocket.prototype.getCipher = function() {};

/**
 * Returns an object representing the peer's certificate.
 * The returned object has some properties corresponding to the field of the certificate.
 * If detailed argument is true the full chain with issuer property will be returned,
 * if false only the top certificate without issuer property.
 * If the peer does not provide a certificate, it returns null or an empty object.
 * @param {boolean=} detailed
 * @return {!DetailedPeerCertificate|!PeerCertificate|(!DetailedPeerCertificate|!PeerCertificate)}
 */
tsickle_declare_module.tls.TLSSocket.prototype.getPeerCertificate = function(detailed) {};

/**
 * Could be used to speed up handshake establishment when reconnecting to the server.
 * @return {?}
 */
tsickle_declare_module.tls.TLSSocket.prototype.getSession = function() {};

/**
 * NOTE: Works only with client TLS sockets.
 * Useful only for debugging, for session reuse provide session option to tls.connect().
 * @return {?}
 */
tsickle_declare_module.tls.TLSSocket.prototype.getTLSTicket = function() {};

/**
 * Initiate TLS renegotiation process.
 * 
 * NOTE: Can be used to request peer's certificate after the secure connection has been established.
 * ANOTHER NOTE: When running as the server, socket will be destroyed with an error after handshakeTimeout timeout.
 * requestCert (See tls.createServer() for details).
 * is successfully completed.
 * @param {!TlsOptions} options
 * @param {function(!Error): ?} callback
 * @return {?}
 */
tsickle_declare_module.tls.TLSSocket.prototype.renegotiate = function(options, callback) {};

/**
 * Set maximum TLS fragment size (default and maximum value is: 16384, minimum is: 512).
 * Smaller fragment size decreases buffering latency on the client: large fragments are buffered by
 * the TLS layer until the entire fragment is received and its integrity is verified;
 * large fragments can span multiple roundtrips, and their processing can be delayed due to packet
 * loss or reordering. However, smaller fragments add extra TLS framing bytes and CPU overhead,
 * which may decrease overall server throughput.
 * @param {number} size
 * @return {boolean}
 */
tsickle_declare_module.tls.TLSSocket.prototype.setMaxSendFragment = function(size) {};

/**
 * events.EventEmitter
 * 1. OCSPResponse
 * 2. secureConnect
 * 
 * @param {string} event
 * @param {!Function|function(?): void|function(): void} listener
 * @return {TLSSocket}
 */
tsickle_declare_module.tls.TLSSocket.prototype.addListener = function(event, listener) {};

/**
 * @param {(string|symbol)|string} event
 * @param {...?} args_or_response
 * @return {boolean}
 */
tsickle_declare_module.tls.TLSSocket.prototype.emit = function(event, args_or_response) {};

/**
 * @param {string} event
 * @param {!Function|function(?): void|function(): void} listener
 * @return {TLSSocket}
 */
tsickle_declare_module.tls.TLSSocket.prototype.on = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(?): void|function(): void} listener
 * @return {TLSSocket}
 */
tsickle_declare_module.tls.TLSSocket.prototype.once = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(?): void|function(): void} listener
 * @return {TLSSocket}
 */
tsickle_declare_module.tls.TLSSocket.prototype.prependListener = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(?): void|function(): void} listener
 * @return {TLSSocket}
 */
tsickle_declare_module.tls.TLSSocket.prototype.prependOnceListener = function(event, listener) {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.tls.TlsOptions = function() {};
 /** @type {string} */
tsickle_declare_module.tls.TlsOptions.prototype.host;
 /** @type {number} */
tsickle_declare_module.tls.TlsOptions.prototype.port;
 /** @type {(string|!Array<?>)} */
tsickle_declare_module.tls.TlsOptions.prototype.pfx;
 /** @type {(string|!Array<?>|?|!Array<string>)} */
tsickle_declare_module.tls.TlsOptions.prototype.key;
 /** @type {string} */
tsickle_declare_module.tls.TlsOptions.prototype.passphrase;
 /** @type {(string|?|!Array<string>|!Array<?>)} */
tsickle_declare_module.tls.TlsOptions.prototype.cert;
 /** @type {(string|?|!Array<string>|!Array<?>)} */
tsickle_declare_module.tls.TlsOptions.prototype.ca;
 /** @type {(string|!Array<string>)} */
tsickle_declare_module.tls.TlsOptions.prototype.crl;
 /** @type {string} */
tsickle_declare_module.tls.TlsOptions.prototype.ciphers;
 /** @type {boolean} */
tsickle_declare_module.tls.TlsOptions.prototype.honorCipherOrder;
 /** @type {boolean} */
tsickle_declare_module.tls.TlsOptions.prototype.requestCert;
 /** @type {boolean} */
tsickle_declare_module.tls.TlsOptions.prototype.rejectUnauthorized;
 /** @type {(?|!Array<string>)} */
tsickle_declare_module.tls.TlsOptions.prototype.NPNProtocols;
 /** @type {function(string, function(!Error, !SecureContext): ?): ?} */
tsickle_declare_module.tls.TlsOptions.prototype.SNICallback;
 /** @type {string} */
tsickle_declare_module.tls.TlsOptions.prototype.ecdhCurve;
 /** @type {(string|?)} */
tsickle_declare_module.tls.TlsOptions.prototype.dhparam;
 /** @type {number} */
tsickle_declare_module.tls.TlsOptions.prototype.handshakeTimeout;
 /** @type {(?|!Array<string>)} */
tsickle_declare_module.tls.TlsOptions.prototype.ALPNProtocols;
 /** @type {number} */
tsickle_declare_module.tls.TlsOptions.prototype.sessionTimeout;
 /** @type {?} */
tsickle_declare_module.tls.TlsOptions.prototype.ticketKeys;
 /** @type {string} */
tsickle_declare_module.tls.TlsOptions.prototype.sessionIdContext;
 /** @type {string} */
tsickle_declare_module.tls.TlsOptions.prototype.secureProtocol;
/**
 * @record
 * @struct
 */
tsickle_declare_module.tls.ConnectionOptions = function() {};
 /** @type {string} */
tsickle_declare_module.tls.ConnectionOptions.prototype.host;
 /** @type {number} */
tsickle_declare_module.tls.ConnectionOptions.prototype.port;
 /** @type {?} */
tsickle_declare_module.tls.ConnectionOptions.prototype.socket;
 /** @type {(string|?)} */
tsickle_declare_module.tls.ConnectionOptions.prototype.pfx;
 /** @type {(string|?|!Array<string>|!Array<?>)} */
tsickle_declare_module.tls.ConnectionOptions.prototype.key;
 /** @type {string} */
tsickle_declare_module.tls.ConnectionOptions.prototype.passphrase;
 /** @type {(string|?|!Array<string>|!Array<?>)} */
tsickle_declare_module.tls.ConnectionOptions.prototype.cert;
 /** @type {(string|?|!Array<(string|?)>)} */
tsickle_declare_module.tls.ConnectionOptions.prototype.ca;
 /** @type {boolean} */
tsickle_declare_module.tls.ConnectionOptions.prototype.rejectUnauthorized;
 /** @type {!Array<(string|?)>} */
tsickle_declare_module.tls.ConnectionOptions.prototype.NPNProtocols;
 /** @type {string} */
tsickle_declare_module.tls.ConnectionOptions.prototype.servername;
 /** @type {string} */
tsickle_declare_module.tls.ConnectionOptions.prototype.path;
 /** @type {!Array<(string|?)>} */
tsickle_declare_module.tls.ConnectionOptions.prototype.ALPNProtocols;
 /** @type {function(string, (string|?|!Array<(string|?)>)): ?} */
tsickle_declare_module.tls.ConnectionOptions.prototype.checkServerIdentity;
 /** @type {string} */
tsickle_declare_module.tls.ConnectionOptions.prototype.secureProtocol;
 /** @type {!Object} */
tsickle_declare_module.tls.ConnectionOptions.prototype.secureContext;
 /** @type {?} */
tsickle_declare_module.tls.ConnectionOptions.prototype.session;
 /** @type {number} */
tsickle_declare_module.tls.ConnectionOptions.prototype.minDHSize;
/**
 * @extends {Server}
 * @record
 * @struct
 */
tsickle_declare_module.tls.Server = function() {};
 /** @type {number} */
tsickle_declare_module.tls.Server.prototype.maxConnections;
 /** @type {number} */
tsickle_declare_module.tls.Server.prototype.connections;

/**
 * @param {!Function=} callback
 * @return {!Server}
 */
tsickle_declare_module.tls.Server.prototype.close = function(callback) {};

/**
 * @return {{port: number, family: string, address: string}}
 */
tsickle_declare_module.tls.Server.prototype.address = function() {};

/**
 * @param {string} hostName
 * @param {{key: string, cert: string, ca: string}} credentials
 * @return {void}
 */
tsickle_declare_module.tls.Server.prototype.addContext = function(hostName, credentials) {};

/**
 * events.EventEmitter
 * 1. tlsClientError
 * 2. newSession
 * 3. OCSPRequest
 * 4. resumeSession
 * 5. secureConnection
 * 
 * @param {string} event
 * @param {!Function|function(!Error, !TLSSocket): void|function(?, ?, function(!Error, ?): void): void|function(?, ?, !Function): void|function(?, function(!Error, ?): void): void|function(!TLSSocket): void} listener
 * @return {Server}
 */
tsickle_declare_module.tls.Server.prototype.addListener = function(event, listener) {};

/**
 * @param {(string|symbol)|string} event
 * @param {...?|!Error|!TLSSocket} args_or_err_or_sessionId_or_certificate_or_tlsSocket
 * @return {boolean}
 */
tsickle_declare_module.tls.Server.prototype.emit = function(event, args_or_err_or_sessionId_or_certificate_or_tlsSocket) {};

/**
 * @param {string} event
 * @param {!Function|function(!Error, !TLSSocket): void|function(?, ?, function(!Error, ?): void): void|function(?, ?, !Function): void|function(?, function(!Error, ?): void): void|function(!TLSSocket): void} listener
 * @return {Server}
 */
tsickle_declare_module.tls.Server.prototype.on = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(!Error, !TLSSocket): void|function(?, ?, function(!Error, ?): void): void|function(?, ?, !Function): void|function(?, function(!Error, ?): void): void|function(!TLSSocket): void} listener
 * @return {Server}
 */
tsickle_declare_module.tls.Server.prototype.once = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(!Error, !TLSSocket): void|function(?, ?, function(!Error, ?): void): void|function(?, ?, !Function): void|function(?, function(!Error, ?): void): void|function(!TLSSocket): void} listener
 * @return {Server}
 */
tsickle_declare_module.tls.Server.prototype.prependListener = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(!Error, !TLSSocket): void|function(?, ?, function(!Error, ?): void): void|function(?, ?, !Function): void|function(?, function(!Error, ?): void): void|function(!TLSSocket): void} listener
 * @return {Server}
 */
tsickle_declare_module.tls.Server.prototype.prependOnceListener = function(event, listener) {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.tls.ClearTextStream = function() {};
 /** @type {boolean} */
tsickle_declare_module.tls.ClearTextStream.prototype.authorized;
 /** @type {!Error} */
tsickle_declare_module.tls.ClearTextStream.prototype.authorizationError;
 /** @type {{name: string, version: string}} */
tsickle_declare_module.tls.ClearTextStream.prototype.getCipher;
 /** @type {{port: number, family: string, address: string}} */
tsickle_declare_module.tls.ClearTextStream.prototype.address;
 /** @type {string} */
tsickle_declare_module.tls.ClearTextStream.prototype.remoteAddress;
 /** @type {number} */
tsickle_declare_module.tls.ClearTextStream.prototype.remotePort;

/**
 * @return {?}
 */
tsickle_declare_module.tls.ClearTextStream.prototype.getPeerCertificate = function() {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.tls.SecurePair = function() {};
 /** @type {?} */
tsickle_declare_module.tls.SecurePair.prototype.encrypted;
 /** @type {?} */
tsickle_declare_module.tls.SecurePair.prototype.cleartext;
/**
 * @record
 * @struct
 */
tsickle_declare_module.tls.SecureContextOptions = function() {};
 /** @type {(string|?)} */
tsickle_declare_module.tls.SecureContextOptions.prototype.pfx;
 /** @type {(string|?)} */
tsickle_declare_module.tls.SecureContextOptions.prototype.key;
 /** @type {string} */
tsickle_declare_module.tls.SecureContextOptions.prototype.passphrase;
 /** @type {(string|?)} */
tsickle_declare_module.tls.SecureContextOptions.prototype.cert;
 /** @type {(string|?)} */
tsickle_declare_module.tls.SecureContextOptions.prototype.ca;
 /** @type {(string|!Array<string>)} */
tsickle_declare_module.tls.SecureContextOptions.prototype.crl;
 /** @type {string} */
tsickle_declare_module.tls.SecureContextOptions.prototype.ciphers;
 /** @type {boolean} */
tsickle_declare_module.tls.SecureContextOptions.prototype.honorCipherOrder;
/**
 * @record
 * @struct
 */
tsickle_declare_module.tls.SecureContext = function() {};
 /** @type {?} */
tsickle_declare_module.tls.SecureContext.prototype.context;

/**
 * @param {!TlsOptions} options
 * @param {function(!TLSSocket): void=} secureConnectionListener
 * @return {!Server}
 */
tsickle_declare_module.tls.createServer = function(options, secureConnectionListener) {};

/**
 * @param {!ConnectionOptions|number} options_or_port
 * @param {function(): void|string|!ConnectionOptions=} secureConnectionListener_or_host_or_options
 * @param {!ConnectionOptions|function(): void=} options_or_secureConnectListener
 * @param {function(): void=} secureConnectListener
 * @return {!TLSSocket}
 */
tsickle_declare_module.tls.connect = function(options_or_port, secureConnectionListener_or_host_or_options, options_or_secureConnectListener, secureConnectListener) {};

/**
 * @param {!Credentials=} credentials
 * @param {boolean=} isServer
 * @param {boolean=} requestCert
 * @param {boolean=} rejectUnauthorized
 * @return {!SecurePair}
 */
tsickle_declare_module.tls.createSecurePair = function(credentials, isServer, requestCert, rejectUnauthorized) {};

/**
 * @param {!SecureContextOptions} details
 * @return {!SecureContext}
 */
tsickle_declare_module.tls.createSecureContext = function(details) {};
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "crypto"
/** @const */
tsickle_declare_module.crypto = {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.crypto.Certificate = function() {};

/**
 * @param {(string|?)} spkac
 * @return {?}
 */
tsickle_declare_module.crypto.Certificate.prototype.exportChallenge = function(spkac) {};

/**
 * @param {(string|?)} spkac
 * @return {?}
 */
tsickle_declare_module.crypto.Certificate.prototype.exportPublicKey = function(spkac) {};

/**
 * @param {?} spkac
 * @return {boolean}
 */
tsickle_declare_module.crypto.Certificate.prototype.verifySpkac = function(spkac) {};
 /** @type {function(new: (?)): ?} */
tsickle_declare_module.crypto.Certificate;
 /** @type {boolean} */
tsickle_declare_module.crypto.fips;
/**
 * @record
 * @struct
 */
tsickle_declare_module.crypto.CredentialDetails = function() {};
 /** @type {string} */
tsickle_declare_module.crypto.CredentialDetails.prototype.pfx;
 /** @type {string} */
tsickle_declare_module.crypto.CredentialDetails.prototype.key;
 /** @type {string} */
tsickle_declare_module.crypto.CredentialDetails.prototype.passphrase;
 /** @type {string} */
tsickle_declare_module.crypto.CredentialDetails.prototype.cert;
 /** @type {(string|!Array<string>)} */
tsickle_declare_module.crypto.CredentialDetails.prototype.ca;
 /** @type {(string|!Array<string>)} */
tsickle_declare_module.crypto.CredentialDetails.prototype.crl;
 /** @type {string} */
tsickle_declare_module.crypto.CredentialDetails.prototype.ciphers;
/**
 * @record
 * @struct
 */
tsickle_declare_module.crypto.Credentials = function() {};
 /** @type {?} */
tsickle_declare_module.crypto.Credentials.prototype.context;

/**
 * @param {!CredentialDetails} details
 * @return {!Credentials}
 */
tsickle_declare_module.crypto.createCredentials = function(details) {};

/**
 * @param {string} algorithm
 * @return {!Hash}
 */
tsickle_declare_module.crypto.createHash = function(algorithm) {};

/**
 * @param {string} algorithm
 * @param {(string|?)} key
 * @return {!Hmac}
 */
tsickle_declare_module.crypto.createHmac = function(algorithm, key) {};

/** @typedef {string} */
tsickle_declare_module.crypto.Utf8AsciiLatin1Encoding;

/** @typedef {string} */
tsickle_declare_module.crypto.HexBase64Latin1Encoding;

/** @typedef {string} */
tsickle_declare_module.crypto.Utf8AsciiBinaryEncoding;

/** @typedef {string} */
tsickle_declare_module.crypto.HexBase64BinaryEncoding;

/** @typedef {string} */
tsickle_declare_module.crypto.ECDHKeyFormat;
/**
 * @extends {NodeJS.ReadWriteStream}
 * @record
 * @struct
 */
tsickle_declare_module.crypto.Hash = function() {};

/**
 * @param {(string|?)} data
 * @param {string=} input_encoding
 * @return {!Hash}
 */
tsickle_declare_module.crypto.Hash.prototype.update = function(data, input_encoding) {};

/**
 * @param {string=} encoding
 * @return {?|string}
 */
tsickle_declare_module.crypto.Hash.prototype.digest = function(encoding) {};
/**
 * @extends {NodeJS.ReadWriteStream}
 * @record
 * @struct
 */
tsickle_declare_module.crypto.Hmac = function() {};

/**
 * @param {(string|?)} data
 * @param {string=} input_encoding
 * @return {!Hmac}
 */
tsickle_declare_module.crypto.Hmac.prototype.update = function(data, input_encoding) {};

/**
 * @param {string=} encoding
 * @return {?|string}
 */
tsickle_declare_module.crypto.Hmac.prototype.digest = function(encoding) {};

/**
 * @param {string} algorithm
 * @param {?} password
 * @return {!Cipher}
 */
tsickle_declare_module.crypto.createCipher = function(algorithm, password) {};

/**
 * @param {string} algorithm
 * @param {?} key
 * @param {?} iv
 * @return {!Cipher}
 */
tsickle_declare_module.crypto.createCipheriv = function(algorithm, key, iv) {};
/**
 * @extends {NodeJS.ReadWriteStream}
 * @record
 * @struct
 */
tsickle_declare_module.crypto.Cipher = function() {};

/**
 * @param {?|string} data
 * @param {string|?=} input_encoding
 * @param {string=} output_encoding
 * @return {?|string}
 */
tsickle_declare_module.crypto.Cipher.prototype.update = function(data, input_encoding, output_encoding) {};

/**
 * @param {string=} output_encoding
 * @return {?|string}
 */
tsickle_declare_module.crypto.Cipher.prototype.final = function(output_encoding) {};

/**
 * @param {boolean=} auto_padding
 * @return {void}
 */
tsickle_declare_module.crypto.Cipher.prototype.setAutoPadding = function(auto_padding) {};

/**
 * @return {?}
 */
tsickle_declare_module.crypto.Cipher.prototype.getAuthTag = function() {};

/**
 * @param {?} buffer
 * @return {void}
 */
tsickle_declare_module.crypto.Cipher.prototype.setAAD = function(buffer) {};

/**
 * @param {string} algorithm
 * @param {?} password
 * @return {!Decipher}
 */
tsickle_declare_module.crypto.createDecipher = function(algorithm, password) {};

/**
 * @param {string} algorithm
 * @param {?} key
 * @param {?} iv
 * @return {!Decipher}
 */
tsickle_declare_module.crypto.createDecipheriv = function(algorithm, key, iv) {};
/**
 * @extends {NodeJS.ReadWriteStream}
 * @record
 * @struct
 */
tsickle_declare_module.crypto.Decipher = function() {};

/**
 * @param {?|string} data
 * @param {string|?=} input_encoding
 * @param {string=} output_encoding
 * @return {?|string}
 */
tsickle_declare_module.crypto.Decipher.prototype.update = function(data, input_encoding, output_encoding) {};

/**
 * @param {string=} output_encoding
 * @return {?|string}
 */
tsickle_declare_module.crypto.Decipher.prototype.final = function(output_encoding) {};

/**
 * @param {boolean=} auto_padding
 * @return {void}
 */
tsickle_declare_module.crypto.Decipher.prototype.setAutoPadding = function(auto_padding) {};

/**
 * @param {?} tag
 * @return {void}
 */
tsickle_declare_module.crypto.Decipher.prototype.setAuthTag = function(tag) {};

/**
 * @param {?} buffer
 * @return {void}
 */
tsickle_declare_module.crypto.Decipher.prototype.setAAD = function(buffer) {};

/**
 * @param {string} algorithm
 * @return {!Signer}
 */
tsickle_declare_module.crypto.createSign = function(algorithm) {};
/**
 * @extends {NodeJS.WritableStream}
 * @record
 * @struct
 */
tsickle_declare_module.crypto.Signer = function() {};

/**
 * @param {(string|?)} data
 * @param {string=} input_encoding
 * @return {!Signer}
 */
tsickle_declare_module.crypto.Signer.prototype.update = function(data, input_encoding) {};

/**
 * @param {(string|{key: string, passphrase: string})} private_key
 * @param {string=} output_format
 * @return {?|string}
 */
tsickle_declare_module.crypto.Signer.prototype.sign = function(private_key, output_format) {};

/**
 * @param {string} algorith
 * @return {!Verify}
 */
tsickle_declare_module.crypto.createVerify = function(algorith) {};
/**
 * @extends {NodeJS.WritableStream}
 * @record
 * @struct
 */
tsickle_declare_module.crypto.Verify = function() {};

/**
 * @param {(string|?)} data
 * @param {string=} input_encoding
 * @return {!Verify}
 */
tsickle_declare_module.crypto.Verify.prototype.update = function(data, input_encoding) {};

/**
 * @param {string} object
 * @param {?|string} signature
 * @param {string=} signature_format
 * @return {boolean}
 */
tsickle_declare_module.crypto.Verify.prototype.verify = function(object, signature, signature_format) {};

/**
 * @param {number|?|string} prime_length_or_prime
 * @param {number|string=} generator_or_prime_encoding
 * @param {(number|?)|string=} generator
 * @param {string=} generator_encoding
 * @return {!DiffieHellman}
 */
tsickle_declare_module.crypto.createDiffieHellman = function(prime_length_or_prime, generator_or_prime_encoding, generator, generator_encoding) {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.crypto.DiffieHellman = function() {};
 /** @type {number} */
tsickle_declare_module.crypto.DiffieHellman.prototype.verifyError;

/**
 * @param {string=} encoding
 * @return {?|string}
 */
tsickle_declare_module.crypto.DiffieHellman.prototype.generateKeys = function(encoding) {};

/**
 * @param {?|string} other_public_key
 * @param {string=} input_encoding
 * @param {string=} output_encoding
 * @return {?|string}
 */
tsickle_declare_module.crypto.DiffieHellman.prototype.computeSecret = function(other_public_key, input_encoding, output_encoding) {};

/**
 * @param {string=} encoding
 * @return {?|string}
 */
tsickle_declare_module.crypto.DiffieHellman.prototype.getPrime = function(encoding) {};

/**
 * @param {string=} encoding
 * @return {?|string}
 */
tsickle_declare_module.crypto.DiffieHellman.prototype.getGenerator = function(encoding) {};

/**
 * @param {string=} encoding
 * @return {?|string}
 */
tsickle_declare_module.crypto.DiffieHellman.prototype.getPublicKey = function(encoding) {};

/**
 * @param {string=} encoding
 * @return {?|string}
 */
tsickle_declare_module.crypto.DiffieHellman.prototype.getPrivateKey = function(encoding) {};

/**
 * @param {?|string} public_key
 * @param {string=} encoding
 * @return {void}
 */
tsickle_declare_module.crypto.DiffieHellman.prototype.setPublicKey = function(public_key, encoding) {};

/**
 * @param {?|string} private_key
 * @param {string=} encoding
 * @return {void}
 */
tsickle_declare_module.crypto.DiffieHellman.prototype.setPrivateKey = function(private_key, encoding) {};

/**
 * @param {string} group_name
 * @return {!DiffieHellman}
 */
tsickle_declare_module.crypto.getDiffieHellman = function(group_name) {};

/**
 * @param {(string|?)} password
 * @param {(string|?)} salt
 * @param {number} iterations
 * @param {number} keylen
 * @param {string} digest
 * @param {function(!Error, ?): ?} callback
 * @return {void}
 */
tsickle_declare_module.crypto.pbkdf2 = function(password, salt, iterations, keylen, digest, callback) {};

/**
 * @param {(string|?)} password
 * @param {(string|?)} salt
 * @param {number} iterations
 * @param {number} keylen
 * @param {string} digest
 * @return {?}
 */
tsickle_declare_module.crypto.pbkdf2Sync = function(password, salt, iterations, keylen, digest) {};

/**
 * @param {number} size
 * @param {function(!Error, ?): void=} callback
 * @return {?|void}
 */
tsickle_declare_module.crypto.randomBytes = function(size, callback) {};

/**
 * @param {number} size
 * @param {function(!Error, ?): void=} callback
 * @return {?|void}
 */
tsickle_declare_module.crypto.pseudoRandomBytes = function(size, callback) {};

/**
 * @param {(?|!Uint8Array)} buffer
 * @param {number=} offset
 * @param {number=} size
 * @return {?}
 */
tsickle_declare_module.crypto.randomFillSync = function(buffer, offset, size) {};

/**
 * @param {?|!Uint8Array} buffer
 * @param {function(!Error, ?): void|function(!Error, !Uint8Array): void|number} callback_or_offset
 * @param {function(!Error, ?): void|function(!Error, !Uint8Array): void|number=} callback_or_size
 * @param {function(!Error, ?): void|function(!Error, !Uint8Array): void=} callback
 * @return {void}
 */
tsickle_declare_module.crypto.randomFill = function(buffer, callback_or_offset, callback_or_size, callback) {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.crypto.RsaPublicKey = function() {};
 /** @type {string} */
tsickle_declare_module.crypto.RsaPublicKey.prototype.key;
 /** @type {number} */
tsickle_declare_module.crypto.RsaPublicKey.prototype.padding;
/**
 * @record
 * @struct
 */
tsickle_declare_module.crypto.RsaPrivateKey = function() {};
 /** @type {string} */
tsickle_declare_module.crypto.RsaPrivateKey.prototype.key;
 /** @type {string} */
tsickle_declare_module.crypto.RsaPrivateKey.prototype.passphrase;
 /** @type {number} */
tsickle_declare_module.crypto.RsaPrivateKey.prototype.padding;

/**
 * @param {(string|!RsaPublicKey)} public_key
 * @param {?} buffer
 * @return {?}
 */
tsickle_declare_module.crypto.publicEncrypt = function(public_key, buffer) {};

/**
 * @param {(string|!RsaPrivateKey)} private_key
 * @param {?} buffer
 * @return {?}
 */
tsickle_declare_module.crypto.privateDecrypt = function(private_key, buffer) {};

/**
 * @param {(string|!RsaPrivateKey)} private_key
 * @param {?} buffer
 * @return {?}
 */
tsickle_declare_module.crypto.privateEncrypt = function(private_key, buffer) {};

/**
 * @param {(string|!RsaPublicKey)} public_key
 * @param {?} buffer
 * @return {?}
 */
tsickle_declare_module.crypto.publicDecrypt = function(public_key, buffer) {};

/**
 * @return {!Array<string>}
 */
tsickle_declare_module.crypto.getCiphers = function() {};

/**
 * @return {!Array<string>}
 */
tsickle_declare_module.crypto.getCurves = function() {};

/**
 * @return {!Array<string>}
 */
tsickle_declare_module.crypto.getHashes = function() {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.crypto.ECDH = function() {};

/**
 * @param {string=} encoding
 * @param {string=} format
 * @return {?|string}
 */
tsickle_declare_module.crypto.ECDH.prototype.generateKeys = function(encoding, format) {};

/**
 * @param {?|string} other_public_key
 * @param {string=} input_encoding
 * @param {string=} output_encoding
 * @return {?|string}
 */
tsickle_declare_module.crypto.ECDH.prototype.computeSecret = function(other_public_key, input_encoding, output_encoding) {};

/**
 * @param {string=} encoding
 * @return {?|string}
 */
tsickle_declare_module.crypto.ECDH.prototype.getPrivateKey = function(encoding) {};

/**
 * @param {string=} encoding
 * @param {string=} format
 * @return {?|string}
 */
tsickle_declare_module.crypto.ECDH.prototype.getPublicKey = function(encoding, format) {};

/**
 * @param {?|string} private_key
 * @param {string=} encoding
 * @return {void}
 */
tsickle_declare_module.crypto.ECDH.prototype.setPrivateKey = function(private_key, encoding) {};

/**
 * @param {string} curve_name
 * @return {!ECDH}
 */
tsickle_declare_module.crypto.createECDH = function(curve_name) {};

/**
 * @param {?} a
 * @param {?} b
 * @return {boolean}
 */
tsickle_declare_module.crypto.timingSafeEqual = function(a, b) {};
 /** @type {string} */
tsickle_declare_module.crypto.DEFAULT_ENCODING;
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "stream"
/** @const */
tsickle_declare_module.stream = {};

/* TODO: ImportDeclaration in tsickle_declare_module.stream */
/**
 * @extends {internal.EventEmitter}
 * @constructor
 * @struct
 */
tsickle_declare_module.stream.internal = function() {};

/**
 * @template T
 * @param {T} destination
 * @param {{end: boolean}=} options
 * @return {T}
 */
tsickle_declare_module.stream.internal.prototype.pipe = function(destination, options) {};
/**
 * @extends {internal}
 * @constructor
 * @struct
 */
tsickle_declare_module.stream.internal.Stream = function() {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.stream.internal.ReadableOptions = function() {};
 /** @type {number} */
tsickle_declare_module.stream.internal.ReadableOptions.prototype.highWaterMark;
 /** @type {string} */
tsickle_declare_module.stream.internal.ReadableOptions.prototype.encoding;
 /** @type {boolean} */
tsickle_declare_module.stream.internal.ReadableOptions.prototype.objectMode;
 /** @type {function(number): ?} */
tsickle_declare_module.stream.internal.ReadableOptions.prototype.read;

/**
 * @constructor
 * @struct
 * @param {!internal.ReadableOptions=} opts
 */
tsickle_declare_module.stream.internal.Readable = function(opts) {};
 /** @type {boolean} */
tsickle_declare_module.stream.internal.Readable.prototype.readable;

/**
 * @param {number} size
 * @return {void}
 */
tsickle_declare_module.stream.internal.Readable.prototype._read = function(size) {};

/**
 * @param {number=} size
 * @return {?}
 */
tsickle_declare_module.stream.internal.Readable.prototype.read = function(size) {};

/**
 * @param {string} encoding
 * @return {Readable}
 */
tsickle_declare_module.stream.internal.Readable.prototype.setEncoding = function(encoding) {};

/**
 * @return {Readable}
 */
tsickle_declare_module.stream.internal.Readable.prototype.pause = function() {};

/**
 * @return {Readable}
 */
tsickle_declare_module.stream.internal.Readable.prototype.resume = function() {};

/**
 * @return {boolean}
 */
tsickle_declare_module.stream.internal.Readable.prototype.isPaused = function() {};

/**
 * @template T
 * @param {T} destination
 * @param {{end: boolean}=} options
 * @return {T}
 */
tsickle_declare_module.stream.internal.Readable.prototype.pipe = function(destination, options) {};

/**
 * @template T
 * @param {T=} destination
 * @return {Readable}
 */
tsickle_declare_module.stream.internal.Readable.prototype.unpipe = function(destination) {};

/**
 * @param {?} chunk
 * @return {void}
 */
tsickle_declare_module.stream.internal.Readable.prototype.unshift = function(chunk) {};

/**
 * @param {!NodeJS.ReadableStream} oldStream
 * @return {!internal.Readable}
 */
tsickle_declare_module.stream.internal.Readable.prototype.wrap = function(oldStream) {};

/**
 * @param {?} chunk
 * @param {string=} encoding
 * @return {boolean}
 */
tsickle_declare_module.stream.internal.Readable.prototype.push = function(chunk, encoding) {};

/**
 * Event emitter
 * The defined events on documents including:
 *   1. close
 *   2. data
 *   3. end
 *   4. readable
 *   5. error
 * 
 * @param {string} event
 * @param {!Function|function(): void|function((string|?)): void|function(!Error): void} listener
 * @return {Readable}
 */
tsickle_declare_module.stream.internal.Readable.prototype.addListener = function(event, listener) {};

/**
 * @param {(string|symbol)|string} event
 * @param {...?|(string|?)|!Error} args_or_chunk_or_err
 * @return {boolean}
 */
tsickle_declare_module.stream.internal.Readable.prototype.emit = function(event, args_or_chunk_or_err) {};

/**
 * @param {string} event
 * @param {!Function|function(): void|function((string|?)): void|function(!Error): void} listener
 * @return {Readable}
 */
tsickle_declare_module.stream.internal.Readable.prototype.on = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(): void|function((string|?)): void|function(!Error): void} listener
 * @return {Readable}
 */
tsickle_declare_module.stream.internal.Readable.prototype.once = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(): void|function((string|?)): void|function(!Error): void} listener
 * @return {Readable}
 */
tsickle_declare_module.stream.internal.Readable.prototype.prependListener = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(): void|function((string|?)): void|function(!Error): void} listener
 * @return {Readable}
 */
tsickle_declare_module.stream.internal.Readable.prototype.prependOnceListener = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(): void|function((string|?)): void|function(!Error): void} listener
 * @return {Readable}
 */
tsickle_declare_module.stream.internal.Readable.prototype.removeListener = function(event, listener) {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.stream.internal.WritableOptions = function() {};
 /** @type {number} */
tsickle_declare_module.stream.internal.WritableOptions.prototype.highWaterMark;
 /** @type {boolean} */
tsickle_declare_module.stream.internal.WritableOptions.prototype.decodeStrings;
 /** @type {boolean} */
tsickle_declare_module.stream.internal.WritableOptions.prototype.objectMode;
 /** @type {function((string|?), string, !Function): ?} */
tsickle_declare_module.stream.internal.WritableOptions.prototype.write;
 /** @type {function(!Array<{chunk: (string|?), encoding: string}>, !Function): ?} */
tsickle_declare_module.stream.internal.WritableOptions.prototype.writev;

/**
 * @constructor
 * @struct
 * @param {!internal.WritableOptions=} opts
 */
tsickle_declare_module.stream.internal.Writable = function(opts) {};
 /** @type {boolean} */
tsickle_declare_module.stream.internal.Writable.prototype.writable;

/**
 * @param {?} chunk
 * @param {string} encoding
 * @param {!Function} callback
 * @return {void}
 */
tsickle_declare_module.stream.internal.Writable.prototype._write = function(chunk, encoding, callback) {};

/**
 * @param {?} chunk
 * @param {!Function|string=} cb_or_encoding
 * @param {!Function=} cb
 * @return {boolean}
 */
tsickle_declare_module.stream.internal.Writable.prototype.write = function(chunk, cb_or_encoding, cb) {};

/**
 * @param {string} encoding
 * @return {Writable}
 */
tsickle_declare_module.stream.internal.Writable.prototype.setDefaultEncoding = function(encoding) {};

/**
 * @param {?=} chunk
 * @param {!Function|string=} cb_or_encoding
 * @param {!Function=} cb
 * @return {void}
 */
tsickle_declare_module.stream.internal.Writable.prototype.end = function(chunk, cb_or_encoding, cb) {};

/**
 * Event emitter
 * The defined events on documents including:
 *   1. close
 *   2. drain
 *   3. error
 *   4. finish
 *   5. pipe
 *   6. unpipe
 * 
 * @param {string} event
 * @param {!Function|function(): void|function(!Error): void|function(!internal.Readable): void} listener
 * @return {Writable}
 */
tsickle_declare_module.stream.internal.Writable.prototype.addListener = function(event, listener) {};

/**
 * @param {(string|symbol)|string} event
 * @param {...?|(string|?)|!Error|!internal.Readable} args_or_chunk_or_err_or_src
 * @return {boolean}
 */
tsickle_declare_module.stream.internal.Writable.prototype.emit = function(event, args_or_chunk_or_err_or_src) {};

/**
 * @param {string} event
 * @param {!Function|function(): void|function(!Error): void|function(!internal.Readable): void} listener
 * @return {Writable}
 */
tsickle_declare_module.stream.internal.Writable.prototype.on = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(): void|function(!Error): void|function(!internal.Readable): void} listener
 * @return {Writable}
 */
tsickle_declare_module.stream.internal.Writable.prototype.once = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(): void|function(!Error): void|function(!internal.Readable): void} listener
 * @return {Writable}
 */
tsickle_declare_module.stream.internal.Writable.prototype.prependListener = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(): void|function(!Error): void|function(!internal.Readable): void} listener
 * @return {Writable}
 */
tsickle_declare_module.stream.internal.Writable.prototype.prependOnceListener = function(event, listener) {};

/**
 * @param {string} event
 * @param {!Function|function(): void|function(!Error): void|function(!internal.Readable): void} listener
 * @return {Writable}
 */
tsickle_declare_module.stream.internal.Writable.prototype.removeListener = function(event, listener) {};
/**
 * @extends {internal.ReadableOptions}
 * @extends {internal.WritableOptions}
 * @record
 * @struct
 */
tsickle_declare_module.stream.internal.DuplexOptions = function() {};
 /** @type {boolean} */
tsickle_declare_module.stream.internal.DuplexOptions.prototype.allowHalfOpen;
 /** @type {boolean} */
tsickle_declare_module.stream.internal.DuplexOptions.prototype.readableObjectMode;
 /** @type {boolean} */
tsickle_declare_module.stream.internal.DuplexOptions.prototype.writableObjectMode;

/**
 * @constructor
 * @struct
 * @param {!internal.DuplexOptions=} opts
 */
tsickle_declare_module.stream.internal.Duplex = function(opts) {};
 /** @type {boolean} */
tsickle_declare_module.stream.internal.Duplex.prototype.writable;

/**
 * @param {?} chunk
 * @param {string} encoding
 * @param {!Function} callback
 * @return {void}
 */
tsickle_declare_module.stream.internal.Duplex.prototype._write = function(chunk, encoding, callback) {};

/**
 * @param {?} chunk
 * @param {!Function|string=} cb_or_encoding
 * @param {!Function=} cb
 * @return {boolean}
 */
tsickle_declare_module.stream.internal.Duplex.prototype.write = function(chunk, cb_or_encoding, cb) {};

/**
 * @param {string} encoding
 * @return {Duplex}
 */
tsickle_declare_module.stream.internal.Duplex.prototype.setDefaultEncoding = function(encoding) {};

/**
 * @param {?=} chunk
 * @param {!Function|string=} cb_or_encoding
 * @param {!Function=} cb
 * @return {void}
 */
tsickle_declare_module.stream.internal.Duplex.prototype.end = function(chunk, cb_or_encoding, cb) {};
/**
 * @extends {internal.DuplexOptions}
 * @record
 * @struct
 */
tsickle_declare_module.stream.internal.TransformOptions = function() {};
 /** @type {function((string|?), string, !Function): ?} */
tsickle_declare_module.stream.internal.TransformOptions.prototype.transform;
 /** @type {function(!Function): ?} */
tsickle_declare_module.stream.internal.TransformOptions.prototype.flush;

/**
 * @constructor
 * @struct
 * @param {!internal.TransformOptions=} opts
 */
tsickle_declare_module.stream.internal.Transform = function(opts) {};

/**
 * @param {?} chunk
 * @param {string} encoding
 * @param {!Function} callback
 * @return {void}
 */
tsickle_declare_module.stream.internal.Transform.prototype._transform = function(chunk, encoding, callback) {};
/**
 * @extends {internal.Transform}
 * @constructor
 * @struct
 */
tsickle_declare_module.stream.internal.PassThrough = function() {};

/* TODO: ExportAssignment in tsickle_declare_module.stream */
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "util"
/** @const */
tsickle_declare_module.util = {};
/**
 * @extends {NodeJS.InspectOptions}
 * @record
 * @struct
 */
tsickle_declare_module.util.InspectOptions = function() {};

/**
 * @param {?} format
 * @param {...?} param
 * @return {string}
 */
tsickle_declare_module.util.format = function(format, param) {};

/**
 * @param {string} string
 * @return {void}
 */
tsickle_declare_module.util.debug = function(string) {};

/**
 * @param {...?} param
 * @return {void}
 */
tsickle_declare_module.util.error = function(param) {};

/**
 * @param {...?} param
 * @return {void}
 */
tsickle_declare_module.util.puts = function(param) {};

/**
 * @param {...?} param
 * @return {void}
 */
tsickle_declare_module.util.print = function(param) {};

/**
 * @param {string} string
 * @return {void}
 */
tsickle_declare_module.util.log = function(string) {};

/**
 * @param {?} object
 * @param {boolean|!InspectOptions=} showHidden_or_options
 * @param {number=} depth
 * @param {boolean=} color
 * @return {string}
 */
tsickle_declare_module.util.inspect = function(object, showHidden_or_options, depth, color) {};

/**
 * @param {?} object
 * @return {boolean}
 */
tsickle_declare_module.util.isArray = function(object) {};

/**
 * @param {?} object
 * @return {boolean}
 */
tsickle_declare_module.util.isRegExp = function(object) {};

/**
 * @param {?} object
 * @return {boolean}
 */
tsickle_declare_module.util.isDate = function(object) {};

/**
 * @param {?} object
 * @return {boolean}
 */
tsickle_declare_module.util.isError = function(object) {};

/**
 * @param {?} constructor
 * @param {?} superConstructor
 * @return {void}
 */
tsickle_declare_module.util.inherits = function(constructor, superConstructor) {};

/**
 * @param {string} key
 * @return {function(string, !Array<?>): void}
 */
tsickle_declare_module.util.debuglog = function(key) {};

/**
 * @param {?} object
 * @return {boolean}
 */
tsickle_declare_module.util.isBoolean = function(object) {};

/**
 * @param {?} object
 * @return {boolean}
 */
tsickle_declare_module.util.isBuffer = function(object) {};

/**
 * @param {?} object
 * @return {boolean}
 */
tsickle_declare_module.util.isFunction = function(object) {};

/**
 * @param {?} object
 * @return {boolean}
 */
tsickle_declare_module.util.isNull = function(object) {};

/**
 * @param {?} object
 * @return {boolean}
 */
tsickle_declare_module.util.isNullOrUndefined = function(object) {};

/**
 * @param {?} object
 * @return {boolean}
 */
tsickle_declare_module.util.isNumber = function(object) {};

/**
 * @param {?} object
 * @return {boolean}
 */
tsickle_declare_module.util.isObject = function(object) {};

/**
 * @param {?} object
 * @return {boolean}
 */
tsickle_declare_module.util.isPrimitive = function(object) {};

/**
 * @param {?} object
 * @return {boolean}
 */
tsickle_declare_module.util.isString = function(object) {};

/**
 * @param {?} object
 * @return {boolean}
 */
tsickle_declare_module.util.isSymbol = function(object) {};

/**
 * @param {?} object
 * @return {boolean}
 */
tsickle_declare_module.util.isUndefined = function(object) {};

/**
 * @template T
 * @param {T} fn
 * @param {string} message
 * @return {T}
 */
tsickle_declare_module.util.deprecate = function(fn, message) {};
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "assert"
/** @const */
tsickle_declare_module.assert = {};

/**
 * @param {?} value
 * @param {string=} message
 * @return {void}
 */
tsickle_declare_module.assert.internal = function(value, message) {};

/**
 * @constructor
 * @struct
 * @param {{message: string, actual: ?, expected: ?, operator: string, stackStartFunction: !Function}=} options
 */
tsickle_declare_module.assert.internal.AssertionError = function(options) {};
 /** @type {string} */
tsickle_declare_module.assert.internal.AssertionError.prototype.name;
 /** @type {string} */
tsickle_declare_module.assert.internal.AssertionError.prototype.message;
 /** @type {?} */
tsickle_declare_module.assert.internal.AssertionError.prototype.actual;
 /** @type {?} */
tsickle_declare_module.assert.internal.AssertionError.prototype.expected;
 /** @type {string} */
tsickle_declare_module.assert.internal.AssertionError.prototype.operator;
 /** @type {boolean} */
tsickle_declare_module.assert.internal.AssertionError.prototype.generatedMessage;

/**
 * @param {?} actual
 * @param {?} expected
 * @param {string=} message
 * @param {string=} operator
 * @return {void}
 */
tsickle_declare_module.assert.internal.fail = function(actual, expected, message, operator) {};

/**
 * @param {?} value
 * @param {string=} message
 * @return {void}
 */
tsickle_declare_module.assert.internal.ok = function(value, message) {};

/**
 * @param {?} actual
 * @param {?} expected
 * @param {string=} message
 * @return {void}
 */
tsickle_declare_module.assert.internal.equal = function(actual, expected, message) {};

/**
 * @param {?} actual
 * @param {?} expected
 * @param {string=} message
 * @return {void}
 */
tsickle_declare_module.assert.internal.notEqual = function(actual, expected, message) {};

/**
 * @param {?} actual
 * @param {?} expected
 * @param {string=} message
 * @return {void}
 */
tsickle_declare_module.assert.internal.deepEqual = function(actual, expected, message) {};

/**
 * @param {?} acutal
 * @param {?} expected
 * @param {string=} message
 * @return {void}
 */
tsickle_declare_module.assert.internal.notDeepEqual = function(acutal, expected, message) {};

/**
 * @param {?} actual
 * @param {?} expected
 * @param {string=} message
 * @return {void}
 */
tsickle_declare_module.assert.internal.strictEqual = function(actual, expected, message) {};

/**
 * @param {?} actual
 * @param {?} expected
 * @param {string=} message
 * @return {void}
 */
tsickle_declare_module.assert.internal.notStrictEqual = function(actual, expected, message) {};

/**
 * @param {?} actual
 * @param {?} expected
 * @param {string=} message
 * @return {void}
 */
tsickle_declare_module.assert.internal.deepStrictEqual = function(actual, expected, message) {};

/**
 * @param {?} actual
 * @param {?} expected
 * @param {string=} message
 * @return {void}
 */
tsickle_declare_module.assert.internal.notDeepStrictEqual = function(actual, expected, message) {};

/**
 * @param {!Function} block
 * @param {string|!Function|!RegExp|function(?): boolean=} message_or_error
 * @param {string=} message
 * @return {void}
 */
tsickle_declare_module.assert.internal.throws = function(block, message_or_error, message) {};

/**
 * @param {!Function} block
 * @param {string|!Function|!RegExp|function(?): boolean=} message_or_error
 * @param {string=} message
 * @return {void}
 */
tsickle_declare_module.assert.internal.doesNotThrow = function(block, message_or_error, message) {};

/**
 * @param {?} value
 * @return {void}
 */
tsickle_declare_module.assert.internal.ifError = function(value) {};

/* TODO: ExportAssignment in tsickle_declare_module.assert */
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "tty"
/** @const */
tsickle_declare_module.tty = {};

/* TODO: ImportDeclaration in tsickle_declare_module.tty */

/**
 * @param {number} fd
 * @return {boolean}
 */
tsickle_declare_module.tty.isatty = function(fd) {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.tty.ReadStream = function() {};
 /** @type {boolean} */
tsickle_declare_module.tty.ReadStream.prototype.isRaw;
 /** @type {boolean} */
tsickle_declare_module.tty.ReadStream.prototype.isTTY;

/**
 * @param {boolean} mode
 * @return {void}
 */
tsickle_declare_module.tty.ReadStream.prototype.setRawMode = function(mode) {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.tty.WriteStream = function() {};
 /** @type {number} */
tsickle_declare_module.tty.WriteStream.prototype.columns;
 /** @type {number} */
tsickle_declare_module.tty.WriteStream.prototype.rows;
 /** @type {boolean} */
tsickle_declare_module.tty.WriteStream.prototype.isTTY;
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "domain"
/** @const */
tsickle_declare_module.domain = {};

/* TODO: ImportDeclaration in tsickle_declare_module.domain */
/**
 * @extends {internal.EventEmitter}
 * @implements {NodeJS.Domain}
 * @constructor
 * @struct
 */
tsickle_declare_module.domain.Domain = function() {};
 /** @type {!Array<?>} */
tsickle_declare_module.domain.Domain.prototype.members;

/**
 * @param {!Function} fn
 * @return {void}
 */
tsickle_declare_module.domain.Domain.prototype.run = function(fn) {};

/**
 * @param {!internal.EventEmitter} emitter
 * @return {void}
 */
tsickle_declare_module.domain.Domain.prototype.add = function(emitter) {};

/**
 * @param {!internal.EventEmitter} emitter
 * @return {void}
 */
tsickle_declare_module.domain.Domain.prototype.remove = function(emitter) {};

/**
 * @param {function(!Error, ?): ?} cb
 * @return {?}
 */
tsickle_declare_module.domain.Domain.prototype.bind = function(cb) {};

/**
 * @param {function(?): ?} cb
 * @return {?}
 */
tsickle_declare_module.domain.Domain.prototype.intercept = function(cb) {};

/**
 * @return {void}
 */
tsickle_declare_module.domain.Domain.prototype.dispose = function() {};

/**
 * @return {void}
 */
tsickle_declare_module.domain.Domain.prototype.enter = function() {};

/**
 * @return {void}
 */
tsickle_declare_module.domain.Domain.prototype.exit = function() {};

/**
 * @return {!Domain}
 */
tsickle_declare_module.domain.create = function() {};
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "constants"
/** @const */
tsickle_declare_module.constants = {};
 /** @type {number} */
tsickle_declare_module.constants.E2BIG;
 /** @type {number} */
tsickle_declare_module.constants.EACCES;
 /** @type {number} */
tsickle_declare_module.constants.EADDRINUSE;
 /** @type {number} */
tsickle_declare_module.constants.EADDRNOTAVAIL;
 /** @type {number} */
tsickle_declare_module.constants.EAFNOSUPPORT;
 /** @type {number} */
tsickle_declare_module.constants.EAGAIN;
 /** @type {number} */
tsickle_declare_module.constants.EALREADY;
 /** @type {number} */
tsickle_declare_module.constants.EBADF;
 /** @type {number} */
tsickle_declare_module.constants.EBADMSG;
 /** @type {number} */
tsickle_declare_module.constants.EBUSY;
 /** @type {number} */
tsickle_declare_module.constants.ECANCELED;
 /** @type {number} */
tsickle_declare_module.constants.ECHILD;
 /** @type {number} */
tsickle_declare_module.constants.ECONNABORTED;
 /** @type {number} */
tsickle_declare_module.constants.ECONNREFUSED;
 /** @type {number} */
tsickle_declare_module.constants.ECONNRESET;
 /** @type {number} */
tsickle_declare_module.constants.EDEADLK;
 /** @type {number} */
tsickle_declare_module.constants.EDESTADDRREQ;
 /** @type {number} */
tsickle_declare_module.constants.EDOM;
 /** @type {number} */
tsickle_declare_module.constants.EEXIST;
 /** @type {number} */
tsickle_declare_module.constants.EFAULT;
 /** @type {number} */
tsickle_declare_module.constants.EFBIG;
 /** @type {number} */
tsickle_declare_module.constants.EHOSTUNREACH;
 /** @type {number} */
tsickle_declare_module.constants.EIDRM;
 /** @type {number} */
tsickle_declare_module.constants.EILSEQ;
 /** @type {number} */
tsickle_declare_module.constants.EINPROGRESS;
 /** @type {number} */
tsickle_declare_module.constants.EINTR;
 /** @type {number} */
tsickle_declare_module.constants.EINVAL;
 /** @type {number} */
tsickle_declare_module.constants.EIO;
 /** @type {number} */
tsickle_declare_module.constants.EISCONN;
 /** @type {number} */
tsickle_declare_module.constants.EISDIR;
 /** @type {number} */
tsickle_declare_module.constants.ELOOP;
 /** @type {number} */
tsickle_declare_module.constants.EMFILE;
 /** @type {number} */
tsickle_declare_module.constants.EMLINK;
 /** @type {number} */
tsickle_declare_module.constants.EMSGSIZE;
 /** @type {number} */
tsickle_declare_module.constants.ENAMETOOLONG;
 /** @type {number} */
tsickle_declare_module.constants.ENETDOWN;
 /** @type {number} */
tsickle_declare_module.constants.ENETRESET;
 /** @type {number} */
tsickle_declare_module.constants.ENETUNREACH;
 /** @type {number} */
tsickle_declare_module.constants.ENFILE;
 /** @type {number} */
tsickle_declare_module.constants.ENOBUFS;
 /** @type {number} */
tsickle_declare_module.constants.ENODATA;
 /** @type {number} */
tsickle_declare_module.constants.ENODEV;
 /** @type {number} */
tsickle_declare_module.constants.ENOENT;
 /** @type {number} */
tsickle_declare_module.constants.ENOEXEC;
 /** @type {number} */
tsickle_declare_module.constants.ENOLCK;
 /** @type {number} */
tsickle_declare_module.constants.ENOLINK;
 /** @type {number} */
tsickle_declare_module.constants.ENOMEM;
 /** @type {number} */
tsickle_declare_module.constants.ENOMSG;
 /** @type {number} */
tsickle_declare_module.constants.ENOPROTOOPT;
 /** @type {number} */
tsickle_declare_module.constants.ENOSPC;
 /** @type {number} */
tsickle_declare_module.constants.ENOSR;
 /** @type {number} */
tsickle_declare_module.constants.ENOSTR;
 /** @type {number} */
tsickle_declare_module.constants.ENOSYS;
 /** @type {number} */
tsickle_declare_module.constants.ENOTCONN;
 /** @type {number} */
tsickle_declare_module.constants.ENOTDIR;
 /** @type {number} */
tsickle_declare_module.constants.ENOTEMPTY;
 /** @type {number} */
tsickle_declare_module.constants.ENOTSOCK;
 /** @type {number} */
tsickle_declare_module.constants.ENOTSUP;
 /** @type {number} */
tsickle_declare_module.constants.ENOTTY;
 /** @type {number} */
tsickle_declare_module.constants.ENXIO;
 /** @type {number} */
tsickle_declare_module.constants.EOPNOTSUPP;
 /** @type {number} */
tsickle_declare_module.constants.EOVERFLOW;
 /** @type {number} */
tsickle_declare_module.constants.EPERM;
 /** @type {number} */
tsickle_declare_module.constants.EPIPE;
 /** @type {number} */
tsickle_declare_module.constants.EPROTO;
 /** @type {number} */
tsickle_declare_module.constants.EPROTONOSUPPORT;
 /** @type {number} */
tsickle_declare_module.constants.EPROTOTYPE;
 /** @type {number} */
tsickle_declare_module.constants.ERANGE;
 /** @type {number} */
tsickle_declare_module.constants.EROFS;
 /** @type {number} */
tsickle_declare_module.constants.ESPIPE;
 /** @type {number} */
tsickle_declare_module.constants.ESRCH;
 /** @type {number} */
tsickle_declare_module.constants.ETIME;
 /** @type {number} */
tsickle_declare_module.constants.ETIMEDOUT;
 /** @type {number} */
tsickle_declare_module.constants.ETXTBSY;
 /** @type {number} */
tsickle_declare_module.constants.EWOULDBLOCK;
 /** @type {number} */
tsickle_declare_module.constants.EXDEV;
 /** @type {number} */
tsickle_declare_module.constants.WSAEINTR;
 /** @type {number} */
tsickle_declare_module.constants.WSAEBADF;
 /** @type {number} */
tsickle_declare_module.constants.WSAEACCES;
 /** @type {number} */
tsickle_declare_module.constants.WSAEFAULT;
 /** @type {number} */
tsickle_declare_module.constants.WSAEINVAL;
 /** @type {number} */
tsickle_declare_module.constants.WSAEMFILE;
 /** @type {number} */
tsickle_declare_module.constants.WSAEWOULDBLOCK;
 /** @type {number} */
tsickle_declare_module.constants.WSAEINPROGRESS;
 /** @type {number} */
tsickle_declare_module.constants.WSAEALREADY;
 /** @type {number} */
tsickle_declare_module.constants.WSAENOTSOCK;
 /** @type {number} */
tsickle_declare_module.constants.WSAEDESTADDRREQ;
 /** @type {number} */
tsickle_declare_module.constants.WSAEMSGSIZE;
 /** @type {number} */
tsickle_declare_module.constants.WSAEPROTOTYPE;
 /** @type {number} */
tsickle_declare_module.constants.WSAENOPROTOOPT;
 /** @type {number} */
tsickle_declare_module.constants.WSAEPROTONOSUPPORT;
 /** @type {number} */
tsickle_declare_module.constants.WSAESOCKTNOSUPPORT;
 /** @type {number} */
tsickle_declare_module.constants.WSAEOPNOTSUPP;
 /** @type {number} */
tsickle_declare_module.constants.WSAEPFNOSUPPORT;
 /** @type {number} */
tsickle_declare_module.constants.WSAEAFNOSUPPORT;
 /** @type {number} */
tsickle_declare_module.constants.WSAEADDRINUSE;
 /** @type {number} */
tsickle_declare_module.constants.WSAEADDRNOTAVAIL;
 /** @type {number} */
tsickle_declare_module.constants.WSAENETDOWN;
 /** @type {number} */
tsickle_declare_module.constants.WSAENETUNREACH;
 /** @type {number} */
tsickle_declare_module.constants.WSAENETRESET;
 /** @type {number} */
tsickle_declare_module.constants.WSAECONNABORTED;
 /** @type {number} */
tsickle_declare_module.constants.WSAECONNRESET;
 /** @type {number} */
tsickle_declare_module.constants.WSAENOBUFS;
 /** @type {number} */
tsickle_declare_module.constants.WSAEISCONN;
 /** @type {number} */
tsickle_declare_module.constants.WSAENOTCONN;
 /** @type {number} */
tsickle_declare_module.constants.WSAESHUTDOWN;
 /** @type {number} */
tsickle_declare_module.constants.WSAETOOMANYREFS;
 /** @type {number} */
tsickle_declare_module.constants.WSAETIMEDOUT;
 /** @type {number} */
tsickle_declare_module.constants.WSAECONNREFUSED;
 /** @type {number} */
tsickle_declare_module.constants.WSAELOOP;
 /** @type {number} */
tsickle_declare_module.constants.WSAENAMETOOLONG;
 /** @type {number} */
tsickle_declare_module.constants.WSAEHOSTDOWN;
 /** @type {number} */
tsickle_declare_module.constants.WSAEHOSTUNREACH;
 /** @type {number} */
tsickle_declare_module.constants.WSAENOTEMPTY;
 /** @type {number} */
tsickle_declare_module.constants.WSAEPROCLIM;
 /** @type {number} */
tsickle_declare_module.constants.WSAEUSERS;
 /** @type {number} */
tsickle_declare_module.constants.WSAEDQUOT;
 /** @type {number} */
tsickle_declare_module.constants.WSAESTALE;
 /** @type {number} */
tsickle_declare_module.constants.WSAEREMOTE;
 /** @type {number} */
tsickle_declare_module.constants.WSASYSNOTREADY;
 /** @type {number} */
tsickle_declare_module.constants.WSAVERNOTSUPPORTED;
 /** @type {number} */
tsickle_declare_module.constants.WSANOTINITIALISED;
 /** @type {number} */
tsickle_declare_module.constants.WSAEDISCON;
 /** @type {number} */
tsickle_declare_module.constants.WSAENOMORE;
 /** @type {number} */
tsickle_declare_module.constants.WSAECANCELLED;
 /** @type {number} */
tsickle_declare_module.constants.WSAEINVALIDPROCTABLE;
 /** @type {number} */
tsickle_declare_module.constants.WSAEINVALIDPROVIDER;
 /** @type {number} */
tsickle_declare_module.constants.WSAEPROVIDERFAILEDINIT;
 /** @type {number} */
tsickle_declare_module.constants.WSASYSCALLFAILURE;
 /** @type {number} */
tsickle_declare_module.constants.WSASERVICE_NOT_FOUND;
 /** @type {number} */
tsickle_declare_module.constants.WSATYPE_NOT_FOUND;
 /** @type {number} */
tsickle_declare_module.constants.WSA_E_NO_MORE;
 /** @type {number} */
tsickle_declare_module.constants.WSA_E_CANCELLED;
 /** @type {number} */
tsickle_declare_module.constants.WSAEREFUSED;
 /** @type {number} */
tsickle_declare_module.constants.SIGHUP;
 /** @type {number} */
tsickle_declare_module.constants.SIGINT;
 /** @type {number} */
tsickle_declare_module.constants.SIGILL;
 /** @type {number} */
tsickle_declare_module.constants.SIGABRT;
 /** @type {number} */
tsickle_declare_module.constants.SIGFPE;
 /** @type {number} */
tsickle_declare_module.constants.SIGKILL;
 /** @type {number} */
tsickle_declare_module.constants.SIGSEGV;
 /** @type {number} */
tsickle_declare_module.constants.SIGTERM;
 /** @type {number} */
tsickle_declare_module.constants.SIGBREAK;
 /** @type {number} */
tsickle_declare_module.constants.SIGWINCH;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_ALL;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_CIPHER_SERVER_PREFERENCE;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_CISCO_ANYCONNECT;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_COOKIE_EXCHANGE;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_CRYPTOPRO_TLSEXT_BUG;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_EPHEMERAL_RSA;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_LEGACY_SERVER_CONNECT;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_MICROSOFT_SESS_ID_BUG;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_MSIE_SSLV2_RSA_PADDING;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_NETSCAPE_CA_DN_BUG;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_NETSCAPE_CHALLENGE_BUG;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_NO_COMPRESSION;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_NO_QUERY_MTU;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_NO_SSLv2;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_NO_SSLv3;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_NO_TICKET;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_NO_TLSv1;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_NO_TLSv1_1;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_NO_TLSv1_2;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_PKCS1_CHECK_1;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_PKCS1_CHECK_2;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_SINGLE_DH_USE;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_SINGLE_ECDH_USE;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_SSLEAY_080_CLIENT_DH_BUG;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_TLS_BLOCK_PADDING_BUG;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_TLS_D5_BUG;
 /** @type {number} */
tsickle_declare_module.constants.SSL_OP_TLS_ROLLBACK_BUG;
 /** @type {number} */
tsickle_declare_module.constants.ENGINE_METHOD_DSA;
 /** @type {number} */
tsickle_declare_module.constants.ENGINE_METHOD_DH;
 /** @type {number} */
tsickle_declare_module.constants.ENGINE_METHOD_RAND;
 /** @type {number} */
tsickle_declare_module.constants.ENGINE_METHOD_ECDH;
 /** @type {number} */
tsickle_declare_module.constants.ENGINE_METHOD_ECDSA;
 /** @type {number} */
tsickle_declare_module.constants.ENGINE_METHOD_CIPHERS;
 /** @type {number} */
tsickle_declare_module.constants.ENGINE_METHOD_DIGESTS;
 /** @type {number} */
tsickle_declare_module.constants.ENGINE_METHOD_STORE;
 /** @type {number} */
tsickle_declare_module.constants.ENGINE_METHOD_PKEY_METHS;
 /** @type {number} */
tsickle_declare_module.constants.ENGINE_METHOD_PKEY_ASN1_METHS;
 /** @type {number} */
tsickle_declare_module.constants.ENGINE_METHOD_ALL;
 /** @type {number} */
tsickle_declare_module.constants.ENGINE_METHOD_NONE;
 /** @type {number} */
tsickle_declare_module.constants.DH_CHECK_P_NOT_SAFE_PRIME;
 /** @type {number} */
tsickle_declare_module.constants.DH_CHECK_P_NOT_PRIME;
 /** @type {number} */
tsickle_declare_module.constants.DH_UNABLE_TO_CHECK_GENERATOR;
 /** @type {number} */
tsickle_declare_module.constants.DH_NOT_SUITABLE_GENERATOR;
 /** @type {number} */
tsickle_declare_module.constants.NPN_ENABLED;
 /** @type {number} */
tsickle_declare_module.constants.RSA_PKCS1_PADDING;
 /** @type {number} */
tsickle_declare_module.constants.RSA_SSLV23_PADDING;
 /** @type {number} */
tsickle_declare_module.constants.RSA_NO_PADDING;
 /** @type {number} */
tsickle_declare_module.constants.RSA_PKCS1_OAEP_PADDING;
 /** @type {number} */
tsickle_declare_module.constants.RSA_X931_PADDING;
 /** @type {number} */
tsickle_declare_module.constants.RSA_PKCS1_PSS_PADDING;
 /** @type {number} */
tsickle_declare_module.constants.POINT_CONVERSION_COMPRESSED;
 /** @type {number} */
tsickle_declare_module.constants.POINT_CONVERSION_UNCOMPRESSED;
 /** @type {number} */
tsickle_declare_module.constants.POINT_CONVERSION_HYBRID;
 /** @type {number} */
tsickle_declare_module.constants.O_RDONLY;
 /** @type {number} */
tsickle_declare_module.constants.O_WRONLY;
 /** @type {number} */
tsickle_declare_module.constants.O_RDWR;
 /** @type {number} */
tsickle_declare_module.constants.S_IFMT;
 /** @type {number} */
tsickle_declare_module.constants.S_IFREG;
 /** @type {number} */
tsickle_declare_module.constants.S_IFDIR;
 /** @type {number} */
tsickle_declare_module.constants.S_IFCHR;
 /** @type {number} */
tsickle_declare_module.constants.S_IFBLK;
 /** @type {number} */
tsickle_declare_module.constants.S_IFIFO;
 /** @type {number} */
tsickle_declare_module.constants.S_IFSOCK;
 /** @type {number} */
tsickle_declare_module.constants.S_IRWXU;
 /** @type {number} */
tsickle_declare_module.constants.S_IRUSR;
 /** @type {number} */
tsickle_declare_module.constants.S_IWUSR;
 /** @type {number} */
tsickle_declare_module.constants.S_IXUSR;
 /** @type {number} */
tsickle_declare_module.constants.S_IRWXG;
 /** @type {number} */
tsickle_declare_module.constants.S_IRGRP;
 /** @type {number} */
tsickle_declare_module.constants.S_IWGRP;
 /** @type {number} */
tsickle_declare_module.constants.S_IXGRP;
 /** @type {number} */
tsickle_declare_module.constants.S_IRWXO;
 /** @type {number} */
tsickle_declare_module.constants.S_IROTH;
 /** @type {number} */
tsickle_declare_module.constants.S_IWOTH;
 /** @type {number} */
tsickle_declare_module.constants.S_IXOTH;
 /** @type {number} */
tsickle_declare_module.constants.S_IFLNK;
 /** @type {number} */
tsickle_declare_module.constants.O_CREAT;
 /** @type {number} */
tsickle_declare_module.constants.O_EXCL;
 /** @type {number} */
tsickle_declare_module.constants.O_NOCTTY;
 /** @type {number} */
tsickle_declare_module.constants.O_DIRECTORY;
 /** @type {number} */
tsickle_declare_module.constants.O_NOATIME;
 /** @type {number} */
tsickle_declare_module.constants.O_NOFOLLOW;
 /** @type {number} */
tsickle_declare_module.constants.O_SYNC;
 /** @type {number} */
tsickle_declare_module.constants.O_SYMLINK;
 /** @type {number} */
tsickle_declare_module.constants.O_DIRECT;
 /** @type {number} */
tsickle_declare_module.constants.O_NONBLOCK;
 /** @type {number} */
tsickle_declare_module.constants.O_TRUNC;
 /** @type {number} */
tsickle_declare_module.constants.O_APPEND;
 /** @type {number} */
tsickle_declare_module.constants.F_OK;
 /** @type {number} */
tsickle_declare_module.constants.R_OK;
 /** @type {number} */
tsickle_declare_module.constants.W_OK;
 /** @type {number} */
tsickle_declare_module.constants.X_OK;
 /** @type {number} */
tsickle_declare_module.constants.UV_UDP_REUSEADDR;
 /** @type {number} */
tsickle_declare_module.constants.SIGQUIT;
 /** @type {number} */
tsickle_declare_module.constants.SIGTRAP;
 /** @type {number} */
tsickle_declare_module.constants.SIGIOT;
 /** @type {number} */
tsickle_declare_module.constants.SIGBUS;
 /** @type {number} */
tsickle_declare_module.constants.SIGUSR1;
 /** @type {number} */
tsickle_declare_module.constants.SIGUSR2;
 /** @type {number} */
tsickle_declare_module.constants.SIGPIPE;
 /** @type {number} */
tsickle_declare_module.constants.SIGALRM;
 /** @type {number} */
tsickle_declare_module.constants.SIGCHLD;
 /** @type {number} */
tsickle_declare_module.constants.SIGSTKFLT;
 /** @type {number} */
tsickle_declare_module.constants.SIGCONT;
 /** @type {number} */
tsickle_declare_module.constants.SIGSTOP;
 /** @type {number} */
tsickle_declare_module.constants.SIGTSTP;
 /** @type {number} */
tsickle_declare_module.constants.SIGTTIN;
 /** @type {number} */
tsickle_declare_module.constants.SIGTTOU;
 /** @type {number} */
tsickle_declare_module.constants.SIGURG;
 /** @type {number} */
tsickle_declare_module.constants.SIGXCPU;
 /** @type {number} */
tsickle_declare_module.constants.SIGXFSZ;
 /** @type {number} */
tsickle_declare_module.constants.SIGVTALRM;
 /** @type {number} */
tsickle_declare_module.constants.SIGPROF;
 /** @type {number} */
tsickle_declare_module.constants.SIGIO;
 /** @type {number} */
tsickle_declare_module.constants.SIGPOLL;
 /** @type {number} */
tsickle_declare_module.constants.SIGPWR;
 /** @type {number} */
tsickle_declare_module.constants.SIGSYS;
 /** @type {number} */
tsickle_declare_module.constants.SIGUNUSED;
 /** @type {string} */
tsickle_declare_module.constants.defaultCoreCipherList;
 /** @type {string} */
tsickle_declare_module.constants.defaultCipherList;
 /** @type {number} */
tsickle_declare_module.constants.ENGINE_METHOD_RSA;
 /** @type {number} */
tsickle_declare_module.constants.ALPN_ENABLED;
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "process"
/** @const */
tsickle_declare_module.process = {};

/* TODO: ExportAssignment in tsickle_declare_module.process */
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "v8"
/** @const */
tsickle_declare_module.v_ = {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.v_.HeapSpaceInfo = function() {};
 /** @type {string} */
tsickle_declare_module.v_.HeapSpaceInfo.prototype.space_name;
 /** @type {number} */
tsickle_declare_module.v_.HeapSpaceInfo.prototype.space_size;
 /** @type {number} */
tsickle_declare_module.v_.HeapSpaceInfo.prototype.space_used_size;
 /** @type {number} */
tsickle_declare_module.v_.HeapSpaceInfo.prototype.space_available_size;
 /** @type {number} */
tsickle_declare_module.v_.HeapSpaceInfo.prototype.physical_space_size;

/** @typedef {number} */
tsickle_declare_module.v_.DoesZapCodeSpaceFlag;
/**
 * @record
 * @struct
 */
tsickle_declare_module.v_.HeapInfo = function() {};
 /** @type {number} */
tsickle_declare_module.v_.HeapInfo.prototype.total_heap_size;
 /** @type {number} */
tsickle_declare_module.v_.HeapInfo.prototype.total_heap_size_executable;
 /** @type {number} */
tsickle_declare_module.v_.HeapInfo.prototype.total_physical_size;
 /** @type {number} */
tsickle_declare_module.v_.HeapInfo.prototype.total_available_size;
 /** @type {number} */
tsickle_declare_module.v_.HeapInfo.prototype.used_heap_size;
 /** @type {number} */
tsickle_declare_module.v_.HeapInfo.prototype.heap_size_limit;
 /** @type {number} */
tsickle_declare_module.v_.HeapInfo.prototype.malloced_memory;
 /** @type {number} */
tsickle_declare_module.v_.HeapInfo.prototype.peak_malloced_memory;
 /** @type {number} */
tsickle_declare_module.v_.HeapInfo.prototype.does_zap_garbage;

/**
 * @return {!HeapInfo}
 */
tsickle_declare_module.v_.getHeapStatistics = function() {};

/**
 * @return {!Array<!HeapSpaceInfo>}
 */
tsickle_declare_module.v_.getHeapSpaceStatistics = function() {};

/**
 * @param {string} flags
 * @return {void}
 */
tsickle_declare_module.v_.setFlagsFromString = function(flags) {};
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "timers"
/** @const */
tsickle_declare_module.timers = {};

/**
 * @param {function(!Array<?>): void} callback
 * @param {number} ms
 * @param {...?} args
 * @return {!NodeJS.Timer}
 */
tsickle_declare_module.timers.setTimeout = function(callback, ms, args) {};

/**
 * @param {!NodeJS.Timer} timeoutId
 * @return {void}
 */
tsickle_declare_module.timers.clearTimeout = function(timeoutId) {};

/**
 * @param {function(!Array<?>): void} callback
 * @param {number} ms
 * @param {...?} args
 * @return {!NodeJS.Timer}
 */
tsickle_declare_module.timers.setInterval = function(callback, ms, args) {};

/**
 * @param {!NodeJS.Timer} intervalId
 * @return {void}
 */
tsickle_declare_module.timers.clearInterval = function(intervalId) {};

/**
 * @param {function(!Array<?>): void} callback
 * @param {...?} args
 * @return {?}
 */
tsickle_declare_module.timers.setImmediate = function(callback, args) {};

/**
 * @param {?} immediateId
 * @return {void}
 */
tsickle_declare_module.timers.clearImmediate = function(immediateId) {};
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "console"
/** @const */
tsickle_declare_module.console = {};

/* TODO: ExportAssignment in tsickle_declare_module.console */
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "_debugger"
/** @const */
tsickle_declare_module.__debugger = {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.__debugger.Packet = function() {};
 /** @type {string} */
tsickle_declare_module.__debugger.Packet.prototype.raw;
 /** @type {!Array<string>} */
tsickle_declare_module.__debugger.Packet.prototype.headers;
 /** @type {!Message} */
tsickle_declare_module.__debugger.Packet.prototype.body;
/**
 * @record
 * @struct
 */
tsickle_declare_module.__debugger.Message = function() {};
 /** @type {number} */
tsickle_declare_module.__debugger.Message.prototype.seq;
 /** @type {string} */
tsickle_declare_module.__debugger.Message.prototype.type;
/**
 * @record
 * @struct
 */
tsickle_declare_module.__debugger.RequestInfo = function() {};
 /** @type {string} */
tsickle_declare_module.__debugger.RequestInfo.prototype.command;
 /** @type {?} */
tsickle_declare_module.__debugger.RequestInfo.prototype.arguments;
/**
 * @extends {Message}
 * @extends {RequestInfo}
 * @record
 * @struct
 */
tsickle_declare_module.__debugger.Request = function() {};
/**
 * @extends {Message}
 * @record
 * @struct
 */
tsickle_declare_module.__debugger.Event = function() {};
 /** @type {string} */
tsickle_declare_module.__debugger.Event.prototype.event;
 /** @type {?} */
tsickle_declare_module.__debugger.Event.prototype.body;
/**
 * @extends {Message}
 * @record
 * @struct
 */
tsickle_declare_module.__debugger.Response = function() {};
 /** @type {number} */
tsickle_declare_module.__debugger.Response.prototype.request_seq;
 /** @type {boolean} */
tsickle_declare_module.__debugger.Response.prototype.success;
 /** @type {string} */
tsickle_declare_module.__debugger.Response.prototype.message;
 /** @type {?} */
tsickle_declare_module.__debugger.Response.prototype.body;
/**
 * @record
 * @struct
 */
tsickle_declare_module.__debugger.BreakpointMessageBody = function() {};
 /** @type {string} */
tsickle_declare_module.__debugger.BreakpointMessageBody.prototype.type;
 /** @type {number} */
tsickle_declare_module.__debugger.BreakpointMessageBody.prototype.target;
 /** @type {number} */
tsickle_declare_module.__debugger.BreakpointMessageBody.prototype.line;
/**
 * @constructor
 * @struct
 */
tsickle_declare_module.__debugger.Protocol = function() {};
 /** @type {!Packet} */
tsickle_declare_module.__debugger.Protocol.prototype.res;
 /** @type {string} */
tsickle_declare_module.__debugger.Protocol.prototype.state;
 /** @type {function(!Packet): void} */
tsickle_declare_module.__debugger.Protocol.prototype.onResponse;

/**
 * @param {string} data
 * @return {void}
 */
tsickle_declare_module.__debugger.Protocol.prototype.execute = function(data) {};

/**
 * @param {!Request} rq
 * @return {string}
 */
tsickle_declare_module.__debugger.Protocol.prototype.serialize = function(rq) {};
 /** @type {number} */
tsickle_declare_module.__debugger.NO_FRAME;
 /** @type {number} */
tsickle_declare_module.__debugger.port;
/**
 * @record
 * @struct
 */
tsickle_declare_module.__debugger.ScriptDesc = function() {};
 /** @type {string} */
tsickle_declare_module.__debugger.ScriptDesc.prototype.name;
 /** @type {number} */
tsickle_declare_module.__debugger.ScriptDesc.prototype.id;
 /** @type {boolean} */
tsickle_declare_module.__debugger.ScriptDesc.prototype.isNative;
 /** @type {number} */
tsickle_declare_module.__debugger.ScriptDesc.prototype.handle;
 /** @type {string} */
tsickle_declare_module.__debugger.ScriptDesc.prototype.type;
 /** @type {number} */
tsickle_declare_module.__debugger.ScriptDesc.prototype.lineOffset;
 /** @type {number} */
tsickle_declare_module.__debugger.ScriptDesc.prototype.columnOffset;
 /** @type {number} */
tsickle_declare_module.__debugger.ScriptDesc.prototype.lineCount;
/**
 * @record
 * @struct
 */
tsickle_declare_module.__debugger.Breakpoint = function() {};
 /** @type {number} */
tsickle_declare_module.__debugger.Breakpoint.prototype.id;
 /** @type {number} */
tsickle_declare_module.__debugger.Breakpoint.prototype.scriptId;
 /** @type {!ScriptDesc} */
tsickle_declare_module.__debugger.Breakpoint.prototype.script;
 /** @type {number} */
tsickle_declare_module.__debugger.Breakpoint.prototype.line;
 /** @type {string} */
tsickle_declare_module.__debugger.Breakpoint.prototype.condition;
 /** @type {string} */
tsickle_declare_module.__debugger.Breakpoint.prototype.scriptReq;
/**
 * @record
 * @struct
 */
tsickle_declare_module.__debugger.RequestHandler = function() {};

/* TODO: CallSignature: tsickle_declare_module.__debugger */
 /** @type {number} */
tsickle_declare_module.__debugger.RequestHandler.prototype.request_seq;
/**
 * @record
 * @struct
 */
tsickle_declare_module.__debugger.ResponseBodyHandler = function() {};

/* TODO: CallSignature: tsickle_declare_module.__debugger */
 /** @type {number} */
tsickle_declare_module.__debugger.ResponseBodyHandler.prototype.request_seq;
/**
 * @record
 * @struct
 */
tsickle_declare_module.__debugger.ExceptionInfo = function() {};
 /** @type {string} */
tsickle_declare_module.__debugger.ExceptionInfo.prototype.text;
/**
 * @record
 * @struct
 */
tsickle_declare_module.__debugger.BreakResponse = function() {};
 /** @type {!ScriptDesc} */
tsickle_declare_module.__debugger.BreakResponse.prototype.script;
 /** @type {!ExceptionInfo} */
tsickle_declare_module.__debugger.BreakResponse.prototype.exception;
 /** @type {number} */
tsickle_declare_module.__debugger.BreakResponse.prototype.sourceLine;
 /** @type {string} */
tsickle_declare_module.__debugger.BreakResponse.prototype.sourceLineText;
 /** @type {number} */
tsickle_declare_module.__debugger.BreakResponse.prototype.sourceColumn;

/**
 * @param {!BreakResponse} body
 * @return {string}
 */
tsickle_declare_module.__debugger.SourceInfo = function(body) {};
/**
 * @record
 * @struct
 */
tsickle_declare_module.__debugger.ClientInstance = function() {};
 /** @type {!Protocol} */
tsickle_declare_module.__debugger.ClientInstance.prototype.protocol;
 /** @type {!Array<!ScriptDesc>} */
tsickle_declare_module.__debugger.ClientInstance.prototype.scripts;
 /** @type {!Array<!ScriptDesc>} */
tsickle_declare_module.__debugger.ClientInstance.prototype.handles;
 /** @type {!Array<!Breakpoint>} */
tsickle_declare_module.__debugger.ClientInstance.prototype.breakpoints;
 /** @type {number} */
tsickle_declare_module.__debugger.ClientInstance.prototype.currentSourceLine;
 /** @type {number} */
tsickle_declare_module.__debugger.ClientInstance.prototype.currentSourceColumn;
 /** @type {string} */
tsickle_declare_module.__debugger.ClientInstance.prototype.currentSourceLineText;
 /** @type {number} */
tsickle_declare_module.__debugger.ClientInstance.prototype.currentFrame;
 /** @type {string} */
tsickle_declare_module.__debugger.ClientInstance.prototype.currentScript;

/**
 * @param {number} port
 * @param {string} host
 * @return {void}
 */
tsickle_declare_module.__debugger.ClientInstance.prototype.connect = function(port, host) {};

/**
 * @param {?} req
 * @param {!RequestHandler} cb
 * @return {void}
 */
tsickle_declare_module.__debugger.ClientInstance.prototype.req = function(req, cb) {};

/**
 * @param {string} code
 * @param {number} frame
 * @param {!RequestHandler} cb
 * @return {void}
 */
tsickle_declare_module.__debugger.ClientInstance.prototype.reqFrameEval = function(code, frame, cb) {};

/**
 * @param {?} obj
 * @param {number} depth
 * @param {!ResponseBodyHandler} cb
 * @return {void}
 */
tsickle_declare_module.__debugger.ClientInstance.prototype.mirrorObject = function(obj, depth, cb) {};

/**
 * @param {!BreakpointMessageBody} rq
 * @param {!RequestHandler} cb
 * @return {void}
 */
tsickle_declare_module.__debugger.ClientInstance.prototype.setBreakpoint = function(rq, cb) {};

/**
 * @param {!Request} rq
 * @param {!RequestHandler} cb
 * @return {void}
 */
tsickle_declare_module.__debugger.ClientInstance.prototype.clearBreakpoint = function(rq, cb) {};

/**
 * @param {!RequestHandler} cb
 * @return {void}
 */
tsickle_declare_module.__debugger.ClientInstance.prototype.listbreakpoints = function(cb) {};

/**
 * @param {number} from
 * @param {number} to
 * @param {!RequestHandler} cb
 * @return {void}
 */
tsickle_declare_module.__debugger.ClientInstance.prototype.reqSource = function(from, to, cb) {};

/**
 * @param {?} cb
 * @return {void}
 */
tsickle_declare_module.__debugger.ClientInstance.prototype.reqScripts = function(cb) {};

/**
 * @param {!RequestHandler} cb
 * @return {void}
 */
tsickle_declare_module.__debugger.ClientInstance.prototype.reqContinue = function(cb) {};
 /** @type {function(new: (!ClientInstance)): ?} */
tsickle_declare_module.__debugger.Client;
