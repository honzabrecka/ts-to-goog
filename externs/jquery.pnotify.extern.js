/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/jquery.pnotify/index.d.ts:

/** @typedef {string} */
var NoticeTypeOptions;

/** @typedef {(string|!PNotifyStyling)} */
var StylingOptions;

/** @typedef {string} */
var StateOptions;
/**
 * @record
 * @struct
 */
function PNotifyStack() {}
 /** @type {string} */
PNotifyStack.prototype.dir1;
 /** @type {string} */
PNotifyStack.prototype.dir2;
 /** @type {string} */
PNotifyStack.prototype.push;
 /** @type {number} */
PNotifyStack.prototype.spacing1;
 /** @type {number} */
PNotifyStack.prototype.spacing2;
 /** @type {number} */
PNotifyStack.prototype.firstpos1;
 /** @type {number} */
PNotifyStack.prototype.firstpos2;
 /** @type {?<!HTMLElement>} */
PNotifyStack.prototype.context;
 /** @type {boolean} */
PNotifyStack.prototype.modal;
/**
 * @record
 * @struct
 */
function PNotifyLabel() {}
 /** @type {string} */
PNotifyLabel.prototype.redisplay;
 /** @type {string} */
PNotifyLabel.prototype.all;
 /** @type {string} */
PNotifyLabel.prototype.last;
 /** @type {string} */
PNotifyLabel.prototype.close;
 /** @type {string} */
PNotifyLabel.prototype.stick;
/**
 * @record
 * @struct
 */
function PNotifyconfirmButton() {}
 /** @type {string} */
PNotifyconfirmButton.prototype.text;
 /** @type {string} */
PNotifyconfirmButton.prototype.addClass;
 /** @type {boolean} */
PNotifyconfirmButton.prototype.promptTrigger;
 /** @type {function(?, ?): void} */
PNotifyconfirmButton.prototype.click;
/**
 * @record
 * @struct
 */
function PNotifyconfirm() {}
 /** @type {boolean} */
PNotifyconfirm.prototype.confirm;
 /** @type {boolean} */
PNotifyconfirm.prototype.prompt;
 /** @type {string} */
PNotifyconfirm.prototype.prompt_class;
 /** @type {string} */
PNotifyconfirm.prototype.prompt_default;
 /** @type {boolean} */
PNotifyconfirm.prototype.prompt_multi_line;
 /** @type {string} */
PNotifyconfirm.prototype.align;
 /** @type {!Array<!PNotifyconfirmButton>} */
PNotifyconfirm.prototype.buttons;
/**
 * @record
 * @struct
 */
function PNotifyButtons() {}
 /** @type {boolean} */
PNotifyButtons.prototype.closer;
 /** @type {boolean} */
PNotifyButtons.prototype.closer_hover;
 /** @type {boolean} */
PNotifyButtons.prototype.sticker;
 /** @type {boolean} */
PNotifyButtons.prototype.sticker_hover;
 /** @type {boolean} */
PNotifyButtons.prototype.show_on_nonblock;
 /** @type {{close: string, stick: string, unstick: string}} */
PNotifyButtons.prototype.labels;
 /** @type {{closer: string, pin_up: string, pin_down: string}} */
PNotifyButtons.prototype.classes;
/**
 * @record
 * @struct
 */
function PNotifyOptions() {}
 /** @type {(string|boolean)} */
PNotifyOptions.prototype.title;
 /** @type {boolean} */
PNotifyOptions.prototype.title_escape;
 /** @type {(string|boolean)} */
PNotifyOptions.prototype.text;
 /** @type {boolean} */
PNotifyOptions.prototype.text_escape;
 /** @type {!PNotifyconfirm} */
PNotifyOptions.prototype.confirm;
 /** @type {(string|!PNotifyStyling)} */
PNotifyOptions.prototype.styling;
 /** @type {string} */
PNotifyOptions.prototype.addclass;
 /** @type {string} */
PNotifyOptions.prototype.cornerclass;
 /** @type {{nonblock: boolean, nonblock_opacity: number}} */
PNotifyOptions.prototype.nonblock;
 /** @type {boolean} */
PNotifyOptions.prototype.history;
 /** @type {number} */
PNotifyOptions.prototype.maxonscreen;
 /** @type {boolean} */
PNotifyOptions.prototype.auto_display;
 /** @type {string} */
PNotifyOptions.prototype.width;
 /** @type {string} */
PNotifyOptions.prototype.min_height;
 /** @type {string} */
PNotifyOptions.prototype.type;
 /** @type {?} */
PNotifyOptions.prototype.icon;
 /** @type {?} */
PNotifyOptions.prototype.animation;
 /** @type {string} */
PNotifyOptions.prototype.animate_speed;
 /** @type {number} */
PNotifyOptions.prototype.position_animate_speed;
 /** @type {number} */
PNotifyOptions.prototype.opacity;
 /** @type {boolean} */
PNotifyOptions.prototype.shadow;
 /** @type {{closer: boolean, closer_hover: boolean, sticker: boolean, sticker_hover: boolean}} */
PNotifyOptions.prototype.buttons;
 /** @type {boolean} */
PNotifyOptions.prototype.hide;
 /** @type {number} */
PNotifyOptions.prototype.delay;
 /** @type {boolean} */
PNotifyOptions.prototype.mouse_reset;
 /** @type {boolean} */
PNotifyOptions.prototype.remove;
 /** @type {boolean} */
PNotifyOptions.prototype.insert_brs;
 /** @type {!PNotifyStack} */
PNotifyOptions.prototype.stack;
 /** @type {!PNotifyLabel} */
PNotifyOptions.prototype.labels;
/**
 * @record
 * @struct
 */
function PNotifyStyling() {}
 /** @type {string} */
PNotifyStyling.prototype.container;
 /** @type {string} */
PNotifyStyling.prototype.notice;
 /** @type {string} */
PNotifyStyling.prototype.notice_icon;
 /** @type {string} */
PNotifyStyling.prototype.info;
 /** @type {string} */
PNotifyStyling.prototype.info_icon;
 /** @type {string} */
PNotifyStyling.prototype.success;
 /** @type {string} */
PNotifyStyling.prototype.success_icon;
 /** @type {string} */
PNotifyStyling.prototype.error;
 /** @type {string} */
PNotifyStyling.prototype.error_icon;
 /** @type {string} */
PNotifyStyling.prototype.closer;
 /** @type {string} */
PNotifyStyling.prototype.pin_down;
 /** @type {string} */
PNotifyStyling.prototype.pin_up;
 /** @type {string} */
PNotifyStyling.prototype.btn;
 /** @type {string} */
PNotifyStyling.prototype.btnhover;
 /** @type {string} */
PNotifyStyling.prototype.btnactive;
 /** @type {string} */
PNotifyStyling.prototype.btnfocus;
 /** @type {string} */
PNotifyStyling.prototype.input;
 /** @type {string} */
PNotifyStyling.prototype.text;
 /** @type {string} */
PNotifyStyling.prototype.hi_menu;
 /** @type {string} */
PNotifyStyling.prototype.hi_btn;
 /** @type {string} */
PNotifyStyling.prototype.hi_btnhov;
 /** @type {string} */
PNotifyStyling.prototype.hi_hnd;
 /** @type {string} */
PNotifyStyling.prototype.athing;
/**
 * @record
 * @struct
 */
function PNotify() {}
 /** @type {string} */
PNotify.prototype.state;

/**
 * This function is for updating the notice.
 * @param {!PNotifyOptions=} options
 * @return {?}
 */
PNotify.prototype.update = function(options) {};

/**
 * Remove the notice.
 * @return {void}
 */
PNotify.prototype.remove = function() {};

/**
 *  Display the notice.
 * @return {void}
 */
PNotify.prototype.open = function() {};

/**
 *  Get the DOM element.
 * @return {?<!HTMLElement>}
 */
PNotify.prototype.get = function() {};
/**
 * @record
 * @struct
 */
function PNotifyConstructor() {}

/* TODO: ConstructSignature:  */

/**
 * @return {void}
 */
PNotifyConstructor.prototype.removeAll = function() {};
 /** @type {!PNotifyConstructor} */
var PNotify;
