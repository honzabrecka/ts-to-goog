/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/survey-knockout/index.d.ts:
/** @const */
var Survey = {};
/**
 * @record
 * @struct
 */
Survey.HashTable = function() {};

/* TODO: IndexSignature: Survey */
/**
 * @record
 * @struct
 */
Survey.ISurvey = function() {};
 /** @type {boolean} */
Survey.ISurvey.prototype.isDesignMode;
 /** @type {string} */
Survey.ISurvey.prototype.requiredText;

/**
 * @param {string} name
 * @return {?}
 */
Survey.ISurvey.prototype.getValue = function(name) {};

/**
 * @param {string} name
 * @param {?} newValue
 * @return {?}
 */
Survey.ISurvey.prototype.setValue = function(name, newValue) {};

/**
 * @param {string} name
 * @return {string}
 */
Survey.ISurvey.prototype.getComment = function(name) {};

/**
 * @param {string} name
 * @param {string} newValue
 * @return {?}
 */
Survey.ISurvey.prototype.setComment = function(name, newValue) {};

/**
 * @param {!Survey.IPage} page
 * @param {boolean} newValue
 * @return {?}
 */
Survey.ISurvey.prototype.pageVisibilityChanged = function(page, newValue) {};

/**
 * @param {!Survey.IQuestion} question
 * @param {boolean} newValue
 * @return {?}
 */
Survey.ISurvey.prototype.questionVisibilityChanged = function(question, newValue) {};

/**
 * @param {!Survey.IQuestion} question
 * @param {number} index
 * @return {?}
 */
Survey.ISurvey.prototype.questionAdded = function(question, index) {};

/**
 * @param {!Survey.IQuestion} question
 * @return {?}
 */
Survey.ISurvey.prototype.questionRemoved = function(question) {};

/**
 * @param {string} name
 * @return {!Survey.SurveyError}
 */
Survey.ISurvey.prototype.validateQuestion = function(name) {};

/**
 * @param {string} html
 * @return {string}
 */
Survey.ISurvey.prototype.processHtml = function(html) {};

/**
 * @param {string} text
 * @return {string}
 */
Survey.ISurvey.prototype.processText = function(text) {};
/**
 * @record
 * @struct
 */
Survey.IQuestion = function() {};
 /** @type {string} */
Survey.IQuestion.prototype.name;
 /** @type {boolean} */
Survey.IQuestion.prototype.visible;
 /** @type {boolean} */
Survey.IQuestion.prototype.hasTitle;

/**
 * @param {number} value
 * @return {?}
 */
Survey.IQuestion.prototype.setVisibleIndex = function(value) {};

/**
 * @param {?} newValue
 * @return {?}
 */
Survey.IQuestion.prototype.onSurveyValueChanged = function(newValue) {};
/**
 * @record
 * @struct
 */
Survey.IPage = function() {};
 /** @type {boolean} */
Survey.IPage.prototype.visible;

/**
 * @constructor
 * @struct
 * @param {?} value
 * @param {string=} text
 */
Survey.ItemValue = function(value, text) {};
 /** @type {string} */
Survey.ItemValue.Separator;
 /** @type {?} */
Survey.ItemValue.prototype.itemValue;
 /** @type {?} */
Survey.ItemValue.prototype.itemText;
 /** @type {?} */
Survey.ItemValue.prototype.value;
 /** @type {boolean} */
Survey.ItemValue.prototype.hasText;
 /** @type {string} */
Survey.ItemValue.prototype.text;

/**
 * @param {!Array<!Survey.ItemValue>} items
 * @param {!Array<?>} values
 * @return {void}
 */
Survey.ItemValue.setData = function(items, values) {};

/**
 * @param {!Array<!Survey.ItemValue>} items
 * @return {?}
 */
Survey.ItemValue.getData = function(items) {};

/**
 * @return {string}
 */
Survey.ItemValue.prototype.getType = function() {};
/**
 * @constructor
 * @struct
 */
Survey.Base = function() {};

/**
 * @return {string}
 */
Survey.Base.prototype.getType = function() {};
/**
 * @constructor
 * @struct
 */
Survey.SurveyError = function() {};

/**
 * @return {string}
 */
Survey.SurveyError.prototype.getText = function() {};
/**
 * @constructor
 * @struct
 */
Survey.Event = function() {};
 /** @type {?} */
Survey.Event.prototype.callbacks;
 /** @type {boolean} */
Survey.Event.prototype.isEmpty;

/**
 * @param {?} sender
 * @param {Options} options
 * @return {void}
 */
Survey.Event.prototype.fire = function(sender, options) {};

/**
 * @param {T} func
 * @return {void}
 */
Survey.Event.prototype.add = function(func) {};

/**
 * @param {T} func
 * @return {void}
 */
Survey.Event.prototype.remove = function(func) {};

/**
 * @constructor
 * @struct
 */
Survey.dxSurveyService = function() {};
 /** @type {string} */
Survey.dxSurveyService.serviceUrl;

/**
 * @param {string} surveyId
 * @param {function(boolean, string, ?): void} onLoad
 * @return {void}
 */
Survey.dxSurveyService.prototype.loadSurvey = function(surveyId, onLoad) {};

/**
 * @param {string} postId
 * @param {!JSON} result
 * @param {function(boolean, ?): void} onSendResult
 * @param {string=} clientId
 * @param {boolean=} isPartialCompleted
 * @return {void}
 */
Survey.dxSurveyService.prototype.sendResult = function(postId, result, onSendResult, clientId, isPartialCompleted) {};

/**
 * @param {string} resultId
 * @param {string} name
 * @param {function(boolean, ?, !Array<?>, ?): void} onGetResult
 * @return {void}
 */
Survey.dxSurveyService.prototype.getResult = function(resultId, name, onGetResult) {};

/**
 * @param {string} resultId
 * @param {string} clientId
 * @param {function(boolean, string, ?): void} onIsCompleted
 * @return {void}
 */
Survey.dxSurveyService.prototype.isCompleted = function(resultId, clientId, onIsCompleted) {};
 /** @type {{currentLocale: string, locales: !Object, getString: function(string): ?, getLocales: function(): !Array<string>}} */
Survey.surveyLocalization;
 /** @type {{pagePrevText: string, pageNextText: string, completeText: string, otherItemText: string, progressText: string, emptySurvey: string, completingSurvey: string, loadingSurvey: string, optionsCaption: string, requiredError: string, numericError: string, textMinLength: string, minSelectError: string, maxSelectError: string, numericMinMax: string, numericMin: string, numericMax: string, invalidEmail: string, otherRequiredError: string}} */
Survey.surveyStrings;

/**
 * @constructor
 * @struct
 */
Survey.AnswerRequiredError = function() {};

/**
 * @return {string}
 */
Survey.AnswerRequiredError.prototype.getText = function() {};

/**
 * @constructor
 * @struct
 */
Survey.RequreNumericError = function() {};

/**
 * @return {string}
 */
Survey.RequreNumericError.prototype.getText = function() {};

/**
 * @constructor
 * @struct
 * @param {string} text
 */
Survey.CustomError = function(text) {};
 /** @type {?} */
Survey.CustomError.prototype.text;

/**
 * @return {string}
 */
Survey.CustomError.prototype.getText = function() {};

/**
 * @constructor
 * @struct
 * @param {string} name
 */
Survey.JsonObjectProperty = function(name) {};
 /** @type {string} */
Survey.JsonObjectProperty.prototype.name;
 /** @type {?} */
Survey.JsonObjectProperty.prototype.typeValue;
 /** @type {?} */
Survey.JsonObjectProperty.prototype.choicesValue;
 /** @type {?} */
Survey.JsonObjectProperty.prototype.choicesfunc;
 /** @type {string} */
Survey.JsonObjectProperty.prototype.className;
 /** @type {string} */
Survey.JsonObjectProperty.prototype.classNamePart;
 /** @type {string} */
Survey.JsonObjectProperty.prototype.baseClassName;
 /** @type {?} */
Survey.JsonObjectProperty.prototype.defaultValue;
 /** @type {function(?): ?} */
Survey.JsonObjectProperty.prototype.onGetValue;
 /** @type {function(?, ?, !Survey.JsonObject): ?} */
Survey.JsonObjectProperty.prototype.onSetValue;
 /** @type {string} */
Survey.JsonObjectProperty.prototype.type;
 /** @type {function(?): ?} */
Survey.JsonObjectProperty.prototype.hasToUseGetValue;
 /** @type {function(?, ?, !Survey.JsonObject): ?} */
Survey.JsonObjectProperty.prototype.hasToUseSetValue;
 /** @type {!Array<?>} */
Survey.JsonObjectProperty.prototype.choices;

/**
 * @param {?} value
 * @return {boolean}
 */
Survey.JsonObjectProperty.prototype.isDefaultValue = function(value) {};

/**
 * @param {?} obj
 * @return {?}
 */
Survey.JsonObjectProperty.prototype.getValue = function(obj) {};

/**
 * @param {?} obj
 * @param {?} value
 * @param {!Survey.JsonObject} jsonConv
 * @return {void}
 */
Survey.JsonObjectProperty.prototype.setValue = function(obj, value, jsonConv) {};

/**
 * @param {string} objType
 * @return {string}
 */
Survey.JsonObjectProperty.prototype.getObjType = function(objType) {};

/**
 * @param {string} className
 * @return {string}
 */
Survey.JsonObjectProperty.prototype.getClassName = function(className) {};

/**
 * @param {!Array<?>} value
 * @param {function(): !Array<?>} valueFunc
 * @return {void}
 */
Survey.JsonObjectProperty.prototype.setChoices = function(value, valueFunc) {};

/**
 * @constructor
 * @struct
 * @param {string} name
 * @param {!Array<string>} propertiesNames
 * @param {function(): ?=} creator
 * @param {string=} parentName
 */
Survey.JsonMetadataClass = function(name, propertiesNames, creator, parentName) {};
 /** @type {string} */
Survey.JsonMetadataClass.prototype.name;
 /** @type {function(): ?} */
Survey.JsonMetadataClass.prototype.creator;
 /** @type {string} */
Survey.JsonMetadataClass.prototype.parentName;
 /** @type {string} */
Survey.JsonMetadataClass.requiredSymbol;
 /** @type {string} */
Survey.JsonMetadataClass.typeSymbol;
 /** @type {!Array<!Survey.JsonObjectProperty>} */
Survey.JsonMetadataClass.prototype.properties;
 /** @type {!Array<string>} */
Survey.JsonMetadataClass.prototype.requiredProperties;

/**
 * @param {string} name
 * @return {!Survey.JsonObjectProperty}
 */
Survey.JsonMetadataClass.prototype.find = function(name) {};

/**
 * @param {?} propertyName
 * @return {?}
 */
Survey.JsonMetadataClass.prototype.getPropertyName = function(propertyName) {};
/**
 * @constructor
 * @struct
 */
Survey.JsonMetadata = function() {};
 /** @type {?} */
Survey.JsonMetadata.prototype.classes;
 /** @type {?} */
Survey.JsonMetadata.prototype.childrenClasses;
 /** @type {?} */
Survey.JsonMetadata.prototype.classProperties;
 /** @type {?} */
Survey.JsonMetadata.prototype.classRequiredProperties;

/**
 * @param {string} name
 * @param {!Array<string>} propertiesNames
 * @param {function(): ?=} creator
 * @param {string=} parentName
 * @return {!Survey.JsonMetadataClass}
 */
Survey.JsonMetadata.prototype.addClass = function(name, propertiesNames, creator, parentName) {};

/**
 * @param {string} name
 * @param {function(): ?} creator
 * @return {void}
 */
Survey.JsonMetadata.prototype.overrideClassCreatore = function(name, creator) {};

/**
 * @param {string} name
 * @param {string} propertyName
 * @param {string} propertyClassName
 * @param {?=} defaultValue
 * @param {function(?): ?=} onGetValue
 * @param {function(?, ?, !Survey.JsonObject): ?=} onSetValue
 * @return {void}
 */
Survey.JsonMetadata.prototype.setPropertyValues = function(name, propertyName, propertyClassName, defaultValue, onGetValue, onSetValue) {};

/**
 * @param {string} name
 * @param {string} propertyName
 * @param {!Array<?>} choices
 * @param {function(): !Array<?>=} choicesFunc
 * @return {void}
 */
Survey.JsonMetadata.prototype.setPropertyChoices = function(name, propertyName, choices, choicesFunc) {};

/**
 * @param {string} name
 * @param {string} propertyName
 * @param {string} baseClassName
 * @param {string=} classNamePart
 * @return {void}
 */
Survey.JsonMetadata.prototype.setPropertyClassInfo = function(name, propertyName, baseClassName, classNamePart) {};

/**
 * @param {string} name
 * @return {!Array<!Survey.JsonObjectProperty>}
 */
Survey.JsonMetadata.prototype.getProperties = function(name) {};

/**
 * @param {string} name
 * @return {?}
 */
Survey.JsonMetadata.prototype.createClass = function(name) {};

/**
 * @param {string} name
 * @param {boolean=} canBeCreated
 * @return {!Array<!Survey.JsonMetadataClass>}
 */
Survey.JsonMetadata.prototype.getChildrenClasses = function(name, canBeCreated) {};

/**
 * @param {string} name
 * @return {!Array<string>}
 */
Survey.JsonMetadata.prototype.getRequiredProperties = function(name) {};

/**
 * @param {?} name
 * @param {?} canBeCreated
 * @param {?} result
 * @return {?}
 */
Survey.JsonMetadata.prototype.fillChildrenClasses = function(name, canBeCreated, result) {};

/**
 * @param {?} name
 * @return {?}
 */
Survey.JsonMetadata.prototype.findClass = function(name) {};

/**
 * @param {?} name
 * @param {?} propertyName
 * @return {?}
 */
Survey.JsonMetadata.prototype.findProperty = function(name, propertyName) {};

/**
 * @param {?} name
 * @param {?} list
 * @return {?}
 */
Survey.JsonMetadata.prototype.fillProperties = function(name, list) {};

/**
 * @param {?} property
 * @param {?} list
 * @param {?} endIndex
 * @return {?}
 */
Survey.JsonMetadata.prototype.addProperty = function(property, list, endIndex) {};

/**
 * @param {?} name
 * @param {?} list
 * @return {?}
 */
Survey.JsonMetadata.prototype.fillRequiredProperties = function(name, list) {};

/**
 * @constructor
 * @struct
 * @param {string} type
 * @param {string} message
 */
Survey.JsonError = function(type, message) {};
 /** @type {string} */
Survey.JsonError.prototype.type;
 /** @type {string} */
Survey.JsonError.prototype.message;
 /** @type {string} */
Survey.JsonError.prototype.description;
 /** @type {!Number} */
Survey.JsonError.prototype.at;

/**
 * @return {string}
 */
Survey.JsonError.prototype.getFullDescription = function() {};

/**
 * @constructor
 * @struct
 * @param {string} propertyName
 * @param {string} className
 */
Survey.JsonUnknownPropertyError = function(propertyName, className) {};
 /** @type {string} */
Survey.JsonUnknownPropertyError.prototype.propertyName;
 /** @type {string} */
Survey.JsonUnknownPropertyError.prototype.className;

/**
 * @constructor
 * @struct
 * @param {string} baseClassName
 * @param {string} type
 * @param {string} message
 */
Survey.JsonMissingTypeErrorBase = function(baseClassName, type, message) {};
 /** @type {string} */
Survey.JsonMissingTypeErrorBase.prototype.baseClassName;
 /** @type {string} */
Survey.JsonMissingTypeErrorBase.prototype.type;
 /** @type {string} */
Survey.JsonMissingTypeErrorBase.prototype.message;

/**
 * @constructor
 * @struct
 * @param {string} propertyName
 * @param {string} baseClassName
 */
Survey.JsonMissingTypeError = function(propertyName, baseClassName) {};
 /** @type {string} */
Survey.JsonMissingTypeError.prototype.propertyName;
 /** @type {string} */
Survey.JsonMissingTypeError.prototype.baseClassName;

/**
 * @constructor
 * @struct
 * @param {string} propertyName
 * @param {string} baseClassName
 */
Survey.JsonIncorrectTypeError = function(propertyName, baseClassName) {};
 /** @type {string} */
Survey.JsonIncorrectTypeError.prototype.propertyName;
 /** @type {string} */
Survey.JsonIncorrectTypeError.prototype.baseClassName;

/**
 * @constructor
 * @struct
 * @param {string} propertyName
 * @param {string} className
 */
Survey.JsonRequiredPropertyError = function(propertyName, className) {};
 /** @type {string} */
Survey.JsonRequiredPropertyError.prototype.propertyName;
 /** @type {string} */
Survey.JsonRequiredPropertyError.prototype.className;
/**
 * @constructor
 * @struct
 */
Survey.JsonObject = function() {};
 /** @type {?} */
Survey.JsonObject.typePropertyName;
 /** @type {?} */
Survey.JsonObject.positionPropertyName;
 /** @type {?} */
Survey.JsonObject.metaDataValue;
 /** @type {!Survey.JsonMetadata} */
Survey.JsonObject.metaData;
 /** @type {!Array<!Survey.JsonError>} */
Survey.JsonObject.prototype.errors;

/**
 * @param {?} obj
 * @return {?}
 */
Survey.JsonObject.prototype.toJsonObject = function(obj) {};

/**
 * @param {?} jsonObj
 * @param {?} obj
 * @return {void}
 */
Survey.JsonObject.prototype.toObject = function(jsonObj, obj) {};

/**
 * @param {?} obj
 * @param {!Survey.JsonObjectProperty} property
 * @return {?}
 */
Survey.JsonObject.prototype.toJsonObjectCore = function(obj, property) {};

/**
 * @param {?} obj
 * @param {?} result
 * @param {!Survey.JsonObjectProperty} property
 * @return {void}
 */
Survey.JsonObject.prototype.valueToJson = function(obj, result, property) {};

/**
 * @param {?} value
 * @param {?} obj
 * @param {?} key
 * @param {!Survey.JsonObjectProperty} property
 * @return {void}
 */
Survey.JsonObject.prototype.valueToObj = function(value, obj, key, property) {};

/**
 * @param {?} value
 * @return {?}
 */
Survey.JsonObject.prototype.isValueArray = function(value) {};

/**
 * @param {?} value
 * @param {?} property
 * @return {?}
 */
Survey.JsonObject.prototype.createNewObj = function(value, property) {};

/**
 * @param {?} newObj
 * @param {?} value
 * @param {?} property
 * @param {?} className
 * @return {?}
 */
Survey.JsonObject.prototype.checkNewObjectOnErrors = function(newObj, value, property, className) {};

/**
 * @param {?} error
 * @param {?} jsonObj
 * @return {?}
 */
Survey.JsonObject.prototype.addNewError = function(error, jsonObj) {};

/**
 * @param {?} value
 * @param {?} obj
 * @param {?} key
 * @param {?} property
 * @return {?}
 */
Survey.JsonObject.prototype.valueToArray = function(value, obj, key, property) {};

/**
 * @param {?} properties
 * @param {?} key
 * @return {?}
 */
Survey.JsonObject.prototype.findProperty = function(properties, key) {};

/**
 * @constructor
 * @struct
 * @param {string} name
 */
Survey.QuestionBase = function(name) {};
 /** @type {string} */
Survey.QuestionBase.prototype.name;
 /** @type {!Survey.ISurvey} */
Survey.QuestionBase.prototype.data;
 /** @type {?} */
Survey.QuestionBase.prototype.visibleValue;
 /** @type {?} */
Survey.QuestionBase.prototype.visibleIndexValue;
 /** @type {string} */
Survey.QuestionBase.prototype.width;
 /** @type {function(): void} */
Survey.QuestionBase.prototype.visibilityChangedCallback;
 /** @type {function(): void} */
Survey.QuestionBase.prototype.visibleIndexChangedCallback;
 /** @type {boolean} */
Survey.QuestionBase.prototype.visible;
 /** @type {number} */
Survey.QuestionBase.prototype.visibleIndex;
 /** @type {boolean} */
Survey.QuestionBase.prototype.hasTitle;
 /** @type {boolean} */
Survey.QuestionBase.prototype.hasComment;

/**
 * @return {boolean}
 */
Survey.QuestionBase.prototype.hasErrors = function() {};

/**
 * @param {!Survey.ISurvey} newValue
 * @return {void}
 */
Survey.QuestionBase.prototype.setData = function(newValue) {};

/**
 * @param {function(): void} callback
 * @return {void}
 */
Survey.QuestionBase.prototype.fireCallback = function(callback) {};

/**
 * @return {void}
 */
Survey.QuestionBase.prototype.onSetData = function() {};

/**
 * @return {void}
 */
Survey.QuestionBase.prototype.onCreating = function() {};

/**
 * @param {?} newValue
 * @return {void}
 */
Survey.QuestionBase.prototype.onSurveyValueChanged = function(newValue) {};

/**
 * @param {number} value
 * @return {void}
 */
Survey.QuestionBase.prototype.setVisibleIndex = function(value) {};
/**
 * @constructor
 * @struct
 */
Survey.QuestionFactory = function() {};
 /** @type {!Survey.QuestionFactory} */
Survey.QuestionFactory.Instance;
 /** @type {!Array<(string|{value: number, text: string})>} */
Survey.QuestionFactory.DefaultChoices;
 /** @type {?} */
Survey.QuestionFactory.prototype.creatorHash;

/**
 * @param {string} questionType
 * @param {function(string): !Survey.QuestionBase} questionCreator
 * @return {void}
 */
Survey.QuestionFactory.prototype.registerQuestion = function(questionType, questionCreator) {};

/**
 * @return {!Array<string>}
 */
Survey.QuestionFactory.prototype.getAllTypes = function() {};

/**
 * @param {string} questionType
 * @param {string} name
 * @return {!Survey.QuestionBase}
 */
Survey.QuestionFactory.prototype.createQuestion = function(questionType, name) {};

/**
 * @constructor
 * @struct
 * @param {string=} name
 */
Survey.PageModel = function(name) {};
 /** @type {string} */
Survey.PageModel.prototype.name;
 /** @type {!Array<!Survey.QuestionBase>} */
Survey.PageModel.prototype.questions;
 /** @type {!Survey.ISurvey} */
Survey.PageModel.prototype.data;
 /** @type {string} */
Survey.PageModel.prototype.title;
 /** @type {number} */
Survey.PageModel.prototype.visibleIndex;
 /** @type {?} */
Survey.PageModel.prototype.numValue;
 /** @type {?} */
Survey.PageModel.prototype.visibleValue;
 /** @type {string} */
Survey.PageModel.prototype.processedTitle;
 /** @type {number} */
Survey.PageModel.prototype.num;
 /** @type {boolean} */
Survey.PageModel.prototype.visible;
 /** @type {boolean} */
Survey.PageModel.prototype.isVisible;

/**
 * @return {string}
 */
Survey.PageModel.prototype.getType = function() {};

/**
 * @param {!Survey.QuestionBase} question
 * @param {number=} index
 * @return {void}
 */
Survey.PageModel.prototype.addQuestion = function(question, index) {};

/**
 * @param {string} questionType
 * @param {string} name
 * @return {!Survey.QuestionBase}
 */
Survey.PageModel.prototype.addNewQuestion = function(questionType, name) {};

/**
 * @param {!Survey.QuestionBase} question
 * @return {void}
 */
Survey.PageModel.prototype.removeQuestion = function(question) {};

/**
 * @return {boolean}
 */
Survey.PageModel.prototype.hasErrors = function() {};

/**
 * @param {!Array<!Survey.IQuestion>} list
 * @param {boolean=} visibleOnly
 * @return {void}
 */
Survey.PageModel.prototype.addQuestionsToList = function(list, visibleOnly) {};

/**
 * @param {number} value
 * @return {void}
 */
Survey.PageModel.prototype.onNumChanged = function(value) {};

/**
 * @constructor
 * @struct
 * @param {?} value
 * @param {!Survey.SurveyError=} error
 */
Survey.ValidatorResult = function(value, error) {};
 /** @type {?} */
Survey.ValidatorResult.prototype.value;
 /** @type {!Survey.SurveyError} */
Survey.ValidatorResult.prototype.error;

/**
 * @constructor
 * @struct
 */
Survey.SurveyValidator = function() {};
 /** @type {string} */
Survey.SurveyValidator.prototype.text;

/**
 * @param {string} name
 * @return {string}
 */
Survey.SurveyValidator.prototype.getErrorText = function(name) {};

/**
 * @param {string} name
 * @return {string}
 */
Survey.SurveyValidator.prototype.getDefaultErrorText = function(name) {};

/**
 * @param {?} value
 * @param {string=} name
 * @return {!Survey.ValidatorResult}
 */
Survey.SurveyValidator.prototype.validate = function(value, name) {};
/**
 * @record
 * @struct
 */
Survey.IValidatorOwner = function() {};
 /** @type {!Array<!Survey.SurveyValidator>} */
Survey.IValidatorOwner.prototype.validators;
 /** @type {?} */
Survey.IValidatorOwner.prototype.value;

/**
 * @return {string}
 */
Survey.IValidatorOwner.prototype.getValidatorTitle = function() {};
/**
 * @constructor
 * @struct
 */
Survey.ValidatorRunner = function() {};

/**
 * @param {!Survey.IValidatorOwner} owner
 * @return {!Survey.SurveyError}
 */
Survey.ValidatorRunner.prototype.run = function(owner) {};

/**
 * @constructor
 * @struct
 * @param {number=} minValue
 * @param {number=} maxValue
 */
Survey.NumericValidator = function(minValue, maxValue) {};
 /** @type {number} */
Survey.NumericValidator.prototype.minValue;
 /** @type {number} */
Survey.NumericValidator.prototype.maxValue;

/**
 * @return {string}
 */
Survey.NumericValidator.prototype.getType = function() {};

/**
 * @param {?} value
 * @param {string=} name
 * @return {!Survey.ValidatorResult}
 */
Survey.NumericValidator.prototype.validate = function(value, name) {};

/**
 * @param {string} name
 * @return {?}
 */
Survey.NumericValidator.prototype.getDefaultErrorText = function(name) {};

/**
 * @param {?} value
 * @return {?}
 */
Survey.NumericValidator.prototype.isNumber = function(value) {};

/**
 * @constructor
 * @struct
 * @param {number=} minLength
 */
Survey.TextValidator = function(minLength) {};
 /** @type {number} */
Survey.TextValidator.prototype.minLength;

/**
 * @return {string}
 */
Survey.TextValidator.prototype.getType = function() {};

/**
 * @param {?} value
 * @param {string=} name
 * @return {!Survey.ValidatorResult}
 */
Survey.TextValidator.prototype.validate = function(value, name) {};

/**
 * @param {string} name
 * @return {?}
 */
Survey.TextValidator.prototype.getDefaultErrorText = function(name) {};

/**
 * @constructor
 * @struct
 * @param {number=} minCount
 * @param {number=} maxCount
 */
Survey.AnswerCountValidator = function(minCount, maxCount) {};
 /** @type {number} */
Survey.AnswerCountValidator.prototype.minCount;
 /** @type {number} */
Survey.AnswerCountValidator.prototype.maxCount;

/**
 * @return {string}
 */
Survey.AnswerCountValidator.prototype.getType = function() {};

/**
 * @param {?} value
 * @param {string=} name
 * @return {!Survey.ValidatorResult}
 */
Survey.AnswerCountValidator.prototype.validate = function(value, name) {};

/**
 * @param {string} name
 * @return {string}
 */
Survey.AnswerCountValidator.prototype.getDefaultErrorText = function(name) {};

/**
 * @constructor
 * @struct
 * @param {string=} regex
 */
Survey.RegexValidator = function(regex) {};
 /** @type {string} */
Survey.RegexValidator.prototype.regex;

/**
 * @return {string}
 */
Survey.RegexValidator.prototype.getType = function() {};

/**
 * @param {?} value
 * @param {string=} name
 * @return {!Survey.ValidatorResult}
 */
Survey.RegexValidator.prototype.validate = function(value, name) {};

/**
 * @constructor
 * @struct
 */
Survey.EmailValidator = function() {};
 /** @type {?} */
Survey.EmailValidator.prototype.re;

/**
 * @return {string}
 */
Survey.EmailValidator.prototype.getType = function() {};

/**
 * @param {?} value
 * @param {string=} name
 * @return {!Survey.ValidatorResult}
 */
Survey.EmailValidator.prototype.validate = function(value, name) {};

/**
 * @param {string} name
 * @return {?}
 */
Survey.EmailValidator.prototype.getDefaultErrorText = function(name) {};

/**
 * @constructor
 * @struct
 * @param {string} name
 */
Survey.Question = function(name) {};
 /** @type {string} */
Survey.Question.prototype.name;
 /** @type {?} */
Survey.Question.prototype.titleValue;
 /** @type {?} */
Survey.Question.prototype.questionValue;
 /** @type {?} */
Survey.Question.prototype.isRequiredValue;
 /** @type {?} */
Survey.Question.prototype.hasCommentValue;
 /** @type {?} */
Survey.Question.prototype.hasOtherValue;
 /** @type {!Array<!Survey.SurveyError>} */
Survey.Question.prototype.errors;
 /** @type {!Array<!Survey.SurveyValidator>} */
Survey.Question.prototype.validators;
 /** @type {function(): void} */
Survey.Question.prototype.valueChangedCallback;
 /** @type {function(): void} */
Survey.Question.prototype.commentChangedCallback;
 /** @type {function(): void} */
Survey.Question.prototype.errorsChangedCallback;
 /** @type {boolean} */
Survey.Question.prototype.hasTitle;
 /** @type {string} */
Survey.Question.prototype.title;
 /** @type {string} */
Survey.Question.prototype.processedTitle;
 /** @type {boolean} */
Survey.Question.prototype.isRequired;
 /** @type {boolean} */
Survey.Question.prototype.hasComment;
 /** @type {boolean} */
Survey.Question.prototype.hasOther;
 /** @type {?} */
Survey.Question.prototype.value;
 /** @type {string} */
Survey.Question.prototype.comment;
 /** @type {string} */
Survey.Question.prototype.requiredText;
 /** @type {?} */
Survey.Question.prototype.isValueChangedInSurvey;

/**
 * @return {boolean}
 */
Survey.Question.prototype.supportComment = function() {};

/**
 * @return {boolean}
 */
Survey.Question.prototype.supportOther = function() {};

/**
 * @return {void}
 */
Survey.Question.prototype.onSetData = function() {};

/**
 * @return {boolean}
 */
Survey.Question.prototype.isEmpty = function() {};

/**
 * @return {boolean}
 */
Survey.Question.prototype.hasErrors = function() {};

/**
 * @return {?}
 */
Survey.Question.prototype.checkForErrors = function() {};

/**
 * @param {!Array<!Survey.SurveyError>} errors
 * @return {void}
 */
Survey.Question.prototype.onCheckForErrors = function(errors) {};

/**
 * @return {!Survey.SurveyError}
 */
Survey.Question.prototype.runValidators = function() {};

/**
 * @param {?} newValue
 * @return {void}
 */
Survey.Question.prototype.setNewValue = function(newValue) {};

/**
 * @return {void}
 */
Survey.Question.prototype.onValueChanged = function() {};

/**
 * @param {?} newValue
 * @return {?}
 */
Survey.Question.prototype.setNewComment = function(newValue) {};

/**
 * @param {?} newValue
 * @return {void}
 */
Survey.Question.prototype.onSurveyValueChanged = function(newValue) {};

/**
 * @return {string}
 */
Survey.Question.prototype.getValidatorTitle = function() {};

/**
 * @constructor
 * @struct
 * @param {string} name
 */
Survey.QuestionSelectBase = function(name) {};
 /** @type {!Survey.ItemValue} */
Survey.QuestionSelectBase.prototype.otherItem;
 /** @type {!Array<!Survey.ItemValue>} */
Survey.QuestionSelectBase.prototype.choicesValues;
 /** @type {string} */
Survey.QuestionSelectBase.prototype.otherErrorText;
 /** @type {string} */
Survey.QuestionSelectBase.prototype.choicesOrderValue;
 /** @type {boolean} */
Survey.QuestionSelectBase.prototype.isOtherSelected;
 /** @type {!Array<?>} */
Survey.QuestionSelectBase.prototype.choices;
 /** @type {string} */
Survey.QuestionSelectBase.prototype.choicesOrder;
 /** @type {string} */
Survey.QuestionSelectBase.prototype.otherText;
 /** @type {!Array<!Survey.ItemValue>} */
Survey.QuestionSelectBase.prototype.visibleChoices;

/**
 * @return {boolean}
 */
Survey.QuestionSelectBase.prototype.supportComment = function() {};

/**
 * @return {boolean}
 */
Survey.QuestionSelectBase.prototype.supportOther = function() {};

/**
 * @param {!Array<!Survey.SurveyError>} errors
 * @return {void}
 */
Survey.QuestionSelectBase.prototype.onCheckForErrors = function(errors) {};

/**
 * @param {!Array<!Survey.ItemValue>} array
 * @return {!Array<!Survey.ItemValue>}
 */
Survey.QuestionSelectBase.prototype.sortVisibleChoices = function(array) {};

/**
 * @param {!Array<!Survey.ItemValue>} array
 * @param {number} mult
 * @return {!Array<!Survey.ItemValue>}
 */
Survey.QuestionSelectBase.prototype.sortArray = function(array, mult) {};

/**
 * @param {!Array<!Survey.ItemValue>} array
 * @return {!Array<!Survey.ItemValue>}
 */
Survey.QuestionSelectBase.prototype.randomizeArray = function(array) {};

/**
 * @constructor
 * @struct
 * @param {string} name
 */
Survey.QuestionCheckboxBase = function(name) {};
 /** @type {string} */
Survey.QuestionCheckboxBase.prototype.name;
 /** @type {?} */
Survey.QuestionCheckboxBase.prototype.colCountValue;
 /** @type {function(): void} */
Survey.QuestionCheckboxBase.prototype.colCountChangedCallback;
 /** @type {number} */
Survey.QuestionCheckboxBase.prototype.colCount;

/**
 * @constructor
 * @struct
 * @param {string} name
 */
Survey.QuestionCheckboxModel = function(name) {};
 /** @type {string} */
Survey.QuestionCheckboxModel.prototype.name;
 /** @type {boolean} */
Survey.QuestionCheckboxModel.prototype.isOtherSelected;

/**
 * @return {string}
 */
Survey.QuestionCheckboxModel.prototype.getType = function() {};

/**
 * @constructor
 * @struct
 * @param {string} name
 */
Survey.QuestionCommentModel = function(name) {};
 /** @type {string} */
Survey.QuestionCommentModel.prototype.name;
 /** @type {number} */
Survey.QuestionCommentModel.prototype.rows;
 /** @type {number} */
Survey.QuestionCommentModel.prototype.cols;

/**
 * @return {string}
 */
Survey.QuestionCommentModel.prototype.getType = function() {};

/**
 * @return {boolean}
 */
Survey.QuestionCommentModel.prototype.isEmpty = function() {};

/**
 * @constructor
 * @struct
 * @param {string} name
 */
Survey.QuestionDropdownModel = function(name) {};
 /** @type {string} */
Survey.QuestionDropdownModel.prototype.name;
 /** @type {?} */
Survey.QuestionDropdownModel.prototype.optionsCaptionValue;
 /** @type {string} */
Survey.QuestionDropdownModel.prototype.optionsCaption;

/**
 * @return {string}
 */
Survey.QuestionDropdownModel.prototype.getType = function() {};

/**
 * @constructor
 * @struct
 * @param {string} name
 */
Survey.QuestionHtmlModel = function(name) {};
 /** @type {string} */
Survey.QuestionHtmlModel.prototype.name;
 /** @type {?} */
Survey.QuestionHtmlModel.prototype.htmlValue;
 /** @type {string} */
Survey.QuestionHtmlModel.prototype.html;
 /** @type {string} */
Survey.QuestionHtmlModel.prototype.processedHtml;

/**
 * @return {string}
 */
Survey.QuestionHtmlModel.prototype.getType = function() {};
/**
 * @record
 * @struct
 */
Survey.IMatrixData = function() {};

/**
 * @param {!Survey.MatrixRowModel} row
 * @return {?}
 */
Survey.IMatrixData.prototype.onMatrixRowChanged = function(row) {};

/**
 * @constructor
 * @struct
 * @param {?} name
 * @param {string} text
 * @param {string} fullName
 * @param {!Survey.IMatrixData} data
 * @param {?} value
 */
Survey.MatrixRowModel = function(name, text, fullName, data, value) {};
 /** @type {?} */
Survey.MatrixRowModel.prototype.name;
 /** @type {string} */
Survey.MatrixRowModel.prototype.text;
 /** @type {string} */
Survey.MatrixRowModel.prototype.fullName;
 /** @type {?} */
Survey.MatrixRowModel.prototype.data;
 /** @type {?} */
Survey.MatrixRowModel.prototype.rowValue;
 /** @type {?} */
Survey.MatrixRowModel.prototype.value;

/**
 * @return {void}
 */
Survey.MatrixRowModel.prototype.onValueChanged = function() {};

/**
 * @constructor
 * @struct
 * @param {string} name
 */
Survey.QuestionMatrixModel = function(name) {};
 /** @type {string} */
Survey.QuestionMatrixModel.prototype.name;
 /** @type {?} */
Survey.QuestionMatrixModel.prototype.columnsValue;
 /** @type {?} */
Survey.QuestionMatrixModel.prototype.rowsValue;
 /** @type {?} */
Survey.QuestionMatrixModel.prototype.isRowChanging;
 /** @type {?} */
Survey.QuestionMatrixModel.prototype.generatedVisibleRows;
 /** @type {boolean} */
Survey.QuestionMatrixModel.prototype.hasRows;
 /** @type {!Array<?>} */
Survey.QuestionMatrixModel.prototype.columns;
 /** @type {!Array<?>} */
Survey.QuestionMatrixModel.prototype.rows;
 /** @type {!Array<!Survey.MatrixRowModel>} */
Survey.QuestionMatrixModel.prototype.visibleRows;

/**
 * @return {string}
 */
Survey.QuestionMatrixModel.prototype.getType = function() {};

/**
 * @param {?} name
 * @param {string} text
 * @param {string} fullName
 * @param {?} value
 * @return {!Survey.MatrixRowModel}
 */
Survey.QuestionMatrixModel.prototype.createMatrixRow = function(name, text, fullName, value) {};

/**
 * @return {void}
 */
Survey.QuestionMatrixModel.prototype.onValueChanged = function() {};

/**
 * @param {!Survey.MatrixRowModel} row
 * @return {void}
 */
Survey.QuestionMatrixModel.prototype.onMatrixRowChanged = function(row) {};

/**
 * @constructor
 * @struct
 * @param {string} name
 */
Survey.QuestionRadiogroupModel = function(name) {};
 /** @type {string} */
Survey.QuestionRadiogroupModel.prototype.name;

/**
 * @return {string}
 */
Survey.QuestionRadiogroupModel.prototype.getType = function() {};

/**
 * @constructor
 * @struct
 * @param {string} name
 */
Survey.QuestionTextModel = function(name) {};
 /** @type {string} */
Survey.QuestionTextModel.prototype.name;
 /** @type {number} */
Survey.QuestionTextModel.prototype.size;

/**
 * @return {string}
 */
Survey.QuestionTextModel.prototype.getType = function() {};

/**
 * @return {boolean}
 */
Survey.QuestionTextModel.prototype.isEmpty = function() {};
/**
 * @record
 * @struct
 */
Survey.IMatrixDropdownData = function() {};
 /** @type {!Array<!Survey.MatrixDropdownColumn>} */
Survey.IMatrixDropdownData.prototype.columns;
 /** @type {!Array<?>} */
Survey.IMatrixDropdownData.prototype.choices;
 /** @type {string} */
Survey.IMatrixDropdownData.prototype.optionsCaption;

/**
 * @param {!Survey.MatrixDropdownCellModel} cell
 * @return {?}
 */
Survey.IMatrixDropdownData.prototype.onCellChanged = function(cell) {};

/**
 * @constructor
 * @struct
 * @param {string} name
 * @param {string=} title
 */
Survey.MatrixDropdownColumn = function(name, title) {};
 /** @type {string} */
Survey.MatrixDropdownColumn.prototype.name;
 /** @type {?} */
Survey.MatrixDropdownColumn.prototype.choicesValue;
 /** @type {?} */
Survey.MatrixDropdownColumn.prototype.titleValue;
 /** @type {string} */
Survey.MatrixDropdownColumn.prototype.optionsCaption;
 /** @type {?} */
Survey.MatrixDropdownColumn.prototype.cellTypeValue;
 /** @type {?} */
Survey.MatrixDropdownColumn.prototype.colCountValue;
 /** @type {string} */
Survey.MatrixDropdownColumn.prototype.title;
 /** @type {!Array<?>} */
Survey.MatrixDropdownColumn.prototype.choices;
 /** @type {string} */
Survey.MatrixDropdownColumn.prototype.cellType;
 /** @type {number} */
Survey.MatrixDropdownColumn.prototype.colCount;

/**
 * @return {string}
 */
Survey.MatrixDropdownColumn.prototype.getType = function() {};

/**
 * @constructor
 * @struct
 * @param {!Survey.MatrixDropdownColumn} column
 * @param {!Survey.MatrixDropdownRowModel} row
 * @param {!Survey.IMatrixDropdownData} data
 * @param {?} value
 */
Survey.MatrixDropdownCellModel = function(column, row, data, value) {};
 /** @type {!Survey.MatrixDropdownColumn} */
Survey.MatrixDropdownCellModel.prototype.column;
 /** @type {!Survey.MatrixDropdownRowModel} */
Survey.MatrixDropdownCellModel.prototype.row;
 /** @type {?} */
Survey.MatrixDropdownCellModel.prototype.data;
 /** @type {?} */
Survey.MatrixDropdownCellModel.prototype.questionValue;
 /** @type {!Array<?>} */
Survey.MatrixDropdownCellModel.prototype.choices;
 /** @type {string} */
Survey.MatrixDropdownCellModel.prototype.optionsCaption;
 /** @type {!Survey.Question} */
Survey.MatrixDropdownCellModel.prototype.question;
 /** @type {?} */
Survey.MatrixDropdownCellModel.prototype.value;

/**
 * @return {void}
 */
Survey.MatrixDropdownCellModel.prototype.onValueChanged = function() {};

/**
 * @return {!Survey.Question}
 */
Survey.MatrixDropdownCellModel.prototype.createQuestion = function() {};

/**
 * @param {string} name
 * @return {!Survey.QuestionDropdownModel}
 */
Survey.MatrixDropdownCellModel.prototype.createDropdown = function(name) {};

/**
 * @param {string} name
 * @return {!Survey.QuestionCheckboxModel}
 */
Survey.MatrixDropdownCellModel.prototype.createCheckbox = function(name) {};

/**
 * @param {string} name
 * @return {!Survey.QuestionRadiogroupModel}
 */
Survey.MatrixDropdownCellModel.prototype.createRadiogroup = function(name) {};

/**
 * @param {string} name
 * @return {!Survey.QuestionTextModel}
 */
Survey.MatrixDropdownCellModel.prototype.createText = function(name) {};

/**
 * @param {string} name
 * @return {!Survey.QuestionCommentModel}
 */
Survey.MatrixDropdownCellModel.prototype.createComment = function(name) {};

/**
 * @param {string} name
 * @return {!Survey.QuestionDropdownModel}
 */
Survey.MatrixDropdownCellModel.prototype.createDropdownCore = function(name) {};

/**
 * @param {string} name
 * @return {!Survey.QuestionCheckboxModel}
 */
Survey.MatrixDropdownCellModel.prototype.createCheckboxCore = function(name) {};

/**
 * @param {string} name
 * @return {!Survey.QuestionRadiogroupModel}
 */
Survey.MatrixDropdownCellModel.prototype.createRadiogroupCore = function(name) {};

/**
 * @return {string}
 */
Survey.MatrixDropdownCellModel.prototype.getQuestionName = function() {};

/**
 * @constructor
 * @struct
 * @param {?} name
 * @param {string} text
 * @param {!Survey.IMatrixDropdownData} data
 * @param {?} value
 */
Survey.MatrixDropdownRowModel = function(name, text, data, value) {};
 /** @type {?} */
Survey.MatrixDropdownRowModel.prototype.name;
 /** @type {string} */
Survey.MatrixDropdownRowModel.prototype.text;
 /** @type {!Survey.IMatrixDropdownData} */
Survey.MatrixDropdownRowModel.prototype.data;
 /** @type {?} */
Survey.MatrixDropdownRowModel.prototype.rowValue;
 /** @type {!Array<!Survey.MatrixDropdownCellModel>} */
Survey.MatrixDropdownRowModel.prototype.cells;
 /** @type {?} */
Survey.MatrixDropdownRowModel.prototype.value;

/**
 * @return {?}
 */
Survey.MatrixDropdownRowModel.prototype.buildCells = function() {};

/**
 * @param {!Survey.MatrixDropdownColumn} column
 * @param {?} value
 * @return {!Survey.MatrixDropdownCellModel}
 */
Survey.MatrixDropdownRowModel.prototype.createCell = function(column, value) {};

/**
 * @param {!Survey.MatrixDropdownColumn} column
 * @return {?}
 */
Survey.MatrixDropdownRowModel.prototype.getCellValue = function(column) {};

/**
 * @constructor
 * @struct
 * @param {string} name
 */
Survey.QuestionMatrixDropdownModel = function(name) {};
 /** @type {string} */
Survey.QuestionMatrixDropdownModel.prototype.name;
 /** @type {?} */
Survey.QuestionMatrixDropdownModel.prototype.columnsValue;
 /** @type {?} */
Survey.QuestionMatrixDropdownModel.prototype.rowsValue;
 /** @type {?} */
Survey.QuestionMatrixDropdownModel.prototype.choicesValue;
 /** @type {?} */
Survey.QuestionMatrixDropdownModel.prototype.optionsCaptionValue;
 /** @type {?} */
Survey.QuestionMatrixDropdownModel.prototype.isRowChanging;
 /** @type {?} */
Survey.QuestionMatrixDropdownModel.prototype.generatedVisibleRows;
 /** @type {!Array<!Survey.MatrixDropdownColumn>} */
Survey.QuestionMatrixDropdownModel.prototype.columns;
 /** @type {!Array<?>} */
Survey.QuestionMatrixDropdownModel.prototype.rows;
 /** @type {!Array<?>} */
Survey.QuestionMatrixDropdownModel.prototype.choices;
 /** @type {string} */
Survey.QuestionMatrixDropdownModel.prototype.optionsCaption;
 /** @type {!Array<!Survey.MatrixDropdownRowModel>} */
Survey.QuestionMatrixDropdownModel.prototype.visibleRows;

/**
 * @return {string}
 */
Survey.QuestionMatrixDropdownModel.prototype.getType = function() {};

/**
 * @param {string} name
 * @param {string=} title
 * @return {!Survey.MatrixDropdownColumn}
 */
Survey.QuestionMatrixDropdownModel.prototype.addColumn = function(name, title) {};

/**
 * @param {?} name
 * @param {string} text
 * @param {?} value
 * @return {!Survey.MatrixDropdownRowModel}
 */
Survey.QuestionMatrixDropdownModel.prototype.createMatrixRow = function(name, text, value) {};

/**
 * @return {void}
 */
Survey.QuestionMatrixDropdownModel.prototype.onValueChanged = function() {};

/**
 * @param {!Survey.MatrixDropdownCellModel} cell
 * @return {void}
 */
Survey.QuestionMatrixDropdownModel.prototype.onCellChanged = function(cell) {};
/**
 * @record
 * @struct
 */
Survey.IMultipleTextData = function() {};

/**
 * @param {string} name
 * @return {?}
 */
Survey.IMultipleTextData.prototype.getMultipleTextValue = function(name) {};

/**
 * @param {string} name
 * @param {?} value
 * @return {?}
 */
Survey.IMultipleTextData.prototype.setMultipleTextValue = function(name, value) {};

/**
 * @constructor
 * @struct
 * @param {?=} name
 * @param {string=} title
 */
Survey.MultipleTextItemModel = function(name, title) {};
 /** @type {?} */
Survey.MultipleTextItemModel.prototype.name;
 /** @type {?} */
Survey.MultipleTextItemModel.prototype.data;
 /** @type {?} */
Survey.MultipleTextItemModel.prototype.titleValue;
 /** @type {!Array<!Survey.SurveyValidator>} */
Survey.MultipleTextItemModel.prototype.validators;
 /** @type {string} */
Survey.MultipleTextItemModel.prototype.title;
 /** @type {?} */
Survey.MultipleTextItemModel.prototype.value;

/**
 * @return {string}
 */
Survey.MultipleTextItemModel.prototype.getType = function() {};

/**
 * @param {!Survey.IMultipleTextData} data
 * @return {void}
 */
Survey.MultipleTextItemModel.prototype.setData = function(data) {};

/**
 * @param {?} newValue
 * @return {void}
 */
Survey.MultipleTextItemModel.prototype.onValueChanged = function(newValue) {};

/**
 * @return {string}
 */
Survey.MultipleTextItemModel.prototype.getValidatorTitle = function() {};

/**
 * @constructor
 * @struct
 * @param {string} name
 */
Survey.QuestionMultipleTextModel = function(name) {};
 /** @type {string} */
Survey.QuestionMultipleTextModel.prototype.name;
 /** @type {?} */
Survey.QuestionMultipleTextModel.prototype.colCountValue;
 /** @type {function(): void} */
Survey.QuestionMultipleTextModel.prototype.colCountChangedCallback;
 /** @type {number} */
Survey.QuestionMultipleTextModel.prototype.itemSize;
 /** @type {?} */
Survey.QuestionMultipleTextModel.prototype.itemsValues;
 /** @type {!Array<!Survey.MultipleTextItemModel>} */
Survey.QuestionMultipleTextModel.prototype.items;
 /** @type {number} */
Survey.QuestionMultipleTextModel.prototype.colCount;
 /** @type {?} */
Survey.QuestionMultipleTextModel.prototype.isMultipleItemValueChanging;

/**
 * @return {string}
 */
Survey.QuestionMultipleTextModel.prototype.getType = function() {};

/**
 * @param {string} name
 * @param {string=} title
 * @return {!Survey.MultipleTextItemModel}
 */
Survey.QuestionMultipleTextModel.prototype.AddItem = function(name, title) {};

/**
 * @return {!Array<?>}
 */
Survey.QuestionMultipleTextModel.prototype.getRows = function() {};

/**
 * @return {void}
 */
Survey.QuestionMultipleTextModel.prototype.onValueChanged = function() {};

/**
 * @param {string} name
 * @param {string} title
 * @return {!Survey.MultipleTextItemModel}
 */
Survey.QuestionMultipleTextModel.prototype.createTextItem = function(name, title) {};

/**
 * @return {void}
 */
Survey.QuestionMultipleTextModel.prototype.onItemValueChanged = function() {};

/**
 * @return {!Survey.SurveyError}
 */
Survey.QuestionMultipleTextModel.prototype.runValidators = function() {};

/**
 * @param {string} name
 * @return {?}
 */
Survey.QuestionMultipleTextModel.prototype.getMultipleTextValue = function(name) {};

/**
 * @param {string} name
 * @param {?} value
 * @return {void}
 */
Survey.QuestionMultipleTextModel.prototype.setMultipleTextValue = function(name, value) {};

/**
 * @constructor
 * @struct
 * @param {string} name
 */
Survey.QuestionRatingModel = function(name) {};
 /** @type {string} */
Survey.QuestionRatingModel.prototype.name;
 /** @type {!Array<!Survey.ItemValue>} */
Survey.QuestionRatingModel.defaultRateValues;
 /** @type {?} */
Survey.QuestionRatingModel.prototype.rates;
 /** @type {string} */
Survey.QuestionRatingModel.prototype.mininumRateDescription;
 /** @type {string} */
Survey.QuestionRatingModel.prototype.maximumRateDescription;
 /** @type {function(): void} */
Survey.QuestionRatingModel.prototype.rateValuesChangedCallback;
 /** @type {!Array<?>} */
Survey.QuestionRatingModel.prototype.rateValues;
 /** @type {!Array<!Survey.ItemValue>} */
Survey.QuestionRatingModel.prototype.visibleRateValues;

/**
 * @return {string}
 */
Survey.QuestionRatingModel.prototype.getType = function() {};

/**
 * @return {boolean}
 */
Survey.QuestionRatingModel.prototype.supportComment = function() {};

/**
 * @return {boolean}
 */
Survey.QuestionRatingModel.prototype.supportOther = function() {};

/**
 * @constructor
 * @struct
 */
Survey.Trigger = function() {};
 /** @type {!Survey.HashTable<!Function>} */
Survey.Trigger.operatorsValue;
 /** @type {!Survey.HashTable<!Function>} */
Survey.Trigger.operators;
 /** @type {?} */
Survey.Trigger.prototype.opValue;
 /** @type {?} */
Survey.Trigger.prototype.value;
 /** @type {string} */
Survey.Trigger.prototype.operator;

/**
 * @param {?} value
 * @return {void}
 */
Survey.Trigger.prototype.check = function(value) {};

/**
 * @return {void}
 */
Survey.Trigger.prototype.onSuccess = function() {};

/**
 * @return {void}
 */
Survey.Trigger.prototype.onFailure = function() {};
/**
 * @record
 * @struct
 */
Survey.ISurveyTriggerOwner = function() {};

/**
 * @param {!Array<string>} pages
 * @param {!Array<string>} questions
 * @return {!Array<?>}
 */
Survey.ISurveyTriggerOwner.prototype.getObjects = function(pages, questions) {};

/**
 * @return {?}
 */
Survey.ISurveyTriggerOwner.prototype.doComplete = function() {};

/**
 * @param {string} name
 * @param {?} value
 * @param {boolean} isVariable
 * @return {?}
 */
Survey.ISurveyTriggerOwner.prototype.setTriggerValue = function(name, value, isVariable) {};

/**
 * @constructor
 * @struct
 */
Survey.SurveyTrigger = function() {};
 /** @type {string} */
Survey.SurveyTrigger.prototype.name;
 /** @type {!Survey.ISurveyTriggerOwner} */
Survey.SurveyTrigger.prototype.owner;
 /** @type {boolean} */
Survey.SurveyTrigger.prototype.isOnNextPage;

/**
 * @param {!Survey.ISurveyTriggerOwner} owner
 * @return {void}
 */
Survey.SurveyTrigger.prototype.setOwner = function(owner) {};

/**
 * @constructor
 * @struct
 */
Survey.SurveyTriggerVisible = function() {};
 /** @type {!Array<string>} */
Survey.SurveyTriggerVisible.prototype.pages;
 /** @type {!Array<string>} */
Survey.SurveyTriggerVisible.prototype.questions;

/**
 * @return {string}
 */
Survey.SurveyTriggerVisible.prototype.getType = function() {};

/**
 * @return {void}
 */
Survey.SurveyTriggerVisible.prototype.onSuccess = function() {};

/**
 * @return {void}
 */
Survey.SurveyTriggerVisible.prototype.onFailure = function() {};

/**
 * @param {?} func
 * @return {?}
 */
Survey.SurveyTriggerVisible.prototype.onTrigger = function(func) {};

/**
 * @param {?} item
 * @return {void}
 */
Survey.SurveyTriggerVisible.prototype.onItemSuccess = function(item) {};

/**
 * @param {?} item
 * @return {void}
 */
Survey.SurveyTriggerVisible.prototype.onItemFailure = function(item) {};

/**
 * @constructor
 * @struct
 */
Survey.SurveyTriggerComplete = function() {};
 /** @type {boolean} */
Survey.SurveyTriggerComplete.prototype.isOnNextPage;

/**
 * @return {string}
 */
Survey.SurveyTriggerComplete.prototype.getType = function() {};

/**
 * @return {void}
 */
Survey.SurveyTriggerComplete.prototype.onSuccess = function() {};

/**
 * @constructor
 * @struct
 */
Survey.SurveyTriggerSetValue = function() {};
 /** @type {string} */
Survey.SurveyTriggerSetValue.prototype.setToName;
 /** @type {?} */
Survey.SurveyTriggerSetValue.prototype.setValue;
 /** @type {boolean} */
Survey.SurveyTriggerSetValue.prototype.isVariable;

/**
 * @return {string}
 */
Survey.SurveyTriggerSetValue.prototype.getType = function() {};

/**
 * @return {void}
 */
Survey.SurveyTriggerSetValue.prototype.onSuccess = function() {};

/**
 * @constructor
 * @struct
 */
Survey.TextPreProcessor = function() {};
 /** @type {function(string): ?} */
Survey.TextPreProcessor.prototype.onProcess;
 /** @type {function(string): boolean} */
Survey.TextPreProcessor.prototype.onHasValue;

/**
 * @param {string} text
 * @return {string}
 */
Survey.TextPreProcessor.prototype.process = function(text) {};

/**
 * @param {?} text
 * @return {?}
 */
Survey.TextPreProcessor.prototype.getItems = function(text) {};

/**
 * @param {?} name
 * @return {?}
 */
Survey.TextPreProcessor.prototype.getName = function(name) {};

/**
 * @param {?} name
 * @return {?}
 */
Survey.TextPreProcessor.prototype.canProcessName = function(name) {};

/**
 * @constructor
 * @struct
 * @param {?=} jsonObj
 */
Survey.SurveyModel = function(jsonObj) {};
 /** @type {string} */
Survey.SurveyModel.prototype.surveyId;
 /** @type {string} */
Survey.SurveyModel.prototype.surveyPostId;
 /** @type {string} */
Survey.SurveyModel.prototype.clientId;
 /** @type {string} */
Survey.SurveyModel.prototype.cookieName;
 /** @type {boolean} */
Survey.SurveyModel.prototype.sendResultOnPageNext;
 /** @type {string} */
Survey.SurveyModel.prototype.commentPrefix;
 /** @type {string} */
Survey.SurveyModel.prototype.title;
 /** @type {boolean} */
Survey.SurveyModel.prototype.showNavigationButtons;
 /** @type {boolean} */
Survey.SurveyModel.prototype.showTitle;
 /** @type {boolean} */
Survey.SurveyModel.prototype.showPageTitles;
 /** @type {string} */
Survey.SurveyModel.prototype.completedHtml;
 /** @type {string} */
Survey.SurveyModel.prototype.requiredText;
 /** @type {string} */
Survey.SurveyModel.prototype.showProgressBar;
 /** @type {!Array<!Survey.PageModel>} */
Survey.SurveyModel.prototype.pages;
 /** @type {!Array<!Survey.SurveyTrigger>} */
Survey.SurveyModel.prototype.triggers;
 /** @type {?} */
Survey.SurveyModel.prototype.currentPageValue;
 /** @type {?} */
Survey.SurveyModel.prototype.valuesHash;
 /** @type {?} */
Survey.SurveyModel.prototype.variablesHash;
 /** @type {?} */
Survey.SurveyModel.prototype.pagePrevTextValue;
 /** @type {?} */
Survey.SurveyModel.prototype.pageNextTextValue;
 /** @type {?} */
Survey.SurveyModel.prototype.completeTextValue;
 /** @type {?} */
Survey.SurveyModel.prototype.showPageNumbersValue;
 /** @type {?} */
Survey.SurveyModel.prototype.showQuestionNumbersValue;
 /** @type {?} */
Survey.SurveyModel.prototype.localeValue;
 /** @type {?} */
Survey.SurveyModel.prototype.isCompleted;
 /** @type {?} */
Survey.SurveyModel.prototype.isLoading;
 /** @type {?} */
Survey.SurveyModel.prototype.processedTextValues;
 /** @type {?} */
Survey.SurveyModel.prototype.textPreProcessor;
 /** @type {!Survey.Event<function(!Survey.SurveyModel): ?, ?>} */
Survey.SurveyModel.prototype.onComplete;
 /** @type {!Survey.Event<function(!Survey.SurveyModel, ?): ?, ?>} */
Survey.SurveyModel.prototype.onCurrentPageChanged;
 /** @type {!Survey.Event<function(!Survey.SurveyModel, ?): ?, ?>} */
Survey.SurveyModel.prototype.onValueChanged;
 /** @type {!Survey.Event<function(!Survey.SurveyModel, ?): ?, ?>} */
Survey.SurveyModel.prototype.onVisibleChanged;
 /** @type {!Survey.Event<function(!Survey.SurveyModel, ?): ?, ?>} */
Survey.SurveyModel.prototype.onPageVisibleChanged;
 /** @type {!Survey.Event<function(!Survey.SurveyModel, ?): ?, ?>} */
Survey.SurveyModel.prototype.onQuestionAdded;
 /** @type {!Survey.Event<function(!Survey.SurveyModel, ?): ?, ?>} */
Survey.SurveyModel.prototype.onQuestionRemoved;
 /** @type {!Survey.Event<function(!Survey.SurveyModel, ?): ?, ?>} */
Survey.SurveyModel.prototype.onValidateQuestion;
 /** @type {!Survey.Event<function(!Survey.SurveyModel, ?): ?, ?>} */
Survey.SurveyModel.prototype.onProcessHtml;
 /** @type {!Survey.Event<function(!Survey.SurveyModel, ?): ?, ?>} */
Survey.SurveyModel.prototype.onSendResult;
 /** @type {!Survey.Event<function(!Survey.SurveyModel, ?): ?, ?>} */
Survey.SurveyModel.prototype.onGetResult;
 /** @type {!Array<!Survey.JsonError>} */
Survey.SurveyModel.prototype.jsonErrors;
 /** @type {string} */
Survey.SurveyModel.prototype.mode;
 /** @type {string} */
Survey.SurveyModel.prototype.locale;
 /** @type {string} */
Survey.SurveyModel.prototype.emptySurveyText;
 /** @type {string} */
Survey.SurveyModel.prototype.pagePrevText;
 /** @type {string} */
Survey.SurveyModel.prototype.pageNextText;
 /** @type {string} */
Survey.SurveyModel.prototype.completeText;
 /** @type {boolean} */
Survey.SurveyModel.prototype.showPageNumbers;
 /** @type {string} */
Survey.SurveyModel.prototype.showQuestionNumbers;
 /** @type {?} */
Survey.SurveyModel.prototype.data;
 /** @type {?} */
Survey.SurveyModel.prototype.comments;
 /** @type {!Array<!Survey.PageModel>} */
Survey.SurveyModel.prototype.visiblePages;
 /** @type {boolean} */
Survey.SurveyModel.prototype.isEmpty;
 /** @type {number} */
Survey.SurveyModel.prototype.PageCount;
 /** @type {number} */
Survey.SurveyModel.prototype.visiblePageCount;
 /** @type {!Survey.PageModel} */
Survey.SurveyModel.prototype.currentPage;
 /** @type {string} */
Survey.SurveyModel.prototype.state;
 /** @type {boolean} */
Survey.SurveyModel.prototype.isDesignMode;
 /** @type {boolean} */
Survey.SurveyModel.prototype.hasCookie;
 /** @type {boolean} */
Survey.SurveyModel.prototype.isCurrentPageHasErrors;
 /** @type {boolean} */
Survey.SurveyModel.prototype.isFirstPage;
 /** @type {boolean} */
Survey.SurveyModel.prototype.isLastPage;
 /** @type {string} */
Survey.SurveyModel.prototype.processedCompletedHtml;
 /** @type {string} */
Survey.SurveyModel.prototype.processedLoadingHtml;
 /** @type {string} */
Survey.SurveyModel.prototype.progressText;

/**
 * @return {string}
 */
Survey.SurveyModel.prototype.getType = function() {};

/**
 * @param {string} str
 * @return {?}
 */
Survey.SurveyModel.prototype.getLocString = function(str) {};

/**
 * @return {void}
 */
Survey.SurveyModel.prototype.clear = function() {};

/**
 * @param {?} src
 * @param {?} dest
 * @return {void}
 */
Survey.SurveyModel.prototype.mergeValues = function(src, dest) {};

/**
 * @param {!Survey.PageModel} newValue
 * @param {!Survey.PageModel} oldValue
 * @return {void}
 */
Survey.SurveyModel.prototype.currentPageChanged = function(newValue, oldValue) {};

/**
 * @return {number}
 */
Survey.SurveyModel.prototype.getProgress = function() {};

/**
 * @return {void}
 */
Survey.SurveyModel.prototype.setCookie = function() {};

/**
 * @return {void}
 */
Survey.SurveyModel.prototype.deleteCookie = function() {};

/**
 * @return {boolean}
 */
Survey.SurveyModel.prototype.nextPage = function() {};

/**
 * @return {boolean}
 */
Survey.SurveyModel.prototype.prevPage = function() {};

/**
 * @return {boolean}
 */
Survey.SurveyModel.prototype.completeLastPage = function() {};

/**
 * @return {void}
 */
Survey.SurveyModel.prototype.doComplete = function() {};

/**
 * @return {void}
 */
Survey.SurveyModel.prototype.setCompleted = function() {};

/**
 * @param {number} index
 * @return {!Survey.PageModel}
 */
Survey.SurveyModel.prototype.getPage = function(index) {};

/**
 * @param {!Survey.PageModel} page
 * @return {void}
 */
Survey.SurveyModel.prototype.addPage = function(page) {};

/**
 * @param {string} name
 * @return {!Survey.PageModel}
 */
Survey.SurveyModel.prototype.addNewPage = function(name) {};

/**
 * @param {!Survey.PageModel} page
 * @return {void}
 */
Survey.SurveyModel.prototype.removePage = function(page) {};

/**
 * @param {string} name
 * @param {boolean=} caseInsensitive
 * @return {!Survey.IQuestion}
 */
Survey.SurveyModel.prototype.getQuestionByName = function(name, caseInsensitive) {};

/**
 * @param {!Array<string>} names
 * @param {boolean=} caseInsensitive
 * @return {!Array<!Survey.IQuestion>}
 */
Survey.SurveyModel.prototype.getQuestionsByNames = function(names, caseInsensitive) {};

/**
 * @param {!Survey.IQuestion} question
 * @return {!Survey.PageModel}
 */
Survey.SurveyModel.prototype.getPageByQuestion = function(question) {};

/**
 * @param {string} name
 * @return {!Survey.PageModel}
 */
Survey.SurveyModel.prototype.getPageByName = function(name) {};

/**
 * @param {!Array<string>} names
 * @return {!Array<!Survey.PageModel>}
 */
Survey.SurveyModel.prototype.getPagesByNames = function(names) {};

/**
 * @param {boolean=} visibleOnly
 * @return {!Array<!Survey.IQuestion>}
 */
Survey.SurveyModel.prototype.getAllQuestions = function(visibleOnly) {};

/**
 * @param {string} name
 * @return {!Survey.PageModel}
 */
Survey.SurveyModel.prototype.createNewPage = function(name) {};

/**
 * @param {?} name
 * @param {?} newValue
 * @return {?}
 */
Survey.SurveyModel.prototype.notifyQuestionOnValueChanged = function(name, newValue) {};

/**
 * @return {?}
 */
Survey.SurveyModel.prototype.notifyAllQuestionsOnValueChanged = function() {};

/**
 * @param {!Survey.IQuestion} question
 * @param {?} newValue
 * @return {void}
 */
Survey.SurveyModel.prototype.doSurveyValueChanged = function(question, newValue) {};

/**
 * @return {?}
 */
Survey.SurveyModel.prototype.checkOnPageTriggers = function() {};

/**
 * @param {?} name
 * @param {?} newValue
 * @param {?} isOnNextPage
 * @return {?}
 */
Survey.SurveyModel.prototype.checkTriggers = function(name, newValue, isOnNextPage) {};

/**
 * @param {string=} postId
 * @param {string=} clientId
 * @param {boolean=} isPartialCompleted
 * @return {void}
 */
Survey.SurveyModel.prototype.sendResult = function(postId, clientId, isPartialCompleted) {};

/**
 * @param {string} resultId
 * @param {string} name
 * @return {void}
 */
Survey.SurveyModel.prototype.getResult = function(resultId, name) {};

/**
 * @param {string=} surveyId
 * @return {void}
 */
Survey.SurveyModel.prototype.loadSurveyFromService = function(surveyId) {};

/**
 * @return {void}
 */
Survey.SurveyModel.prototype.onLoadingSurveyFromService = function() {};

/**
 * @return {void}
 */
Survey.SurveyModel.prototype.onLoadSurveyFromService = function() {};

/**
 * @return {?}
 */
Survey.SurveyModel.prototype.updateVisibleIndexes = function() {};

/**
 * @param {?} showIndex
 * @return {?}
 */
Survey.SurveyModel.prototype.updatePageVisibleIndexes = function(showIndex) {};

/**
 * @param {?} questions
 * @param {?} showIndex
 * @return {?}
 */
Survey.SurveyModel.prototype.updateQuestionVisibleIndexes = function(questions, showIndex) {};

/**
 * @param {?} jsonObj
 * @return {?}
 */
Survey.SurveyModel.prototype.setJsonObject = function(jsonObj) {};

/**
 * @return {void}
 */
Survey.SurveyModel.prototype.onBeforeCreating = function() {};

/**
 * @return {void}
 */
Survey.SurveyModel.prototype.onCreating = function() {};

/**
 * @return {?}
 */
Survey.SurveyModel.prototype.updateProcessedTextValues = function() {};

/**
 * @param {?} question
 * @return {?}
 */
Survey.SurveyModel.prototype.addQuestionToProcessedTextValues = function(question) {};

/**
 * @param {?} name
 * @return {?}
 */
Survey.SurveyModel.prototype.getProcessedTextValue = function(name) {};

/**
 * @param {string} name
 * @return {?}
 */
Survey.SurveyModel.prototype.getVariable = function(name) {};

/**
 * @param {string} name
 * @param {?} newValue
 * @return {void}
 */
Survey.SurveyModel.prototype.setVariable = function(name, newValue) {};

/**
 * @param {string} name
 * @return {?}
 */
Survey.SurveyModel.prototype.getValue = function(name) {};

/**
 * @param {string} name
 * @param {?} newValue
 * @return {void}
 */
Survey.SurveyModel.prototype.setValue = function(name, newValue) {};

/**
 * @param {string} name
 * @return {string}
 */
Survey.SurveyModel.prototype.getComment = function(name) {};

/**
 * @param {string} name
 * @param {string} newValue
 * @return {void}
 */
Survey.SurveyModel.prototype.setComment = function(name, newValue) {};

/**
 * @param {!Survey.IQuestion} question
 * @param {boolean} newValue
 * @return {void}
 */
Survey.SurveyModel.prototype.questionVisibilityChanged = function(question, newValue) {};

/**
 * @param {!Survey.IPage} page
 * @param {boolean} newValue
 * @return {void}
 */
Survey.SurveyModel.prototype.pageVisibilityChanged = function(page, newValue) {};

/**
 * @param {!Survey.IQuestion} question
 * @param {number} index
 * @return {void}
 */
Survey.SurveyModel.prototype.questionAdded = function(question, index) {};

/**
 * @param {!Survey.IQuestion} question
 * @return {void}
 */
Survey.SurveyModel.prototype.questionRemoved = function(question) {};

/**
 * @param {string} name
 * @return {!Survey.SurveyError}
 */
Survey.SurveyModel.prototype.validateQuestion = function(name) {};

/**
 * @param {string} html
 * @return {string}
 */
Survey.SurveyModel.prototype.processHtml = function(html) {};

/**
 * @param {string} text
 * @return {string}
 */
Survey.SurveyModel.prototype.processText = function(text) {};

/**
 * @param {!Array<string>} pages
 * @param {!Array<string>} questions
 * @return {!Array<?>}
 */
Survey.SurveyModel.prototype.getObjects = function(pages, questions) {};

/**
 * @param {string} name
 * @param {?} value
 * @param {boolean} isVariable
 * @return {void}
 */
Survey.SurveyModel.prototype.setTriggerValue = function(name, value, isVariable) {};

/**
 * @constructor
 * @struct
 * @param {?} jsonObj
 */
Survey.SurveyWindowModel = function(jsonObj) {};
 /** @type {string} */
Survey.SurveyWindowModel.surveyElementName;
 /** @type {!Survey.SurveyModel} */
Survey.SurveyWindowModel.prototype.surveyValue;
 /** @type {!HTMLDivElement} */
Survey.SurveyWindowModel.prototype.windowElement;
 /** @type {boolean} */
Survey.SurveyWindowModel.prototype.isShowingValue;
 /** @type {boolean} */
Survey.SurveyWindowModel.prototype.isExpandedValue;
 /** @type {string} */
Survey.SurveyWindowModel.prototype.titleValue;
 /** @type {string} */
Survey.SurveyWindowModel.prototype.templateValue;
 /** @type {!Survey.SurveyModel} */
Survey.SurveyWindowModel.prototype.survey;
 /** @type {boolean} */
Survey.SurveyWindowModel.prototype.isShowing;
 /** @type {boolean} */
Survey.SurveyWindowModel.prototype.isExpanded;
 /** @type {string} */
Survey.SurveyWindowModel.prototype.title;

/**
 * @return {string}
 */
Survey.SurveyWindowModel.prototype.getType = function() {};

/**
 * @return {void}
 */
Survey.SurveyWindowModel.prototype.expand = function() {};

/**
 * @return {void}
 */
Survey.SurveyWindowModel.prototype.collapse = function() {};

/**
 * @param {?} jsonObj
 * @return {!Survey.SurveyModel}
 */
Survey.SurveyWindowModel.prototype.createSurvey = function(jsonObj) {};

/**
 * @param {boolean} value
 * @return {void}
 */
Survey.SurveyWindowModel.prototype.expandcollapse = function(value) {};

/**
 * @constructor
 * @struct
 * @param {string=} name
 */
Survey.Page = function(name) {};
 /** @type {?} */
Survey.Page.prototype.koNo;

/**
 * @return {void}
 */
Survey.Page.prototype.onCreating = function() {};

/**
 * @param {number} value
 * @return {void}
 */
Survey.Page.prototype.onNumChanged = function(value) {};

/**
 * @constructor
 * @struct
 * @param {!Survey.QuestionBase} question
 */
Survey.QuestionImplementorBase = function(question) {};
 /** @type {!Survey.QuestionBase} */
Survey.QuestionImplementorBase.prototype.question;
 /** @type {?} */
Survey.QuestionImplementorBase.prototype.koVisible;
 /** @type {?} */
Survey.QuestionImplementorBase.prototype.koNo;
 /** @type {?} */
Survey.QuestionImplementorBase.prototype.koErrors;

/**
 * @return {void}
 */
Survey.QuestionImplementorBase.prototype.onVisibilityChanged = function() {};

/**
 * @return {void}
 */
Survey.QuestionImplementorBase.prototype.onVisibleIndexChanged = function() {};

/**
 * @return {string}
 */
Survey.QuestionImplementorBase.prototype.getNo = function() {};

/**
 * @constructor
 * @struct
 * @param {!Survey.Question} question
 */
Survey.QuestionImplementor = function(question) {};
 /** @type {!Survey.Question} */
Survey.QuestionImplementor.prototype.question;
 /** @type {?} */
Survey.QuestionImplementor.prototype.isUpdating;
 /** @type {?} */
Survey.QuestionImplementor.prototype.koValue;
 /** @type {?} */
Survey.QuestionImplementor.prototype.koComment;

/**
 * @return {void}
 */
Survey.QuestionImplementor.prototype.onValueChanged = function() {};

/**
 * @return {void}
 */
Survey.QuestionImplementor.prototype.onCommentChanged = function() {};

/**
 * @return {void}
 */
Survey.QuestionImplementor.prototype.onVisibilityChanged = function() {};

/**
 * @return {void}
 */
Survey.QuestionImplementor.prototype.onVisibleIndexChanged = function() {};

/**
 * @return {void}
 */
Survey.QuestionImplementor.prototype.onErrorsChanged = function() {};

/**
 * @return {?}
 */
Survey.QuestionImplementor.prototype.createkoValue = function() {};

/**
 * @param {?} newValue
 * @return {void}
 */
Survey.QuestionImplementor.prototype.setkoValue = function(newValue) {};

/**
 * @param {?} newValue
 * @return {void}
 */
Survey.QuestionImplementor.prototype.updateValue = function(newValue) {};

/**
 * @param {?} newValue
 * @return {void}
 */
Survey.QuestionImplementor.prototype.updateComment = function(newValue) {};

/**
 * @return {string}
 */
Survey.QuestionImplementor.prototype.getNo = function() {};

/**
 * @constructor
 * @struct
 * @param {!Survey.Question} question
 */
Survey.QuestionSelectBaseImplementor = function(question) {};
 /** @type {?} */
Survey.QuestionSelectBaseImplementor.prototype.koOtherVisible;
 /** @type {boolean} */
Survey.QuestionSelectBaseImplementor.prototype.isOtherSelected;

/**
 * @constructor
 * @struct
 * @param {!Survey.Question} question
 */
Survey.QuestionCheckboxBaseImplementor = function(question) {};
 /** @type {?} */
Survey.QuestionCheckboxBaseImplementor.prototype.koWidth;
 /** @type {string} */
Survey.QuestionCheckboxBaseImplementor.prototype.colWidth;

/**
 * @return {void}
 */
Survey.QuestionCheckboxBaseImplementor.prototype.onColCountChanged = function() {};

/**
 * @param {?} el
 * @param {?} con
 * @return {?}
 */
Survey.QuestionCheckboxBaseImplementor.prototype.koAfterRender = function(el, con) {};

/**
 * @constructor
 * @struct
 * @param {string} name
 */
Survey.QuestionCheckbox = function(name) {};
 /** @type {string} */
Survey.QuestionCheckbox.prototype.name;

/**
 * @constructor
 * @struct
 * @param {string} name
 */
Survey.QuestionComment = function(name) {};
 /** @type {string} */
Survey.QuestionComment.prototype.name;

/**
 * @constructor
 * @struct
 * @param {string} name
 */
Survey.QuestionDropdown = function(name) {};
 /** @type {string} */
Survey.QuestionDropdown.prototype.name;

/**
 * @constructor
 * @struct
 * @param {string} name
 */
Survey.QuestionHtml = function(name) {};
 /** @type {string} */
Survey.QuestionHtml.prototype.name;

/**
 * @constructor
 * @struct
 * @param {?} name
 * @param {string} text
 * @param {string} fullName
 * @param {!Survey.IMatrixData} data
 * @param {?} value
 */
Survey.MatrixRow = function(name, text, fullName, data, value) {};
 /** @type {?} */
Survey.MatrixRow.prototype.name;
 /** @type {string} */
Survey.MatrixRow.prototype.text;
 /** @type {string} */
Survey.MatrixRow.prototype.fullName;
 /** @type {?} */
Survey.MatrixRow.prototype.isValueUpdating;
 /** @type {?} */
Survey.MatrixRow.prototype.koValue;

/**
 * @return {void}
 */
Survey.MatrixRow.prototype.onValueChanged = function() {};

/**
 * @constructor
 * @struct
 * @param {string} name
 */
Survey.QuestionMatrix = function(name) {};
 /** @type {string} */
Survey.QuestionMatrix.prototype.name;

/**
 * @param {?} name
 * @param {string} text
 * @param {string} fullName
 * @param {?} value
 * @return {!Survey.MatrixRowModel}
 */
Survey.QuestionMatrix.prototype.createMatrixRow = function(name, text, fullName, value) {};

/**
 * @constructor
 * @struct
 * @param {string} name
 */
Survey.QuestionRadiogroup = function(name) {};
 /** @type {string} */
Survey.QuestionRadiogroup.prototype.name;

/**
 * @constructor
 * @struct
 * @param {string} name
 */
Survey.QuestionText = function(name) {};
 /** @type {string} */
Survey.QuestionText.prototype.name;

/**
 * @constructor
 * @struct
 * @param {!Survey.MatrixDropdownColumn} column
 * @param {!Survey.MatrixDropdownRowModel} row
 * @param {!Survey.IMatrixDropdownData} data
 * @param {?} value
 */
Survey.MatrixDropdownCell = function(column, row, data, value) {};
 /** @type {!Survey.MatrixDropdownColumn} */
Survey.MatrixDropdownCell.prototype.column;
 /** @type {!Survey.MatrixDropdownRowModel} */
Survey.MatrixDropdownCell.prototype.row;

/**
 * @param {string} name
 * @return {!Survey.QuestionTextModel}
 */
Survey.MatrixDropdownCell.prototype.createText = function(name) {};

/**
 * @param {string} name
 * @return {!Survey.QuestionCommentModel}
 */
Survey.MatrixDropdownCell.prototype.createComment = function(name) {};

/**
 * @param {string} name
 * @return {!Survey.QuestionDropdownModel}
 */
Survey.MatrixDropdownCell.prototype.createDropdownCore = function(name) {};

/**
 * @param {string} name
 * @return {!Survey.QuestionCheckboxModel}
 */
Survey.MatrixDropdownCell.prototype.createCheckboxCore = function(name) {};

/**
 * @param {string} name
 * @return {!Survey.QuestionRadiogroupModel}
 */
Survey.MatrixDropdownCell.prototype.createRadiogroupCore = function(name) {};

/**
 * @constructor
 * @struct
 * @param {?} name
 * @param {string} text
 * @param {!Survey.IMatrixDropdownData} data
 * @param {?} value
 */
Survey.MatrixDropdownRow = function(name, text, data, value) {};
 /** @type {?} */
Survey.MatrixDropdownRow.prototype.name;
 /** @type {string} */
Survey.MatrixDropdownRow.prototype.text;

/**
 * @param {!Survey.MatrixDropdownColumn} column
 * @param {?} value
 * @return {!Survey.MatrixDropdownCellModel}
 */
Survey.MatrixDropdownRow.prototype.createCell = function(column, value) {};

/**
 * @constructor
 * @struct
 * @param {string} name
 */
Survey.QuestionMatrixDropdown = function(name) {};
 /** @type {string} */
Survey.QuestionMatrixDropdown.prototype.name;

/**
 * @param {?} name
 * @param {string} text
 * @param {?} value
 * @return {!Survey.MatrixDropdownRowModel}
 */
Survey.QuestionMatrixDropdown.prototype.createMatrixRow = function(name, text, value) {};

/**
 * @constructor
 * @struct
 * @param {?=} name
 * @param {string=} title
 */
Survey.MultipleTextItem = function(name, title) {};
 /** @type {?} */
Survey.MultipleTextItem.prototype.name;
 /** @type {?} */
Survey.MultipleTextItem.prototype.isKOValueUpdating;
 /** @type {?} */
Survey.MultipleTextItem.prototype.koValue;

/**
 * @param {?} newValue
 * @return {void}
 */
Survey.MultipleTextItem.prototype.onValueChanged = function(newValue) {};

/**
 * @constructor
 * @struct
 * @param {!Survey.Question} question
 */
Survey.QuestionMultipleTextImplementor = function(question) {};
 /** @type {?} */
Survey.QuestionMultipleTextImplementor.prototype.koRows;

/**
 * @return {void}
 */
Survey.QuestionMultipleTextImplementor.prototype.onColCountChanged = function() {};

/**
 * @constructor
 * @struct
 * @param {string} name
 */
Survey.QuestionMultipleText = function(name) {};
 /** @type {string} */
Survey.QuestionMultipleText.prototype.name;

/**
 * @param {string} name
 * @param {string} title
 * @return {!Survey.MultipleTextItemModel}
 */
Survey.QuestionMultipleText.prototype.createTextItem = function(name, title) {};

/**
 * @constructor
 * @struct
 * @param {string} name
 */
Survey.QuestionRating = function(name) {};
 /** @type {string} */
Survey.QuestionRating.prototype.name;
 /** @type {string} */
Survey.QuestionRating.prototype.itemCss;

/**
 * @return {void}
 */
Survey.QuestionRating.prototype.onSetData = function() {};

/**
 * @constructor
 * @struct
 * @param {?=} jsonObj
 * @param {?=} renderedElement
 * @param {?=} css
 */
Survey.SurveyBase = function(jsonObj, renderedElement, css) {};
 /** @type {?} */
Survey.SurveyBase.prototype.renderedElement;
 /** @type {?} */
Survey.SurveyBase.prototype.cssValue;
 /** @type {!Survey.Event<function(!Survey.SurveyModel): ?, ?>} */
Survey.SurveyBase.prototype.onRendered;
 /** @type {?} */
Survey.SurveyBase.prototype.koCurrentPage;
 /** @type {?} */
Survey.SurveyBase.prototype.koIsFirstPage;
 /** @type {?} */
Survey.SurveyBase.prototype.koIsLastPage;
 /** @type {?} */
Survey.SurveyBase.prototype.dummyObservable;
 /** @type {?} */
Survey.SurveyBase.prototype.koState;
 /** @type {?} */
Survey.SurveyBase.prototype.koProgress;
 /** @type {?} */
Survey.SurveyBase.prototype.koProgressText;
 /** @type {?} */
Survey.SurveyBase.prototype.css;

/**
 * @param {?=} element
 * @return {void}
 */
Survey.SurveyBase.prototype.render = function(element) {};

/**
 * @param {string=} surveyId
 * @param {?=} renderedElement
 * @return {void}
 */
Survey.SurveyBase.prototype.loadSurveyFromService = function(surveyId, renderedElement) {};

/**
 * @return {void}
 */
Survey.SurveyBase.prototype.setCompleted = function() {};

/**
 * @param {string} name
 * @return {!Survey.Page}
 */
Survey.SurveyBase.prototype.createNewPage = function(name) {};

/**
 * @return {?}
 */
Survey.SurveyBase.prototype.createCssObject = function() {};

/**
 * @return {string}
 */
Survey.SurveyBase.prototype.getTemplate = function() {};

/**
 * @return {void}
 */
Survey.SurveyBase.prototype.onBeforeCreating = function() {};

/**
 * @param {!Survey.PageModel} newValue
 * @param {!Survey.PageModel} oldValue
 * @return {void}
 */
Survey.SurveyBase.prototype.currentPageChanged = function(newValue, oldValue) {};

/**
 * @return {void}
 */
Survey.SurveyBase.prototype.onLoadSurveyFromService = function() {};

/**
 * @return {void}
 */
Survey.SurveyBase.prototype.onLoadingSurveyFromService = function() {};

/**
 * @return {?}
 */
Survey.SurveyBase.prototype.applyBinding = function() {};

/**
 * @return {?}
 */
Survey.SurveyBase.prototype.updateKoCurrentPage = function() {};

/**
 * @constructor
 * @struct
 * @param {?} jsonObj
 */
Survey.SurveyWindowBase = function(jsonObj) {};
 /** @type {?} */
Survey.SurveyWindowBase.prototype.koExpanded;
 /** @type {?} */
Survey.SurveyWindowBase.prototype.doExpand;
 /** @type {string} */
Survey.SurveyWindowBase.prototype.template;

/**
 * @param {?} jsonObj
 * @return {!Survey.SurveyModel}
 */
Survey.SurveyWindowBase.prototype.createSurvey = function(jsonObj) {};

/**
 * @param {boolean} value
 * @return {void}
 */
Survey.SurveyWindowBase.prototype.expandcollapse = function(value) {};

/**
 * @return {void}
 */
Survey.SurveyWindowBase.prototype.show = function() {};

/**
 * @return {string}
 */
Survey.SurveyWindowBase.prototype.getDefaultTemplate = function() {};

/**
 * @return {void}
 */
Survey.SurveyWindowBase.prototype.hide = function() {};

/**
 * @return {?}
 */
Survey.SurveyWindowBase.prototype.changeExpanded = function() {};

/**
 * @return {?}
 */
Survey.SurveyWindowBase.prototype.onComplete = function() {};

/**
 * @constructor
 * @struct
 */
Survey.SurveyTemplateTextBase = function() {};
 /** @type {string} */
Survey.SurveyTemplateTextBase.prototype.text;

/**
 * @param {string} replaceText
 * @param {string} id
 * @param {string=} questionType
 * @return {void}
 */
Survey.SurveyTemplateTextBase.prototype.replaceText = function(replaceText, id, questionType) {};

/**
 * @param {string} id
 * @param {string} questionType
 * @return {string}
 */
Survey.SurveyTemplateTextBase.prototype.getId = function(id, questionType) {};
/** @const */
var template = {};
/** @const */
template.ko = {};
 /** @type {string} */
template.ko.html;

/**
 * @constructor
 * @struct
 * @param {?=} jsonObj
 * @param {?=} renderedElement
 * @param {?=} css
 */
Survey.Survey = function(jsonObj, renderedElement, css) {};

/**
 * @return {string}
 */
Survey.Survey.prototype.getTemplate = function() {};

/**
 * @return {?}
 */
Survey.Survey.prototype.createCssObject = function() {};

/**
 * @constructor
 * @struct
 * @param {?} jsonObj
 */
Survey.SurveyWindow = function(jsonObj) {};
 /** @type {?} */
Survey.SurveyWindow.prototype.koExpanded;
 /** @type {?} */
Survey.SurveyWindow.prototype.doExpand;

/**
 * @param {?} jsonObj
 * @return {!Survey.SurveyModel}
 */
Survey.SurveyWindow.prototype.createSurvey = function(jsonObj) {};

/**
 * @return {string}
 */
Survey.SurveyWindow.prototype.getDefaultTemplate = function() {};
/** @const */
template.window = {};
/** @const */
template.window.ko = {};
 /** @type {string} */
template.window.ko.html;
/**
 * @extends {Survey.SurveyTemplateTextBase}
 * @constructor
 * @struct
 */
Survey.SurveyTemplateText = function() {};
 /** @type {string} */
Survey.SurveyTemplateText.prototype.text;
