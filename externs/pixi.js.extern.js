/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/pixi.js/index.d.ts:
/** @const */
var PIXI = {};
 /** @type {string} */
PIXI.VERSION;
 /** @type {number} */
PIXI.PI_2;
 /** @type {number} */
PIXI.RAD_TO_DEG;
 /** @type {number} */
PIXI.DEG_TO_RAD;
 /** @type {{UNKNOWN: number, WEBGL: number, CANVAS: number}} */
PIXI.RENDERER_TYPE;
 /** @type {{NORMAL: number, ADD: number, MULTIPLY: number, SCREEN: number, OVERLAY: number, DARKEN: number, LIGHTEN: number, COLOR_DODGE: number, COLOR_BURN: number, HARD_LIGHT: number, SOFT_LIGHT: number, DIFFERENCE: number, EXCLUSION: number, HUE: number, SATURATION: number, COLOR: number, LUMINOSITY: number, NORMAL_NPM: number, ADD_NPM: number, SCREEN_NPM: number}} */
PIXI.BLEND_MODES;
 /** @type {{POINTS: number, LINES: number, LINE_LOOP: number, LINE_STRIP: number, TRIANGLES: number, TRIANGLE_STRIP: number, TRIANGLE_FAN: number}} */
PIXI.DRAW_MODES;
 /** @type {{LINEAR: number, NEAREST: number}} */
PIXI.SCALE_MODES;
 /** @type {{CLAMP: number, MIRRORED_REPEAT: number, REPEAT: number}} */
PIXI.WRAP_MODES;
 /** @type {{DEFAULT: number, DYNAMIC: number, STATIC: number}} */
PIXI.TRANSFORM_MODE;
 /** @type {{LOW: string, MEDIUM: string, HIGH: string}} */
PIXI.PRECISION;
 /** @type {{AUTO: number, MANUAL: number}} */
PIXI.GC_MODES;
 /** @type {{POLY: number, RECT: number, CIRC: number, ELIP: number, RREC: number}} */
PIXI.SHAPES;
 /** @type {{LINEAR_VERTICAL: number, LINEAR_HORIZONTAL: number}} */
PIXI.TEXT_GRADIENT;
 /** @type {{INTERACTION: number, HIGH: number, NORMAL: number, LOW: number, UTILITY: number}} */
PIXI.UPDATE_PRIORITY;

/**
 * @param {number|!PIXI.RendererOptions=} width_or_options
 * @param {number=} height
 * @param {!PIXI.RendererOptions=} options
 * @param {boolean=} forceCanvas
 * @return {(!PIXI.WebGLRenderer|!PIXI.CanvasRenderer)}
 */
PIXI.autoDetectRenderer = function(width_or_options, height, options, forceCanvas) {};
 /** @type {!PIXI.loaders.Loader} */
PIXI.loader;
/** @const */
PIXI.settings = {};
 /** @type {number} */
PIXI.settings.TARGET_FPMS;
 /** @type {boolean} */
PIXI.settings.MIPMAP_TEXTURES;
 /** @type {number} */
PIXI.settings.RESOLUTION;
 /** @type {number} */
PIXI.settings.FILTER_RESOLUTION;
 /** @type {number} */
PIXI.settings.SPRITE_MAX_TEXTURES;
 /** @type {number} */
PIXI.settings.SPRITE_BATCH_SIZE;
 /** @type {!RegExp} */
PIXI.settings.RETINA_PREFIX;
 /** @type {{view: !HTMLCanvasElement, antialias: boolean, forceFXAA: boolean, autoResize: boolean, transparent: boolean, backgroundColor: number, clearBeforeRender: boolean, preserveDrawingBuffer: boolean, roundPixels: boolean, width: number, height: number, legacy: boolean}} */
PIXI.settings.RENDER_OPTIONS;
 /** @type {number} */
PIXI.settings.TRANSFORM_MODE;
 /** @type {number} */
PIXI.settings.GC_MODE;
 /** @type {number} */
PIXI.settings.GC_MAX_IDLE;
 /** @type {number} */
PIXI.settings.GC_MAX_CHECK_COUNT;
 /** @type {number} */
PIXI.settings.WRAP_MODE;
 /** @type {number} */
PIXI.settings.SCALE_MODE;
 /** @type {string} */
PIXI.settings.PRECISION_VERTEX;
 /** @type {string} */
PIXI.settings.PRECISION_FRAGMENT;
 /** @type {string} */
PIXI.settings.PRECISION;
 /** @type {number} */
PIXI.settings.UPLOADS_PER_FRAME;
 /** @type {boolean} */
PIXI.settings.CAN_UPLOAD_SAME_BUFFER;
/** @const */
PIXI.accessibility = {};

/**
 * @constructor
 * @struct
 * @param {(!PIXI.WebGLRenderer|!PIXI.CanvasRenderer)} renderer
 */
PIXI.accessibility.AccessibilityManager = function(renderer) {};
 /** @type {!HTMLElement} */
PIXI.accessibility.AccessibilityManager.prototype.div;
 /** @type {!Array<!HTMLElement>} */
PIXI.accessibility.AccessibilityManager.prototype.pool;
 /** @type {number} */
PIXI.accessibility.AccessibilityManager.prototype.renderId;
 /** @type {boolean} */
PIXI.accessibility.AccessibilityManager.prototype.debug;
 /** @type {!PIXI.SystemRenderer} */
PIXI.accessibility.AccessibilityManager.prototype.renderer;
 /** @type {!Array<!PIXI.accessibility.AccessibleTarget>} */
PIXI.accessibility.AccessibilityManager.prototype.children;
 /** @type {boolean} */
PIXI.accessibility.AccessibilityManager.prototype.isActive;

/**
 * @return {void}
 */
PIXI.accessibility.AccessibilityManager.prototype.activate = function() {};

/**
 * @return {void}
 */
PIXI.accessibility.AccessibilityManager.prototype.deactivate = function() {};

/**
 * @param {!PIXI.DisplayObject} displayObject
 * @return {void}
 */
PIXI.accessibility.AccessibilityManager.prototype.updateAccessibleObjects = function(displayObject) {};

/**
 * @return {void}
 */
PIXI.accessibility.AccessibilityManager.prototype.update = function() {};

/**
 * @param {!PIXI.HitArea} hitArea
 * @return {void}
 */
PIXI.accessibility.AccessibilityManager.prototype.capHitArea = function(hitArea) {};

/**
 * @param {!PIXI.DisplayObject} displayObject
 * @return {void}
 */
PIXI.accessibility.AccessibilityManager.prototype.addChild = function(displayObject) {};

/**
 * @param {!PIXI.interaction.InteractionEvent} e
 * @return {void}
 */
PIXI.accessibility.AccessibilityManager.prototype._onClick = function(e) {};

/**
 * @param {!PIXI.interaction.InteractionEvent} e
 * @return {void}
 */
PIXI.accessibility.AccessibilityManager.prototype._onFocus = function(e) {};

/**
 * @param {!PIXI.interaction.InteractionEvent} e
 * @return {void}
 */
PIXI.accessibility.AccessibilityManager.prototype._onFocusOut = function(e) {};

/**
 * @param {!PIXI.interaction.InteractionEvent} e
 * @return {void}
 */
PIXI.accessibility.AccessibilityManager.prototype._onKeyDown = function(e) {};

/**
 * @return {void}
 */
PIXI.accessibility.AccessibilityManager.prototype._onMouseMove = function() {};

/**
 * @return {void}
 */
PIXI.accessibility.AccessibilityManager.prototype.destroy = function() {};
/**
 * @record
 * @struct
 */
PIXI.accessibility.AccessibleTarget = function() {};
 /** @type {boolean} */
PIXI.accessibility.AccessibleTarget.prototype.accessible;
 /** @type {string} */
PIXI.accessibility.AccessibleTarget.prototype.accessibleTitle;
 /** @type {string} */
PIXI.accessibility.AccessibleTarget.prototype.accessibleHint;
 /** @type {number} */
PIXI.accessibility.AccessibleTarget.prototype.tabIndex;
/** @const */
PIXI.CONST = {};
 /** @type {string} */
PIXI.CONST.VERSION;
 /** @type {number} */
PIXI.CONST.PI_2;
 /** @type {number} */
PIXI.CONST.RAD_TO_DEG;
 /** @type {number} */
PIXI.CONST.DEG_TO_RAD;
 /** @type {number} */
PIXI.CONST.TARGET_FPMS;
 /** @type {{UNKNOWN: number, WEBGL: number, CANVAS: number}} */
PIXI.CONST.RENDERER_TYPE;
 /** @type {{NORMAL: number, ADD: number, MULTIPLY: number, SCREEN: number, OVERLAY: number, DARKEN: number, LIGHTEN: number, COLOR_DODGE: number, COLOR_BURN: number, HARD_LIGHT: number, SOFT_LIGHT: number, DIFFERENCE: number, EXCLUSION: number, HUE: number, SATURATION: number, COLOR: number, LUMINOSITY: number, NORMAL_NPM: number, ADD_NPM: number, SCREEN_NPM: number}} */
PIXI.CONST.BLEND_MODES;
 /** @type {{POINTS: number, LINES: number, LINE_LOOP: number, LINE_STRIP: number, TRIANGLES: number, TRIANGLE_STRIP: number, TRIANGLE_FAN: number}} */
PIXI.CONST.DRAW_MODES;
 /** @type {{LINEAR: number, NEAREST: number}} */
PIXI.CONST.SCALE_MODES;
 /** @type {{AUTO: number, MANUAL: number}} */
PIXI.CONST.GC_MODES;
 /** @type {{CLAMP: number, MIRRORED_REPEAT: number, REPEAT: number}} */
PIXI.CONST.WRAP_MODES;
 /** @type {{DEFAULT: number, DYNAMIC: number, STATIC: number}} */
PIXI.CONST.TRANSFORM_MODE;
 /** @type {(string|!RegExp)} */
PIXI.CONST.URL_FILE_EXTENSION;
 /** @type {(string|!RegExp)} */
PIXI.CONST.DATA_URI;
 /** @type {(string|!RegExp)} */
PIXI.CONST.SVG_SIZE;
 /** @type {{POLY: number, RECT: number, CIRC: number, ELIP: number, RREC: number}} */
PIXI.CONST.SHAPES;
 /** @type {{LOW: string, MEDIUM: string, HIGH: string}} */
PIXI.CONST.PRECISION;
 /** @type {{LINEAR_VERTICAL: number, LINEAR_HORIZONTAL: number}} */
PIXI.CONST.TEXT_GRADIENT;
 /** @type {{INTERACTION: number, HIGH: number, NORMAL: number, LOW: number, UTILITY: number}} */
PIXI.CONST.UPDATE_PRIORITY;

/**
 * @constructor
 * @struct
 * @param {!PIXI.ApplicationOptions|number=} options_or_width
 * @param {number=} height
 * @param {!PIXI.ApplicationOptions=} options
 * @param {boolean=} noWebGL
 * @param {boolean=} sharedTicker
 * @param {boolean=} sharedLoader
 */
PIXI.Application = function(options_or_width, height, options, noWebGL, sharedTicker, sharedLoader) {};
 /** @type {!PIXI.ticker.Ticker} */
PIXI.Application.prototype._ticker;
 /** @type {(!PIXI.WebGLRenderer|!PIXI.CanvasRenderer)} */
PIXI.Application.prototype.renderer;
 /** @type {!PIXI.Container} */
PIXI.Application.prototype.stage;
 /** @type {!PIXI.ticker.Ticker} */
PIXI.Application.prototype.ticker;
 /** @type {!PIXI.Rectangle} */
PIXI.Application.prototype.screen;
 /** @type {!HTMLCanvasElement} */
PIXI.Application.prototype.view;

/**
 * @return {void}
 */
PIXI.Application.prototype.stop = function() {};

/**
 * @return {void}
 */
PIXI.Application.prototype.start = function() {};

/**
 * @return {void}
 */
PIXI.Application.prototype.render = function() {};

/**
 * @param {boolean=} removeView
 * @return {void}
 */
PIXI.Application.prototype.destroy = function(removeView) {};
/**
 * @record
 * @struct
 */
PIXI.DestroyOptions = function() {};
 /** @type {boolean} */
PIXI.DestroyOptions.prototype.children;
 /** @type {boolean} */
PIXI.DestroyOptions.prototype.texture;
 /** @type {boolean} */
PIXI.DestroyOptions.prototype.baseTexture;
/**
 * @constructor
 * @struct
 */
PIXI.Bounds = function() {};
 /** @type {number} */
PIXI.Bounds.prototype.minX;
 /** @type {number} */
PIXI.Bounds.prototype.minY;
 /** @type {number} */
PIXI.Bounds.prototype.maxX;
 /** @type {number} */
PIXI.Bounds.prototype.maxY;
 /** @type {!PIXI.Rectangle} */
PIXI.Bounds.prototype.rect;

/**
 * @return {boolean}
 */
PIXI.Bounds.prototype.isEmpty = function() {};

/**
 * @return {void}
 */
PIXI.Bounds.prototype.clear = function() {};

/**
 * @param {!PIXI.Rectangle=} rect
 * @return {!PIXI.Rectangle}
 */
PIXI.Bounds.prototype.getRectangle = function(rect) {};

/**
 * @param {!PIXI.Point} point
 * @return {void}
 */
PIXI.Bounds.prototype.addPoint = function(point) {};

/**
 * @param {!Array<number>} vertices
 * @return {!PIXI.Bounds}
 */
PIXI.Bounds.prototype.addQuad = function(vertices) {};

/**
 * @param {!PIXI.Transform} transform
 * @param {number} x0
 * @param {number} y0
 * @param {number} x1
 * @param {number} y1
 * @return {void}
 */
PIXI.Bounds.prototype.addFrame = function(transform, x0, y0, x1, y1) {};

/**
 * @param {!PIXI.Transform} transform
 * @param {!Array<number>} vertices
 * @param {number} beginOffset
 * @param {number} endOffset
 * @return {void}
 */
PIXI.Bounds.prototype.addVertices = function(transform, vertices, beginOffset, endOffset) {};

/**
 * @param {!PIXI.Bounds} bounds
 * @return {void}
 */
PIXI.Bounds.prototype.addBounds = function(bounds) {};

/**
 * @param {!PIXI.Bounds} bounds
 * @param {!PIXI.Bounds} mask
 * @return {void}
 */
PIXI.Bounds.prototype.addBoundsMask = function(bounds, mask) {};

/**
 * @param {!PIXI.Bounds} bounds
 * @param {!PIXI.Rectangle} area
 * @return {void}
 */
PIXI.Bounds.prototype.addBoundsArea = function(bounds, area) {};
/**
 * @extends {PIXI.DisplayObject}
 * @constructor
 * @struct
 */
PIXI.Container = function() {};
 /** @type {!Array<!PIXI.DisplayObject>} */
PIXI.Container.prototype.children;
 /** @type {number} */
PIXI.Container.prototype.width;
 /** @type {number} */
PIXI.Container.prototype.height;
 /** @type {function(!Array<?>): void} */
PIXI.Container.prototype.onChildrenChange;

/**
 * @param {string} name
 * @return {!PIXI.DisplayObject}
 */
PIXI.Container.prototype.getChildByName = function(name) {};

/**
 * @template T
 * @param {T} child
 * @param {...!PIXI.DisplayObject} additionalChildren
 * @return {T}
 */
PIXI.Container.prototype.addChild = function(child, additionalChildren) {};

/**
 * @template T
 * @param {T} child
 * @param {number} index
 * @return {T}
 */
PIXI.Container.prototype.addChildAt = function(child, index) {};

/**
 * @param {!PIXI.DisplayObject} child
 * @param {!PIXI.DisplayObject} child2
 * @return {void}
 */
PIXI.Container.prototype.swapChildren = function(child, child2) {};

/**
 * @param {!PIXI.DisplayObject} child
 * @return {number}
 */
PIXI.Container.prototype.getChildIndex = function(child) {};

/**
 * @param {!PIXI.DisplayObject} child
 * @param {number} index
 * @return {void}
 */
PIXI.Container.prototype.setChildIndex = function(child, index) {};

/**
 * @param {number} index
 * @return {!PIXI.DisplayObject}
 */
PIXI.Container.prototype.getChildAt = function(index) {};

/**
 * @param {!PIXI.DisplayObject} child
 * @return {!PIXI.DisplayObject}
 */
PIXI.Container.prototype.removeChild = function(child) {};

/**
 * @param {number} index
 * @return {!PIXI.DisplayObject}
 */
PIXI.Container.prototype.removeChildAt = function(index) {};

/**
 * @param {number=} beginIndex
 * @param {number=} endIndex
 * @return {!Array<!PIXI.DisplayObject>}
 */
PIXI.Container.prototype.removeChildren = function(beginIndex, endIndex) {};

/**
 * @return {void}
 */
PIXI.Container.prototype.updateTransform = function() {};

/**
 * @return {void}
 */
PIXI.Container.prototype.calculateBounds = function() {};

/**
 * @return {void}
 */
PIXI.Container.prototype._calculateBounds = function() {};

/**
 * @return {void}
 */
PIXI.Container.prototype.containerUpdateTransform = function() {};

/**
 * @param {!PIXI.WebGLRenderer} renderer
 * @return {void}
 */
PIXI.Container.prototype.renderWebGL = function(renderer) {};

/**
 * @param {!PIXI.WebGLRenderer} renderer
 * @return {void}
 */
PIXI.Container.prototype.renderAdvancedWebGL = function(renderer) {};

/**
 * @param {!PIXI.WebGLRenderer} renderer
 * @return {void}
 */
PIXI.Container.prototype._renderWebGL = function(renderer) {};

/**
 * @param {!PIXI.CanvasRenderer} renderer
 * @return {void}
 */
PIXI.Container.prototype._renderCanvas = function(renderer) {};

/**
 * @param {!PIXI.CanvasRenderer} renderer
 * @return {void}
 */
PIXI.Container.prototype.renderCanvas = function(renderer) {};

/**
 * @param {(boolean|!PIXI.DestroyOptions)=} options
 * @return {void}
 */
PIXI.Container.prototype.destroy = function(options) {};

/**
 * @param {string} event
 * @param {function(!PIXI.DisplayObject): void|!Function} fn
 * @param {?=} context
 * @return {Container}
 */
PIXI.Container.prototype.once = function(event, fn, context) {};

/**
 * @param {string} event
 * @param {function(!PIXI.DisplayObject): void|!Function} fn
 * @param {?=} context
 * @return {Container}
 */
PIXI.Container.prototype.on = function(event, fn, context) {};

/**
 * @param {string} event
 * @param {!Function=} fn
 * @param {?=} context
 * @return {Container}
 */
PIXI.Container.prototype.off = function(event, fn, context) {};
/**
 * @extends {PIXI.utils.EventEmitter}
 * @implements {PIXI.interaction.InteractiveTarget}
 * @implements {PIXI.accessibility.AccessibleTarget}
 * @constructor
 * @struct
 */
PIXI.DisplayObject = function() {};
 /** @type {boolean} */
PIXI.DisplayObject.prototype._cacheAsBitmap;
 /** @type {boolean} */
PIXI.DisplayObject.prototype._cacheData;
 /** @type {boolean} */
PIXI.DisplayObject.prototype.cacheAsBitmap;
 /** @type {string} */
PIXI.DisplayObject.prototype.name;
 /** @type {boolean} */
PIXI.DisplayObject.prototype.accessible;
 /** @type {string} */
PIXI.DisplayObject.prototype.accessibleTitle;
 /** @type {string} */
PIXI.DisplayObject.prototype.accessibleHint;
 /** @type {number} */
PIXI.DisplayObject.prototype.tabIndex;
 /** @type {boolean} */
PIXI.DisplayObject.prototype.interactive;
 /** @type {boolean} */
PIXI.DisplayObject.prototype.interactiveChildren;
 /** @type {(!PIXI.Rectangle|!PIXI.Circle|!PIXI.Ellipse|!PIXI.Polygon|!PIXI.RoundedRectangle)} */
PIXI.DisplayObject.prototype.hitArea;
 /** @type {boolean} */
PIXI.DisplayObject.prototype.buttonMode;
 /** @type {string} */
PIXI.DisplayObject.prototype.cursor;
 /** @type {string} */
PIXI.DisplayObject.prototype.defaultCursor;
 /** @type {!PIXI.TransformBase} */
PIXI.DisplayObject.prototype.transform;
 /** @type {number} */
PIXI.DisplayObject.prototype.alpha;
 /** @type {boolean} */
PIXI.DisplayObject.prototype.visible;
 /** @type {boolean} */
PIXI.DisplayObject.prototype.renderable;
 /** @type {!PIXI.Container} */
PIXI.DisplayObject.prototype.parent;
 /** @type {number} */
PIXI.DisplayObject.prototype.worldAlpha;
 /** @type {!PIXI.Rectangle} */
PIXI.DisplayObject.prototype.filterArea;
 /** @type {!Array<!PIXI.Filter<?>>} */
PIXI.DisplayObject.prototype._filters;
 /** @type {!Array<!PIXI.Filter<?>>} */
PIXI.DisplayObject.prototype._enabledFilters;
 /** @type {!PIXI.Bounds} */
PIXI.DisplayObject.prototype._bounds;
 /** @type {number} */
PIXI.DisplayObject.prototype._boundsID;
 /** @type {number} */
PIXI.DisplayObject.prototype._lastBoundsID;
 /** @type {!PIXI.Rectangle} */
PIXI.DisplayObject.prototype._boundsRect;
 /** @type {!PIXI.Rectangle} */
PIXI.DisplayObject.prototype._localBoundsRect;
 /** @type {(!PIXI.Graphics|!PIXI.Sprite)} */
PIXI.DisplayObject.prototype._mask;
 /** @type {boolean} */
PIXI.DisplayObject.prototype._destroyed;
 /** @type {number} */
PIXI.DisplayObject.prototype.x;
 /** @type {number} */
PIXI.DisplayObject.prototype.y;
 /** @type {!PIXI.Matrix} */
PIXI.DisplayObject.prototype.worldTransform;
 /** @type {!PIXI.Matrix} */
PIXI.DisplayObject.prototype.localTransform;
 /** @type {(!PIXI.Point|!PIXI.ObservablePoint)} */
PIXI.DisplayObject.prototype.position;
 /** @type {(!PIXI.Point|!PIXI.ObservablePoint)} */
PIXI.DisplayObject.prototype.scale;
 /** @type {(!PIXI.Point|!PIXI.ObservablePoint)} */
PIXI.DisplayObject.prototype.pivot;
 /** @type {!PIXI.ObservablePoint} */
PIXI.DisplayObject.prototype.skew;
 /** @type {number} */
PIXI.DisplayObject.prototype.rotation;
 /** @type {boolean} */
PIXI.DisplayObject.prototype.worldVisible;
 /** @type {(!PIXI.Graphics|!PIXI.Sprite)} */
PIXI.DisplayObject.prototype.mask;
 /** @type {!Array<!PIXI.Filter<?>>} */
PIXI.DisplayObject.prototype.filters;

/**
 * @param {!PIXI.WebGLRenderer} renderer
 * @return {void}
 */
PIXI.DisplayObject.prototype._renderCachedWebGL = function(renderer) {};

/**
 * @param {!PIXI.WebGLRenderer} renderer
 * @return {void}
 */
PIXI.DisplayObject.prototype._initCachedDisplayObject = function(renderer) {};

/**
 * @param {!PIXI.CanvasRenderer} renderer
 * @return {void}
 */
PIXI.DisplayObject.prototype._renderCachedCanvas = function(renderer) {};

/**
 * @param {!PIXI.CanvasRenderer} renderer
 * @return {void}
 */
PIXI.DisplayObject.prototype._initCachedDisplayObjectCanvas = function(renderer) {};

/**
 * @return {!PIXI.Rectangle}
 */
PIXI.DisplayObject.prototype._calculateCachedBounds = function() {};

/**
 * @return {!PIXI.Rectangle}
 */
PIXI.DisplayObject.prototype._getCachedLocalBounds = function() {};

/**
 * @return {void}
 */
PIXI.DisplayObject.prototype._destroyCachedDisplayObject = function() {};

/**
 * @param {?} options
 * @return {void}
 */
PIXI.DisplayObject.prototype._cacheAsBitmapDestroy = function(options) {};

/**
 * @param {!PIXI.Point=} point
 * @param {boolean=} skipUpdate
 * @return {!PIXI.Point}
 */
PIXI.DisplayObject.prototype.getGlobalPosition = function(point, skipUpdate) {};

/**
 * @return {!Object<number,!PIXI.interaction.InteractionTrackingData>}
 */
PIXI.DisplayObject.prototype.trackedPointers = function() {};

/**
 * @return {void}
 */
PIXI.DisplayObject.prototype.updateTransform = function() {};

/**
 * @return {void}
 */
PIXI.DisplayObject.prototype.displayObjectUpdateTransform = function() {};

/**
 * @return {void}
 */
PIXI.DisplayObject.prototype._recursivePostUpdateTransform = function() {};

/**
 * @param {boolean=} skipUpdate
 * @param {!PIXI.Rectangle=} rect
 * @return {!PIXI.Rectangle}
 */
PIXI.DisplayObject.prototype.getBounds = function(skipUpdate, rect) {};

/**
 * @param {!PIXI.Rectangle=} rect
 * @return {!PIXI.Rectangle}
 */
PIXI.DisplayObject.prototype.getLocalBounds = function(rect) {};

/**
 * @template T
 * @param {!PIXI.PointLike} position
 * @param {T=} point
 * @param {boolean=} skipUpdate
 * @return {!PIXI.Point|T}
 */
PIXI.DisplayObject.prototype.toGlobal = function(position, point, skipUpdate) {};

/**
 * @template T
 * @param {!PIXI.PointLike} position
 * @param {!PIXI.DisplayObject=} from
 * @param {T=} point
 * @param {boolean=} skipUpdate
 * @return {!PIXI.Point|T}
 */
PIXI.DisplayObject.prototype.toLocal = function(position, from, point, skipUpdate) {};

/**
 * @param {!PIXI.WebGLRenderer} renderer
 * @return {void}
 */
PIXI.DisplayObject.prototype.renderWebGL = function(renderer) {};

/**
 * @param {!PIXI.CanvasRenderer} renderer
 * @return {void}
 */
PIXI.DisplayObject.prototype.renderCanvas = function(renderer) {};

/**
 * @param {!PIXI.Container} container
 * @return {!PIXI.Container}
 */
PIXI.DisplayObject.prototype.setParent = function(container) {};

/**
 * @param {number=} x
 * @param {number=} y
 * @param {number=} scaleX
 * @param {number=} scaleY
 * @param {number=} rotation
 * @param {number=} skewX
 * @param {number=} skewY
 * @param {number=} pivotX
 * @param {number=} pivotY
 * @return {!PIXI.DisplayObject}
 */
PIXI.DisplayObject.prototype.setTransform = function(x, y, scaleX, scaleY, rotation, skewX, skewY, pivotX, pivotY) {};

/**
 * @return {void}
 */
PIXI.DisplayObject.prototype.destroy = function() {};

/**
 * @param {string} event
 * @param {function(!PIXI.interaction.InteractionEvent): void} fn
 * @param {?=} context
 * @return {DisplayObject}
 */
PIXI.DisplayObject.prototype.on = function(event, fn, context) {};

/**
 * @param {string} event
 * @param {function(!PIXI.interaction.InteractionEvent): void} fn
 * @param {?=} context
 * @return {DisplayObject}
 */
PIXI.DisplayObject.prototype.once = function(event, fn, context) {};

/**
 * @param {string} event
 * @param {function(!PIXI.interaction.InteractionEvent): void=} fn
 * @param {?=} context
 * @return {DisplayObject}
 */
PIXI.DisplayObject.prototype.removeListener = function(event, fn, context) {};

/**
 * @param {string} event
 * @return {DisplayObject}
 */
PIXI.DisplayObject.prototype.removeAllListeners = function(event) {};

/**
 * @param {string} event
 * @param {function(!PIXI.interaction.InteractionEvent): void=} fn
 * @param {?=} context
 * @return {DisplayObject}
 */
PIXI.DisplayObject.prototype.off = function(event, fn, context) {};

/**
 * @param {string} event
 * @param {function(!PIXI.interaction.InteractionEvent): void} fn
 * @param {?=} context
 * @return {DisplayObject}
 */
PIXI.DisplayObject.prototype.addListener = function(event, fn, context) {};
/**
 * @constructor
 * @struct
 */
PIXI.TransformBase = function() {};
 /** @type {!PIXI.TransformBase} */
PIXI.TransformBase.IDENTITY;
 /** @type {!PIXI.Matrix} */
PIXI.TransformBase.prototype.worldTransform;
 /** @type {!PIXI.Matrix} */
PIXI.TransformBase.prototype.localTransform;
 /** @type {number} */
PIXI.TransformBase.prototype._worldID;

/**
 * @return {void}
 */
PIXI.TransformBase.prototype.updateLocalTransform = function() {};

/**
 * @param {!PIXI.TransformBase} parentTransform
 * @return {void}
 */
PIXI.TransformBase.prototype.updateTransform = function(parentTransform) {};

/**
 * @param {!PIXI.TransformBase} parentTransform
 * @return {void}
 */
PIXI.TransformBase.prototype.updateWorldTransform = function(parentTransform) {};
/**
 * @extends {PIXI.TransformBase}
 * @constructor
 * @struct
 */
PIXI.TransformStatic = function() {};
 /** @type {!PIXI.ObservablePoint} */
PIXI.TransformStatic.prototype.position;
 /** @type {!PIXI.ObservablePoint} */
PIXI.TransformStatic.prototype.scale;
 /** @type {!PIXI.ObservablePoint} */
PIXI.TransformStatic.prototype.pivot;
 /** @type {!PIXI.ObservablePoint} */
PIXI.TransformStatic.prototype.skew;
 /** @type {number} */
PIXI.TransformStatic.prototype._rotation;
 /** @type {number} */
PIXI.TransformStatic.prototype._sr;
 /** @type {number} */
PIXI.TransformStatic.prototype._cr;
 /** @type {number} */
PIXI.TransformStatic.prototype._cy;
 /** @type {number} */
PIXI.TransformStatic.prototype._sy;
 /** @type {number} */
PIXI.TransformStatic.prototype._nsx;
 /** @type {number} */
PIXI.TransformStatic.prototype._cx;
 /** @type {number} */
PIXI.TransformStatic.prototype._currentLocalID;
 /** @type {number} */
PIXI.TransformStatic.prototype.rotation;

/**
 * @return {void}
 */
PIXI.TransformStatic.prototype.onChange = function() {};

/**
 * @return {void}
 */
PIXI.TransformStatic.prototype.updateSkew = function() {};

/**
 * @return {void}
 */
PIXI.TransformStatic.prototype.updateLocalTransform = function() {};

/**
 * @param {!PIXI.TransformBase} parentTransform
 * @return {void}
 */
PIXI.TransformStatic.prototype.updateTransform = function(parentTransform) {};

/**
 * @param {!PIXI.Matrix} matrix
 * @return {void}
 */
PIXI.TransformStatic.prototype.setFromMatrix = function(matrix) {};

/**
 * @constructor
 * @struct
 */
PIXI.Transform = function() {};
 /** @type {!PIXI.Point} */
PIXI.Transform.prototype.position;
 /** @type {!PIXI.Point} */
PIXI.Transform.prototype.scale;
 /** @type {!PIXI.ObservablePoint} */
PIXI.Transform.prototype.skew;
 /** @type {!PIXI.Point} */
PIXI.Transform.prototype.pivot;
 /** @type {number} */
PIXI.Transform.prototype._rotation;
 /** @type {number} */
PIXI.Transform.prototype._sr;
 /** @type {number} */
PIXI.Transform.prototype._cr;
 /** @type {number} */
PIXI.Transform.prototype._cy;
 /** @type {number} */
PIXI.Transform.prototype._sy;
 /** @type {number} */
PIXI.Transform.prototype._nsx;
 /** @type {number} */
PIXI.Transform.prototype._cx;
 /** @type {number} */
PIXI.Transform.prototype.rotation;

/**
 * @return {void}
 */
PIXI.Transform.prototype.updateSkew = function() {};

/**
 * @param {!PIXI.Matrix} matrix
 * @return {void}
 */
PIXI.Transform.prototype.setFromMatrix = function(matrix) {};

/**
 * @constructor
 * @struct
 * @param {number} lineWidth
 * @param {number} lineColor
 * @param {number} lineAlpha
 * @param {number} fillColor
 * @param {number} fillAlpha
 * @param {boolean} fill
 * @param {boolean} nativeLines
 * @param {?} shape
 */
PIXI.GraphicsData = function(lineWidth, lineColor, lineAlpha, fillColor, fillAlpha, fill, nativeLines, shape) {};
 /** @type {number} */
PIXI.GraphicsData.prototype.lineWidth;
 /** @type {boolean} */
PIXI.GraphicsData.prototype.nativeLines;
 /** @type {number} */
PIXI.GraphicsData.prototype.lineColor;
 /** @type {number} */
PIXI.GraphicsData.prototype.lineAlpha;
 /** @type {number} */
PIXI.GraphicsData.prototype._lineTint;
 /** @type {number} */
PIXI.GraphicsData.prototype.fillColor;
 /** @type {number} */
PIXI.GraphicsData.prototype.fillAlpha;
 /** @type {number} */
PIXI.GraphicsData.prototype._fillTint;
 /** @type {boolean} */
PIXI.GraphicsData.prototype.fill;
 /** @type {(!Array<?>|!Array<!PIXI.Circle>|!Array<!PIXI.Rectangle>|!Array<!PIXI.Ellipse>|!Array<!PIXI.Polygon>|!Array<!PIXI.RoundedRectangle>)} */
PIXI.GraphicsData.prototype.holes;
 /** @type {?} */
PIXI.GraphicsData.prototype.shape;
 /** @type {number} */
PIXI.GraphicsData.prototype.type;

/**
 * @return {!PIXI.GraphicsData}
 */
PIXI.GraphicsData.prototype.clone = function() {};

/**
 * @param {?} shape
 * @return {void}
 */
PIXI.GraphicsData.prototype.addHole = function(shape) {};

/**
 * @param {(boolean|!PIXI.DestroyOptions)=} options
 * @return {void}
 */
PIXI.GraphicsData.prototype.destroy = function(options) {};

/**
 * @constructor
 * @struct
 * @param {boolean=} nativeLines
 */
PIXI.Graphics = function(nativeLines) {};
 /** @type {number} */
PIXI.Graphics.prototype.fillAlpha;
 /** @type {number} */
PIXI.Graphics.prototype.lineWidth;
 /** @type {boolean} */
PIXI.Graphics.prototype.nativeLines;
 /** @type {number} */
PIXI.Graphics.prototype.lineColor;
 /** @type {!Array<!PIXI.GraphicsData>} */
PIXI.Graphics.prototype.graphicsData;
 /** @type {number} */
PIXI.Graphics.prototype.tint;
 /** @type {number} */
PIXI.Graphics.prototype._prevTint;
 /** @type {number} */
PIXI.Graphics.prototype.blendMode;
 /** @type {!PIXI.GraphicsData} */
PIXI.Graphics.prototype.currentPath;
 /** @type {?} */
PIXI.Graphics.prototype._webGL;
 /** @type {boolean} */
PIXI.Graphics.prototype.isMask;
 /** @type {number} */
PIXI.Graphics.prototype.boundsPadding;
 /** @type {!PIXI.Bounds} */
PIXI.Graphics.prototype._localBounds;
 /** @type {number} */
PIXI.Graphics.prototype.dirty;
 /** @type {number} */
PIXI.Graphics.prototype.fastRectDirty;
 /** @type {number} */
PIXI.Graphics.prototype.clearDirty;
 /** @type {number} */
PIXI.Graphics.prototype.boundsDirty;
 /** @type {boolean} */
PIXI.Graphics.prototype.cachedSpriteDirty;
 /** @type {!PIXI.Rectangle} */
PIXI.Graphics.prototype._spriteRect;
 /** @type {boolean} */
PIXI.Graphics.prototype._fastRect;
 /** @type {!PIXI.Texture} */
PIXI.Graphics._SPRITE_TEXTURE;

/**
 * @return {!PIXI.Graphics}
 */
PIXI.Graphics.prototype.clone = function() {};

/**
 * @param {number=} lineWidth
 * @param {number=} color
 * @param {number=} alpha
 * @return {!PIXI.Graphics}
 */
PIXI.Graphics.prototype.lineStyle = function(lineWidth, color, alpha) {};

/**
 * @param {number} x
 * @param {number} y
 * @return {!PIXI.Graphics}
 */
PIXI.Graphics.prototype.moveTo = function(x, y) {};

/**
 * @param {number} x
 * @param {number} y
 * @return {!PIXI.Graphics}
 */
PIXI.Graphics.prototype.lineTo = function(x, y) {};

/**
 * @param {number} cpX
 * @param {number} cpY
 * @param {number} toX
 * @param {number} toY
 * @return {!PIXI.Graphics}
 */
PIXI.Graphics.prototype.quadraticCurveTo = function(cpX, cpY, toX, toY) {};

/**
 * @param {number} cpX
 * @param {number} cpY
 * @param {number} cpX2
 * @param {number} cpY2
 * @param {number} toX
 * @param {number} toY
 * @return {!PIXI.Graphics}
 */
PIXI.Graphics.prototype.bezierCurveTo = function(cpX, cpY, cpX2, cpY2, toX, toY) {};

/**
 * @param {number} x1
 * @param {number} y1
 * @param {number} x2
 * @param {number} y2
 * @param {number} radius
 * @return {!PIXI.Graphics}
 */
PIXI.Graphics.prototype.arcTo = function(x1, y1, x2, y2, radius) {};

/**
 * @param {number} cx
 * @param {number} cy
 * @param {number} radius
 * @param {number} startAngle
 * @param {number} endAngle
 * @param {boolean=} anticlockwise
 * @return {!PIXI.Graphics}
 */
PIXI.Graphics.prototype.arc = function(cx, cy, radius, startAngle, endAngle, anticlockwise) {};

/**
 * @param {number} color
 * @param {number=} alpha
 * @return {!PIXI.Graphics}
 */
PIXI.Graphics.prototype.beginFill = function(color, alpha) {};

/**
 * @return {!PIXI.Graphics}
 */
PIXI.Graphics.prototype.endFill = function() {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} width
 * @param {number} height
 * @return {!PIXI.Graphics}
 */
PIXI.Graphics.prototype.drawRect = function(x, y, width, height) {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} width
 * @param {number} height
 * @param {number} radius
 * @return {!PIXI.Graphics}
 */
PIXI.Graphics.prototype.drawRoundedRect = function(x, y, width, height, radius) {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} radius
 * @return {!PIXI.Graphics}
 */
PIXI.Graphics.prototype.drawCircle = function(x, y, radius) {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} width
 * @param {number} height
 * @return {!PIXI.Graphics}
 */
PIXI.Graphics.prototype.drawEllipse = function(x, y, width, height) {};

/**
 * @param {(!Array<number>|!PIXI.Polygon|!Array<!PIXI.Point>)} path
 * @return {!PIXI.Graphics}
 */
PIXI.Graphics.prototype.drawPolygon = function(path) {};

/**
 * @return {!PIXI.Graphics}
 */
PIXI.Graphics.prototype.clear = function() {};

/**
 * @return {boolean}
 */
PIXI.Graphics.prototype.isFastRect = function() {};

/**
 * @param {!PIXI.CanvasRenderer} renderer
 * @return {void}
 */
PIXI.Graphics.prototype._renderCanvas = function(renderer) {};

/**
 * @return {!PIXI.Rectangle}
 */
PIXI.Graphics.prototype._calculateBounds = function() {};

/**
 * @param {!PIXI.SystemRenderer} renderer
 * @return {void}
 */
PIXI.Graphics.prototype._renderSpriteRect = function(renderer) {};

/**
 * @param {!PIXI.Point} point
 * @return {boolean}
 */
PIXI.Graphics.prototype.containsPoint = function(point) {};

/**
 * @return {void}
 */
PIXI.Graphics.prototype.updateLocalBounds = function() {};

/**
 * @param {?} shape
 * @return {!PIXI.GraphicsData}
 */
PIXI.Graphics.prototype.drawShape = function(shape) {};

/**
 * @param {number=} scaleMode
 * @param {number=} resolution
 * @return {!PIXI.Texture}
 */
PIXI.Graphics.prototype.generateCanvasTexture = function(scaleMode, resolution) {};

/**
 * @return {!PIXI.Graphics}
 */
PIXI.Graphics.prototype.closePath = function() {};

/**
 * @return {!PIXI.Graphics}
 */
PIXI.Graphics.prototype.addHole = function() {};

/**
 * @param {(boolean|!PIXI.DestroyOptions)=} options
 * @return {void}
 */
PIXI.Graphics.prototype.destroy = function(options) {};

/**
 * @constructor
 * @struct
 * @param {!PIXI.SystemRenderer} renderer
 */
PIXI.CanvasGraphicsRenderer = function(renderer) {};

/**
 * @param {!PIXI.Graphics} graphics
 * @return {void}
 */
PIXI.CanvasGraphicsRenderer.prototype.render = function(graphics) {};

/**
 * @param {!PIXI.Graphics} graphics
 * @return {void}
 */
PIXI.CanvasGraphicsRenderer.prototype.updateGraphicsTint = function(graphics) {};

/**
 * @param {!Array<!PIXI.Point>} points
 * @param {boolean} close
 * @param {!CanvasRenderingContext2D} context
 * @return {void}
 */
PIXI.CanvasGraphicsRenderer.prototype.renderPolygon = function(points, close, context) {};

/**
 * @return {void}
 */
PIXI.CanvasGraphicsRenderer.prototype.destroy = function() {};

/**
 * @constructor
 * @struct
 * @param {!PIXI.CanvasRenderer} renderer
 */
PIXI.GraphicsRenderer = function(renderer) {};
 /** @type {!Array<!PIXI.GraphicsData>} */
PIXI.GraphicsRenderer.prototype.graphicsDataPool;
 /** @type {!PIXI.PrimitiveShader} */
PIXI.GraphicsRenderer.prototype.primitiveShader;
 /** @type {!WebGLRenderingContext} */
PIXI.GraphicsRenderer.prototype.gl;
 /** @type {number} */
PIXI.GraphicsRenderer.prototype.CONTEXT_UID;

/**
 * @return {void}
 */
PIXI.GraphicsRenderer.prototype.destroy = function() {};

/**
 * @param {!PIXI.Graphics} graphics
 * @return {void}
 */
PIXI.GraphicsRenderer.prototype.render = function(graphics) {};

/**
 * @param {!PIXI.Graphics} graphics
 * @return {void}
 */
PIXI.GraphicsRenderer.prototype.updateGraphics = function(graphics) {};

/**
 * @param {!WebGLRenderingContext} webGL
 * @param {number} type
 * @param {number} nativeLines
 * @return {!PIXI.WebGLGraphicsData}
 */
PIXI.GraphicsRenderer.prototype.getWebGLData = function(webGL, type, nativeLines) {};

/**
 * @constructor
 * @struct
 * @param {!WebGLRenderingContext} gl
 * @param {!PIXI.glCore.GLShader} shader
 * @param {!PIXI.glCore.AttribState} attribsState
 */
PIXI.WebGLGraphicsData = function(gl, shader, attribsState) {};
 /** @type {!WebGLRenderingContext} */
PIXI.WebGLGraphicsData.prototype.gl;
 /** @type {!Array<number>} */
PIXI.WebGLGraphicsData.prototype.color;
 /** @type {!Array<!PIXI.Point>} */
PIXI.WebGLGraphicsData.prototype.points;
 /** @type {!Array<number>} */
PIXI.WebGLGraphicsData.prototype.indices;
 /** @type {!WebGLBuffer} */
PIXI.WebGLGraphicsData.prototype.buffer;
 /** @type {!WebGLBuffer} */
PIXI.WebGLGraphicsData.prototype.indexBuffer;
 /** @type {boolean} */
PIXI.WebGLGraphicsData.prototype.dirty;
 /** @type {!Array<number>} */
PIXI.WebGLGraphicsData.prototype.glPoints;
 /** @type {!Array<number>} */
PIXI.WebGLGraphicsData.prototype.glIndices;
 /** @type {!PIXI.glCore.GLShader} */
PIXI.WebGLGraphicsData.prototype.shader;
 /** @type {!PIXI.glCore.VertexArrayObject} */
PIXI.WebGLGraphicsData.prototype.vao;
 /** @type {boolean} */
PIXI.WebGLGraphicsData.prototype.nativeLines;

/**
 * @return {void}
 */
PIXI.WebGLGraphicsData.prototype.reset = function() {};

/**
 * @return {void}
 */
PIXI.WebGLGraphicsData.prototype.upload = function() {};

/**
 * @return {void}
 */
PIXI.WebGLGraphicsData.prototype.destroy = function() {};
/**
 * @extends {PIXI.glCore.GLShader}
 * @constructor
 * @struct
 */
PIXI.PrimitiveShader = function() {};
/** @const */
PIXI.GroupD8 = {};
 /** @type {number} */
PIXI.GroupD8.E;
 /** @type {number} */
PIXI.GroupD8.SE;
 /** @type {number} */
PIXI.GroupD8.S;
 /** @type {number} */
PIXI.GroupD8.SW;
 /** @type {number} */
PIXI.GroupD8.W;
 /** @type {number} */
PIXI.GroupD8.NW;
 /** @type {number} */
PIXI.GroupD8.N;
 /** @type {number} */
PIXI.GroupD8.NE;
 /** @type {number} */
PIXI.GroupD8.MIRROR_HORIZONTAL;
 /** @type {number} */
PIXI.GroupD8.MIRROR_VERTICAL;

/**
 * @param {number} ind
 * @return {number}
 */
PIXI.GroupD8.uX = function(ind) {};

/**
 * @param {number} ind
 * @return {number}
 */
PIXI.GroupD8.uY = function(ind) {};

/**
 * @param {number} ind
 * @return {number}
 */
PIXI.GroupD8.vX = function(ind) {};

/**
 * @param {number} ind
 * @return {number}
 */
PIXI.GroupD8.vY = function(ind) {};

/**
 * @param {number} rotation
 * @return {number}
 */
PIXI.GroupD8.inv = function(rotation) {};

/**
 * @param {number} rotationSecond
 * @param {number} rotationFirst
 * @return {number}
 */
PIXI.GroupD8.add = function(rotationSecond, rotationFirst) {};

/**
 * @param {number} rotationSecond
 * @param {number} rotationFirst
 * @return {number}
 */
PIXI.GroupD8.sub = function(rotationSecond, rotationFirst) {};

/**
 * @param {number} rotation
 * @return {number}
 */
PIXI.GroupD8.rotate180 = function(rotation) {};

/**
 * @param {number} rotation
 * @return {boolean}
 */
PIXI.GroupD8.isSwapWidthHeight = function(rotation) {};

/**
 * @param {number} dx
 * @param {number} dy
 * @return {number}
 */
PIXI.GroupD8.byDirection = function(dx, dy) {};

/**
 * @param {!PIXI.Matrix} matrix
 * @param {number} rotation
 * @param {number} tx
 * @param {number} ty
 * @return {void}
 */
PIXI.GroupD8.matrixAppendRotationInv = function(matrix, rotation, tx, ty) {};

/**
 * @constructor
 * @struct
 * @param {number=} a
 * @param {number=} b
 * @param {number=} c
 * @param {number=} d
 * @param {number=} tx
 * @param {number=} ty
 */
PIXI.Matrix = function(a, b, c, d, tx, ty) {};
 /** @type {number} */
PIXI.Matrix.prototype.a;
 /** @type {number} */
PIXI.Matrix.prototype.b;
 /** @type {number} */
PIXI.Matrix.prototype.c;
 /** @type {number} */
PIXI.Matrix.prototype.d;
 /** @type {number} */
PIXI.Matrix.prototype.tx;
 /** @type {number} */
PIXI.Matrix.prototype.ty;
 /** @type {!PIXI.Matrix} */
PIXI.Matrix.IDENTITY;
 /** @type {!PIXI.Matrix} */
PIXI.Matrix.TEMP_MATRIX;

/**
 * @param {!Array<number>} array
 * @return {void}
 */
PIXI.Matrix.prototype.fromArray = function(array) {};

/**
 * @param {number} a
 * @param {number} b
 * @param {number} c
 * @param {number} d
 * @param {number} tx
 * @param {number} ty
 * @return {!PIXI.Matrix}
 */
PIXI.Matrix.prototype.set = function(a, b, c, d, tx, ty) {};

/**
 * @param {boolean=} transpose
 * @param {!Array<number>=} out
 * @return {!Array<number>}
 */
PIXI.Matrix.prototype.toArray = function(transpose, out) {};

/**
 * @param {!PIXI.Point} pos
 * @param {!PIXI.Point=} newPos
 * @return {!PIXI.Point}
 */
PIXI.Matrix.prototype.apply = function(pos, newPos) {};

/**
 * @param {!PIXI.Point} pos
 * @param {!PIXI.Point=} newPos
 * @return {!PIXI.Point}
 */
PIXI.Matrix.prototype.applyInverse = function(pos, newPos) {};

/**
 * @param {number} x
 * @param {number} y
 * @return {!PIXI.Matrix}
 */
PIXI.Matrix.prototype.translate = function(x, y) {};

/**
 * @param {number} x
 * @param {number} y
 * @return {!PIXI.Matrix}
 */
PIXI.Matrix.prototype.scale = function(x, y) {};

/**
 * @param {number} angle
 * @return {!PIXI.Matrix}
 */
PIXI.Matrix.prototype.rotate = function(angle) {};

/**
 * @param {!PIXI.Matrix} matrix
 * @return {!PIXI.Matrix}
 */
PIXI.Matrix.prototype.append = function(matrix) {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} pivotX
 * @param {number} pivotY
 * @param {number} scaleX
 * @param {number} scaleY
 * @param {number} rotation
 * @param {number} skewX
 * @param {number} skewY
 * @return {!PIXI.Matrix}
 */
PIXI.Matrix.prototype.setTransform = function(x, y, pivotX, pivotY, scaleX, scaleY, rotation, skewX, skewY) {};

/**
 * @param {!PIXI.Matrix} matrix
 * @return {!PIXI.Matrix}
 */
PIXI.Matrix.prototype.prepend = function(matrix) {};

/**
 * @return {!PIXI.Matrix}
 */
PIXI.Matrix.prototype.invert = function() {};

/**
 * @return {!PIXI.Matrix}
 */
PIXI.Matrix.prototype.identity = function() {};

/**
 * @param {!PIXI.TransformBase} transform
 * @return {!PIXI.TransformBase}
 */
PIXI.Matrix.prototype.decompose = function(transform) {};

/**
 * @return {!PIXI.Matrix}
 */
PIXI.Matrix.prototype.clone = function() {};

/**
 * @param {!PIXI.Matrix} matrix
 * @return {!PIXI.Matrix}
 */
PIXI.Matrix.prototype.copy = function(matrix) {};
/**
 * @constructor
 * @struct
 */
PIXI.PointLike = function() {};
 /** @type {number} */
PIXI.PointLike.prototype.x;
 /** @type {number} */
PIXI.PointLike.prototype.y;

/**
 * @param {number=} x
 * @param {number=} y
 * @return {void}
 */
PIXI.PointLike.prototype.set = function(x, y) {};

/**
 * @param {!PIXI.PointLike} point
 * @return {void}
 */
PIXI.PointLike.prototype.copy = function(point) {};

/**
 * @constructor
 * @struct
 * @param {function(): ?} cb
 * @param {?=} scope
 * @param {number=} x
 * @param {number=} y
 */
PIXI.ObservablePoint = function(cb, scope, x, y) {};
 /** @type {function(): ?} */
PIXI.ObservablePoint.prototype.cb;
 /** @type {?} */
PIXI.ObservablePoint.prototype.scope;

/**
 * @constructor
 * @struct
 * @param {number=} x
 * @param {number=} y
 */
PIXI.Point = function(x, y) {};

/**
 * @return {!PIXI.Point}
 */
PIXI.Point.prototype.clone = function() {};

/**
 * @param {!PIXI.PointLike} p
 * @return {boolean}
 */
PIXI.Point.prototype.equals = function(p) {};
/**
 * @record
 * @struct
 */
PIXI.HitArea = function() {};

/**
 * @param {number} x
 * @param {number} y
 * @return {boolean}
 */
PIXI.HitArea.prototype.contains = function(x, y) {};

/**
 * @constructor
 * @struct
 * @param {number=} x
 * @param {number=} y
 * @param {number=} radius
 */
PIXI.Circle = function(x, y, radius) {};
 /** @type {number} */
PIXI.Circle.prototype.x;
 /** @type {number} */
PIXI.Circle.prototype.y;
 /** @type {number} */
PIXI.Circle.prototype.radius;
 /** @type {number} */
PIXI.Circle.prototype.type;

/**
 * @return {!PIXI.Circle}
 */
PIXI.Circle.prototype.clone = function() {};

/**
 * @param {number} x
 * @param {number} y
 * @return {boolean}
 */
PIXI.Circle.prototype.contains = function(x, y) {};

/**
 * @return {!PIXI.Rectangle}
 */
PIXI.Circle.prototype.getBounds = function() {};

/**
 * @constructor
 * @struct
 * @param {number=} x
 * @param {number=} y
 * @param {number=} width
 * @param {number=} height
 */
PIXI.Ellipse = function(x, y, width, height) {};
 /** @type {number} */
PIXI.Ellipse.prototype.x;
 /** @type {number} */
PIXI.Ellipse.prototype.y;
 /** @type {number} */
PIXI.Ellipse.prototype.width;
 /** @type {number} */
PIXI.Ellipse.prototype.height;
 /** @type {number} */
PIXI.Ellipse.prototype.type;

/**
 * @return {!PIXI.Ellipse}
 */
PIXI.Ellipse.prototype.clone = function() {};

/**
 * @param {number} x
 * @param {number} y
 * @return {boolean}
 */
PIXI.Ellipse.prototype.contains = function(x, y) {};

/**
 * @return {!PIXI.Rectangle}
 */
PIXI.Ellipse.prototype.getBounds = function() {};

/**
 * @constructor
 * @struct
 * @param {...(!Array<number>|!Array<!PIXI.Point>)|!PIXI.Point|number} points
 */
PIXI.Polygon = function(points) {};
 /** @type {boolean} */
PIXI.Polygon.prototype.closed;
 /** @type {!Array<number>} */
PIXI.Polygon.prototype.points;
 /** @type {number} */
PIXI.Polygon.prototype.type;

/**
 * @return {!PIXI.Polygon}
 */
PIXI.Polygon.prototype.clone = function() {};

/**
 * @param {number} x
 * @param {number} y
 * @return {boolean}
 */
PIXI.Polygon.prototype.contains = function(x, y) {};

/**
 * @return {void}
 */
PIXI.Polygon.prototype.close = function() {};

/**
 * @constructor
 * @struct
 * @param {number=} x
 * @param {number=} y
 * @param {number=} width
 * @param {number=} height
 */
PIXI.Rectangle = function(x, y, width, height) {};
 /** @type {number} */
PIXI.Rectangle.prototype.x;
 /** @type {number} */
PIXI.Rectangle.prototype.y;
 /** @type {number} */
PIXI.Rectangle.prototype.width;
 /** @type {number} */
PIXI.Rectangle.prototype.height;
 /** @type {number} */
PIXI.Rectangle.prototype.type;
 /** @type {number} */
PIXI.Rectangle.prototype.left;
 /** @type {number} */
PIXI.Rectangle.prototype.right;
 /** @type {number} */
PIXI.Rectangle.prototype.top;
 /** @type {number} */
PIXI.Rectangle.prototype.bottom;
 /** @type {!PIXI.Rectangle} */
PIXI.Rectangle.EMPTY;

/**
 * @return {!PIXI.Rectangle}
 */
PIXI.Rectangle.prototype.clone = function() {};

/**
 * @param {!PIXI.Rectangle} rectangle
 * @return {!PIXI.Rectangle}
 */
PIXI.Rectangle.prototype.copy = function(rectangle) {};

/**
 * @param {number} x
 * @param {number} y
 * @return {boolean}
 */
PIXI.Rectangle.prototype.contains = function(x, y) {};

/**
 * @param {number} paddingX
 * @param {number} paddingY
 * @return {void}
 */
PIXI.Rectangle.prototype.pad = function(paddingX, paddingY) {};

/**
 * @param {!PIXI.Rectangle} rectangle
 * @return {void}
 */
PIXI.Rectangle.prototype.fit = function(rectangle) {};

/**
 * @param {!PIXI.Rectangle} rectangle
 * @return {void}
 */
PIXI.Rectangle.prototype.enlarge = function(rectangle) {};

/**
 * @constructor
 * @struct
 * @param {number=} x
 * @param {number=} y
 * @param {number=} width
 * @param {number=} height
 * @param {number=} radius
 */
PIXI.RoundedRectangle = function(x, y, width, height, radius) {};
 /** @type {number} */
PIXI.RoundedRectangle.prototype.x;
 /** @type {number} */
PIXI.RoundedRectangle.prototype.y;
 /** @type {number} */
PIXI.RoundedRectangle.prototype.width;
 /** @type {number} */
PIXI.RoundedRectangle.prototype.height;
 /** @type {number} */
PIXI.RoundedRectangle.prototype.radius;
 /** @type {number} */
PIXI.RoundedRectangle.prototype.type;

/**
 * @return {!PIXI.RoundedRectangle}
 */
PIXI.RoundedRectangle.prototype.clone = function() {};

/**
 * @param {number} x
 * @param {number} y
 * @return {boolean}
 */
PIXI.RoundedRectangle.prototype.contains = function(x, y) {};
/**
 * @record
 * @struct
 */
PIXI.RendererOptions = function() {};
 /** @type {number} */
PIXI.RendererOptions.prototype.width;
 /** @type {number} */
PIXI.RendererOptions.prototype.height;
 /** @type {!HTMLCanvasElement} */
PIXI.RendererOptions.prototype.view;
 /** @type {boolean} */
PIXI.RendererOptions.prototype.transparent;
 /** @type {boolean} */
PIXI.RendererOptions.prototype.antialias;
 /** @type {boolean} */
PIXI.RendererOptions.prototype.preserveDrawingBuffer;
 /** @type {number} */
PIXI.RendererOptions.prototype.resolution;
 /** @type {boolean} */
PIXI.RendererOptions.prototype.forceCanvas;
 /** @type {number} */
PIXI.RendererOptions.prototype.backgroundColor;
 /** @type {boolean} */
PIXI.RendererOptions.prototype.clearBeforeRender;
 /** @type {boolean} */
PIXI.RendererOptions.prototype.roundPixels;
 /** @type {boolean} */
PIXI.RendererOptions.prototype.forceFXAA;
 /** @type {boolean} */
PIXI.RendererOptions.prototype.legacy;
 /** @type {!WebGLRenderingContext} */
PIXI.RendererOptions.prototype.context;
 /** @type {boolean} */
PIXI.RendererOptions.prototype.autoResize;
 /** @type {boolean} */
PIXI.RendererOptions.prototype.powerPreference;
/**
 * @extends {PIXI.RendererOptions}
 * @record
 * @struct
 */
PIXI.ApplicationOptions = function() {};
 /** @type {boolean} */
PIXI.ApplicationOptions.prototype.sharedTicker;
 /** @type {boolean} */
PIXI.ApplicationOptions.prototype.sharedLoader;
 /** @type {boolean} */
PIXI.ApplicationOptions.prototype.autoStart;
/**
 * @record
 * @struct
 */
PIXI.DefaultRendererPlugins = function() {};
 /** @type {!PIXI.accessibility.AccessibilityManager} */
PIXI.DefaultRendererPlugins.prototype.accessibility;
 /** @type {!PIXI.interaction.InteractionManager} */
PIXI.DefaultRendererPlugins.prototype.interaction;
/**
 * @extends {PIXI.DefaultRendererPlugins}
 * @record
 * @struct
 */
PIXI.RendererPlugins = function() {};

/**
 * @constructor
 * @struct
 * @param {string} system
 * @param {!PIXI.RendererOptions|number=} options_or_screenWidth
 * @param {number=} screenHeight
 * @param {!PIXI.RendererOptions=} options
 */
PIXI.SystemRenderer = function(system, options_or_screenWidth, screenHeight, options) {};
 /** @type {number} */
PIXI.SystemRenderer.prototype.type;
 /** @type {!PIXI.RendererOptions} */
PIXI.SystemRenderer.prototype.options;
 /** @type {!PIXI.Rectangle} */
PIXI.SystemRenderer.prototype.screen;
 /** @type {number} */
PIXI.SystemRenderer.prototype.width;
 /** @type {number} */
PIXI.SystemRenderer.prototype.height;
 /** @type {!HTMLCanvasElement} */
PIXI.SystemRenderer.prototype.view;
 /** @type {number} */
PIXI.SystemRenderer.prototype.resolution;
 /** @type {boolean} */
PIXI.SystemRenderer.prototype.transparent;
 /** @type {boolean} */
PIXI.SystemRenderer.prototype.autoResize;
 /** @type {?} */
PIXI.SystemRenderer.prototype.blendModes;
 /** @type {boolean} */
PIXI.SystemRenderer.prototype.preserveDrawingBuffer;
 /** @type {boolean} */
PIXI.SystemRenderer.prototype.clearBeforeRender;
 /** @type {boolean} */
PIXI.SystemRenderer.prototype.roundPixels;
 /** @type {number} */
PIXI.SystemRenderer.prototype._backgroundColor;
 /** @type {!Array<number>} */
PIXI.SystemRenderer.prototype._backgroundColorRgba;
 /** @type {string} */
PIXI.SystemRenderer.prototype._backgroundColorString;
 /** @type {!PIXI.Container} */
PIXI.SystemRenderer.prototype._tempDisplayObjectParent;
 /** @type {!PIXI.DisplayObject} */
PIXI.SystemRenderer.prototype._lastObjectRendered;

/**
 * @param {number} screenWidth
 * @param {number} screenHeight
 * @return {void}
 */
PIXI.SystemRenderer.prototype.resize = function(screenWidth, screenHeight) {};

/**
 * @param {!PIXI.DisplayObject} displayObject
 * @param {number=} scaleMode
 * @param {number=} resolution
 * @return {!PIXI.RenderTexture}
 */
PIXI.SystemRenderer.prototype.generateTexture = function(displayObject, scaleMode, resolution) {};

/**
 * @param {...?} args
 * @return {void}
 */
PIXI.SystemRenderer.prototype.render = function(args) {};

/**
 * @param {boolean=} removeView
 * @return {void}
 */
PIXI.SystemRenderer.prototype.destroy = function(removeView) {};
/**
 * @record
 * @struct
 */
PIXI.DefaultCanvasRendererPlugins = function() {};
 /** @type {!PIXI.extract.CanvasExtract} */
PIXI.DefaultCanvasRendererPlugins.prototype.extract;
 /** @type {!PIXI.prepare.CanvasPrepare} */
PIXI.DefaultCanvasRendererPlugins.prototype.prepare;
/**
 * @extends {PIXI.DefaultCanvasRendererPlugins}
 * @extends {PIXI.RendererPlugins}
 * @record
 * @struct
 */
PIXI.CanvasRendererPlugins = function() {};

/**
 * @constructor
 * @struct
 * @param {!PIXI.RendererOptions|number=} options_or_screenWidth
 * @param {number=} screenHeight
 * @param {!PIXI.RendererOptions=} options
 */
PIXI.CanvasRenderer = function(options_or_screenWidth, screenHeight, options) {};
 /** @type {!Object<string,function(new: (?), !PIXI.CanvasRenderer): ?>} */
PIXI.CanvasRenderer.__plugins;
 /** @type {?} */
PIXI.CanvasRenderer.prototype.plugins;
 /** @type {number} */
PIXI.CanvasRenderer.prototype._activeBlendMode;
 /** @type {!CanvasRenderingContext2D} */
PIXI.CanvasRenderer.prototype.rootContext;
 /** @type {number} */
PIXI.CanvasRenderer.prototype.rootResolution;
 /** @type {boolean} */
PIXI.CanvasRenderer.prototype.refresh;
 /** @type {!PIXI.CanvasMaskManager} */
PIXI.CanvasRenderer.prototype.maskManager;
 /** @type {string} */
PIXI.CanvasRenderer.prototype.smoothProperty;
 /** @type {!PIXI.extract.CanvasExtract} */
PIXI.CanvasRenderer.prototype.extract;
 /** @type {!CanvasRenderingContext2D} */
PIXI.CanvasRenderer.prototype.context;

/**
 * @param {string} pluginName
 * @param {function(new: (?), !PIXI.CanvasRenderer): ?} ctor
 * @return {void}
 */
PIXI.CanvasRenderer.registerPlugin = function(pluginName, ctor) {};

/**
 * @return {void}
 */
PIXI.CanvasRenderer.prototype.initPlugins = function() {};

/**
 * @return {void}
 */
PIXI.CanvasRenderer.prototype.destroyPlugins = function() {};

/**
 * @param {!PIXI.DisplayObject} displayObject
 * @param {!PIXI.RenderTexture=} renderTexture
 * @param {boolean=} clear
 * @param {!PIXI.Transform=} transform
 * @param {boolean=} skipUpdateTransform
 * @return {void}
 */
PIXI.CanvasRenderer.prototype.render = function(displayObject, renderTexture, clear, transform, skipUpdateTransform) {};

/**
 * @param {number} blendMode
 * @return {void}
 */
PIXI.CanvasRenderer.prototype.setBlendMode = function(blendMode) {};

/**
 * @param {boolean=} removeView
 * @return {void}
 */
PIXI.CanvasRenderer.prototype.destroy = function(removeView) {};

/**
 * @param {string=} clearColor
 * @return {void}
 */
PIXI.CanvasRenderer.prototype.clear = function(clearColor) {};

/**
 * @return {void}
 */
PIXI.CanvasRenderer.prototype.invalidateBlendMode = function() {};

/**
 * @param {string} event
 * @param {function(): void} fn
 * @param {?=} context
 * @return {CanvasRenderer}
 */
PIXI.CanvasRenderer.prototype.on = function(event, fn, context) {};

/**
 * @param {string} event
 * @param {function(): void} fn
 * @param {?=} context
 * @return {CanvasRenderer}
 */
PIXI.CanvasRenderer.prototype.once = function(event, fn, context) {};

/**
 * @param {string} event
 * @param {function(): void=} fn
 * @param {?=} context
 * @return {CanvasRenderer}
 */
PIXI.CanvasRenderer.prototype.removeListener = function(event, fn, context) {};

/**
 * @param {string} event
 * @return {CanvasRenderer}
 */
PIXI.CanvasRenderer.prototype.removeAllListeners = function(event) {};

/**
 * @param {string} event
 * @param {function(): void=} fn
 * @param {?=} context
 * @return {CanvasRenderer}
 */
PIXI.CanvasRenderer.prototype.off = function(event, fn, context) {};

/**
 * @param {string} event
 * @param {function(): void} fn
 * @param {?=} context
 * @return {CanvasRenderer}
 */
PIXI.CanvasRenderer.prototype.addListener = function(event, fn, context) {};

/**
 * @constructor
 * @struct
 * @param {!PIXI.CanvasRenderer} renderer
 */
PIXI.CanvasMaskManager = function(renderer) {};

/**
 * @param {?} maskData
 * @return {void}
 */
PIXI.CanvasMaskManager.prototype.pushMask = function(maskData) {};

/**
 * @param {!PIXI.Graphics} graphics
 * @return {void}
 */
PIXI.CanvasMaskManager.prototype.renderGraphicsShape = function(graphics) {};

/**
 * @param {(!PIXI.WebGLRenderer|!PIXI.CanvasRenderer)} renderer
 * @return {void}
 */
PIXI.CanvasMaskManager.prototype.popMask = function(renderer) {};

/**
 * @return {void}
 */
PIXI.CanvasMaskManager.prototype.destroy = function() {};

/**
 * @constructor
 * @struct
 * @param {number} width
 * @param {number} height
 * @param {number} resolution
 */
PIXI.CanvasRenderTarget = function(width, height, resolution) {};
 /** @type {!HTMLCanvasElement} */
PIXI.CanvasRenderTarget.prototype.canvas;
 /** @type {!CanvasRenderingContext2D} */
PIXI.CanvasRenderTarget.prototype.context;
 /** @type {number} */
PIXI.CanvasRenderTarget.prototype.resolution;
 /** @type {number} */
PIXI.CanvasRenderTarget.prototype.width;
 /** @type {number} */
PIXI.CanvasRenderTarget.prototype.height;

/**
 * @return {void}
 */
PIXI.CanvasRenderTarget.prototype.clear = function() {};

/**
 * @param {number} width
 * @param {number} height
 * @return {void}
 */
PIXI.CanvasRenderTarget.prototype.resize = function(width, height) {};

/**
 * @return {void}
 */
PIXI.CanvasRenderTarget.prototype.destroy = function() {};
/**
 * @extends {PIXI.RendererOptions}
 * @record
 * @struct
 */
PIXI.WebGLRendererOptions = function() {};
/**
 * @record
 * @struct
 */
PIXI.DefaultWebGLRendererPlugins = function() {};
 /** @type {!PIXI.extract.WebGLExtract} */
PIXI.DefaultWebGLRendererPlugins.prototype.extract;
 /** @type {!PIXI.prepare.WebGLPrepare} */
PIXI.DefaultWebGLRendererPlugins.prototype.prepare;
/**
 * @extends {PIXI.DefaultWebGLRendererPlugins}
 * @extends {PIXI.RendererPlugins}
 * @record
 * @struct
 */
PIXI.WebGLRendererPlugins = function() {};

/**
 * @constructor
 * @struct
 * @param {!PIXI.WebGLRendererOptions|number=} options_or_screenWidth
 * @param {number=} screenHeight
 * @param {!PIXI.WebGLRendererOptions=} options
 */
PIXI.WebGLRenderer = function(options_or_screenWidth, screenHeight, options) {};
 /** @type {!Object<string,function(new: (?), !PIXI.WebGLRenderer): ?>} */
PIXI.WebGLRenderer.__plugins;
 /** @type {?} */
PIXI.WebGLRenderer.prototype.plugins;
 /** @type {{alpha: boolean, antiAlias: boolean, premultipliedAlpha: boolean, stencil: boolean, preseveDrawingBuffer: boolean}} */
PIXI.WebGLRenderer.prototype._contextOptions;
 /** @type {!Array<number>} */
PIXI.WebGLRenderer.prototype._backgroundColorRgba;
 /** @type {!PIXI.MaskManager} */
PIXI.WebGLRenderer.prototype.maskManager;
 /** @type {!PIXI.StencilManager} */
PIXI.WebGLRenderer.prototype.stencilManager;
 /** @type {!PIXI.ObjectRenderer} */
PIXI.WebGLRenderer.prototype.emptyRenderer;
 /** @type {!PIXI.ObjectRenderer} */
PIXI.WebGLRenderer.prototype.currentRenderer;
 /** @type {!WebGLRenderingContext} */
PIXI.WebGLRenderer.prototype.gl;
 /** @type {number} */
PIXI.WebGLRenderer.prototype.CONTEXT_UID;
 /** @type {!PIXI.WebGLState} */
PIXI.WebGLRenderer.prototype.state;
 /** @type {boolean} */
PIXI.WebGLRenderer.prototype.renderingToScreen;
 /** @type {!Array<!PIXI.Texture>} */
PIXI.WebGLRenderer.prototype.boundTextures;
 /** @type {!PIXI.FilterManager} */
PIXI.WebGLRenderer.prototype.filterManager;
 /** @type {!PIXI.TextureManager} */
PIXI.WebGLRenderer.prototype.textureManager;
 /** @type {!PIXI.TextureGarbageCollector} */
PIXI.WebGLRenderer.prototype.textureGC;
 /** @type {!PIXI.extract.WebGLExtract} */
PIXI.WebGLRenderer.prototype.extract;
 /** @type {?} */
PIXI.WebGLRenderer.prototype.drawModes;
 /** @type {!PIXI.Shader} */
PIXI.WebGLRenderer.prototype._activeShader;
 /** @type {!PIXI.RenderTarget} */
PIXI.WebGLRenderer.prototype._activeRenderTarget;
 /** @type {function(!WebGLContextEvent): void} */
PIXI.WebGLRenderer.prototype.handleContextLost;
 /** @type {function(): void} */
PIXI.WebGLRenderer.prototype.handleContextRestored;

/**
 * @param {string} pluginName
 * @param {function(new: (?), !PIXI.WebGLRenderer): ?} ctor
 * @return {void}
 */
PIXI.WebGLRenderer.registerPlugin = function(pluginName, ctor) {};

/**
 * @return {void}
 */
PIXI.WebGLRenderer.prototype.initPlugins = function() {};

/**
 * @return {void}
 */
PIXI.WebGLRenderer.prototype.destroyPlugins = function() {};

/**
 * @return {void}
 */
PIXI.WebGLRenderer.prototype._initContext = function() {};

/**
 * @param {!PIXI.DisplayObject} displayObject
 * @param {!PIXI.RenderTexture=} renderTexture
 * @param {boolean=} clear
 * @param {!PIXI.Transform=} transform
 * @param {boolean=} skipUpdateTransform
 * @return {void}
 */
PIXI.WebGLRenderer.prototype.render = function(displayObject, renderTexture, clear, transform, skipUpdateTransform) {};

/**
 * @param {!PIXI.ObjectRenderer} objectRenderer
 * @return {void}
 */
PIXI.WebGLRenderer.prototype.setObjectRenderer = function(objectRenderer) {};

/**
 * @return {void}
 */
PIXI.WebGLRenderer.prototype.flush = function() {};

/**
 * @param {number} blendMode
 * @return {void}
 */
PIXI.WebGLRenderer.prototype.setBlendMode = function(blendMode) {};

/**
 * @param {number=} clearColor
 * @return {void}
 */
PIXI.WebGLRenderer.prototype.clear = function(clearColor) {};

/**
 * @param {!PIXI.Matrix} matrix
 * @return {void}
 */
PIXI.WebGLRenderer.prototype.setTransform = function(matrix) {};

/**
 * @param {!PIXI.RenderTexture} renderTexture
 * @param {number=} clearColor
 * @return {!PIXI.WebGLRenderer}
 */
PIXI.WebGLRenderer.prototype.clearRenderTexture = function(renderTexture, clearColor) {};

/**
 * @param {!PIXI.RenderTexture} renderTexture
 * @param {!PIXI.Transform} transform
 * @return {!PIXI.WebGLRenderer}
 */
PIXI.WebGLRenderer.prototype.bindRenderTexture = function(renderTexture, transform) {};

/**
 * @param {!PIXI.RenderTarget} renderTarget
 * @return {!PIXI.WebGLRenderer}
 */
PIXI.WebGLRenderer.prototype.bindRenderTarget = function(renderTarget) {};

/**
 * @param {!PIXI.Shader} shader
 * @param {boolean=} autoProject
 * @return {!PIXI.WebGLRenderer}
 */
PIXI.WebGLRenderer.prototype.bindShader = function(shader, autoProject) {};

/**
 * @param {(!PIXI.Texture|!PIXI.BaseTexture)} texture
 * @param {number=} location
 * @param {boolean=} forceLocation
 * @return {number}
 */
PIXI.WebGLRenderer.prototype.bindTexture = function(texture, location, forceLocation) {};

/**
 * @param {(!PIXI.Texture|!PIXI.BaseTexture)} texture
 * @return {!PIXI.WebGLRenderer}
 */
PIXI.WebGLRenderer.prototype.unbindTexture = function(texture) {};

/**
 * @return {!PIXI.glCore.VertexArrayObject}
 */
PIXI.WebGLRenderer.prototype.createVao = function() {};

/**
 * @param {!PIXI.glCore.VertexArrayObject} vao
 * @return {!PIXI.WebGLRenderer}
 */
PIXI.WebGLRenderer.prototype.bindVao = function(vao) {};

/**
 * @return {!PIXI.WebGLRenderer}
 */
PIXI.WebGLRenderer.prototype.reset = function() {};

/**
 * @param {boolean=} removeView
 * @return {void}
 */
PIXI.WebGLRenderer.prototype.destroy = function(removeView) {};

/**
 * @param {string} event
 * @param {function(): void|function(!WebGLRenderingContext): void} fn
 * @param {?=} context
 * @return {WebGLRenderer}
 */
PIXI.WebGLRenderer.prototype.on = function(event, fn, context) {};

/**
 * @param {string} event
 * @param {function(): void|function(!WebGLRenderingContext): void} fn
 * @param {?=} context
 * @return {WebGLRenderer}
 */
PIXI.WebGLRenderer.prototype.once = function(event, fn, context) {};

/**
 * @param {string} event
 * @param {function(): void|function(!WebGLRenderingContext): void=} fn
 * @param {?=} context
 * @return {WebGLRenderer}
 */
PIXI.WebGLRenderer.prototype.removeListener = function(event, fn, context) {};

/**
 * @param {string} event
 * @return {WebGLRenderer}
 */
PIXI.WebGLRenderer.prototype.removeAllListeners = function(event) {};

/**
 * @param {string} event
 * @param {function(): void|function(!WebGLRenderingContext): void=} fn
 * @param {?=} context
 * @return {WebGLRenderer}
 */
PIXI.WebGLRenderer.prototype.off = function(event, fn, context) {};

/**
 * @param {string} event
 * @param {function(): void|function(!WebGLRenderingContext): void} fn
 * @param {?=} context
 * @return {WebGLRenderer}
 */
PIXI.WebGLRenderer.prototype.addListener = function(event, fn, context) {};

/**
 * @constructor
 * @struct
 * @param {!WebGLRenderingContext} gl
 */
PIXI.WebGLState = function(gl) {};
 /** @type {!Array<number>} */
PIXI.WebGLState.prototype.activeState;
 /** @type {!Array<number>} */
PIXI.WebGLState.prototype.defaultState;
 /** @type {number} */
PIXI.WebGLState.prototype.stackIndex;
 /** @type {!Array<number>} */
PIXI.WebGLState.prototype.stack;
 /** @type {!WebGLRenderingContext} */
PIXI.WebGLState.prototype.gl;
 /** @type {number} */
PIXI.WebGLState.prototype.maxAttribs;
 /** @type {!PIXI.glCore.AttribState} */
PIXI.WebGLState.prototype.attribState;
 /** @type {?} */
PIXI.WebGLState.prototype.nativeVaoExtension;

/**
 * @return {void}
 */
PIXI.WebGLState.prototype.push = function() {};

/**
 * @return {void}
 */
PIXI.WebGLState.prototype.pop = function() {};

/**
 * @param {!Array<number>} state
 * @return {void}
 */
PIXI.WebGLState.prototype.setState = function(state) {};

/**
 * @param {number} value
 * @return {void}
 */
PIXI.WebGLState.prototype.setBlend = function(value) {};

/**
 * @param {number} value
 * @return {void}
 */
PIXI.WebGLState.prototype.setBlendMode = function(value) {};

/**
 * @param {number} value
 * @return {void}
 */
PIXI.WebGLState.prototype.setDepthTest = function(value) {};

/**
 * @param {number} value
 * @return {void}
 */
PIXI.WebGLState.prototype.setCullFace = function(value) {};

/**
 * @param {number} value
 * @return {void}
 */
PIXI.WebGLState.prototype.setFrontFace = function(value) {};

/**
 * @return {void}
 */
PIXI.WebGLState.prototype.resetAttributes = function() {};

/**
 * @return {void}
 */
PIXI.WebGLState.prototype.resetToDefault = function() {};

/**
 * @constructor
 * @struct
 * @param {!PIXI.WebGLRenderer} renderer
 */
PIXI.TextureManager = function(renderer) {};
 /** @type {!PIXI.WebGLRenderer} */
PIXI.TextureManager.prototype.renderer;
 /** @type {!WebGLRenderingContext} */
PIXI.TextureManager.prototype.gl;
 /** @type {!Array<!PIXI.Texture>} */
PIXI.TextureManager.prototype._managedTextures;

/**
 * @return {void}
 */
PIXI.TextureManager.prototype.bindTexture = function() {};

/**
 * @return {!WebGLTexture}
 */
PIXI.TextureManager.prototype.getTexture = function() {};

/**
 * @param {(!PIXI.Texture|!PIXI.BaseTexture)} texture
 * @return {!WebGLTexture}
 */
PIXI.TextureManager.prototype.updateTexture = function(texture) {};

/**
 * @param {!PIXI.BaseTexture} texture
 * @param {boolean=} _skipRemove
 * @return {void}
 */
PIXI.TextureManager.prototype.destroyTexture = function(texture, _skipRemove) {};

/**
 * @return {void}
 */
PIXI.TextureManager.prototype.removeAll = function() {};

/**
 * @return {void}
 */
PIXI.TextureManager.prototype.destroy = function() {};

/**
 * @constructor
 * @struct
 * @param {!PIXI.WebGLRenderer} renderer
 */
PIXI.TextureGarbageCollector = function(renderer) {};
 /** @type {!PIXI.WebGLRenderer} */
PIXI.TextureGarbageCollector.prototype.renderer;
 /** @type {number} */
PIXI.TextureGarbageCollector.prototype.count;
 /** @type {number} */
PIXI.TextureGarbageCollector.prototype.checkCount;
 /** @type {number} */
PIXI.TextureGarbageCollector.prototype.maxIdle;
 /** @type {number} */
PIXI.TextureGarbageCollector.prototype.checkCountMax;
 /** @type {number} */
PIXI.TextureGarbageCollector.prototype.mode;

/**
 * @return {void}
 */
PIXI.TextureGarbageCollector.prototype.update = function() {};

/**
 * @return {void}
 */
PIXI.TextureGarbageCollector.prototype.run = function() {};

/**
 * @return {void}
 */
PIXI.TextureGarbageCollector.prototype.unload = function() {};

/**
 * @constructor
 * @struct
 * @param {!PIXI.WebGLRenderer} renderer
 */
PIXI.ObjectRenderer = function(renderer) {};

/**
 * @return {void}
 */
PIXI.ObjectRenderer.prototype.start = function() {};

/**
 * @return {void}
 */
PIXI.ObjectRenderer.prototype.stop = function() {};

/**
 * @return {void}
 */
PIXI.ObjectRenderer.prototype.flush = function() {};

/**
 * @param {...?} args
 * @return {void}
 */
PIXI.ObjectRenderer.prototype.render = function(args) {};

/**
 * @constructor
 * @struct
 * @param {!WebGLRenderingContext} gl
 */
PIXI.Quad = function(gl) {};
 /** @type {!WebGLRenderingContext} */
PIXI.Quad.prototype.gl;
 /** @type {!Array<number>} */
PIXI.Quad.prototype.vertices;
 /** @type {!Array<number>} */
PIXI.Quad.prototype.uvs;
 /** @type {!Array<number>} */
PIXI.Quad.prototype.interleaved;
 /** @type {!Array<number>} */
PIXI.Quad.prototype.indices;
 /** @type {!WebGLBuffer} */
PIXI.Quad.prototype.vertexBuffer;
 /** @type {!PIXI.glCore.VertexArrayObject} */
PIXI.Quad.prototype.vao;

/**
 * @param {!PIXI.glCore.GLShader} shader
 * @return {void}
 */
PIXI.Quad.prototype.initVao = function(shader) {};

/**
 * @param {!PIXI.Rectangle} targetTextureFrame
 * @param {!PIXI.Rectangle} destinationFrame
 * @return {!PIXI.Quad}
 */
PIXI.Quad.prototype.map = function(targetTextureFrame, destinationFrame) {};

/**
 * @return {!PIXI.Quad}
 */
PIXI.Quad.prototype.upload = function() {};

/**
 * @return {void}
 */
PIXI.Quad.prototype.destroy = function() {};
/**
 * @record
 * @struct
 */
PIXI.FilterDataStackItem = function() {};
 /** @type {!PIXI.RenderTarget} */
PIXI.FilterDataStackItem.prototype.renderTarget;
 /** @type {!Array<?>} */
PIXI.FilterDataStackItem.prototype.filter;
 /** @type {!PIXI.Rectangle} */
PIXI.FilterDataStackItem.prototype.bounds;

/**
 * @constructor
 * @struct
 * @param {!WebGLRenderingContext} gl
 * @param {number} width
 * @param {number} height
 * @param {number} scaleMode
 * @param {number} resolution
 * @param {boolean=} root
 */
PIXI.RenderTarget = function(gl, width, height, scaleMode, resolution, root) {};
 /** @type {!WebGLRenderingContext} */
PIXI.RenderTarget.prototype.gl;
 /** @type {!PIXI.glCore.GLFramebuffer} */
PIXI.RenderTarget.prototype.frameBuffer;
 /** @type {!PIXI.Texture} */
PIXI.RenderTarget.prototype.texture;
 /** @type {!Array<number>} */
PIXI.RenderTarget.prototype.clearColor;
 /** @type {!PIXI.Rectangle} */
PIXI.RenderTarget.prototype.size;
 /** @type {number} */
PIXI.RenderTarget.prototype.resolution;
 /** @type {!PIXI.Matrix} */
PIXI.RenderTarget.prototype.projectionMatrix;
 /** @type {!PIXI.Matrix} */
PIXI.RenderTarget.prototype.transform;
 /** @type {!PIXI.Rectangle} */
PIXI.RenderTarget.prototype.frame;
 /** @type {!PIXI.Rectangle} */
PIXI.RenderTarget.prototype.defaultFrame;
 /** @type {!PIXI.Rectangle} */
PIXI.RenderTarget.prototype.destinationFrame;
 /** @type {!PIXI.Rectangle} */
PIXI.RenderTarget.prototype.sourceFrame;
 /** @type {!PIXI.glCore.GLFramebuffer} */
PIXI.RenderTarget.prototype.stencilBuffer;
 /** @type {!Array<!PIXI.Graphics>} */
PIXI.RenderTarget.prototype.stencilMaskStack;
 /** @type {{index: number, stack: !Array<!PIXI.FilterDataStackItem>}} */
PIXI.RenderTarget.prototype.filterData;
 /** @type {number} */
PIXI.RenderTarget.prototype.scaleMode;
 /** @type {boolean} */
PIXI.RenderTarget.prototype.root;

/**
 * @param {!Array<number>=} clearColor
 * @return {void}
 */
PIXI.RenderTarget.prototype.clear = function(clearColor) {};

/**
 * @return {void}
 */
PIXI.RenderTarget.prototype.attachStencilBuffer = function() {};

/**
 * @param {!PIXI.Rectangle} destinationFrame
 * @param {!PIXI.Rectangle} sourceFrame
 * @return {void}
 */
PIXI.RenderTarget.prototype.setFrame = function(destinationFrame, sourceFrame) {};

/**
 * @return {void}
 */
PIXI.RenderTarget.prototype.activate = function() {};

/**
 * @param {!PIXI.Rectangle} destinationFrame
 * @param {!PIXI.Rectangle} sourceFrame
 * @return {void}
 */
PIXI.RenderTarget.prototype.calculateProjection = function(destinationFrame, sourceFrame) {};

/**
 * @param {number} width
 * @param {number} height
 * @return {void}
 */
PIXI.RenderTarget.prototype.resize = function(width, height) {};

/**
 * @return {void}
 */
PIXI.RenderTarget.prototype.destroy = function() {};

/**
 * @constructor
 * @struct
 * @param {!PIXI.WebGLRenderer} renderer
 */
PIXI.BlendModeManager = function(renderer) {};
 /** @type {number} */
PIXI.BlendModeManager.prototype.currentBlendMode;

/**
 * @param {number} blendMode
 * @return {boolean}
 */
PIXI.BlendModeManager.prototype.setBlendMode = function(blendMode) {};
/**
 * @record
 * @struct
 */
PIXI.FilterManagerStackItem = function() {};
 /** @type {!PIXI.RenderTarget} */
PIXI.FilterManagerStackItem.prototype.renderTarget;
 /** @type {!PIXI.Rectangle} */
PIXI.FilterManagerStackItem.prototype.sourceFrame;
 /** @type {!PIXI.Rectangle} */
PIXI.FilterManagerStackItem.prototype.destinationFrame;
 /** @type {!Array<!PIXI.Filter<?>>} */
PIXI.FilterManagerStackItem.prototype.filters;
 /** @type {?} */
PIXI.FilterManagerStackItem.prototype.target;
 /** @type {number} */
PIXI.FilterManagerStackItem.prototype.resolution;

/**
 * @constructor
 * @struct
 * @param {!PIXI.WebGLRenderer} renderer
 */
PIXI.FilterManager = function(renderer) {};
 /** @type {!WebGLRenderingContext} */
PIXI.FilterManager.prototype.gl;
 /** @type {!PIXI.Quad} */
PIXI.FilterManager.prototype.quad;
 /** @type {!Array<!PIXI.FilterManagerStackItem>} */
PIXI.FilterManager.prototype.stack;
 /** @type {number} */
PIXI.FilterManager.prototype.stackIndex;
 /** @type {?} */
PIXI.FilterManager.prototype.shaderCache;
 /** @type {?} */
PIXI.FilterManager.prototype.filterData;

/**
 * @param {!PIXI.RenderTarget} target
 * @param {!Array<!PIXI.Filter<?>>} filters
 * @return {void}
 */
PIXI.FilterManager.prototype.pushFilter = function(target, filters) {};

/**
 * @return {void}
 */
PIXI.FilterManager.prototype.popFilter = function() {};

/**
 * @param {(!PIXI.Filter<?>|!PIXI.glCore.GLShader)} shader
 * @param {!PIXI.RenderTarget} inputTarget
 * @param {!PIXI.RenderTarget} outputTarget
 * @param {boolean=} clear
 * @return {void}
 */
PIXI.FilterManager.prototype.applyFilter = function(shader, inputTarget, outputTarget, clear) {};

/**
 * @param {!PIXI.glCore.GLShader} shader
 * @param {!PIXI.Filter<?>} filter
 * @return {void}
 */
PIXI.FilterManager.prototype.syncUniforms = function(shader, filter) {};

/**
 * @param {boolean=} clear
 * @param {number=} resolution
 * @return {!PIXI.RenderTarget}
 */
PIXI.FilterManager.prototype.getRenderTarget = function(clear, resolution) {};

/**
 * @param {!PIXI.RenderTarget} renderTarget
 * @return {!PIXI.RenderTarget}
 */
PIXI.FilterManager.prototype.returnRenderTarget = function(renderTarget) {};

/**
 * @param {!PIXI.Matrix} outputMatrix
 * @return {!PIXI.Matrix}
 */
PIXI.FilterManager.prototype.calculateScreenSpaceMatrix = function(outputMatrix) {};

/**
 * @param {!PIXI.Matrix} outputMatrix
 * @return {!PIXI.Matrix}
 */
PIXI.FilterManager.prototype.calculateNormalizedScreenSpaceMatrix = function(outputMatrix) {};

/**
 * @param {!PIXI.Matrix} outputMatrix
 * @param {!PIXI.Sprite} sprite
 * @return {!PIXI.Matrix}
 */
PIXI.FilterManager.prototype.calculateSpriteMatrix = function(outputMatrix, sprite) {};

/**
 * @return {void}
 */
PIXI.FilterManager.prototype.destroy = function() {};

/**
 * @return {void}
 */
PIXI.FilterManager.prototype.emptyPool = function() {};

/**
 * @param {!WebGLRenderingContext} gl
 * @param {number} minWidth
 * @param {number} minHeight
 * @param {number} resolution
 * @return {!PIXI.RenderTarget}
 */
PIXI.FilterManager.prototype.getPotRenderTarget = function(gl, minWidth, minHeight, resolution) {};

/**
 * @param {!PIXI.RenderTarget} renderTarget
 * @return {void}
 */
PIXI.FilterManager.prototype.freePotRenderTarget = function(renderTarget) {};
/**
 * @constructor
 * @struct
 */
PIXI.StencilMaskStack = function() {};
 /** @type {!Array<?>} */
PIXI.StencilMaskStack.prototype.stencilStack;
 /** @type {boolean} */
PIXI.StencilMaskStack.prototype.reverse;
 /** @type {number} */
PIXI.StencilMaskStack.prototype.count;
/**
 * @extends {PIXI.WebGLManager}
 * @constructor
 * @struct
 */
PIXI.MaskManager = function() {};
 /** @type {boolean} */
PIXI.MaskManager.prototype.scissor;
 /** @type {?} */
PIXI.MaskManager.prototype.scissorData;
 /** @type {!PIXI.RenderTarget} */
PIXI.MaskManager.prototype.scissorRenderTarget;
 /** @type {boolean} */
PIXI.MaskManager.prototype.enableScissor;
 /** @type {!Array<number>} */
PIXI.MaskManager.prototype.alphaMaskPool;
 /** @type {number} */
PIXI.MaskManager.prototype.alphaMaskIndex;

/**
 * @param {!PIXI.RenderTarget} target
 * @param {(!PIXI.Graphics|!PIXI.Sprite)} maskData
 * @return {void}
 */
PIXI.MaskManager.prototype.pushMask = function(target, maskData) {};

/**
 * @param {!PIXI.RenderTarget} target
 * @param {(!PIXI.Graphics|!PIXI.Sprite)} maskData
 * @return {void}
 */
PIXI.MaskManager.prototype.popMask = function(target, maskData) {};

/**
 * @param {!PIXI.RenderTarget} target
 * @param {(!PIXI.Graphics|!PIXI.Sprite)} maskData
 * @return {void}
 */
PIXI.MaskManager.prototype.pushSpriteMask = function(target, maskData) {};

/**
 * @return {void}
 */
PIXI.MaskManager.prototype.popSpriteMask = function() {};

/**
 * @param {(!PIXI.Graphics|!PIXI.Sprite)} maskData
 * @return {void}
 */
PIXI.MaskManager.prototype.pushStencilMask = function(maskData) {};

/**
 * @return {void}
 */
PIXI.MaskManager.prototype.popStencilMask = function() {};

/**
 * @param {!PIXI.RenderTarget} target
 * @param {(!PIXI.Graphics|!PIXI.Sprite)} maskData
 * @return {void}
 */
PIXI.MaskManager.prototype.pushScissorMask = function(target, maskData) {};

/**
 * @return {void}
 */
PIXI.MaskManager.prototype.popScissorMask = function() {};

/**
 * @constructor
 * @struct
 * @param {!PIXI.WebGLRenderer} renderer
 */
PIXI.StencilManager = function(renderer) {};
 /** @type {!Array<!PIXI.Graphics>} */
PIXI.StencilManager.prototype.stencilMaskStack;

/**
 * @param {!Array<!PIXI.Graphics>} stencilMasStack
 * @return {void}
 */
PIXI.StencilManager.prototype.setMaskStack = function(stencilMasStack) {};

/**
 * @param {!PIXI.Graphics} graphics
 * @return {void}
 */
PIXI.StencilManager.prototype.pushStencil = function(graphics) {};

/**
 * @return {void}
 */
PIXI.StencilManager.prototype.popStencil = function() {};

/**
 * @return {void}
 */
PIXI.StencilManager.prototype.destroy = function() {};

/**
 * @constructor
 * @struct
 * @param {!PIXI.WebGLRenderer} renderer
 */
PIXI.WebGLManager = function(renderer) {};
 /** @type {!PIXI.WebGLRenderer} */
PIXI.WebGLManager.prototype.renderer;

/**
 * @return {void}
 */
PIXI.WebGLManager.prototype.onContextChange = function() {};

/**
 * @return {void}
 */
PIXI.WebGLManager.prototype.destroy = function() {};
/**
 * @record
 * @struct
 */
PIXI.UniformData = function() {};
 /** @type {string} */
PIXI.UniformData.prototype.type;
 /** @type {V} */
PIXI.UniformData.prototype.value;
 /** @type {string} */
PIXI.UniformData.prototype.name;

/** @typedef {?} */
PIXI.UniformDataMap;

/**
 * @constructor
 * @struct
 * @param {string=} vertexSrc
 * @param {string=} fragmentSrc
 * @param {?=} uniforms
 */
PIXI.Filter = function(vertexSrc, fragmentSrc, uniforms) {};
 /** @type {number} */
PIXI.Filter.prototype._blendMode;
 /** @type {string} */
PIXI.Filter.prototype.vertextSrc;
 /** @type {string} */
PIXI.Filter.prototype.fragmentSrc;
 /** @type {number} */
PIXI.Filter.prototype.blendMode;
 /** @type {?} */
PIXI.Filter.prototype.uniformData;
 /** @type {U} */
PIXI.Filter.prototype.uniforms;
 /** @type {?} */
PIXI.Filter.prototype.glShaders;
 /** @type {number} */
PIXI.Filter.prototype.glShaderKey;
 /** @type {number} */
PIXI.Filter.prototype.padding;
 /** @type {number} */
PIXI.Filter.prototype.resolution;
 /** @type {boolean} */
PIXI.Filter.prototype.enabled;
 /** @type {boolean} */
PIXI.Filter.prototype.autoFit;
 /** @type {string} */
PIXI.Filter.defaultVertexSrc;
 /** @type {string} */
PIXI.Filter.defaultFragmentSrc;

/**
 * @param {!PIXI.FilterManager} filterManager
 * @param {!PIXI.RenderTarget} input
 * @param {!PIXI.RenderTarget} output
 * @param {boolean=} clear
 * @param {?=} currentState
 * @return {void}
 */
PIXI.Filter.prototype.apply = function(filterManager, input, output, clear, currentState) {};
/**
 * @record
 * @struct
 */
PIXI.SpriteMaskFilterUniforms = function() {};
 /** @type {!PIXI.Texture} */
PIXI.SpriteMaskFilterUniforms.prototype.mask;
 /** @type {!PIXI.Matrix} */
PIXI.SpriteMaskFilterUniforms.prototype.otherMatrix;
 /** @type {number} */
PIXI.SpriteMaskFilterUniforms.prototype.alpha;

/**
 * @constructor
 * @struct
 * @param {!PIXI.Sprite} sprite
 */
PIXI.SpriteMaskFilter = function(sprite) {};
 /** @type {!PIXI.Sprite} */
PIXI.SpriteMaskFilter.prototype.maskSprite;
 /** @type {!PIXI.Matrix} */
PIXI.SpriteMaskFilter.prototype.maskMatrix;

/**
 * @param {!PIXI.FilterManager} filterManager
 * @param {!PIXI.RenderTarget} input
 * @param {!PIXI.RenderTarget} output
 * @return {void}
 */
PIXI.SpriteMaskFilter.prototype.apply = function(filterManager, input, output) {};

/**
 * @constructor
 * @struct
 * @param {!PIXI.Texture=} texture
 */
PIXI.Sprite = function(texture) {};
 /** @type {!PIXI.ObservablePoint} */
PIXI.Sprite.prototype._anchor;
 /** @type {!PIXI.ObservablePoint} */
PIXI.Sprite.prototype.anchor;
 /** @type {!PIXI.Texture} */
PIXI.Sprite.prototype._texture;
 /** @type {number} */
PIXI.Sprite.prototype._transformTrimmedID;
 /** @type {number} */
PIXI.Sprite.prototype._textureTrimmedID;
 /** @type {number} */
PIXI.Sprite.prototype._width;
 /** @type {number} */
PIXI.Sprite.prototype._height;
 /** @type {number} */
PIXI.Sprite.prototype.tint;
 /** @type {number} */
PIXI.Sprite.prototype._tint;
 /** @type {number} */
PIXI.Sprite.prototype._tintRGB;
 /** @type {number} */
PIXI.Sprite.prototype.blendMode;
 /** @type {string} */
PIXI.Sprite.prototype.pluginName;
 /** @type {number} */
PIXI.Sprite.prototype.cachedTint;
 /** @type {!PIXI.Texture} */
PIXI.Sprite.prototype.texture;
 /** @type {boolean} */
PIXI.Sprite.prototype.textureDirty;
 /** @type {number} */
PIXI.Sprite.prototype._textureID;
 /** @type {number} */
PIXI.Sprite.prototype._transformID;
 /** @type {!Float32Array} */
PIXI.Sprite.prototype.vertexTrimmedData;
 /** @type {!Float32Array} */
PIXI.Sprite.prototype.vertexData;
 /** @type {number} */
PIXI.Sprite.prototype.width;
 /** @type {number} */
PIXI.Sprite.prototype.height;

/**
 * @return {void}
 */
PIXI.Sprite.prototype._onTextureUpdate = function() {};

/**
 * @return {void}
 */
PIXI.Sprite.prototype.calculateVertices = function() {};

/**
 * @return {void}
 */
PIXI.Sprite.prototype._calculateBounds = function() {};

/**
 * @return {void}
 */
PIXI.Sprite.prototype.calculateTrimmedVertices = function() {};

/**
 * @return {void}
 */
PIXI.Sprite.prototype.onAnchorUpdate = function() {};

/**
 * @param {!PIXI.WebGLRenderer} renderer
 * @return {void}
 */
PIXI.Sprite.prototype._renderWebGL = function(renderer) {};

/**
 * @param {!PIXI.CanvasRenderer} renderer
 * @return {void}
 */
PIXI.Sprite.prototype._renderCanvas = function(renderer) {};

/**
 * @return {!PIXI.Rectangle}
 */
PIXI.Sprite.prototype.getLocalBounds = function() {};

/**
 * @param {!PIXI.Point} point
 * @return {boolean}
 */
PIXI.Sprite.prototype.containsPoint = function(point) {};

/**
 * @param {(boolean|!PIXI.DestroyOptions)=} options
 * @return {void}
 */
PIXI.Sprite.prototype.destroy = function(options) {};

/**
 * @param {(string|number|!HTMLCanvasElement|!PIXI.BaseTexture|!HTMLImageElement|!HTMLVideoElement)} source
 * @return {!PIXI.Sprite}
 */
PIXI.Sprite.from = function(source) {};

/**
 * @param {string} frameId
 * @return {!PIXI.Sprite}
 */
PIXI.Sprite.fromFrame = function(frameId) {};

/**
 * @param {string} imageId
 * @param {boolean=} crossorigin
 * @param {number=} scaleMode
 * @return {!PIXI.Sprite}
 */
PIXI.Sprite.fromImage = function(imageId, crossorigin, scaleMode) {};
/**
 * @constructor
 * @struct
 */
PIXI.BatchBuffer = function() {};
 /** @type {!ArrayBuffer} */
PIXI.BatchBuffer.prototype.vertices;
 /** @type {!Array<number>} */
PIXI.BatchBuffer.prototype.float32View;
 /** @type {!Array<number>} */
PIXI.BatchBuffer.prototype.uint32View;

/**
 * @return {void}
 */
PIXI.BatchBuffer.prototype.destroy = function() {};

/**
 * @constructor
 * @struct
 * @param {!PIXI.WebGLRenderer} renderer
 */
PIXI.SpriteRenderer = function(renderer) {};
 /** @type {number} */
PIXI.SpriteRenderer.prototype.vertSize;
 /** @type {number} */
PIXI.SpriteRenderer.prototype.vertByteSize;
 /** @type {number} */
PIXI.SpriteRenderer.prototype.size;
 /** @type {!Array<!PIXI.BatchBuffer>} */
PIXI.SpriteRenderer.prototype.buffers;
 /** @type {!Array<number>} */
PIXI.SpriteRenderer.prototype.indices;
 /** @type {!Array<!PIXI.Shader>} */
PIXI.SpriteRenderer.prototype.shaders;
 /** @type {number} */
PIXI.SpriteRenderer.prototype.currentIndex;
 /** @type {number} */
PIXI.SpriteRenderer.prototype.tick;
 /** @type {!Array<?>} */
PIXI.SpriteRenderer.prototype.groups;
 /** @type {!Array<!PIXI.Sprite>} */
PIXI.SpriteRenderer.prototype.sprites;
 /** @type {!Array<number>} */
PIXI.SpriteRenderer.prototype.vertexBuffers;
 /** @type {!Array<!PIXI.glCore.VertexArrayObject>} */
PIXI.SpriteRenderer.prototype.vaos;
 /** @type {number} */
PIXI.SpriteRenderer.prototype.vaoMax;
 /** @type {number} */
PIXI.SpriteRenderer.prototype.vertexCount;
 /** @type {function(): void} */
PIXI.SpriteRenderer.prototype.onContextChanged;
 /** @type {function(): void} */
PIXI.SpriteRenderer.prototype.onPrerender;

/**
 * @param {!PIXI.Sprite} sprite
 * @return {void}
 */
PIXI.SpriteRenderer.prototype.render = function(sprite) {};

/**
 * @return {void}
 */
PIXI.SpriteRenderer.prototype.flush = function() {};

/**
 * @return {void}
 */
PIXI.SpriteRenderer.prototype.start = function() {};

/**
 * @return {void}
 */
PIXI.SpriteRenderer.prototype.stop = function() {};

/**
 * @return {void}
 */
PIXI.SpriteRenderer.prototype.destroy = function() {};

/**
 * @constructor
 * @struct
 * @param {!PIXI.WebGLRenderer} renderer
 */
PIXI.CanvasSpriteRenderer = function(renderer) {};

/**
 * @param {!PIXI.Sprite} sprite
 * @return {void}
 */
PIXI.CanvasSpriteRenderer.prototype.render = function(sprite) {};

/**
 * @return {void}
 */
PIXI.CanvasSpriteRenderer.prototype.destroy = function() {};
/** @const */
PIXI.CanvasTinter = {};

/**
 * @param {!PIXI.Sprite} sprite
 * @param {number} color
 * @return {!HTMLCanvasElement}
 */
PIXI.CanvasTinter.getTintedTexture = function(sprite, color) {};

/**
 * @param {!PIXI.Texture} texture
 * @param {number} color
 * @param {!HTMLCanvasElement} canvas
 * @return {void}
 */
PIXI.CanvasTinter.tintWithMultiply = function(texture, color, canvas) {};

/**
 * @param {!PIXI.Texture} texture
 * @param {number} color
 * @param {!HTMLCanvasElement} canvas
 * @return {void}
 */
PIXI.CanvasTinter.tintWithOverlay = function(texture, color, canvas) {};

/**
 * @param {!PIXI.Texture} texture
 * @param {number} color
 * @param {!HTMLCanvasElement} canvas
 * @return {void}
 */
PIXI.CanvasTinter.tintWithPerPixel = function(texture, color, canvas) {};

/**
 * @param {number} color
 * @return {number}
 */
PIXI.CanvasTinter.roundColor = function(color) {};
 /** @type {number} */
PIXI.CanvasTinter.cacheStepsPerColorChannel;
 /** @type {boolean} */
PIXI.CanvasTinter.convertTintToImage;
 /** @type {boolean} */
PIXI.CanvasTinter.canUseMultiply;
 /** @type {number} */
PIXI.CanvasTinter.tintMethod;
/**
 * @record
 * @struct
 */
PIXI.TextStyleOptions = function() {};
 /** @type {string} */
PIXI.TextStyleOptions.prototype.align;
 /** @type {boolean} */
PIXI.TextStyleOptions.prototype.breakWords;
 /** @type {boolean} */
PIXI.TextStyleOptions.prototype.dropShadow;
 /** @type {number} */
PIXI.TextStyleOptions.prototype.dropShadowAlpha;
 /** @type {number} */
PIXI.TextStyleOptions.prototype.dropShadowAngle;
 /** @type {number} */
PIXI.TextStyleOptions.prototype.dropShadowBlur;
 /** @type {(string|number)} */
PIXI.TextStyleOptions.prototype.dropShadowColor;
 /** @type {number} */
PIXI.TextStyleOptions.prototype.dropShadowDistance;
 /** @type {(string|number|!Array<number>|!Array<string>|!CanvasGradient|!CanvasPattern)} */
PIXI.TextStyleOptions.prototype.fill;
 /** @type {number} */
PIXI.TextStyleOptions.prototype.fillGradientType;
 /** @type {!Array<number>} */
PIXI.TextStyleOptions.prototype.fillGradientStops;
 /** @type {(string|!Array<string>)} */
PIXI.TextStyleOptions.prototype.fontFamily;
 /** @type {(string|number)} */
PIXI.TextStyleOptions.prototype.fontSize;
 /** @type {string} */
PIXI.TextStyleOptions.prototype.fontStyle;
 /** @type {string} */
PIXI.TextStyleOptions.prototype.fontVariant;
 /** @type {string} */
PIXI.TextStyleOptions.prototype.fontWeight;
 /** @type {number} */
PIXI.TextStyleOptions.prototype.letterSpacing;
 /** @type {number} */
PIXI.TextStyleOptions.prototype.lineHeight;
 /** @type {string} */
PIXI.TextStyleOptions.prototype.lineJoin;
 /** @type {number} */
PIXI.TextStyleOptions.prototype.miterLimit;
 /** @type {number} */
PIXI.TextStyleOptions.prototype.padding;
 /** @type {(string|number)} */
PIXI.TextStyleOptions.prototype.stroke;
 /** @type {number} */
PIXI.TextStyleOptions.prototype.strokeThickness;
 /** @type {string} */
PIXI.TextStyleOptions.prototype.textBaseline;
 /** @type {boolean} */
PIXI.TextStyleOptions.prototype.trim;
 /** @type {boolean} */
PIXI.TextStyleOptions.prototype.wordWrap;
 /** @type {number} */
PIXI.TextStyleOptions.prototype.wordWrapWidth;
 /** @type {number} */
PIXI.TextStyleOptions.prototype.leading;

/**
 * @constructor
 * @struct
 * @param {!PIXI.TextStyleOptions} style
 */
PIXI.TextStyle = function(style) {};
 /** @type {number} */
PIXI.TextStyle.prototype.styleID;
 /** @type {string} */
PIXI.TextStyle.prototype._align;
 /** @type {string} */
PIXI.TextStyle.prototype.align;
 /** @type {boolean} */
PIXI.TextStyle.prototype._breakWords;
 /** @type {boolean} */
PIXI.TextStyle.prototype.breakWords;
 /** @type {boolean} */
PIXI.TextStyle.prototype._dropShadow;
 /** @type {boolean} */
PIXI.TextStyle.prototype.dropShadow;
 /** @type {number} */
PIXI.TextStyle.prototype._dropShadowAlpha;
 /** @type {number} */
PIXI.TextStyle.prototype.dropShadowAlpha;
 /** @type {number} */
PIXI.TextStyle.prototype._dropShadowAngle;
 /** @type {number} */
PIXI.TextStyle.prototype.dropShadowAngle;
 /** @type {number} */
PIXI.TextStyle.prototype._dropShadowBlur;
 /** @type {number} */
PIXI.TextStyle.prototype.dropShadowBlur;
 /** @type {(string|number)} */
PIXI.TextStyle.prototype._dropShadowColor;
 /** @type {(string|number)} */
PIXI.TextStyle.prototype.dropShadowColor;
 /** @type {number} */
PIXI.TextStyle.prototype._dropShadowDistance;
 /** @type {number} */
PIXI.TextStyle.prototype.dropShadowDistance;
 /** @type {(string|number|!Array<number>|!Array<string>|!CanvasGradient|!CanvasPattern)} */
PIXI.TextStyle.prototype._fill;
 /** @type {(string|number|!Array<number>|!Array<string>|!CanvasGradient|!CanvasPattern)} */
PIXI.TextStyle.prototype.fill;
 /** @type {number} */
PIXI.TextStyle.prototype._fillGradientType;
 /** @type {number} */
PIXI.TextStyle.prototype.fillGradientType;
 /** @type {!Array<number>} */
PIXI.TextStyle.prototype._fillGradientStops;
 /** @type {!Array<number>} */
PIXI.TextStyle.prototype.fillGradientStops;
 /** @type {(string|!Array<string>)} */
PIXI.TextStyle.prototype._fontFamily;
 /** @type {(string|!Array<string>)} */
PIXI.TextStyle.prototype.fontFamily;
 /** @type {(string|number)} */
PIXI.TextStyle.prototype._fontSize;
 /** @type {(string|number)} */
PIXI.TextStyle.prototype.fontSize;
 /** @type {string} */
PIXI.TextStyle.prototype._fontStyle;
 /** @type {string} */
PIXI.TextStyle.prototype.fontStyle;
 /** @type {string} */
PIXI.TextStyle.prototype._fontVariant;
 /** @type {string} */
PIXI.TextStyle.prototype.fontVariant;
 /** @type {string} */
PIXI.TextStyle.prototype._fontWeight;
 /** @type {string} */
PIXI.TextStyle.prototype.fontWeight;
 /** @type {number} */
PIXI.TextStyle.prototype._letterSpacing;
 /** @type {number} */
PIXI.TextStyle.prototype.letterSpacing;
 /** @type {number} */
PIXI.TextStyle.prototype._lineHeight;
 /** @type {number} */
PIXI.TextStyle.prototype.lineHeight;
 /** @type {string} */
PIXI.TextStyle.prototype._lineJoin;
 /** @type {string} */
PIXI.TextStyle.prototype.lineJoin;
 /** @type {number} */
PIXI.TextStyle.prototype._miterLimit;
 /** @type {number} */
PIXI.TextStyle.prototype.miterLimit;
 /** @type {number} */
PIXI.TextStyle.prototype._padding;
 /** @type {number} */
PIXI.TextStyle.prototype.padding;
 /** @type {(string|number)} */
PIXI.TextStyle.prototype._stroke;
 /** @type {(string|number)} */
PIXI.TextStyle.prototype.stroke;
 /** @type {number} */
PIXI.TextStyle.prototype._strokeThickness;
 /** @type {number} */
PIXI.TextStyle.prototype.strokeThickness;
 /** @type {string} */
PIXI.TextStyle.prototype._textBaseline;
 /** @type {string} */
PIXI.TextStyle.prototype.textBaseline;
 /** @type {boolean} */
PIXI.TextStyle.prototype._trim;
 /** @type {boolean} */
PIXI.TextStyle.prototype.trim;
 /** @type {boolean} */
PIXI.TextStyle.prototype._wordWrap;
 /** @type {boolean} */
PIXI.TextStyle.prototype.wordWrap;
 /** @type {number} */
PIXI.TextStyle.prototype._wordWrapWidth;
 /** @type {number} */
PIXI.TextStyle.prototype.wordWrapWidth;
 /** @type {number} */
PIXI.TextStyle.prototype.leading;

/**
 * @return {!PIXI.TextStyle}
 */
PIXI.TextStyle.prototype.clone = function() {};

/**
 * @return {void}
 */
PIXI.TextStyle.prototype.reset = function() {};

/**
 * @return {string}
 */
PIXI.TextStyle.prototype.toFontString = function() {};

/**
 * @constructor
 * @struct
 * @param {string} text
 * @param {!PIXI.TextStyle} style
 * @param {number} width
 * @param {number} height
 * @param {!Array<number>} lines
 * @param {!Array<number>} lineWidths
 * @param {number} lineHeight
 * @param {number} maxLineWidth
 * @param {?} fontProperties
 */
PIXI.TextMetrics = function(text, style, width, height, lines, lineWidths, lineHeight, maxLineWidth, fontProperties) {};
 /** @type {!HTMLCanvasElement} */
PIXI.TextMetrics.prototype._canvas;
 /** @type {!CanvasRenderingContext2D} */
PIXI.TextMetrics.prototype._context;
 /** @type {!PIXI.FontMetrics} */
PIXI.TextMetrics.prototype._fonts;
 /** @type {string} */
PIXI.TextMetrics.prototype.text;
 /** @type {!PIXI.TextStyle} */
PIXI.TextMetrics.prototype.style;
 /** @type {number} */
PIXI.TextMetrics.prototype.width;
 /** @type {number} */
PIXI.TextMetrics.prototype.height;
 /** @type {!Array<number>} */
PIXI.TextMetrics.prototype.lines;
 /** @type {!Array<number>} */
PIXI.TextMetrics.prototype.lineWidgets;
 /** @type {number} */
PIXI.TextMetrics.prototype.lineHeight;
 /** @type {number} */
PIXI.TextMetrics.prototype.maxLineWidth;
 /** @type {?} */
PIXI.TextMetrics.prototype.fontProperties;

/**
 * @param {string} text
 * @param {!PIXI.TextStyle} style
 * @param {boolean=} wordWrap
 * @param {!HTMLCanvasElement=} canvas
 * @return {!PIXI.TextMetrics}
 */
PIXI.TextMetrics.measureText = function(text, style, wordWrap, canvas) {};

/**
 * @param {string} text
 * @param {!PIXI.TextStyle} style
 * @param {!HTMLCanvasElement=} canvas
 * @return {string}
 */
PIXI.TextMetrics.wordWrap = function(text, style, canvas) {};

/**
 * @param {string} font
 * @return {!PIXI.FontMetrics}
 */
PIXI.TextMetrics.measureFont = function(font) {};
/**
 * @record
 * @struct
 */
PIXI.FontMetrics = function() {};
 /** @type {number} */
PIXI.FontMetrics.prototype.ascent;
 /** @type {number} */
PIXI.FontMetrics.prototype.descent;
 /** @type {number} */
PIXI.FontMetrics.prototype.fontSize;

/**
 * @constructor
 * @struct
 * @param {string=} text
 * @param {!PIXI.TextStyleOptions=} style
 * @param {!HTMLCanvasElement=} canvas
 */
PIXI.Text = function(text, style, canvas) {};
 /** @type {!HTMLCanvasElement} */
PIXI.Text.prototype.canvas;
 /** @type {!CanvasRenderingContext2D} */
PIXI.Text.prototype.context;
 /** @type {number} */
PIXI.Text.prototype.resolution;
 /** @type {string} */
PIXI.Text.prototype._text;
 /** @type {!PIXI.TextStyle} */
PIXI.Text.prototype._style;
 /** @type {!Function} */
PIXI.Text.prototype._styleListener;
 /** @type {string} */
PIXI.Text.prototype._font;
 /** @type {number} */
PIXI.Text.prototype.localStyleID;
 /** @type {number} */
PIXI.Text.prototype.width;
 /** @type {number} */
PIXI.Text.prototype.height;
 /** @type {!PIXI.TextStyle} */
PIXI.Text.prototype.style;
 /** @type {string} */
PIXI.Text.prototype.text;
 /** @type {function(): void} */
PIXI.Text.prototype._onStyleChange;
 /** @type {boolean} */
PIXI.Text.prototype.dirty;

/**
 * @param {boolean=} respectDirty
 * @return {void}
 */
PIXI.Text.prototype.updateText = function(respectDirty) {};

/**
 * @param {string} text
 * @param {number} x
 * @param {number} y
 * @param {boolean=} isStroke
 * @return {void}
 */
PIXI.Text.prototype.drawLetterSpacing = function(text, x, y, isStroke) {};

/**
 * @return {void}
 */
PIXI.Text.prototype.updateTexture = function() {};

/**
 * @param {!PIXI.WebGLRenderer} renderer
 * @return {void}
 */
PIXI.Text.prototype.renderWebGL = function(renderer) {};

/**
 * @param {!PIXI.CanvasRenderer} renderer
 * @return {void}
 */
PIXI.Text.prototype._renderCanvas = function(renderer) {};

/**
 * @param {!PIXI.Rectangle=} rect
 * @return {!PIXI.Rectangle}
 */
PIXI.Text.prototype.getLocalBounds = function(rect) {};

/**
 * @return {void}
 */
PIXI.Text.prototype._calculateBounds = function() {};

/**
 * @param {!PIXI.TextStyle} style
 * @param {!Array<string>} lines
 * @return {(string|number|!CanvasGradient)}
 */
PIXI.Text.prototype._generateFillStyle = function(style, lines) {};

/**
 * @param {(boolean|!PIXI.DestroyOptions)=} options
 * @return {void}
 */
PIXI.Text.prototype.destroy = function(options) {};

/**
 * @constructor
 * @struct
 * @param {number=} width
 * @param {number=} height
 * @param {number=} scaleMode
 * @param {number=} resolution
 */
PIXI.BaseRenderTexture = function(width, height, scaleMode, resolution) {};
 /** @type {number} */
PIXI.BaseRenderTexture.prototype.height;
 /** @type {number} */
PIXI.BaseRenderTexture.prototype.width;
 /** @type {number} */
PIXI.BaseRenderTexture.prototype.realHeight;
 /** @type {number} */
PIXI.BaseRenderTexture.prototype.realWidth;
 /** @type {number} */
PIXI.BaseRenderTexture.prototype.resolution;
 /** @type {number} */
PIXI.BaseRenderTexture.prototype.scaleMode;
 /** @type {boolean} */
PIXI.BaseRenderTexture.prototype.hasLoaded;
 /** @type {!Object<number,!WebGLTexture>} */
PIXI.BaseRenderTexture.prototype._glRenderTargets;
 /** @type {!Object<number,!WebGLTexture>} */
PIXI.BaseRenderTexture.prototype._canvasRenderTarget;
 /** @type {boolean} */
PIXI.BaseRenderTexture.prototype.valid;

/**
 * @param {number} width
 * @param {number} height
 * @return {void}
 */
PIXI.BaseRenderTexture.prototype.resize = function(width, height) {};

/**
 * @return {void}
 */
PIXI.BaseRenderTexture.prototype.destroy = function() {};

/**
 * @param {string} event
 * @param {function(!PIXI.BaseRenderTexture): void} fn
 * @param {?=} context
 * @return {BaseRenderTexture}
 */
PIXI.BaseRenderTexture.prototype.on = function(event, fn, context) {};

/**
 * @param {string} event
 * @param {function(!PIXI.BaseRenderTexture): void} fn
 * @param {?=} context
 * @return {BaseRenderTexture}
 */
PIXI.BaseRenderTexture.prototype.once = function(event, fn, context) {};

/**
 * @param {string} event
 * @param {function(!PIXI.BaseRenderTexture): void=} fn
 * @param {?=} context
 * @return {BaseRenderTexture}
 */
PIXI.BaseRenderTexture.prototype.removeListener = function(event, fn, context) {};

/**
 * @param {string} event
 * @return {BaseRenderTexture}
 */
PIXI.BaseRenderTexture.prototype.removeAllListeners = function(event) {};

/**
 * @param {string} event
 * @param {function(!PIXI.BaseRenderTexture): void=} fn
 * @param {?=} context
 * @return {BaseRenderTexture}
 */
PIXI.BaseRenderTexture.prototype.off = function(event, fn, context) {};

/**
 * @param {string} event
 * @param {function(!PIXI.BaseRenderTexture): void} fn
 * @param {?=} context
 * @return {BaseRenderTexture}
 */
PIXI.BaseRenderTexture.prototype.addListener = function(event, fn, context) {};

/**
 * @constructor
 * @struct
 * @param {(!HTMLCanvasElement|!HTMLImageElement|!HTMLVideoElement)=} source
 * @param {number=} scaleMode
 * @param {number=} resolution
 */
PIXI.BaseTexture = function(source, scaleMode, resolution) {};
 /** @type {number} */
PIXI.BaseTexture.prototype.uuid;
 /** @type {number} */
PIXI.BaseTexture.prototype.touched;
 /** @type {number} */
PIXI.BaseTexture.prototype.resolution;
 /** @type {number} */
PIXI.BaseTexture.prototype.width;
 /** @type {number} */
PIXI.BaseTexture.prototype.height;
 /** @type {number} */
PIXI.BaseTexture.prototype.realWidth;
 /** @type {number} */
PIXI.BaseTexture.prototype.realHeight;
 /** @type {number} */
PIXI.BaseTexture.prototype.scaleMode;
 /** @type {boolean} */
PIXI.BaseTexture.prototype.hasLoaded;
 /** @type {boolean} */
PIXI.BaseTexture.prototype.isLoading;
 /** @type {number} */
PIXI.BaseTexture.prototype.wrapMode;
 /** @type {(!HTMLCanvasElement|!HTMLImageElement|!HTMLVideoElement)} */
PIXI.BaseTexture.prototype.source;
 /** @type {!HTMLImageElement} */
PIXI.BaseTexture.prototype.origSource;
 /** @type {string} */
PIXI.BaseTexture.prototype.imageType;
 /** @type {number} */
PIXI.BaseTexture.prototype.sourceScale;
 /** @type {boolean} */
PIXI.BaseTexture.prototype.premultipliedAlpha;
 /** @type {string} */
PIXI.BaseTexture.prototype.imageUrl;
 /** @type {boolean} */
PIXI.BaseTexture.prototype.isPowerOfTwo;
 /** @type {boolean} */
PIXI.BaseTexture.prototype.mipmap;
 /** @type {boolean} */
PIXI.BaseTexture.prototype.wrap;
 /** @type {?} */
PIXI.BaseTexture.prototype._glTextures;
 /** @type {number} */
PIXI.BaseTexture.prototype._enabled;
 /** @type {number} */
PIXI.BaseTexture.prototype._id;
 /** @type {number} */
PIXI.BaseTexture.prototype._virtualBoundId;
 /** @type {boolean} */
PIXI.BaseTexture.prototype._destroyed;
 /** @type {!Array<string>} */
PIXI.BaseTexture.prototype.textureCacheIds;

/**
 * @param {(string|!HTMLCanvasElement|!HTMLImageElement)} source
 * @param {number=} scaleMode
 * @param {number=} sourceScale
 * @return {!PIXI.BaseTexture}
 */
PIXI.BaseTexture.from = function(source, scaleMode, sourceScale) {};

/**
 * @return {void}
 */
PIXI.BaseTexture.prototype.update = function() {};

/**
 * @return {void}
 */
PIXI.BaseTexture.prototype._updateDimensions = function() {};

/**
 * @return {void}
 */
PIXI.BaseTexture.prototype._updateImageType = function() {};

/**
 * @return {void}
 */
PIXI.BaseTexture.prototype._loadSvgSource = function() {};

/**
 * @param {string} dataUri
 * @return {void}
 */
PIXI.BaseTexture.prototype._loadSvgSourceUsingDataUri = function(dataUri) {};

/**
 * @return {void}
 */
PIXI.BaseTexture.prototype._loadSvgSourceUsingXhr = function() {};

/**
 * @param {string} svgString
 * @return {void}
 */
PIXI.BaseTexture.prototype._loadSvgSourceUsingString = function(svgString) {};

/**
 * @param {(!HTMLCanvasElement|!HTMLImageElement|!HTMLVideoElement)} source
 * @return {void}
 */
PIXI.BaseTexture.prototype.loadSource = function(source) {};

/**
 * @return {void}
 */
PIXI.BaseTexture.prototype._sourceLoaded = function() {};

/**
 * @return {void}
 */
PIXI.BaseTexture.prototype.destroy = function() {};

/**
 * @return {void}
 */
PIXI.BaseTexture.prototype.dispose = function() {};

/**
 * @param {string} newSrc
 * @return {void}
 */
PIXI.BaseTexture.prototype.updateSourceImage = function(newSrc) {};

/**
 * @param {string} imageUrl
 * @param {boolean=} crossorigin
 * @param {number=} scaleMode
 * @param {number=} sourceScale
 * @return {!PIXI.BaseTexture}
 */
PIXI.BaseTexture.fromImage = function(imageUrl, crossorigin, scaleMode, sourceScale) {};

/**
 * @param {!HTMLCanvasElement} canvas
 * @param {number=} scaleMode
 * @param {string=} origin
 * @return {!PIXI.BaseTexture}
 */
PIXI.BaseTexture.fromCanvas = function(canvas, scaleMode, origin) {};

/**
 * @param {!PIXI.BaseTexture} baseTexture
 * @param {string} id
 * @return {void}
 */
PIXI.BaseTexture.addToCache = function(baseTexture, id) {};

/**
 * @param {(string|!PIXI.BaseTexture)} baseTexture
 * @return {!PIXI.BaseTexture}
 */
PIXI.BaseTexture.removeFromCache = function(baseTexture) {};

/**
 * @param {string} event
 * @param {function(!PIXI.BaseTexture): void} fn
 * @param {?=} context
 * @return {BaseTexture}
 */
PIXI.BaseTexture.prototype.on = function(event, fn, context) {};

/**
 * @param {string} event
 * @param {function(!PIXI.BaseTexture): void} fn
 * @param {?=} context
 * @return {BaseTexture}
 */
PIXI.BaseTexture.prototype.once = function(event, fn, context) {};

/**
 * @param {string} event
 * @param {function(!PIXI.BaseTexture): void=} fn
 * @param {?=} context
 * @return {BaseTexture}
 */
PIXI.BaseTexture.prototype.removeListener = function(event, fn, context) {};

/**
 * @param {string} event
 * @return {BaseTexture}
 */
PIXI.BaseTexture.prototype.removeAllListeners = function(event) {};

/**
 * @param {string} event
 * @param {function(!PIXI.BaseTexture): void=} fn
 * @param {?=} context
 * @return {BaseTexture}
 */
PIXI.BaseTexture.prototype.off = function(event, fn, context) {};

/**
 * @param {string} event
 * @param {function(!PIXI.BaseTexture): void} fn
 * @param {?=} context
 * @return {BaseTexture}
 */
PIXI.BaseTexture.prototype.addListener = function(event, fn, context) {};

/**
 * @constructor
 * @struct
 * @param {!PIXI.BaseRenderTexture} baseRenderTexture
 * @param {!PIXI.Rectangle=} frame
 */
PIXI.RenderTexture = function(baseRenderTexture, frame) {};
 /** @type {?} */
PIXI.RenderTexture.prototype.legacyRenderer;
 /** @type {boolean} */
PIXI.RenderTexture.prototype.valid;

/**
 * @param {number} width
 * @param {number} height
 * @param {boolean=} doNotResizeBaseTexture
 * @return {void}
 */
PIXI.RenderTexture.prototype.resize = function(width, height, doNotResizeBaseTexture) {};

/**
 * @param {number=} width
 * @param {number=} height
 * @param {number=} scaleMode
 * @param {number=} resolution
 * @return {!PIXI.RenderTexture}
 */
PIXI.RenderTexture.create = function(width, height, scaleMode, resolution) {};

/**
 * @constructor
 * @struct
 * @param {!PIXI.BaseTexture} baseTexture
 * @param {!PIXI.Rectangle=} frame
 * @param {!PIXI.Rectangle=} orig
 * @param {!PIXI.Rectangle=} trim
 * @param {number=} rotate
 */
PIXI.Texture = function(baseTexture, frame, orig, trim, rotate) {};
 /** @type {boolean} */
PIXI.Texture.prototype.noFrame;
 /** @type {!PIXI.BaseTexture} */
PIXI.Texture.prototype.baseTexture;
 /** @type {!PIXI.Rectangle} */
PIXI.Texture.prototype._frame;
 /** @type {!PIXI.Rectangle} */
PIXI.Texture.prototype.trim;
 /** @type {boolean} */
PIXI.Texture.prototype.valid;
 /** @type {boolean} */
PIXI.Texture.prototype.requiresUpdate;
 /** @type {!PIXI.TextureUvs} */
PIXI.Texture.prototype._uvs;
 /** @type {!PIXI.Rectangle} */
PIXI.Texture.prototype.orig;
 /** @type {number} */
PIXI.Texture.prototype._updateID;
 /** @type {?} */
PIXI.Texture.prototype.transform;
 /** @type {!Array<string>} */
PIXI.Texture.prototype.textureCacheIds;
 /** @type {!PIXI.Rectangle} */
PIXI.Texture.prototype.frame;
 /** @type {(boolean|number)} */
PIXI.Texture.prototype._rotate;
 /** @type {number} */
PIXI.Texture.prototype.rotate;
 /** @type {number} */
PIXI.Texture.prototype.width;
 /** @type {number} */
PIXI.Texture.prototype.height;
 /** @type {!PIXI.Texture} */
PIXI.Texture.EMPTY;
 /** @type {!PIXI.Texture} */
PIXI.Texture.WHITE;

/**
 * @return {void}
 */
PIXI.Texture.prototype.update = function() {};

/**
 * @param {!PIXI.BaseTexture} baseTexture
 * @return {void}
 */
PIXI.Texture.prototype.onBaseTextureLoaded = function(baseTexture) {};

/**
 * @param {!PIXI.BaseTexture} baseTexture
 * @return {void}
 */
PIXI.Texture.prototype.onBaseTextureUpdated = function(baseTexture) {};

/**
 * @param {boolean=} destroyBase
 * @return {void}
 */
PIXI.Texture.prototype.destroy = function(destroyBase) {};

/**
 * @return {!PIXI.Texture}
 */
PIXI.Texture.prototype.clone = function() {};

/**
 * @return {void}
 */
PIXI.Texture.prototype._updateUvs = function() {};

/**
 * @param {string} imageUrl
 * @param {boolean=} crossOrigin
 * @param {number=} scaleMode
 * @param {number=} sourceScale
 * @return {!PIXI.Texture}
 */
PIXI.Texture.fromImage = function(imageUrl, crossOrigin, scaleMode, sourceScale) {};

/**
 * @param {string} frameId
 * @return {!PIXI.Texture}
 */
PIXI.Texture.fromFrame = function(frameId) {};

/**
 * @param {!HTMLCanvasElement} canvas
 * @param {number=} scaleMode
 * @param {string=} origin
 * @return {!PIXI.Texture}
 */
PIXI.Texture.fromCanvas = function(canvas, scaleMode, origin) {};

/**
 * @param {(string|!HTMLVideoElement)} video
 * @param {number=} scaleMode
 * @return {!PIXI.Texture}
 */
PIXI.Texture.fromVideo = function(video, scaleMode) {};

/**
 * @param {string} videoUrl
 * @param {number=} scaleMode
 * @return {!PIXI.Texture}
 */
PIXI.Texture.fromVideoUrl = function(videoUrl, scaleMode) {};

/**
 * @param {(string|number|!HTMLCanvasElement|!PIXI.BaseTexture|!HTMLImageElement|!HTMLVideoElement)} source
 * @return {!PIXI.Texture}
 */
PIXI.Texture.from = function(source) {};

/**
 * @param {(!HTMLCanvasElement|!HTMLImageElement)} source
 * @param {string} imageUrl
 * @param {string=} name
 * @return {!PIXI.Texture}
 */
PIXI.Texture.fromLoader = function(source, imageUrl, name) {};

/**
 * @param {!PIXI.Texture} texture
 * @param {string} id
 * @return {void}
 */
PIXI.Texture.addToCache = function(texture, id) {};

/**
 * @param {(string|!PIXI.Texture)} texture
 * @return {!PIXI.Texture}
 */
PIXI.Texture.removeFromCache = function(texture) {};

/**
 * @param {!PIXI.Texture} texture
 * @param {string} id
 * @return {void}
 */
PIXI.Texture.addTextureToCache = function(texture, id) {};

/**
 * @param {string} id
 * @return {!PIXI.Texture}
 */
PIXI.Texture.removeTextureFromCache = function(id) {};

/**
 * @param {string} event
 * @param {function(!PIXI.Texture): void} fn
 * @param {?=} context
 * @return {Texture}
 */
PIXI.Texture.prototype.on = function(event, fn, context) {};

/**
 * @param {string} event
 * @param {function(!PIXI.Texture): void} fn
 * @param {?=} context
 * @return {Texture}
 */
PIXI.Texture.prototype.once = function(event, fn, context) {};

/**
 * @param {string} event
 * @param {function(!PIXI.Texture): void=} fn
 * @param {?=} context
 * @return {Texture}
 */
PIXI.Texture.prototype.removeListener = function(event, fn, context) {};

/**
 * @param {string} event
 * @return {Texture}
 */
PIXI.Texture.prototype.removeAllListeners = function(event) {};

/**
 * @param {string} event
 * @param {function(!PIXI.Texture): void=} fn
 * @param {?=} context
 * @return {Texture}
 */
PIXI.Texture.prototype.off = function(event, fn, context) {};

/**
 * @param {string} event
 * @param {function(!PIXI.Texture): void} fn
 * @param {?=} context
 * @return {Texture}
 */
PIXI.Texture.prototype.addListener = function(event, fn, context) {};
/**
 * @constructor
 * @struct
 */
PIXI.TextureUvs = function() {};
 /** @type {number} */
PIXI.TextureUvs.prototype.x0;
 /** @type {number} */
PIXI.TextureUvs.prototype.y0;
 /** @type {number} */
PIXI.TextureUvs.prototype.x1;
 /** @type {number} */
PIXI.TextureUvs.prototype.y1;
 /** @type {number} */
PIXI.TextureUvs.prototype.x2;
 /** @type {number} */
PIXI.TextureUvs.prototype.y2;
 /** @type {number} */
PIXI.TextureUvs.prototype.x3;
 /** @type {number} */
PIXI.TextureUvs.prototype.y3;
 /** @type {!Uint32Array} */
PIXI.TextureUvs.prototype.uvsUint32;

/**
 * @param {!PIXI.Rectangle} frame
 * @param {!PIXI.Rectangle} baseFrame
 * @param {number} rotate
 * @return {void}
 */
PIXI.TextureUvs.prototype.set = function(frame, baseFrame, rotate) {};

/**
 * @constructor
 * @struct
 * @param {!PIXI.BaseTexture} baseTexture
 * @param {?} data
 * @param {string=} resolutionFilename
 */
PIXI.Spritesheet = function(baseTexture, data, resolutionFilename) {};
 /** @type {number} */
PIXI.Spritesheet.BATCH_SIZE;
 /** @type {!PIXI.BaseTexture} */
PIXI.Spritesheet.prototype.baseTexture;
 /** @type {!Object<string,!PIXI.Texture>} */
PIXI.Spritesheet.prototype.textures;
 /** @type {?} */
PIXI.Spritesheet.prototype.data;
 /** @type {number} */
PIXI.Spritesheet.prototype.resolution;
 /** @type {?} */
PIXI.Spritesheet.prototype._frames;
 /** @type {string} */
PIXI.Spritesheet.prototype._frameKeys;
 /** @type {number} */
PIXI.Spritesheet.prototype._batchIndex;
 /** @type {function(Spritesheet, !Object<string,!PIXI.Texture>): void} */
PIXI.Spritesheet.prototype._callback;

/**
 * @param {string} resolutionFilename
 * @return {number}
 */
PIXI.Spritesheet.prototype._updateResolution = function(resolutionFilename) {};

/**
 * @param {function(Spritesheet, !Object<string,!PIXI.Texture>): void} callback
 * @return {void}
 */
PIXI.Spritesheet.prototype.parse = function(callback) {};

/**
 * @param {number} initialFrameIndex
 * @return {void}
 */
PIXI.Spritesheet.prototype._processFrames = function(initialFrameIndex) {};

/**
 * @return {void}
 */
PIXI.Spritesheet.prototype._parseComplete = function() {};

/**
 * @return {void}
 */
PIXI.Spritesheet.prototype._nextBatch = function() {};

/**
 * @param {boolean=} destroyBase
 * @return {void}
 */
PIXI.Spritesheet.prototype.destroy = function(destroyBase) {};

/**
 * @constructor
 * @struct
 * @param {!HTMLVideoElement} source
 * @param {number=} scaleMode
 */
PIXI.VideoBaseTexture = function(source, scaleMode) {};
 /** @type {boolean} */
PIXI.VideoBaseTexture.prototype.autoUpdate;
 /** @type {boolean} */
PIXI.VideoBaseTexture.prototype.autoPlay;
 /** @type {boolean} */
PIXI.VideoBaseTexture.prototype._isAutoUpdating;
 /** @type {!HTMLVideoElement} */
PIXI.VideoBaseTexture.prototype.source;

/**
 * @return {void}
 */
PIXI.VideoBaseTexture.prototype.update = function() {};

/**
 * @return {void}
 */
PIXI.VideoBaseTexture.prototype._onCanPlay = function() {};

/**
 * @return {void}
 */
PIXI.VideoBaseTexture.prototype._onPlayStart = function() {};

/**
 * @return {void}
 */
PIXI.VideoBaseTexture.prototype._onPlayStop = function() {};

/**
 * @return {void}
 */
PIXI.VideoBaseTexture.prototype.destroy = function() {};

/**
 * @return {boolean}
 */
PIXI.VideoBaseTexture.prototype._isSourcePlaying = function() {};

/**
 * @return {boolean}
 */
PIXI.VideoBaseTexture.prototype._isSourceReady = function() {};

/**
 * @param {!HTMLVideoElement} video
 * @param {number=} scaleMode
 * @return {!PIXI.VideoBaseTexture}
 */
PIXI.VideoBaseTexture.fromVideo = function(video, scaleMode) {};

/**
 * @param {?} videoSrc
 * @return {!PIXI.VideoBaseTexture}
 */
PIXI.VideoBaseTexture.fromUrl = function(videoSrc) {};

/**
 * @param {?} videoSrc
 * @return {!PIXI.VideoBaseTexture}
 */
PIXI.VideoBaseTexture.fromUrls = function(videoSrc) {};

/**
 * @param {!HTMLVideoElement} source
 * @return {void}
 */
PIXI.VideoBaseTexture.prototype.loadSource = function(source) {};
/** @const */
PIXI.ticker = {};
 /** @type {!PIXI.ticker.Ticker} */
PIXI.ticker.shared;

/**
 * @constructor
 * @struct
 * @param {function(number): void} fn
 * @param {?=} context
 * @param {number=} priority
 * @param {boolean=} once
 */
PIXI.ticker.TickerListener = function(fn, context, priority, once) {};
 /** @type {function(number): void} */
PIXI.ticker.TickerListener.prototype.fn;
 /** @type {?} */
PIXI.ticker.TickerListener.prototype.context;
 /** @type {number} */
PIXI.ticker.TickerListener.prototype.priority;
 /** @type {boolean} */
PIXI.ticker.TickerListener.prototype.once;
 /** @type {!PIXI.ticker.TickerListener} */
PIXI.ticker.TickerListener.prototype.next;
 /** @type {!PIXI.ticker.TickerListener} */
PIXI.ticker.TickerListener.prototype.previous;
 /** @type {boolean} */
PIXI.ticker.TickerListener.prototype._destroyed;

/**
 * @param {function(number): void} fn
 * @param {?=} context
 * @return {boolean}
 */
PIXI.ticker.TickerListener.prototype.match = function(fn, context) {};

/**
 * @param {number} deltaTime
 * @return {!PIXI.ticker.TickerListener}
 */
PIXI.ticker.TickerListener.prototype.emit = function(deltaTime) {};

/**
 * @param {!PIXI.ticker.TickerListener} previous
 * @return {void}
 */
PIXI.ticker.TickerListener.prototype.connect = function(previous) {};

/**
 * @param {boolean=} hard
 * @return {void}
 */
PIXI.ticker.TickerListener.prototype.destroy = function(hard) {};
/**
 * @constructor
 * @struct
 */
PIXI.ticker.Ticker = function() {};
 /** @type {function(number): void} */
PIXI.ticker.Ticker.prototype._tick;
 /** @type {!PIXI.ticker.TickerListener} */
PIXI.ticker.Ticker.prototype._head;
 /** @type {number} */
PIXI.ticker.Ticker.prototype._requestId;
 /** @type {number} */
PIXI.ticker.Ticker.prototype._maxElapsedMS;
 /** @type {boolean} */
PIXI.ticker.Ticker.prototype.autoStart;
 /** @type {number} */
PIXI.ticker.Ticker.prototype.deltaTime;
 /** @type {number} */
PIXI.ticker.Ticker.prototype.elapsedMS;
 /** @type {number} */
PIXI.ticker.Ticker.prototype.lastTime;
 /** @type {number} */
PIXI.ticker.Ticker.prototype.speed;
 /** @type {boolean} */
PIXI.ticker.Ticker.prototype.started;
 /** @type {number} */
PIXI.ticker.Ticker.prototype.FPS;
 /** @type {number} */
PIXI.ticker.Ticker.prototype.minFPS;

/**
 * @return {void}
 */
PIXI.ticker.Ticker.prototype._requestIfNeeded = function() {};

/**
 * @return {void}
 */
PIXI.ticker.Ticker.prototype._cancelIfNeeded = function() {};

/**
 * @return {void}
 */
PIXI.ticker.Ticker.prototype._startIfPossible = function() {};

/**
 * @param {function(number): void} fn
 * @param {?=} context
 * @param {number=} priority
 * @return {!PIXI.ticker.Ticker}
 */
PIXI.ticker.Ticker.prototype.add = function(fn, context, priority) {};

/**
 * @param {function(number): void} fn
 * @param {?=} context
 * @param {number=} priority
 * @return {!PIXI.ticker.Ticker}
 */
PIXI.ticker.Ticker.prototype.addOnce = function(fn, context, priority) {};

/**
 * @param {!Function} fn
 * @param {?=} context
 * @param {number=} priority
 * @return {!PIXI.ticker.Ticker}
 */
PIXI.ticker.Ticker.prototype.remove = function(fn, context, priority) {};

/**
 * @param {!PIXI.ticker.TickerListener} listener
 * @return {!PIXI.ticker.Ticker}
 */
PIXI.ticker.Ticker.prototype._addListener = function(listener) {};

/**
 * @return {void}
 */
PIXI.ticker.Ticker.prototype.start = function() {};

/**
 * @return {void}
 */
PIXI.ticker.Ticker.prototype.stop = function() {};

/**
 * @return {void}
 */
PIXI.ticker.Ticker.prototype.destroy = function() {};

/**
 * @param {number=} currentTime
 * @return {void}
 */
PIXI.ticker.Ticker.prototype.update = function(currentTime) {};
/**
 * @extends {PIXI.glCore.GLShader}
 * @constructor
 * @struct
 */
PIXI.Shader = function() {};
/** @const */
PIXI.extract = {};

/**
 * @constructor
 * @struct
 * @param {!PIXI.CanvasRenderer} renderer
 */
PIXI.extract.CanvasExtract = function(renderer) {};
 /** @type {!PIXI.CanvasRenderer} */
PIXI.extract.CanvasExtract.prototype.renderer;

/**
 * @param {(!PIXI.DisplayObject|!PIXI.RenderTexture)=} target
 * @return {!HTMLImageElement}
 */
PIXI.extract.CanvasExtract.prototype.image = function(target) {};

/**
 * @param {(!PIXI.DisplayObject|!PIXI.RenderTexture)=} target
 * @return {string}
 */
PIXI.extract.CanvasExtract.prototype.base64 = function(target) {};

/**
 * @param {(!PIXI.DisplayObject|!PIXI.RenderTexture)=} target
 * @return {!HTMLCanvasElement}
 */
PIXI.extract.CanvasExtract.prototype.canvas = function(target) {};

/**
 * @param {(!PIXI.DisplayObject|!PIXI.RenderTexture)=} renderTexture
 * @return {!Array<number>}
 */
PIXI.extract.CanvasExtract.prototype.pixels = function(renderTexture) {};

/**
 * @return {void}
 */
PIXI.extract.CanvasExtract.prototype.destroy = function() {};

/**
 * @constructor
 * @struct
 * @param {!PIXI.WebGLRenderer} renderer
 */
PIXI.extract.WebGLExtract = function(renderer) {};
 /** @type {!PIXI.WebGLRenderer} */
PIXI.extract.WebGLExtract.prototype.renderer;

/**
 * @param {(!PIXI.DisplayObject|!PIXI.RenderTexture)=} target
 * @return {!HTMLImageElement}
 */
PIXI.extract.WebGLExtract.prototype.image = function(target) {};

/**
 * @param {(!PIXI.DisplayObject|!PIXI.RenderTexture)=} target
 * @return {string}
 */
PIXI.extract.WebGLExtract.prototype.base64 = function(target) {};

/**
 * @param {(!PIXI.DisplayObject|!PIXI.RenderTexture)=} target
 * @return {!HTMLCanvasElement}
 */
PIXI.extract.WebGLExtract.prototype.canvas = function(target) {};

/**
 * @param {(!PIXI.DisplayObject|!PIXI.RenderTexture)=} renderTexture
 * @return {!Array<number>}
 */
PIXI.extract.WebGLExtract.prototype.pixels = function(renderTexture) {};

/**
 * @return {void}
 */
PIXI.extract.WebGLExtract.prototype.destroy = function() {};
/** @const */
PIXI.extras = {};
/**
 * @record
 * @struct
 */
PIXI.extras.BitmapTextStyle = function() {};
 /** @type {(string|{name: string, size: number})} */
PIXI.extras.BitmapTextStyle.prototype.font;
 /** @type {string} */
PIXI.extras.BitmapTextStyle.prototype.align;
 /** @type {number} */
PIXI.extras.BitmapTextStyle.prototype.tint;

/**
 * @constructor
 * @struct
 * @param {string} text
 * @param {!PIXI.extras.BitmapTextStyle=} style
 */
PIXI.extras.BitmapText = function(text, style) {};
 /** @type {number} */
PIXI.extras.BitmapText.prototype._textWidth;
 /** @type {number} */
PIXI.extras.BitmapText.prototype._textHeight;
 /** @type {number} */
PIXI.extras.BitmapText.prototype.textWidth;
 /** @type {number} */
PIXI.extras.BitmapText.prototype.textHeight;
 /** @type {!Array<!PIXI.Sprite>} */
PIXI.extras.BitmapText.prototype._glyphs;
 /** @type {(string|{name: string, size: number})} */
PIXI.extras.BitmapText.prototype._font;
 /** @type {(string|{name: string, size: number})} */
PIXI.extras.BitmapText.prototype.font;
 /** @type {string} */
PIXI.extras.BitmapText.prototype._text;
 /** @type {number} */
PIXI.extras.BitmapText.prototype._maxWidth;
 /** @type {number} */
PIXI.extras.BitmapText.prototype.maxWidth;
 /** @type {number} */
PIXI.extras.BitmapText.prototype._maxLineHeight;
 /** @type {number} */
PIXI.extras.BitmapText.prototype.maxLineHeight;
 /** @type {!PIXI.ObservablePoint} */
PIXI.extras.BitmapText.prototype._anchor;
 /** @type {boolean} */
PIXI.extras.BitmapText.prototype.dirty;
 /** @type {number} */
PIXI.extras.BitmapText.prototype.tint;
 /** @type {string} */
PIXI.extras.BitmapText.prototype.align;
 /** @type {string} */
PIXI.extras.BitmapText.prototype.text;
 /** @type {(number|!PIXI.Point)} */
PIXI.extras.BitmapText.prototype.anchor;
 /** @type {?} */
PIXI.extras.BitmapText.fonts;

/**
 * @param {!XMLDocument} xml
 * @param {!PIXI.Texture} texture
 * @return {?}
 */
PIXI.extras.BitmapText.registerFont = function(xml, texture) {};

/**
 * @return {void}
 */
PIXI.extras.BitmapText.prototype.updateText = function() {};

/**
 * @return {void}
 */
PIXI.extras.BitmapText.prototype.updateTransform = function() {};

/**
 * @return {!PIXI.Rectangle}
 */
PIXI.extras.BitmapText.prototype.getLocalBounds = function() {};

/**
 * @return {void}
 */
PIXI.extras.BitmapText.prototype.validate = function() {};
/**
 * @record
 * @struct
 */
PIXI.extras.AnimatedSpriteTextureTimeObject = function() {};
 /** @type {!PIXI.Texture} */
PIXI.extras.AnimatedSpriteTextureTimeObject.prototype.texture;
 /** @type {number} */
PIXI.extras.AnimatedSpriteTextureTimeObject.prototype.time;

/**
 * @constructor
 * @struct
 * @param {(!Array<!PIXI.Texture>|!Array<!PIXI.extras.AnimatedSpriteTextureTimeObject>)} textures
 * @param {boolean=} autoUpdate
 */
PIXI.extras.AnimatedSprite = function(textures, autoUpdate) {};
 /** @type {boolean} */
PIXI.extras.AnimatedSprite.prototype._autoUpdate;
 /** @type {!Array<!PIXI.Texture>} */
PIXI.extras.AnimatedSprite.prototype._textures;
 /** @type {!Array<number>} */
PIXI.extras.AnimatedSprite.prototype._durations;
 /** @type {(!Array<!PIXI.Texture>|!Array<!PIXI.extras.AnimatedSpriteTextureTimeObject>)} */
PIXI.extras.AnimatedSprite.prototype.textures;
 /** @type {number} */
PIXI.extras.AnimatedSprite.prototype.animationSpeed;
 /** @type {boolean} */
PIXI.extras.AnimatedSprite.prototype.loop;
 /** @type {function(): void} */
PIXI.extras.AnimatedSprite.prototype.onComplete;
 /** @type {function(number): void} */
PIXI.extras.AnimatedSprite.prototype.onFrameChange;
 /** @type {function(): void} */
PIXI.extras.AnimatedSprite.prototype.onLoop;
 /** @type {number} */
PIXI.extras.AnimatedSprite.prototype._currentTime;
 /** @type {boolean} */
PIXI.extras.AnimatedSprite.prototype.playing;
 /** @type {number} */
PIXI.extras.AnimatedSprite.prototype.totalFrames;
 /** @type {number} */
PIXI.extras.AnimatedSprite.prototype.currentFrame;

/**
 * @return {void}
 */
PIXI.extras.AnimatedSprite.prototype.stop = function() {};

/**
 * @return {void}
 */
PIXI.extras.AnimatedSprite.prototype.play = function() {};

/**
 * @param {number} frameNumber
 * @return {void}
 */
PIXI.extras.AnimatedSprite.prototype.gotoAndStop = function(frameNumber) {};

/**
 * @param {number} frameNumber
 * @return {void}
 */
PIXI.extras.AnimatedSprite.prototype.gotoAndPlay = function(frameNumber) {};

/**
 * @param {number} deltaTime
 * @return {void}
 */
PIXI.extras.AnimatedSprite.prototype.update = function(deltaTime) {};

/**
 * @param {(boolean|!PIXI.DestroyOptions)=} options
 * @return {void}
 */
PIXI.extras.AnimatedSprite.prototype.destroy = function(options) {};

/**
 * @param {!Array<string>} frame
 * @return {!PIXI.extras.AnimatedSprite}
 */
PIXI.extras.AnimatedSprite.fromFrames = function(frame) {};

/**
 * @param {!Array<string>} images
 * @return {!PIXI.extras.AnimatedSprite}
 */
PIXI.extras.AnimatedSprite.fromImages = function(images) {};

/**
 * @constructor
 * @struct
 * @param {!PIXI.Texture} texture
 * @param {number=} clampMargin
 */
PIXI.extras.TextureTransform = function(texture, clampMargin) {};
 /** @type {!PIXI.Texture} */
PIXI.extras.TextureTransform.prototype._texture;
 /** @type {!PIXI.Matrix} */
PIXI.extras.TextureTransform.prototype.mapCoord;
 /** @type {!Float32Array} */
PIXI.extras.TextureTransform.prototype.uClampFrame;
 /** @type {!Float32Array} */
PIXI.extras.TextureTransform.prototype.uClampOffset;
 /** @type {number} */
PIXI.extras.TextureTransform.prototype._lastTextureID;
 /** @type {number} */
PIXI.extras.TextureTransform.prototype.clampOffset;
 /** @type {number} */
PIXI.extras.TextureTransform.prototype.clampMargin;
 /** @type {!PIXI.Texture} */
PIXI.extras.TextureTransform.prototype.texture;

/**
 * @param {boolean=} forceUpdate
 * @return {boolean}
 */
PIXI.extras.TextureTransform.prototype.update = function(forceUpdate) {};

/**
 * @constructor
 * @struct
 * @param {!PIXI.Texture} texture
 * @param {number=} width
 * @param {number=} height
 */
PIXI.extras.TilingSprite = function(texture, width, height) {};
 /** @type {!PIXI.TransformStatic} */
PIXI.extras.TilingSprite.prototype.tileTransform;
 /** @type {number} */
PIXI.extras.TilingSprite.prototype._width;
 /** @type {number} */
PIXI.extras.TilingSprite.prototype._height;
 /** @type {!CanvasPattern} */
PIXI.extras.TilingSprite.prototype._canvasPattern;
 /** @type {!PIXI.extras.TextureTransform} */
PIXI.extras.TilingSprite.prototype.uvTransform;
 /** @type {boolean} */
PIXI.extras.TilingSprite.prototype.uvRespectAnchor;
 /** @type {number} */
PIXI.extras.TilingSprite.prototype.clampMargin;
 /** @type {(!PIXI.Point|!PIXI.ObservablePoint)} */
PIXI.extras.TilingSprite.prototype.tileScale;
 /** @type {(!PIXI.Point|!PIXI.ObservablePoint)} */
PIXI.extras.TilingSprite.prototype.tilePosition;
 /** @type {number} */
PIXI.extras.TilingSprite.prototype.width;
 /** @type {number} */
PIXI.extras.TilingSprite.prototype.height;

/**
 * @param {!Float32Array} uvs
 * @param {!Float32Array} out
 * @return {!Float32Array}
 */
PIXI.extras.TilingSprite.prototype.multiplyUvs = function(uvs, out) {};

/**
 * @return {void}
 */
PIXI.extras.TilingSprite.prototype._onTextureUpdate = function() {};

/**
 * @param {!PIXI.WebGLRenderer} renderer
 * @return {void}
 */
PIXI.extras.TilingSprite.prototype._renderWebGL = function(renderer) {};

/**
 * @param {!PIXI.CanvasRenderer} renderer
 * @return {void}
 */
PIXI.extras.TilingSprite.prototype._renderCanvas = function(renderer) {};

/**
 * @return {void}
 */
PIXI.extras.TilingSprite.prototype._calculateBounds = function() {};

/**
 * @param {!PIXI.Rectangle=} rect
 * @return {!PIXI.Rectangle}
 */
PIXI.extras.TilingSprite.prototype.getLocalBounds = function(rect) {};

/**
 * @param {!PIXI.Point} point
 * @return {boolean}
 */
PIXI.extras.TilingSprite.prototype.containsPoint = function(point) {};

/**
 * @param {(boolean|!PIXI.DestroyOptions)=} options
 * @return {void}
 */
PIXI.extras.TilingSprite.prototype.destroy = function(options) {};

/**
 * @param {(string|number|!HTMLCanvasElement|!PIXI.BaseTexture|!HTMLVideoElement)} source
 * @param {number=} width
 * @param {number=} height
 * @return {!PIXI.extras.TilingSprite}
 */
PIXI.extras.TilingSprite.from = function(source, width, height) {};

/**
 * @param {string} frameId
 * @param {number=} width
 * @param {number=} height
 * @return {!PIXI.extras.TilingSprite}
 */
PIXI.extras.TilingSprite.fromFrame = function(frameId, width, height) {};

/**
 * @param {string} imageId
 * @param {boolean|number=} crossorigin_or_width
 * @param {number=} scaleMode_or_height
 * @param {boolean=} crossorigin
 * @param {number=} scaleMode
 * @return {!PIXI.Sprite|!PIXI.extras.TilingSprite}
 */
PIXI.extras.TilingSprite.fromImage = function(imageId, crossorigin_or_width, scaleMode_or_height, crossorigin, scaleMode) {};

/**
 * @constructor
 * @struct
 * @param {!PIXI.WebGLRenderer} renderer
 */
PIXI.extras.TilingSpriteRenderer = function(renderer) {};

/**
 * @param {!PIXI.extras.TilingSprite} ts
 * @return {void}
 */
PIXI.extras.TilingSpriteRenderer.prototype.render = function(ts) {};
/** @const */
PIXI.filters = {};
/**
 * @extends {PIXI.Filter}
 * @constructor
 * @struct
 */
PIXI.filters.FXAAFilter = function() {};

/**
 * @constructor
 * @struct
 * @param {number=} strength
 * @param {number=} quality
 * @param {number=} resolution
 * @param {number=} kernelSize
 */
PIXI.filters.BlurFilter = function(strength, quality, resolution, kernelSize) {};
 /** @type {!PIXI.filters.BlurXFilter} */
PIXI.filters.BlurFilter.prototype.blurXFilter;
 /** @type {!PIXI.filters.BlurYFilter} */
PIXI.filters.BlurFilter.prototype.blurYFilter;
 /** @type {number} */
PIXI.filters.BlurFilter.prototype.resolution;
 /** @type {number} */
PIXI.filters.BlurFilter.prototype.padding;
 /** @type {number} */
PIXI.filters.BlurFilter.prototype.passes;
 /** @type {number} */
PIXI.filters.BlurFilter.prototype.blur;
 /** @type {number} */
PIXI.filters.BlurFilter.prototype.blurX;
 /** @type {number} */
PIXI.filters.BlurFilter.prototype.blurY;
 /** @type {number} */
PIXI.filters.BlurFilter.prototype.quality;
 /** @type {number} */
PIXI.filters.BlurFilter.prototype.blendMode;
/**
 * @record
 * @struct
 */
PIXI.filters.BlurXFilterUniforms = function() {};
 /** @type {number} */
PIXI.filters.BlurXFilterUniforms.prototype.strength;

/**
 * @constructor
 * @struct
 * @param {number=} strength
 * @param {number=} quality
 * @param {number=} resolution
 * @param {number=} kernelSize
 */
PIXI.filters.BlurXFilter = function(strength, quality, resolution, kernelSize) {};
 /** @type {number} */
PIXI.filters.BlurXFilter.prototype._quality;
 /** @type {number} */
PIXI.filters.BlurXFilter.prototype.quality;
 /** @type {number} */
PIXI.filters.BlurXFilter.prototype.passes;
 /** @type {number} */
PIXI.filters.BlurXFilter.prototype.resolution;
 /** @type {number} */
PIXI.filters.BlurXFilter.prototype.strength;
 /** @type {boolean} */
PIXI.filters.BlurXFilter.prototype.firstRun;
 /** @type {number} */
PIXI.filters.BlurXFilter.prototype.blur;
/**
 * @record
 * @struct
 */
PIXI.filters.BlurYFilterUniforms = function() {};
 /** @type {number} */
PIXI.filters.BlurYFilterUniforms.prototype.strength;

/**
 * @constructor
 * @struct
 * @param {number=} strength
 * @param {number=} quality
 * @param {number=} resolution
 * @param {number=} kernelSize
 */
PIXI.filters.BlurYFilter = function(strength, quality, resolution, kernelSize) {};
 /** @type {number} */
PIXI.filters.BlurYFilter.prototype._quality;
 /** @type {number} */
PIXI.filters.BlurYFilter.prototype.quality;
 /** @type {number} */
PIXI.filters.BlurYFilter.prototype.passes;
 /** @type {number} */
PIXI.filters.BlurYFilter.prototype.resolution;
 /** @type {number} */
PIXI.filters.BlurYFilter.prototype.strength;
 /** @type {boolean} */
PIXI.filters.BlurYFilter.prototype.firstRun;
 /** @type {number} */
PIXI.filters.BlurYFilter.prototype.blur;
/**
 * @record
 * @struct
 */
PIXI.filters.ColorMatrixFilterUniforms = function() {};
 /** @type {!PIXI.Matrix} */
PIXI.filters.ColorMatrixFilterUniforms.prototype.m;
 /** @type {number} */
PIXI.filters.ColorMatrixFilterUniforms.prototype.uAlpha;

/**
 * @constructor
 * @struct
 */
PIXI.filters.ColorMatrixFilter = function() {};
 /** @type {!Array<number>} */
PIXI.filters.ColorMatrixFilter.prototype.matrix;
 /** @type {number} */
PIXI.filters.ColorMatrixFilter.prototype.alpha;

/**
 * @param {!Array<number>} matrix
 * @param {boolean=} multiply
 * @return {void}
 */
PIXI.filters.ColorMatrixFilter.prototype._loadMatrix = function(matrix, multiply) {};

/**
 * @param {!Array<number>} out
 * @param {!Array<number>} a
 * @param {!Array<number>} b
 * @return {void}
 */
PIXI.filters.ColorMatrixFilter.prototype._multiply = function(out, a, b) {};

/**
 * @param {!Array<number>} matrix
 * @return {void}
 */
PIXI.filters.ColorMatrixFilter.prototype._colorMatrix = function(matrix) {};

/**
 * @param {number} b
 * @param {boolean=} multiply
 * @return {void}
 */
PIXI.filters.ColorMatrixFilter.prototype.brightness = function(b, multiply) {};

/**
 * @param {number} scale
 * @param {boolean=} multiply
 * @return {void}
 */
PIXI.filters.ColorMatrixFilter.prototype.greyscale = function(scale, multiply) {};

/**
 * @param {boolean=} multiply
 * @return {void}
 */
PIXI.filters.ColorMatrixFilter.prototype.blackAndWhite = function(multiply) {};

/**
 * @param {number} rotation
 * @param {boolean=} multiply
 * @return {void}
 */
PIXI.filters.ColorMatrixFilter.prototype.hue = function(rotation, multiply) {};

/**
 * @param {number} amount
 * @param {boolean=} multiply
 * @return {void}
 */
PIXI.filters.ColorMatrixFilter.prototype.contrast = function(amount, multiply) {};

/**
 * @param {number} amount
 * @param {boolean=} multiply
 * @return {void}
 */
PIXI.filters.ColorMatrixFilter.prototype.saturate = function(amount, multiply) {};

/**
 * @param {boolean=} multiply
 * @return {void}
 */
PIXI.filters.ColorMatrixFilter.prototype.desaturate = function(multiply) {};

/**
 * @param {boolean=} multiply
 * @return {void}
 */
PIXI.filters.ColorMatrixFilter.prototype.negative = function(multiply) {};

/**
 * @param {boolean=} multiply
 * @return {void}
 */
PIXI.filters.ColorMatrixFilter.prototype.sepia = function(multiply) {};

/**
 * @param {boolean=} multiply
 * @return {void}
 */
PIXI.filters.ColorMatrixFilter.prototype.technicolor = function(multiply) {};

/**
 * @param {boolean=} multiply
 * @return {void}
 */
PIXI.filters.ColorMatrixFilter.prototype.polaroid = function(multiply) {};

/**
 * @param {boolean=} multiply
 * @return {void}
 */
PIXI.filters.ColorMatrixFilter.prototype.toBGR = function(multiply) {};

/**
 * @param {boolean=} multiply
 * @return {void}
 */
PIXI.filters.ColorMatrixFilter.prototype.kodachrome = function(multiply) {};

/**
 * @param {boolean=} multiply
 * @return {void}
 */
PIXI.filters.ColorMatrixFilter.prototype.browni = function(multiply) {};

/**
 * @param {boolean=} multiply
 * @return {void}
 */
PIXI.filters.ColorMatrixFilter.prototype.vintage = function(multiply) {};

/**
 * @param {number} desaturation
 * @param {number} toned
 * @param {string} lightColor
 * @param {string} darkColor
 * @param {boolean=} multiply
 * @return {void}
 */
PIXI.filters.ColorMatrixFilter.prototype.colorTone = function(desaturation, toned, lightColor, darkColor, multiply) {};

/**
 * @param {number} intensity
 * @param {boolean=} multiply
 * @return {void}
 */
PIXI.filters.ColorMatrixFilter.prototype.night = function(intensity, multiply) {};

/**
 * @param {number} amount
 * @param {boolean=} multiply
 * @return {void}
 */
PIXI.filters.ColorMatrixFilter.prototype.predator = function(amount, multiply) {};

/**
 * @param {boolean=} multiply
 * @return {void}
 */
PIXI.filters.ColorMatrixFilter.prototype.lsd = function(multiply) {};

/**
 * @return {void}
 */
PIXI.filters.ColorMatrixFilter.prototype.reset = function() {};
/**
 * @record
 * @struct
 */
PIXI.filters.DisplacementFilterUniforms = function() {};
 /** @type {!PIXI.Texture} */
PIXI.filters.DisplacementFilterUniforms.prototype.mapSampler;
 /** @type {!PIXI.Matrix} */
PIXI.filters.DisplacementFilterUniforms.prototype.filterMatrix;
 /** @type {!PIXI.Point} */
PIXI.filters.DisplacementFilterUniforms.prototype.scale;

/**
 * @constructor
 * @struct
 * @param {!PIXI.Sprite} sprite
 * @param {number=} scale
 */
PIXI.filters.DisplacementFilter = function(sprite, scale) {};
 /** @type {!PIXI.Point} */
PIXI.filters.DisplacementFilter.prototype.scale;
 /** @type {!PIXI.Texture} */
PIXI.filters.DisplacementFilter.prototype.map;
/**
 * @extends {PIXI.Filter}
 * @constructor
 * @struct
 */
PIXI.filters.VoidFilter = function() {};
 /** @type {number} */
PIXI.filters.VoidFilter.prototype.glShaderKey;
/**
 * @record
 * @struct
 */
PIXI.filters.NoiseFilterUniforms = function() {};
 /** @type {number} */
PIXI.filters.NoiseFilterUniforms.prototype.uNoise;
 /** @type {number} */
PIXI.filters.NoiseFilterUniforms.prototype.uSeed;

/**
 * @constructor
 * @struct
 * @param {number=} noise
 * @param {number=} seed
 */
PIXI.filters.NoiseFilter = function(noise, seed) {};
 /** @type {number} */
PIXI.filters.NoiseFilter.prototype.noise;
 /** @type {number} */
PIXI.filters.NoiseFilter.prototype.seed;
/** @const */
PIXI.interaction = {};
/**
 * @record
 * @struct
 */
PIXI.interaction.InteractiveTarget = function() {};
 /** @type {boolean} */
PIXI.interaction.InteractiveTarget.prototype.interactive;
 /** @type {boolean} */
PIXI.interaction.InteractiveTarget.prototype.interactiveChildren;
 /** @type {(!PIXI.Rectangle|!PIXI.Circle|!PIXI.Ellipse|!PIXI.Polygon|!PIXI.RoundedRectangle)} */
PIXI.interaction.InteractiveTarget.prototype.hitArea;
 /** @type {boolean} */
PIXI.interaction.InteractiveTarget.prototype.buttonMode;
 /** @type {string} */
PIXI.interaction.InteractiveTarget.prototype.cursor;
 /** @type {string} */
PIXI.interaction.InteractiveTarget.prototype.defaultCursor;

/**
 * @return {!Object<number,!PIXI.interaction.InteractionTrackingData>}
 */
PIXI.interaction.InteractiveTarget.prototype.trackedPointers = function() {};
/**
 * @record
 * @struct
 */
PIXI.interaction.InteractionTrackingData = function() {};
 /** @type {number} */
PIXI.interaction.InteractionTrackingData.prototype.pointerId;
 /** @type {number} */
PIXI.interaction.InteractionTrackingData.prototype.flags;
 /** @type {number} */
PIXI.interaction.InteractionTrackingData.prototype.none;
 /** @type {boolean} */
PIXI.interaction.InteractionTrackingData.prototype.over;
 /** @type {boolean} */
PIXI.interaction.InteractionTrackingData.prototype.rightDown;
 /** @type {boolean} */
PIXI.interaction.InteractionTrackingData.prototype.leftDown;
/**
 * @record
 * @struct
 */
PIXI.interaction.InteractionEvent = function() {};
 /** @type {boolean} */
PIXI.interaction.InteractionEvent.prototype.stopped;
 /** @type {!PIXI.DisplayObject} */
PIXI.interaction.InteractionEvent.prototype.target;
 /** @type {!PIXI.DisplayObject} */
PIXI.interaction.InteractionEvent.prototype.currentTarget;
 /** @type {string} */
PIXI.interaction.InteractionEvent.prototype.type;
 /** @type {!PIXI.interaction.InteractionData} */
PIXI.interaction.InteractionEvent.prototype.data;

/**
 * @return {void}
 */
PIXI.interaction.InteractionEvent.prototype.stopPropagation = function() {};
/**
 * @constructor
 * @struct
 */
PIXI.interaction.InteractionData = function() {};
 /** @type {!PIXI.Point} */
PIXI.interaction.InteractionData.prototype.global;
 /** @type {!PIXI.DisplayObject} */
PIXI.interaction.InteractionData.prototype.target;
 /** @type {(!MouseEvent|!TouchEvent|!PointerEvent)} */
PIXI.interaction.InteractionData.prototype.originalEvent;
 /** @type {number} */
PIXI.interaction.InteractionData.prototype.identifier;
 /** @type {boolean} */
PIXI.interaction.InteractionData.prototype.isPrimary;
 /** @type {number} */
PIXI.interaction.InteractionData.prototype.button;
 /** @type {number} */
PIXI.interaction.InteractionData.prototype.buttons;
 /** @type {number} */
PIXI.interaction.InteractionData.prototype.width;
 /** @type {number} */
PIXI.interaction.InteractionData.prototype.height;
 /** @type {number} */
PIXI.interaction.InteractionData.prototype.tiltX;
 /** @type {number} */
PIXI.interaction.InteractionData.prototype.tiltY;
 /** @type {string} */
PIXI.interaction.InteractionData.prototype.pointerType;
 /** @type {number} */
PIXI.interaction.InteractionData.prototype.pressure;
 /** @type {number} */
PIXI.interaction.InteractionData.prototype.rotationAngle;
 /** @type {number} */
PIXI.interaction.InteractionData.prototype.twist;
 /** @type {number} */
PIXI.interaction.InteractionData.prototype.tangentialPressure;
 /** @type {number} */
PIXI.interaction.InteractionData.prototype.pointerID;

/**
 * @param {(!MouseEvent|!PointerEvent|!Touch)} event
 * @return {void}
 */
PIXI.interaction.InteractionData.prototype._copyEvent = function(event) {};

/**
 * @return {void}
 */
PIXI.interaction.InteractionData.prototype._reset = function() {};

/**
 * @param {!PIXI.DisplayObject} displayObject
 * @param {!PIXI.Point=} point
 * @param {!PIXI.Point=} globalPos
 * @return {!PIXI.Point}
 */
PIXI.interaction.InteractionData.prototype.getLocalPosition = function(displayObject, point, globalPos) {};

/** @typedef {string} */
PIXI.interaction.InteractionPointerEvents;

/** @typedef {string} */
PIXI.interaction.InteractionTouchEvents;

/** @typedef {string} */
PIXI.interaction.InteractionMouseEvents;

/** @typedef {string} */
PIXI.interaction.InteractionPixiEvents;

/** @typedef {string} */
PIXI.interaction.InteractionEventTypes;
/**
 * @record
 * @struct
 */
PIXI.interaction.InteractionManagerOptions = function() {};
 /** @type {boolean} */
PIXI.interaction.InteractionManagerOptions.prototype.autoPreventDefault;
 /** @type {number} */
PIXI.interaction.InteractionManagerOptions.prototype.interactionFrequency;

/**
 * @constructor
 * @struct
 * @param {(!PIXI.WebGLRenderer|!PIXI.CanvasRenderer|!PIXI.SystemRenderer)} renderer
 * @param {!PIXI.interaction.InteractionManagerOptions=} options
 */
PIXI.interaction.InteractionManager = function(renderer, options) {};
 /** @type {!PIXI.SystemRenderer} */
PIXI.interaction.InteractionManager.prototype.renderer;
 /** @type {boolean} */
PIXI.interaction.InteractionManager.prototype.autoPreventDefault;
 /** @type {number} */
PIXI.interaction.InteractionManager.prototype.interactionFrequency;
 /** @type {!PIXI.interaction.InteractionData} */
PIXI.interaction.InteractionManager.prototype.mouse;
 /** @type {!Object<number,!PIXI.interaction.InteractionData>} */
PIXI.interaction.InteractionManager.prototype.activeInteractionData;
 /** @type {!Array<!PIXI.interaction.InteractionData>} */
PIXI.interaction.InteractionManager.prototype.interactionDataPool;
 /** @type {!PIXI.interaction.InteractionEvent} */
PIXI.interaction.InteractionManager.prototype.eventData;
 /** @type {!HTMLElement} */
PIXI.interaction.InteractionManager.prototype.interactionDOMElement;
 /** @type {boolean} */
PIXI.interaction.InteractionManager.prototype.moveWhenInside;
 /** @type {boolean} */
PIXI.interaction.InteractionManager.prototype.eventsAdded;
 /** @type {boolean} */
PIXI.interaction.InteractionManager.prototype.mouseOverRenderer;
 /** @type {boolean} */
PIXI.interaction.InteractionManager.prototype.supportsTouchEvents;
 /** @type {boolean} */
PIXI.interaction.InteractionManager.prototype.supportsPointerEvents;
 /** @type {function(!PointerEvent): void} */
PIXI.interaction.InteractionManager.prototype.onPointerUp;
 /** @type {function(!PIXI.interaction.InteractionEvent, (!PIXI.Container|!PIXI.Sprite|!PIXI.extras.TilingSprite), boolean): void} */
PIXI.interaction.InteractionManager.prototype.processPointerUp;
 /** @type {function(!PointerEvent): void} */
PIXI.interaction.InteractionManager.prototype.onPointerCancel;
 /** @type {function(!PIXI.interaction.InteractionEvent, (!PIXI.Container|!PIXI.Sprite|!PIXI.extras.TilingSprite)): void} */
PIXI.interaction.InteractionManager.prototype.processPointerCancel;
 /** @type {function(!PointerEvent): void} */
PIXI.interaction.InteractionManager.prototype.onPointerDown;
 /** @type {function(!PIXI.interaction.InteractionEvent, (!PIXI.Container|!PIXI.Sprite|!PIXI.extras.TilingSprite), boolean): void} */
PIXI.interaction.InteractionManager.prototype.processPointerDown;
 /** @type {function(!PointerEvent): void} */
PIXI.interaction.InteractionManager.prototype.onPointerMove;
 /** @type {function(!PIXI.interaction.InteractionEvent, (!PIXI.Container|!PIXI.Sprite|!PIXI.extras.TilingSprite), boolean): void} */
PIXI.interaction.InteractionManager.prototype.processPointerMove;
 /** @type {function(!PointerEvent): void} */
PIXI.interaction.InteractionManager.prototype.onPointerOut;
 /** @type {function(!PIXI.interaction.InteractionEvent, (!PIXI.Container|!PIXI.Sprite|!PIXI.extras.TilingSprite), boolean): void} */
PIXI.interaction.InteractionManager.prototype.processPointerOverOut;
 /** @type {function(!PointerEvent): void} */
PIXI.interaction.InteractionManager.prototype.onPointerOver;
 /** @type {{default: string, pointer: string}} */
PIXI.interaction.InteractionManager.prototype.cursorStyles;
 /** @type {string} */
PIXI.interaction.InteractionManager.prototype.currentCursorMode;
 /** @type {string} */
PIXI.interaction.InteractionManager.prototype.cursor;
 /** @type {!PIXI.Point} */
PIXI.interaction.InteractionManager.prototype._tempPoint;
 /** @type {number} */
PIXI.interaction.InteractionManager.prototype.resolution;
 /** @type {string} */
PIXI.interaction.InteractionManager.prototype.defaultCursorStyle;
 /** @type {string} */
PIXI.interaction.InteractionManager.prototype.currentCursorStyle;

/**
 * @param {!PIXI.Point} globalPoint
 * @param {!PIXI.Container=} root
 * @return {!PIXI.DisplayObject}
 */
PIXI.interaction.InteractionManager.prototype.hitTest = function(globalPoint, root) {};

/**
 * @param {!HTMLCanvasElement} element
 * @param {number=} resolution
 * @return {void}
 */
PIXI.interaction.InteractionManager.prototype.setTargetElement = function(element, resolution) {};

/**
 * @return {void}
 */
PIXI.interaction.InteractionManager.prototype.addEvents = function() {};

/**
 * @return {void}
 */
PIXI.interaction.InteractionManager.prototype.removeEvents = function() {};

/**
 * @param {number=} deltaTime
 * @return {void}
 */
PIXI.interaction.InteractionManager.prototype.update = function(deltaTime) {};

/**
 * @param {string} mode
 * @return {void}
 */
PIXI.interaction.InteractionManager.prototype.setCursorMode = function(mode) {};

/**
 * @param {(!PIXI.Container|!PIXI.Sprite|!PIXI.extras.TilingSprite)} displayObject
 * @param {string} eventString
 * @param {?} eventData
 * @return {void}
 */
PIXI.interaction.InteractionManager.prototype.dispatchEvent = function(displayObject, eventString, eventData) {};

/**
 * @param {!PIXI.Point} point
 * @param {number} x
 * @param {number} y
 * @return {void}
 */
PIXI.interaction.InteractionManager.prototype.mapPositionToPoint = function(point, x, y) {};

/**
 * @param {!PIXI.interaction.InteractionEvent} interactionEvent
 * @param {(!PIXI.Container|!PIXI.Sprite|!PIXI.extras.TilingSprite)} displayObject
 * @param {!Function=} func
 * @param {boolean=} hitTest
 * @param {boolean=} interactive
 * @return {boolean}
 */
PIXI.interaction.InteractionManager.prototype.processInteractive = function(interactionEvent, displayObject, func, hitTest, interactive) {};

/**
 * @param {!PointerEvent} originalEvent
 * @param {boolean} cancelled
 * @param {!Function} func
 * @return {void}
 */
PIXI.interaction.InteractionManager.prototype.onPointerComplete = function(originalEvent, cancelled, func) {};

/**
 * @param {number} pointerId
 * @return {!PIXI.interaction.InteractionData}
 */
PIXI.interaction.InteractionManager.prototype.getInteractionDataForPointerId = function(pointerId) {};

/**
 * @param {!PointerEvent} event
 * @return {void}
 */
PIXI.interaction.InteractionManager.prototype.releaseInteractionDataForPointerId = function(event) {};

/**
 * @param {!PIXI.interaction.InteractionEvent} interactionEvent
 * @param {!PointerEvent} pointerEvent
 * @param {!PIXI.interaction.InteractionData} interactionData
 * @return {!PIXI.interaction.InteractionEvent}
 */
PIXI.interaction.InteractionManager.prototype.configureInteractionEventForDOMEvent = function(interactionEvent, pointerEvent, interactionData) {};

/**
 * @param {(!MouseEvent|!TouchEvent|!PointerEvent)} event
 * @return {!Array<!PointerEvent>}
 */
PIXI.interaction.InteractionManager.prototype.normalizeToPointerData = function(event) {};

/**
 * @return {void}
 */
PIXI.interaction.InteractionManager.prototype.destroy = function() {};

/**
 * @constructor
 * @struct
 * @param {!Function} fn
 * @param {boolean=} once
 * @param {?=} thisArg
 */
PIXI.MiniSignalBinding = function(fn, once, thisArg) {};
 /** @type {!Function} */
PIXI.MiniSignalBinding.prototype._fn;
 /** @type {boolean} */
PIXI.MiniSignalBinding.prototype._once;
 /** @type {?} */
PIXI.MiniSignalBinding.prototype._thisArg;
 /** @type {!PIXI.MiniSignalBinding} */
PIXI.MiniSignalBinding.prototype._next;
 /** @type {!PIXI.MiniSignalBinding} */
PIXI.MiniSignalBinding.prototype._prev;
 /** @type {!PIXI.MiniSignal} */
PIXI.MiniSignalBinding.prototype._owner;

/**
 * @return {boolean}
 */
PIXI.MiniSignalBinding.prototype.detach = function() {};

/**
 * @constructor
 * @struct
 */
PIXI.MiniSignal = function() {};
 /** @type {!PIXI.MiniSignalBinding} */
PIXI.MiniSignal.prototype._head;
 /** @type {!PIXI.MiniSignalBinding} */
PIXI.MiniSignal.prototype._tail;

/**
 * @param {boolean=} exists
 * @return {(boolean|!Array<!PIXI.MiniSignalBinding>)|boolean|!Array<!PIXI.MiniSignalBinding>}
 */
PIXI.MiniSignal.prototype.handlers = function(exists) {};

/**
 * @param {!PIXI.MiniSignalBinding} node
 * @return {boolean}
 */
PIXI.MiniSignal.prototype.has = function(node) {};

/**
 * @return {boolean}
 */
PIXI.MiniSignal.prototype.dispatch = function() {};

/**
 * @param {!Function} fn
 * @param {?=} thisArg
 * @return {?}
 */
PIXI.MiniSignal.prototype.add = function(fn, thisArg) {};

/**
 * @param {!Function} fn
 * @param {?=} thisArg
 * @return {?}
 */
PIXI.MiniSignal.prototype.once = function(fn, thisArg) {};

/**
 * @param {!PIXI.MiniSignalBinding} node
 * @return {!PIXI.MiniSignal}
 */
PIXI.MiniSignal.prototype.detach = function(node) {};

/**
 * @return {!PIXI.MiniSignal}
 */
PIXI.MiniSignal.prototype.detachAll = function() {};
/** @const */
PIXI.loaders = {};
/**
 * @record
 * @struct
 */
PIXI.loaders.LoaderOptions = function() {};
 /** @type {(string|boolean)} */
PIXI.loaders.LoaderOptions.prototype.crossOrigin;
 /** @type {number} */
PIXI.loaders.LoaderOptions.prototype.loadType;
 /** @type {string} */
PIXI.loaders.LoaderOptions.prototype.xhrType;
 /** @type {{loadElement: (!HTMLImageElement|!HTMLVideoElement|!HTMLAudioElement), skipSource: boolean, mimeType: (string|!Array<string>)}} */
PIXI.loaders.LoaderOptions.prototype.metaData;
/**
 * @record
 * @struct
 */
PIXI.loaders.ResourceDictionary = function() {};

/* TODO: IndexSignature: PIXI.loaders */

/**
 * @constructor
 * @struct
 * @param {string=} baseUrl
 * @param {number=} concurrency
 */
PIXI.loaders.Loader = function(baseUrl, concurrency) {};
 /** @type {?} */
PIXI.loaders.Loader.Resource;
 /** @type {?} */
PIXI.loaders.Loader.async;
 /** @type {?} */
PIXI.loaders.Loader.base64;
 /** @type {string} */
PIXI.loaders.Loader.prototype.baseUrl;
 /** @type {number} */
PIXI.loaders.Loader.prototype.progress;
 /** @type {boolean} */
PIXI.loaders.Loader.prototype.loading;
 /** @type {string} */
PIXI.loaders.Loader.prototype.defaultQueryString;
 /** @type {!Array<!Function>} */
PIXI.loaders.Loader.prototype._beforeMiddleware;
 /** @type {!Array<!Function>} */
PIXI.loaders.Loader.prototype._afterMiddleware;
 /** @type {!Array<!PIXI.loaders.Resource>} */
PIXI.loaders.Loader.prototype._resourcesParsing;
 /** @type {function(!PIXI.loaders.Resource, !Function): void} */
PIXI.loaders.Loader.prototype._boundLoadResource;
 /** @type {?} */
PIXI.loaders.Loader.prototype._queue;
 /** @type {!PIXI.loaders.ResourceDictionary} */
PIXI.loaders.Loader.prototype.resources;
 /** @type {!PIXI.MiniSignal} */
PIXI.loaders.Loader.prototype.onProgress;
 /** @type {!PIXI.MiniSignal} */
PIXI.loaders.Loader.prototype.onError;
 /** @type {!PIXI.MiniSignal} */
PIXI.loaders.Loader.prototype.onLoad;
 /** @type {!PIXI.MiniSignal} */
PIXI.loaders.Loader.prototype.onStart;
 /** @type {!PIXI.MiniSignal} */
PIXI.loaders.Loader.prototype.onComplete;

/**
 * @param {!Function} fn
 * @return {void}
 */
PIXI.loaders.Loader.addPixiMiddleware = function(fn) {};

/**
 * @param {...?|string} params_or_name_or_obj
 * @return {Loader}
 */
PIXI.loaders.Loader.prototype.add = function(params_or_name_or_obj) {};

/**
 * @param {!Function} fn
 * @return {Loader}
 */
PIXI.loaders.Loader.prototype.pre = function(fn) {};

/**
 * @param {!Function} fn
 * @return {Loader}
 */
PIXI.loaders.Loader.prototype.use = function(fn) {};

/**
 * @return {Loader}
 */
PIXI.loaders.Loader.prototype.reset = function() {};

/**
 * @param {!Function=} cb
 * @return {Loader}
 */
PIXI.loaders.Loader.prototype.load = function(cb) {};

/**
 * @param {string} url
 * @return {string}
 */
PIXI.loaders.Loader.prototype._prepareUrl = function(url) {};

/**
 * @param {!PIXI.loaders.Resource} resource
 * @param {!Function} dequeue
 * @return {void}
 */
PIXI.loaders.Loader.prototype._loadResource = function(resource, dequeue) {};

/**
 * @return {void}
 */
PIXI.loaders.Loader.prototype._onComplete = function() {};

/**
 * @param {!PIXI.loaders.Resource} resource
 * @return {void}
 */
PIXI.loaders.Loader.prototype._onLoad = function(resource) {};

/**
 * @return {void}
 */
PIXI.loaders.Loader.prototype.destroy = function() {};

/**
 * @param {string} event
 * @param {function(!PIXI.loaders.Loader, ?): void|function(!Error, !PIXI.loaders.Loader, !PIXI.loaders.Resource): void|function(!PIXI.loaders.Loader, !PIXI.loaders.Resource): void|function(!PIXI.loaders.Loader): void} fn
 * @param {?=} context
 * @return {Loader}
 */
PIXI.loaders.Loader.prototype.on = function(event, fn, context) {};

/**
 * @param {string} event
 * @param {function(!PIXI.loaders.Loader, ?): void|function(!Error, !PIXI.loaders.Loader, !PIXI.loaders.Resource): void|function(!PIXI.loaders.Loader, !PIXI.loaders.Resource): void|function(!PIXI.loaders.Loader): void} fn
 * @param {?=} context
 * @return {Loader}
 */
PIXI.loaders.Loader.prototype.once = function(event, fn, context) {};

/**
 * @param {string} event
 * @param {!Function=} fn
 * @param {?=} context
 * @return {Loader}
 */
PIXI.loaders.Loader.prototype.off = function(event, fn, context) {};
/**
 * @record
 * @struct
 */
PIXI.loaders.TextureDictionary = function() {};

/* TODO: IndexSignature: PIXI.loaders */

/**
 * @constructor
 * @struct
 * @param {string} name
 * @param {(string|!Array<string>)} url
 * @param {!PIXI.loaders.LoaderOptions=} options
 */
PIXI.loaders.Resource = function(name, url, options) {};
 /** @type {number} */
PIXI.loaders.Resource.prototype._flags;
 /** @type {string} */
PIXI.loaders.Resource.prototype.name;
 /** @type {string} */
PIXI.loaders.Resource.prototype.url;
 /** @type {string} */
PIXI.loaders.Resource.prototype.extension;
 /** @type {?} */
PIXI.loaders.Resource.prototype.data;
 /** @type {(string|boolean)} */
PIXI.loaders.Resource.prototype.crossOrigin;
 /** @type {number} */
PIXI.loaders.Resource.prototype.loadType;
 /** @type {string} */
PIXI.loaders.Resource.prototype.xhrType;
 /** @type {?} */
PIXI.loaders.Resource.prototype.metadata;
 /** @type {!Error} */
PIXI.loaders.Resource.prototype.error;
 /** @type {!XMLHttpRequest} */
PIXI.loaders.Resource.prototype.xhr;
 /** @type {!Array<!PIXI.loaders.Resource>} */
PIXI.loaders.Resource.prototype.children;
 /** @type {number} */
PIXI.loaders.Resource.prototype.type;
 /** @type {number} */
PIXI.loaders.Resource.prototype.progressChunk;
 /** @type {!Function} */
PIXI.loaders.Resource.prototype._dequeue;
 /** @type {!Function} */
PIXI.loaders.Resource.prototype._onLoadBinding;
 /** @type {!Function} */
PIXI.loaders.Resource.prototype._boundComplete;
 /** @type {!Function} */
PIXI.loaders.Resource.prototype._boundOnError;
 /** @type {!Function} */
PIXI.loaders.Resource.prototype._boundOnProgress;
 /** @type {!Function} */
PIXI.loaders.Resource.prototype._boundXhrOnError;
 /** @type {!Function} */
PIXI.loaders.Resource.prototype._boundXhrOnAbort;
 /** @type {!Function} */
PIXI.loaders.Resource.prototype._boundXhrOnLoad;
 /** @type {!Function} */
PIXI.loaders.Resource.prototype._boundXdrOnTimeout;
 /** @type {!PIXI.MiniSignal} */
PIXI.loaders.Resource.prototype.onStart;
 /** @type {!PIXI.MiniSignal} */
PIXI.loaders.Resource.prototype.onProgress;
 /** @type {!PIXI.MiniSignal} */
PIXI.loaders.Resource.prototype.onComplete;
 /** @type {!PIXI.MiniSignal} */
PIXI.loaders.Resource.prototype.onAfterMiddleware;
 /** @type {boolean} */
PIXI.loaders.Resource.prototype.isDataUrl;
 /** @type {boolean} */
PIXI.loaders.Resource.prototype.isComplete;
 /** @type {boolean} */
PIXI.loaders.Resource.prototype.isLoading;
 /** @type {{NONE: number, DATA_URL: number, COMPLETE: number, LOADING: number}} */
PIXI.loaders.Resource.STATUS_FLAGS;
 /** @type {{UNKNOWN: number, JSON: number, XML: number, IMAGE: number, AUDIO: number, VIDEO: number, TEXT: number}} */
PIXI.loaders.Resource.TYPE;
 /** @type {{XHR: number, IMAGE: number, AUDIO: number, VIDEO: number}} */
PIXI.loaders.Resource.LOAD_TYPE;
 /** @type {{DEFAULT: string, BUFFER: string, BLOB: string, DOCUMENT: string, JSON: string, TEXT: string}} */
PIXI.loaders.Resource.XHR_RESPONSE_TYPE;
 /** @type {string} */
PIXI.loaders.Resource.EMPTY_GIF;
 /** @type {!PIXI.Texture} */
PIXI.loaders.Resource.prototype.texture;
 /** @type {?} */
PIXI.loaders.Resource.prototype.spineAtlas;
 /** @type {?} */
PIXI.loaders.Resource.prototype.spineData;
 /** @type {!PIXI.loaders.TextureDictionary} */
PIXI.loaders.Resource.prototype.textures;

/**
 * @param {string} extname
 * @param {number} loadType
 * @return {void}
 */
PIXI.loaders.Resource.setExtensionLoadType = function(extname, loadType) {};

/**
 * @param {string} extname
 * @param {string} xhrType
 * @return {void}
 */
PIXI.loaders.Resource.setExtensionXhrType = function(extname, xhrType) {};

/**
 * @return {void}
 */
PIXI.loaders.Resource.prototype.complete = function() {};

/**
 * @param {string=} message
 * @return {void}
 */
PIXI.loaders.Resource.prototype.abort = function(message) {};

/**
 * @param {!Function=} cb
 * @return {void}
 */
PIXI.loaders.Resource.prototype.load = function(cb) {};

/**
 * @param {number} flag
 * @return {boolean}
 */
PIXI.loaders.Resource.prototype._hasFlag = function(flag) {};

/**
 * @param {number} flag
 * @param {boolean} value
 * @return {void}
 */
PIXI.loaders.Resource.prototype._setFlag = function(flag, value) {};

/**
 * @param {string} type
 * @return {void}
 */
PIXI.loaders.Resource.prototype._loadElement = function(type) {};

/**
 * @param {string} type
 * @return {void}
 */
PIXI.loaders.Resource.prototype._loadSourceElement = function(type) {};

/**
 * @return {void}
 */
PIXI.loaders.Resource.prototype._loadXhr = function() {};

/**
 * @return {void}
 */
PIXI.loaders.Resource.prototype._loadXdr = function() {};

/**
 * @param {string} type
 * @param {string} url
 * @param {string=} mime
 * @return {!HTMLSourceElement}
 */
PIXI.loaders.Resource.prototype._createSource = function(type, url, mime) {};

/**
 * @param {?=} event
 * @return {void}
 */
PIXI.loaders.Resource.prototype._onError = function(event) {};

/**
 * @param {?=} event
 * @return {void}
 */
PIXI.loaders.Resource.prototype._onProgress = function(event) {};

/**
 * @return {void}
 */
PIXI.loaders.Resource.prototype._xhrOnError = function() {};

/**
 * @return {void}
 */
PIXI.loaders.Resource.prototype._xhrOnAbort = function() {};

/**
 * @return {void}
 */
PIXI.loaders.Resource.prototype._xdrOnTimeout = function() {};

/**
 * @return {void}
 */
PIXI.loaders.Resource.prototype._xhrOnLoad = function() {};

/**
 * @param {string} url
 * @param {?} loc
 * @return {string}
 */
PIXI.loaders.Resource.prototype._determineCrossOrigin = function(url, loc) {};

/**
 * @return {number}
 */
PIXI.loaders.Resource.prototype._determineXhrType = function() {};

/**
 * @return {number}
 */
PIXI.loaders.Resource.prototype._determineLoadType = function() {};

/**
 * @return {string}
 */
PIXI.loaders.Resource.prototype._getExtension = function() {};

/**
 * @param {number} type
 * @return {string}
 */
PIXI.loaders.Resource.prototype._getMimeXhrType = function(type) {};
/** @const */
PIXI.mesh = {};

/**
 * @constructor
 * @struct
 * @param {!PIXI.Texture} texture
 * @param {!Float32Array=} vertices
 * @param {!Float32Array=} uvs
 * @param {!Uint16Array=} indices
 * @param {number=} drawMode
 */
PIXI.mesh.Mesh = function(texture, vertices, uvs, indices, drawMode) {};
 /** @type {!PIXI.Texture} */
PIXI.mesh.Mesh.prototype._texture;
 /** @type {!Float32Array} */
PIXI.mesh.Mesh.prototype.uvs;
 /** @type {!Float32Array} */
PIXI.mesh.Mesh.prototype.vertices;
 /** @type {!Uint16Array} */
PIXI.mesh.Mesh.prototype.indices;
 /** @type {number} */
PIXI.mesh.Mesh.prototype.dirty;
 /** @type {number} */
PIXI.mesh.Mesh.prototype.indexDirty;
 /** @type {boolean} */
PIXI.mesh.Mesh.prototype.dirtyVertex;
 /** @type {number} */
PIXI.mesh.Mesh.prototype._geometryVersion;
 /** @type {number} */
PIXI.mesh.Mesh.prototype.blendMode;
 /** @type {string} */
PIXI.mesh.Mesh.prototype.pluginName;
 /** @type {number} */
PIXI.mesh.Mesh.prototype.canvasPadding;
 /** @type {number} */
PIXI.mesh.Mesh.prototype.drawMode;
 /** @type {!PIXI.Texture} */
PIXI.mesh.Mesh.prototype.texture;
 /** @type {!Float32Array} */
PIXI.mesh.Mesh.prototype.tintRgb;
 /** @type {!Object<number,?>} */
PIXI.mesh.Mesh.prototype._glDatas;
 /** @type {!PIXI.extras.TextureTransform} */
PIXI.mesh.Mesh.prototype._uvTransform;
 /** @type {boolean} */
PIXI.mesh.Mesh.prototype.uploadUvTransform;
 /** @type {number} */
PIXI.mesh.Mesh.prototype.tint;
 /** @type {{TRIANGLE_MESH: number, TRIANGLES: number}} */
PIXI.mesh.Mesh.DRAW_MODES;

/**
 * @return {void}
 */
PIXI.mesh.Mesh.prototype.multiplyUvs = function() {};

/**
 * @param {boolean=} forceUpdate
 * @return {void}
 */
PIXI.mesh.Mesh.prototype.refresh = function(forceUpdate) {};

/**
 * @return {void}
 */
PIXI.mesh.Mesh.prototype._refresh = function() {};

/**
 * @param {!PIXI.WebGLRenderer} renderer
 * @return {void}
 */
PIXI.mesh.Mesh.prototype._renderWebGL = function(renderer) {};

/**
 * @param {!PIXI.CanvasRenderer} renderer
 * @return {void}
 */
PIXI.mesh.Mesh.prototype._renderCanvas = function(renderer) {};

/**
 * @return {void}
 */
PIXI.mesh.Mesh.prototype._onTextureUpdate = function() {};

/**
 * @return {void}
 */
PIXI.mesh.Mesh.prototype._calculateBounds = function() {};

/**
 * @param {!PIXI.Point} point
 * @return {boolean}
 */
PIXI.mesh.Mesh.prototype.containsPoint = function(point) {};

/**
 * @constructor
 * @struct
 * @param {!PIXI.CanvasRenderer} renderer
 */
PIXI.mesh.CanvasMeshRenderer = function(renderer) {};
 /** @type {!PIXI.CanvasRenderer} */
PIXI.mesh.CanvasMeshRenderer.prototype.renderer;

/**
 * @param {!PIXI.mesh.Mesh} mesh
 * @return {void}
 */
PIXI.mesh.CanvasMeshRenderer.prototype.render = function(mesh) {};

/**
 * @param {!PIXI.mesh.Mesh} mesh
 * @return {void}
 */
PIXI.mesh.CanvasMeshRenderer.prototype._renderTriangleMesh = function(mesh) {};

/**
 * @param {!PIXI.mesh.Mesh} mesh
 * @return {void}
 */
PIXI.mesh.CanvasMeshRenderer.prototype._renderTriangles = function(mesh) {};

/**
 * @param {!PIXI.mesh.Mesh} mesh
 * @param {number} index0
 * @param {number} index1
 * @param {number} index2
 * @return {void}
 */
PIXI.mesh.CanvasMeshRenderer.prototype._renderDrawTriangle = function(mesh, index0, index1, index2) {};

/**
 * @param {!PIXI.mesh.Mesh} mesh
 * @return {void}
 */
PIXI.mesh.CanvasMeshRenderer.prototype.renderMeshFlat = function(mesh) {};

/**
 * @return {void}
 */
PIXI.mesh.CanvasMeshRenderer.prototype.destroy = function() {};

/**
 * @constructor
 * @struct
 * @param {!PIXI.WebGLRenderer} renderer
 */
PIXI.mesh.MeshRenderer = function(renderer) {};
 /** @type {!PIXI.Shader} */
PIXI.mesh.MeshRenderer.prototype.shader;

/**
 * @param {!PIXI.mesh.Mesh} mesh
 * @return {void}
 */
PIXI.mesh.MeshRenderer.prototype.render = function(mesh) {};

/**
 * @constructor
 * @struct
 * @param {!PIXI.Texture} texture
 * @param {number=} verticesX
 * @param {number=} verticesY
 */
PIXI.mesh.Plane = function(texture, verticesX, verticesY) {};
 /** @type {boolean} */
PIXI.mesh.Plane.prototype._ready;
 /** @type {number} */
PIXI.mesh.Plane.prototype.verticesX;
 /** @type {number} */
PIXI.mesh.Plane.prototype.verticesY;
 /** @type {number} */
PIXI.mesh.Plane.prototype.drawMode;

/**
 * @return {void}
 */
PIXI.mesh.Plane.prototype.refresh = function() {};

/**
 * @return {void}
 */
PIXI.mesh.Plane.prototype._onTexureUpdate = function() {};

/**
 * @constructor
 * @struct
 * @param {!PIXI.Texture} texture
 * @param {number=} leftWidth
 * @param {number=} topHeight
 * @param {number=} rightWidth
 * @param {number=} bottomHeight
 */
PIXI.mesh.NineSlicePlane = function(texture, leftWidth, topHeight, rightWidth, bottomHeight) {};
 /** @type {number} */
PIXI.mesh.NineSlicePlane.prototype.width;
 /** @type {number} */
PIXI.mesh.NineSlicePlane.prototype.height;
 /** @type {number} */
PIXI.mesh.NineSlicePlane.prototype.leftWidth;
 /** @type {number} */
PIXI.mesh.NineSlicePlane.prototype.rightWidth;
 /** @type {number} */
PIXI.mesh.NineSlicePlane.prototype.topHeight;
 /** @type {number} */
PIXI.mesh.NineSlicePlane.prototype.bottomHeight;
 /** @type {number} */
PIXI.mesh.NineSlicePlane.prototype._leftWidth;
 /** @type {number} */
PIXI.mesh.NineSlicePlane.prototype._rightWidth;
 /** @type {number} */
PIXI.mesh.NineSlicePlane.prototype._topHeight;
 /** @type {number} */
PIXI.mesh.NineSlicePlane.prototype._bottomHeight;
 /** @type {number} */
PIXI.mesh.NineSlicePlane.prototype._height;
 /** @type {number} */
PIXI.mesh.NineSlicePlane.prototype._width;
 /** @type {number} */
PIXI.mesh.NineSlicePlane.prototype._origHeight;
 /** @type {number} */
PIXI.mesh.NineSlicePlane.prototype._origWidth;
 /** @type {number} */
PIXI.mesh.NineSlicePlane.prototype._uvh;
 /** @type {number} */
PIXI.mesh.NineSlicePlane.prototype._uvw;

/**
 * @return {void}
 */
PIXI.mesh.NineSlicePlane.prototype.updateHorizontalVertices = function() {};

/**
 * @return {void}
 */
PIXI.mesh.NineSlicePlane.prototype.updateVerticalVertices = function() {};

/**
 * @param {(!CanvasRenderingContext2D|!WebGLRenderingContext)} context
 * @param {?} textureSource
 * @param {number} w
 * @param {number} h
 * @param {number} x1
 * @param {number} y1
 * @param {number} x2
 * @param {number} y2
 * @return {void}
 */
PIXI.mesh.NineSlicePlane.prototype.drawSegment = function(context, textureSource, w, h, x1, y1, x2, y2) {};

/**
 * @return {void}
 */
PIXI.mesh.NineSlicePlane.prototype._refresh = function() {};

/**
 * @constructor
 * @struct
 * @param {!PIXI.Texture} texture
 * @param {!Array<!PIXI.Point>} points
 */
PIXI.mesh.Rope = function(texture, points) {};
 /** @type {!Array<!PIXI.Point>} */
PIXI.mesh.Rope.prototype.points;
 /** @type {!Array<number>} */
PIXI.mesh.Rope.prototype.colors;
 /** @type {boolean} */
PIXI.mesh.Rope.prototype.autoUpdate;

/**
 * @return {void}
 */
PIXI.mesh.Rope.prototype._refresh = function() {};

/**
 * @return {void}
 */
PIXI.mesh.Rope.prototype.refreshVertices = function() {};
/** @const */
PIXI.particles = {};
/**
 * @record
 * @struct
 */
PIXI.particles.ParticleContainerProperties = function() {};
 /** @type {boolean} */
PIXI.particles.ParticleContainerProperties.prototype.scale;
 /** @type {boolean} */
PIXI.particles.ParticleContainerProperties.prototype.position;
 /** @type {boolean} */
PIXI.particles.ParticleContainerProperties.prototype.rotation;
 /** @type {boolean} */
PIXI.particles.ParticleContainerProperties.prototype.uvs;
 /** @type {boolean} */
PIXI.particles.ParticleContainerProperties.prototype.alpha;

/**
 * @constructor
 * @struct
 * @param {number=} size
 * @param {!PIXI.particles.ParticleContainerProperties=} properties
 * @param {number=} batchSize
 */
PIXI.particles.ParticleContainer = function(size, properties, batchSize) {};
 /** @type {number} */
PIXI.particles.ParticleContainer.prototype._tint;
 /** @type {(number|!Array<?>)} */
PIXI.particles.ParticleContainer.prototype.tintRgb;
 /** @type {number} */
PIXI.particles.ParticleContainer.prototype.tint;
 /** @type {!Array<boolean>} */
PIXI.particles.ParticleContainer.prototype._properties;
 /** @type {number} */
PIXI.particles.ParticleContainer.prototype._maxSize;
 /** @type {number} */
PIXI.particles.ParticleContainer.prototype._batchSize;
 /** @type {!Object<number,!WebGLBuffer>} */
PIXI.particles.ParticleContainer.prototype._glBuffers;
 /** @type {number} */
PIXI.particles.ParticleContainer.prototype._bufferToUpdate;
 /** @type {boolean} */
PIXI.particles.ParticleContainer.prototype.interactiveChildren;
 /** @type {number} */
PIXI.particles.ParticleContainer.prototype.blendMode;
 /** @type {boolean} */
PIXI.particles.ParticleContainer.prototype.roundPixels;
 /** @type {!PIXI.BaseTexture} */
PIXI.particles.ParticleContainer.prototype.baseTexture;
 /** @type {function(number): void} */
PIXI.particles.ParticleContainer.prototype.onChildrenChange;

/**
 * @param {!PIXI.particles.ParticleContainerProperties} properties
 * @return {void}
 */
PIXI.particles.ParticleContainer.prototype.setProperties = function(properties) {};

/**
 * @param {(boolean|!PIXI.DestroyOptions)=} options
 * @return {void}
 */
PIXI.particles.ParticleContainer.prototype.destroy = function(options) {};

/**
 * @constructor
 * @struct
 * @param {!WebGLRenderingContext} gl
 * @param {?} properties
 * @param {!Array<?>} dynamicPropertyFlags
 * @param {number} size
 */
PIXI.particles.ParticleBuffer = function(gl, properties, dynamicPropertyFlags, size) {};
 /** @type {!WebGLRenderingContext} */
PIXI.particles.ParticleBuffer.prototype.gl;
 /** @type {number} */
PIXI.particles.ParticleBuffer.prototype.vertSize;
 /** @type {number} */
PIXI.particles.ParticleBuffer.prototype.vertByteSize;
 /** @type {number} */
PIXI.particles.ParticleBuffer.prototype.size;
 /** @type {!Array<?>} */
PIXI.particles.ParticleBuffer.prototype.dynamicProperties;
 /** @type {!Array<?>} */
PIXI.particles.ParticleBuffer.prototype.staticProperties;
 /** @type {number} */
PIXI.particles.ParticleBuffer.prototype.staticStride;
 /** @type {?} */
PIXI.particles.ParticleBuffer.prototype.staticBuffer;
 /** @type {?} */
PIXI.particles.ParticleBuffer.prototype.staticData;
 /** @type {number} */
PIXI.particles.ParticleBuffer.prototype.dynamicStride;
 /** @type {?} */
PIXI.particles.ParticleBuffer.prototype.dynamicBuffer;
 /** @type {?} */
PIXI.particles.ParticleBuffer.prototype.dynamicData;

/**
 * @return {void}
 */
PIXI.particles.ParticleBuffer.prototype.destroy = function() {};
/**
 * @record
 * @struct
 */
PIXI.particles.ParticleRendererProperty = function() {};
 /** @type {number} */
PIXI.particles.ParticleRendererProperty.prototype.attribute;
 /** @type {number} */
PIXI.particles.ParticleRendererProperty.prototype.size;
 /** @type {number} */
PIXI.particles.ParticleRendererProperty.prototype.offset;

/**
 * @param {!Array<!PIXI.DisplayObject>} children
 * @param {number} startIndex
 * @param {number} amount
 * @param {!Array<number>} array
 * @param {number} stride
 * @param {number} offset
 * @return {void}
 */
PIXI.particles.ParticleRendererProperty.prototype.uploadFunction = function(children, startIndex, amount, array, stride, offset) {};

/**
 * @constructor
 * @struct
 * @param {!PIXI.WebGLRenderer} renderer
 */
PIXI.particles.ParticleRenderer = function(renderer) {};
 /** @type {!PIXI.glCore.GLShader} */
PIXI.particles.ParticleRenderer.prototype.shader;
 /** @type {!WebGLBuffer} */
PIXI.particles.ParticleRenderer.prototype.indexBuffer;
 /** @type {!Array<!PIXI.particles.ParticleRendererProperty>} */
PIXI.particles.ParticleRenderer.prototype.properties;
 /** @type {!PIXI.Matrix} */
PIXI.particles.ParticleRenderer.prototype.tempMatrix;
 /** @type {!Uint16Array} */
PIXI.particles.ParticleRenderer.prototype.indices;

/**
 * @return {void}
 */
PIXI.particles.ParticleRenderer.prototype.start = function() {};

/**
 * @param {!PIXI.particles.ParticleContainer} container
 * @return {!Array<!PIXI.particles.ParticleBuffer>}
 */
PIXI.particles.ParticleRenderer.prototype.generateBuffers = function(container) {};

/**
 * @param {!Array<!PIXI.DisplayObject>} children
 * @param {number} startIndex
 * @param {number} amount
 * @param {!Array<number>} array
 * @param {number} stride
 * @param {number} offset
 * @return {void}
 */
PIXI.particles.ParticleRenderer.prototype.uploadVertices = function(children, startIndex, amount, array, stride, offset) {};

/**
 * @param {!Array<!PIXI.DisplayObject>} children
 * @param {number} startIndex
 * @param {number} amount
 * @param {!Array<number>} array
 * @param {number} stride
 * @param {number} offset
 * @return {void}
 */
PIXI.particles.ParticleRenderer.prototype.uploadPosition = function(children, startIndex, amount, array, stride, offset) {};

/**
 * @param {!Array<!PIXI.DisplayObject>} children
 * @param {number} startIndex
 * @param {number} amount
 * @param {!Array<number>} array
 * @param {number} stride
 * @param {number} offset
 * @return {void}
 */
PIXI.particles.ParticleRenderer.prototype.uploadRotation = function(children, startIndex, amount, array, stride, offset) {};

/**
 * @param {!Array<!PIXI.DisplayObject>} children
 * @param {number} startIndex
 * @param {number} amount
 * @param {!Array<number>} array
 * @param {number} stride
 * @param {number} offset
 * @return {void}
 */
PIXI.particles.ParticleRenderer.prototype.uploadUvs = function(children, startIndex, amount, array, stride, offset) {};

/**
 * @param {!Array<!PIXI.DisplayObject>} children
 * @param {number} startIndex
 * @param {number} amount
 * @param {!Array<number>} array
 * @param {number} stride
 * @param {number} offset
 * @return {void}
 */
PIXI.particles.ParticleRenderer.prototype.uploadAlpha = function(children, startIndex, amount, array, stride, offset) {};

/**
 * @return {void}
 */
PIXI.particles.ParticleRenderer.prototype.destroy = function() {};
/** @const */
PIXI.prepare = {};

/** @typedef {function(?, !Array<?>): boolean} */
PIXI.prepare.AddHook;

/** @typedef {function(UploadHookSource, ?): boolean} */
PIXI.prepare.UploadHook;

/**
 * @constructor
 * @struct
 * @param {!PIXI.SystemRenderer} renderer
 */
PIXI.prepare.BasePrepare = function(renderer) {};
 /** @type {(!PIXI.prepare.CountLimiter|!PIXI.prepare.TimeLimiter)} */
PIXI.prepare.BasePrepare.prototype.limiter;
 /** @type {!PIXI.SystemRenderer} */
PIXI.prepare.BasePrepare.prototype.renderer;
 /** @type {UploadHookSource} */
PIXI.prepare.BasePrepare.prototype.uploadHookHelper;
 /** @type {!Array<?>} */
PIXI.prepare.BasePrepare.prototype.queue;
 /** @type {!Array<function(?, !Array<?>): boolean>} */
PIXI.prepare.BasePrepare.prototype.addHooks;
 /** @type {!Array<function(UploadHookSource, ?): boolean>} */
PIXI.prepare.BasePrepare.prototype.uploadHooks;
 /** @type {!Array<!Function>} */
PIXI.prepare.BasePrepare.prototype.completes;
 /** @type {boolean} */
PIXI.prepare.BasePrepare.prototype.ticking;
 /** @type {function(): void} */
PIXI.prepare.BasePrepare.prototype.delayedTick;

/**
 * @param {?} item
 * @param {function(): void=} done
 * @return {void}
 */
PIXI.prepare.BasePrepare.prototype.upload = function(item, done) {};

/**
 * @return {void}
 */
PIXI.prepare.BasePrepare.prototype.tick = function() {};

/**
 * @return {void}
 */
PIXI.prepare.BasePrepare.prototype.prepareItems = function() {};

/**
 * @param {function(?, !Array<?>): boolean} addHook
 * @return {BasePrepare}
 */
PIXI.prepare.BasePrepare.prototype.registerFindHook = function(addHook) {};

/**
 * @param {function(UploadHookSource, ?): boolean} uploadHook
 * @return {BasePrepare}
 */
PIXI.prepare.BasePrepare.prototype.registerUploadHook = function(uploadHook) {};

/**
 * @param {!PIXI.DisplayObject} item
 * @param {!Array<?>} queue
 * @return {boolean}
 */
PIXI.prepare.BasePrepare.prototype.findMultipleBaseTextures = function(item, queue) {};

/**
 * @param {!PIXI.DisplayObject} item
 * @param {!Array<?>} queue
 * @return {boolean}
 */
PIXI.prepare.BasePrepare.prototype.findBaseTexture = function(item, queue) {};

/**
 * @param {!PIXI.DisplayObject} item
 * @param {!Array<?>} queue
 * @return {boolean}
 */
PIXI.prepare.BasePrepare.prototype.findTexture = function(item, queue) {};

/**
 * @param {?} item
 * @return {BasePrepare}
 */
PIXI.prepare.BasePrepare.prototype.add = function(item) {};

/**
 * @return {void}
 */
PIXI.prepare.BasePrepare.prototype.destroy = function() {};

/**
 * @constructor
 * @struct
 * @param {!PIXI.CanvasRenderer} renderer
 */
PIXI.prepare.CanvasPrepare = function(renderer) {};
 /** @type {!HTMLCanvasElement} */
PIXI.prepare.CanvasPrepare.prototype.canvas;
 /** @type {!CanvasRenderingContext2D} */
PIXI.prepare.CanvasPrepare.prototype.ctx;

/**
 * @constructor
 * @struct
 * @param {!PIXI.WebGLRenderer} renderer
 */
PIXI.prepare.WebGLPrepare = function(renderer) {};

/**
 * @constructor
 * @struct
 * @param {number} maxItemsPerFrame
 */
PIXI.prepare.CountLimiter = function(maxItemsPerFrame) {};
 /** @type {number} */
PIXI.prepare.CountLimiter.prototype.maxItemsPerFrame;
 /** @type {number} */
PIXI.prepare.CountLimiter.prototype.itemsLeft;

/**
 * @return {void}
 */
PIXI.prepare.CountLimiter.prototype.beginFrame = function() {};

/**
 * @return {boolean}
 */
PIXI.prepare.CountLimiter.prototype.allowedToUpload = function() {};

/**
 * @constructor
 * @struct
 * @param {number} maxMilliseconds
 */
PIXI.prepare.TimeLimiter = function(maxMilliseconds) {};
 /** @type {number} */
PIXI.prepare.TimeLimiter.prototype.maxMilliseconds;
 /** @type {number} */
PIXI.prepare.TimeLimiter.prototype.frameStart;

/**
 * @return {void}
 */
PIXI.prepare.TimeLimiter.prototype.beginFrame = function() {};

/**
 * @return {boolean}
 */
PIXI.prepare.TimeLimiter.prototype.allowedToUpload = function() {};
/** @const */
PIXI.glCore = {};
/**
 * @record
 * @struct
 */
PIXI.glCore.ContextOptions = function() {};
 /** @type {boolean} */
PIXI.glCore.ContextOptions.prototype.alpha;
 /** @type {boolean} */
PIXI.glCore.ContextOptions.prototype.depth;
 /** @type {boolean} */
PIXI.glCore.ContextOptions.prototype.stencil;
 /** @type {boolean} */
PIXI.glCore.ContextOptions.prototype.antialias;
 /** @type {boolean} */
PIXI.glCore.ContextOptions.prototype.premultipliedAlpha;
 /** @type {boolean} */
PIXI.glCore.ContextOptions.prototype.preserveDrawingBuffer;
 /** @type {boolean} */
PIXI.glCore.ContextOptions.prototype.failIfMajorPerformanceCaveat;

/**
 * @param {!HTMLCanvasElement} view
 * @param {!PIXI.glCore.ContextOptions=} options
 * @return {!WebGLRenderingContext}
 */
PIXI.glCore.createContext = function(view, options) {};

/**
 * @param {!WebGLRenderingContext} gl
 * @param {!Array<!PIXI.glCore.Attrib>} attribs
 * @param {!PIXI.WebGLState=} state
 * @return {!WebGLRenderingContext}
 */
PIXI.glCore.setVertexAttribArrays = function(gl, attribs, state) {};

/**
 * @constructor
 * @struct
 * @param {!WebGLRenderingContext} gl
 * @param {number} type
 * @param {?} data
 * @param {number} drawType
 */
PIXI.glCore.GLBuffer = function(gl, type, data, drawType) {};
 /** @type {number} */
PIXI.glCore.GLBuffer.prototype._updateID;
 /** @type {!WebGLRenderingContext} */
PIXI.glCore.GLBuffer.prototype.gl;
 /** @type {!WebGLBuffer} */
PIXI.glCore.GLBuffer.prototype.buffer;
 /** @type {number} */
PIXI.glCore.GLBuffer.prototype.type;
 /** @type {number} */
PIXI.glCore.GLBuffer.prototype.drawType;
 /** @type {?} */
PIXI.glCore.GLBuffer.prototype.data;

/**
 * @param {?=} data
 * @param {number=} offset
 * @param {boolean=} dontBind
 * @return {void}
 */
PIXI.glCore.GLBuffer.prototype.upload = function(data, offset, dontBind) {};

/**
 * @return {void}
 */
PIXI.glCore.GLBuffer.prototype.bind = function() {};

/**
 * @param {!WebGLRenderingContext} gl
 * @param {?} data
 * @param {number} drawType
 * @return {!PIXI.glCore.GLBuffer}
 */
PIXI.glCore.GLBuffer.createVertexBuffer = function(gl, data, drawType) {};

/**
 * @param {!WebGLRenderingContext} gl
 * @param {?} data
 * @param {number} drawType
 * @return {!PIXI.glCore.GLBuffer}
 */
PIXI.glCore.GLBuffer.createIndexBuffer = function(gl, data, drawType) {};

/**
 * @param {!WebGLRenderingContext} gl
 * @param {number} type
 * @param {?} data
 * @param {number} drawType
 * @return {!PIXI.glCore.GLBuffer}
 */
PIXI.glCore.GLBuffer.create = function(gl, type, data, drawType) {};

/**
 * @return {void}
 */
PIXI.glCore.GLBuffer.prototype.destroy = function() {};

/**
 * @constructor
 * @struct
 * @param {!WebGLRenderingContext} gl
 * @param {number} width
 * @param {number} height
 */
PIXI.glCore.GLFramebuffer = function(gl, width, height) {};
 /** @type {!WebGLRenderingContext} */
PIXI.glCore.GLFramebuffer.prototype.gl;
 /** @type {!WebGLFramebuffer} */
PIXI.glCore.GLFramebuffer.prototype.frameBuffer;
 /** @type {!WebGLRenderbuffer} */
PIXI.glCore.GLFramebuffer.prototype.stencil;
 /** @type {!PIXI.glCore.GLTexture} */
PIXI.glCore.GLFramebuffer.prototype.texture;
 /** @type {number} */
PIXI.glCore.GLFramebuffer.prototype.width;
 /** @type {number} */
PIXI.glCore.GLFramebuffer.prototype.height;

/**
 * @param {!PIXI.glCore.GLTexture} texture
 * @return {void}
 */
PIXI.glCore.GLFramebuffer.prototype.enableTexture = function(texture) {};

/**
 * @return {void}
 */
PIXI.glCore.GLFramebuffer.prototype.enableStencil = function() {};

/**
 * @param {number} r
 * @param {number} g
 * @param {number} b
 * @param {number} a
 * @return {void}
 */
PIXI.glCore.GLFramebuffer.prototype.clear = function(r, g, b, a) {};

/**
 * @return {void}
 */
PIXI.glCore.GLFramebuffer.prototype.bind = function() {};

/**
 * @return {void}
 */
PIXI.glCore.GLFramebuffer.prototype.unbind = function() {};

/**
 * @param {number} width
 * @param {number} height
 * @return {void}
 */
PIXI.glCore.GLFramebuffer.prototype.resize = function(width, height) {};

/**
 * @return {void}
 */
PIXI.glCore.GLFramebuffer.prototype.destroy = function() {};

/**
 * @param {!WebGLRenderingContext} gl
 * @param {number} width
 * @param {number} height
 * @param {?} data
 * @return {!PIXI.glCore.GLFramebuffer}
 */
PIXI.glCore.GLFramebuffer.createRGBA = function(gl, width, height, data) {};

/**
 * @param {!WebGLRenderingContext} gl
 * @param {number} width
 * @param {number} height
 * @param {?} data
 * @return {!PIXI.glCore.GLFramebuffer}
 */
PIXI.glCore.GLFramebuffer.createFloat32 = function(gl, width, height, data) {};

/**
 * @constructor
 * @struct
 * @param {!WebGLRenderingContext} gl
 * @param {(string|!Array<string>)} vertexSrc
 * @param {(string|!Array<string>)} fragmentSrc
 * @param {string=} precision
 * @param {!Object<string,number>=} attributeLocations
 */
PIXI.glCore.GLShader = function(gl, vertexSrc, fragmentSrc, precision, attributeLocations) {};
 /** @type {!WebGLRenderingContext} */
PIXI.glCore.GLShader.prototype.gl;
 /** @type {!WebGLProgram} */
PIXI.glCore.GLShader.prototype.program;
 /** @type {?} */
PIXI.glCore.GLShader.prototype.uniformData;
 /** @type {?} */
PIXI.glCore.GLShader.prototype.uniforms;
 /** @type {?} */
PIXI.glCore.GLShader.prototype.attributes;

/**
 * @return {void}
 */
PIXI.glCore.GLShader.prototype.bind = function() {};

/**
 * @return {void}
 */
PIXI.glCore.GLShader.prototype.destroy = function() {};

/**
 * @constructor
 * @struct
 * @param {!WebGLRenderingContext} gl
 * @param {number=} width
 * @param {number=} height
 * @param {number=} format
 * @param {number=} type
 */
PIXI.glCore.GLTexture = function(gl, width, height, format, type) {};
 /** @type {!WebGLRenderingContext} */
PIXI.glCore.GLTexture.prototype.gl;
 /** @type {!WebGLTexture} */
PIXI.glCore.GLTexture.prototype.texture;
 /** @type {boolean} */
PIXI.glCore.GLTexture.prototype.mipmap;
 /** @type {boolean} */
PIXI.glCore.GLTexture.prototype.premultiplyAlpha;
 /** @type {number} */
PIXI.glCore.GLTexture.prototype.width;
 /** @type {number} */
PIXI.glCore.GLTexture.prototype.height;
 /** @type {number} */
PIXI.glCore.GLTexture.prototype.format;
 /** @type {number} */
PIXI.glCore.GLTexture.prototype.type;

/**
 * @param {(!HTMLCanvasElement|!HTMLImageElement|!HTMLVideoElement|!ImageData)} source
 * @return {void}
 */
PIXI.glCore.GLTexture.prototype.upload = function(source) {};

/**
 * @param {(!ArrayBuffer|!ArrayBufferView)} data
 * @param {number} width
 * @param {number} height
 * @return {void}
 */
PIXI.glCore.GLTexture.prototype.uploadData = function(data, width, height) {};

/**
 * @param {number=} location
 * @return {void}
 */
PIXI.glCore.GLTexture.prototype.bind = function(location) {};

/**
 * @return {void}
 */
PIXI.glCore.GLTexture.prototype.unbind = function() {};

/**
 * @param {boolean} linear
 * @return {void}
 */
PIXI.glCore.GLTexture.prototype.minFilter = function(linear) {};

/**
 * @param {boolean} linear
 * @return {void}
 */
PIXI.glCore.GLTexture.prototype.magFilter = function(linear) {};

/**
 * @return {void}
 */
PIXI.glCore.GLTexture.prototype.enableMipmap = function() {};

/**
 * @return {void}
 */
PIXI.glCore.GLTexture.prototype.enableLinearScaling = function() {};

/**
 * @return {void}
 */
PIXI.glCore.GLTexture.prototype.enableNearestScaling = function() {};

/**
 * @return {void}
 */
PIXI.glCore.GLTexture.prototype.enableWrapClamp = function() {};

/**
 * @return {void}
 */
PIXI.glCore.GLTexture.prototype.enableWrapRepeat = function() {};

/**
 * @return {void}
 */
PIXI.glCore.GLTexture.prototype.enableWrapMirrorRepeat = function() {};

/**
 * @return {void}
 */
PIXI.glCore.GLTexture.prototype.destroy = function() {};

/**
 * @param {!WebGLRenderingContext} gl
 * @param {(!HTMLCanvasElement|!HTMLImageElement|!HTMLVideoElement|!ImageData)} source
 * @param {boolean=} premultipleAlpha
 * @return {!PIXI.glCore.GLTexture}
 */
PIXI.glCore.GLTexture.fromSource = function(gl, source, premultipleAlpha) {};

/**
 * @param {!WebGLRenderingContext} gl
 * @param {!Array<number>} data
 * @param {number} width
 * @param {number} height
 * @return {!PIXI.glCore.GLTexture}
 */
PIXI.glCore.GLTexture.fromData = function(gl, data, width, height) {};
/**
 * @record
 * @struct
 */
PIXI.glCore.Attrib = function() {};
 /** @type {{location: number, size: number}} */
PIXI.glCore.Attrib.prototype.attribute;
 /** @type {boolean} */
PIXI.glCore.Attrib.prototype.normalized;
 /** @type {number} */
PIXI.glCore.Attrib.prototype.stride;
 /** @type {number} */
PIXI.glCore.Attrib.prototype.start;
 /** @type {!ArrayBuffer} */
PIXI.glCore.Attrib.prototype.buffer;
/**
 * @record
 * @struct
 */
PIXI.glCore.WebGLRenderingContextAttribute = function() {};
 /** @type {!WebGLBuffer} */
PIXI.glCore.WebGLRenderingContextAttribute.prototype.buffer;
 /** @type {?} */
PIXI.glCore.WebGLRenderingContextAttribute.prototype.attribute;
 /** @type {number} */
PIXI.glCore.WebGLRenderingContextAttribute.prototype.type;
 /** @type {boolean} */
PIXI.glCore.WebGLRenderingContextAttribute.prototype.normalized;
 /** @type {number} */
PIXI.glCore.WebGLRenderingContextAttribute.prototype.stride;
 /** @type {number} */
PIXI.glCore.WebGLRenderingContextAttribute.prototype.start;
/**
 * @record
 * @struct
 */
PIXI.glCore.AttribState = function() {};
 /** @type {!Array<!PIXI.glCore.Attrib>} */
PIXI.glCore.AttribState.prototype.tempAttribState;
 /** @type {!Array<!PIXI.glCore.Attrib>} */
PIXI.glCore.AttribState.prototype.attribState;

/**
 * @constructor
 * @struct
 * @param {!WebGLRenderingContext} gl
 * @param {!PIXI.WebGLState=} state
 */
PIXI.glCore.VertexArrayObject = function(gl, state) {};
 /** @type {boolean} */
PIXI.glCore.VertexArrayObject.FORCE_NATIVE;
 /** @type {?} */
PIXI.glCore.VertexArrayObject.prototype.nativeVaoExtension;
 /** @type {!PIXI.glCore.AttribState} */
PIXI.glCore.VertexArrayObject.prototype.nativeState;
 /** @type {!PIXI.glCore.VertexArrayObject} */
PIXI.glCore.VertexArrayObject.prototype.nativeVao;
 /** @type {!WebGLRenderingContext} */
PIXI.glCore.VertexArrayObject.prototype.gl;
 /** @type {!Array<!PIXI.glCore.Attrib>} */
PIXI.glCore.VertexArrayObject.prototype.attributes;
 /** @type {!PIXI.glCore.GLBuffer} */
PIXI.glCore.VertexArrayObject.prototype.indexBuffer;
 /** @type {boolean} */
PIXI.glCore.VertexArrayObject.prototype.dirty;

/**
 * @return {!PIXI.glCore.VertexArrayObject}
 */
PIXI.glCore.VertexArrayObject.prototype.bind = function() {};

/**
 * @return {!PIXI.glCore.VertexArrayObject}
 */
PIXI.glCore.VertexArrayObject.prototype.unbind = function() {};

/**
 * @return {!PIXI.glCore.VertexArrayObject}
 */
PIXI.glCore.VertexArrayObject.prototype.activate = function() {};

/**
 * @param {!PIXI.glCore.GLBuffer} buffer
 * @param {!PIXI.glCore.Attrib} attribute
 * @param {number} type
 * @param {boolean} normalized
 * @param {number} stride
 * @param {number} start
 * @return {!PIXI.glCore.VertexArrayObject}
 */
PIXI.glCore.VertexArrayObject.prototype.addAttribute = function(buffer, attribute, type, normalized, stride, start) {};

/**
 * @param {!PIXI.glCore.GLBuffer} buffer
 * @param {?=} options
 * @return {!PIXI.glCore.VertexArrayObject}
 */
PIXI.glCore.VertexArrayObject.prototype.addIndex = function(buffer, options) {};

/**
 * @return {!PIXI.glCore.VertexArrayObject}
 */
PIXI.glCore.VertexArrayObject.prototype.clear = function() {};

/**
 * @param {number} type
 * @param {number} size
 * @param {number} start
 * @return {!PIXI.glCore.VertexArrayObject}
 */
PIXI.glCore.VertexArrayObject.prototype.draw = function(type, size, start) {};

/**
 * @return {void}
 */
PIXI.glCore.VertexArrayObject.prototype.destroy = function() {};
/**
 * @record
 * @struct
 */
PIXI.DecomposedDataUri = function() {};
 /** @type {string} */
PIXI.DecomposedDataUri.prototype.mediaType;
 /** @type {string} */
PIXI.DecomposedDataUri.prototype.subType;
 /** @type {string} */
PIXI.DecomposedDataUri.prototype.encoding;
 /** @type {?} */
PIXI.DecomposedDataUri.prototype.data;
/** @const */
PIXI.utils = {};

/**
 * @return {number}
 */
PIXI.utils.uid = function() {};

/**
 * @param {number} hex
 * @param {!Array<number>=} out
 * @return {!Array<number>}
 */
PIXI.utils.hex2rgb = function(hex, out) {};

/**
 * @param {number} hex
 * @return {string}
 */
PIXI.utils.hex2string = function(hex) {};

/**
 * @param {!Array<number>} rgb
 * @return {number}
 */
PIXI.utils.rgb2hex = function(rgb) {};

/**
 * @return {boolean}
 */
PIXI.utils.canUseNewCanvasBlendModes = function() {};

/**
 * @param {string} url
 * @param {number=} defaultValue
 * @return {number}
 */
PIXI.utils.getResolutionOfUrl = function(url, defaultValue) {};

/**
 * @param {string} svgString
 * @return {?}
 */
PIXI.utils.getSvgSize = function(svgString) {};

/**
 * @param {string} dataUri
 * @return {(void|!PIXI.DecomposedDataUri)}
 */
PIXI.utils.decomposeDataUri = function(dataUri) {};

/**
 * @param {string} url
 * @return {(string|void)}
 */
PIXI.utils.getUrlFileExtension = function(url) {};

/**
 * @param {string} type
 * @return {void}
 */
PIXI.utils.sayHello = function(type) {};

/**
 * @return {void}
 */
PIXI.utils.skipHello = function() {};

/**
 * @return {boolean}
 */
PIXI.utils.isWebGLSupported = function() {};

/**
 * @param {number} n
 * @return {number}
 */
PIXI.utils.sign = function(n) {};

/**
 * @template T
 * @param {!Array<T>} arr
 * @param {number} startIdx
 * @param {number} removeCount
 * @return {void}
 */
PIXI.utils.removeItems = function(arr, startIdx, removeCount) {};

/**
 * @param {number} blendMode
 * @param {boolean} premultiplied
 * @return {number}
 */
PIXI.utils.correctBlendMode = function(blendMode, premultiplied) {};

/**
 * @param {number} tint
 * @param {number} alpha
 * @return {number}
 */
PIXI.utils.premultiplyTint = function(tint, alpha) {};

/**
 * @param {(!Array<number>|!Float32Array)} rgb
 * @param {number} alpha
 * @param {!Float32Array=} out
 * @param {boolean=} premultiply
 * @return {!Float32Array}
 */
PIXI.utils.premultiplyRgba = function(rgb, alpha, out, premultiply) {};

/**
 * @param {number} tint
 * @param {number} alpha
 * @param {!Float32Array=} out
 * @param {boolean=} premultiply
 * @return {!Float32Array}
 */
PIXI.utils.premultiplyTintToRgba = function(tint, alpha, out, premultiply) {};
 /** @type {!Array<!Array<number>>} */
PIXI.utils.premultiplyBlendMode;
 /** @type {?} */
PIXI.utils.TextureCache;
 /** @type {?} */
PIXI.utils.BaseTextureCache;
/** @const */
PIXI.utils.isMobile = {};
 /** @type {{phone: boolean, ipod: boolean, tablet: boolean, device: boolean}} */
PIXI.utils.isMobile.apple;
 /** @type {{phone: boolean, tablet: boolean, device: boolean}} */
PIXI.utils.isMobile.android;
 /** @type {{phone: boolean, tablet: boolean, device: boolean}} */
PIXI.utils.isMobile.amazon;
 /** @type {{phone: boolean, tablet: boolean, device: boolean}} */
PIXI.utils.isMobile.windows;
 /** @type {boolean} */
PIXI.utils.isMobile.seven_inch;
 /** @type {{blackberry10: boolean, blackberry: boolean, opera: boolean, firefox: boolean, chrome: boolean, device: boolean}} */
PIXI.utils.isMobile.other;
 /** @type {boolean} */
PIXI.utils.isMobile.any;
 /** @type {boolean} */
PIXI.utils.isMobile.phone;
 /** @type {boolean} */
PIXI.utils.isMobile.tablet;

/**
 * @constructor
 * @struct
 * Minimal EventEmitter interface that is molded against the Node.js
 * EventEmitter interface.
 * 
 * \@api public
 */
PIXI.utils.EventEmitter = function() {};
 /** @type {(string|boolean)} */
PIXI.utils.EventEmitter.prefixed;
 /** @type {function(new: (!PIXI.utils.EventEmitter)): ?} */
PIXI.utils.EventEmitter.EventEmitter;

/**
 * Return an array listing the events for which the emitter has registered listeners.
 * 
 * @return {!Array<(string|symbol)>}
 */
PIXI.utils.EventEmitter.prototype.eventNames = function() {};

/**
 * Check if there listeners for a given event.
 * If `exists` argument is not `true` lists listeners.
 * 
 * @param {(string|symbol)} event
 * @param {boolean=} exists
 * @return {!Array<!Function>|boolean}
 */
PIXI.utils.EventEmitter.prototype.listeners = function(event, exists) {};

/**
 * Calls each of the listeners registered for a given event.
 * 
 * @param {(string|symbol)} event
 * @param {...?} args
 * @return {boolean}
 */
PIXI.utils.EventEmitter.prototype.emit = function(event, args) {};

/**
 * @param {(string|symbol)} event
 * @param {!Function} fn
 * @param {?=} context
 * @return {EventEmitter}
 */
PIXI.utils.EventEmitter.prototype.on = function(event, fn, context) {};

/**
 * @param {(string|symbol)} event
 * @param {!Function} fn
 * @param {?=} context
 * @return {EventEmitter}
 */
PIXI.utils.EventEmitter.prototype.once = function(event, fn, context) {};

/**
 * @param {(string|symbol)} event
 * @param {!Function=} fn
 * @param {?=} context
 * @param {boolean=} once
 * @return {EventEmitter}
 */
PIXI.utils.EventEmitter.prototype.removeListener = function(event, fn, context, once) {};

/**
 * Remove all listeners, or those of the specified event.
 * 
 * @param {(string|symbol)=} event
 * @return {EventEmitter}
 */
PIXI.utils.EventEmitter.prototype.removeAllListeners = function(event) {};

/**
 * @param {(string|symbol)} event
 * @param {!Function=} fn
 * @param {?=} context
 * @param {boolean=} once
 * @return {EventEmitter}
 */
PIXI.utils.EventEmitter.prototype.off = function(event, fn, context, once) {};

/**
 * @param {(string|symbol)} event
 * @param {!Function} fn
 * @param {?=} context
 * @return {EventEmitter}
 */
PIXI.utils.EventEmitter.prototype.addListener = function(event, fn, context) {};

/**
 * This function doesn't apply anymore.
 * @deprecated
 * @return {EventEmitter}
 */
PIXI.utils.EventEmitter.prototype.setMaxListeners = function() {};
/** @const */
PIXI.core = {};

/** @typedef {!PIXI.particles.ParticleContainer} */
PIXI.core.SpriteBatch;

/** @typedef {!PIXI.loaders.Loader} */
PIXI.core.AssetLoader;

/** @typedef {!PIXI.Container} */
PIXI.core.Stage;

/** @typedef {!PIXI.Container} */
PIXI.core.DisplayObjectContainer;

/** @typedef {!PIXI.mesh.Mesh} */
PIXI.core.Strip;

/** @typedef {!PIXI.mesh.Rope} */
PIXI.core.Rope;

/** @typedef {!PIXI.particles.ParticleContainer} */
PIXI.core.ParticleContainer;

/** @typedef {!PIXI.extras.AnimatedSprite} */
PIXI.core.MovieClip;

/** @typedef {!PIXI.extras.TilingSprite} */
PIXI.core.TilingSprite;

/** @typedef {?} */
PIXI.core.BaseTextureCache;

/** @typedef {!PIXI.extras.BitmapText} */
PIXI.core.BitmapText;

/** @typedef {?} */
PIXI.core.math;

/** @typedef {!PIXI.Filter<U>} */
PIXI.core.AbstractFilter;

/** @typedef {!PIXI.TransformBase} */
PIXI.core.TransformManual;

/** @typedef {number} */
PIXI.core.TARGET_FPMS;

/** @typedef {number} */
PIXI.core.FILTER_RESOLUTION;

/** @typedef {number} */
PIXI.core.RESOLUTION;

/** @typedef {?} */
PIXI.core.MIPMAP_TEXTURES;

/** @typedef {number} */
PIXI.core.SPRITE_BATCH_SIZE;

/** @typedef {number} */
PIXI.core.SPRITE_MAX_TEXTURES;

/** @typedef {(string|!RegExp)} */
PIXI.core.RETINA_PREFIX;

/** @typedef {number} */
PIXI.core.DEFAULT_RENDER_OPTIONS;

/** @typedef {string} */
PIXI.core.PRECISION;

/** @typedef {!PIXI.extras.AnimatedSprite} */
PIXI.extras.MovieClip;

/** @typedef {number} */
PIXI.settings.PRECISION;
/** @const */
var pixi = {};
 /** @type {?} */
pixi.gl;
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "pixi.js"
/** @const */
tsickle_declare_module.pixi_js = {};

/* TODO: ExportAssignment in tsickle_declare_module.pixi_js */
