/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/jquery.colorbox/index.d.ts:
/**
 * @record
 * @struct
 */
function ColorboxResizeSettings() {}
 /** @type {(string|number)} */
ColorboxResizeSettings.prototype.height;
 /** @type {(string|number)} */
ColorboxResizeSettings.prototype.innerHeight;
 /** @type {(string|number)} */
ColorboxResizeSettings.prototype.width;
 /** @type {(string|number)} */
ColorboxResizeSettings.prototype.innerWidth;
/**
 * @record
 * @struct
 */
function ColorboxSettings() {}
 /** @type {string} */
ColorboxSettings.prototype.transition;
 /** @type {number} */
ColorboxSettings.prototype.speed;
 /** @type {?} */
ColorboxSettings.prototype.href;
 /** @type {?} */
ColorboxSettings.prototype.title;
 /** @type {?} */
ColorboxSettings.prototype.rel;
 /** @type {boolean} */
ColorboxSettings.prototype.scalePhotos;
 /** @type {boolean} */
ColorboxSettings.prototype.scrolling;
 /** @type {number} */
ColorboxSettings.prototype.opacity;
 /** @type {boolean} */
ColorboxSettings.prototype.open;
 /** @type {boolean} */
ColorboxSettings.prototype.returnFocus;
 /** @type {boolean} */
ColorboxSettings.prototype.fastIframe;
 /** @type {boolean} */
ColorboxSettings.prototype.preloading;
 /** @type {boolean} */
ColorboxSettings.prototype.overlayClose;
 /** @type {boolean} */
ColorboxSettings.prototype.escKey;
 /** @type {boolean} */
ColorboxSettings.prototype.arrowKey;
 /** @type {boolean} */
ColorboxSettings.prototype.loop;
 /** @type {?} */
ColorboxSettings.prototype.data;
 /** @type {?} */
ColorboxSettings.prototype.className;
 /** @type {number} */
ColorboxSettings.prototype.fadeOut;
 /** @type {string} */
ColorboxSettings.prototype.current;
 /** @type {string} */
ColorboxSettings.prototype.previous;
 /** @type {string} */
ColorboxSettings.prototype.next;
 /** @type {string} */
ColorboxSettings.prototype.close;
 /** @type {boolean} */
ColorboxSettings.prototype.closeButton;
 /** @type {string} */
ColorboxSettings.prototype.xhrError;
 /** @type {string} */
ColorboxSettings.prototype.imgError;
 /** @type {boolean} */
ColorboxSettings.prototype.iframe;
 /** @type {boolean} */
ColorboxSettings.prototype.inline;
 /** @type {?} */
ColorboxSettings.prototype.html;
 /** @type {boolean} */
ColorboxSettings.prototype.photo;
 /** @type {?} */
ColorboxSettings.prototype.ajax;
 /** @type {(string|number)} */
ColorboxSettings.prototype.width;
 /** @type {(string|number)} */
ColorboxSettings.prototype.height;
 /** @type {(string|number)} */
ColorboxSettings.prototype.innerWidth;
 /** @type {(string|number)} */
ColorboxSettings.prototype.innerHeight;
 /** @type {(string|number)} */
ColorboxSettings.prototype.initialWidth;
 /** @type {(string|number)} */
ColorboxSettings.prototype.initialHeight;
 /** @type {(string|number)} */
ColorboxSettings.prototype.maxWidth;
 /** @type {(string|number)} */
ColorboxSettings.prototype.maxHeight;
 /** @type {boolean} */
ColorboxSettings.prototype.slideshow;
 /** @type {number} */
ColorboxSettings.prototype.slideshowSpeed;
 /** @type {boolean} */
ColorboxSettings.prototype.slideshowAuto;
 /** @type {string} */
ColorboxSettings.prototype.slideshowStart;
 /** @type {string} */
ColorboxSettings.prototype.slideshowStop;
 /** @type {boolean} */
ColorboxSettings.prototype.fixed;
 /** @type {?} */
ColorboxSettings.prototype.top;
 /** @type {?} */
ColorboxSettings.prototype.bottom;
 /** @type {?} */
ColorboxSettings.prototype.left;
 /** @type {?} */
ColorboxSettings.prototype.right;
 /** @type {boolean} */
ColorboxSettings.prototype.reposition;
 /** @type {boolean} */
ColorboxSettings.prototype.retinaImage;
 /** @type {boolean} */
ColorboxSettings.prototype.retinaUrl;
 /** @type {string} */
ColorboxSettings.prototype.retinaSuffix;
 /** @type {?} */
ColorboxSettings.prototype.onOpen;
 /** @type {?} */
ColorboxSettings.prototype.onLoad;
 /** @type {?} */
ColorboxSettings.prototype.onComplete;
 /** @type {?} */
ColorboxSettings.prototype.onCleanup;
 /** @type {?} */
ColorboxSettings.prototype.onClosed;
/**
 * @record
 * @struct
 */
function ColorboxStatic() {}

/* TODO: CallSignature:  */
 /** @type {!ColorboxSettings} */
ColorboxStatic.prototype.settings;

/**
 * This method moves to the next item in a group and are the same as pressing the 'next' or 'previous' buttons.
 * @return {void}
 */
ColorboxStatic.prototype.next = function() {};

/**
 * This method moves to the previous item in a group and are the same as pressing the 'next' or 'previous' buttons.
 * @return {void}
 */
ColorboxStatic.prototype.prev = function() {};

/**
 * This method initiates the close sequence, which does not immediately complete. The lightbox will be completely closed only when the cbox_closed event / onClosed callback is fired.
 * @return {void}
 */
ColorboxStatic.prototype.close = function() {};

/**
 * This method is used to fetch the current HTML element that Colorbox is associated with.
 * @return {?<!HTMLElement>}
 */
ColorboxStatic.prototype.element = function() {};

/**
 * This allows Colorbox to be resized based on it's own auto-calculations, or to a specific size. This must be called manually after Colorbox's content has loaded.
 * This allows Colorbox to be resized based on it's own auto-calculations, or to a specific size. This must be called manually after Colorbox's content has loaded.
 * @param {!ColorboxResizeSettings=} settings
 * @return {void}
 */
ColorboxStatic.prototype.resize = function(settings) {};

/**
 * Removes all traces of Colorbox from the document.
 * @return {void}
 */
ColorboxStatic.prototype.remove = function() {};
/**
 * @record
 * @struct
 */
function Colorbox() {}

/* TODO: CallSignature:  */

/* TODO: CallSignature:  */
 /** @type {!ColorboxStatic} */
JQueryStatic.prototype.colorbox;
 /** @type {!Colorbox} */
JQuery.prototype.colorbox;
