/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/browser-resolve/index.d.ts:

/* TODO: ImportDeclaration in  */

/** @typedef {?} */
var resolveCallback;

/**
 * Resolve a module path and call cb(err, path [, pkg])
 * 
 * Resolve a module path and call cb(err, path [, pkg])
 * 
 * @param {string} id Identifier to resolve
 * @param {?|!browserResolve.AsyncOpts} cb_or_opts
 * @param {?=} cb
 * @return {void}
 */
function browserResolve(id, cb_or_opts, cb) {}

/**
 * Returns a module path
 * 
 * @param {string} id Identifier to resolve
 * @param {!browserResolve.SyncOpts=} opts
 * @return {string}
 */
function browserResolveSync(id, opts) {}
/**
 * @record
 * @struct
 */
browserResolve.Opts = function() {};
 /** @type {string} */
browserResolve.Opts.prototype.browser;
 /** @type {string} */
browserResolve.Opts.prototype.filename;
 /** @type {?} */
browserResolve.Opts.prototype.modules;
/**
 * @extends {resolve.AsyncOpts}
 * @extends {browserResolve.Opts}
 * @record
 * @struct
 */
browserResolve.AsyncOpts = function() {};
/**
 * @extends {resolve.SyncOpts}
 * @extends {browserResolve.Opts}
 * @record
 * @struct
 */
browserResolve.SyncOpts = function() {};
 /** @type {function(string, !browserResolve.SyncOpts): string} */
browserResolve.sync;

/* TODO: ExportAssignment in  */
