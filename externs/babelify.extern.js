/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/babelify/index.d.ts:

/* TODO: ImportEqualsDeclaration in  */

/* TODO: ImportEqualsDeclaration in  */

/**
 * @param {string} filename
 * @param {!Babelify.BabelifyOptions=} opts
 * @return {!Babelify.BabelifyObject}
 */
function Babelify(filename, opts) {}
/**
 * @record
 * @struct
 */
Babelify.BabelifyConstructor = function() {};

/* TODO: CallSignature: Babelify */
/**
 * @extends {TransformOptions}
 * @record
 * @struct
 */
Babelify.BabelifyOptions = function() {};
 /** @type {(string|!Array<string>)} */
Babelify.BabelifyOptions.prototype.extensions;
 /** @type {boolean} */
Babelify.BabelifyOptions.prototype.sourceMapsAbsolute;
/**
 * @extends {internal.Transform}
 * @constructor
 * @struct
 */
Babelify.BabelifyObject = function() {};

/**
 * @param {(string|?)} buf
 * @param {string} encoding
 * @param {function(): void} callback
 * @return {void}
 */
Babelify.BabelifyObject.prototype._transform = function(buf, encoding, callback) {};

/**
 * @param {function(): void} callback
 * @return {void}
 */
Babelify.BabelifyObject.prototype._flush = function(callback) {};

/**
 * @param {!Babelify.BabelifyOptions} opts
 * @return {function(string): !Babelify.BabelifyObject}
 */
Babelify.configure = function(opts) {};

/* TODO: ExportAssignment in  */
