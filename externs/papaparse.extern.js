/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/papaparse/index.d.ts:
/** @const */
var PapaParse = {};
/**
 * @record
 * @struct
 */
PapaParse.Static = function() {};
 /** @type {!Array<string>} */
PapaParse.Static.prototype.BAD_DELIMETERS;
 /** @type {string} */
PapaParse.Static.prototype.RECORD_SEP;
 /** @type {string} */
PapaParse.Static.prototype.UNIT_SEP;
 /** @type {boolean} */
PapaParse.Static.prototype.WORKERS_SUPPORTED;
 /** @type {string} */
PapaParse.Static.prototype.SCRIPT_PATH;
 /** @type {string} */
PapaParse.Static.prototype.LocalChunkSize;
 /** @type {string} */
PapaParse.Static.prototype.RemoteChunkSize;
 /** @type {string} */
PapaParse.Static.prototype.DefaultDelimiter;
 /** @type {!PapaParse.ParserConstructor} */
PapaParse.Static.prototype.Parser;

/**
 * Parse a csv string or a csv file
 * @param {string|!File} csvString_or_file
 * @param {!PapaParse.ParseConfig=} config
 * @return {!PapaParse.ParseResult}
 */
PapaParse.Static.prototype.parse = function(csvString_or_file, config) {};

/**
 * Unparses javascript data objects and returns a csv string
 * @param {!Array<!Object>|!Array<!Array<?>>|!PapaParse.UnparseObject} data
 * @param {!PapaParse.UnparseConfig=} config
 * @return {string}
 */
PapaParse.Static.prototype.unparse = function(data, config) {};
/**
 * @record
 * @struct
 */
PapaParse.ParseConfig = function() {};
 /** @type {string} */
PapaParse.ParseConfig.prototype.delimiter;
 /** @type {string} */
PapaParse.ParseConfig.prototype.newline;
 /** @type {string} */
PapaParse.ParseConfig.prototype.quoteChar;
 /** @type {boolean} */
PapaParse.ParseConfig.prototype.header;
 /** @type {boolean} */
PapaParse.ParseConfig.prototype.dynamicTyping;
 /** @type {number} */
PapaParse.ParseConfig.prototype.preview;
 /** @type {string} */
PapaParse.ParseConfig.prototype.encoding;
 /** @type {boolean} */
PapaParse.ParseConfig.prototype.worker;
 /** @type {boolean} */
PapaParse.ParseConfig.prototype.comments;
 /** @type {boolean} */
PapaParse.ParseConfig.prototype.download;
 /** @type {boolean} */
PapaParse.ParseConfig.prototype.skipEmptyLines;
 /** @type {boolean} */
PapaParse.ParseConfig.prototype.fastMode;
 /** @type {boolean} */
PapaParse.ParseConfig.prototype.withCredentials;

/**
 * @param {!PapaParse.ParseResult} results
 * @param {!PapaParse.Parser} parser
 * @return {void}
 */
PapaParse.ParseConfig.prototype.step = function(results, parser) {};

/**
 * @param {!PapaParse.ParseResult} results
 * @param {!File=} file
 * @return {void}
 */
PapaParse.ParseConfig.prototype.complete = function(results, file) {};

/**
 * @param {!PapaParse.ParseError} error
 * @param {!File=} file
 * @return {void}
 */
PapaParse.ParseConfig.prototype.error = function(error, file) {};

/**
 * @param {!PapaParse.ParseResult} results
 * @param {!PapaParse.Parser} parser
 * @return {void}
 */
PapaParse.ParseConfig.prototype.chunk = function(results, parser) {};

/**
 * @param {string} chunk
 * @return {(string|void)}
 */
PapaParse.ParseConfig.prototype.beforeFirstChunk = function(chunk) {};
/**
 * @record
 * @struct
 */
PapaParse.UnparseConfig = function() {};
 /** @type {boolean} */
PapaParse.UnparseConfig.prototype.quotes;
 /** @type {string} */
PapaParse.UnparseConfig.prototype.delimiter;
 /** @type {string} */
PapaParse.UnparseConfig.prototype.newline;
/**
 * @record
 * @struct
 */
PapaParse.UnparseObject = function() {};
 /** @type {!Array<?>} */
PapaParse.UnparseObject.prototype.fields;
 /** @type {(string|!Array<?>)} */
PapaParse.UnparseObject.prototype.data;
/**
 * @record
 * @struct
 */
PapaParse.ParseError = function() {};
 /** @type {string} */
PapaParse.ParseError.prototype.type;
 /** @type {string} */
PapaParse.ParseError.prototype.code;
 /** @type {string} */
PapaParse.ParseError.prototype.message;
 /** @type {number} */
PapaParse.ParseError.prototype.row;
/**
 * @record
 * @struct
 */
PapaParse.ParseMeta = function() {};
 /** @type {string} */
PapaParse.ParseMeta.prototype.delimiter;
 /** @type {string} */
PapaParse.ParseMeta.prototype.linebreak;
 /** @type {boolean} */
PapaParse.ParseMeta.prototype.aborted;
 /** @type {!Array<string>} */
PapaParse.ParseMeta.prototype.fields;
 /** @type {boolean} */
PapaParse.ParseMeta.prototype.truncated;
/**
 * @record
 * @struct
 */
PapaParse.ParseResult = function() {};
 /** @type {!Array<?>} */
PapaParse.ParseResult.prototype.data;
 /** @type {!Array<!PapaParse.ParseError>} */
PapaParse.ParseResult.prototype.errors;
 /** @type {!PapaParse.ParseMeta} */
PapaParse.ParseResult.prototype.meta;
/**
 * @record
 * @struct
 */
PapaParse.ParserConstructor = function() {};

/* TODO: ConstructSignature: PapaParse */
/**
 * @record
 * @struct
 */
PapaParse.Parser = function() {};

/**
 * @param {string} input
 * @param {number} baseIndex
 * @param {boolean} ignoreLastRow
 * @return {?}
 */
PapaParse.Parser.prototype.parse = function(input, baseIndex, ignoreLastRow) {};

/**
 * @return {void}
 */
PapaParse.Parser.prototype.abort = function() {};

/**
 * @return {number}
 */
PapaParse.Parser.prototype.getCharIndex = function() {};
 /** @type {!PapaParse.Static} */
var Papa;
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "papaparse"
/** @const */
tsickle_declare_module.papaparse = {};
 /** @type {!PapaParse.Static} */
tsickle_declare_module.papaparse.Papa;

/* TODO: ExportAssignment in tsickle_declare_module.papaparse */
