/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/google-map-react/index.d.ts:

/* TODO: ImportDeclaration in  */

/** @typedef {?} */
var BootstrapURLKeys;
/**
 * @record
 * @struct
 */
function Options() {}
 /** @type {!Array<?>} */
Options.prototype.styles;
 /** @type {boolean} */
Options.prototype.scrollwheel;
 /** @type {boolean} */
Options.prototype.panControl;
 /** @type {boolean} */
Options.prototype.mapTypeControl;
 /** @type {boolean} */
Options.prototype.minZoomOverride;
 /** @type {number} */
Options.prototype.minZoom;
 /** @type {number} */
Options.prototype.maxZoom;
 /** @type {string} */
Options.prototype.gestureHandling;
/**
 * @record
 * @struct
 */
function Maps() {}
 /** @type {?} */
Maps.prototype.Animation;
 /** @type {?} */
Maps.prototype.ControlPosition;
 /** @type {?} */
Maps.prototype.MapTypeControlStyle;
 /** @type {?} */
Maps.prototype.MapTypeId;
 /** @type {?} */
Maps.prototype.NavigationControlStyle;
 /** @type {?} */
Maps.prototype.ScaleControlStyle;
 /** @type {?} */
Maps.prototype.StrokePosition;
 /** @type {?} */
Maps.prototype.SymbolPath;
 /** @type {?} */
Maps.prototype.ZoomControlStyle;
 /** @type {?} */
Maps.prototype.DirectionsStatus;
 /** @type {?} */
Maps.prototype.DirectionsTravelMode;
 /** @type {?} */
Maps.prototype.DirectionsUnitSystem;
 /** @type {?} */
Maps.prototype.DistanceMatrixStatus;
 /** @type {?} */
Maps.prototype.DistanceMatrixElementStatus;
 /** @type {?} */
Maps.prototype.ElevationStatus;
 /** @type {?} */
Maps.prototype.GeocoderLocationType;
 /** @type {?} */
Maps.prototype.GeocoderStatus;
 /** @type {?} */
Maps.prototype.KmlLayerStats;
 /** @type {?} */
Maps.prototype.MaxZoomStatus;
 /** @type {?} */
Maps.prototype.StreetViewStatus;
 /** @type {?} */
Maps.prototype.TransitMode;
 /** @type {?} */
Maps.prototype.TransitRoutePreference;
 /** @type {?} */
Maps.prototype.TravelMode;
 /** @type {?} */
Maps.prototype.UnitSystem;
/**
 * @record
 * @struct
 */
function Bounds() {}
 /** @type {number} */
Bounds.prototype.nw;
 /** @type {number} */
Bounds.prototype.ne;
 /** @type {number} */
Bounds.prototype.sw;
 /** @type {number} */
Bounds.prototype.se;
/**
 * @record
 * @struct
 */
function Point() {}
 /** @type {number} */
Point.prototype.x;
 /** @type {number} */
Point.prototype.y;
/**
 * @record
 * @struct
 */
function Coords() {}
 /** @type {number} */
Coords.prototype.lat;
 /** @type {number} */
Coords.prototype.lng;
/**
 * @extends {Point}
 * @extends {Coords}
 * @record
 * @struct
 */
function ClickEventValue() {}
 /** @type {?} */
ClickEventValue.prototype.event;
/**
 * @record
 * @struct
 */
function ChangeEventValue() {}
 /** @type {?} */
ChangeEventValue.prototype.center;
 /** @type {number} */
ChangeEventValue.prototype.zoom;
 /** @type {?} */
ChangeEventValue.prototype.bounds;
 /** @type {?} */
ChangeEventValue.prototype.marginBounds;
/**
 * @record
 * @struct
 */
function Props() {}
 /** @type {?} */
Props.prototype.bootstrapURLKeys;
 /** @type {?} */
Props.prototype.defaultCenter;
 /** @type {?} */
Props.prototype.center;
 /** @type {number} */
Props.prototype.defaultZoom;
 /** @type {number} */
Props.prototype.zoom;
 /** @type {number} */
Props.prototype.hoverDistance;
 /** @type {?} */
Props.prototype.options;
 /** @type {!Array<?>} */
Props.prototype.margin;
 /** @type {boolean} */
Props.prototype.debounced;
 /** @type {!Array<string>} */
Props.prototype.layerTypes;
 /** @type {boolean} */
Props.prototype.resetBoundsOnResize;
 /** @type {boolean} */
Props.prototype.yesIWantToUseGoogleMapApiInternals;

/**
 * @param {?} value
 * @return {?}
 */
Props.prototype.onClick = function(value) {};

/**
 * @param {?} value
 * @return {?}
 */
Props.prototype.onChange = function(value) {};

/**
 * @param {?} hoverKey
 * @param {?} childProps
 * @return {void}
 */
Props.prototype.onChildClick = function(hoverKey, childProps) {};

/**
 * @param {?} hoverKey
 * @param {?} childProps
 * @return {void}
 */
Props.prototype.onChildMouseEnter = function(hoverKey, childProps) {};

/**
 * @param {?} hoverKey
 * @param {?} childProps
 * @return {void}
 */
Props.prototype.onChildMouseLeave = function(hoverKey, childProps) {};

/**
 * @param {?} args
 * @return {void}
 */
Props.prototype.onZoomAnimationStart = function(args) {};

/**
 * @param {?} args
 * @return {void}
 */
Props.prototype.onZoomAnimationEnd = function(args) {};

/**
 * @param {?} args
 * @return {void}
 */
Props.prototype.onMapTypeIdChange = function(args) {};

/**
 * @param {?} pt
 * @param {?} mousePos
 * @return {void}
 */
Props.prototype.distanceToMouse = function(pt, mousePos) {};

/**
 * @param {?} bootstrapURLKeys
 * @return {void}
 */
Props.prototype.googleMapLoader = function(bootstrapURLKeys) {};

/**
 * @param {?} maps
 * @return {void}
 */
Props.prototype.onGoogleApiLoaded = function(maps) {};
/**
 * @constructor
 * @struct
 */
function GoogleMapReact() {}
/**
 * @extends {Coords}
 * @record
 * @struct
 */
function ChildComponentProps() {}
 /** @type {boolean} */
ChildComponentProps.prototype.$hover;
