/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/egg-mock/index.d.ts:

/* TODO: ImportDeclaration in  */
/**
 * @extends {Application}
 * @record
 * @struct
 */
function MockApplication() {}

/**
 * @return {!Promise<void>}
 */
MockApplication.prototype.ready = function() {};

/**
 * @return {!Promise<void>}
 */
MockApplication.prototype.close = function() {};

/**
 * @return {?}
 */
MockApplication.prototype.callback = function() {};

/**
 * mock Context
 * @param {?=} data
 * @return {?}
 */
MockApplication.prototype.mockContext = function(data) {};

/**
 * mock cookie session
 * @param {?} data
 * @return {?}
 */
MockApplication.prototype.mockSession = function(data) {};

/**
 * @param {?} cookies
 * @return {?}
 */
MockApplication.prototype.mockCookies = function(cookies) {};

/**
 * @param {?} headers
 * @return {?}
 */
MockApplication.prototype.mockHeaders = function(headers) {};

/**
 * Mock service
 * @param {string} service
 * @param {string} methodName
 * @param {?} fn
 * @return {?}
 */
MockApplication.prototype.mockService = function(service, methodName, fn) {};

/**
 * mock service that return error
 * @param {string} service
 * @param {string} methodName
 * @param {!Error=} err
 * @return {?}
 */
MockApplication.prototype.mockServiceError = function(service, methodName, err) {};

/**
 * @param {string} mockUrl
 * @param {(string|!Array<string>)} mockMethod
 * @param {?} mockResult
 * @return {?}
 */
MockApplication.prototype.mockHttpclient = function(mockUrl, mockMethod, mockResult) {};
/**
 * @record
 * @struct
 */
function MockOption() {}
 /** @type {string} */
MockOption.prototype.baseDir;
 /** @type {?} */
MockOption.prototype.plugins;
 /** @type {string} */
MockOption.prototype.framework;
 /** @type {boolean} */
MockOption.prototype.cache;
 /** @type {boolean} */
MockOption.prototype.coverage;
 /** @type {boolean} */
MockOption.prototype.clean;

/** @typedef {string} */
var EnvType;
/**
 * @record
 * @struct
 */
function EggMock() {}

/**
 * Create a egg mocked application
 * @param {?=} option
 * @return {?}
 */
EggMock.prototype.app = function(option) {};

/**
 * mock the serverEnv of Egg
 * @param {string} env
 * @return {void}
 */
EggMock.prototype.env = function(env) {};

/**
 * mock console level
 * @param {string} level
 * @return {void}
 */
EggMock.prototype.consoleLevel = function(level) {};

/**
 * set EGG_HOME path
 * @param {string} homePath
 * @return {void}
 */
EggMock.prototype.home = function(homePath) {};

/**
 * restore mock
 * @return {void}
 */
EggMock.prototype.restore = function() {};
 /** @type {?} */
var mm;

/* TODO: ExportAssignment in  */
