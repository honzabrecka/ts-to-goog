/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/arcgis-rest-api/index.d.ts:
/**
 * @record
 * @struct
 */
function Feature() {}
 /** @type {?} */
Feature.prototype.geometry;
 /** @type {?} */
Feature.prototype.attributes;
/**
 * @record
 * @struct
 */
function Field() {}
 /** @type {string} */
Field.prototype.name;
 /** @type {string} */
Field.prototype.type;
 /** @type {string} */
Field.prototype.alias;
 /** @type {number} */
Field.prototype.length;
/**
 * @extends {HasZM}
 * @record
 * @struct
 */
function FeatureSet() {}
 /** @type {string} */
FeatureSet.prototype.objectIdFieldName;
 /** @type {string} */
FeatureSet.prototype.globalIdFieldName;
 /** @type {string} */
FeatureSet.prototype.displayFieldName;
 /** @type {string} */
FeatureSet.prototype.geometryType;
 /** @type {?} */
FeatureSet.prototype.spatialReference;
 /** @type {!Array<?>} */
FeatureSet.prototype.fields;
 /** @type {!Array<?>} */
FeatureSet.prototype.features;

/** @typedef {!Array<?>} */
var Position2D;

/** @typedef {!Array<?>} */
var Position;
/**
 * @record
 * @struct
 */
function CircularArc() {}

/* TODO: PropertySignature: "c" */
/**
 * @record
 * @struct
 */
function Arc() {}

/* TODO: PropertySignature: "a" */

/** @typedef {?} */
var ElipticArc;
/**
 * @record
 * @struct
 */
function OldCircularArc() {}

/* TODO: PropertySignature: "a" */
/**
 * @record
 * @struct
 */
function BezierCurve() {}

/* TODO: PropertySignature: "b" */

/** @typedef {?} */
var JsonCurve;
/**
 * @record
 * @struct
 */
function SpatialReferenceWkid() {}
 /** @type {number} */
SpatialReferenceWkid.prototype.wkid;
 /** @type {number} */
SpatialReferenceWkid.prototype.latestWkid;
 /** @type {number} */
SpatialReferenceWkid.prototype.vcsWkid;
 /** @type {number} */
SpatialReferenceWkid.prototype.latestVcsWkid;
/**
 * @record
 * @struct
 */
function SpatialReferenceWkt() {}
 /** @type {string} */
SpatialReferenceWkt.prototype.wkt;
 /** @type {string} */
SpatialReferenceWkt.prototype.latestWkt;

/** @typedef {?} */
var SpatialReference;
/**
 * @record
 * @struct
 */
function Geometry() {}
 /** @type {?} */
Geometry.prototype.spatialReference;
/**
 * @record
 * @struct
 */
function HasZM() {}
 /** @type {boolean} */
HasZM.prototype.hasZ;
 /** @type {boolean} */
HasZM.prototype.hasM;
/**
 * @extends {Geometry}
 * @record
 * @struct
 */
function Point() {}
 /** @type {number} */
Point.prototype.x;
 /** @type {number} */
Point.prototype.y;
 /** @type {number} */
Point.prototype.z;
 /** @type {number} */
Point.prototype.m;
/**
 * @extends {HasZM}
 * @extends {Geometry}
 * @record
 * @struct
 */
function Polyline() {}
 /** @type {!Array<!Array<!Array<?>>>} */
Polyline.prototype.paths;
/**
 * @extends {HasZM}
 * @extends {Geometry}
 * @record
 * @struct
 */
function PolylineWithCurves() {}
 /** @type {!Array<!Array<(!Array<?>|?)>>} */
PolylineWithCurves.prototype.curvePaths;
/**
 * @extends {HasZM}
 * @extends {Geometry}
 * @record
 * @struct
 */
function Polygon() {}
 /** @type {!Array<!Array<!Array<?>>>} */
Polygon.prototype.rings;
/**
 * @extends {HasZM}
 * @extends {Geometry}
 * @record
 * @struct
 */
function PolygonWithCurves() {}
 /** @type {!Array<!Array<(!Array<?>|?)>>} */
PolygonWithCurves.prototype.curveRings;
/**
 * @extends {HasZM}
 * @extends {Geometry}
 * @record
 * @struct
 */
function Multipoint() {}
 /** @type {!Array<!Array<?>>} */
Multipoint.prototype.points;
/**
 * @extends {Geometry}
 * @record
 * @struct
 */
function Envelope() {}
 /** @type {number} */
Envelope.prototype.xmin;
 /** @type {number} */
Envelope.prototype.xmax;
 /** @type {number} */
Envelope.prototype.ymin;
 /** @type {number} */
Envelope.prototype.ymax;
 /** @type {number} */
Envelope.prototype.zmin;
 /** @type {number} */
Envelope.prototype.zmax;
 /** @type {number} */
Envelope.prototype.mmin;
 /** @type {number} */
Envelope.prototype.mmax;

/** @typedef {string} */
var esriGeometryType;

/** @typedef {!Array<?>} */
var Color;

/** @typedef {string} */
var SimpleMarkerSymbolStyle;

/** @typedef {string} */
var SimpleLineSymbolStyle;

/** @typedef {string} */
var SimpleFillSymbolStyle;

/** @typedef {string} */
var SymbolType;
/**
 * @extends {Symbol}
 * @record
 * @struct
 */
function SimpleLineSymbol() {}

/* TODO: PropertySignature: "type" */

/* TODO: PropertySignature: "style" */

/* TODO: PropertySignature: "color" */

/* TODO: PropertySignature: "width" */
/**
 * @extends {Symbol}
 * @record
 * @struct
 */
function MarkerSymbol() {}

/* TODO: PropertySignature: "angle" */

/* TODO: PropertySignature: "xoffset" */

/* TODO: PropertySignature: "yoffset" */
/**
 * @extends {MarkerSymbol}
 * @record
 * @struct
 */
function SimpleMarkerSymbol() {}

/* TODO: PropertySignature: "type" */

/* TODO: PropertySignature: "style" */

/* TODO: PropertySignature: "color" */

/* TODO: PropertySignature: "size" */

/* TODO: PropertySignature: "outline" */
/**
 * @extends {Symbol}
 * @record
 * @struct
 */
function SimpleFillSymbol() {}

/* TODO: PropertySignature: "type" */

/* TODO: PropertySignature: "style" */

/* TODO: PropertySignature: "color" */

/* TODO: PropertySignature: "outline" */
/**
 * @record
 * @struct
 */
function PictureSourced() {}

/* TODO: PropertySignature: "url" */

/* TODO: PropertySignature: "imageData" */

/* TODO: PropertySignature: "contentType" */

/* TODO: PropertySignature: "width" */

/* TODO: PropertySignature: "height" */

/* TODO: PropertySignature: "angle" */

/* TODO: PropertySignature: "xoffset" */

/* TODO: PropertySignature: "yoffset" */
/**
 * @extends {MarkerSymbol}
 * @extends {PictureSourced}
 * @record
 * @struct
 */
function PictureMarkerSymbol() {}

/* TODO: PropertySignature: "type" */
/**
 * @extends {Symbol}
 * @extends {PictureSourced}
 * @record
 * @struct
 */
function PictureFillSymbol() {}

/* TODO: PropertySignature: "type" */

/* TODO: PropertySignature: "outline" */

/* TODO: PropertySignature: "xscale" */

/* TODO: PropertySignature: "yscale" */
/**
 * @record
 * @struct
 */
function Font() {}

/* TODO: PropertySignature: "family" */

/* TODO: PropertySignature: "size" */

/* TODO: PropertySignature: "style" */

/* TODO: PropertySignature: "weight" */

/* TODO: PropertySignature: "decoration" */
/**
 * @extends {MarkerSymbol}
 * @record
 * @struct
 */
function TextSymbol() {}

/* TODO: PropertySignature: "type" */

/* TODO: PropertySignature: "color" */

/* TODO: PropertySignature: "backgroundColor" */

/* TODO: PropertySignature: "borderLineSize" */

/* TODO: PropertySignature: "borderLineColor" */

/* TODO: PropertySignature: "haloSize" */

/* TODO: PropertySignature: "haloColor" */

/* TODO: PropertySignature: "verticalAlignment" */

/* TODO: PropertySignature: "horizontalAlignment" */

/* TODO: PropertySignature: "rightToLeft" */

/* TODO: PropertySignature: "kerning" */

/* TODO: PropertySignature: "font" */

/* TODO: PropertySignature: "text" */
