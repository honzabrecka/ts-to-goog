/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/delaunator/index.d.ts:

/**
 * @constructor
 * @struct
 * Constructs a delaunay triangulation object given an array of points ([x, y] by default). Duplicate points are skipped.
 * @param {!Array<!Array<number>>|!Array<T>} points
 * @param {function(T): number=} getX
 * @param {function(T): number=} getY
 */
function Delaunator(points, getX, getY) {}
 /** @type {!Int32Array} */
Delaunator.prototype.triangles;
 /** @type {!Int32Array} */
Delaunator.prototype.halfedges;

/** @typedef {!Array<number>} */
Delaunator.Point;

/** @typedef {!Array<!Array<number>>} */
Delaunator.Points;

/** @typedef {!Int32Array} */
Delaunator.Triangles;

/** @typedef {!Int32Array} */
Delaunator.HalfEdges;

/** @typedef {function(T): number} */
Delaunator.GetPoint;

/* TODO: ExportAssignment in  */
