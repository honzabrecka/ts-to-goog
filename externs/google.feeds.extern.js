/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/google.feeds/index.d.ts:
/** @const */
var google = {};
/** @const */
google.feeds = {};

/**
 * @constructor
 * @struct
 * @param {string=} url
 */
google.feeds.Feed = function(url) {};

/**
 * @param {string=} query
 * @param {function(!findResult): void=} callback
 * @return {void}
 */
google.feeds.Feed.prototype.findFeeds = function(query, callback) {};

/**
 * @param {string} node
 * @param {string} ns
 * @param {string} localName
 * @return {!Array<?>}
 */
google.feeds.Feed.prototype.getElementsByTagNameNS = function(node, ns, localName) {};

/**
 * @return {void}
 */
google.feeds.Feed.prototype.includeHistoricalEntries = function() {};

/**
 * @param {function(!feedResult): void=} callback
 * @return {void}
 */
google.feeds.Feed.prototype.load = function(callback) {};

/**
 * @param {number} num
 * @return {void}
 */
google.feeds.Feed.prototype.setNumEntries = function(num) {};

/**
 * @param {string} format
 * @return {void}
 */
google.feeds.Feed.prototype.setResultFormat = function(format) {};
/**
 * @record
 * @struct
 */
function feedResult() {}
 /** @type {!feedError} */
feedResult.prototype.error;
 /** @type {string} */
feedResult.prototype.xmlDocument;
 /** @type {!feedJSON} */
feedResult.prototype.feed;
/**
 * @record
 * @struct
 */
function findResult() {}
 /** @type {!feedError} */
findResult.prototype.error;
 /** @type {string} */
findResult.prototype.xmlDocument;
 /** @type {!Array<!findEntry>} */
findResult.prototype.findEntries;
/**
 * @record
 * @struct
 */
function feedError() {}
 /** @type {string} */
feedError.prototype.code;
 /** @type {string} */
feedError.prototype.message;
/**
 * @record
 * @struct
 */
function feedJSON() {}
 /** @type {string} */
feedJSON.prototype.feedURL;
 /** @type {string} */
feedJSON.prototype.link;
 /** @type {string} */
feedJSON.prototype.author;
 /** @type {string} */
feedJSON.prototype.description;
 /** @type {!Array<!feedEntry>} */
feedJSON.prototype.entries;
/**
 * @record
 * @struct
 */
function feedEntry() {}
 /** @type {!Array<!MediaGroup>} */
feedEntry.prototype.mediaGroup;
 /** @type {string} */
feedEntry.prototype.title;
 /** @type {string} */
feedEntry.prototype.link;
 /** @type {string} */
feedEntry.prototype.content;
 /** @type {string} */
feedEntry.prototype.contentSnippet;
 /** @type {string} */
feedEntry.prototype.publishedDate;
 /** @type {!Array<string>} */
feedEntry.prototype.categories;
/**
 * @record
 * @struct
 */
function findEntry() {}
 /** @type {string} */
findEntry.prototype.title;
 /** @type {string} */
findEntry.prototype.link;
 /** @type {string} */
findEntry.prototype.contentSnippet;
 /** @type {string} */
findEntry.prototype.url;
/**
 * @record
 * @struct
 */
function MediaGroup() {}
 /** @type {!Array<!MediaContent>} */
MediaGroup.prototype.content;
/**
 * @record
 * @struct
 */
function MediaContent() {}
 /** @type {string} */
MediaContent.prototype.url;
 /** @type {number} */
MediaContent.prototype.fileSize;
 /** @type {string} */
MediaContent.prototype.type;
 /** @type {string} */
MediaContent.prototype.medium;
 /** @type {boolean} */
MediaContent.prototype.isDefault;
 /** @type {string} */
MediaContent.prototype.expression;
 /** @type {number} */
MediaContent.prototype.bitrate;
 /** @type {number} */
MediaContent.prototype.framerate;
 /** @type {number} */
MediaContent.prototype.samplingrate;
 /** @type {string} */
MediaContent.prototype.channels;
 /** @type {number} */
MediaContent.prototype.duration;
 /** @type {number} */
MediaContent.prototype.height;
 /** @type {number} */
MediaContent.prototype.width;
 /** @type {string} */
MediaContent.prototype.lang;
