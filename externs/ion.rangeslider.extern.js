/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/ion.rangeslider/index.d.ts:
/**
 * @record
 * @struct
 */
function JQuery() {}

/**
 * @return {void}
 */
JQuery.prototype.destroy = function() {};

/**
 * @param {!IonRangeSliderOptions=} options
 * @return {!JQuery}
 */
JQuery.prototype.ionRangeSlider = function(options) {};

/**
 * @return {void}
 */
JQuery.prototype.reset = function() {};

/**
 * @param {!IonRangeSliderOptions} option
 * @return {void}
 */
JQuery.prototype.update = function(option) {};
/**
 * @record
 * @struct
 */
function IonRangeSliderOptions() {}
 /** @type {boolean} */
IonRangeSliderOptions.prototype.decorate_both;
 /** @type {boolean} */
IonRangeSliderOptions.prototype.disable;
 /** @type {boolean} */
IonRangeSliderOptions.prototype.drag_interval;
 /** @type {boolean} */
IonRangeSliderOptions.prototype.force_edges;
 /** @type {number} */
IonRangeSliderOptions.prototype.from;
 /** @type {boolean} */
IonRangeSliderOptions.prototype.from_fixed;
 /** @type {number} */
IonRangeSliderOptions.prototype.from_max;
 /** @type {number} */
IonRangeSliderOptions.prototype.from_min;
 /** @type {boolean} */
IonRangeSliderOptions.prototype.from_shadow;
 /** @type {boolean} */
IonRangeSliderOptions.prototype.grid;
 /** @type {boolean} */
IonRangeSliderOptions.prototype.grid_margin;
 /** @type {number} */
IonRangeSliderOptions.prototype.grid_num;
 /** @type {boolean} */
IonRangeSliderOptions.prototype.grid_snap;
 /** @type {boolean} */
IonRangeSliderOptions.prototype.hide_from_to;
 /** @type {boolean} */
IonRangeSliderOptions.prototype.hide_min_max;
 /** @type {boolean} */
IonRangeSliderOptions.prototype.keyboard;
 /** @type {number} */
IonRangeSliderOptions.prototype.keyboard_step;
 /** @type {number} */
IonRangeSliderOptions.prototype.max;
 /** @type {number} */
IonRangeSliderOptions.prototype.max_interval;
 /** @type {string} */
IonRangeSliderOptions.prototype.max_postfix;
 /** @type {number} */
IonRangeSliderOptions.prototype.min;
 /** @type {number} */
IonRangeSliderOptions.prototype.min_interval;
 /** @type {function(!IonRangeSliderEvent): void} */
IonRangeSliderOptions.prototype.onChange;
 /** @type {function(!IonRangeSliderEvent): void} */
IonRangeSliderOptions.prototype.onFinish;
 /** @type {function(!IonRangeSliderEvent): void} */
IonRangeSliderOptions.prototype.onStart;
 /** @type {function(!IonRangeSliderEvent): void} */
IonRangeSliderOptions.prototype.onUpdate;
 /** @type {string} */
IonRangeSliderOptions.prototype.postfix;
 /** @type {string} */
IonRangeSliderOptions.prototype.prefix;
 /** @type {function(number): string} */
IonRangeSliderOptions.prototype.prettify;
 /** @type {boolean} */
IonRangeSliderOptions.prototype.prettify_enabled;
 /** @type {string} */
IonRangeSliderOptions.prototype.prettify_separator;
 /** @type {number} */
IonRangeSliderOptions.prototype.step;
 /** @type {number} */
IonRangeSliderOptions.prototype.to;
 /** @type {boolean} */
IonRangeSliderOptions.prototype.to_fixed;
 /** @type {number} */
IonRangeSliderOptions.prototype.to_max;
 /** @type {number} */
IonRangeSliderOptions.prototype.to_min;
 /** @type {boolean} */
IonRangeSliderOptions.prototype.to_shadowed;
 /** @type {string} */
IonRangeSliderOptions.prototype.type;
 /** @type {!Array<?>} */
IonRangeSliderOptions.prototype.values;
 /** @type {string} */
IonRangeSliderOptions.prototype.values_separator;
/**
 * @record
 * @struct
 */
function IonRangeSliderEvent() {}
 /** @type {number} */
IonRangeSliderEvent.prototype.from;
 /** @type {number} */
IonRangeSliderEvent.prototype.from_precent;
 /** @type {?} */
IonRangeSliderEvent.prototype.from_value;
 /** @type {!JQuery} */
IonRangeSliderEvent.prototype.input;
 /** @type {number} */
IonRangeSliderEvent.prototype.max;
 /** @type {number} */
IonRangeSliderEvent.prototype.min;
 /** @type {!JQuery} */
IonRangeSliderEvent.prototype.slider;
 /** @type {number} */
IonRangeSliderEvent.prototype.to;
 /** @type {number} */
IonRangeSliderEvent.prototype.to_precent;
 /** @type {?} */
IonRangeSliderEvent.prototype.to_value;
