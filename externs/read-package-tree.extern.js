/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/read-package-tree/index.d.ts:

/**
 * @param {string} root
 * @param {function(!Error, !rpt.Node): void|function(!rpt.Node, string): (boolean|void)} cb_or_filterWith
 * @param {function(!Error, !rpt.Node): void=} cb
 * @return {void}
 */
function rpt(root, cb_or_filterWith, cb) {}

/**
 * @constructor
 * @struct
 * @param {?} pkg
 * @param {string} logical
 * @param {string} physical
 * @param {!Error} er
 * @param {!Object<string,!rpt.Node>} cache
 * @param {boolean=} fromLink
 */
rpt.Node = function(pkg, logical, physical, er, cache, fromLink) {};
 /** @type {number} */
rpt.Node.prototype.id;
 /** @type {?} */
rpt.Node.prototype.package;
 /** @type {!Array<!rpt.Node>} */
rpt.Node.prototype.children;
 /** @type {!rpt.Node} */
rpt.Node.prototype.parent;
 /** @type {string} */
rpt.Node.prototype.path;
 /** @type {string} */
rpt.Node.prototype.realpath;
 /** @type {!Error} */
rpt.Node.prototype.error;
 /** @type {boolean} */
rpt.Node.prototype.isLink;

/**
 * @constructor
 * @struct
 * @param {?} pkg
 * @param {string} logical
 * @param {string} physical
 * @param {string} realpath
 * @param {!Error} er
 * @param {!Object<string,!rpt.Node>} cache
 */
rpt.Link = function(pkg, logical, physical, realpath, er, cache) {};
 /** @type {boolean} */
rpt.Link.prototype.isLink;
 /** @type {!rpt.Node} */
rpt.Link.prototype.target;

/* TODO: ExportAssignment in  */
