/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/ref-union/index.d.ts:

/* TODO: ImportEqualsDeclaration in  */
/**
 * @extends {Type}
 * @record
 * @struct
 */
function UnionType() {}

/* TODO: ConstructSignature:  */

/* TODO: ConstructSignature:  */

/* TODO: CallSignature:  */

/* TODO: CallSignature:  */
 /** @type {?} */
UnionType.prototype.fields;

/**
 * Adds a new field to the union instance with the given name and type.
 * Note that this function will throw an Error if any instances of the union
 * type have already been created, therefore this function must be called at the
 * beginning, before any instances are created.
 * Adds a new field to the union instance with the given name and type.
 * Note that this function will throw an Error if any instances of the union
 * type have already been created, therefore this function must be called at the
 * beginning, before any instances are created.
 * @param {string} name
 * @param {?|string} type
 * @return {void}
 */
UnionType.prototype.defineProperty = function(name, type) {};

/**
 * Custom for union type instances.
 * @override
 * @return {string}
 */
UnionType.prototype.toString = function() {};
 /** @type {function(new: (?), !Object): ?} */
var UnionType;

/* TODO: ExportAssignment in  */
