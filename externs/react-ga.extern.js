/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/react-ga/index.d.ts:
/**
 * @record
 * @struct
 */
function EventArgs() {}
 /** @type {string} */
EventArgs.prototype.category;
 /** @type {string} */
EventArgs.prototype.action;
 /** @type {string} */
EventArgs.prototype.label;
 /** @type {number} */
EventArgs.prototype.value;
 /** @type {boolean} */
EventArgs.prototype.nonInteraction;
/**
 * @record
 * @struct
 */
function GaOptions() {}
 /** @type {string} */
GaOptions.prototype.name;
 /** @type {string} */
GaOptions.prototype.clientId;
 /** @type {number} */
GaOptions.prototype.sampleRate;
 /** @type {number} */
GaOptions.prototype.siteSpeedSampleRate;
 /** @type {boolean} */
GaOptions.prototype.alwaysSendReferrer;
 /** @type {boolean} */
GaOptions.prototype.allowAnchor;
 /** @type {string} */
GaOptions.prototype.cookieName;
 /** @type {string} */
GaOptions.prototype.cookieDomain;
 /** @type {number} */
GaOptions.prototype.cookieExpires;
 /** @type {string} */
GaOptions.prototype.legacyCookieDomain;
 /** @type {boolean} */
GaOptions.prototype.legacyHistoryImport;
 /** @type {boolean} */
GaOptions.prototype.allowLinker;
 /** @type {string} */
GaOptions.prototype.userId;
/**
 * @record
 * @struct
 */
function InitializeOptions() {}
 /** @type {boolean} */
InitializeOptions.prototype.debug;
 /** @type {boolean} */
InitializeOptions.prototype.titleCase;
 /** @type {?} */
InitializeOptions.prototype.gaOptions;
/**
 * @record
 * @struct
 */
function FieldsObject() {}

/* TODO: IndexSignature:  */
/**
 * @record
 * @struct
 */
function TimingArgs() {}
 /** @type {string} */
TimingArgs.prototype.category;
 /** @type {string} */
TimingArgs.prototype.variable;
 /** @type {number} */
TimingArgs.prototype.value;
 /** @type {string} */
TimingArgs.prototype.label;
/**
 * @record
 * @struct
 */
function Plugin() {}

/**
 * @param {string} name
 * @param {?} options
 * @return {void}
 */
Plugin.prototype.require = function(name, options) {};

/**
 * @param {string} pluginName
 * @param {string} action
 * @param {?} actionTypeOrPayload
 * @param {?=} payload
 * @return {void}
 */
Plugin.prototype.execute = function(pluginName, action, actionTypeOrPayload, payload) {};
/**
 * @record
 * @struct
 */
function OutboundLinkArgs() {}
 /** @type {string} */
OutboundLinkArgs.prototype.label;

/**
 * @param {string} trackingCode
 * @param {?=} options
 * @return {void}
 */
function initialize(trackingCode, options) {}

/**
 * @return {?}
 */
function ga() {}

/**
 * @param {?} fieldsObject
 * @return {void}
 */
function set(fieldsObject) {}

/**
 * @param {?} fieldsObject
 * @return {void}
 */
function send(fieldsObject) {}

/**
 * @param {string} path
 * @return {void}
 */
function pageview(path) {}

/**
 * @param {string} name
 * @return {void}
 */
function modalview(name) {}

/**
 * @param {?} args
 * @return {void}
 */
function timing(args) {}

/**
 * @param {?} args
 * @return {void}
 */
function event(args) {}

/**
 * @param {?} fieldsObject
 * @return {void}
 */
function exception(fieldsObject) {}
 /** @type {?} */
var plugin;

/**
 * @param {?} args
 * @param {?} hitCallback
 * @return {void}
 */
function outboundLink(args, hitCallback) {}
