/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/accounting/index.d.ts:
/** @const */
var accounting = {};
/**
 * @record
 * @struct
 */
accounting.CurrencyFormat = function() {};
 /** @type {string} */
accounting.CurrencyFormat.prototype.pos;
 /** @type {string} */
accounting.CurrencyFormat.prototype.neg;
 /** @type {string} */
accounting.CurrencyFormat.prototype.zero;
/**
 * @record
 * @struct
 */
accounting.CurrencySettings = function() {};
 /** @type {string} */
accounting.CurrencySettings.prototype.symbol;
 /** @type {TFormat} */
accounting.CurrencySettings.prototype.format;
 /** @type {string} */
accounting.CurrencySettings.prototype.decimal;
 /** @type {string} */
accounting.CurrencySettings.prototype.thousand;
 /** @type {number} */
accounting.CurrencySettings.prototype.precision;
/**
 * @record
 * @struct
 */
accounting.NumberSettings = function() {};
 /** @type {number} */
accounting.NumberSettings.prototype.precision;
 /** @type {string} */
accounting.NumberSettings.prototype.thousand;
 /** @type {string} */
accounting.NumberSettings.prototype.decimal;
/**
 * @record
 * @struct
 */
accounting.Settings = function() {};
 /** @type {!accounting.CurrencySettings<?>} */
accounting.Settings.prototype.currency;
 /** @type {!accounting.NumberSettings} */
accounting.Settings.prototype.number;
/**
 * @record
 * @struct
 */
accounting.Static = function() {};
 /** @type {!accounting.Settings} */
accounting.Static.prototype.settings;

/**
 * @param {(string|number)|!Array<number>|!Array<?>} number_or_numbers
 * @param {string|(!accounting.CurrencySettings<string>|!accounting.CurrencySettings<!accounting.CurrencyFormat>)=} symbol_or_options
 * @param {number=} precision
 * @param {string=} thousand
 * @param {string=} decimal
 * @param {string=} format
 * @return {string|!Array<string>|!Array<?>}
 */
accounting.Static.prototype.formatMoney = function(number_or_numbers, symbol_or_options, precision, thousand, decimal, format) {};

/**
 * @param {!Array<number>|!Array<!Array<number>>} numbers
 * @param {string|(!accounting.CurrencySettings<string>|!accounting.CurrencySettings<!accounting.CurrencyFormat>)=} symbol_or_options
 * @param {number=} precision
 * @param {string=} thousand
 * @param {string=} decimal
 * @param {string=} format
 * @return {!Array<string>|!Array<!Array<string>>}
 */
accounting.Static.prototype.formatColumn = function(numbers, symbol_or_options, precision, thousand, decimal, format) {};

/**
 * @param {number|!Array<number>|!Array<?>} number
 * @param {number|!accounting.NumberSettings=} precision_or_options
 * @param {string=} thousand
 * @param {string=} decimal
 * @return {string|!Array<string>|!Array<?>}
 */
accounting.Static.prototype.formatNumber = function(number, precision_or_options, thousand, decimal) {};

/**
 * @param {number} number
 * @param {number=} precision
 * @return {string}
 */
accounting.Static.prototype.toFixed = function(number, precision) {};

/**
 * @param {string} string
 * @param {string=} decimal
 * @return {number}
 */
accounting.Static.prototype.unformat = function(string, decimal) {};
 /** @type {!accounting.Static} */
var accounting;

/* TODO: ExportAssignment in  */

/* TODO: NamespaceExportDeclaration in  */
