/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/createjs-lib/index.d.ts:
/** @const */
var createjs = {};

/**
 * @constructor
 * @struct
 * @param {string} type
 * @param {boolean} bubbles
 * @param {boolean} cancelable
 */
createjs.Event = function(type, bubbles, cancelable) {};
 /** @type {boolean} */
createjs.Event.prototype.bubbles;
 /** @type {boolean} */
createjs.Event.prototype.cancelable;
 /** @type {?} */
createjs.Event.prototype.currentTarget;
 /** @type {boolean} */
createjs.Event.prototype.defaultPrevented;
 /** @type {number} */
createjs.Event.prototype.eventPhase;
 /** @type {boolean} */
createjs.Event.prototype.immediatePropagationStopped;
 /** @type {boolean} */
createjs.Event.prototype.propagationStopped;
 /** @type {boolean} */
createjs.Event.prototype.removed;
 /** @type {?} */
createjs.Event.prototype.target;
 /** @type {number} */
createjs.Event.prototype.timeStamp;
 /** @type {string} */
createjs.Event.prototype.type;
 /** @type {?} */
createjs.Event.prototype.data;
 /** @type {number} */
createjs.Event.prototype.delta;
 /** @type {string} */
createjs.Event.prototype.error;
 /** @type {string} */
createjs.Event.prototype.id;
 /** @type {?} */
createjs.Event.prototype.item;
 /** @type {number} */
createjs.Event.prototype.loaded;
 /** @type {string} */
createjs.Event.prototype.name;
 /** @type {string} */
createjs.Event.prototype.next;
 /** @type {?} */
createjs.Event.prototype.params;
 /** @type {boolean} */
createjs.Event.prototype.paused;
 /** @type {number} */
createjs.Event.prototype.progress;
 /** @type {?} */
createjs.Event.prototype.rawResult;
 /** @type {?} */
createjs.Event.prototype.result;
 /** @type {number} */
createjs.Event.prototype.runTime;
 /** @type {string} */
createjs.Event.prototype.src;
 /** @type {number} */
createjs.Event.prototype.time;
 /** @type {number} */
createjs.Event.prototype.total;

/**
 * @return {!createjs.Event}
 */
createjs.Event.prototype.clone = function() {};

/**
 * @return {void}
 */
createjs.Event.prototype.preventDefault = function() {};

/**
 * @return {void}
 */
createjs.Event.prototype.remove = function() {};

/**
 * @param {!Object} props
 * @return {!createjs.Event}
 */
createjs.Event.prototype.set = function(props) {};

/**
 * @return {void}
 */
createjs.Event.prototype.stopImmediatePropagation = function() {};

/**
 * @return {void}
 */
createjs.Event.prototype.stopPropagation = function() {};

/**
 * @return {string}
 */
createjs.Event.prototype.toString = function() {};

/**
 * @constructor
 * @struct
 */
createjs.EventDispatcher = function() {};

/**
 * @param {string} type
 * @param {function(!Object): boolean|function(!Object): void|{handleEvent: function(!Object): boolean}|{handleEvent: function(!Object): void}} listener
 * @param {boolean=} useCapture
 * @return {!Function|!Object}
 */
createjs.EventDispatcher.prototype.addEventListener = function(type, listener, useCapture) {};

/**
 * @param {!Object|string|!createjs.Event} eventObj
 * @param {!Object=} target
 * @return {boolean}
 */
createjs.EventDispatcher.prototype.dispatchEvent = function(eventObj, target) {};

/**
 * @param {string} type
 * @return {boolean}
 */
createjs.EventDispatcher.prototype.hasEventListener = function(type) {};

/**
 * @param {!Object} target
 * @return {void}
 */
createjs.EventDispatcher.initialize = function(target) {};

/**
 * @param {string} type
 * @param {function(!Object): boolean|function(!Object): void|{handleEvent: function(!Object): boolean}|{handleEvent: function(!Object): void}|!Function} listener
 * @param {boolean=} useCapture
 * @return {void}
 */
createjs.EventDispatcher.prototype.off = function(type, listener, useCapture) {};

/**
 * @param {string} type
 * @param {function(!Object): boolean|function(!Object): void|{handleEvent: function(!Object): boolean}|{handleEvent: function(!Object): void}} listener
 * @param {!Object=} scope
 * @param {boolean=} once
 * @param {?=} data
 * @param {boolean=} useCapture
 * @return {!Function|!Object}
 */
createjs.EventDispatcher.prototype.on = function(type, listener, scope, once, data, useCapture) {};

/**
 * @param {string=} type
 * @return {void}
 */
createjs.EventDispatcher.prototype.removeAllEventListeners = function(type) {};

/**
 * @param {string} type
 * @param {function(!Object): boolean|function(!Object): void|{handleEvent: function(!Object): boolean}|{handleEvent: function(!Object): void}|!Function} listener
 * @param {boolean=} useCapture
 * @return {void}
 */
createjs.EventDispatcher.prototype.removeEventListener = function(type, listener, useCapture) {};

/**
 * @return {string}
 */
createjs.EventDispatcher.prototype.toString = function() {};

/**
 * @param {string} type
 * @return {boolean}
 */
createjs.EventDispatcher.prototype.willTrigger = function(type) {};

/**
 * @param {function(): ?} subclass
 * @param {function(): ?} superclass
 * @return {function(): ?}
 */
createjs.extend = function(subclass, superclass) {};

/**
 * @param {!Array<?>} array
 * @param {!Object} searchElement
 * @return {number}
 */
createjs.indexOf = function(array, searchElement) {};

/**
 * @param {function(): ?} subclass
 * @param {string} prefix
 * @return {function(): ?}
 */
createjs.promote = function(subclass, prefix) {};

/**
 * @param {function(!Object): boolean|function(!Object): void|{handleEvent: function(!Object): boolean}|{handleEvent: function(!Object): void}} method
 * @param {!Object} scope
 * @param {...?} arg
 * @return {function(!Object): ?}
 */
createjs.proxy = function(method, scope, arg) {};
