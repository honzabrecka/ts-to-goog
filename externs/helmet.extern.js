/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/helmet/index.d.ts:

/* TODO: ImportEqualsDeclaration in  */
 /** @type {!helmet.Helmet} */
var helmet;

/* TODO: ExportAssignment in  */
/**
 * @record
 * @struct
 */
helmet.IHelmetConfiguration = function() {};
 /** @type {(boolean|!helmet.IHelmetContentSecurityPolicyConfiguration)} */
helmet.IHelmetConfiguration.prototype.contentSecurityPolicy;
 /** @type {(boolean|!helmet.IHelmetDnsPrefetchControlConfiguration)} */
helmet.IHelmetConfiguration.prototype.dnsPrefetchControl;
 /** @type {(boolean|!helmet.IHelmetFrameguardConfiguration)} */
helmet.IHelmetConfiguration.prototype.frameguard;
 /** @type {(boolean|!helmet.IHelmetHidePoweredByConfiguration)} */
helmet.IHelmetConfiguration.prototype.hidePoweredBy;
 /** @type {(boolean|!helmet.IHelmetHpkpConfiguration)} */
helmet.IHelmetConfiguration.prototype.hpkp;
 /** @type {(boolean|!helmet.IHelmetHstsConfiguration)} */
helmet.IHelmetConfiguration.prototype.hsts;
 /** @type {boolean} */
helmet.IHelmetConfiguration.prototype.ieNoOpen;
 /** @type {boolean} */
helmet.IHelmetConfiguration.prototype.noCache;
 /** @type {boolean} */
helmet.IHelmetConfiguration.prototype.noSniff;
 /** @type {(boolean|!helmet.IHelmetXssFilterConfiguration)} */
helmet.IHelmetConfiguration.prototype.xssFilter;
 /** @type {(boolean|!helmet.IHelmetExpectCtConfiguration)} */
helmet.IHelmetConfiguration.prototype.expectCt;
/**
 * @record
 * @struct
 */
helmet.IHelmetContentSecurityPolicyDirectiveFunction = function() {};

/* TODO: CallSignature: helmet */

/** @typedef {(string|!helmet.IHelmetContentSecurityPolicyDirectiveFunction)} */
helmet.HelmetCspDirectiveValue;
/**
 * @record
 * @struct
 */
helmet.IHelmetContentSecurityPolicyDirectives = function() {};
 /** @type {!Array<(string|!helmet.IHelmetContentSecurityPolicyDirectiveFunction)>} */
helmet.IHelmetContentSecurityPolicyDirectives.prototype.baseUri;
 /** @type {!Array<(string|!helmet.IHelmetContentSecurityPolicyDirectiveFunction)>} */
helmet.IHelmetContentSecurityPolicyDirectives.prototype.childSrc;
 /** @type {!Array<(string|!helmet.IHelmetContentSecurityPolicyDirectiveFunction)>} */
helmet.IHelmetContentSecurityPolicyDirectives.prototype.connectSrc;
 /** @type {!Array<(string|!helmet.IHelmetContentSecurityPolicyDirectiveFunction)>} */
helmet.IHelmetContentSecurityPolicyDirectives.prototype.defaultSrc;
 /** @type {!Array<(string|!helmet.IHelmetContentSecurityPolicyDirectiveFunction)>} */
helmet.IHelmetContentSecurityPolicyDirectives.prototype.fontSrc;
 /** @type {!Array<(string|!helmet.IHelmetContentSecurityPolicyDirectiveFunction)>} */
helmet.IHelmetContentSecurityPolicyDirectives.prototype.formAction;
 /** @type {!Array<(string|!helmet.IHelmetContentSecurityPolicyDirectiveFunction)>} */
helmet.IHelmetContentSecurityPolicyDirectives.prototype.frameAncestors;
 /** @type {!Array<(string|!helmet.IHelmetContentSecurityPolicyDirectiveFunction)>} */
helmet.IHelmetContentSecurityPolicyDirectives.prototype.frameSrc;
 /** @type {!Array<(string|!helmet.IHelmetContentSecurityPolicyDirectiveFunction)>} */
helmet.IHelmetContentSecurityPolicyDirectives.prototype.imgSrc;
 /** @type {!Array<(string|!helmet.IHelmetContentSecurityPolicyDirectiveFunction)>} */
helmet.IHelmetContentSecurityPolicyDirectives.prototype.mediaSrc;
 /** @type {!Array<(string|!helmet.IHelmetContentSecurityPolicyDirectiveFunction)>} */
helmet.IHelmetContentSecurityPolicyDirectives.prototype.objectSrc;
 /** @type {!Array<(string|!helmet.IHelmetContentSecurityPolicyDirectiveFunction)>} */
helmet.IHelmetContentSecurityPolicyDirectives.prototype.pluginTypes;
 /** @type {string} */
helmet.IHelmetContentSecurityPolicyDirectives.prototype.reportUri;
 /** @type {!Array<(string|!helmet.IHelmetContentSecurityPolicyDirectiveFunction)>} */
helmet.IHelmetContentSecurityPolicyDirectives.prototype.sandbox;
 /** @type {!Array<(string|!helmet.IHelmetContentSecurityPolicyDirectiveFunction)>} */
helmet.IHelmetContentSecurityPolicyDirectives.prototype.scriptSrc;
 /** @type {!Array<(string|!helmet.IHelmetContentSecurityPolicyDirectiveFunction)>} */
helmet.IHelmetContentSecurityPolicyDirectives.prototype.styleSrc;
/**
 * @record
 * @struct
 */
helmet.IHelmetContentSecurityPolicyConfiguration = function() {};
 /** @type {boolean} */
helmet.IHelmetContentSecurityPolicyConfiguration.prototype.reportOnly;
 /** @type {boolean} */
helmet.IHelmetContentSecurityPolicyConfiguration.prototype.setAllHeaders;
 /** @type {boolean} */
helmet.IHelmetContentSecurityPolicyConfiguration.prototype.disableAndroid;
 /** @type {boolean} */
helmet.IHelmetContentSecurityPolicyConfiguration.prototype.browserSniff;
 /** @type {!helmet.IHelmetContentSecurityPolicyDirectives} */
helmet.IHelmetContentSecurityPolicyConfiguration.prototype.directives;
/**
 * @record
 * @struct
 */
helmet.IHelmetDnsPrefetchControlConfiguration = function() {};
 /** @type {boolean} */
helmet.IHelmetDnsPrefetchControlConfiguration.prototype.allow;
/**
 * @record
 * @struct
 */
helmet.IHelmetFrameguardConfiguration = function() {};
 /** @type {string} */
helmet.IHelmetFrameguardConfiguration.prototype.action;
 /** @type {string} */
helmet.IHelmetFrameguardConfiguration.prototype.domain;
/**
 * @record
 * @struct
 */
helmet.IHelmetHidePoweredByConfiguration = function() {};
 /** @type {string} */
helmet.IHelmetHidePoweredByConfiguration.prototype.setTo;
/**
 * @record
 * @struct
 */
helmet.IHelmetSetIfFunction = function() {};

/* TODO: CallSignature: helmet */
/**
 * @record
 * @struct
 */
helmet.IHelmetHpkpConfiguration = function() {};
 /** @type {number} */
helmet.IHelmetHpkpConfiguration.prototype.maxAge;
 /** @type {!Array<string>} */
helmet.IHelmetHpkpConfiguration.prototype.sha256s;
 /** @type {boolean} */
helmet.IHelmetHpkpConfiguration.prototype.includeSubdomains;
 /** @type {string} */
helmet.IHelmetHpkpConfiguration.prototype.reportUri;
 /** @type {boolean} */
helmet.IHelmetHpkpConfiguration.prototype.reportOnly;
 /** @type {!helmet.IHelmetSetIfFunction} */
helmet.IHelmetHpkpConfiguration.prototype.setIf;
/**
 * @record
 * @struct
 */
helmet.IHelmetHstsConfiguration = function() {};
 /** @type {number} */
helmet.IHelmetHstsConfiguration.prototype.maxAge;
 /** @type {boolean} */
helmet.IHelmetHstsConfiguration.prototype.includeSubdomains;
 /** @type {boolean} */
helmet.IHelmetHstsConfiguration.prototype.preload;
 /** @type {!helmet.IHelmetSetIfFunction} */
helmet.IHelmetHstsConfiguration.prototype.setIf;
 /** @type {boolean} */
helmet.IHelmetHstsConfiguration.prototype.force;
/**
 * @record
 * @struct
 */
helmet.IHelmetReferrerPolicyConfiguration = function() {};
 /** @type {string} */
helmet.IHelmetReferrerPolicyConfiguration.prototype.policy;
/**
 * @record
 * @struct
 */
helmet.IHelmetXssFilterConfiguration = function() {};
 /** @type {boolean} */
helmet.IHelmetXssFilterConfiguration.prototype.setOnOldIE;
/**
 * @record
 * @struct
 */
helmet.IHelmetExpectCtConfiguration = function() {};
 /** @type {boolean} */
helmet.IHelmetExpectCtConfiguration.prototype.enforce;
 /** @type {number} */
helmet.IHelmetExpectCtConfiguration.prototype.maxAge;
 /** @type {string} */
helmet.IHelmetExpectCtConfiguration.prototype.reportUri;
/**
 * @record
 * @struct
 */
helmet.Helmet = function() {};

/* TODO: CallSignature: helmet */

/**
 * \@summary Set policy around third-party content via headers
 * @param {!helmet.IHelmetContentSecurityPolicyConfiguration=} options
 * @return {!e.RequestHandler}
 */
helmet.Helmet.prototype.contentSecurityPolicy = function(options) {};

/**
 * \@summary Stop browsers from doing DNS prefetching.
 * @param {!helmet.IHelmetDnsPrefetchControlConfiguration=} options
 * @return {!e.RequestHandler}
 */
helmet.Helmet.prototype.dnsPrefetchControl = function(options) {};

/**
 * \@summary Prevent clickjacking.
 * @param {!helmet.IHelmetFrameguardConfiguration=} options
 * @return {!e.RequestHandler}
 */
helmet.Helmet.prototype.frameguard = function(options) {};

/**
 * \@summary Hide "X-Powered-By" header.
 * @param {!helmet.IHelmetHidePoweredByConfiguration=} options
 * @return {!e.RequestHandler}
 */
helmet.Helmet.prototype.hidePoweredBy = function(options) {};

/**
 * \@summary Adds the "Public-Key-Pins" header.
 * @param {!helmet.IHelmetHpkpConfiguration=} options
 * @return {!e.RequestHandler}
 */
helmet.Helmet.prototype.hpkp = function(options) {};

/**
 * \@summary Adds the "Strict-Transport-Security" header.
 * @param {!helmet.IHelmetHstsConfiguration=} options
 * @return {!e.RequestHandler}
 */
helmet.Helmet.prototype.hsts = function(options) {};

/**
 * \@summary Add the "X-Download-Options" header.
 * @return {!e.RequestHandler}
 */
helmet.Helmet.prototype.ieNoOpen = function() {};

/**
 * \@summary Add the "Cache-Control" and "Pragma" headers to stop caching.
 * @param {!Object=} options
 * @return {!e.RequestHandler}
 */
helmet.Helmet.prototype.noCache = function(options) {};

/**
 * \@summary Adds the "X-Content-Type-Options" header.
 * @return {!e.RequestHandler}
 */
helmet.Helmet.prototype.noSniff = function() {};

/**
 * \@summary Adds the "Referrer-Policy" header.
 * @param {!helmet.IHelmetReferrerPolicyConfiguration=} options
 * @return {!e.RequestHandler}
 */
helmet.Helmet.prototype.referrerPolicy = function(options) {};

/**
 * \@summary Mitigate cross-site scripting attacks with the "X-XSS-Protection" header.
 * @param {!helmet.IHelmetXssFilterConfiguration=} options
 * @return {!e.RequestHandler}
 */
helmet.Helmet.prototype.xssFilter = function(options) {};

/**
 * \@summary Adds the "Expect-CT" header.
 * @param {!helmet.IHelmetExpectCtConfiguration=} options
 * @return {!e.RequestHandler}
 */
helmet.Helmet.prototype.expectCt = function(options) {};
