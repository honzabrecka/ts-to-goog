/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/cordova.plugins.diagnostic/index.d.ts:
/**
 * @record
 * @struct
 */
function Diagnostic() {}
 /** @type {?} */
Diagnostic.prototype.permission;
 /** @type {?} */
Diagnostic.prototype.permissionGroups;
 /** @type {?} */
Diagnostic.prototype.permissionStatus;
 /** @type {?} */
Diagnostic.prototype.locationAuthorizationMode;
 /** @type {?} */
Diagnostic.prototype.locationMode;
 /** @type {?} */
Diagnostic.prototype.bluetoothState;
 /** @type {?} */
Diagnostic.prototype.NFCState;
 /** @type {function(function(boolean): void, function(string): void): void} */
Diagnostic.prototype.isLocationAvailable;
 /** @type {function(function(boolean): void, function(string): void): void} */
Diagnostic.prototype.isWifiAvailable;
 /** @type {function(function(boolean): void, function(string): void): void} */
Diagnostic.prototype.isCameraAvailable;
 /** @type {function(function(boolean): void, function(string): void): void} */
Diagnostic.prototype.isBluetoothAvailable;
 /** @type {function(): void} */
Diagnostic.prototype.switchToLocationSettings;
 /** @type {function(): void} */
Diagnostic.prototype.switchToMobileDataSettings;
 /** @type {function(): void} */
Diagnostic.prototype.switchToBluetoothSettings;
 /** @type {function(): void} */
Diagnostic.prototype.switchToWifiSettings;
 /** @type {function(function(boolean): void, function(string): void): void} */
Diagnostic.prototype.isWifiEnabled;
 /** @type {function(function(boolean): void, function(string): void, boolean): void} */
Diagnostic.prototype.setWifiState;
 /** @type {function(function(boolean): void, function(string): void, boolean): void} */
Diagnostic.prototype.setBluetoothState;
 /** @type {function(function(boolean): void, function(string): void): void} */
Diagnostic.prototype.isLocationEnabled;
 /** @type {function(function(boolean): void, function(string): void): void} */
Diagnostic.prototype.isLocationAuthorized;
 /** @type {function(function(string): void, function(string): void): void} */
Diagnostic.prototype.getLocationAuthorizationStatus;
 /** @type {function(function(string): void, function(string): void, string): void} */
Diagnostic.prototype.requestLocationAuthorization;
 /** @type {function(function(boolean): void, function(string): void): void} */
Diagnostic.prototype.isCameraPresent;
 /** @type {function(function(boolean): void, function(string): void): void} */
Diagnostic.prototype.isCameraAuthorized;
 /** @type {function(function(string): void, function(string): void): void} */
Diagnostic.prototype.getCameraAuthorizationStatus;
 /** @type {function(function(string): void, function(string): void): void} */
Diagnostic.prototype.requestCameraAuthorization;
 /** @type {function(function(boolean): void, function(string): void): void} */
Diagnostic.prototype.isMicrophoneAuthorized;
 /** @type {function(function(string): void, function(string): void): void} */
Diagnostic.prototype.getMicrophoneAuthorizationStatus;
 /** @type {function(function(string): void, function(string): void): void} */
Diagnostic.prototype.requestMicrophoneAuthorization;
 /** @type {function(function(boolean): void, function(string): void): void} */
Diagnostic.prototype.isContactsAuthorized;
 /** @type {function(function(string): void, function(string): void): void} */
Diagnostic.prototype.getContactsAuthorizationStatus;
 /** @type {function(function(string): void, function(string): void): void} */
Diagnostic.prototype.requestContactsAuthorization;
 /** @type {function(function(boolean): void, function(string): void): void} */
Diagnostic.prototype.isCalendarAuthorized;
 /** @type {function(function(string): void, function(string): void): void} */
Diagnostic.prototype.getCalendarAuthorizationStatus;
 /** @type {function(function(string): void, function(string): void): void} */
Diagnostic.prototype.requestCalendarAuthorization;
 /** @type {function(function(): void, function(string): void): void} */
Diagnostic.prototype.switchToSettings;
 /** @type {function(function(string): void, function(string): void): void} */
Diagnostic.prototype.getBluetoothState;
 /** @type {function(function(string): void): void} */
Diagnostic.prototype.registerBluetoothStateChangeHandler;
 /** @type {function(function(string): void): void} */
Diagnostic.prototype.registerLocationStateChangeHandler;
 /** @type {function(function(boolean): void, function(string): void): void} */
Diagnostic.prototype.isGpsLocationAvailable;
 /** @type {function(function(boolean): void, function(string): void): void} */
Diagnostic.prototype.isGpsLocationEnabled;
 /** @type {function(function(boolean): void, function(string): void): void} */
Diagnostic.prototype.isNetworkLocationAvailable;
 /** @type {function(function(boolean): void, function(string): void): void} */
Diagnostic.prototype.isNetworkLocationEnabled;
 /** @type {function(function(string): void, function(string): void): void} */
Diagnostic.prototype.getLocationMode;
 /** @type {function(function(string): void, function(string): void, string): void} */
Diagnostic.prototype.getPermissionAuthorizationStatus;
 /** @type {function(function(!Array<string>): void, function(string): void, !Array<string>): void} */
Diagnostic.prototype.getPermissionsAuthorizationStatus;
 /** @type {function(function(string): void, function(string): void, string): void} */
Diagnostic.prototype.requestRuntimePermission;
 /** @type {function(function(!Array<string>): void, function(string): void, !Array<string>): void} */
Diagnostic.prototype.requestRuntimePermissions;
 /** @type {function(): boolean} */
Diagnostic.prototype.isRequestingPermission;
 /** @type {function(function(?): void): void} */
Diagnostic.prototype.registerPermissionRequestCompleteHandler;
 /** @type {function(function(boolean): void, function(string): void): void} */
Diagnostic.prototype.isBluetoothEnabled;
 /** @type {function(function(boolean): void, function(string): void): void} */
Diagnostic.prototype.hasBluetoothSupport;
 /** @type {function(function(boolean): void, function(string): void): void} */
Diagnostic.prototype.hasBluetoothLESupport;
 /** @type {function(function(boolean): void, function(string): void): void} */
Diagnostic.prototype.hasBluetoothLEPeripheralSupport;
 /** @type {function(function(boolean): void, function(string): void): void} */
Diagnostic.prototype.isExternalStorageAuthorized;
 /** @type {function(function(string): void, function(string): void): void} */
Diagnostic.prototype.getExternalStorageAuthorizationStatus;
 /** @type {function(function(string): void, function(string): void): void} */
Diagnostic.prototype.requestExternalStorageAuthorization;
 /** @type {function(function(?): void, function(string): void): void} */
Diagnostic.prototype.getExternalSdCardDetails;
 /** @type {function(function(boolean): void, function(string): void): void} */
Diagnostic.prototype.isNFCPresent;
 /** @type {function(function(boolean): void, function(string): void): void} */
Diagnostic.prototype.isNFCEnabled;
 /** @type {function(function(boolean): void, function(string): void): void} */
Diagnostic.prototype.isNFCAvailable;
 /** @type {function(function(string): void): void} */
Diagnostic.prototype.registerNFCStateChangeHandler;
 /** @type {function(function(boolean): void, function(string): void): void} */
Diagnostic.prototype.isCameraRollAuthorized;
 /** @type {function(function(string): void, function(string): void): void} */
Diagnostic.prototype.getCameraRollAuthorizationStatus;
 /** @type {function(function(string): void, function(string): void): void} */
Diagnostic.prototype.requestCameraRollAuthorization;
 /** @type {function(function(boolean): void, function(string): void): void} */
Diagnostic.prototype.isRemoteNotificationsEnabled;
 /** @type {function(function(boolean): void, function(string): void): void} */
Diagnostic.prototype.isRegisteredForRemoteNotifications;
 /** @type {function(function(?): void, function(string): void): void} */
Diagnostic.prototype.getRemoteNotificationTypes;
 /** @type {function(function(boolean): void, function(string): void): void} */
Diagnostic.prototype.isRemindersAuthorized;
 /** @type {function(function(string): void, function(string): void): void} */
Diagnostic.prototype.getRemindersAuthorizationStatus;
 /** @type {function(function(string): void, function(string): void): void} */
Diagnostic.prototype.requestRemindersAuthorization;
 /** @type {function(function(boolean): void, function(string): void): void} */
Diagnostic.prototype.isBackgroundRefreshAuthorized;
 /** @type {function(function(string): void, function(string): void): void} */
Diagnostic.prototype.getBackgroundRefreshStatus;
 /** @type {function(function(): void, function(string): void): void} */
Diagnostic.prototype.requestBluetoothAuthorization;
 /** @type {function(function(boolean): void, function(string): void): void} */
Diagnostic.prototype.isMotionAvailable;
 /** @type {function(function(boolean): void, function(string): void): void} */
Diagnostic.prototype.isMotionRequestOutcomeAvailable;
 /** @type {function(function(string): void, function(string): void): void} */
Diagnostic.prototype.requestAndCheckMotionAuthorization;
 /** @type {!Diagnostic} */
CordovaPlugins.prototype.diagnostic;
