/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/paypal-rest-sdk/index.d.ts:

/* TODO: ImportEqualsDeclaration in  */

/**
 * @param {?} opts
 * @return {string}
 */
function configure(opts) {}
/**
 * @record
 * @struct
 */
function PayPalError() {}
 /** @type {string} */
PayPalError.prototype.name;
 /** @type {string} */
PayPalError.prototype.message;
 /** @type {!Array<?>} */
PayPalError.prototype.details;
 /** @type {string} */
PayPalError.prototype.information_link;
 /** @type {string} */
PayPalError.prototype.debug_id;

/** @typedef {?} */
var CallbackFunction;
/**
 * @record
 * @struct
 */
function SDKError() {}
 /** @type {number} */
SDKError.prototype.httpStatusCode;
 /** @type {string} */
SDKError.prototype.message;
 /** @type {?} */
SDKError.prototype.response;
 /** @type {string} */
SDKError.prototype.response_stringified;
 /** @type {string} */
SDKError.prototype.stack;
/**
 * @record
 * @struct
 */
function ErrorDetails() {}
 /** @type {string} */
ErrorDetails.prototype.field;
 /** @type {string} */
ErrorDetails.prototype.issue;
/**
 * @record
 * @struct
 */
function Address() {}
 /** @type {string} */
Address.prototype.line1;
 /** @type {string} */
Address.prototype.line2;
 /** @type {string} */
Address.prototype.city;
 /** @type {string} */
Address.prototype.country_code;
 /** @type {string} */
Address.prototype.postal_code;
 /** @type {string} */
Address.prototype.state;
 /** @type {string} */
Address.prototype.phone;
 /** @type {string} */
Address.prototype.normalization_status;
 /** @type {string} */
Address.prototype.type;
 /** @type {string} */
Address.prototype.recipient_name;
/**
 * @record
 * @struct
 */
function Phone() {}
 /** @type {string} */
Phone.prototype.country_code;
 /** @type {string} */
Phone.prototype.national_number;
/**
 * @record
 * @struct
 */
function ConfigureOptions() {}
 /** @type {string} */
ConfigureOptions.prototype.client_id;
 /** @type {string} */
ConfigureOptions.prototype.client_secret;
 /** @type {string} */
ConfigureOptions.prototype.mode;
 /** @type {string} */
ConfigureOptions.prototype.schema;
 /** @type {string} */
ConfigureOptions.prototype.host;
 /** @type {string} */
ConfigureOptions.prototype.port;
 /** @type {string} */
ConfigureOptions.prototype.openid_connect_schema;
 /** @type {string} */
ConfigureOptions.prototype.openid_connect_host;
 /** @type {string} */
ConfigureOptions.prototype.openid_connect_port;
 /** @type {string} */
ConfigureOptions.prototype.authorize_url;
 /** @type {string} */
ConfigureOptions.prototype.logout_url;
 /** @type {?} */
ConfigureOptions.prototype.headers;
/**
 * @record
 * @struct
 */
function FraudManagementFiltersDetails() {}
 /** @type {string} */
FraudManagementFiltersDetails.prototype.filter_type;
 /** @type {string} */
FraudManagementFiltersDetails.prototype.filter_id;
 /** @type {string} */
FraudManagementFiltersDetails.prototype.name;
 /** @type {string} */
FraudManagementFiltersDetails.prototype.description;
/**
 * @record
 * @struct
 */
function Response() {}
 /** @type {number} */
Response.prototype.httpStatusCode;
 /** @type {string} */
Response.prototype.create_time;
 /** @type {number} */
Response.prototype.count;
 /** @type {number} */
Response.prototype.total_count;
/**
 * @record
 * @struct
 */
function FilterOptions() {}
 /** @type {number} */
FilterOptions.prototype.page_size;
 /** @type {string} */
FilterOptions.prototype.start_time;
 /** @type {string} */
FilterOptions.prototype.end_time;
/**
 * @record
 * @struct
 */
function UpdateRequest() {}
 /** @type {string} */
UpdateRequest.prototype.op;
 /** @type {string} */
UpdateRequest.prototype.path;
 /** @type {?} */
UpdateRequest.prototype.value;
/**
 * @record
 * @struct
 */
function Amount() {}
 /** @type {string} */
Amount.prototype.currency;
 /** @type {string} */
Amount.prototype.total;
 /** @type {?} */
Amount.prototype.details;
 /** @type {string} */
ErrorDetails.prototype.field;
 /** @type {string} */
ErrorDetails.prototype.issue;
/**
 * @record
 * @struct
 */
function Currency() {}
 /** @type {string} */
Currency.prototype.currency;
 /** @type {string} */
Currency.prototype.value;
/**
 * @record
 * @struct
 */
function QueryParameters() {}
 /** @type {number} */
QueryParameters.prototype.count;
 /** @type {string} */
QueryParameters.prototype.start_id;
 /** @type {number} */
QueryParameters.prototype.start_index;
 /** @type {string} */
QueryParameters.prototype.start_time;
 /** @type {string} */
QueryParameters.prototype.end_time;
 /** @type {string} */
QueryParameters.prototype.payee_id;
 /** @type {string} */
QueryParameters.prototype.sort_by;
 /** @type {string} */
QueryParameters.prototype.sort_order;
 /** @type {string} */
QueryParameters.prototype.anchor_type;
 /** @type {number} */
QueryParameters.prototype.page_size;
 /** @type {string} */
QueryParameters.prototype.transaction_id;
 /** @type {string} */
QueryParameters.prototype.event_type;
 /** @type {string} */
QueryParameters.prototype.webhook_id;
 /** @type {number} */
QueryParameters.prototype.page;
 /** @type {boolean} */
QueryParameters.prototype.total_count_required;
/**
 * @record
 * @struct
 */
function Link() {}
 /** @type {string} */
Link.prototype.href;
 /** @type {string} */
Link.prototype.method;
 /** @type {string} */
Link.prototype.rel;
/**
 * @record
 * @struct
 */
function Transaction() {}
 /** @type {string} */
Transaction.prototype.reference_id;
 /** @type {?} */
Transaction.prototype.amount;
 /** @type {string} */
Transaction.prototype.description;
 /** @type {?} */
Transaction.prototype.item_list;
 /** @type {?} */
Transaction.prototype.payee;
 /** @type {string} */
Transaction.prototype.note_to_payee;
 /** @type {string} */
Transaction.prototype.custom;
 /** @type {string} */
Transaction.prototype.invoice_number;
 /** @type {string} */
Transaction.prototype.purchase_order;
 /** @type {string} */
Transaction.prototype.soft_descriptor;
 /** @type {?} */
Transaction.prototype.payment_options;
 /** @type {string} */
Transaction.prototype.notify_url;
 /** @type {string} */
Transaction.prototype.order_url;
 /** @type {?} */
Transaction.prototype.related_resources;
/**
 * @record
 * @struct
 */
function Payee() {}
 /** @type {string} */
Payee.prototype.email;
 /** @type {string} */
Payee.prototype.merchant_id;
 /** @type {?} */
Payee.prototype.payee_display_metadata;
/**
 * @record
 * @struct
 */
function Payment() {}
 /** @type {string} */
Payment.prototype.id;
 /** @type {string} */
Payment.prototype.intent;
 /** @type {?} */
Payment.prototype.payer;
 /** @type {!Array<?>} */
Payment.prototype.transactions;
 /** @type {string} */
Payment.prototype.state;
 /** @type {string} */
Payment.prototype.experience_profile_id;
 /** @type {string} */
Payment.prototype.note_to_payer;
 /** @type {?} */
Payment.prototype.redirect_urls;
 /** @type {string} */
Payment.prototype.failure_reason;
 /** @type {string} */
Payment.prototype.create_time;
 /** @type {string} */
Payment.prototype.update_time;
 /** @type {!Array<?>} */
Payment.prototype.links;
/**
 * @extends {Payment}
 * @extends {Response}
 * @record
 * @struct
 */
function PaymentResponse() {}
/**
 * @record
 * @struct
 */
function Resource() {}
 /** @type {string} */
Resource.prototype.id;
 /** @type {?} */
Resource.prototype.amount;
 /** @type {string} */
Resource.prototype.payment_mode;
 /** @type {string} */
Resource.prototype.state;
 /** @type {string} */
Resource.prototype.reason_code;
 /** @type {string} */
Resource.prototype.protection_eligibility;
 /** @type {string} */
Resource.prototype.protection_eligibility_type;
 /** @type {?} */
Resource.prototype.fmf_details;
 /** @type {string} */
Resource.prototype.receipt_id;
 /** @type {string} */
Resource.prototype.parent_payment;
 /** @type {?} */
Resource.prototype.processor_response;
 /** @type {string} */
Resource.prototype.create_time;
 /** @type {string} */
Resource.prototype.update_time;
 /** @type {!Array<?>} */
Resource.prototype.links;
/**
 * @extends {Resource}
 * @record
 * @struct
 */
function SaleResource() {}
 /** @type {string} */
SaleResource.prototype.purchase_unit_reference_id;
 /** @type {string} */
SaleResource.prototype.clearing_time;
 /** @type {string} */
SaleResource.prototype.payment_hold_status;
 /** @type {!Array<string>} */
SaleResource.prototype.payment_hold_reasons;
 /** @type {?} */
SaleResource.prototype.transaction_fee;
 /** @type {string} */
SaleResource.prototype.exchange_rate;
 /** @type {string} */
SaleResource.prototype.billing_agreement_id;
/**
 * @extends {Resource}
 * @record
 * @struct
 */
function AuthorizationResource() {}
 /** @type {string} */
AuthorizationResource.prototype.valid_until;
 /** @type {string} */
AuthorizationResource.prototype.update_time;
 /** @type {string} */
AuthorizationResource.prototype.reference_id;
/**
 * @extends {Resource}
 * @record
 * @struct
 */
function CaptureResource() {}
 /** @type {boolean} */
CaptureResource.prototype.is_final_capture;
 /** @type {string} */
CaptureResource.prototype.invoice_number;
 /** @type {?} */
CaptureResource.prototype.transaction_fee;
/**
 * @extends {Resource}
 * @record
 * @struct
 */
function RefundResource() {}
 /** @type {string} */
RefundResource.prototype.reason;
 /** @type {string} */
RefundResource.prototype.invoice_number;
 /** @type {string} */
RefundResource.prototype.sale_id;
 /** @type {string} */
RefundResource.prototype.capture_id;
 /** @type {string} */
RefundResource.prototype.description;
 /** @type {string} */
RefundResource.prototype.reason_code;
 /** @type {string} */
RefundResource.prototype.refund_reason_code;
 /** @type {string} */
RefundResource.prototype.refund_funding_type;
/**
 * @record
 * @struct
 */
function Item() {}
 /** @type {string} */
Item.prototype.currency;
 /** @type {string} */
Item.prototype.name;
 /** @type {string} */
Item.prototype.price;
 /** @type {number} */
Item.prototype.quantity;
 /** @type {string} */
Item.prototype.sku;
 /** @type {string} */
Item.prototype.description;
 /** @type {string} */
Item.prototype.tax;
 /** @type {string} */
Item.prototype.url;
/**
 * @record
 * @struct
 */
function RefundRequest() {}
 /** @type {?} */
RefundRequest.prototype.amount;
 /** @type {string} */
RefundRequest.prototype.description;
 /** @type {string} */
RefundRequest.prototype.refund_source;
 /** @type {string} */
RefundRequest.prototype.reason;
 /** @type {string} */
RefundRequest.prototype.invoice_number;
 /** @type {boolean} */
RefundRequest.prototype.refund_advice;
 /** @type {!Array<?>} */
RefundRequest.prototype.items;
 /** @type {?} */
RefundRequest.prototype.payer_info;
 /** @type {!Array<?>} */
RefundRequest.prototype.supplementary_data;
/**
 * @record
 * @struct
 */
function RelatedResources() {}
 /** @type {?} */
RelatedResources.prototype.sale;
 /** @type {?} */
RelatedResources.prototype.authorization;
 /** @type {?} */
RelatedResources.prototype.order;
 /** @type {?} */
RelatedResources.prototype.capture;
 /** @type {?} */
RelatedResources.prototype.refund;
/** @const */
var payment = {};
/**
 * @record
 * @struct
 */
payment.ExecuteRequest = function() {};
 /** @type {string} */
payment.ExecuteRequest.prototype.payer_id;
/**
 * @extends {SaleResource}
 * @extends {Response}
 * @record
 * @struct
 */
payment.SaleResponse = function() {};
/**
 * @extends {AuthorizationResource}
 * @extends {Response}
 * @record
 * @struct
 */
payment.AuthorizationResponse = function() {};
/**
 * @extends {CaptureResource}
 * @extends {Response}
 * @record
 * @struct
 */
payment.CaptureResponse = function() {};
/**
 * @extends {RefundResource}
 * @extends {Response}
 * @record
 * @struct
 */
payment.RefundResponse = function() {};
/**
 * @extends {Response}
 * @record
 * @struct
 */
payment.ListResponse = function() {};
 /** @type {!Array<?>} */
payment.ListResponse.prototype.payments;
 /** @type {number} */
payment.ListResponse.prototype.count;
 /** @type {string} */
payment.ListResponse.prototype.next_id;

/**
 * @param {?} data
 * @param {(!RequestOptions|?)} config
 * @param {?=} cb
 * @return {void}
 */
payment.create = function(data, config, cb) {};

/**
 * @param {string} id
 * @param {?} data
 * @param {(!RequestOptions|?)} config
 * @param {?=} cb
 * @return {void}
 */
payment.execute = function(id, data, config, cb) {};

/**
 * @param {string} id
 * @param {(!RequestOptions|?)} config
 * @param {?=} cb
 * @return {void}
 */
payment.get = function(id, config, cb) {};

/**
 * @param {(!RequestOptions|?)} data
 * @param {(!RequestOptions|?)=} config
 * @param {?=} cb
 * @return {void}
 */
payment.list = function(data, config, cb) {};

/**
 * @param {string} id
 * @param {!Array<?>} data
 * @param {(!RequestOptions|?)=} config
 * @param {?=} cb
 * @return {void}
 */
payment.update = function(id, data, config, cb) {};
/** @const */
var notification = {};
/**
 * @record
 * @struct
 */
notification.NotificationEventType = function() {};
 /** @type {string} */
notification.NotificationEventType.prototype.description;
 /** @type {string} */
notification.NotificationEventType.prototype.name;
 /** @type {string} */
notification.NotificationEventType.prototype.status;
/**
 * @extends {Response}
 * @record
 * @struct
 */
notification.EventTypesResponse = function() {};
 /** @type {!Array<?>} */
notification.EventTypesResponse.prototype.event_types;
/** @const */
notification.webhook = {};
/**
 * @record
 * @struct
 */
notification.webhook.Webhook = function() {};
 /** @type {!Array<?>} */
notification.webhook.Webhook.prototype.event_types;
 /** @type {string} */
notification.webhook.Webhook.prototype.id;
 /** @type {!Array<?>} */
notification.webhook.Webhook.prototype.links;
 /** @type {string} */
notification.webhook.Webhook.prototype.url;
/**
 * @extends {Response}
 * @record
 * @struct
 */
notification.webhook.WebhookListResponse = function() {};
 /** @type {!Array<?>} */
notification.webhook.WebhookListResponse.prototype.webhooks;

/**
 * @param {(!RequestOptions|?)} data
 * @param {(!RequestOptions|?)=} config
 * @param {?=} cb
 * @return {void}
 */
notification.webhook.list = function(data, config, cb) {};

/**
 * @param {?} data
 * @param {(!RequestOptions|?)} config
 * @param {?=} cb
 * @return {void}
 */
notification.webhook.create = function(data, config, cb) {};

/**
 * @param {string} id
 * @param {!Array<?>} data
 * @param {(!RequestOptions|?)} config
 * @param {?=} cb
 * @return {void}
 */
notification.webhook.replace = function(id, data, config, cb) {};

/**
 * @param {string} id
 * @param {(!RequestOptions|?)} config
 * @param {?=} cb
 * @return {void}
 */
notification.webhook.del = function(id, config, cb) {};

/**
 * @param {string} id
 * @param {(!RequestOptions|?)} config
 * @param {?=} cb
 * @return {void}
 */
notification.webhook.get = function(id, config, cb) {};

/**
 * @param {string} id
 * @param {(!RequestOptions|?)} config
 * @param {?=} cb
 * @return {void}
 */
notification.webhook.eventTypes = function(id, config, cb) {};
/** @const */
notification.webhookEvent = {};
/**
 * @record
 * @struct
 */
notification.webhookEvent.WebhookEvent = function() {};
 /** @type {string} */
notification.webhookEvent.WebhookEvent.prototype.id;
 /** @type {string} */
notification.webhookEvent.WebhookEvent.prototype.create_time;
 /** @type {string} */
notification.webhookEvent.WebhookEvent.prototype.resource_type;
 /** @type {string} */
notification.webhookEvent.WebhookEvent.prototype.event_version;
 /** @type {string} */
notification.webhookEvent.WebhookEvent.prototype.event_type;
 /** @type {string} */
notification.webhookEvent.WebhookEvent.prototype.summary;
 /** @type {?} */
notification.webhookEvent.WebhookEvent.prototype.resource;
/**
 * @extends {Response}
 * @record
 * @struct
 */
notification.webhookEvent.WebhookEventListResponse = function() {};
 /** @type {!Array<?>} */
notification.webhookEvent.WebhookEventListResponse.prototype.events;
/**
 * @record
 * @struct
 */
notification.webhookEvent.WebhookVerifyResponse = function() {};
 /** @type {string} */
notification.webhookEvent.WebhookVerifyResponse.prototype.verification_status;

/**
 * @param {string} id
 * @param {(!RequestOptions|?)} config
 * @param {?=} cb
 * @return {void}
 */
notification.webhookEvent.get = function(id, config, cb) {};

/**
 * @param {?} body
 * @param {?} cb
 * @return {void}
 */
notification.webhookEvent.getAndVerify = function(body, cb) {};

/**
 * @param {(!RequestOptions|?)} data
 * @param {(!RequestOptions|?)=} config
 * @param {?=} cb
 * @return {void}
 */
notification.webhookEvent.list = function(data, config, cb) {};

/**
 * @param {string} id
 * @param {(!RequestOptions|?)} config
 * @param {?=} cb
 * @return {void}
 */
notification.webhookEvent.resend = function(id, config, cb) {};

/**
 * @param {?} headers
 * @param {?} body
 * @param {string} id
 * @param {?} cb
 * @return {void}
 */
notification.webhookEvent.verify = function(headers, body, id, cb) {};
/** @const */
notification.webhookEventType = {};

/**
 * @param {(!RequestOptions|?)} data
 * @param {(!RequestOptions|?)=} config
 * @param {?=} cb
 * @return {void}
 */
notification.webhookEventType.list = function(data, config, cb) {};
/** @const */
var authorization = {};
/**
 * @record
 * @struct
 */
authorization.CaptureRequest = function() {};
 /** @type {?} */
authorization.CaptureRequest.prototype.amount;
 /** @type {boolean} */
authorization.CaptureRequest.prototype.is_final_capture;
 /** @type {string} */
authorization.CaptureRequest.prototype.invoice_number;

/**
 * @param {string} id
 * @param {(!RequestOptions|?)} config
 * @param {?=} cb
 * @return {void}
 */
authorization.get = function(id, config, cb) {};

/**
 * @param {string} id
 * @param {(!RequestOptions|?)} data
 * @param {(!RequestOptions|?)=} config
 * @param {?=} cb
 * @return {void}
 */
authorization.capture = function(id, data, config, cb) {};

/**
 * @param {string} id
 * @param {(?|!RequestOptions)} data
 * @param {(!RequestOptions|?)=} config
 * @param {?=} cb
 * @return {void}
 */
authorization.reauthorize = function(id, data, config, cb) {};
/** @const */
var capture = {};

/**
 * @param {string} id
 * @param {(!RequestOptions|?)} config
 * @param {?=} cb
 * @return {void}
 */
capture.get = function(id, config, cb) {};

/**
 * @param {string} id
 * @param {(!RequestOptions|?)} data
 * @param {(!RequestOptions|?)=} config
 * @param {?=} cb
 * @return {void}
 */
capture.refund = function(id, data, config, cb) {};
/** @const */
var invoice = {};
/**
 * @record
 * @struct
 */
invoice.EmailRequest = function() {};
 /** @type {string} */
invoice.EmailRequest.prototype.subject;
 /** @type {string} */
invoice.EmailRequest.prototype.note;
 /** @type {boolean} */
invoice.EmailRequest.prototype.send_to_merchant;
 /** @type {boolean} */
invoice.EmailRequest.prototype.send_to_payer;
 /** @type {!Array<string>} */
invoice.EmailRequest.prototype.cc_emails;
/**
 * @record
 * @struct
 */
invoice.Invoice = function() {};
 /** @type {boolean} */
invoice.Invoice.prototype.allow_tip;
 /** @type {?} */
invoice.Invoice.prototype.billing_info;
 /** @type {?} */
invoice.Invoice.prototype.discount;
 /** @type {?} */
invoice.Invoice.prototype.shipping_cost;
 /** @type {string} */
invoice.Invoice.prototype.id;
 /** @type {string} */
invoice.Invoice.prototype.invoice_date;
 /** @type {!Array<?>} */
invoice.Invoice.prototype.items;
 /** @type {?} */
invoice.Invoice.prototype.merchant_info;
 /** @type {?} */
invoice.Invoice.prototype.metadata;
 /** @type {string} */
invoice.Invoice.prototype.note;
 /** @type {string} */
invoice.Invoice.prototype.number;
 /** @type {?} */
invoice.Invoice.prototype.payment_term;
 /** @type {string} */
invoice.Invoice.prototype.reference;
 /** @type {?} */
invoice.Invoice.prototype.shipping_info;
 /** @type {?} */
invoice.Invoice.prototype.phone;
 /** @type {string} */
invoice.Invoice.prototype.status;
 /** @type {boolean} */
invoice.Invoice.prototype.tax_calculated_after_discount;
 /** @type {boolean} */
invoice.Invoice.prototype.tax_inclusive;
 /** @type {string} */
invoice.Invoice.prototype.template_id;
 /** @type {?} */
invoice.Invoice.prototype.total_amount;
 /** @type {string} */
invoice.Invoice.prototype.uri;
 /** @type {!Array<?>} */
invoice.Invoice.prototype.cc_info;
 /** @type {?} */
invoice.Invoice.prototype.custom;
 /** @type {boolean} */
invoice.Invoice.prototype.allow_partial_payment;
 /** @type {?} */
invoice.Invoice.prototype.minimum_amount_due;
 /** @type {string} */
invoice.Invoice.prototype.terms;
 /** @type {string} */
invoice.Invoice.prototype.merchant_memo;
 /** @type {string} */
invoice.Invoice.prototype.logo_url;
 /** @type {!Array<?>} */
invoice.Invoice.prototype.payments;
 /** @type {!Array<?>} */
invoice.Invoice.prototype.refunds;
 /** @type {?} */
invoice.Invoice.prototype.payment_summary;
 /** @type {?} */
invoice.Invoice.prototype.refunded_amount;
 /** @type {?} */
invoice.Invoice.prototype.paid_amount;
 /** @type {!Array<?>} */
invoice.Invoice.prototype.attachments;
 /** @type {!Array<?>} */
invoice.Invoice.prototype.links;
/**
 * @extends {invoice.Invoice}
 * @extends {Response}
 * @record
 * @struct
 */
invoice.InvoiceResponse = function() {};
/**
 * @record
 * @struct
 */
invoice.FileAttachment = function() {};
 /** @type {string} */
invoice.FileAttachment.prototype.name;
 /** @type {string} */
invoice.FileAttachment.prototype.url;
/**
 * @extends {invoice.Person}
 * @record
 * @struct
 */
invoice.BillingInfo = function() {};
 /** @type {string} */
invoice.BillingInfo.prototype.email;
 /** @type {string} */
invoice.BillingInfo.prototype.language;
 /** @type {string} */
invoice.BillingInfo.prototype.notification_channel;
/**
 * @record
 * @struct
 */
invoice.InvoiceItem = function() {};
 /** @type {string} */
invoice.InvoiceItem.prototype.name;
 /** @type {string} */
invoice.InvoiceItem.prototype.description;
 /** @type {number} */
invoice.InvoiceItem.prototype.quantity;
 /** @type {?} */
invoice.InvoiceItem.prototype.unit_price;
 /** @type {?} */
invoice.InvoiceItem.prototype.tax;
 /** @type {string} */
invoice.InvoiceItem.prototype.date;
 /** @type {?} */
invoice.InvoiceItem.prototype.discount;
 /** @type {string} */
invoice.InvoiceItem.prototype.unit_of_measure;
/**
 * @record
 * @struct
 */
invoice.CustomAmount = function() {};
 /** @type {string} */
invoice.CustomAmount.prototype.label;
 /** @type {?} */
invoice.CustomAmount.prototype.amount;
/**
 * @record
 * @struct
 */
invoice.ShippingCost = function() {};
 /** @type {?} */
invoice.ShippingCost.prototype.amount;
 /** @type {?} */
invoice.ShippingCost.prototype.tax;
/**
 * @extends {invoice.Cost}
 * @record
 * @struct
 */
invoice.Tax = function() {};
 /** @type {string} */
invoice.Tax.prototype.id;
 /** @type {string} */
invoice.Tax.prototype.name;
/**
 * @record
 * @struct
 */
invoice.Cost = function() {};
 /** @type {number} */
invoice.Cost.prototype.percent;
 /** @type {?} */
invoice.Cost.prototype.amount;
/**
 * @record
 * @struct
 */
invoice.PaymentTerm = function() {};
 /** @type {string} */
invoice.PaymentTerm.prototype.term_type;
 /** @type {string} */
invoice.PaymentTerm.prototype.due_date;
/**
 * @record
 * @struct
 */
invoice.Person = function() {};
 /** @type {string} */
invoice.Person.prototype.email;
 /** @type {string} */
invoice.Person.prototype.first_name;
 /** @type {string} */
invoice.Person.prototype.last_name;
 /** @type {string} */
invoice.Person.prototype.business_name;
 /** @type {?} */
invoice.Person.prototype.phone;
 /** @type {string} */
invoice.Person.prototype.website;
 /** @type {?} */
invoice.Person.prototype.address;
/**
 * @extends {invoice.Person}
 * @record
 * @struct
 */
invoice.Merchant = function() {};
 /** @type {string} */
invoice.Merchant.prototype.tax_id;
 /** @type {?} */
invoice.Merchant.prototype.fax;
 /** @type {string} */
invoice.Merchant.prototype.additional_info_label;
 /** @type {string} */
invoice.Merchant.prototype.additional_info;
/**
 * @extends {invoice.Person}
 * @record
 * @struct
 */
invoice.Participant = function() {};
 /** @type {string} */
invoice.Participant.prototype.email;
 /** @type {?} */
invoice.Participant.prototype.fax;
 /** @type {string} */
invoice.Participant.prototype.additional_info;
/**
 * @record
 * @struct
 */
invoice.Detail = function() {};
 /** @type {string} */
invoice.Detail.prototype.type;
 /** @type {string} */
invoice.Detail.prototype.transaction_id;
 /** @type {string} */
invoice.Detail.prototype.date;
 /** @type {string} */
invoice.Detail.prototype.note;
 /** @type {?} */
invoice.Detail.prototype.amount;
/**
 * @extends {invoice.Detail}
 * @record
 * @struct
 */
invoice.PaymentDetail = function() {};
 /** @type {string} */
invoice.PaymentDetail.prototype.transaction_type;
 /** @type {string} */
invoice.PaymentDetail.prototype.method;
/**
 * @record
 * @struct
 */
invoice.NumberResponse = function() {};
 /** @type {string} */
invoice.NumberResponse.prototype.number;
/**
 * @record
 * @struct
 */
invoice.QrResponse = function() {};
 /** @type {string} */
invoice.QrResponse.prototype.image;
/**
 * @extends {Response}
 * @record
 * @struct
 */
invoice.ListResponse = function() {};
 /** @type {!Array<?>} */
invoice.ListResponse.prototype.invoices;
/**
 * @record
 * @struct
 */
invoice.PayRequest = function() {};
 /** @type {string} */
invoice.PayRequest.prototype.date;
 /** @type {string} */
invoice.PayRequest.prototype.method;
 /** @type {string} */
invoice.PayRequest.prototype.note;
 /** @type {?} */
invoice.PayRequest.prototype.amount;
/**
 * @record
 * @struct
 */
invoice.RefundRequest = function() {};
 /** @type {string} */
invoice.RefundRequest.prototype.date;
 /** @type {string} */
invoice.RefundRequest.prototype.note;
 /** @type {?} */
invoice.RefundRequest.prototype.amount;
/**
 * @record
 * @struct
 */
invoice.SearchRequest = function() {};
 /** @type {string} */
invoice.SearchRequest.prototype.email;
 /** @type {string} */
invoice.SearchRequest.prototype.recipient_first_name;
 /** @type {string} */
invoice.SearchRequest.prototype.recipient_last_name;
 /** @type {string} */
invoice.SearchRequest.prototype.recipient_business_name;
 /** @type {string} */
invoice.SearchRequest.prototype.number;
 /** @type {string} */
invoice.SearchRequest.prototype.status;
 /** @type {?} */
invoice.SearchRequest.prototype.lower_total_amount;
 /** @type {?} */
invoice.SearchRequest.prototype.upper_total_amount;
 /** @type {string} */
invoice.SearchRequest.prototype.start_invoice_date;
 /** @type {string} */
invoice.SearchRequest.prototype.end_invoice_date;
 /** @type {string} */
invoice.SearchRequest.prototype.start_due_date;
 /** @type {string} */
invoice.SearchRequest.prototype.end_due_date;
 /** @type {string} */
invoice.SearchRequest.prototype.start_payment_date;
 /** @type {string} */
invoice.SearchRequest.prototype.end_payment_date;
 /** @type {string} */
invoice.SearchRequest.prototype.start_creation_date;
 /** @type {string} */
invoice.SearchRequest.prototype.end_creation_date;
 /** @type {number} */
invoice.SearchRequest.prototype.page;
 /** @type {number} */
invoice.SearchRequest.prototype.page_size;
 /** @type {boolean} */
invoice.SearchRequest.prototype.total_count_required;
 /** @type {boolean} */
invoice.SearchRequest.prototype.archived;

/**
 * @param {string} id
 * @param {(!RequestOptions|?)} data
 * @param {(!RequestOptions|?)=} config
 * @param {?=} cb
 * @return {void}
 */
invoice.cancel = function(id, data, config, cb) {};

/**
 * @param {?} data
 * @param {(!RequestOptions|?)} config
 * @param {?=} cb
 * @return {void}
 */
invoice.create = function(data, config, cb) {};

/**
 * @param {string} id
 * @param {(!RequestOptions|?)} config
 * @param {?=} cb
 * @return {void}
 */
invoice.del = function(id, config, cb) {};

/**
 * @param {string} id
 * @param {string} trxid
 * @param {(!RequestOptions|?)} config
 * @param {?=} cb
 * @return {void}
 */
invoice.deleteExternalPayment = function(id, trxid, config, cb) {};

/**
 * @param {string} id
 * @param {string} trxid
 * @param {(!RequestOptions|?)} config
 * @param {?=} cb
 * @return {void}
 */
invoice.deleteExternalRefund = function(id, trxid, config, cb) {};

/**
 * @param {(!RequestOptions|?)} config
 * @param {?=} cb
 * @return {void}
 */
invoice.generateNumber = function(config, cb) {};

/**
 * @param {string} id
 * @param {(!RequestOptions|?)} config
 * @param {?=} cb
 * @return {void}
 */
invoice.get = function(id, config, cb) {};

/**
 * @param {(!RequestOptions|?)} data
 * @param {(!RequestOptions|?)=} config
 * @param {?=} cb
 * @return {void}
 */
invoice.list = function(data, config, cb) {};

/**
 * @param {string} id
 * @param {number} height
 * @param {number} width
 * @param {(!RequestOptions|?)} config
 * @param {?=} cb
 * @return {void}
 */
invoice.qrCode = function(id, height, width, config, cb) {};

/**
 * @param {string} id
 * @param {?} data
 * @param {(!RequestOptions|?)} config
 * @param {?=} cb
 * @return {void}
 */
invoice.recordPayment = function(id, data, config, cb) {};

/**
 * @param {string} id
 * @param {?} data
 * @param {(!RequestOptions|?)} config
 * @param {?=} cb
 * @return {void}
 */
invoice.recordRefund = function(id, data, config, cb) {};

/**
 * @param {string} id
 * @param {(!RequestOptions|?)} data
 * @param {(!RequestOptions|?)=} config
 * @param {?=} cb
 * @return {void}
 */
invoice.remind = function(id, data, config, cb) {};

/**
 * @param {?} data
 * @param {(!RequestOptions|?)} config
 * @param {?=} cb
 * @return {void}
 */
invoice.search = function(data, config, cb) {};

/**
 * @param {string} id
 * @param {(!RequestOptions|?)} config
 * @param {?=} cb
 * @return {void}
 */
invoice.send = function(id, config, cb) {};

/**
 * @param {string} id
 * @param {?} data
 * @param {(!RequestOptions|?)} config
 * @param {?=} cb
 * @return {void}
 */
invoice.update = function(id, data, config, cb) {};
/** @const */
var refund = {};

/**
 * @param {string} id
 * @param {(!RequestOptions|?)} config
 * @param {?=} cb
 * @return {void}
 */
refund.get = function(id, config, cb) {};
/** @const */
var sale = {};

/**
 * @param {string} id
 * @param {(!RequestOptions|?)} config
 * @param {?=} cb
 * @return {void}
 */
sale.get = function(id, config, cb) {};

/**
 * @param {string} id
 * @param {(!RequestOptions|?)} data
 * @param {(!RequestOptions|?)=} config
 * @param {?=} cb
 * @return {void}
 */
sale.refund = function(id, data, config, cb) {};
/** @const */
var billingAgreement = {};

/**
 * @param {string} id
 * @param {?} data
 * @param {?=} config
 * @param {?=} cb
 * @return {void}
 */
billingAgreement.billBalance = function(id, data, config, cb) {};

/**
 * @param {string} id
 * @param {?} data
 * @param {?=} config
 * @param {?=} cb
 * @return {void}
 */
billingAgreement.cancel = function(id, data, config, cb) {};

/**
 * @param {?} data
 * @param {?} config
 * @param {?=} cb
 * @return {void}
 */
billingAgreement.create = function(data, config, cb) {};

/**
 * @param {string} id
 * @param {?} data
 * @param {?=} config
 * @param {?=} cb
 * @return {void}
 */
billingAgreement.execute = function(id, data, config, cb) {};

/**
 * @param {string} id
 * @param {?} config
 * @param {?=} cb
 * @return {void}
 */
billingAgreement.get = function(id, config, cb) {};

/**
 * @param {string} id
 * @param {?} data
 * @param {?=} config
 * @param {?=} cb
 * @return {void}
 */
billingAgreement.reactivate = function(id, data, config, cb) {};

/**
 * @param {string} id
 * @param {?} start_date
 * @param {?=} end_date
 * @param {?=} config
 * @param {?=} cb
 * @return {void}
 */
billingAgreement.searchTransactions = function(id, start_date, end_date, config, cb) {};

/**
 * @param {string} id
 * @param {?} data
 * @param {?=} config
 * @param {?=} cb
 * @return {void}
 */
billingAgreement.setBalance = function(id, data, config, cb) {};

/**
 * @param {string} id
 * @param {?} data
 * @param {?=} config
 * @param {?=} cb
 * @return {void}
 */
billingAgreement.suspend = function(id, data, config, cb) {};

/**
 * @param {string} id
 * @param {?} data
 * @param {?=} config
 * @param {?=} cb
 * @return {void}
 */
billingAgreement.update = function(id, data, config, cb) {};
/** @const */
var billingPlan = {};

/**
 * @param {string} id
 * @param {?} config
 * @param {?=} cb
 * @return {void}
 */
billingPlan.activate = function(id, config, cb) {};

/**
 * @param {?} data
 * @param {?} config
 * @param {?=} cb
 * @return {void}
 */
billingPlan.create = function(data, config, cb) {};

/**
 * @param {string} id
 * @param {?} config
 * @param {?=} cb
 * @return {void}
 */
billingPlan.get = function(id, config, cb) {};

/**
 * @param {?} data
 * @param {?=} config
 * @param {?=} cb
 * @return {void}
 */
billingPlan.list = function(data, config, cb) {};

/**
 * @param {string} id
 * @param {?} data
 * @param {?} config
 * @param {?=} cb
 * @return {void}
 */
billingPlan.update = function(id, data, config, cb) {};
/** @const */
var invoiceTemplate = {};

/**
 * @param {?} data
 * @param {?} config
 * @param {?=} cb
 * @return {void}
 */
invoiceTemplate.create = function(data, config, cb) {};

/**
 * @param {string} id
 * @param {?} config
 * @param {?=} cb
 * @return {void}
 */
invoiceTemplate.get = function(id, config, cb) {};

/**
 * @param {?} data
 * @param {?=} config
 * @param {?=} cb
 * @return {void}
 */
invoiceTemplate.list = function(data, config, cb) {};

/**
 * @param {string} id
 * @param {?} data
 * @param {?} config
 * @param {?=} cb
 * @return {void}
 */
invoiceTemplate.update = function(id, data, config, cb) {};
/** @const */
var order = {};

/**
 * @param {string} id
 * @param {?} data
 * @param {?} config
 * @param {?=} cb
 * @return {void}
 */
order.authorize = function(id, data, config, cb) {};

/**
 * @param {string} id
 * @param {?} config
 * @param {?=} cb
 * @return {void}
 */
order.get = function(id, config, cb) {};

/**
 * @param {string} id
 * @param {?} data
 * @param {?} config
 * @param {?=} cb
 * @return {void}
 */
order.capture = function(id, data, config, cb) {};
/** @const */
var payout = {};

/**
 * @param {?} data
 * @param {?} sync_mode
 * @param {?=} config
 * @param {?=} cb
 * @return {void}
 */
payout.create = function(data, sync_mode, config, cb) {};

/**
 * @param {string} id
 * @param {?} config
 * @param {?=} cb
 * @return {void}
 */
payout.get = function(id, config, cb) {};
/** @const */
var payoutItem = {};

/**
 * @param {string} id
 * @param {?} config
 * @param {?=} cb
 * @return {void}
 */
payoutItem.cancel = function(id, config, cb) {};

/**
 * @param {string} id
 * @param {?} config
 * @param {?=} cb
 * @return {void}
 */
payoutItem.get = function(id, config, cb) {};
/** @const */
var webProfile = {};

/**
 * @param {?} data
 * @param {?} config
 * @param {?=} cb
 * @return {void}
 */
webProfile.create = function(data, config, cb) {};

/**
 * @param {string} id
 * @param {?} config
 * @param {?=} cb
 * @return {void}
 */
webProfile.del = function(id, config, cb) {};

/**
 * @param {string} id
 * @param {?} config
 * @param {?=} cb
 * @return {void}
 */
webProfile.get = function(id, config, cb) {};

/**
 * @param {?} data
 * @param {?=} config
 * @param {?=} cb
 * @return {void}
 */
webProfile.list = function(data, config, cb) {};

/**
 * @param {string} id
 * @param {?} data
 * @param {?} config
 * @param {?=} cb
 * @return {void}
 */
webProfile.replace = function(id, data, config, cb) {};

/**
 * @param {string} id
 * @param {?} data
 * @param {?} config
 * @param {?=} cb
 * @return {void}
 */
webProfile.update = function(id, data, config, cb) {};
