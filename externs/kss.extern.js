/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/kss/index.d.ts:

/**
 * Builds a styleguide given the proper options.
 * @param {!kss.KssOptions=} options
 * @return {!Promise<!kss.KssStyleguide>}
 */
function kss(options) {}
/**
 * @record
 * @struct
 */
kss.File = function() {};
 /** @type {string} */
kss.File.prototype.base;
 /** @type {string} */
kss.File.prototype.contents;
 /** @type {string} */
kss.File.prototype.path;
/**
 * @record
 * @struct
 */
kss.Source = function() {};
 /** @type {string} */
kss.Source.prototype.filename;
 /** @type {string} */
kss.Source.prototype.path;
 /** @type {number} */
kss.Source.prototype.line;
/**
 * @record
 * @struct
 */
kss.Options = function() {};
 /** @type {boolean} */
kss.Options.prototype.markdown;
 /** @type {(string|!RegExp)} */
kss.Options.prototype.mask;
 /** @type {boolean} */
kss.Options.prototype.header;
/**
 * @extends {kss.Options}
 * @record
 * @struct
 */
kss.KssOptions = function() {};
 /** @type {?} */
kss.KssOptions.prototype.builder;
 /** @type {boolean} */
kss.KssOptions.prototype.clone;
 /** @type {?} */
kss.KssOptions.prototype.custom;
 /** @type {boolean} */
kss.KssOptions.prototype.json;
 /** @type {(string|!RegExp)} */
kss.KssOptions.prototype.mask;
 /** @type {!Array<string>} */
kss.KssOptions.prototype.source;
 /** @type {boolean} */
kss.KssOptions.prototype.verbose;

/**
 * @param {...string} msg
 * @return {void}
 */
kss.KssOptions.prototype.logErrorFunction = function(msg) {};

/** @typedef {function(!Error, !kss.KssStyleguide): void} */
kss.CallbackFn;

/**
 * @constructor
 * @struct
 * @param {?=} data
 */
kss.KssStyleguide = function(data) {};

/**
 * @param {boolean} autoInit
 * @return {!kss.KssStyleguide}
 */
kss.KssStyleguide.prototype.autoInit = function(autoInit) {};

/**
 * @param {(string|!Array<string>)=} names
 * @return {!Array<string>|!kss.KssStyleguide}
 */
kss.KssStyleguide.prototype.customPropertyNames = function(names) {};

/**
 * @return {boolean}
 */
kss.KssStyleguide.prototype.hasNumericReferences = function() {};

/**
 * @return {!kss.KssStyleguide}
 */
kss.KssStyleguide.prototype.init = function() {};

/**
 * @return {string}
 */
kss.KssStyleguide.prototype.referenceDelimiter = function() {};

/**
 * @param {(string|!RegExp)|(!kss.KssSection|!Array<!kss.KssSection>)=} query_or_sections
 * @return {!Array<!kss.KssSection>|(boolean|!kss.KssSection|!Array<!kss.KssSection>)|!kss.KssStyleguide}
 */
kss.KssStyleguide.prototype.sections = function(query_or_sections) {};

/**
 * @return {?}
 */
kss.KssStyleguide.prototype.toJSON = function() {};

/**
 * @constructor
 * @struct
 * @param {?=} data
 */
kss.KssSection = function(data) {};

/**
 * @param {string} name
 * @param {?=} value
 * @return {?|!kss.KssSection}
 */
kss.KssSection.prototype.custom = function(name, value) {};

/**
 * @return {!Array<string>}
 */
kss.KssSection.prototype.customPropertyNames = function() {};

/**
 * @param {boolean=} deprecated
 * @return {boolean|!kss.KssSection}
 */
kss.KssSection.prototype.deprecated = function(deprecated) {};

/**
 * @param {number=} depth
 * @return {number|!kss.KssSection}
 */
kss.KssSection.prototype.depth = function(depth) {};

/**
 * @param {string=} description
 * @return {string|!kss.KssSection}
 */
kss.KssSection.prototype.description = function(description) {};

/**
 * @param {boolean=} experimental
 * @return {boolean|!kss.KssSection}
 */
kss.KssSection.prototype.experimental = function(experimental) {};

/**
 * @param {string=} header
 * @return {string|!kss.KssSection}
 */
kss.KssSection.prototype.header = function(header) {};

/**
 * @param {string=} markup
 * @return {(string|boolean)|!kss.KssSection}
 */
kss.KssSection.prototype.markup = function(markup) {};

/**
 * @param {(string|number)|(!kss.KssModifier|!Array<!kss.KssModifier>)=} query_or_modifiers
 * @return {!Array<!kss.KssModifier>|(boolean|!kss.KssModifier)|!kss.KssSection}
 */
kss.KssSection.prototype.modifiers = function(query_or_modifiers) {};

/**
 * @param {(string|number)|(!kss.KssParameter|!Array<!kss.KssParameter>)=} query_or_parameters
 * @return {!Array<!kss.KssParameter>|(boolean|!kss.KssParameter)|!kss.KssSection}
 */
kss.KssSection.prototype.parameters = function(query_or_parameters) {};

/**
 * @param {string=} reference
 * @return {string|!kss.KssSection}
 */
kss.KssSection.prototype.reference = function(reference) {};

/**
 * @param {string=} referenceNumber
 * @return {string|!kss.KssSection}
 */
kss.KssSection.prototype.referenceNumber = function(referenceNumber) {};

/**
 * @param {string=} referenceURI
 * @return {string|!kss.KssSection}
 */
kss.KssSection.prototype.referenceURI = function(referenceURI) {};

/**
 * @param {!kss.Source=} source
 * @return {!kss.Source|!kss.KssSection}
 */
kss.KssSection.prototype.source = function(source) {};

/**
 * @return {string}
 */
kss.KssSection.prototype.sourceFileName = function() {};

/**
 * @return {string}
 */
kss.KssSection.prototype.sourceLine = function() {};

/**
 * @param {!kss.KssStyleguide=} styleguide
 * @return {!kss.KssStyleguide|!kss.KssSection}
 */
kss.KssSection.prototype.styleGuide = function(styleguide) {};

/**
 * @return {?}
 */
kss.KssSection.prototype.toJSON = function() {};

/**
 * @param {number=} weight
 * @return {number|!kss.KssSection}
 */
kss.KssSection.prototype.weight = function(weight) {};

/**
 * @constructor
 * @struct
 * @param {?=} data
 */
kss.KssModifier = function(data) {};

/**
 * @param {string=} className
 * @return {string|!kss.KssModifier}
 */
kss.KssModifier.prototype.className = function(className) {};

/**
 * @param {string=} description
 * @return {string|!kss.KssModifier}
 */
kss.KssModifier.prototype.description = function(description) {};

/**
 * @param {string=} markup
 * @return {string|!kss.KssModifier}
 */
kss.KssModifier.prototype.markup = function(markup) {};

/**
 * @param {string=} name
 * @return {string|!kss.KssModifier}
 */
kss.KssModifier.prototype.name = function(name) {};

/**
 * @param {!kss.KssSection=} section
 * @return {!kss.KssSection|!kss.KssModifier}
 */
kss.KssModifier.prototype.section = function(section) {};

/**
 * @return {?}
 */
kss.KssModifier.prototype.toJSON = function() {};

/**
 * @constructor
 * @struct
 * @param {?=} data
 */
kss.KssParameter = function(data) {};

/**
 * @return {string}
 */
kss.KssParameter.prototype.defaultValue = function() {};

/**
 * @param {string=} description
 * @return {string|!kss.KssParameter}
 */
kss.KssParameter.prototype.description = function(description) {};

/**
 * @param {string=} name
 * @return {string|!kss.KssParameter}
 */
kss.KssParameter.prototype.name = function(name) {};

/**
 * @param {!kss.KssSection=} section
 * @return {!kss.KssSection|!kss.KssParameter}
 */
kss.KssParameter.prototype.section = function(section) {};

/**
 * @return {?}
 */
kss.KssParameter.prototype.toJSON = function() {};

/**
 * Parse a string of documented CSS, or an array of file anys with their content.
 * @param {(string|!Array<!kss.File>)} input
 * @param {!kss.Options} options
 * @return {!kss.KssStyleguide}
 */
kss.parse = function(input, options) {};

/**
 * Traverse a directory, parse its contents, and create a `KssStyleGuide`.
 * @param {(string|!Array<string>)} directory
 * @param {!kss.Options} options
 * @return {!Promise<!kss.KssStyleguide>}
 */
kss.traverse = function(directory, options) {};

/* TODO: ExportAssignment in  */
