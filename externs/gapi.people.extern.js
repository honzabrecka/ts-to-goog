/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/gapi.people/index.d.ts:
/** @const */
gapi.client.people = {};
/** @const */
gapi.client.people.people = {};
/**
 * @record
 * @struct
 */
gapi.client.people.people.GetParameters = function() {};
 /** @type {string} */
gapi.client.people.people.GetParameters.prototype.resourceName;
 /** @type {!gapi.client.people.RequestMask} */
gapi.client.people.people.GetParameters.prototype.requestMask;

/**
 * @param {!gapi.client.people.people.GetParameters} parameters
 * @return {!gapi.client.HttpRequest<!gapi.client.people.Person>}
 */
gapi.client.people.people.get = function(parameters) {};
/**
 * @record
 * @struct
 */
gapi.client.people.people.GetBatchGetParameters = function() {};
 /** @type {string} */
gapi.client.people.people.GetBatchGetParameters.prototype.resourcesName;
 /** @type {!gapi.client.people.RequestMask} */
gapi.client.people.people.GetBatchGetParameters.prototype.requestMask;

/**
 * @param {!gapi.client.people.people.GetBatchGetParameters} parameters
 * @return {!gapi.client.HttpRequest<!gapi.client.people.people.BatchGetResponse>}
 */
gapi.client.people.people.getBatchGet = function(parameters) {};
/**
 * @record
 * @struct
 */
gapi.client.people.people.BatchGetResponse = function() {};
 /** @type {!Array<!gapi.client.people.people.PersonResponse>} */
gapi.client.people.people.BatchGetResponse.prototype.responses;
/**
 * @record
 * @struct
 */
gapi.client.people.people.PersonResponse = function() {};
 /** @type {number} */
gapi.client.people.people.PersonResponse.prototype.httpStatusCode;
 /** @type {!gapi.client.people.Person} */
gapi.client.people.people.PersonResponse.prototype.person;
 /** @type {string} */
gapi.client.people.people.PersonResponse.prototype.requestedResourceName;
/** @const */
gapi.client.people.people.connections = {};

/**
 * @param {!gapi.client.people.people.connections.ListParameters} parameters
 * @return {!gapi.client.HttpRequest<!gapi.client.people.people.connections.Response>}
 */
gapi.client.people.people.connections.list = function(parameters) {};

/** @typedef {string} */
gapi.client.people.people.connections.SortOrder;
/**
 * @record
 * @struct
 */
gapi.client.people.people.connections.ListParameters = function() {};
 /** @type {string} */
gapi.client.people.people.connections.ListParameters.prototype.resourceName;
 /** @type {string} */
gapi.client.people.people.connections.ListParameters.prototype.pageToken;
 /** @type {number} */
gapi.client.people.people.connections.ListParameters.prototype.pageSize;
 /** @type {string} */
gapi.client.people.people.connections.ListParameters.prototype.sortOrder;
 /** @type {string} */
gapi.client.people.people.connections.ListParameters.prototype.syncToken;
 /** @type {!gapi.client.people.RequestMask} */
gapi.client.people.people.connections.ListParameters.prototype.requestMask;
/**
 * @record
 * @struct
 */
gapi.client.people.people.connections.Response = function() {};
 /** @type {!Array<!gapi.client.people.Person>} */
gapi.client.people.people.connections.Response.prototype.connections;
 /** @type {string} */
gapi.client.people.people.connections.Response.prototype.nextPageToken;
 /** @type {string} */
gapi.client.people.people.connections.Response.prototype.nextSyncToken;
/**
 * @record
 * @struct
 */
gapi.client.people.RequestMask = function() {};
 /** @type {string} */
gapi.client.people.RequestMask.prototype.includeField;

/** @typedef {string} */
gapi.client.people.SourceType;
/**
 * @record
 * @struct
 */
gapi.client.people.Source = function() {};
 /** @type {string} */
gapi.client.people.Source.prototype.type;
 /** @type {string} */
gapi.client.people.Source.prototype.id;
 /** @type {string} */
gapi.client.people.Source.prototype.etag;
 /** @type {string} */
gapi.client.people.Source.prototype.resourceName;

/** @typedef {string} */
gapi.client.people.ObjectType;
/**
 * @record
 * @struct
 */
gapi.client.people.PersonMetadata = function() {};
 /** @type {!Array<!gapi.client.people.Source>} */
gapi.client.people.PersonMetadata.prototype.sources;
 /** @type {!Array<string>} */
gapi.client.people.PersonMetadata.prototype.previousResourceNames;
 /** @type {!Array<string>} */
gapi.client.people.PersonMetadata.prototype.linkedPeopleResourceNames;
 /** @type {boolean} */
gapi.client.people.PersonMetadata.prototype.deleted;
 /** @type {string} */
gapi.client.people.PersonMetadata.prototype.objectType;
/**
 * @record
 * @struct
 */
gapi.client.people.FieldMetadata = function() {};
 /** @type {boolean} */
gapi.client.people.FieldMetadata.prototype.primary;
 /** @type {boolean} */
gapi.client.people.FieldMetadata.prototype.verified;
 /** @type {!gapi.client.people.Source} */
gapi.client.people.FieldMetadata.prototype.source;
/**
 * @record
 * @struct
 */
gapi.client.people.Locale = function() {};
 /** @type {!gapi.client.people.FieldMetadata} */
gapi.client.people.Locale.prototype.metadata;
 /** @type {string} */
gapi.client.people.Locale.prototype.value;
/**
 * @record
 * @struct
 */
gapi.client.people.Name = function() {};
 /** @type {!gapi.client.people.FieldMetadata} */
gapi.client.people.Name.prototype.metadata;
 /** @type {string} */
gapi.client.people.Name.prototype.displayName;
 /** @type {string} */
gapi.client.people.Name.prototype.displayNameLastFirst;
 /** @type {string} */
gapi.client.people.Name.prototype.familyName;
 /** @type {string} */
gapi.client.people.Name.prototype.givenName;
 /** @type {string} */
gapi.client.people.Name.prototype.middleName;
 /** @type {string} */
gapi.client.people.Name.prototype.honorificPrefix;
 /** @type {string} */
gapi.client.people.Name.prototype.honorificSuffix;
 /** @type {string} */
gapi.client.people.Name.prototype.phoneticFullName;
 /** @type {string} */
gapi.client.people.Name.prototype.phoneticFamilyName;
 /** @type {string} */
gapi.client.people.Name.prototype.phoneticGivenName;
 /** @type {string} */
gapi.client.people.Name.prototype.phoneticMiddleName;
 /** @type {string} */
gapi.client.people.Name.prototype.phoneticHonorificPrefix;
 /** @type {string} */
gapi.client.people.Name.prototype.phoneticHonorificSuffix;

/** @typedef {string} */
gapi.client.people.NicknameType;
/**
 * @record
 * @struct
 */
gapi.client.people.Nickname = function() {};
 /** @type {!gapi.client.people.FieldMetadata} */
gapi.client.people.Nickname.prototype.metadata;
 /** @type {string} */
gapi.client.people.Nickname.prototype.value;
 /** @type {string} */
gapi.client.people.Nickname.prototype.type;
/**
 * @record
 * @struct
 */
gapi.client.people.CoverPhoto = function() {};
 /** @type {!gapi.client.people.FieldMetadata} */
gapi.client.people.CoverPhoto.prototype.metadata;
 /** @type {string} */
gapi.client.people.CoverPhoto.prototype.url;
/**
 * @record
 * @struct
 */
gapi.client.people.Photo = function() {};
 /** @type {!gapi.client.people.FieldMetadata} */
gapi.client.people.Photo.prototype.metadata;
 /** @type {string} */
gapi.client.people.Photo.prototype.url;
/**
 * @record
 * @struct
 */
gapi.client.people.Gender = function() {};
/**
 * @record
 * @struct
 */
gapi.client.people.AgeRange = function() {};
/**
 * @record
 * @struct
 */
gapi.client.people.Birthday = function() {};
/**
 * @record
 * @struct
 */
gapi.client.people.Event = function() {};
/**
 * @record
 * @struct
 */
gapi.client.people.Address = function() {};
 /** @type {!gapi.client.people.FieldMetadata} */
gapi.client.people.Address.prototype.metadata;
 /** @type {string} */
gapi.client.people.Address.prototype.formattedValue;
 /** @type {string} */
gapi.client.people.Address.prototype.type;
 /** @type {string} */
gapi.client.people.Address.prototype.formattedType;
 /** @type {string} */
gapi.client.people.Address.prototype.poBox;
 /** @type {string} */
gapi.client.people.Address.prototype.streetAddress;
 /** @type {string} */
gapi.client.people.Address.prototype.extendedAddress;
 /** @type {string} */
gapi.client.people.Address.prototype.city;
 /** @type {string} */
gapi.client.people.Address.prototype.region;
 /** @type {string} */
gapi.client.people.Address.prototype.postalCode;
 /** @type {string} */
gapi.client.people.Address.prototype.country;
 /** @type {string} */
gapi.client.people.Address.prototype.countryCode;
/**
 * @record
 * @struct
 */
gapi.client.people.Residence = function() {};
 /** @type {!gapi.client.people.FieldMetadata} */
gapi.client.people.Residence.prototype.metadata;
 /** @type {string} */
gapi.client.people.Residence.prototype.value;
 /** @type {boolean} */
gapi.client.people.Residence.prototype.current;
/**
 * @record
 * @struct
 */
gapi.client.people.EmailAddress = function() {};
 /** @type {!gapi.client.people.FieldMetadata} */
gapi.client.people.EmailAddress.prototype.metadata;
 /** @type {string} */
gapi.client.people.EmailAddress.prototype.value;
 /** @type {string} */
gapi.client.people.EmailAddress.prototype.type;
 /** @type {string} */
gapi.client.people.EmailAddress.prototype.formattedType;
 /** @type {string} */
gapi.client.people.EmailAddress.prototype.displayName;
/**
 * @record
 * @struct
 */
gapi.client.people.PhoneNumber = function() {};
 /** @type {!gapi.client.people.FieldMetadata} */
gapi.client.people.PhoneNumber.prototype.metadata;
 /** @type {string} */
gapi.client.people.PhoneNumber.prototype.value;
 /** @type {string} */
gapi.client.people.PhoneNumber.prototype.canonicalForm;
 /** @type {string} */
gapi.client.people.PhoneNumber.prototype.type;
 /** @type {string} */
gapi.client.people.PhoneNumber.prototype.formattedType;
/**
 * @record
 * @struct
 */
gapi.client.people.ImClient = function() {};
/**
 * @record
 * @struct
 */
gapi.client.people.Tagline = function() {};
/**
 * @record
 * @struct
 */
gapi.client.people.Biography = function() {};
/**
 * @record
 * @struct
 */
gapi.client.people.Url = function() {};
/**
 * @record
 * @struct
 */
gapi.client.people.Organization = function() {};
/**
 * @record
 * @struct
 */
gapi.client.people.Occupation = function() {};
/**
 * @record
 * @struct
 */
gapi.client.people.Interest = function() {};
/**
 * @record
 * @struct
 */
gapi.client.people.Skill = function() {};
/**
 * @record
 * @struct
 */
gapi.client.people.BraggingRights = function() {};
/**
 * @record
 * @struct
 */
gapi.client.people.Relation = function() {};
/**
 * @record
 * @struct
 */
gapi.client.people.RelationshipInterest = function() {};
/**
 * @record
 * @struct
 */
gapi.client.people.RelationshipStatus = function() {};
/**
 * @record
 * @struct
 */
gapi.client.people.Membership = function() {};
/**
 * @record
 * @struct
 */
gapi.client.people.Person = function() {};
 /** @type {string} */
gapi.client.people.Person.prototype.resourceName;
 /** @type {string} */
gapi.client.people.Person.prototype.etag;
 /** @type {!gapi.client.people.PersonMetadata} */
gapi.client.people.Person.prototype.metadata;
 /** @type {!Array<!gapi.client.people.Locale>} */
gapi.client.people.Person.prototype.locales;
 /** @type {!Array<!gapi.client.people.Name>} */
gapi.client.people.Person.prototype.names;
 /** @type {!Array<!gapi.client.people.Nickname>} */
gapi.client.people.Person.prototype.nicknames;
 /** @type {!Array<!gapi.client.people.CoverPhoto>} */
gapi.client.people.Person.prototype.coverPhotos;
 /** @type {!Array<!gapi.client.people.Photo>} */
gapi.client.people.Person.prototype.photos;
 /** @type {!Array<!gapi.client.people.Gender>} */
gapi.client.people.Person.prototype.genders;
 /** @type {!gapi.client.people.AgeRange} */
gapi.client.people.Person.prototype.ageRange;
 /** @type {!Array<!gapi.client.people.Birthday>} */
gapi.client.people.Person.prototype.birthdays;
 /** @type {!Array<!gapi.client.people.Event>} */
gapi.client.people.Person.prototype.events;
 /** @type {!Array<!gapi.client.people.Address>} */
gapi.client.people.Person.prototype.addresses;
 /** @type {!Array<!gapi.client.people.Residence>} */
gapi.client.people.Person.prototype.residences;
 /** @type {!Array<!gapi.client.people.EmailAddress>} */
gapi.client.people.Person.prototype.emailAddresses;
 /** @type {!Array<!gapi.client.people.PhoneNumber>} */
gapi.client.people.Person.prototype.phoneNumbers;
 /** @type {!Array<!gapi.client.people.ImClient>} */
gapi.client.people.Person.prototype.imClients;
 /** @type {!Array<!gapi.client.people.Tagline>} */
gapi.client.people.Person.prototype.taglines;
 /** @type {!Array<!gapi.client.people.Biography>} */
gapi.client.people.Person.prototype.biographies;
 /** @type {!Array<!gapi.client.people.Url>} */
gapi.client.people.Person.prototype.urls;
 /** @type {!Array<!gapi.client.people.Organization>} */
gapi.client.people.Person.prototype.organizations;
 /** @type {!Array<!gapi.client.people.Occupation>} */
gapi.client.people.Person.prototype.occupations;
 /** @type {!Array<!gapi.client.people.Interest>} */
gapi.client.people.Person.prototype.interests;
 /** @type {!Array<!gapi.client.people.Skill>} */
gapi.client.people.Person.prototype.skills;
 /** @type {!Array<!gapi.client.people.BraggingRights>} */
gapi.client.people.Person.prototype.BraggingRights;
 /** @type {!Array<!gapi.client.people.Relation>} */
gapi.client.people.Person.prototype.relations;
 /** @type {!Array<!gapi.client.people.RelationshipInterest>} */
gapi.client.people.Person.prototype.relationshipInterests;
 /** @type {!Array<!gapi.client.people.RelationshipStatus>} */
gapi.client.people.Person.prototype.relationshipStatuses;
 /** @type {!Array<!gapi.client.people.Membership>} */
gapi.client.people.Person.prototype.memberships;
