/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/node-validator/index.d.ts:
/** @const */
var ValidatorOptions = {};
/**
 * @record
 * @struct
 */
ValidatorOptions.IsStringOptions = function() {};
 /** @type {!RegExp} */
ValidatorOptions.IsStringOptions.prototype.regex;
 /** @type {!String} */
ValidatorOptions.IsStringOptions.prototype.message;
/**
 * @record
 * @struct
 */
ValidatorOptions.IsNumberOptions = function() {};
 /** @type {!Number} */
ValidatorOptions.IsNumberOptions.prototype.min;
 /** @type {!Number} */
ValidatorOptions.IsNumberOptions.prototype.max;
/**
 * @record
 * @struct
 */
ValidatorOptions.IsDateOptions = function() {};
 /** @type {!String} */
ValidatorOptions.IsDateOptions.prototype.format;
 /** @type {!String} */
ValidatorOptions.IsDateOptions.prototype.message;

/** @typedef {(!ValidatorOptions.IsStringOptions|!ValidatorOptions.IsNumberOptions|!ValidatorOptions.IsDateOptions)} */
ValidatorOptions.Options;
/** @const */
var Validator = {};

/** @typedef {function(?, function(!String, !String, ?): void): void} */
Validator.ValidateFn;
/**
 * @record
 * @struct
 */
Validator.Validatable = function() {};
 /** @type {function(?, function(!String, !String, ?): void): void} */
Validator.Validatable.prototype.validate;
/**
 * @extends {Validator.Validatable}
 * @record
 * @struct
 */
Validator.IsObjectValidator = function() {};
 /** @type {function(!String, !Validator.Validatable): !Validator.IsObjectValidator} */
Validator.IsObjectValidator.prototype.withRequired;
 /** @type {function(!String, !Validator.Validatable): !Validator.IsObjectValidator} */
Validator.IsObjectValidator.prototype.withOptional;
 /** @type {function(function(?, function(!String, !String, ?): void): void): !Validator.IsObjectValidator} */
Validator.IsObjectValidator.prototype.withCustom;
 /** @type {function(?, function(!String, !String, ?): void): void} */
Validator.IsObjectValidator.prototype.validate;

/**
 * @param {!Validator.Validatable} validator
 * @return {?}
 */
Validator.express = function(validator) {};

/**
 * @param {!Validator.Validatable} validator
 * @return {?}
 */
Validator.bodyValidator = function(validator) {};

/**
 * @param {!Validator.Validatable} validator
 * @return {?}
 */
Validator.expressParams = function(validator) {};

/**
 * @param {!Validator.Validatable} validator
 * @return {?}
 */
Validator.paramsValidator = function(validator) {};

/**
 * @param {!Validator.Validatable} validator
 * @return {?}
 */
Validator.expressQuery = function(validator) {};

/**
 * @param {!Validator.Validatable} validator
 * @return {?}
 */
Validator.queryValidator = function(validator) {};

/**
 * @param {!Validator.Validatable} validator
 * @param {?} value
 * @param {function(!Number, !Array<?>): void} callback
 * @return {void}
 */
Validator.run = function(validator, value, callback) {};

/**
 * @return {!Validator.IsObjectValidator}
 */
Validator.isObject = function() {};

/**
 * @param {!ValidatorOptions.IsStringOptions=} options
 * @return {!Validator.Validatable}
 */
Validator.isString = function(options) {};

/**
 * @param {!ValidatorOptions.IsStringOptions=} options
 * @return {!Validator.Validatable}
 */
Validator.isStringOrNull = function(options) {};

/**
 * @return {!Validator.Validatable}
 */
Validator.isBoolean = function() {};

/**
 * @param {!ValidatorOptions.IsNumberOptions=} options
 * @return {!Validator.Validatable}
 */
Validator.isNumber = function(options) {};

/**
 * @param {!ValidatorOptions.IsNumberOptions=} options
 * @return {!Validator.Validatable}
 */
Validator.isInteger = function(options) {};

/**
 * @param {!ValidatorOptions.IsDateOptions=} options
 * @return {!Validator.Validatable}
 */
Validator.isDate = function(options) {};

/**
 * @param {!ValidatorOptions.IsDateOptions=} options
 * @return {!Validator.Validatable}
 */
Validator.isIsoDate = function(options) {};

/**
 * @param {!ValidatorOptions.IsDateOptions=} options
 * @return {!Validator.Validatable}
 */
Validator.isIsoDateTime = function(options) {};

/**
 * @param {!Validator.Validatable=} validator
 * @param {(!ValidatorOptions.IsStringOptions|!ValidatorOptions.IsNumberOptions|!ValidatorOptions.IsDateOptions)=} options
 * @return {!Validator.Validatable}
 */
Validator.isArray = function(validator, options) {};

/**
 * @return {!Validator.IsObjectValidator}
 */
Validator.isAnyObject = function() {};
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "node-validator"
/** @const */
tsickle_declare_module.node_validator = {};

/* TODO: ExportAssignment in tsickle_declare_module.node_validator */
