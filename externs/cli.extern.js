/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/cli/index.d.ts:
/**
 * @record
 * @struct
 */
function CLI() {}
 /** @type {string} */
CLI.prototype.app;
 /** @type {string} */
CLI.prototype.version;
 /** @type {!Array<string>} */
CLI.prototype.argv;
 /** @type {number} */
CLI.prototype.argc;
 /** @type {?} */
CLI.prototype.options;
 /** @type {!Array<string>} */
CLI.prototype.args;
 /** @type {string} */
CLI.prototype.command;
 /** @type {number} */
CLI.prototype.width;
 /** @type {number} */
CLI.prototype.option_width;
 /** @type {?} */
CLI.prototype.native;
 /** @type {boolean} */
CLI.prototype.no_color;

/**
 * @param {?=} message
 * @param {...?} optionalParams
 * @return {void}
 */
CLI.prototype.output = function(message, optionalParams) {};

/**
 * @param {number} code
 * @return {void}
 */
CLI.prototype.exit = function(code) {};

/**
 * @param {...string} plugins
 * @return {?}
 */
CLI.prototype.enable = function(plugins) {};

/**
 * @param {...string} plugins
 * @return {?}
 */
CLI.prototype.disable = function(plugins) {};

/**
 * @param {(string|!Array<?>)} argv
 * @param {boolean=} keepArg0
 * @return {void}
 */
CLI.prototype.setArgv = function(argv, keepArg0) {};

/**
 * @return {string}
 */
CLI.prototype.next = function() {};

/**
 * @param {?=} opts
 * @param {(!Array<string>|?)=} commands
 * @return {?}
 */
CLI.prototype.parse = function(opts, commands) {};

/**
 * @param {string} command
 * @return {string}
 */
CLI.prototype.autocompleteCommand = function(command) {};

/**
 * @param {string} msg
 * @return {void}
 */
CLI.prototype.info = function(msg) {};

/**
 * @param {string} msg
 * @return {void}
 */
CLI.prototype.error = function(msg) {};

/**
 * @param {string} msg
 * @return {void}
 */
CLI.prototype.ok = function(msg) {};

/**
 * @param {string} msg
 * @return {void}
 */
CLI.prototype.debug = function(msg) {};

/**
 * @param {string} msg
 * @return {void}
 */
CLI.prototype.fatal = function(msg) {};

/**
 * @param {string} appName_or_packageJson
 * @param {string=} version
 * @return {?}
 */
CLI.prototype.setApp = function(appName_or_packageJson, version) {};

/**
 * @param {string=} path
 * @return {void}
 */
CLI.prototype.parsePackageJson = function(path) {};

/**
 * @param {string} usage
 * @return {?}
 */
CLI.prototype.setUsage = function(usage) {};

/**
 * @param {number=} code
 * @return {void}
 */
CLI.prototype.getUsage = function(code) {};

/**
 * @param {string} expects
 * @param {string} type
 * @return {string}
 */
CLI.prototype.getOptError = function(expects, type) {};

/**
 * @param {string} defaultVal
 * @param {?} validateFunc
 * @param {string} errMsg
 * @return {void}
 */
CLI.prototype.getValue = function(defaultVal, validateFunc, errMsg) {};

/**
 * @param {number} defaultVal
 * @return {number}
 */
CLI.prototype.getInt = function(defaultVal) {};

/**
 * @param {!Date} defaultVal
 * @return {!Date}
 */
CLI.prototype.getDate = function(defaultVal) {};

/**
 * @param {number} defaultVal
 * @return {number}
 */
CLI.prototype.getFloat = function(defaultVal) {};

/**
 * @param {string} defautltVal
 * @param {string=} identifier
 * @return {string}
 */
CLI.prototype.getUrl = function(defautltVal, identifier) {};

/**
 * @param {string} defaultVal
 * @return {string}
 */
CLI.prototype.getEmail = function(defaultVal) {};

/**
 * @param {string} defaultVal
 * @return {string}
 */
CLI.prototype.getIp = function(defaultVal) {};

/**
 * @param {string} defaultVal
 * @param {string=} identifier
 * @return {string}
 */
CLI.prototype.getPath = function(defaultVal, identifier) {};

/**
 * @template T
 * @param {!Array<?>} arr
 * @param {?} defaultVal
 * @return {?}
 */
CLI.prototype.getArrayValue = function(arr, defaultVal) {};

/**
 * @param {?|string} callback_or_encoding
 * @param {?=} callback
 * @return {void}
 */
CLI.prototype.withStdin = function(callback_or_encoding, callback) {};

/**
 * @param {?} callback
 * @return {void}
 */
CLI.prototype.withStdinLines = function(callback) {};

/**
 * @param {string|?} file_or_callback
 * @param {string|?=} encoding_or_callback
 * @param {?=} callback
 * @return {void}
 */
CLI.prototype.withInput = function(file_or_callback, encoding_or_callback, callback) {};

/**
 * @param {?} object
 * @return {string}
 */
CLI.prototype.toType = function(object) {};

/**
 * @param {string} arg
 * @param {?} callback
 * @return {void}
 */
CLI.prototype.daemon = function(arg, callback) {};

/**
 * @param {?} callback
 * @return {void}
 */
CLI.prototype.main = function(callback) {};

/**
 * @param {...?} args
 * @return {?}
 */
CLI.prototype.createServer = function(args) {};

/**
 * @param {string} cmd
 * @param {?=} callback
 * @param {?=} errback
 * @return {void}
 */
CLI.prototype.exec = function(cmd, callback, errback) {};

/**
 * @param {number} progress
 * @param {number=} decimals
 * @param {!NodeJS.WritableStream=} stream
 * @return {void}
 */
CLI.prototype.progress = function(progress, decimals, stream) {};

/**
 * @param {(string|boolean)=} prefix
 * @param {boolean=} end
 * @param {!NodeJS.WritableStream=} stream
 * @return {void}
 */
CLI.prototype.spinner = function(prefix, end, stream) {};
 /** @type {?} */
var cli;

/* TODO: ExportAssignment in  */
