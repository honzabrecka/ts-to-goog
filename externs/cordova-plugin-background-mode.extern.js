/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/cordova-plugin-background-mode/index.d.ts:
/**
 * @record
 * @struct
 */
function CordovaPluginBackgroundMode() {}

/**
 * The background mode can be enabled
 * @return {void}
 */
CordovaPluginBackgroundMode.prototype.enable = function() {};

/**
 * The background mode can be disabled
 * @return {void}
 */
CordovaPluginBackgroundMode.prototype.disable = function() {};

/**
 * Checks if the background mode is enabled or not
 * @return {boolean}
 */
CordovaPluginBackgroundMode.prototype.isEnabled = function() {};

/**
 * Checks if the background mode is activated or not
 * @return {boolean}
 */
CordovaPluginBackgroundMode.prototype.isActivated = function() {};

/**
 * Function to get notified when the background mode has been activated
 * @return {void}
 */
CordovaPluginBackgroundMode.prototype.onactivate = function() {};

/**
 * Function to get notified when the background mode has been deactivated
 * @return {void}
 */
CordovaPluginBackgroundMode.prototype.ondeactivate = function() {};

/**
 * Function to get notified when the background could not benn activated
 * @param {function(number): void} callback
 * @return {void}
 */
CordovaPluginBackgroundMode.prototype.onfailure = function(callback) {};

/**
 * Customize default title, ticker and text for the notification
 * @param {!ICordovaPluginBackgroundModeNotificationItem} item
 * @return {void}
 */
CordovaPluginBackgroundMode.prototype.setDefaults = function(item) {};

/**
 * Configure the default background notification
 * @param {!ICordovaPluginBackgroundModeNotificationItem} item
 * @return {void}
 */
CordovaPluginBackgroundMode.prototype.configure = function(item) {};
/**
 * @record
 * @struct
 */
function ICordovaPluginBackgroundModeNotificationItem() {}
 /** @type {string} */
ICordovaPluginBackgroundModeNotificationItem.prototype.title;
 /** @type {string} */
ICordovaPluginBackgroundModeNotificationItem.prototype.ticker;
 /** @type {string} */
ICordovaPluginBackgroundModeNotificationItem.prototype.text;
 /** @type {boolean} */
ICordovaPluginBackgroundModeNotificationItem.prototype.resume;
 /** @type {boolean} */
ICordovaPluginBackgroundModeNotificationItem.prototype.silent;
/**
 * @record
 * @struct
 */
function CordovaPlugins() {}
 /** @type {!CordovaPluginBackgroundMode} */
CordovaPlugins.prototype.backgroundMode;
