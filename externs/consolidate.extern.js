/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/consolidate/index.d.ts:
 /** @type {?} */
var cons;

/* TODO: ExportAssignment in  */
/**
 * @record
 * @struct
 */
function Consolidate() {}
 /** @type {!Object} */
Consolidate.prototype.requires;
 /** @type {?} */
Consolidate.prototype.atpl;
 /** @type {?} */
Consolidate.prototype.dot;
 /** @type {?} */
Consolidate.prototype.dust;
 /** @type {?} */
Consolidate.prototype.eco;
 /** @type {?} */
Consolidate.prototype.ejs;
 /** @type {?} */
Consolidate.prototype.ect;
 /** @type {?} */
Consolidate.prototype.haml;
 /** @type {?} */
Consolidate.prototype.hamlet;
 /** @type {?} */
Consolidate.prototype.handlebars;
 /** @type {?} */
Consolidate.prototype.hogan;
 /** @type {?} */
Consolidate.prototype.htmling;
 /** @type {?} */
Consolidate.prototype.jade;
 /** @type {?} */
Consolidate.prototype.jazz;
 /** @type {?} */
Consolidate.prototype.jqtpl;
 /** @type {?} */
Consolidate.prototype.just;
 /** @type {?} */
Consolidate.prototype.liquid;
 /** @type {?} */
Consolidate.prototype.liquor;
 /** @type {?} */
Consolidate.prototype.lodash;
 /** @type {?} */
Consolidate.prototype.mote;
 /** @type {?} */
Consolidate.prototype.mustache;
 /** @type {?} */
Consolidate.prototype.nunjucks;
 /** @type {?} */
Consolidate.prototype.pug;
 /** @type {?} */
Consolidate.prototype.qejs;
 /** @type {?} */
Consolidate.prototype.ractive;
 /** @type {?} */
Consolidate.prototype.react;
 /** @type {?} */
Consolidate.prototype.swig;
 /** @type {?} */
Consolidate.prototype.templayed;
 /** @type {?} */
Consolidate.prototype.toffee;
 /** @type {?} */
Consolidate.prototype.underscore;
 /** @type {?} */
Consolidate.prototype.walrus;
 /** @type {?} */
Consolidate.prototype.whiskers;

/**
 * Clear the cache.
 * 
 * \@api public
 * @return {void}
 */
Consolidate.prototype.clearCache = function() {};
/**
 * @record
 * @struct
 */
function RendererInterface() {}

/* TODO: CallSignature:  */

/* TODO: CallSignature:  */

/* TODO: CallSignature:  */

/**
 * @param {string} path
 * @param {?=} fn_or_options
 * @param {?=} fn
 * @return {?|!Promise<string>}
 */
RendererInterface.prototype.render = function(path, fn_or_options, fn) {};
