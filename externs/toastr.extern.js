/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/toastr/index.d.ts:
/**
 * @record
 * @struct
 */
function ToastrOptions() {}
 /** @type {string} */
ToastrOptions.prototype.showEasing;
 /** @type {string} */
ToastrOptions.prototype.hideEasing;
 /** @type {string} */
ToastrOptions.prototype.showMethod;
 /** @type {string} */
ToastrOptions.prototype.hideMethod;
 /** @type {boolean} */
ToastrOptions.prototype.closeButton;
 /** @type {string} */
ToastrOptions.prototype.closeClass;
 /** @type {number} */
ToastrOptions.prototype.closeDuration;
 /** @type {string} */
ToastrOptions.prototype.closeEasing;
 /** @type {string} */
ToastrOptions.prototype.closeMethod;
 /** @type {boolean} */
ToastrOptions.prototype.closeOnHover;
 /** @type {string} */
ToastrOptions.prototype.closeHtml;
 /** @type {function(!JQueryMouseEventObject): void} */
ToastrOptions.prototype.onCloseClick;
 /** @type {boolean} */
ToastrOptions.prototype.tapToDismiss;
 /** @type {string} */
ToastrOptions.prototype.toastClass;
 /** @type {string} */
ToastrOptions.prototype.containerId;
 /** @type {boolean} */
ToastrOptions.prototype.debug;
 /** @type {number} */
ToastrOptions.prototype.showDuration;
 /** @type {function(): void} */
ToastrOptions.prototype.onShown;
 /** @type {number} */
ToastrOptions.prototype.hideDuration;
 /** @type {function(): void} */
ToastrOptions.prototype.onHidden;
 /** @type {number} */
ToastrOptions.prototype.extendedTimeOut;
 /** @type {{error: string, info: string, success: string, warning: string}} */
ToastrOptions.prototype.iconClasses;
 /** @type {string} */
ToastrOptions.prototype.iconClass;
 /** @type {string} */
ToastrOptions.prototype.positionClass;
 /** @type {number} */
ToastrOptions.prototype.timeOut;
 /** @type {string} */
ToastrOptions.prototype.titleClass;
 /** @type {string} */
ToastrOptions.prototype.messageClass;
 /** @type {boolean} */
ToastrOptions.prototype.newestOnTop;
 /** @type {string} */
ToastrOptions.prototype.target;
 /** @type {boolean} */
ToastrOptions.prototype.preventDuplicates;
 /** @type {boolean} */
ToastrOptions.prototype.progressBar;
 /** @type {string} */
ToastrOptions.prototype.progressClass;
 /** @type {function(!JQueryMouseEventObject): void} */
ToastrOptions.prototype.onclick;
 /** @type {boolean} */
ToastrOptions.prototype.escapeHtml;
 /** @type {boolean} */
ToastrOptions.prototype.rtl;
/**
 * @record
 * @struct
 */
function ToastrDisplayMethod() {}

/* TODO: CallSignature:  */

/* TODO: CallSignature:  */

/* TODO: CallSignature:  */

/** @typedef {string} */
var ToastrType;
/**
 * @record
 * @struct
 */
function ToastMap() {}
 /** @type {string} */
ToastMap.prototype.type;
 /** @type {string} */
ToastMap.prototype.message;
 /** @type {string} */
ToastMap.prototype.iconClass;
 /** @type {string} */
ToastMap.prototype.title;
 /** @type {!ToastrOptions} */
ToastMap.prototype.optionsOverride;
/**
 * @record
 * @struct
 */
function ToastrResponse() {}
 /** @type {number} */
ToastrResponse.prototype.toastId;
 /** @type {string} */
ToastrResponse.prototype.state;
 /** @type {!Date} */
ToastrResponse.prototype.startTime;
 /** @type {!Date} */
ToastrResponse.prototype.endTime;
 /** @type {!ToastrOptions} */
ToastrResponse.prototype.options;
 /** @type {!ToastMap} */
ToastrResponse.prototype.map;
/**
 * @record
 * @struct
 */
function Toastr() {}
 /** @type {?} */
Toastr.prototype.clear;
 /** @type {function(): void} */
Toastr.prototype.remove;
 /** @type {!ToastrDisplayMethod} */
Toastr.prototype.error;
 /** @type {!ToastrDisplayMethod} */
Toastr.prototype.info;
 /** @type {!ToastrOptions} */
Toastr.prototype.options;
 /** @type {!ToastrDisplayMethod} */
Toastr.prototype.success;
 /** @type {!ToastrDisplayMethod} */
Toastr.prototype.warning;
 /** @type {string} */
Toastr.prototype.version;
 /** @type {?} */
Toastr.prototype.getContainer;
 /** @type {function(function(!ToastrResponse): ?): void} */
Toastr.prototype.subscribe;

/* TODO: IndexSignature:  */
 /** @type {!Toastr} */
var toastr;
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "toastr"
/** @const */
tsickle_declare_module.toastr = {};

/* TODO: ExportAssignment in tsickle_declare_module.toastr */
