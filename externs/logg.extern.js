/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/logg/index.d.ts:
/**
 * @record
 * @struct
 */
function Logger() {}
 /** @type {function(number): void} */
Logger.prototype.setLogLevel;
 /** @type {function(): number} */
Logger.prototype.getLogLevel;
 /** @type {function(!Logger): void} */
Logger.prototype.setParent;
 /** @type {function(): !Logger} */
Logger.prototype.getParent;
 /** @type {function(function(string): void): void} */
Logger.prototype.registerWatcher;
 /** @type {function(): !Array<!Function>} */
Logger.prototype.getWatchers;
 /** @type {function(number, !Array<?>): void} */
Logger.prototype.log;
 /** @type {function(!Array<?>): void} */
Logger.prototype.fine;
 /** @type {function(!Array<?>): void} */
Logger.prototype.info;
 /** @type {function(!Array<?>): void} */
Logger.prototype.warn;
 /** @type {function(!Array<?>): void} */
Logger.prototype.error;
 /** @type {function(number): boolean} */
Logger.prototype.isLoggable;
/**
 * @record
 * @struct
 */
function loggingLevels() {}
 /** @type {number} */
loggingLevels.prototype.SEVERE;
 /** @type {number} */
loggingLevels.prototype.WARN;
 /** @type {number} */
loggingLevels.prototype.INFO;
 /** @type {number} */
loggingLevels.prototype.FINE;
 /** @type {number} */
loggingLevels.prototype.FINER;
 /** @type {number} */
loggingLevels.prototype.FINEST;
 /** @type {function(number): string} */
loggingLevels.prototype.toString;
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "logg"
/** @const */
tsickle_declare_module.logg = {};

/**
 * @param {string} name
 * @return {!Logger}
 */
tsickle_declare_module.logg.getLogger = function(name) {};

/**
 * @param {string} name
 * @return {!Logger}
 */
tsickle_declare_module.logg.getTransientLogger = function(name) {};
 /** @type {!loggingLevels} */
tsickle_declare_module.logg.Level;
 /** @type {!Logger} */
tsickle_declare_module.logg.rootLogger;
 /** @type {function(function(string): void): void} */
tsickle_declare_module.logg.registerWatcher;
