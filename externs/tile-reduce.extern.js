/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from d/tile-reduce/index.d.ts:
 /** @type {?} */
NodeJS.Global.prototype.mapOptions;
/**
 * @record
 * @struct
 */
function Events() {}

/**
 * Start Event
 * 
 * \@example 
 * tilereduce({...})
 * .on('start', () => {
 *     console.log('starting')
 * })
 * Map Event
 * 
 * \@example 
 * tilereduce({...})
 * .on('map', (tile, workerId) => {
 *     console.log(`about to process [${ tile }] on worker ${ workerId }`)
 * })
 * Reduce Event
 * 
 * \@example 
 * const count = 0
 * tilereduce({...})
 * .on('reduce', (result, tile) => {
 *     console.log(`got a count of ${ result } from ${ tile }`
 *     count ++
 * })
 * End Event
 * 
 * \@example 
 * let count = 0
 * tilereduce({...})
 * .on('end', () => {
 *     console.log(`Total count was: ${ count }`)
 * })
 * @param {string} type
 * @param {function(): void|function(!Array<?>, number): void|function(?, !Array<?>): void|function(?): void} callback
 * @return {!Events}
 */
Events.prototype.on = function(type, callback) {};
/**
 * @record
 * @struct
 */
function Options() {}
 /** @type {string} */
Options.prototype.map;
 /** @type {number} */
Options.prototype.zoom;
 /** @type {!Array<!TileReduce.Source>} */
Options.prototype.sources;
 /** @type {!Array<?>} */
Options.prototype.bbox;
 /** @type {?} */
Options.prototype.geojson;
 /** @type {boolean} */
Options.prototype.log;
 /** @type {?} */
Options.prototype.mapOptions;
 /** @type {number} */
Options.prototype.maxWorkers;
 /** @type {?} */
Options.prototype.output;
 /** @type {!Array<!Array<?>>} */
Options.prototype.tiles;
 /** @type {?} */
Options.prototype.tileStream;
 /** @type {string} */
Options.prototype.sourceCover;

/**
 * Tile Reduce
 * 
 * \@example 
 * tilereduce({...})
 * .on('start', () => {
 *     console.log('starting')
 * })
 * @param {!Options} options
 * @return {!Events}
 */
function TileReduce(options) {}

/** @typedef {!Array<?>} */
TileReduce.BBox;

/** @typedef {!Array<?>} */
TileReduce.Tile;

/** @typedef {string} */
TileReduce.Types;
/**
 * @record
 * @struct
 */
TileReduce.Source = function() {};
 /** @type {string} */
TileReduce.Source.prototype.name;
 /** @type {string} */
TileReduce.Source.prototype.mbtiles;
 /** @type {string} */
TileReduce.Source.prototype.url;
 /** @type {!Array<string>} */
TileReduce.Source.prototype.layers;
 /** @type {number} */
TileReduce.Source.prototype.maxrate;
 /** @type {boolean} */
TileReduce.Source.prototype.raw;
/** @const */
var tsickle_declare_module = {};
// Derived from: declare module "tile-reduce"
/** @const */
tsickle_declare_module.tile_reduce = {};

/* TODO: ExportAssignment in tsickle_declare_module.tile_reduce */
